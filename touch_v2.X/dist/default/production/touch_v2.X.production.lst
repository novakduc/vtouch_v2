

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 20:27:57 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=4,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=4,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=4,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=4,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=4,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=4,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   173                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   174                           	psect	text147,global,reloc=4,class=CODE,delta=1
   175                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   176                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   177  0000                     
   178                           ; Version 2.10
   179                           ; Generated 31/07/2019 GMT
   180                           ; 
   181                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   182                           ; All rights reserved.
   183                           ; 
   184                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   185                           ; 
   186                           ; Redistribution and use in source and binary forms, with or without modification, are
   187                           ; permitted provided that the following conditions are met:
   188                           ; 
   189                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   190                           ;        conditions and the following disclaimer.
   191                           ; 
   192                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   193                           ;        of conditions and the following disclaimer in the documentation and/or other
   194                           ;        materials provided with the distribution.
   195                           ; 
   196                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   197                           ;        software without specific prior written permission.
   198                           ; 
   199                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   200                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   201                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   202                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   203                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   204                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   205                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   206                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   207                           ; 
   208                           ; 
   209                           ; Code-generator required, PIC18F57K42 Definitions
   210                           ; 
   211                           ; SFR Addresses
   212  0000                     
   213 ;;_mode	offset	0
   214 ;;_channel	offset=-1 (param)
   215 ;;_s	offset=-2 (param)
   216 ;;_cmd	offset=-1 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_data	offset=-1 (param)
   219 ;;__this	offset=-2 (param)
   220 ;;_i	offset=-1 (param)
   221 ;;_cmd	offset=-1 (param)
   222 ;;_i	offset	0
   223 ;;_chan	offset=-1 (param)
   224 ;;_to_what	offset=-2 (param)
   225 ;;_u	offset	0
   226 ;;_s	offset=-2 (param)
   227 ;;_index	offset=-1 (param)
   228 ;;_arg	offset	0
   229 ;;_exp	offset	4
   230 ;;_sign	offset=-1 (param)
   231 ;;_val	offset=-5 (param)
   232 ;;_estatus	offset	0
   233 ;;_flipper	offset=-1 (param)
   234 ;;_f	offset	0
   235 ;;_ap	offset	6
   236 ;;_s	offset=-3 (param)
   237 ;;_fmt	offset=-5 (param)
   238 ;;_line	offset=-1 (param)
   239 ;;_vterm	offset=-2 (param)
   240 ;;_numMilliseconds	offset=-2 (param)
   241 ;;_vterm	offset=-1 (param)
   242 ;;_r	offset=-1 (param)
   243 ;;_c	offset=-2 (param)
   244 ;;_strPtr	offset=-4 (param)
   245 ;;_strPtr	offset=-1 (param)
   246 ;;_delay	offset=-4 (param)
   247 ;;_strPtr	offset=-2 (param)
   248 ;;__this	offset=-2 (param)
   249 ;;_clearBuffer	offset=-3 (param)
   250 ;;_s	offset	0
   251 ;;_k	offset	2
   252 ;;_dest	offset=-2 (param)
   253 ;;_c	offset=-4 (param)
   254 ;;_n	offset=-6 (param)
   255 ;;_ap	offset	0
   256 ;;_fmt	offset=-3 (param)
   257 ;;_cfmt	offset	0
   258 ;;_fp	offset=-2 (param)
   259 ;;_fmt	offset=-4 (param)
   260 ;;_ap	offset=-6 (param)
   261 ;;_vfpfcnvrt$4439	offset	0
   262 ;;_vfpfcnvrt$4445	offset	2
   263 ;;_vfpfcnvrt$4438	offset	4
   264 ;;_llu	offset	6
   265 ;;_ll	offset	14
   266 ;;_f	offset	22
   267 ;;_ct	offset	26
   268 ;;_cp	offset	29
   269 ;;_c	offset	31
   270 ;;_fp	offset=-2 (param)
   271 ;;_fmt	offset=-4 (param)
   272 ;;_ap	offset=-6 (param)
   273 ;;_xtoa$4424	offset	0
   274 ;;_xtoa$4423	offset	2
   275 ;;_n	offset	4
   276 ;;_c	offset	12
   277 ;;_i	offset	14
   278 ;;_w	offset	16
   279 ;;_p	offset	18
   280 ;;_fp	offset=-2 (param)
   281 ;;_d	offset=-10 (param)
   282 ;;_x	offset=-11 (param)
   283 ;;_toupper$5084	offset	0
   284 ;;_c	offset=-2 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_c	offset=-2 (param)
   287 ;;_r	offset	0
   288 ;;_l	offset	2
   289 ;;__l	offset=-2 (param)
   290 ;;__r	offset=-4 (param)
   291 ;;_n	offset=-6 (param)
   292 ;;_nuls	offset	0
   293 ;;_l	offset	7
   294 ;;_p	offset	9
   295 ;;_cp	offset	11
   296 ;;_w	offset	13
   297 ;;_i	offset	15
   298 ;;_fp	offset=-2 (param)
   299 ;;_s	offset=-4 (param)
   300 ;;_efgtoa$4403	offset	0
   301 ;;_efgtoa$4402	offset	2
   302 ;;_efgtoa$4401	offset	4
   303 ;;_efgtoa$4397	offset	6
   304 ;;_efgtoa$4393	offset	8
   305 ;;_efgtoa$4392	offset	10
   306 ;;_u	offset	12
   307 ;;_g	offset	16
   308 ;;_l	offset	20
   309 ;;_h	offset	24
   310 ;;_ou	offset	28
   311 ;;_n	offset	32
   312 ;;_e	offset	34
   313 ;;_i	offset	36
   314 ;;_w	offset	38
   315 ;;_p	offset	40
   316 ;;_sign	offset	42
   317 ;;_d	offset	44
   318 ;;_ne	offset	46
   319 ;;_m	offset	48
   320 ;;_pp	offset	50
   321 ;;_t	offset	52
   322 ;;_mode	offset	54
   323 ;;_nmode	offset	55
   324 ;;_fp	offset=-2 (param)
   325 ;;_f	offset=-6 (param)
   326 ;;_c	offset=-7 (param)
   327 ;;_tolower$5069	offset	0
   328 ;;_c	offset=-2 (param)
   329 ;;_c	offset=-2 (param)
   330 ;;_d	offset	0
   331 ;;_s	offset	2
   332 ;;_dest	offset=-2 (param)
   333 ;;_src	offset=-4 (param)
   334 ;;_u	offset	0
   335 ;;_m	offset	4
   336 ;;_e	offset	8
   337 ;;_x	offset=-4 (param)
   338 ;;_u	offset	0
   339 ;;_e	offset	4
   340 ;;_x	offset=-4 (param)
   341 ;;_exp1	offset	0
   342 ;;_sign1	offset	1
   343 ;;_f1	offset=-4 (param)
   344 ;;_f1	offset=-4 (param)
   345 ;;_ff1	offset=-4 (param)
   346 ;;_ff2	offset=-8 (param)
   347 ;;_ff1	offset=-4 (param)
   348 ;;_ff2	offset=-8 (param)
   349 ;;_grs	offset	0
   350 ;;_rem	offset	4
   351 ;;_new_exp	offset	8
   352 ;;_aexp	offset	10
   353 ;;_bexp	offset	11
   354 ;;_sign	offset	12
   355 ;;_b	offset=-4 (param)
   356 ;;_a	offset=-8 (param)
   357 ;;_sign	offset	0
   358 ;;_counter	offset	1
   359 ;;_dividend	offset=-2 (param)
   360 ;;_divisor	offset=-4 (param)
   361 ;;_quotient	offset	0
   362 ;;_sign	offset	2
   363 ;;_counter	offset	3
   364 ;;_dividend	offset=-2 (param)
   365 ;;_divisor	offset=-4 (param)
   366 ;;_dtoa$4369	offset	0
   367 ;;_n	offset	2
   368 ;;_i	offset	10
   369 ;;_s	offset	12
   370 ;;_w	offset	14
   371 ;;_p	offset	16
   372 ;;_fp	offset=-2 (param)
   373 ;;_d	offset=-10 (param)
   374 ;;_a	offset=-2 (param)
   375 ;;_sign	offset	0
   376 ;;_counter	offset	1
   377 ;;_dividend	offset=-8 (param)
   378 ;;_divisor	offset=-16 (param)
   379 ;;_quotient	offset	0
   380 ;;_sign	offset	8
   381 ;;_counter	offset	9
   382 ;;_dividend	offset=-8 (param)
   383 ;;_divisor	offset=-16 (param)
   384 ;;_w	offset	0
   385 ;;_fp	offset=-2 (param)
   386 ;;_c	offset=-3 (param)
   387 ;;_w	offset	0
   388 ;;_i	offset	2
   389 ;;_fp	offset=-2 (param)
   390 ;;_buf	offset=-4 (param)
   391 ;;_p	offset=-6 (param)
   392 ;;_a	offset	0
   393 ;;_s	offset=-2 (param)
   394 ;;_i	offset	0
   395 ;;_c	offset	2
   396 ;;_s	offset=-2 (param)
   397 ;;_fp	offset=-4 (param)
   398 ;;_c	offset=-2 (param)
   399 ;;_fp	offset=-4 (param)
   400 ;;_c	offset=-1 (param)
   401 ;;__this	offset=-2 (param)
   402 ;;_c	offset=-3 (param)
   403 ;;_atoi$4922	offset	0
   404 ;;_atoi$4920	offset	2
   405 ;;_atoi$4921	offset	4
   406 ;;_n	offset	5
   407 ;;_neg	offset	7
   408 ;;_s	offset=-2 (param)
   409 ;;_isspace$4960	offset	0
   410 ;;_c	offset=-2 (param)
   411 ;;_c	offset=-2 (param)
   412 ;;_vterm	offset=-1 (param)
   413 ;;_new_response_info	offset=-1 (param)
   414 ;;_new_response_info	offset=-1 (param)
   415 ;;_level	offset=-2 (param)
   416 ;;_dutyValue	offset=-2 (param)
   417 ;;_timer	offset=-1 (param)
   418 ;;_timer	offset=-1 (param)
   419 ;;_count	offset=-3 (param)
   420 ;;_lp_speed	offset	0
   421 ;;_new	offset=-4 (param)
   422 ;;_bn	offset=-5 (param)
   423 ;;_slow	offset=-6 (param)
   424 ;;_b	offset=-4 (param)
   425 ;;_a	offset=-8 (param)
   426 ;;_grs	offset	0
   427 ;;_bexp	offset	1
   428 ;;_aexp	offset	2
   429 ;;_signs	offset	3
   430 ;;_b	offset=-4 (param)
   431 ;;_a	offset=-8 (param)
   432 ;;_prod	offset	0
   433 ;;_grs	offset	4
   434 ;;_temp	offset	8
   435 ;;_bexp	offset	10
   436 ;;_aexp	offset	11
   437 ;;_sign	offset	12
   438 ;;_b	offset=-4 (param)
   439 ;;_a	offset=-8 (param)
   440 ;;_InterruptHandler	offset=-3 (param)
   441 ;;_InterruptHandler	offset=-3 (param)
   442 ;;_InterruptHandler	offset=-3 (param)
   443 ;;_InterruptHandler	offset=-3 (param)
   444 ;;_InterruptHandler	offset=-3 (param)
   445 ;;_InterruptHandler	offset=-3 (param)
   446 ;;_state	offset	0
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_i	offset	0
   452 ;;_sw_value	offset	1
   453 ;;_timerVal	offset=-2 (param)
   454 ;;_channel	offset=-1 (param)
   455 ;;_i	offset	0
   456                           
   457                           	psect	idataBANK0
   458  0180FE                     __pidataBANK0:
   459                           	opt callstack 0
   460                           
   461                           ;initializer for _R
   462  0180FE  0000               	dw	0
   463  018100  0000               	dw	0
   464  018102  0000               	dw	0
   465  018104  0000               	dw	0
   466  018106  0000               	dw	0
   467  018108  0000               	dw	0
   468  01810A  0000               	dw	0
   469  01810C  0000               	dw	0
   470  01810E  0000               	dw	0
   471  018110  0000               	dw	0
   472  018112  0000               	dw	0
   473  018114  0000               	dw	0
   474  018116  0000               	dw	0
   475  018118  0000               	dw	0
   476  01811A  0000               	dw	0
   477  01811C  0000               	dw	0
   478  01811E  0F67               	dw	3943
   479  018120  0F8F               	dw	3983
   480  018122  00                 	db	0
   481  018123  0000               	dw	0
   482  018125  00                 	db	0
   483                           
   484                           ;initializer for stoa@F1166
   485  018126  28                 	db	40
   486  018127  6E                 	db	110
   487  018128  75                 	db	117
   488  018129  6C                 	db	108
   489  01812A  6C                 	db	108
   490  01812B  29                 	db	41
   491  01812C  00                 	db	0
   492                           
   493                           	psect	idataBANK1
   494  01876E                     __pidataBANK1:
   495                           	opt callstack 0
   496                           
   497                           ;initializer for _port_data
   498  01876E  FF                 	db	255
   499  01876F  00                 	db	0
   500  018770  FF                 	db	255
   501  018771  00                 	db	0
   502  018772  FF                 	db	255
   503  018773  00                 	db	0
   504  018774  FF                 	db	255
   505  018775  00                 	db	0
   506  018776  FF                 	db	255
   507  018777  00                 	db	0
   508  018778  FF                 	db	255
   509  018779  00                 	db	0
   510  01877A  FF                 	db	255
   511  01877B  00                 	db	0
   512  01877C  FF                 	db	255
   513  01877D  00                 	db	0
   514                           
   515                           	psect	idataBANK2
   516  016FA2                     __pidataBANK2:
   517                           	opt callstack 0
   518                           
   519                           ;initializer for _V
   520  016FA2  00                 	db	0
   521  016FA3  00                 	db	0
   522  016FA4  00                 	db	0
   523  016FA5  00                 	db	0
   524  016FA6  00                 	db	0
   525  016FA7  00                 	db	0
   526  016FA8  00                 	db	0
   527  016FA9  00                 	db	0
   528  016FAA  00                 	db	0
   529  016FAB  00                 	db	0
   530  016FAC  00                 	db	0
   531  016FAD  00                 	db	0
   532  016FAE  00                 	db	0
   533  016FAF  00                 	db	0
   534  016FB0  00                 	db	0
   535  016FB1  00                 	db	0
   536  016FB2  00                 	db	0
   537  016FB3  00                 	db	0
   538  016FB4  00                 	db	0
   539  016FB5  00                 	db	0
   540  016FB6  00                 	db	0
   541  016FB7  00                 	db	0
   542  016FB8  00                 	db	0
   543  016FB9  00                 	db	0
   544  016FBA  00                 	db	0
   545  016FBB  00                 	db	0
   546  016FBC  00                 	db	0
   547  016FBD  00                 	db	0
   548  016FBE  00                 	db	0
   549  016FBF  00                 	db	0
   550  016FC0  00                 	db	0
   551  016FC1  00                 	db	0
   552  016FC2  00                 	db	0
   553  016FC3  00                 	db	0
   554  016FC4  00                 	db	0
   555  016FC5  00                 	db	0
   556  016FC6  00                 	db	0
   557  016FC7  00                 	db	0
   558  016FC8  00                 	db	0
   559  016FC9  00                 	db	0
   560  016FCA  00                 	db	0
   561  016FCB  00                 	db	0
   562  016FCC  00                 	db	0
   563  016FCD  00                 	db	0
   564  016FCE  00                 	db	0
   565  016FCF  00                 	db	0
   566  016FD0  00                 	db	0
   567  016FD1  00                 	db	0
   568  016FD2  00                 	db	0
   569  016FD3  00                 	db	0
   570  016FD4  00                 	db	0
   571  016FD5  00                 	db	0
   572  016FD6  00                 	db	0
   573  016FD7  00                 	db	0
   574  016FD8  00                 	db	0
   575  016FD9  00                 	db	0
   576  016FDA  00                 	db	0
   577  016FDB  00                 	db	0
   578  016FDC  00                 	db	0
   579  016FDD  00                 	db	0
   580  016FDE  00                 	db	0
   581  016FDF  00                 	db	0
   582  016FE0  00                 	db	0
   583  016FE1  00                 	db	0
   584  016FE2  00                 	db	0
   585  016FE3  00                 	db	0
   586  016FE4  00                 	db	0
   587  016FE5  00                 	db	0
   588  016FE6  00                 	db	0
   589  016FE7  00                 	db	0
   590  016FE8  00                 	db	0
   591  016FE9  00                 	db	0
   592  016FEA  00                 	db	0
   593  016FEB  00                 	db	0
   594  016FEC  00                 	db	0
   595  016FED  00                 	db	0
   596  016FEE  00                 	db	0
   597  016FEF  00                 	db	0
   598  016FF0  00                 	db	0
   599  016FF1  00                 	db	0
   600  016FF2  00                 	db	0
   601  016FF3  00                 	db	0
   602  016FF4  00                 	db	0
   603  016FF5  00                 	db	0
   604  016FF6  00                 	db	0
   605  016FF7  00                 	db	0
   606  016FF8  00                 	db	0
   607  016FF9  00                 	db	0
   608  016FFA  00                 	db	0
   609  016FFB  00                 	db	0
   610  016FFC  00                 	db	0
   611  016FFD  00                 	db	0
   612  016FFE  00                 	db	0
   613  016FFF  00                 	db	0
   614  017000  00                 	db	0
   615  017001  00                 	db	0
   616  017002  00                 	db	0
   617  017003  00                 	db	0
   618  017004  00                 	db	0
   619  017005  00                 	db	0
   620  017006  00                 	db	0
   621  017007  00                 	db	0
   622  017008  00                 	db	0
   623  017009  00                 	db	0
   624  01700A  00                 	db	0
   625  01700B  00                 	db	0
   626  01700C  00                 	db	0
   627  01700D  00                 	db	0
   628  01700E  00                 	db	0
   629  01700F  00                 	db	0
   630  017010  00                 	db	0
   631  017011  00                 	db	0
   632  017012  00                 	db	0
   633  017013  00                 	db	0
   634  017014  00                 	db	0
   635  017015  00                 	db	0
   636  017016  00                 	db	0
   637  017017  00                 	db	0
   638  017018  00                 	db	0
   639  017019  00                 	db	0
   640  01701A  00                 	db	0
   641  01701B  00                 	db	0
   642  01701C  00                 	db	0
   643  01701D  00                 	db	0
   644  01701E  00                 	db	0
   645  01701F  00                 	db	0
   646  017020  00                 	db	0
   647  017021  00                 	db	0
   648  017022  00                 	db	0
   649  017023  0000               	dw	0
   650  017025  0000               	dw	0
   651  017027  0000               	dw	0
   652  017029  0000               	dw	0
   653  01702B  00                 	db	0
   654  01702C  00                 	db	0
   655  01702D  00                 	db	0
   656  01702E  00                 	db	0
   657  01702F  00                 	db	0
   658  017030  00                 	db	0
   659  017031  0000               	dw	0
   660  017033  0000               	dw	0
   661  017035  0000               	dw	0
   662  017037  0000               	dw	0
   663  017039  0000               	dw	0
   664  01703B  0000               	dw	0
   665  01703D  00                 	db	0
   666  01703E  00                 	db	0
   667  01703F  00                 	db	0
   668  017040  00                 	db	0
   669  017041  00                 	db	0
   670  017042  00                 	db	0
   671  017043  00                 	db	0
   672  017044  00                 	db	0
   673  017045  00                 	db	0
   674  017046  00                 	db	0
   675  017047  0000               	dw	0
   676  017049  0000               	dw	0
   677  01704B  2D                 	db	45
   678  01704C  00                 	db	0
   679  01704D  0000               	dw	0
   680  01704F  0000               	dw	0
   681  017051  0000               	dw	0
   682  017053  0000               	dw	0
   683  017055  0000               	dw	0
   684  017057  0000               	dw	0
   685  017059  0000               	dw	0
   686  01705B  0000               	dw	0
   687                           
   688                           	psect	mediumconst
   689  00FE0C                     __pmediumconst:
   690                           	opt callstack 0
   691  00FE0C  00                 	db	0
   692  00FE0D                     _T:
   693                           	opt callstack 0
   694  00FE0D  63                 	db	99
   695  00FE0E  6F                 	db	111
   696  00FE0F  6D                 	db	109
   697  00FE10  6D                 	db	109
   698  00FE11  61                 	db	97
   699  00FE12  6E                 	db	110
   700  00FE13  64                 	db	100
   701  00FE14  73                 	db	115
   702  00FE15  20                 	db	32
   703  00FE16  31                 	db	49
   704  00FE17  00                 	db	0
   705  00FE18  00                 	db	0
   706  00FE19  00                 	db	0
   707  00FE1A  00                 	db	0
   708  00FE1B  00                 	db	0
   709  00FE1C  00                 	db	0
   710  00FE1D  00                 	db	0
   711  00FE1E  00                 	db	0
   712  00FE1F  64                 	db	100
   713  00FE20  69                 	db	105
   714  00FE21  73                 	db	115
   715  00FE22  70                 	db	112
   716  00FE23  6C                 	db	108
   717  00FE24  61                 	db	97
   718  00FE25  79                 	db	121
   719  00FE26  73                 	db	115
   720  00FE27  20                 	db	32
   721  00FE28  31                 	db	49
   722  00FE29  00                 	db	0
   723  00FE2A  00                 	db	0
   724  00FE2B  00                 	db	0
   725  00FE2C  00                 	db	0
   726  00FE2D  00                 	db	0
   727  00FE2E  00                 	db	0
   728  00FE2F  00                 	db	0
   729  00FE30  00                 	db	0
   730  00FE31  63                 	db	99
   731  00FE32  6F                 	db	111
   732  00FE33  6D                 	db	109
   733  00FE34  6D                 	db	109
   734  00FE35  61                 	db	97
   735  00FE36  6E                 	db	110
   736  00FE37  64                 	db	100
   737  00FE38  73                 	db	115
   738  00FE39  20                 	db	32
   739  00FE3A  32                 	db	50
   740  00FE3B  00                 	db	0
   741  00FE3C  00                 	db	0
   742  00FE3D  00                 	db	0
   743  00FE3E  00                 	db	0
   744  00FE3F  00                 	db	0
   745  00FE40  00                 	db	0
   746  00FE41  00                 	db	0
   747  00FE42  00                 	db	0
   748  00FE43  64                 	db	100
   749  00FE44  69                 	db	105
   750  00FE45  73                 	db	115
   751  00FE46  70                 	db	112
   752  00FE47  6C                 	db	108
   753  00FE48  61                 	db	97
   754  00FE49  79                 	db	121
   755  00FE4A  73                 	db	115
   756  00FE4B  20                 	db	32
   757  00FE4C  32                 	db	50
   758  00FE4D  00                 	db	0
   759  00FE4E  00                 	db	0
   760  00FE4F  00                 	db	0
   761  00FE50  00                 	db	0
   762  00FE51  00                 	db	0
   763  00FE52  00                 	db	0
   764  00FE53  00                 	db	0
   765  00FE54  00                 	db	0
   766  00FE55  63                 	db	99
   767  00FE56  6F                 	db	111
   768  00FE57  6D                 	db	109
   769  00FE58  6D                 	db	109
   770  00FE59  61                 	db	97
   771  00FE5A  6E                 	db	110
   772  00FE5B  64                 	db	100
   773  00FE5C  73                 	db	115
   774  00FE5D  20                 	db	32
   775  00FE5E  33                 	db	51
   776  00FE5F  00                 	db	0
   777  00FE60  00                 	db	0
   778  00FE61  00                 	db	0
   779  00FE62  00                 	db	0
   780  00FE63  00                 	db	0
   781  00FE64  00                 	db	0
   782  00FE65  00                 	db	0
   783  00FE66  00                 	db	0
   784  00FE67  64                 	db	100
   785  00FE68  69                 	db	105
   786  00FE69  73                 	db	115
   787  00FE6A  70                 	db	112
   788  00FE6B  6C                 	db	108
   789  00FE6C  61                 	db	97
   790  00FE6D  79                 	db	121
   791  00FE6E  73                 	db	115
   792  00FE6F  20                 	db	32
   793  00FE70  33                 	db	51
   794  00FE71  00                 	db	0
   795  00FE72  00                 	db	0
   796  00FE73  00                 	db	0
   797  00FE74  00                 	db	0
   798  00FE75  00                 	db	0
   799  00FE76  00                 	db	0
   800  00FE77  00                 	db	0
   801  00FE78  00                 	db	0
   802  00FE79  63                 	db	99
   803  00FE7A  6F                 	db	111
   804  00FE7B  6D                 	db	109
   805  00FE7C  6D                 	db	109
   806  00FE7D  61                 	db	97
   807  00FE7E  6E                 	db	110
   808  00FE7F  64                 	db	100
   809  00FE80  73                 	db	115
   810  00FE81  20                 	db	32
   811  00FE82  34                 	db	52
   812  00FE83  00                 	db	0
   813  00FE84  00                 	db	0
   814  00FE85  00                 	db	0
   815  00FE86  00                 	db	0
   816  00FE87  00                 	db	0
   817  00FE88  00                 	db	0
   818  00FE89  00                 	db	0
   819  00FE8A  00                 	db	0
   820  00FE8B  64                 	db	100
   821  00FE8C  69                 	db	105
   822  00FE8D  73                 	db	115
   823  00FE8E  70                 	db	112
   824  00FE8F  6C                 	db	108
   825  00FE90  61                 	db	97
   826  00FE91  79                 	db	121
   827  00FE92  73                 	db	115
   828  00FE93  20                 	db	32
   829  00FE94  34                 	db	52
   830  00FE95  00                 	db	0
   831  00FE96  00                 	db	0
   832  00FE97  00                 	db	0
   833  00FE98  00                 	db	0
   834  00FE99  00                 	db	0
   835  00FE9A  00                 	db	0
   836  00FE9B  00                 	db	0
   837  00FE9C  00                 	db	0
   838  00FE9D                     __end_of_T:
   839                           	opt callstack 0
   840  0000                     _IVTADL	set	14493
   841  0000                     _IVTADH	set	14494
   842  0000                     _IVTADU	set	14495
   843  0000                     _PIR4bits	set	14756
   844  0000                     _PIE8bits	set	14744
   845  0000                     _PIR8bits	set	14760
   846  0000                     _SCANPR	set	14839
   847  0000                     _DMA2PR	set	14836
   848  0000                     _DMA1PR	set	14835
   849  0000                     _MAINPR	set	14834
   850  0000                     _ISRPR	set	14833
   851  0000                     _PIE2bits	set	14738
   852  0000                     _PIR2bits	set	14754
   853  0000                     _PIE9bits	set	14745
   854  0000                     _PIR9bits	set	14761
   855  0000                     _PIE6bits	set	14742
   856  0000                     _PIE3bits	set	14739
   857  0000                     _PMD7	set	14791
   858  0000                     _PMD6	set	14790
   859  0000                     _PMD5	set	14789
   860  0000                     _PMD4	set	14788
   861  0000                     _PMD3	set	14787
   862  0000                     _PMD2	set	14786
   863  0000                     _PMD1	set	14785
   864  0000                     _PMD0	set	14784
   865  0000                     _OSCTUNE	set	14814
   866  0000                     _OSCFRQ	set	14815
   867  0000                     _OSCEN	set	14813
   868  0000                     _OSCCON3	set	14811
   869  0000                     _OSCCON1	set	14809
   870  0000                     _IPR8bits	set	14728
   871  0000                     _IPR9bits	set	14729
   872  0000                     _IPR5bits	set	14725
   873  0000                     _IPR1bits	set	14721
   874  0000                     _IPR3bits	set	14723
   875  0000                     _IPR6bits	set	14726
   876  0000                     _IPR2bits	set	14722
   877  0000                     _PIE5bits	set	14741
   878  0000                     _PIE1bits	set	14737
   879  0000                     _PIR5bits	set	14757
   880  0000                     _PIR1bits	set	14753
   881  0000                     _PLLR	set	118496
   882  0000                     _SPI1SDIPPS	set	15071
   883  0000                     _U1RXPPS	set	15077
   884  0000                     _RC6PPS	set	14870
   885  0000                     _RC5PPS	set	14869
   886  0000                     _INT1PPS	set	15041
   887  0000                     _RD1PPS	set	14873
   888  0000                     _INT0PPS	set	15040
   889  0000                     _RC3PPS	set	14867
   890  0000                     _RB6PPS	set	14862
   891  0000                     _SPI1SCKPPS	set	15070
   892  0000                     _U2RXPPS	set	15080
   893  0000                     _SLRCONF	set	14995
   894  0000                     _SLRCONE	set	14979
   895  0000                     _SLRCOND	set	14963
   896  0000                     _SLRCONC	set	14947
   897  0000                     _SLRCONB	set	14931
   898  0000                     _SLRCONA	set	14915
   899  0000                     _ODCOND	set	14962
   900  0000                     _ODCONC	set	14946
   901  0000                     _ODCONB	set	14930
   902  0000                     _ODCONA	set	14914
   903  0000                     _ODCONF	set	14994
   904  0000                     _ODCONE	set	14978
   905  0000                     _WPUC	set	14945
   906  0000                     _WPUA	set	14913
   907  0000                     _WPUB	set	14929
   908  0000                     _WPUE	set	14977
   909  0000                     _WPUF	set	14993
   910  0000                     _WPUD	set	14961
   911  0000                     _ANSELA	set	14912
   912  0000                     _ANSELF	set	14992
   913  0000                     _ANSELE	set	14976
   914  0000                     _ANSELB	set	14928
   915  0000                     _ANSELC	set	14944
   916  0000                     _ANSELD	set	14960
   917  0000                     _DMA2SSA	set	15321
   918  0000                     _DMA1SSA	set	15353
   919  0000                     _DMA2DSZ	set	15310
   920  0000                     _DMA2SSZ	set	15319
   921  0000                     _DMA2DSA	set	15312
   922  0000                     _DMA1DSZ	set	15342
   923  0000                     _DMA1SSZ	set	15351
   924  0000                     _DMA1DSA	set	15344
   925  0000                     _DMA1CON0bits	set	15356
   926  0000                     _DMA1CON1bits	set	15357
   927  0000                     _DMA2CON0	set	15324
   928  0000                     _DMA2AIRQ	set	15326
   929  0000                     _DMA2SIRQ	set	15327
   930  0000                     _DMA2CON1	set	15325
   931  0000                     _DMA1CON0	set	15356
   932  0000                     _DMA1AIRQ	set	15358
   933  0000                     _DMA1SIRQ	set	15359
   934  0000                     _DMA1CON1	set	15357
   935  0000                     _CLKRCON	set	15589
   936  0000                     _CLKRCLK	set	15590
   937  0000                     _SPI1INTFbits	set	15642
   938  0000                     _SPI1RXB	set	15632
   939  0000                     _SPI1TXB	set	15633
   940  0000                     _SPI1TCNTL	set	15634
   941  0000                     _SPI1CON0	set	15636
   942  0000                     _SPI1CLK	set	15644
   943  0000                     _SPI1BAUD	set	15641
   944  0000                     _SPI1CON2	set	15638
   945  0000                     _SPI1CON1	set	15637
   946  0000                     _U2RXB	set	15824
   947  0000                     _U2TXB	set	15826
   948  0000                     _U2ERRIE	set	15842
   949  0000                     _U2ERRIR	set	15841
   950  0000                     _U2UIR	set	15840
   951  0000                     _U2FIFO	set	15839
   952  0000                     _U2BRGH	set	15838
   953  0000                     _U2BRGL	set	15837
   954  0000                     _U2CON2	set	15836
   955  0000                     _U2CON1	set	15835
   956  0000                     _U2CON0	set	15834
   957  0000                     _U2P3L	set	15832
   958  0000                     _U2P2L	set	15830
   959  0000                     _U2P1L	set	15828
   960  0000                     _U1RXB	set	15848
   961  0000                     _U1TXB	set	15850
   962  0000                     _U1ERRIE	set	15866
   963  0000                     _U1ERRIR	set	15865
   964  0000                     _U1UIR	set	15864
   965  0000                     _U1FIFO	set	15863
   966  0000                     _U1BRGH	set	15862
   967  0000                     _U1BRGL	set	15861
   968  0000                     _U1CON2	set	15860
   969  0000                     _U1CON1	set	15859
   970  0000                     _U1CON0	set	15858
   971  0000                     _U1P3H	set	15857
   972  0000                     _U1P3L	set	15856
   973  0000                     _U1P2H	set	15855
   974  0000                     _U1P2L	set	15854
   975  0000                     _U1P1H	set	15853
   976  0000                     _U1P1L	set	15852
   977  0000                     _FVRCON	set	16065
   978  0000                     _ADFLTRL	set	16102
   979  0000                     _ADFLTRH	set	16103
   980  0000                     _ADCON0bits	set	16120
   981  0000                     _ADCON0	set	16120
   982  0000                     _ADCLK	set	16127
   983  0000                     _ADACT	set	16126
   984  0000                     _ADREF	set	16125
   985  0000                     _ADSTAT	set	16124
   986  0000                     _ADCON3	set	16123
   987  0000                     _ADCON2	set	16122
   988  0000                     _ADCON1	set	16121
   989  0000                     _ADPREH	set	16119
   990  0000                     _ADPREL	set	16118
   991  0000                     _ADCAP	set	16117
   992  0000                     _ADACQH	set	16116
   993  0000                     _ADACQL	set	16115
   994  0000                     _ADPCH	set	16113
   995  0000                     _ADRPT	set	16108
   996  0000                     _ADACCU	set	16106
   997  0000                     _ADSTPTH	set	16101
   998  0000                     _ADSTPTL	set	16100
   999  0000                     _ADUTHH	set	16097
  1000  0000                     _ADUTHL	set	16096
  1001  0000                     _ADLTHH	set	16095
  1002  0000                     _ADLTHL	set	16094
  1003  0000                     _CCPTMRS1bits	set	16223
  1004  0000                     _PORTFbits	set	16335
  1005  0000                     _LATCbits	set	16316
  1006  0000                     _LATDbits	set	16317
  1007  0000                     _PORTBbits	set	16331
  1008  0000                     _T2CON	set	16300
  1009  0000                     _T2TMR	set	16298
  1010  0000                     _T2PR	set	16299
  1011  0000                     _T2RST	set	16303
  1012  0000                     _T2HLT	set	16301
  1013  0000                     _T2CLKCON	set	16302
  1014  0000                     _PWM8DCL	set	16224
  1015  0000                     _PWM8DCH	set	16225
  1016  0000                     _PWM8CON	set	16226
  1017  0000                     _LATEbits	set	16318
  1018  0000                     _T5CONbits	set	16282
  1019  0000                     _T5CON	set	16282
  1020  0000                     _TMR5L	set	16280
  1021  0000                     _TMR5H	set	16281
  1022  0000                     _T5CLK	set	16285
  1023  0000                     _T5GATE	set	16284
  1024  0000                     _T5GCON	set	16283
  1025  0000                     _T6CON	set	16276
  1026  0000                     _T6TMR	set	16274
  1027  0000                     _T6PR	set	16275
  1028  0000                     _T6RST	set	16279
  1029  0000                     _T6HLT	set	16277
  1030  0000                     _T6CLKCON	set	16278
  1031  0000                     _TRISD	set	16325
  1032  0000                     _TRISC	set	16324
  1033  0000                     _TRISB	set	16323
  1034  0000                     _TRISA	set	16322
  1035  0000                     _TRISF	set	16327
  1036  0000                     _TRISE	set	16326
  1037  0000                     _LATC	set	16316
  1038  0000                     _LATB	set	16315
  1039  0000                     _LATF	set	16319
  1040  0000                     _LATA	set	16314
  1041  0000                     _LATD	set	16317
  1042  0000                     _LATE	set	16318
  1043  0000                     _IVTLOCKbits	set	16340
  1044  0000                     _IVTLOCK	set	16340
  1045  0000                     _INTCON0bits	set	16338
  1046  0000                     _GIE	set	130711
  1047  00FE9D                     
  1048                           ; BSR set to: 57
  1049  00FE9D  20                 	db	32
  1050  00FE9E  4D                 	db	77	;'M'
  1051  00FE9F  65                 	db	101	;'e'
  1052  00FEA0  73                 	db	115	;'s'
  1053  00FEA1  67                 	db	103	;'g'
  1054  00FEA2  20                 	db	32
  1055  00FEA3  25                 	db	37
  1056  00FEA4  64                 	db	100	;'d'
  1057  00FEA5  20                 	db	32
  1058  00FEA6  53                 	db	83	;'S'
  1059  00FEA7  74                 	db	116	;'t'
  1060  00FEA8  61                 	db	97	;'a'
  1061  00FEA9  63                 	db	99	;'c'
  1062  00FEAA  6B                 	db	107	;'k'
  1063  00FEAB  20                 	db	32
  1064  00FEAC  25                 	db	37
  1065  00FEAD  64                 	db	100	;'d'
  1066  00FEAE  20                 	db	32
  1067  00FEAF  20                 	db	32
  1068  00FEB0  20                 	db	32
  1069  00FEB1  20                 	db	32
  1070  00FEB2  20                 	db	32
  1071  00FEB3  20                 	db	32
  1072  00FEB4  00                 	db	0
  1073  00FEB5                     STR_30:
  1074                           
  1075                           ; BSR set to: 57
  1076  00FEB5  20                 	db	32
  1077  00FEB6  20                 	db	32
  1078  00FEB7  20                 	db	32
  1079  00FEB8  20                 	db	32
  1080  00FEB9  20                 	db	32
  1081  00FEBA  20                 	db	32
  1082  00FEBB  20                 	db	32
  1083  00FEBC  20                 	db	32
  1084  00FEBD  20                 	db	32
  1085  00FEBE  20                 	db	32
  1086  00FEBF  20                 	db	32
  1087  00FEC0  20                 	db	32
  1088  00FEC1  20                 	db	32
  1089  00FEC2  20                 	db	32
  1090  00FEC3  20                 	db	32
  1091  00FEC4  20                 	db	32
  1092  00FEC5  20                 	db	32
  1093  00FEC6  20                 	db	32
  1094  00FEC7  00                 	db	0
  1095  00FEC8                     STR_20:
  1096                           
  1097                           ; BSR set to: 57
  1098  00FEC8  48                 	db	72	;'H'
  1099  00FEC9  45                 	db	69	;'E'
  1100  00FECA  4C                 	db	76	;'L'
  1101  00FECB  50                 	db	80	;'P'
  1102  00FECC  20                 	db	32
  1103  00FECD  25                 	db	37
  1104  00FECE  73                 	db	115	;'s'
  1105  00FECF  20                 	db	32
  1106  00FED0  20                 	db	32
  1107  00FED1  20                 	db	32
  1108  00FED2  20                 	db	32
  1109  00FED3  20                 	db	32
  1110  00FED4  20                 	db	32
  1111  00FED5  20                 	db	32
  1112  00FED6  20                 	db	32
  1113  00FED7  20                 	db	32
  1114  00FED8  20                 	db	32
  1115  00FED9  20                 	db	32
  1116  00FEDA  00                 	db	0
  1117  00FEDB                     
  1118                           ; BSR set to: 57
  1119  00FEDB  44                 	db	68	;'D'
  1120  00FEDC  49                 	db	73	;'I'
  1121  00FEDD  53                 	db	83	;'S'
  1122  00FEDE  50                 	db	80	;'P'
  1123  00FEDF  4C                 	db	76	;'L'
  1124  00FEE0  41                 	db	65	;'A'
  1125  00FEE1  59                 	db	89	;'Y'
  1126  00FEE2  20                 	db	32
  1127  00FEE3  25                 	db	37
  1128  00FEE4  73                 	db	115	;'s'
  1129  00FEE5  20                 	db	32
  1130  00FEE6  20                 	db	32
  1131  00FEE7  20                 	db	32
  1132  00FEE8  20                 	db	32
  1133  00FEE9  20                 	db	32
  1134  00FEEA  20                 	db	32
  1135  00FEEB  20                 	db	32
  1136  00FEEC  20                 	db	32
  1137  00FEED  00                 	db	0
  1138  00FEEE                     STR_9:
  1139                           
  1140                           ; BSR set to: 57
  1141  00FEEE  50                 	db	80	;'P'
  1142  00FEEF  56                 	db	86	;'V'
  1143  00FEF0  20                 	db	32
  1144  00FEF1  20                 	db	32
  1145  00FEF2  20                 	db	32
  1146  00FEF3  50                 	db	80	;'P'
  1147  00FEF4  57                 	db	87	;'W'
  1148  00FEF5  52                 	db	82	;'R'
  1149  00FEF6  20                 	db	32
  1150  00FEF7  25                 	db	37
  1151  00FEF8  33                 	db	51	;'3'
  1152  00FEF9  2E                 	db	46
  1153  00FEFA  32                 	db	50	;'2'
  1154  00FEFB  66                 	db	102	;'f'
  1155  00FEFC  20                 	db	32
  1156  00FEFD  20                 	db	32
  1157  00FEFE  20                 	db	32
  1158  00FEFF  20                 	db	32
  1159  00FF00  00                 	db	0
  1160  00FF01                     STR_11:
  1161                           
  1162                           ; BSR set to: 57
  1163  00FF01  49                 	db	73	;'I'
  1164  00FF02  4E                 	db	78	;'N'
  1165  00FF03  56                 	db	86	;'V'
  1166  00FF04  20                 	db	32
  1167  00FF05  20                 	db	32
  1168  00FF06  50                 	db	80	;'P'
  1169  00FF07  57                 	db	87	;'W'
  1170  00FF08  52                 	db	82	;'R'
  1171  00FF09  20                 	db	32
  1172  00FF0A  25                 	db	37
  1173  00FF0B  33                 	db	51	;'3'
  1174  00FF0C  2E                 	db	46
  1175  00FF0D  32                 	db	50	;'2'
  1176  00FF0E  66                 	db	102	;'f'
  1177  00FF0F  20                 	db	32
  1178  00FF10  20                 	db	32
  1179  00FF11  20                 	db	32
  1180  00FF12  20                 	db	32
  1181  00FF13  00                 	db	0
  1182  00FF14                     STR_10:
  1183                           
  1184                           ; BSR set to: 57
  1185  00FF14  4C                 	db	76	;'L'
  1186  00FF15  4F                 	db	79	;'O'
  1187  00FF16  41                 	db	65	;'A'
  1188  00FF17  44                 	db	68	;'D'
  1189  00FF18  20                 	db	32
  1190  00FF19  50                 	db	80	;'P'
  1191  00FF1A  57                 	db	87	;'W'
  1192  00FF1B  52                 	db	82	;'R'
  1193  00FF1C  20                 	db	32
  1194  00FF1D  25                 	db	37
  1195  00FF1E  33                 	db	51	;'3'
  1196  00FF1F  2E                 	db	46
  1197  00FF20  32                 	db	50	;'2'
  1198  00FF21  66                 	db	102	;'f'
  1199  00FF22  20                 	db	32
  1200  00FF23  20                 	db	32
  1201  00FF24  20                 	db	32
  1202  00FF25  20                 	db	32
  1203  00FF26  00                 	db	0
  1204  00FF27                     STR_13:
  1205                           
  1206                           ; BSR set to: 57
  1207  00FF27  42                 	db	66	;'B'
  1208  00FF28  56                 	db	86	;'V'
  1209  00FF29  20                 	db	32
  1210  00FF2A  25                 	db	37
  1211  00FF2B  32                 	db	50	;'2'
  1212  00FF2C  2E                 	db	46
  1213  00FF2D  32                 	db	50	;'2'
  1214  00FF2E  66                 	db	102	;'f'
  1215  00FF2F  20                 	db	32
  1216  00FF30  42                 	db	66	;'B'
  1217  00FF31  41                 	db	65	;'A'
  1218  00FF32  20                 	db	32
  1219  00FF33  25                 	db	37
  1220  00FF34  32                 	db	50	;'2'
  1221  00FF35  2E                 	db	46
  1222  00FF36  32                 	db	50	;'2'
  1223  00FF37  66                 	db	102	;'f'
  1224  00FF38  20                 	db	32
  1225  00FF39  00                 	db	0
  1226  00FF3A                     STR_14:
  1227                           
  1228                           ; BSR set to: 57
  1229  00FF3A  43                 	db	67	;'C'
  1230  00FF3B  56                 	db	86	;'V'
  1231  00FF3C  20                 	db	32
  1232  00FF3D  25                 	db	37
  1233  00FF3E  32                 	db	50	;'2'
  1234  00FF3F  2E                 	db	46
  1235  00FF40  32                 	db	50	;'2'
  1236  00FF41  66                 	db	102	;'f'
  1237  00FF42  20                 	db	32
  1238  00FF43  4C                 	db	76	;'L'
  1239  00FF44  41                 	db	65	;'A'
  1240  00FF45  20                 	db	32
  1241  00FF46  25                 	db	37
  1242  00FF47  32                 	db	50	;'2'
  1243  00FF48  2E                 	db	46
  1244  00FF49  32                 	db	50	;'2'
  1245  00FF4A  66                 	db	102	;'f'
  1246  00FF4B  20                 	db	32
  1247  00FF4C  00                 	db	0
  1248  00FF4D                     STR_12:
  1249                           
  1250                           ; BSR set to: 57
  1251  00FF4D  50                 	db	80	;'P'
  1252  00FF4E  56                 	db	86	;'V'
  1253  00FF4F  20                 	db	32
  1254  00FF50  25                 	db	37
  1255  00FF51  32                 	db	50	;'2'
  1256  00FF52  2E                 	db	46
  1257  00FF53  32                 	db	50	;'2'
  1258  00FF54  66                 	db	102	;'f'
  1259  00FF55  20                 	db	32
  1260  00FF56  50                 	db	80	;'P'
  1261  00FF57  41                 	db	65	;'A'
  1262  00FF58  20                 	db	32
  1263  00FF59  25                 	db	37
  1264  00FF5A  32                 	db	50	;'2'
  1265  00FF5B  2E                 	db	46
  1266  00FF5C  32                 	db	50	;'2'
  1267  00FF5D  66                 	db	102	;'f'
  1268  00FF5E  20                 	db	32
  1269  00FF5F  00                 	db	0
  1270  00FF60                     STR_8:
  1271                           
  1272                           ; BSR set to: 57
  1273  00FF60  20                 	db	32
  1274  00FF61  56                 	db	86	;'V'
  1275  00FF62  54                 	db	84	;'T'
  1276  00FF63  45                 	db	69	;'E'
  1277  00FF64  52                 	db	82	;'R'
  1278  00FF65  4D                 	db	77	;'M'
  1279  00FF66  20                 	db	32
  1280  00FF67  23                 	db	35
  1281  00FF68  32                 	db	50	;'2'
  1282  00FF69  20                 	db	32
  1283  00FF6A  20                 	db	32
  1284  00FF6B  20                 	db	32
  1285  00FF6C  20                 	db	32
  1286  00FF6D  20                 	db	32
  1287  00FF6E  20                 	db	32
  1288  00FF6F  20                 	db	32
  1289  00FF70  00                 	db	0
  1290  00FF71                     STR_4:
  1291                           
  1292                           ; BSR set to: 57
  1293  00FF71  20                 	db	32
  1294  00FF72  4E                 	db	78	;'N'
  1295  00FF73  53                 	db	83	;'S'
  1296  00FF74  41                 	db	65	;'A'
  1297  00FF75  53                 	db	83	;'S'
  1298  00FF76  50                 	db	80	;'P'
  1299  00FF77  4F                 	db	79	;'O'
  1300  00FF78  4F                 	db	79	;'O'
  1301  00FF79  4B                 	db	75	;'K'
  1302  00FF7A  20                 	db	32
  1303  00FF7B  20                 	db	32
  1304  00FF7C  20                 	db	32
  1305  00FF7D  20                 	db	32
  1306  00FF7E  20                 	db	32
  1307  00FF7F  20                 	db	32
  1308  00FF80  20                 	db	32
  1309  00FF81  00                 	db	0
  1310  00FF82                     STR_1:
  1311                           
  1312                           ; BSR set to: 57
  1313  00FF82  20                 	db	32
  1314  00FF83  4D                 	db	77	;'M'
  1315  00FF84  42                 	db	66	;'B'
  1316  00FF85  4D                 	db	77	;'M'
  1317  00FF86  43                 	db	67	;'C'
  1318  00FF87  20                 	db	32
  1319  00FF88  53                 	db	83	;'S'
  1320  00FF89  4F                 	db	79	;'O'
  1321  00FF8A  4C                 	db	76	;'L'
  1322  00FF8B  41                 	db	65	;'A'
  1323  00FF8C  52                 	db	82	;'R'
  1324  00FF8D  4D                 	db	77	;'M'
  1325  00FF8E  4F                 	db	79	;'O'
  1326  00FF8F  4E                 	db	78	;'N'
  1327  00FF90  20                 	db	32
  1328  00FF91  20                 	db	32
  1329  00FF92  00                 	db	0
  1330  00FF93                     STR_5:
  1331                           
  1332                           ; BSR set to: 57
  1333  00FF93  20                 	db	32
  1334  00FF94  53                 	db	83	;'S'
  1335  00FF95  45                 	db	69	;'E'
  1336  00FF96  51                 	db	81	;'Q'
  1337  00FF97  55                 	db	85	;'U'
  1338  00FF98  45                 	db	69	;'E'
  1339  00FF99  4E                 	db	78	;'N'
  1340  00FF9A  43                 	db	67	;'C'
  1341  00FF9B  45                 	db	69	;'E'
  1342  00FF9C  20                 	db	32
  1343  00FF9D  54                 	db	84	;'T'
  1344  00FF9E  45                 	db	69	;'E'
  1345  00FF9F  53                 	db	83	;'S'
  1346  00FFA0  54                 	db	84	;'T'
  1347  00FFA1  20                 	db	32
  1348  00FFA2  20                 	db	32
  1349  00FFA3  00                 	db	0
  1350  00FFA4                     STR_24:
  1351                           
  1352                           ; BSR set to: 57
  1353  00FFA4  76                 	db	118	;'v'
  1354  00FFA5  74                 	db	116	;'t'
  1355  00FFA6  65                 	db	101	;'e'
  1356  00FFA7  72                 	db	114	;'r'
  1357  00FFA8  6D                 	db	109	;'m'
  1358  00FFA9  20                 	db	32
  1359  00FFAA  25                 	db	37
  1360  00FFAB  78                 	db	120	;'x'
  1361  00FFAC  3A                 	db	58	;':'
  1362  00FFAD  25                 	db	37
  1363  00FFAE  78                 	db	120	;'x'
  1364  00FFAF  20                 	db	32
  1365  00FFB0  20                 	db	32
  1366  00FFB1  20                 	db	32
  1367  00FFB2  00                 	db	0
  1368  00FFB3                     STR_2:
  1369                           
  1370                           ; BSR set to: 57
  1371  00FFB3  20                 	db	32
  1372  00FFB4  56                 	db	86	;'V'
  1373  00FFB5  65                 	db	101	;'e'
  1374  00FFB6  72                 	db	114	;'r'
  1375  00FFB7  73                 	db	115	;'s'
  1376  00FFB8  69                 	db	105	;'i'
  1377  00FFB9  6F                 	db	111	;'o'
  1378  00FFBA  6E                 	db	110	;'n'
  1379  00FFBB  20                 	db	32
  1380  00FFBC  25                 	db	37
  1381  00FFBD  73                 	db	115	;'s'
  1382  00FFBE  20                 	db	32
  1383  00FFBF  20                 	db	32
  1384  00FFC0  20                 	db	32
  1385  00FFC1  00                 	db	0
  1386  00FFC2                     STR_18:
  1387                           
  1388                           ; BSR set to: 57
  1389  00FFC2  4E                 	db	78	;'N'
  1390  00FFC3  6F                 	db	111	;'o'
  1391  00FFC4  76                 	db	118	;'v'
  1392  00FFC5  20                 	db	32
  1393  00FFC6  32                 	db	50	;'2'
  1394  00FFC7  39                 	db	57	;'9'
  1395  00FFC8  20                 	db	32
  1396  00FFC9  32                 	db	50	;'2'
  1397  00FFCA  30                 	db	48	;'0'
  1398  00FFCB  31                 	db	49	;'1'
  1399  00FFCC  39                 	db	57	;'9'
  1400  00FFCD  00                 	db	0
  1401  00FFCE                     STR_22:
  1402                           
  1403                           ; BSR set to: 57
  1404  00FFCE  25                 	db	37
  1405  00FFCF  73                 	db	115	;'s'
  1406  00FFD0  20                 	db	32
  1407  00FFD1  20                 	db	32
  1408  00FFD2  20                 	db	32
  1409  00FFD3  20                 	db	32
  1410  00FFD4  20                 	db	32
  1411  00FFD5  20                 	db	32
  1412  00FFD6  20                 	db	32
  1413  00FFD7  00                 	db	0
  1414  00FFD8                     STR_19:
  1415                           
  1416                           ; BSR set to: 57
  1417  00FFD8  31                 	db	49	;'1'
  1418  00FFD9  32                 	db	50	;'2'
  1419  00FFDA  3A                 	db	58	;':'
  1420  00FFDB  30                 	db	48	;'0'
  1421  00FFDC  35                 	db	53	;'5'
  1422  00FFDD  3A                 	db	58	;':'
  1423  00FFDE  35                 	db	53	;'5'
  1424  00FFDF  37                 	db	55	;'7'
  1425  00FFE0  00                 	db	0
  1426  00FFE1                     STR_3:
  1427                           
  1428                           ; BSR set to: 57
  1429  00FFE1  30                 	db	48	;'0'
  1430  00FFE2  2E                 	db	46
  1431  00FFE3  39                 	db	57	;'9'
  1432  00FFE4  38                 	db	56	;'8'
  1433  00FFE5  00                 	db	0
  1434  00FFE6                     STR_37:
  1435                           
  1436                           ; BSR set to: 57
  1437  00FFE6  49                 	db	73	;'I'
  1438  00FFE7  4E                 	db	78	;'N'
  1439  00FFE8  46                 	db	70	;'F'
  1440  00FFE9  00                 	db	0
  1441  00FFEA                     STR_41:
  1442                           
  1443                           ; BSR set to: 57
  1444  00FFEA  4E                 	db	78	;'N'
  1445  00FFEB  41                 	db	65	;'A'
  1446  00FFEC  4E                 	db	78	;'N'
  1447  00FFED  00                 	db	0
  1448  00FFEE                     STR_38:
  1449                           
  1450                           ; BSR set to: 57
  1451  00FFEE  69                 	db	105	;'i'
  1452  00FFEF  6E                 	db	110	;'n'
  1453  00FFF0  66                 	db	102	;'f'
  1454  00FFF1  00                 	db	0
  1455  00FFF2                     STR_42:
  1456                           
  1457                           ; BSR set to: 57
  1458  00FFF2  6E                 	db	110	;'n'
  1459  00FFF3  61                 	db	97	;'a'
  1460  00FFF4  6E                 	db	110	;'n'
  1461  00FFF5  00                 	db	0
  1462  00FFF6                     STR_45:
  1463                           
  1464                           ; BSR set to: 57
  1465  00FFF6  6C                 	db	108	;'l'
  1466  00FFF7  66                 	db	102	;'f'
  1467  00FFF8  00                 	db	0
  1468  00FFF9                     STR_16:
  1469                           
  1470                           ; BSR set to: 57
  1471  00FFF9  25                 	db	37
  1472  00FFFA  63                 	db	99	;'c'
  1473  00FFFB  00                 	db	0
  1474  00FFFC                     STR_15:
  1475                           
  1476                           ; BSR set to: 57
  1477  00FFFC  25                 	db	37
  1478  00FFFD  73                 	db	115	;'s'
  1479  00FFFE  00                 	db	0
  1480  0000                     
  1481                           ; #config settings
  1482  00FFFF  00                 	db	0	; dummy byte at the end
  1483  0000                     
  1484                           	psect	cinit
  1485  016C2C                     __pcinit:
  1486                           	opt callstack 0
  1487  016C2C                     start_initialization:
  1488                           	opt callstack 0
  1489  016C2C                     __initialization:
  1490                           	opt callstack 0
  1491                           
  1492                           ; Initialize objects allocated to BANK2 (187 bytes)
  1493                           ; load TBLPTR registers with __pidataBANK2
  1494  016C2C  0EA2               	movlw	low __pidataBANK2
  1495  016C2E  6EF6               	movwf	tblptrl,c
  1496  016C30  0E6F               	movlw	high __pidataBANK2
  1497  016C32  6EF7               	movwf	tblptrh,c
  1498  016C34  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1499  016C36  6EF8               	movwf	tblptru,c
  1500  016C38  EE00  F200         	lfsr	0,__pdataBANK2
  1501  016C3C  EE20 F0BB          	lfsr	2,187
  1502  016C40                     copy_data0:
  1503  016C40  0009               	tblrd		*+
  1504  016C42  006F FFD7 FFEE     	movff	tablat,postinc0
  1505  016C48  50DD               	movf	postdec2,w,c
  1506  016C4A  50D9               	movf	fsr2l,w,c
  1507  016C4C  E1F9               	bnz	copy_data0
  1508                           
  1509                           ; Initialize objects allocated to BANK1 (16 bytes)
  1510                           ; load TBLPTR registers with __pidataBANK1
  1511  016C4E  0E6E               	movlw	low __pidataBANK1
  1512  016C50  6EF6               	movwf	tblptrl,c
  1513  016C52  0E87               	movlw	high __pidataBANK1
  1514  016C54  6EF7               	movwf	tblptrh,c
  1515  016C56  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1516  016C58  6EF8               	movwf	tblptru,c
  1517  016C5A  EE00  F1D0         	lfsr	0,__pdataBANK1
  1518  016C5E  EE20 F010          	lfsr	2,16
  1519  016C62                     copy_data1:
  1520  016C62  0009               	tblrd		*+
  1521  016C64  006F FFD7 FFEE     	movff	tablat,postinc0
  1522  016C6A  50DD               	movf	postdec2,w,c
  1523  016C6C  50D9               	movf	fsr2l,w,c
  1524  016C6E  E1F9               	bnz	copy_data1
  1525                           
  1526                           ; Initialize objects allocated to BANK0 (47 bytes)
  1527                           ; load TBLPTR registers with __pidataBANK0
  1528  016C70  0EFE               	movlw	low __pidataBANK0
  1529  016C72  6EF6               	movwf	tblptrl,c
  1530  016C74  0E80               	movlw	high __pidataBANK0
  1531  016C76  6EF7               	movwf	tblptrh,c
  1532  016C78  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1533  016C7A  6EF8               	movwf	tblptru,c
  1534  016C7C  EE00  F0C7         	lfsr	0,__pdataBANK0
  1535  016C80  EE20 F02F          	lfsr	2,47
  1536  016C84                     copy_data2:
  1537  016C84  0009               	tblrd		*+
  1538  016C86  006F FFD7 FFEE     	movff	tablat,postinc0
  1539  016C8C  50DD               	movf	postdec2,w,c
  1540  016C8E  50D9               	movf	fsr2l,w,c
  1541  016C90  E1F9               	bnz	copy_data2
  1542                           
  1543                           ; Clear objects allocated to BANK7 (255 bytes)
  1544  016C92  EE01  F300         	lfsr	0,__pbssBANK7
  1545  016C96  EE20 F0FF          	lfsr	2,255
  1546  016C9A                     clear_0:
  1547  016C9A  6AEE               	clrf	postinc0,c
  1548  016C9C  50DD               	movf	postdec2,w,c
  1549  016C9E  50D9               	movf	fsr2l,w,c
  1550  016CA0  E1FC               	bnz	clear_0
  1551  016CA2  50DA               	movf	fsr2h,w,c
  1552  016CA4  E1FA               	bnz	clear_0
  1553                           
  1554                           ; Clear objects allocated to BANK6 (255 bytes)
  1555  016CA6  EE01  F200         	lfsr	0,__pbssBANK6
  1556  016CAA  EE20 F0FF          	lfsr	2,255
  1557  016CAE                     clear_1:
  1558  016CAE  6AEE               	clrf	postinc0,c
  1559  016CB0  50DD               	movf	postdec2,w,c
  1560  016CB2  50D9               	movf	fsr2l,w,c
  1561  016CB4  E1FC               	bnz	clear_1
  1562  016CB6  50DA               	movf	fsr2h,w,c
  1563  016CB8  E1FA               	bnz	clear_1
  1564                           
  1565                           ; Clear objects allocated to BANK5 (218 bytes)
  1566  016CBA  EE01  F100         	lfsr	0,__pbssBANK5
  1567  016CBE  0EDA               	movlw	218
  1568  016CC0                     clear_2:
  1569  016CC0  6AEE               	clrf	postinc0,c
  1570  016CC2  06E8               	decf	wreg,f,c
  1571  016CC4  E1FD               	bnz	clear_2
  1572                           
  1573                           ; Clear objects allocated to BANK4 (67 bytes)
  1574  016CC6  EE01  F000         	lfsr	0,__pbssBANK4
  1575  016CCA  0E43               	movlw	67
  1576  016CCC                     clear_3:
  1577  016CCC  6AEE               	clrf	postinc0,c
  1578  016CCE  06E8               	decf	wreg,f,c
  1579  016CD0  E1FD               	bnz	clear_3
  1580                           
  1581                           ; Clear objects allocated to BANK3 (211 bytes)
  1582  016CD2  EE00  F300         	lfsr	0,__pbssBANK3
  1583  016CD6  0ED3               	movlw	211
  1584  016CD8                     clear_4:
  1585  016CD8  6AEE               	clrf	postinc0,c
  1586  016CDA  06E8               	decf	wreg,f,c
  1587  016CDC  E1FD               	bnz	clear_4
  1588                           
  1589                           ; Clear objects allocated to BANK2 (64 bytes)
  1590  016CDE  EE00  F2BB         	lfsr	0,__pbssBANK2
  1591  016CE2  0E40               	movlw	64
  1592  016CE4                     clear_5:
  1593  016CE4  6AEE               	clrf	postinc0,c
  1594  016CE6  06E8               	decf	wreg,f,c
  1595  016CE8  E1FD               	bnz	clear_5
  1596                           
  1597                           ; Clear objects allocated to BANK1 (208 bytes)
  1598  016CEA  EE00  F100         	lfsr	0,__pbssBANK1
  1599  016CEE  0ED0               	movlw	208
  1600  016CF0                     clear_6:
  1601  016CF0  6AEE               	clrf	postinc0,c
  1602  016CF2  06E8               	decf	wreg,f,c
  1603  016CF4  E1FD               	bnz	clear_6
  1604                           
  1605                           ; Clear objects allocated to BANK0 (103 bytes)
  1606  016CF6  EE00  F060         	lfsr	0,__pbssBANK0
  1607  016CFA  0E67               	movlw	103
  1608  016CFC                     clear_7:
  1609  016CFC  6AEE               	clrf	postinc0,c
  1610  016CFE  06E8               	decf	wreg,f,c
  1611  016D00  E1FD               	bnz	clear_7
  1612                           
  1613                           ; Clear objects allocated to COMRAM (49 bytes)
  1614  016D02  EE00  F001         	lfsr	0,__pbssCOMRAM
  1615  016D06  0E31               	movlw	49
  1616  016D08                     clear_8:
  1617  016D08  6AEE               	clrf	postinc0,c
  1618  016D0A  06E8               	decf	wreg,f,c
  1619  016D0C  E1FD               	bnz	clear_8
  1620                           
  1621                           ;
  1622                           ; Setup IVTBASE
  1623                           ;
  1624  016D0E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1625  016D10  6ED5               	movwf	213,c
  1626  016D12  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1627  016D14  6ED6               	movwf	214,c
  1628  016D16  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1629  016D18  6ED7               	movwf	215,c
  1630  016D1A                     end_of_initialization:
  1631                           	opt callstack 0
  1632  016D1A                     __end_of__initialization:
  1633                           	opt callstack 0
  1634  016D1A  0100               	movlb	0
  1635  016D1C  EF71  F099         	goto	_main	;jump to C main() function
  1636                           
  1637                           	psect	bssCOMRAM
  1638  000001                     __pbssCOMRAM:
  1639                           	opt callstack 0
  1640  000001                     _ADCC_ADTI_InterruptHandler:
  1641                           	opt callstack 0
  1642  000001                     	ds	3
  1643  000004                     _ADCC_ADI_InterruptHandler:
  1644                           	opt callstack 0
  1645  000004                     	ds	3
  1646  000007                     _UART1_TxInterruptHandler:
  1647                           	opt callstack 0
  1648  000007                     	ds	3
  1649  00000A                     _UART1_RxInterruptHandler:
  1650                           	opt callstack 0
  1651  00000A                     	ds	3
  1652  00000D                     _UART2_TxInterruptHandler:
  1653                           	opt callstack 0
  1654  00000D                     	ds	3
  1655  000010                     _UART2_RxInterruptHandler:
  1656                           	opt callstack 0
  1657  000010                     	ds	3
  1658  000013                     _INT1_InterruptHandler:
  1659                           	opt callstack 0
  1660  000013                     	ds	3
  1661  000016                     _INT0_InterruptHandler:
  1662                           	opt callstack 0
  1663  000016                     	ds	3
  1664  000019                     _nout:
  1665                           	opt callstack 0
  1666  000019                     	ds	2
  1667  00001B                     _width:
  1668                           	opt callstack 0
  1669  00001B                     	ds	2
  1670  00001D                     _prec:
  1671                           	opt callstack 0
  1672  00001D                     	ds	2
  1673  00001F                     _flags:
  1674                           	opt callstack 0
  1675  00001F                     	ds	2
  1676  000021                     TMR5_ISR@CountCallBack:
  1677                           	opt callstack 0
  1678  000021                     	ds	2
  1679  000023                     _timer5ReloadVal:
  1680                           	opt callstack 0
  1681  000023                     	ds	2
  1682  000025                     _mode_sw:
  1683                           	opt callstack 0
  1684  000025                     	ds	1
  1685  000026                     _uart2RxCount:
  1686                           	opt callstack 0
  1687  000026                     	ds	1
  1688  000027                     _uart2RxTail:
  1689                           	opt callstack 0
  1690  000027                     	ds	1
  1691  000028                     _uart2RxHead:
  1692                           	opt callstack 0
  1693  000028                     	ds	1
  1694  000029                     _uart2TxBufferRemaining:
  1695                           	opt callstack 0
  1696  000029                     	ds	1
  1697  00002A                     _uart2TxTail:
  1698                           	opt callstack 0
  1699  00002A                     	ds	1
  1700  00002B                     _uart2TxHead:
  1701                           	opt callstack 0
  1702  00002B                     	ds	1
  1703  00002C                     _uart1RxCount:
  1704                           	opt callstack 0
  1705  00002C                     	ds	1
  1706  00002D                     _uart1RxTail:
  1707                           	opt callstack 0
  1708  00002D                     	ds	1
  1709  00002E                     _uart1RxHead:
  1710                           	opt callstack 0
  1711  00002E                     	ds	1
  1712  00002F                     _uart1TxBufferRemaining:
  1713                           	opt callstack 0
  1714  00002F                     	ds	1
  1715  000030                     _uart1TxTail:
  1716                           	opt callstack 0
  1717  000030                     	ds	1
  1718  000031                     _uart1TxHead:
  1719                           	opt callstack 0
  1720  000031                     	ds	1
  1721                           
  1722                           	psect	bssBANK0
  1723  000060                     __pbssBANK0:
  1724                           	opt callstack 0
  1725  000060                     _S:
  1726                           	opt callstack 0
  1727  000060                     	ds	41
  1728  000089                     _tickCount:
  1729                           	opt callstack 0
  1730  000089                     	ds	24
  1731  0000A1                     _spi_link:
  1732                           	opt callstack 0
  1733  0000A1                     	ds	12
  1734  0000AD                     floorf@F524:
  1735                           	opt callstack 0
  1736  0000AD                     	ds	4
  1737  0000B1                     ___fpclassifyf@F463:
  1738                           	opt callstack 0
  1739  0000B1                     	ds	4
  1740  0000B5                     _utctime:
  1741                           	opt callstack 0
  1742  0000B5                     	ds	4
  1743  0000B9                     wdtdelay@dcount:
  1744                           	opt callstack 0
  1745  0000B9                     	ds	4
  1746  0000BD                     _P:
  1747                           	opt callstack 0
  1748  0000BD                     	ds	4
  1749  0000C1                     _TMR5_InterruptHandler:
  1750                           	opt callstack 0
  1751  0000C1                     	ds	3
  1752  0000C4                     _TMR6_InterruptHandler:
  1753                           	opt callstack 0
  1754  0000C4                     	ds	3
  1755                           
  1756                           	psect	dataBANK0
  1757  0000C7                     __pdataBANK0:
  1758                           	opt callstack 0
  1759  0000C7                     _R:
  1760                           	opt callstack 0
  1761  0000C7                     	ds	40
  1762  0000EF                     stoa@F1166:
  1763                           	opt callstack 0
  1764  0000EF                     	ds	7
  1765                           
  1766                           	psect	bssBANK1
  1767  000100                     __pbssBANK1:
  1768                           	opt callstack 0
  1769  000100                     _C:
  1770                           	opt callstack 0
  1771  000100                     	ds	120
  1772  000178                     _dbuf:
  1773                           	opt callstack 0
  1774  000178                     	ds	80
  1775  0001C8                     _seed:
  1776                           	opt callstack 0
  1777  0001C8                     	ds	8
  1778                           
  1779                           	psect	dataBANK1
  1780  0001D0                     __pdataBANK1:
  1781                           	opt callstack 0
  1782  0001D0                     _port_data:
  1783                           	opt callstack 0
  1784  0001D0                     	ds	16
  1785                           
  1786                           	psect	bssBANK2
  1787  0002BB                     __pbssBANK2:
  1788                           	opt callstack 0
  1789  0002BB                     _uart1TxBuffer:
  1790                           	opt callstack 0
  1791  0002BB                     	ds	64
  1792                           
  1793                           	psect	dataBANK2
  1794  000200                     __pdataBANK2:
  1795                           	opt callstack 0
  1796  000200                     _V:
  1797                           	opt callstack 0
  1798  000200                     	ds	187
  1799                           
  1800                           	psect	bssBANK3
  1801  000300                     __pbssBANK3:
  1802                           	opt callstack 0
  1803  000300                     lp_filter@smooth:
  1804                           	opt callstack 0
  1805  000300                     	ds	80
  1806  000350                     _uart2TxBuffer:
  1807                           	opt callstack 0
  1808  000350                     	ds	64
  1809  000390                     _ring_buf1:
  1810                           	opt callstack 0
  1811  000390                     	ds	67
  1812                           
  1813                           	psect	bssBANK4
  1814  000400                     __pbssBANK4:
  1815                           	opt callstack 0
  1816  000400                     _ring_buf2:
  1817                           	opt callstack 0
  1818  000400                     	ds	67
  1819                           
  1820                           	psect	bssBANK5
  1821  000500                     __pbssBANK5:
  1822                           	opt callstack 0
  1823  000500                     _D:
  1824                           	opt callstack 0
  1825  000500                     	ds	218
  1826                           
  1827                           	psect	bssBANK6
  1828  000600                     __pbssBANK6:
  1829                           	opt callstack 0
  1830  000600                     _uart1RxBuffer:
  1831                           	opt callstack 0
  1832  000600                     	ds	255
  1833                           
  1834                           	psect	bssBANK7
  1835  000700                     __pbssBANK7:
  1836                           	opt callstack 0
  1837  000700                     _uart2RxBuffer:
  1838                           	opt callstack 0
  1839  000700                     	ds	255
  1840                           
  1841                           	psect	cstackBANK1
  1842  0001E0                     __pcstackBANK1:
  1843                           	opt callstack 0
  1844  0001E0                     ??_TMR5_ISR:
  1845                           
  1846                           ; 1 bytes @ 0x0
  1847  0001E0                     	ds	4
  1848                           
  1849                           	psect	cstackBANK0
  1850  0000F6                     __pcstackBANK0:
  1851                           	opt callstack 0
  1852  0000F6                     ??_INT1_ISR:
  1853                           
  1854                           ; 1 bytes @ 0x0
  1855  0000F6                     	ds	4
  1856                           
  1857                           	psect	cstackCOMRAM
  1858  000052                     __pcstackCOMRAM:
  1859                           	opt callstack 0
  1860  000052                     ??_ADCC_ThresholdISR:
  1861  000052                     
  1862                           ; 1 bytes @ 0x0
  1863  000052                     	ds	5
  1864  000057                     ??_TMR6_ISR:
  1865                           
  1866                           ; 1 bytes @ 0x5
  1867  000057                     	ds	1
  1868  000058                     
  1869                           ; 1 bytes @ 0x6
  1870 ;;
  1871 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1872 ;;
  1873 ;; *************** function _main *****************
  1874 ;; Defined at:
  1875 ;;		line 158 in file "main.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  mode            1  [STACK] enum E17005
  1880 ;;  k               1    0        unsigned char 
  1881 ;;  j               1    0        unsigned char 
  1882 ;;  i               1    0        unsigned char 
  1883 ;;  inp_index       1    0        unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1  [STACK] void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 1/1
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels required when called:   19
  1899 ;; This function calls:
  1900 ;;		_SYSTEM_Initialize
  1901 ;;		_StartTimer
  1902 ;;		_TimerDone
  1903 ;;		_WaitMs
  1904 ;;		_calc_model_data
  1905 ;;		_check_adc_scan
  1906 ;;		_check_help
  1907 ;;		_clear_adc_scan
  1908 ;;		_convert_adc_data
  1909 ;;		_eaDogM_WriteCommand
  1910 ;;		_get_switch
  1911 ;;		_get_vterm_ptr
  1912 ;;		_init_display
  1913 ;;		_mode_lamp_dim
  1914 ;;		_set_display_info
  1915 ;;		_set_vterm
  1916 ;;		_sprintf
  1917 ;;		_srand
  1918 ;;		_start_adc_scan
  1919 ;;		_start_switch_handler
  1920 ;;		_update_lcd
  1921 ;; This function is called by:
  1922 ;;		Startup code after reset
  1923 ;; This function uses a reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text0
  1927  0132E2                     __ptext0:
  1928                           	opt callstack 0
  1929  0132E2                     _main:
  1930                           	opt callstack 0
  1931                           
  1932                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1933  0132E2  52E6               	movf	postinc1,f,c
  1934                           
  1935                           ;main.c: 163:  SYSTEM_Initialize();
  1936                           
  1937                           ;incstack = 0
  1938  0132E4  ECA8  F0BE         	call	_SYSTEM_Initialize	;wreg free
  1939                           
  1940                           ; BSR set to: 60
  1941                           ;main.c: 166:  (INTCON0bits.GIEH = 1);
  1942  0132E8  8ED2               	bsf	210,7,c	;volatile
  1943                           
  1944                           ; BSR set to: 60
  1945                           ;main.c: 169:  (INTCON0bits.GIEL = 1);
  1946  0132EA  8CD2               	bsf	210,6,c	;volatile
  1947                           
  1948                           ; BSR set to: 60
  1949                           ;main.c: 171:  V.ui_state = UI_STATE_INIT;
  1950  0132EC  0102               	movlb	2	; () banked
  1951  0132EE  6B00               	clrf	_V& (0+255),b	;volatile
  1952                           
  1953                           ; BSR set to: 2
  1954                           ;main.c: 176:  WaitMs(300);
  1955  0132F0  0E2C               	movlw	44
  1956  0132F2  6EE6               	movwf	postinc1,c
  1957  0132F4  0E01               	movlw	1
  1958  0132F6  6EE6               	movwf	postinc1,c
  1959  0132F8  ECCD  F0BF         	call	_WaitMs	;wreg free
  1960                           
  1961                           ;main.c: 177:  if (PORTBbits.RB0) {
  1962  0132FC  A0CB               	btfss	203,0,c	;volatile
  1963  0132FE  D004               	goto	l10257
  1964                           
  1965                           ;main.c: 178:   mode = UI_STATE_HOST;
  1966                           ;stkvar	_mode @ sp[(-1)+0]
  1967  013300  0EFF               	movlw	-1
  1968  013302  6AE3               	clrf	plusw1,c
  1969  013304  2AE3               	incf	plusw1,f,c
  1970                           
  1971                           ;main.c: 179:  } else {
  1972  013306  D004               	goto	l10259
  1973  013308                     l10257:
  1974                           
  1975                           ;main.c: 180:   mode = UI_STATE_LOG;
  1976                           ;stkvar	_mode @ sp[(-1)+0]
  1977  013308  0EFF               	movlw	-1
  1978  01330A  6AE3               	clrf	plusw1,c
  1979  01330C  80E3               	bsf	plusw1,0,c
  1980  01330E  82E3               	bsf	plusw1,1,c	;indir
  1981  013310                     l10259:
  1982                           
  1983                           ;main.c: 183:  if (mode == UI_STATE_HOST) {
  1984                           ;stkvar	_mode @ sp[(-1)+0]
  1985  013310  0EFF               	movlw	-1
  1986  013312  04E3               	decf	plusw1,w,c
  1987  013314  A4D8               	btfss	status,2,c
  1988  013316  D007               	goto	l1246
  1989                           
  1990                           ;main.c: 184:   do { LATDbits.LATD0 = 1; } while(0);
  1991  013318  80BD               	bsf	189,0,c	;volatile
  1992                           
  1993                           ;main.c: 185:   V.mode_pwm = 70;
  1994  01331A  0E00               	movlw	0
  1995  01331C  0102               	movlb	2	; () banked
  1996  01331E  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1997  013320  0E46               	movlw	70
  1998  013322  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1999                           
  2000                           ;main.c: 186:  } else {
  2001  013324  D004               	goto	l10263
  2002  013326                     l1246:
  2003  013326  90BD               	bcf	189,0,c	;volatile
  2004                           
  2005                           ;main.c: 188:   V.mode_pwm = 0;
  2006  013328  0102               	movlb	2	; () banked
  2007  01332A  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2008  01332C  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2009  01332E                     l10263:
  2010                           
  2011                           ; BSR set to: 2
  2012                           ;main.c: 190:  mode_lamp_dim(V.mode_pwm);
  2013  01332E  0060  FA57  FFE6   	movff	_V+149,postinc1
  2014  013334  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2015  01333A  EC6B  F0C3         	call	_mode_lamp_dim	;wreg free
  2016  01333E  D0D0               	goto	l10307
  2017  013340                     l10265:
  2018                           
  2019                           ; BSR set to: 2
  2020                           ;main.c: 201:    init_display();
  2021  013340  EC90  F0B6         	call	_init_display	;wreg free
  2022                           
  2023                           ; BSR set to: 61
  2024                           ;main.c: 202:    eaDogM_WriteCommand(0b00001100);
  2025  013344  0E0C               	movlw	12
  2026  013346  6EE6               	movwf	postinc1,c
  2027  013348  ECC7  F0C3         	call	_eaDogM_WriteCommand	;wreg free
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;main.c: 204:    V.ui_state = mode;
  2031                           ;stkvar	_mode @ sp[(-1)+0]
  2032  01334C  0EFF               	movlw	-1
  2033  01334E  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 205:    srand(1957);
  2037  013354  0EA5               	movlw	165
  2038  013356  6EE6               	movwf	postinc1,c
  2039  013358  0E07               	movlw	7
  2040  01335A  6EE6               	movwf	postinc1,c
  2041  01335C  EC03  F0C0         	call	_srand	;wreg free
  2042                           
  2043                           ; BSR set to: 1
  2044                           ;main.c: 206:    set_vterm(0);
  2045  013360  0E00               	movlw	0
  2046  013362  6EE6               	movwf	postinc1,c
  2047  013364  EC42  F0C3         	call	_set_vterm	;wreg free
  2048                           
  2049                           ; BSR set to: 5
  2050                           ;main.c: 207:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2051  013368  0E82               	movlw	low STR_1
  2052  01336A  6EE6               	movwf	postinc1,c
  2053  01336C  0EFF               	movlw	high STR_1
  2054  01336E  6EE6               	movwf	postinc1,c
  2055  013370  0E00               	movlw	0
  2056  013372  6EE6               	movwf	postinc1,c
  2057  013374  0E00               	movlw	0
  2058  013376  6EE6               	movwf	postinc1,c
  2059  013378  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2060  01337C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2061  013382  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2062  013388  0E04               	movlw	4
  2063  01338A  6EE6               	movwf	postinc1,c
  2064  01338C  EC91  F0B5         	call	_sprintf	;wreg free
  2065                           
  2066                           ;main.c: 208:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.98");
  2067  013390  0EE1               	movlw	low STR_3
  2068  013392  6EE6               	movwf	postinc1,c
  2069  013394  0EFF               	movlw	high STR_3
  2070  013396  6EE6               	movwf	postinc1,c
  2071  013398  0EB3               	movlw	low STR_2
  2072  01339A  6EE6               	movwf	postinc1,c
  2073  01339C  0EFF               	movlw	high STR_2
  2074  01339E  6EE6               	movwf	postinc1,c
  2075  0133A0  0E00               	movlw	0
  2076  0133A2  6EE6               	movwf	postinc1,c
  2077  0133A4  0E01               	movlw	1
  2078  0133A6  6EE6               	movwf	postinc1,c
  2079  0133A8  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2080  0133AC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2081  0133B2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2082  0133B8  0E06               	movlw	6
  2083  0133BA  6EE6               	movwf	postinc1,c
  2084  0133BC  EC91  F0B5         	call	_sprintf	;wreg free
  2085                           
  2086                           ;main.c: 209:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2087  0133C0  0E71               	movlw	low STR_4
  2088  0133C2  6EE6               	movwf	postinc1,c
  2089  0133C4  0EFF               	movlw	high STR_4
  2090  0133C6  6EE6               	movwf	postinc1,c
  2091  0133C8  0E00               	movlw	0
  2092  0133CA  6EE6               	movwf	postinc1,c
  2093  0133CC  0E02               	movlw	2
  2094  0133CE  6EE6               	movwf	postinc1,c
  2095  0133D0  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2096  0133D4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2097  0133DA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2098  0133E0  0E04               	movlw	4
  2099  0133E2  6EE6               	movwf	postinc1,c
  2100  0133E4  EC91  F0B5         	call	_sprintf	;wreg free
  2101                           
  2102                           ;main.c: 210:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2103  0133E8  0E93               	movlw	low STR_5
  2104  0133EA  6EE6               	movwf	postinc1,c
  2105  0133EC  0EFF               	movlw	high STR_5
  2106  0133EE  6EE6               	movwf	postinc1,c
  2107  0133F0  0E02               	movlw	2
  2108  0133F2  6EE6               	movwf	postinc1,c
  2109  0133F4  0E00               	movlw	0
  2110  0133F6  6EE6               	movwf	postinc1,c
  2111  0133F8  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2112  0133FC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2113  013402  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2114  013408  0E04               	movlw	4
  2115  01340A  6EE6               	movwf	postinc1,c
  2116  01340C  EC91  F0B5         	call	_sprintf	;wreg free
  2117                           
  2118                           ;main.c: 211:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.98");
  2119  013410  0EE1               	movlw	low STR_3
  2120  013412  6EE6               	movwf	postinc1,c
  2121  013414  0EFF               	movlw	high STR_3
  2122  013416  6EE6               	movwf	postinc1,c
  2123  013418  0EB3               	movlw	low STR_2
  2124  01341A  6EE6               	movwf	postinc1,c
  2125  01341C  0EFF               	movlw	high STR_2
  2126  01341E  6EE6               	movwf	postinc1,c
  2127  013420  0E02               	movlw	2
  2128  013422  6EE6               	movwf	postinc1,c
  2129  013424  0E01               	movlw	1
  2130  013426  6EE6               	movwf	postinc1,c
  2131  013428  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2132  01342C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2133  013432  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2134  013438  0E06               	movlw	6
  2135  01343A  6EE6               	movwf	postinc1,c
  2136  01343C  EC91  F0B5         	call	_sprintf	;wreg free
  2137                           
  2138                           ;main.c: 212:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2139  013440  0E60               	movlw	low STR_8
  2140  013442  6EE6               	movwf	postinc1,c
  2141  013444  0EFF               	movlw	high STR_8
  2142  013446  6EE6               	movwf	postinc1,c
  2143  013448  0E02               	movlw	2
  2144  01344A  6EE6               	movwf	postinc1,c
  2145  01344C  0E02               	movlw	2
  2146  01344E  6EE6               	movwf	postinc1,c
  2147  013450  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2148  013454  0060  F0CB  FFE6   	movff	btemp,postinc1
  2149  01345A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2150  013460  0E04               	movlw	4
  2151  013462  6EE6               	movwf	postinc1,c
  2152  013464  EC91  F0B5         	call	_sprintf	;wreg free
  2153                           
  2154                           ;main.c: 213:    update_lcd(0);
  2155  013468  0E00               	movlw	0
  2156  01346A  6EE6               	movwf	postinc1,c
  2157  01346C  EC0A  F0B5         	call	_update_lcd	;wreg free
  2158                           
  2159                           ;main.c: 214:    WaitMs(3000);
  2160  013470  0EB8               	movlw	184
  2161  013472  6EE6               	movwf	postinc1,c
  2162  013474  0E0B               	movlw	11
  2163  013476  6EE6               	movwf	postinc1,c
  2164  013478  ECCD  F0BF         	call	_WaitMs	;wreg free
  2165                           
  2166                           ;main.c: 215:    StartTimer(TMR_DISPLAY, 250);
  2167  01347C  0EFA               	movlw	250
  2168  01347E  6EE6               	movwf	postinc1,c
  2169  013480  0E00               	movlw	0
  2170  013482  6EE6               	movwf	postinc1,c
  2171  013484  0E0A               	movlw	10
  2172  013486  6EE6               	movwf	postinc1,c
  2173  013488  EC93  F0BF         	call	_StartTimer	;wreg free
  2174                           
  2175                           ;main.c: 216:    StartTimer(TMR_ADC, 200);
  2176  01348C  0EC8               	movlw	200
  2177  01348E  6EE6               	movwf	postinc1,c
  2178  013490  0E00               	movlw	0
  2179  013492  6EE6               	movwf	postinc1,c
  2180  013494  0E01               	movlw	1
  2181  013496  6EE6               	movwf	postinc1,c
  2182  013498  EC93  F0BF         	call	_StartTimer	;wreg free
  2183                           
  2184                           ;main.c: 217:    StartTimer(TMR_INFO, 3000);
  2185  01349C  0EB8               	movlw	184
  2186  01349E  6EE6               	movwf	postinc1,c
  2187  0134A0  0E0B               	movlw	11
  2188  0134A2  6EE6               	movwf	postinc1,c
  2189  0134A4  0E07               	movlw	7
  2190  0134A6  6EE6               	movwf	postinc1,c
  2191  0134A8  EC93  F0BF         	call	_StartTimer	;wreg free
  2192                           
  2193                           ;main.c: 218:    StartTimer(TMR_FLIPPER, 1500);
  2194  0134AC  0EDC               	movlw	220
  2195  0134AE  6EE6               	movwf	postinc1,c
  2196  0134B0  0E05               	movlw	5
  2197  0134B2  6EE6               	movwf	postinc1,c
  2198  0134B4  0E0B               	movlw	11
  2199  0134B6  6EE6               	movwf	postinc1,c
  2200  0134B8  EC93  F0BF         	call	_StartTimer	;wreg free
  2201                           
  2202                           ;main.c: 219:    StartTimer(TMR_HELPDIS, 3000);
  2203  0134BC  0EB8               	movlw	184
  2204  0134BE  6EE6               	movwf	postinc1,c
  2205  0134C0  0E0B               	movlw	11
  2206  0134C2  6EE6               	movwf	postinc1,c
  2207  0134C4  0E09               	movlw	9
  2208  0134C6  6EE6               	movwf	postinc1,c
  2209  0134C8  EC93  F0BF         	call	_StartTimer	;wreg free
  2210                           
  2211                           ;main.c: 221:    start_adc_scan();
  2212  0134CC  EC6F  F0BC         	call	_start_adc_scan	;wreg free
  2213                           
  2214                           ;main.c: 222:    start_switch_handler();
  2215  0134D0  ECD9  F0C2         	call	_start_switch_handler	;wreg free
  2216                           
  2217                           ;main.c: 224:    break;
  2218  0134D4  D01C               	goto	l10309
  2219  0134D6                     l1254:
  2220                           
  2221                           ; BSR set to: 2
  2222                           ;main.c: 230:    P.SYSTEM_STABLE = 1;
  2223  0134D6  0100               	movlb	0	; () banked
  2224  0134D8  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2225                           
  2226                           ;main.c: 231:    break;
  2227  0134DA  D019               	goto	l10309
  2228  0134DC                     l1256:
  2229                           
  2230                           ; BSR set to: 2
  2231                           ;main.c: 234:    V.ui_state = UI_STATE_INIT;
  2232  0134DC  6B00               	clrf	_V& (0+255),b	;volatile
  2233                           
  2234                           ;main.c: 235:    break;
  2235  0134DE  D017               	goto	l10309
  2236  0134E0                     l10307:
  2237  0134E0  0102               	movlb	2	; () banked
  2238  0134E2  5100               	movf	_V& (0+255),w,b	;volatile
  2239  0134E4  6E3C               	movwf	(btemp+10)^0,c
  2240  0134E6  6A3D               	clrf	(btemp+11)^0,c
  2241                           
  2242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2243                           ; Switch size 1, requested type "simple"
  2244                           ; Number of cases is 1, Range of values is 0 to 0
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; simple_byte            4     3 (average)
  2248                           ;	Chosen strategy is simple_byte
  2249  0134E8  503D               	movf	(btemp+11)^0,w,c
  2250  0134EA  0A00               	xorlw	0	; case 0
  2251  0134EC  A4D8               	btfss	status,2,c
  2252  0134EE  D7F6               	goto	l1256
  2253                           
  2254                           ; BSR set to: 2
  2255                           ; Switch size 1, requested type "simple"
  2256                           ; Number of cases is 5, Range of values is 0 to 5
  2257                           ; switch strategies available:
  2258                           ; Name         Instructions Cycles
  2259                           ; simple_byte           16     9 (average)
  2260                           ;	Chosen strategy is simple_byte
  2261  0134F0  503C               	movf	(btemp+10)^0,w,c
  2262  0134F2  0A00               	xorlw	0	; case 0
  2263  0134F4  B4D8               	btfsc	status,2,c
  2264  0134F6  D724               	goto	l10265
  2265  0134F8  0A01               	xorlw	1	; case 1
  2266  0134FA  B4D8               	btfsc	status,2,c
  2267  0134FC  D008               	goto	l10309
  2268  0134FE  0A02               	xorlw	2	; case 3
  2269  013500  B4D8               	btfsc	status,2,c
  2270  013502  D005               	goto	l10309
  2271  013504  0A07               	xorlw	7	; case 4
  2272  013506  B4D8               	btfsc	status,2,c
  2273  013508  D7E6               	goto	l1254
  2274  01350A  0A01               	xorlw	1	; case 5
  2275  01350C  D7E7               	goto	l1256
  2276  01350E                     l10309:
  2277                           
  2278                           ;main.c: 238:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2279  01350E  0E01               	movlw	1
  2280  013510  6EE6               	movwf	postinc1,c
  2281  013512  EC81  F0C2         	call	_TimerDone	;wreg free
  2282  013516  5032               	movf	btemp^0,w,c
  2283  013518  B4D8               	btfsc	status,2,c
  2284  01351A  D013               	goto	l10321
  2285  01351C  EC07  F0C4         	call	_check_adc_scan	;wreg free
  2286  013520  5032               	movf	btemp^0,w,c
  2287  013522  B4D8               	btfsc	status,2,c
  2288  013524  D00E               	goto	l10321
  2289                           
  2290                           ;main.c: 242:    convert_adc_data();
  2291  013526  EC61  F0BB         	call	_convert_adc_data	;wreg free
  2292                           
  2293                           ;main.c: 246:    clear_adc_scan();
  2294  01352A  EC0F  F0C4         	call	_clear_adc_scan	;wreg free
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;main.c: 247:    start_adc_scan();
  2298  01352E  EC6F  F0BC         	call	_start_adc_scan	;wreg free
  2299                           
  2300                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  2301  013532  0EC8               	movlw	200
  2302  013534  6EE6               	movwf	postinc1,c
  2303  013536  0E00               	movlw	0
  2304  013538  6EE6               	movwf	postinc1,c
  2305  01353A  0E01               	movlw	1
  2306  01353C  6EE6               	movwf	postinc1,c
  2307  01353E  EC93  F0BF         	call	_StartTimer	;wreg free
  2308  013542                     l10321:
  2309                           
  2310                           ;main.c: 255:   if (TimerDone(TMR_DISPLAY)) {
  2311                           
  2312                           ;main.c: 251:   if (V.ticks) {
  2313  013542  0E0A               	movlw	10
  2314  013544  6EE6               	movwf	postinc1,c
  2315  013546  EC81  F0C2         	call	_TimerDone	;wreg free
  2316  01354A  5032               	movf	btemp^0,w,c
  2317  01354C  B4D8               	btfsc	status,2,c
  2318  01354E  D105               	goto	l10341
  2319                           
  2320                           ;main.c: 256:    if (TimerDone(TMR_HELPDIS)) {
  2321  013550  0E09               	movlw	9
  2322  013552  6EE6               	movwf	postinc1,c
  2323  013554  EC81  F0C2         	call	_TimerDone	;wreg free
  2324  013558  5032               	movf	btemp^0,w,c
  2325  01355A  B4D8               	btfsc	status,2,c
  2326  01355C  D004               	goto	l10329
  2327                           
  2328                           ;main.c: 257:     set_display_info(DIS_STR);
  2329  01355E  0E00               	movlw	0
  2330  013560  6EE6               	movwf	postinc1,c
  2331  013562  EC07  F0C3         	call	_set_display_info	;wreg free
  2332  013566                     l10329:
  2333                           
  2334                           ;main.c: 259:    calc_model_data();
  2335  013566  EC7C  F0AB         	call	_calc_model_data	;wreg free
  2336                           
  2337                           ;main.c: 266:    if (get_switch(SSELECT)) {
  2338  01356A  0E02               	movlw	2
  2339  01356C  6EE6               	movwf	postinc1,c
  2340  01356E  EC41  F0C1         	call	_get_switch	;wreg free
  2341  013572  5032               	movf	btemp^0,w,c
  2342  013574  B4D8               	btfsc	status,2,c
  2343  013576  D061               	goto	l10335
  2344                           
  2345                           ;main.c: 267:     sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2346  013578  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2347  01357E  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2348  013584  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2349  01358A  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2350  013590  0EEE               	movlw	low STR_9
  2351  013592  6EE6               	movwf	postinc1,c
  2352  013594  0EFE               	movlw	high STR_9
  2353  013596  6EE6               	movwf	postinc1,c
  2354  013598  0E00               	movlw	0
  2355  01359A  6EE6               	movwf	postinc1,c
  2356  01359C  0E00               	movlw	0
  2357  01359E  6EE6               	movwf	postinc1,c
  2358  0135A0  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2359  0135A4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2360  0135AA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2361  0135B0  0E08               	movlw	8
  2362  0135B2  6EE6               	movwf	postinc1,c
  2363  0135B4  EC91  F0B5         	call	_sprintf	;wreg free
  2364                           
  2365                           ;main.c: 268:     sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2366  0135B8  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2367  0135BE  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2368  0135C4  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2369  0135CA  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2370  0135D0  0E14               	movlw	low STR_10
  2371  0135D2  6EE6               	movwf	postinc1,c
  2372  0135D4  0EFF               	movlw	high STR_10
  2373  0135D6  6EE6               	movwf	postinc1,c
  2374  0135D8  0E00               	movlw	0
  2375  0135DA  6EE6               	movwf	postinc1,c
  2376  0135DC  0E01               	movlw	1
  2377  0135DE  6EE6               	movwf	postinc1,c
  2378  0135E0  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2379  0135E4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2380  0135EA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2381  0135F0  0E08               	movlw	8
  2382  0135F2  6EE6               	movwf	postinc1,c
  2383  0135F4  EC91  F0B5         	call	_sprintf	;wreg free
  2384                           
  2385                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2386  0135F8  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2387  0135FE  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2388  013604  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2389  01360A  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2390  013610  0E01               	movlw	low STR_11
  2391  013612  6EE6               	movwf	postinc1,c
  2392  013614  0EFF               	movlw	high STR_11
  2393  013616  6EE6               	movwf	postinc1,c
  2394  013618  0E00               	movlw	0
  2395  01361A  6EE6               	movwf	postinc1,c
  2396  01361C  0E02               	movlw	2
  2397  01361E  6EE6               	movwf	postinc1,c
  2398  013620  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2399  013624  0060  F0CB  FFE6   	movff	btemp,postinc1
  2400  01362A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2401  013630  0E08               	movlw	8
  2402  013632  6EE6               	movwf	postinc1,c
  2403  013634  EC91  F0B5         	call	_sprintf	;wreg free
  2404                           
  2405                           ;main.c: 270:    } else {
  2406  013638  D084               	goto	l10337
  2407  01363A                     l10335:
  2408                           
  2409                           ;main.c: 271:     sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.cal
      +                          c[C_PV]);
  2410  01363A  0060  F413  FFE6   	movff	_C+4,postinc1
  2411  013640  0060  F417  FFE6   	movff	_C+5,postinc1
  2412  013646  0060  F41B  FFE6   	movff	_C+6,postinc1
  2413  01364C  0060  F41F  FFE6   	movff	_C+7,postinc1
  2414  013652  0060  F453  FFE6   	movff	_C+20,postinc1
  2415  013658  0060  F457  FFE6   	movff	_C+21,postinc1
  2416  01365E  0060  F45B  FFE6   	movff	_C+22,postinc1
  2417  013664  0060  F45F  FFE6   	movff	_C+23,postinc1
  2418  01366A  0E4D               	movlw	low STR_12
  2419  01366C  6EE6               	movwf	postinc1,c
  2420  01366E  0EFF               	movlw	high STR_12
  2421  013670  6EE6               	movwf	postinc1,c
  2422  013672  0E00               	movlw	0
  2423  013674  6EE6               	movwf	postinc1,c
  2424  013676  0E00               	movlw	0
  2425  013678  6EE6               	movwf	postinc1,c
  2426  01367A  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2427  01367E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2428  013684  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2429  01368A  0E0C               	movlw	12
  2430  01368C  6EE6               	movwf	postinc1,c
  2431  01368E  EC91  F0B5         	call	_sprintf	;wreg free
  2432                           
  2433                           ;main.c: 272:     sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.ca
      +                          lc[C_BATT]);
  2434  013692  0060  F403  FFE6   	movff	_C,postinc1
  2435  013698  0060  F407  FFE6   	movff	_C+1,postinc1
  2436  01369E  0060  F40B  FFE6   	movff	_C+2,postinc1
  2437  0136A4  0060  F40F  FFE6   	movff	_C+3,postinc1
  2438  0136AA  0060  F443  FFE6   	movff	_C+16,postinc1
  2439  0136B0  0060  F447  FFE6   	movff	_C+17,postinc1
  2440  0136B6  0060  F44B  FFE6   	movff	_C+18,postinc1
  2441  0136BC  0060  F44F  FFE6   	movff	_C+19,postinc1
  2442  0136C2  0E27               	movlw	low STR_13
  2443  0136C4  6EE6               	movwf	postinc1,c
  2444  0136C6  0EFF               	movlw	high STR_13
  2445  0136C8  6EE6               	movwf	postinc1,c
  2446  0136CA  0E00               	movlw	0
  2447  0136CC  6EE6               	movwf	postinc1,c
  2448  0136CE  0E01               	movlw	1
  2449  0136D0  6EE6               	movwf	postinc1,c
  2450  0136D2  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2451  0136D6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2452  0136DC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2453  0136E2  0E0C               	movlw	12
  2454  0136E4  6EE6               	movwf	postinc1,c
  2455  0136E6  EC91  F0B5         	call	_sprintf	;wreg free
  2456                           
  2457                           ;main.c: 273:     sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_l
      +                          oad);
  2458  0136EA  0060  F503  FFE6   	movff	_C+64,postinc1
  2459  0136F0  0060  F507  FFE6   	movff	_C+65,postinc1
  2460  0136F6  0060  F50B  FFE6   	movff	_C+66,postinc1
  2461  0136FC  0060  F50F  FFE6   	movff	_C+67,postinc1
  2462  013702  0060  F423  FFE6   	movff	_C+8,postinc1
  2463  013708  0060  F427  FFE6   	movff	_C+9,postinc1
  2464  01370E  0060  F42B  FFE6   	movff	_C+10,postinc1
  2465  013714  0060  F42F  FFE6   	movff	_C+11,postinc1
  2466  01371A  0E3A               	movlw	low STR_14
  2467  01371C  6EE6               	movwf	postinc1,c
  2468  01371E  0EFF               	movlw	high STR_14
  2469  013720  6EE6               	movwf	postinc1,c
  2470  013722  0E00               	movlw	0
  2471  013724  6EE6               	movwf	postinc1,c
  2472  013726  0E02               	movlw	2
  2473  013728  6EE6               	movwf	postinc1,c
  2474  01372A  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  2475  01372E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2476  013734  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2477  01373A  0E0C               	movlw	12
  2478  01373C  6EE6               	movwf	postinc1,c
  2479  01373E  EC91  F0B5         	call	_sprintf	;wreg free
  2480  013742                     l10337:
  2481                           
  2482                           ;main.c: 276:    StartTimer(TMR_DISPLAY, 250);
  2483  013742  0EFA               	movlw	250
  2484  013744  6EE6               	movwf	postinc1,c
  2485  013746  0E00               	movlw	0
  2486  013748  6EE6               	movwf	postinc1,c
  2487  01374A  0E0A               	movlw	10
  2488  01374C  6EE6               	movwf	postinc1,c
  2489  01374E  EC93  F0BF         	call	_StartTimer	;wreg free
  2490                           
  2491                           ;main.c: 277:    update_lcd(0);
  2492  013752  0E00               	movlw	0
  2493  013754  6EE6               	movwf	postinc1,c
  2494  013756  EC0A  F0B5         	call	_update_lcd	;wreg free
  2495  01375A                     l10341:
  2496                           
  2497                           ;main.c: 283:   if (check_help(V.flipper)) {
  2498  01375A  0102               	movlb	2	; () banked
  2499  01375C  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2500  01375E  6EE6               	movwf	postinc1,c
  2501  013760  EC68  F0AA         	call	_check_help	;wreg free
  2502                           
  2503                           ;main.c: 319:   if (V.set_sequ) {
  2504                           
  2505                           ;main.c: 314:   };
  2506  013764  0102               	movlb	2	; () banked
  2507  013766  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2508  013768  D6BB               	goto	l10307
  2509                           
  2510                           ; BSR set to: 2
  2511                           ;main.c: 320:    if (TimerDone(TMR_INFO)) {
  2512  01376A  0E07               	movlw	7
  2513  01376C  6EE6               	movwf	postinc1,c
  2514  01376E  EC81  F0C2         	call	_TimerDone	;wreg free
  2515  013772  5032               	movf	btemp^0,w,c
  2516  013774  B4D8               	btfsc	status,2,c
  2517  013776  D00B               	goto	l10351
  2518                           
  2519                           ;main.c: 321:     V.set_sequ = 0;
  2520  013778  0102               	movlb	2	; () banked
  2521  01377A  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2522                           
  2523                           ; BSR set to: 2
  2524                           ;main.c: 322:     set_vterm(0);
  2525  01377C  0E00               	movlw	0
  2526  01377E  6EE6               	movwf	postinc1,c
  2527  013780  EC42  F0C3         	call	_set_vterm	;wreg free
  2528                           
  2529                           ; BSR set to: 5
  2530                           ;main.c: 323:     update_lcd(0);
  2531  013784  0E00               	movlw	0
  2532  013786  6EE6               	movwf	postinc1,c
  2533  013788  EC0A  F0B5         	call	_update_lcd	;wreg free
  2534                           
  2535                           ;main.c: 324:    } else {
  2536  01378C  D6A9               	goto	l10307
  2537  01378E                     l10351:
  2538                           
  2539                           ;main.c: 325:     set_vterm(2);
  2540  01378E  0E02               	movlw	2
  2541  013790  6EE6               	movwf	postinc1,c
  2542  013792  EC42  F0C3         	call	_set_vterm	;wreg free
  2543                           
  2544                           ; BSR set to: 5
  2545                           ;main.c: 326:     update_lcd(2);
  2546  013796  0E02               	movlw	2
  2547  013798  6EE6               	movwf	postinc1,c
  2548  01379A  EC0A  F0B5         	call	_update_lcd	;wreg free
  2549  01379E  D6A0               	goto	l10307
  2550  0137A0                     __end_of_main:
  2551                           	opt callstack 0
  2552                           
  2553 ;; *************** function _start_switch_handler *****************
  2554 ;; Defined at:
  2555 ;;		line 119 in file "dio.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1  [STACK] void 
  2562 ;; Registers used:
  2563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2564 ;; Tracked objects:
  2565 ;;		On entry : 1/4
  2566 ;;		On exit  : 3F/39
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2573 ;;Total ram usage:        0 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    7
  2576 ;; This function calls:
  2577 ;;		_INT1_SetInterruptHandler
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text1
  2584  0185B2                     __ptext1:
  2585                           	opt callstack 0
  2586  0185B2                     _start_switch_handler:
  2587                           	opt callstack 23
  2588                           
  2589                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2590                           
  2591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2592                           ;incstack = 0
  2593  0185B2  0139               	movlb	57	; () banked
  2594  0185B4  9195               	bcf	149,0,b	;volatile
  2595                           
  2596                           ; BSR set to: 57
  2597                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2598  0185B6  0E4E               	movlw	low _switch_handler
  2599  0185B8  6EE6               	movwf	postinc1,c
  2600  0185BA  0E64               	movlw	high _switch_handler
  2601  0185BC  6EE6               	movwf	postinc1,c
  2602  0185BE  0E01               	movlw	low (_switch_handler shr (0+16))
  2603  0185C0  6EE6               	movwf	postinc1,c
  2604  0185C2  ECCD  F0C1         	call	_INT1_SetInterruptHandler	;wreg free
  2605                           
  2606                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2607  0185C6  0E02               	movlw	2
  2608  0185C8  0100               	movlb	0	; () banked
  2609  0185CA  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2613  0185CC  0139               	movlb	57	; () banked
  2614  0185CE  8195               	bsf	149,0,b	;volatile
  2615                           
  2616                           ; BSR set to: 57
  2617                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2618  0185D0  0012               	return		;funcret
  2619  0185D2                     __end_of_start_switch_handler:
  2620                           	opt callstack 0
  2621                           
  2622 ;; *************** function _start_adc_scan *****************
  2623 ;; Defined at:
  2624 ;;		line 33 in file "daq.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1  [STACK] _Bool 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/5
  2635 ;;		On exit  : 1/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2642 ;;Total ram usage:        0 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    7
  2645 ;; This function calls:
  2646 ;;		_ADCC_DischargeSampleCapacitor
  2647 ;;		_ADCC_SetADIInterruptHandler
  2648 ;;		_ADCC_SetADTIInterruptHandler
  2649 ;;		_ADCC_StartConversion
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text2
  2656  0178DE                     __ptext2:
  2657                           	opt callstack 0
  2658  0178DE                     _start_adc_scan:
  2659                           	opt callstack 23
  2660                           
  2661                           ;daq.c: 35:  if (R.done)
  2662                           
  2663                           ; BSR set to: 57
  2664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2665                           ;incstack = 0
  2666  0178DE  0100               	movlb	0	; () banked
  2667  0178E0  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2668  0178E2  A4D8               	btfss	status,2,c
  2669  0178E4  0012               	return	
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;daq.c: 38:  R.scan_index = 0;
  2673  0178E6  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2677  0178E8  013A               	movlb	58	; () banked
  2678  0178EA  5140               	movf	64,w,b	;volatile
  2679  0178EC  006E F940  F032    	movff	14928,btemp	;volatile
  2680  0178F2  6A33               	clrf	(btemp+1)^0,c
  2681  0178F4  0060  F0C8  F033   	movff	btemp,btemp+1
  2682  0178FA  6A32               	clrf	btemp^0,c
  2683  0178FC  2632               	addwf	btemp^0,f,c
  2684  0178FE  0E00               	movlw	0
  2685  017900  2233               	addwfc	(btemp+1)^0,f,c
  2686  017902  0E77               	movlw	119
  2687  017904  1432               	andwf	btemp^0,w,c
  2688  017906  0100               	movlb	0	; () banked
  2689  017908  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2690  01790A  0E3C               	movlw	60
  2691  01790C  1433               	andwf	(btemp+1)^0,w,c
  2692  01790E  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2696  017910  0E3C               	movlw	low _adc_int_handler
  2697  017912  6EE6               	movwf	postinc1,c
  2698  017914  0E88               	movlw	high _adc_int_handler
  2699  017916  6EE6               	movwf	postinc1,c
  2700  017918  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2701  01791A  6EE6               	movwf	postinc1,c
  2702  01791C  EC09  F0C2         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2703                           
  2704                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2705  017920  0E44               	movlw	low _adc_int_t_handler
  2706  017922  6EE6               	movwf	postinc1,c
  2707  017924  0E76               	movlw	high _adc_int_t_handler
  2708  017926  6EE6               	movwf	postinc1,c
  2709  017928  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2710  01792A  6EE6               	movwf	postinc1,c
  2711  01792C  ECF5  F0C1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2712                           
  2713                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2714  017930  ECFB  F0C3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2715                           
  2716                           ; BSR set to: 62
  2717                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2718  017934  0100               	movlb	0	; () banked
  2719  017936  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2720  017938  0B0F               	andlw	15
  2721  01793A  6EE6               	movwf	postinc1,c
  2722  01793C  ECAE  F0C3         	call	_ADCC_StartConversion	;wreg free
  2723                           
  2724                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2725  017940  0012               	return		;funcret
  2726  017942                     __end_of_start_adc_scan:
  2727                           	opt callstack 0
  2728                           
  2729 ;; *************** function _ADCC_StartConversion *****************
  2730 ;; Defined at:
  2731 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  channel         1  [STACK] enum E16136
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1  [STACK] void 
  2738 ;; Registers used:
  2739 ;;		fsr1l, fsr1h
  2740 ;; Tracked objects:
  2741 ;;		On entry : 3F/0
  2742 ;;		On exit  : 3F/3E
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2749 ;;Total ram usage:        0 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:    6
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_start_adc_scan
  2756 ;;		_adc_int_t_handler
  2757 ;; This function uses a reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text3
  2761  01875C                     __ptext3:
  2762                           	opt callstack 0
  2763  01875C                     _ADCC_StartConversion:
  2764                           	opt callstack 6
  2765                           
  2766                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2767                           ;stkvar	_channel @ sp[(0)+-1]
  2768                           
  2769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2770                           ;incstack = 0
  2771  01875C  0EFF               	movlw	-1
  2772  01875E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2773                           
  2774                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2775  018764  013E               	movlb	62	; () banked
  2776  018766  8FF8               	bsf	248,7,b	;volatile
  2777                           
  2778                           ; BSR set to: 62
  2779                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2780  018768  81F8               	bsf	248,0,b	;volatile
  2781                           
  2782                           ; BSR set to: 62
  2783                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2784  01876A  52E5               	movf	postdec1,f,c
  2785  01876C  0012               	return		;funcret
  2786  01876E                     __end_of_ADCC_StartConversion:
  2787                           	opt callstack 0
  2788                           
  2789 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2790 ;; Defined at:
  2791 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1  [STACK] void 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 3F/3E
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    6
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_start_adc_scan
  2816 ;;		_adc_int_t_handler
  2817 ;; This function uses a reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text4
  2821  0187F6                     __ptext4:
  2822                           	opt callstack 0
  2823  0187F6                     _ADCC_DischargeSampleCapacitor:
  2824                           	opt callstack 6
  2825                           
  2826                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2827                           
  2828                           ; BSR set to: 62
  2829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2830                           ;incstack = 0
  2831  0187F6  0E3B               	movlw	59
  2832  0187F8  013E               	movlb	62	; () banked
  2833  0187FA  6FF1               	movwf	241,b	;volatile
  2834                           
  2835                           ; BSR set to: 62
  2836                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2837  0187FC  0012               	return		;funcret
  2838  0187FE                     __end_of_ADCC_DischargeSampleCapacitor:
  2839                           	opt callstack 0
  2840                           
  2841 ;; *************** function _srand *****************
  2842 ;; Defined at:
  2843 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  s               2  [STACK] unsigned int 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1  [STACK] void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2852 ;; Tracked objects:
  2853 ;;		On entry : 3F/0
  2854 ;;		On exit  : 3F/1
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2861 ;;Total ram usage:        0 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    6
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text5
  2872  018006                     __ptext5:
  2873                           	opt callstack 0
  2874  018006                     _srand:
  2875                           	opt callstack 24
  2876                           
  2877                           ;stkvar	_s @ sp[(0)+-2]
  2878                           
  2879                           ; BSR set to: 62
  2880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2881                           ;incstack = 0
  2882  018006  0EFE               	movlw	-2
  2883  018008  50E3               	movf	plusw1,w,c
  2884  01800A  0FFF               	addlw	255
  2885  01800C  6E3C               	movwf	(btemp+10)^0,c
  2886  01800E  0EFF               	movlw	-1
  2887  018010  006F FF8C  F03D    	movff	plusw1,btemp+11
  2888  018016  0EFF               	movlw	255
  2889  018018  223D               	addwfc	(btemp+11)^0,f,c
  2890  01801A  0060  F0F0  F1C8   	movff	btemp+10,_seed
  2891  018020  0060  F0F4  F1C9   	movff	btemp+11,_seed+1
  2892  018026  0101               	movlb	1	; () banked
  2893  018028  6BCA               	clrf	(_seed+2)& (0+255),b
  2894  01802A  6BCB               	clrf	(_seed+3)& (0+255),b
  2895  01802C  6BCC               	clrf	(_seed+4)& (0+255),b
  2896  01802E  6BCD               	clrf	(_seed+5)& (0+255),b
  2897  018030  6BCE               	clrf	(_seed+6)& (0+255),b
  2898  018032  6BCF               	clrf	(_seed+7)& (0+255),b
  2899                           
  2900                           ; BSR set to: 1
  2901                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2902  018034  52E5               	movf	postdec1,f,c
  2903  018036  52E5               	movf	postdec1,f,c
  2904  018038  0012               	return		;funcret
  2905  01803A                     __end_of_srand:
  2906                           	opt callstack 0
  2907                           
  2908 ;; *************** function _init_display *****************
  2909 ;; Defined at:
  2910 ;;		line 37 in file "eadog.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1  [STACK] void 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/2
  2921 ;;		On exit  : 3F/3D
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    8
  2931 ;; This function calls:
  2932 ;;		_ringBufS_init
  2933 ;;		_send_lcd_cmd
  2934 ;;		_send_lcd_cmd_long
  2935 ;;		_wdtdelay
  2936 ;; This function is called by:
  2937 ;;		_main
  2938 ;; This function uses a reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text6
  2942  016D20                     __ptext6:
  2943                           	opt callstack 0
  2944  016D20                     _init_display:
  2945                           	opt callstack 22
  2946                           
  2947                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2948                           
  2949                           ; BSR set to: 1
  2950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2951                           ;incstack = 0
  2952  016D20  0E90               	movlw	low _ring_buf1
  2953  016D22  0100               	movlb	0	; () banked
  2954  016D24  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2955  016D26  0E03               	movlw	high _ring_buf1
  2956  016D28  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2957                           
  2958                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2959  016D2A  0E00               	movlw	low _ring_buf2
  2960  016D2C  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2961  016D2E  0E04               	movlw	high _ring_buf2
  2962  016D30  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2966  016D32  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  2967  016D38  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  2968  016D3E  EC2D  F0C1         	call	_ringBufS_init	;wreg free
  2969                           
  2970                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2971  016D42  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  2972  016D48  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  2973  016D4E  EC2D  F0C1         	call	_ringBufS_init	;wreg free
  2974                           
  2975                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2976  016D52  84BE               	bsf	190,2,c	;volatile
  2977  016D54  84BC               	bsf	188,2,c	;volatile
  2978                           
  2979                           ;eadog.c: 46:  wdtdelay(350000);
  2980  016D56  0E30               	movlw	48
  2981  016D58  6EE6               	movwf	postinc1,c
  2982  016D5A  0E57               	movlw	87
  2983  016D5C  6EE6               	movwf	postinc1,c
  2984  016D5E  0E05               	movlw	5
  2985  016D60  6EE6               	movwf	postinc1,c
  2986  016D62  0E00               	movlw	0
  2987  016D64  6EE6               	movwf	postinc1,c
  2988  016D66  EC92  F0BD         	call	_wdtdelay	;wreg free
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2992  016D6A  0E39               	movlw	57
  2993  016D6C  6EE6               	movwf	postinc1,c
  2994  016D6E  EC19  F0C1         	call	_send_lcd_cmd	;wreg free
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2998  016D72  0E1D               	movlw	29
  2999  016D74  6EE6               	movwf	postinc1,c
  3000  016D76  EC19  F0C1         	call	_send_lcd_cmd	;wreg free
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3004  016D7A  0E50               	movlw	80
  3005  016D7C  6EE6               	movwf	postinc1,c
  3006  016D7E  EC19  F0C1         	call	_send_lcd_cmd	;wreg free
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3010  016D82  0E6C               	movlw	108
  3011  016D84  6EE6               	movwf	postinc1,c
  3012  016D86  EC19  F0C1         	call	_send_lcd_cmd	;wreg free
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3016  016D8A  0E76               	movlw	118
  3017  016D8C  6EE6               	movwf	postinc1,c
  3018  016D8E  EC19  F0C1         	call	_send_lcd_cmd	;wreg free
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3022  016D92  0E38               	movlw	56
  3023  016D94  6EE6               	movwf	postinc1,c
  3024  016D96  EC05  F0C1         	call	_send_lcd_cmd_long	;wreg free
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3028  016D9A  0E0F               	movlw	15
  3029  016D9C  6EE6               	movwf	postinc1,c
  3030  016D9E  EC19  F0C1         	call	_send_lcd_cmd	;wreg free
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3034  016DA2  0E01               	movlw	1
  3035  016DA4  6EE6               	movwf	postinc1,c
  3036  016DA6  EC05  F0C1         	call	_send_lcd_cmd_long	;wreg free
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3040  016DAA  0E02               	movlw	2
  3041  016DAC  6EE6               	movwf	postinc1,c
  3042  016DAE  EC19  F0C1         	call	_send_lcd_cmd	;wreg free
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3046  016DB2  0E06               	movlw	6
  3047  016DB4  6EE6               	movwf	postinc1,c
  3048  016DB6  EC19  F0C1         	call	_send_lcd_cmd	;wreg free
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;eadog.c: 57:  wdtdelay(30);
  3052  016DBA  0E1E               	movlw	30
  3053  016DBC  6EE6               	movwf	postinc1,c
  3054  016DBE  0E00               	movlw	0
  3055  016DC0  6EE6               	movwf	postinc1,c
  3056  016DC2  0E00               	movlw	0
  3057  016DC4  6EE6               	movwf	postinc1,c
  3058  016DC6  0E00               	movlw	0
  3059  016DC8  6EE6               	movwf	postinc1,c
  3060  016DCA  EC92  F0BD         	call	_wdtdelay	;wreg free
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3064  016DCE  0E02               	movlw	2
  3065  016DD0  013D               	movlb	61	; () banked
  3066  016DD2  6F16               	movwf	22,b	;volatile
  3067                           
  3068                           ; BSR set to: 61
  3069                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3070  016DD4  0E40               	movlw	64
  3071  016DD6  6F15               	movwf	21,b	;volatile
  3072                           
  3073                           ; BSR set to: 61
  3074                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3075  016DD8  0E83               	movlw	131
  3076  016DDA  6F14               	movwf	20,b	;volatile
  3077                           
  3078                           ; BSR set to: 61
  3079                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3080  016DDC  931A               	bcf	26,1,b	;volatile
  3081                           
  3082                           ; BSR set to: 61
  3083                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3084  016DDE  0E3F               	movlw	-193
  3085  016DE0  013B               	movlb	59	; () banked
  3086  016DE2  17FD               	andwf	253,f,b	;volatile
  3087                           
  3088                           ; BSR set to: 59
  3089                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3090  016DE4  9BFD               	bcf	253,5,b	;volatile
  3091                           
  3092                           ; BSR set to: 59
  3093                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3094  016DE6  51FD               	movf	253,w,b	;volatile
  3095  016DE8  0BF9               	andlw	-7
  3096  016DEA  0902               	iorlw	2
  3097  016DEC  6FFD               	movwf	253,b	;volatile
  3098                           
  3099                           ; BSR set to: 59
  3100                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3101  016DEE  0EE7               	movlw	-25
  3102  016DF0  17FD               	andwf	253,f,b	;volatile
  3103                           
  3104                           ; BSR set to: 59
  3105                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3106  016DF2  81FD               	bsf	253,0,b	;volatile
  3107                           
  3108                           ; BSR set to: 59
  3109                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3110  016DF4  0E90               	movlw	low _ring_buf1
  3111  016DF6  6FF9               	movwf	249,b	;volatile
  3112  016DF8  0E03               	movlw	high _ring_buf1
  3113  016DFA  6FFA               	movwf	250,b	;volatile
  3114  016DFC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3115  016DFE  6FFB               	movwf	251,b	;volatile
  3116                           
  3117                           ; BSR set to: 59
  3118                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3119  016E00  9BFC               	bcf	252,5,b	;volatile
  3120                           
  3121                           ; BSR set to: 59
  3122                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3123  016E02  013D               	movlb	61	; () banked
  3124  016E04  831A               	bsf	26,1,b	;volatile
  3125                           
  3126                           ; BSR set to: 61
  3127                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3128  016E06  94BE               	bcf	190,2,c	;volatile
  3129                           
  3130                           ; BSR set to: 61
  3131                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3132  016E08  0012               	return		;funcret
  3133  016E0A                     __end_of_init_display:
  3134                           	opt callstack 0
  3135                           
  3136 ;; *************** function _send_lcd_cmd_long *****************
  3137 ;; Defined at:
  3138 ;;		line 114 in file "eadog.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  cmd             1  [STACK] const unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1  [STACK] void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3147 ;; Tracked objects:
  3148 ;;		On entry : 3F/0
  3149 ;;		On exit  : 3F/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3156 ;;Total ram usage:        0 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    7
  3159 ;; This function calls:
  3160 ;;		_SPI1_Exchange8bit
  3161 ;;		_wdtdelay
  3162 ;; This function is called by:
  3163 ;;		_init_display
  3164 ;; This function uses a reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text7
  3168  01820A                     __ptext7:
  3169                           	opt callstack 0
  3170  01820A                     _send_lcd_cmd_long:
  3171                           	opt callstack 22
  3172                           
  3173                           ; BSR set to: 61
  3174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3175                           ;incstack = 0
  3176                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3177  01820A  92BC               	bcf	188,1,c	;volatile
  3178                           
  3179                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3180  01820C  94BC               	bcf	188,2,c	;volatile
  3181                           
  3182                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3183                           ;stkvar	_cmd @ sp[(0)+-1]
  3184  01820E  0EFF               	movlw	-1
  3185  018210  50E3               	movf	plusw1,w,c
  3186  018212  6EE6               	movwf	postinc1,c
  3187  018214  ECE9  F0C2         	call	_SPI1_Exchange8bit	;wreg free
  3188                           
  3189                           ; BSR set to: 57
  3190                           ;eadog.c: 119:  wdtdelay(800);
  3191  018218  0E20               	movlw	32
  3192  01821A  6EE6               	movwf	postinc1,c
  3193  01821C  0E03               	movlw	3
  3194  01821E  6EE6               	movwf	postinc1,c
  3195  018220  0E00               	movlw	0
  3196  018222  6EE6               	movwf	postinc1,c
  3197  018224  0E00               	movlw	0
  3198  018226  6EE6               	movwf	postinc1,c
  3199  018228  EC92  F0BD         	call	_wdtdelay	;wreg free
  3200                           
  3201                           ; BSR set to: 0
  3202  01822C  82BC               	bsf	188,1,c	;volatile
  3203                           
  3204                           ; BSR set to: 0
  3205                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3206  01822E  52E5               	movf	postdec1,f,c
  3207  018230  0012               	return		;funcret
  3208  018232                     __end_of_send_lcd_cmd_long:
  3209                           	opt callstack 0
  3210                           
  3211 ;; *************** function _send_lcd_cmd *****************
  3212 ;; Defined at:
  3213 ;;		line 102 in file "eadog.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  cmd             1  [STACK] const unsigned char 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1  [STACK] void 
  3220 ;; Registers used:
  3221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3222 ;; Tracked objects:
  3223 ;;		On entry : 3F/0
  3224 ;;		On exit  : 3F/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3231 ;;Total ram usage:        0 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    7
  3234 ;; This function calls:
  3235 ;;		_SPI1_Exchange8bit
  3236 ;;		_wdtdelay
  3237 ;; This function is called by:
  3238 ;;		_init_display
  3239 ;; This function uses a reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text8
  3243  018232                     __ptext8:
  3244                           	opt callstack 0
  3245  018232                     _send_lcd_cmd:
  3246                           	opt callstack 22
  3247                           
  3248                           ; BSR set to: 0
  3249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3250                           ;incstack = 0
  3251                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3252  018232  92BC               	bcf	188,1,c	;volatile
  3253                           
  3254                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3255  018234  94BC               	bcf	188,2,c	;volatile
  3256                           
  3257                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3258                           ;stkvar	_cmd @ sp[(0)+-1]
  3259  018236  0EFF               	movlw	-1
  3260  018238  50E3               	movf	plusw1,w,c
  3261  01823A  6EE6               	movwf	postinc1,c
  3262  01823C  ECE9  F0C2         	call	_SPI1_Exchange8bit	;wreg free
  3263                           
  3264                           ; BSR set to: 57
  3265                           ;eadog.c: 107:  wdtdelay(30);
  3266  018240  0E1E               	movlw	30
  3267  018242  6EE6               	movwf	postinc1,c
  3268  018244  0E00               	movlw	0
  3269  018246  6EE6               	movwf	postinc1,c
  3270  018248  0E00               	movlw	0
  3271  01824A  6EE6               	movwf	postinc1,c
  3272  01824C  0E00               	movlw	0
  3273  01824E  6EE6               	movwf	postinc1,c
  3274  018250  EC92  F0BD         	call	_wdtdelay	;wreg free
  3275                           
  3276                           ; BSR set to: 0
  3277  018254  82BC               	bsf	188,1,c	;volatile
  3278                           
  3279                           ; BSR set to: 0
  3280                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3281  018256  52E5               	movf	postdec1,f,c
  3282  018258  0012               	return		;funcret
  3283  01825A                     __end_of_send_lcd_cmd:
  3284                           	opt callstack 0
  3285                           
  3286 ;; *************** function _SPI1_Exchange8bit *****************
  3287 ;; Defined at:
  3288 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  data            1  [STACK] unsigned char 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1  [STACK] unsigned char 
  3295 ;; Registers used:
  3296 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 3F/39
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    6
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_send_lcd_cmd
  3313 ;;		_send_lcd_cmd_long
  3314 ;; This function uses a reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text9
  3318  0185D2                     __ptext9:
  3319                           	opt callstack 0
  3320  0185D2                     _SPI1_Exchange8bit:
  3321                           	opt callstack 22
  3322                           
  3323                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3324                           
  3325                           ; BSR set to: 0
  3326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3327                           ;incstack = 0
  3328  0185D2  0E01               	movlw	1
  3329  0185D4  013D               	movlb	61	; () banked
  3330  0185D6  6F12               	movwf	18,b	;volatile
  3331                           
  3332                           ; BSR set to: 61
  3333                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3334                           ;stkvar	_data @ sp[(0)+-1]
  3335  0185D8  0EFF               	movlw	-1
  3336  0185DA  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3337  0185E0                     l835:
  3338                           
  3339                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3340  0185E0  0139               	movlb	57	; () banked
  3341  0185E2  A9A2               	btfss	162,4,b	;volatile
  3342  0185E4  D7FD               	goto	l835
  3343                           
  3344                           ; BSR set to: 57
  3345                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3346  0185E6  006F F440  F032    	movff	15632,btemp	;volatile
  3347                           
  3348                           ; BSR set to: 57
  3349                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3350  0185EC  52E5               	movf	postdec1,f,c
  3351  0185EE  0012               	return		;funcret
  3352  0185F0                     __end_of_SPI1_Exchange8bit:
  3353                           	opt callstack 0
  3354                           
  3355 ;; *************** function _ringBufS_init *****************
  3356 ;; Defined at:
  3357 ;;		line 22 in file "ringbufs.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  _this           2  [STACK] PTR volatile struct ring
  3360 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1  [STACK] void 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3376 ;;Total ram usage:        0 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    7
  3379 ;; This function calls:
  3380 ;;		_memset
  3381 ;; This function is called by:
  3382 ;;		_init_display
  3383 ;; This function uses a reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text10
  3387  01825A                     __ptext10:
  3388                           	opt callstack 0
  3389  01825A                     _ringBufS_init:
  3390                           	opt callstack 22
  3391                           
  3392                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3393                           
  3394                           ; BSR set to: 57
  3395                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3396                           ;incstack = 0
  3397  01825A  0E43               	movlw	67
  3398  01825C  6EE6               	movwf	postinc1,c
  3399  01825E  0E00               	movlw	0
  3400  018260  6EE6               	movwf	postinc1,c
  3401  018262  0E00               	movlw	0
  3402  018264  6EE6               	movwf	postinc1,c
  3403  018266  0E00               	movlw	0
  3404  018268  6EE6               	movwf	postinc1,c
  3405                           
  3406                           ;stkvar	__this @ sp[(-4)+-2]
  3407  01826A  0EFA               	movlw	-6
  3408  01826C  006F FF8F FFE6     	movff	plusw1,postinc1
  3409  018272  006F FF8F FFE6     	movff	plusw1,postinc1
  3410  018278  ECF9  F0A3         	call	_memset	;wreg free
  3411                           
  3412                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3413  01827C  52E5               	movf	postdec1,f,c
  3414  01827E  52E5               	movf	postdec1,f,c
  3415  018280  0012               	return		;funcret
  3416  018282                     __end_of_ringBufS_init:
  3417                           	opt callstack 0
  3418                           
  3419 ;; *************** function _get_switch *****************
  3420 ;; Defined at:
  3421 ;;		line 18 in file "dio.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  i               1  [STACK] unsigned char 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1  [STACK] enum E17013
  3428 ;; Registers used:
  3429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/39
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    6
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text11
  3450  018282                     __ptext11:
  3451                           	opt callstack 0
  3452  018282                     _get_switch:
  3453                           	opt callstack 24
  3454                           
  3455                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  3456                           ;stkvar	_i @ sp[(0)+-1]
  3457                           
  3458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3459                           ;incstack = 0
  3460  018282  0EFF               	movlw	-1
  3461  018284  006F FF8C  F032    	movff	plusw1,btemp
  3462  01828A  0E03               	movlw	3
  3463  01828C  6432               	cpfsgt	btemp^0,c
  3464  01828E  D002               	goto	l8901
  3465                           
  3466                           ;dio.c: 21:   return SW_OFF;
  3467  018290  0E00               	movlw	0
  3468  018292  D008               	goto	L1
  3469  018294                     l8901:
  3470                           
  3471                           ;dio.c: 23:  return S.button[i].sw;
  3472                           ;stkvar	_i @ sp[(0)+-1]
  3473  018294  0EFF               	movlw	-1
  3474  018296  50E3               	movf	plusw1,w,c
  3475  018298  0D05               	mullw	5
  3476  01829A  50F3               	movf	243,w,c
  3477  01829C  0F60               	addlw	low _S
  3478  01829E  6ED9               	movwf	fsr2l,c
  3479  0182A0  6ADA               	clrf	fsr2h,c
  3480  0182A2  50DF               	movf	indf2,w,c
  3481  0182A4                     L1:
  3482  0182A4  6E32               	movwf	btemp^0,c
  3483                           
  3484                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3485  0182A6  52E5               	movf	postdec1,f,c
  3486  0182A8  0012               	return		;funcret
  3487  0182AA                     __end_of_get_switch:
  3488                           	opt callstack 0
  3489                           
  3490 ;; *************** function _eaDogM_WriteCommand *****************
  3491 ;; Defined at:
  3492 ;;		line 160 in file "eadog.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  cmd             1  [STACK] const unsigned char 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1  [STACK] void 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3501 ;; Tracked objects:
  3502 ;;		On entry : 3F/3D
  3503 ;;		On exit  : 3F/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3510 ;;Total ram usage:        0 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:   16
  3513 ;; This function calls:
  3514 ;;		_send_lcd_cmd_dma
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text12
  3521  01878E                     __ptext12:
  3522                           	opt callstack 0
  3523  01878E                     _eaDogM_WriteCommand:
  3524                           	opt callstack 14
  3525                           
  3526                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3527                           ;stkvar	_cmd @ sp[(0)+-1]
  3528                           
  3529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3530                           ;incstack = 0
  3531  01878E  0EFF               	movlw	-1
  3532  018790  50E3               	movf	plusw1,w,c
  3533  018792  6EE6               	movwf	postinc1,c
  3534  018794  ECEC  F0BD         	call	_send_lcd_cmd_dma	;wreg free
  3535                           
  3536                           ; BSR set to: 0
  3537                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3538  018798  52E5               	movf	postdec1,f,c
  3539  01879A  0012               	return		;funcret
  3540  01879C                     __end_of_eaDogM_WriteCommand:
  3541                           	opt callstack 0
  3542                           
  3543 ;; *************** function _convert_adc_data *****************
  3544 ;; Defined at:
  3545 ;;		line 38 in file "mbmc.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  i               1  [STACK] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1  [STACK] void 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/39
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3563 ;;Total ram usage:        0 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    9
  3566 ;; This function calls:
  3567 ;;		_conv_raw_result
  3568 ;;		_lp_filter
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text13
  3575  0176C2                     __ptext13:
  3576                           	opt callstack 0
  3577  0176C2                     _convert_adc_data:
  3578                           	opt callstack 0
  3579                           
  3580                           ; BSR set to: 0
  3581                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3582  0176C2  52E6               	movf	postinc1,f,c
  3583                           
  3584                           ;mbmc.c: 40:  uint8_t i = 0;
  3585                           ;stkvar	_i @ sp[(-1)+0]
  3586                           
  3587                           ;incstack = 0
  3588  0176C4  0EFF               	movlw	-1
  3589  0176C6  6AE3               	clrf	plusw1,c
  3590  0176C8                     l8885:
  3591                           
  3592                           ;mbmc.c: 46:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  3593  0176C8  0E00               	movlw	0
  3594  0176CA  6EE6               	movwf	postinc1,c
  3595                           
  3596                           ;stkvar	_i @ sp[(-2)+0]
  3597  0176CC  0EFE               	movlw	-2
  3598  0176CE  50E3               	movf	plusw1,w,c
  3599  0176D0  6EE6               	movwf	postinc1,c
  3600  0176D2  0E00               	movlw	0
  3601  0176D4  6EE6               	movwf	postinc1,c
  3602                           
  3603                           ;stkvar	_i @ sp[(-4)+0]
  3604  0176D6  0EFC               	movlw	-4
  3605  0176D8  50E3               	movf	plusw1,w,c
  3606  0176DA  6EE6               	movwf	postinc1,c
  3607  0176DC  ECD0  F09B         	call	_conv_raw_result	;wreg free
  3608  0176E0  0060  F0CB  FFE6   	movff	btemp,postinc1
  3609  0176E6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3610  0176EC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3611  0176F2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3612  0176F8  EC6B  F0AE         	call	_lp_filter	;wreg free
  3613                           
  3614                           ;stkvar	_i @ sp[(-1)+0]
  3615  0176FC  0EFF               	movlw	-1
  3616  0176FE  50E3               	movf	plusw1,w,c
  3617  017700  0D04               	mullw	4
  3618  017702  0E00               	movlw	low _C
  3619  017704  24F3               	addwf	243,w,c
  3620  017706  6ED9               	movwf	fsr2l,c
  3621  017708  0E01               	movlw	high _C
  3622  01770A  20F4               	addwfc	prodh,w,c
  3623  01770C  6EDA               	movwf	fsr2h,c
  3624  01770E  0060  F0CB  FFDE   	movff	btemp,postinc2
  3625  017714  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3626  01771A  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3627  017720  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3628                           
  3629                           ;mbmc.c: 48:  } while (++i < 16);
  3630                           ;stkvar	_i @ sp[(-1)+0]
  3631  017726  0EFF               	movlw	-1
  3632  017728  2AE3               	incf	plusw1,f,c
  3633  01772A  0EFF               	movlw	-1
  3634  01772C  006F FF8C  F032    	movff	plusw1,btemp
  3635  017732  0E0F               	movlw	15
  3636  017734  6432               	cpfsgt	btemp^0,c
  3637  017736  D7C8               	goto	l8885
  3638                           
  3639                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3640  017738  52E5               	movf	postdec1,f,c
  3641  01773A  0012               	return		;funcret
  3642  01773C                     __end_of_convert_adc_data:
  3643                           	opt callstack 0
  3644                           
  3645 ;; *************** function _conv_raw_result *****************
  3646 ;; Defined at:
  3647 ;;		line 80 in file "daq.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  chan            1  [STACK] const enum E16136
  3650 ;;  to_what         1  [STACK] const enum E16198
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  4  [STACK] float 
  3655 ;; Registers used:
  3656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/39
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    8
  3669 ;; This function calls:
  3670 ;;		___fldiv
  3671 ;;		___flmul
  3672 ;;		___flsub
  3673 ;;		___xxtofl
  3674 ;;		_get_raw_result
  3675 ;;		_nanf
  3676 ;; This function is called by:
  3677 ;;		_convert_adc_data
  3678 ;; This function uses a reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text14
  3682  0137A0                     __ptext14:
  3683                           	opt callstack 0
  3684  0137A0                     _conv_raw_result:
  3685                           	opt callstack 21
  3686                           
  3687                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  3688                           
  3689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3690                           ;incstack = 0
  3691  0137A0  D242               	goto	l8603
  3692  0137A2                     l8549:
  3693                           
  3694                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  3695                           ;stkvar	_chan @ sp[(0)+-1]
  3696  0137A2  0EFF               	movlw	-1
  3697  0137A4  006F FF8C  F03D    	movff	plusw1,btemp+11
  3698  0137AA  0E77               	movlw	119
  3699  0137AC  6E3A               	movwf	(btemp+8)^0,c
  3700  0137AE  0E3C               	movlw	60
  3701  0137B0  6E3B               	movwf	(btemp+9)^0,c
  3702  0137B2  2A3D               	incf	(btemp+11)^0,f,c
  3703  0137B4  D003               	goto	u8054
  3704  0137B6                     u8055:
  3705  0137B6  343B               	rlcf	(btemp+9)^0,w,c
  3706  0137B8  323B               	rrcf	(btemp+9)^0,f,c
  3707  0137BA  323A               	rrcf	(btemp+8)^0,f,c
  3708  0137BC                     u8054:
  3709  0137BC  2E3D               	decfsz	(btemp+11)^0,f,c
  3710  0137BE  D7FB               	goto	u8055
  3711  0137C0  B03A               	btfsc	(btemp+8)^0,0,c
  3712  0137C2  D007               	goto	l8555
  3713                           
  3714                           ;daq.c: 86:    return nanf("");
  3715  0137C4  0EC7               	movlw	low (STR_30+18)
  3716  0137C6  6EE6               	movwf	postinc1,c
  3717  0137C8  0EFE               	movlw	high (STR_30+18)
  3718  0137CA  6EE6               	movwf	postinc1,c
  3719  0137CC  ECD3  F0BC         	call	_nanf	;wreg free
  3720  0137D0  D23A               	goto	l1657
  3721  0137D2                     l8555:
  3722                           
  3723                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  3724                           ;stkvar	_chan @ sp[(0)+-1]
  3725  0137D2  0EFF               	movlw	-1
  3726  0137D4  006F FF8C  F03D    	movff	plusw1,btemp+11
  3727  0137DA  0E03               	movlw	3
  3728  0137DC  6E3A               	movwf	(btemp+8)^0,c
  3729  0137DE  0E00               	movlw	0
  3730  0137E0  6E3B               	movwf	(btemp+9)^0,c
  3731  0137E2  2A3D               	incf	(btemp+11)^0,f,c
  3732  0137E4  D003               	goto	u8074
  3733  0137E6                     u8075:
  3734  0137E6  343B               	rlcf	(btemp+9)^0,w,c
  3735  0137E8  323B               	rrcf	(btemp+9)^0,f,c
  3736  0137EA  323A               	rrcf	(btemp+8)^0,f,c
  3737  0137EC                     u8074:
  3738  0137EC  2E3D               	decfsz	(btemp+11)^0,f,c
  3739  0137EE  D7FB               	goto	u8075
  3740  0137F0  A03A               	btfss	(btemp+8)^0,0,c
  3741  0137F2  D0EB               	goto	l8569
  3742                           
  3743                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  3744                           ;stkvar	_chan @ sp[(0)+-1]
  3745  0137F4  0EFF               	movlw	-1
  3746  0137F6  006F FF8C  F03D    	movff	plusw1,btemp+11
  3747  0137FC  0E01               	movlw	1
  3748  0137FE  6E3A               	movwf	(btemp+8)^0,c
  3749  013800  0E00               	movlw	0
  3750  013802  6E3B               	movwf	(btemp+9)^0,c
  3751  013804  2A3D               	incf	(btemp+11)^0,f,c
  3752  013806  D003               	goto	u8094
  3753  013808                     u8095:
  3754  013808  343B               	rlcf	(btemp+9)^0,w,c
  3755  01380A  323B               	rrcf	(btemp+9)^0,f,c
  3756  01380C  323A               	rrcf	(btemp+8)^0,f,c
  3757  01380E                     u8094:
  3758  01380E  2E3D               	decfsz	(btemp+11)^0,f,c
  3759  013810  D7FB               	goto	u8095
  3760  013812  A03A               	btfss	(btemp+8)^0,0,c
  3761  013814  D06D               	goto	l8565
  3762                           
  3763                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  3764  013816  0E7B               	movlw	123
  3765  013818  6EE6               	movwf	postinc1,c
  3766  01381A  0E14               	movlw	20
  3767  01381C  6EE6               	movwf	postinc1,c
  3768  01381E  0EAE               	movlw	174
  3769  013820  6EE6               	movwf	postinc1,c
  3770  013822  0E3D               	movlw	61
  3771  013824  6EE6               	movwf	postinc1,c
  3772  013826  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  3773  01382C  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  3774  013832  0E00               	movlw	0
  3775  013834  BE3B               	btfsc	(btemp+9)^0,7,c
  3776  013836  0EFF               	movlw	255
  3777  013838  6E3C               	movwf	(btemp+10)^0,c
  3778  01383A  6E3D               	movwf	(btemp+11)^0,c
  3779  01383C  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3780  013842  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3781  013848  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3782  01384E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3783  013854  0E01               	movlw	1
  3784  013856  6EE6               	movwf	postinc1,c
  3785  013858  EC85  F0AC         	call	___xxtofl	;wreg free
  3786  01385C  0060  F0CB  FFE6   	movff	btemp,postinc1
  3787  013862  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3788  013868  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3789  01386E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3790                           
  3791                           ;stkvar	_chan @ sp[(-8)+-1]
  3792  013874  0EF7               	movlw	-9
  3793  013876  50E3               	movf	plusw1,w,c
  3794  013878  6EE6               	movwf	postinc1,c
  3795  01387A  ECF8  F0C2         	call	_get_raw_result	;wreg free
  3796  01387E  0060  F0C8  F03C   	movff	btemp,btemp+10
  3797  013884  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3798  01388A  503C               	movf	(btemp+10)^0,w,c
  3799  01388C  6E36               	movwf	(btemp+4)^0,c
  3800  01388E  503D               	movf	(btemp+11)^0,w,c
  3801  013890  6E37               	movwf	(btemp+5)^0,c
  3802  013892  6A38               	clrf	(btemp+6)^0,c
  3803  013894  6A39               	clrf	(btemp+7)^0,c
  3804  013896  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3805  01389C  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3806  0138A2  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3807  0138A8  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3808  0138AE  0E00               	movlw	0
  3809  0138B0  6EE6               	movwf	postinc1,c
  3810  0138B2  EC85  F0AC         	call	___xxtofl	;wreg free
  3811  0138B6  0060  F0CB  FFE6   	movff	btemp,postinc1
  3812  0138BC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3813  0138C2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3814  0138C8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3815  0138CE  EC85  F0BE         	call	___flsub	;wreg free
  3816  0138D2  0060  F0CB  FFE6   	movff	btemp,postinc1
  3817  0138D8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3818  0138DE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3819  0138E4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3820  0138EA  ECC1  F08E         	call	___flmul	;wreg free
  3821  0138EE  D1AB               	goto	l1657
  3822  0138F0                     l8565:
  3823                           
  3824                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  3825  0138F0  0E29               	movlw	41
  3826  0138F2  6EE6               	movwf	postinc1,c
  3827  0138F4  0E5C               	movlw	92
  3828  0138F6  6EE6               	movwf	postinc1,c
  3829  0138F8  0E0F               	movlw	15
  3830  0138FA  6EE6               	movwf	postinc1,c
  3831  0138FC  0E3D               	movlw	61
  3832  0138FE  6EE6               	movwf	postinc1,c
  3833  013900  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  3834  013906  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  3835  01390C  0E00               	movlw	0
  3836  01390E  BE3B               	btfsc	(btemp+9)^0,7,c
  3837  013910  0EFF               	movlw	255
  3838  013912  6E3C               	movwf	(btemp+10)^0,c
  3839  013914  6E3D               	movwf	(btemp+11)^0,c
  3840  013916  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3841  01391C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3842  013922  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3843  013928  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3844  01392E  0E01               	movlw	1
  3845  013930  6EE6               	movwf	postinc1,c
  3846  013932  EC85  F0AC         	call	___xxtofl	;wreg free
  3847  013936  0060  F0CB  FFE6   	movff	btemp,postinc1
  3848  01393C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3849  013942  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3850  013948  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3851                           
  3852                           ;stkvar	_chan @ sp[(-8)+-1]
  3853  01394E  0EF7               	movlw	-9
  3854  013950  50E3               	movf	plusw1,w,c
  3855  013952  6EE6               	movwf	postinc1,c
  3856  013954  ECF8  F0C2         	call	_get_raw_result	;wreg free
  3857  013958  0060  F0C8  F03C   	movff	btemp,btemp+10
  3858  01395E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3859  013964  503C               	movf	(btemp+10)^0,w,c
  3860  013966  6E36               	movwf	(btemp+4)^0,c
  3861  013968  503D               	movf	(btemp+11)^0,w,c
  3862  01396A  6E37               	movwf	(btemp+5)^0,c
  3863  01396C  6A38               	clrf	(btemp+6)^0,c
  3864  01396E  6A39               	clrf	(btemp+7)^0,c
  3865  013970  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3866  013976  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3867  01397C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3868  013982  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3869  013988  0E00               	movlw	0
  3870  01398A  6EE6               	movwf	postinc1,c
  3871  01398C  EC85  F0AC         	call	___xxtofl	;wreg free
  3872  013990  0060  F0CB  FFE6   	movff	btemp,postinc1
  3873  013996  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3874  01399C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3875  0139A2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3876  0139A8  EC85  F0BE         	call	___flsub	;wreg free
  3877  0139AC  0060  F0CB  FFE6   	movff	btemp,postinc1
  3878  0139B2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3879  0139B8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3880  0139BE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3881  0139C4  ECC1  F08E         	call	___flmul	;wreg free
  3882  0139C8  D13E               	goto	l1657
  3883  0139CA                     l8569:
  3884                           
  3885                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  3886                           ;stkvar	_chan @ sp[(0)+-1]
  3887  0139CA  0EFF               	movlw	-1
  3888  0139CC  006F FF8C  F03D    	movff	plusw1,btemp+11
  3889  0139D2  0E00               	movlw	0
  3890  0139D4  6E3A               	movwf	(btemp+8)^0,c
  3891  0139D6  0E08               	movlw	8
  3892  0139D8  6E3B               	movwf	(btemp+9)^0,c
  3893  0139DA  2A3D               	incf	(btemp+11)^0,f,c
  3894  0139DC  D003               	goto	u8114
  3895  0139DE                     u8115:
  3896  0139DE  343B               	rlcf	(btemp+9)^0,w,c
  3897  0139E0  323B               	rrcf	(btemp+9)^0,f,c
  3898  0139E2  323A               	rrcf	(btemp+8)^0,f,c
  3899  0139E4                     u8114:
  3900  0139E4  2E3D               	decfsz	(btemp+11)^0,f,c
  3901  0139E6  D7FB               	goto	u8115
  3902  0139E8  A03A               	btfss	(btemp+8)^0,0,c
  3903  0139EA  D008               	goto	l8577
  3904                           
  3905                           ;daq.c: 96:     return 25.0;
  3906  0139EC  0E00               	movlw	0
  3907  0139EE  6E32               	movwf	btemp^0,c
  3908  0139F0  0E00               	movlw	0
  3909  0139F2  6E33               	movwf	(btemp+1)^0,c
  3910  0139F4  0EC8               	movlw	200
  3911  0139F6  6E34               	movwf	(btemp+2)^0,c
  3912  0139F8  0E41               	movlw	65
  3913  0139FA  D113               	goto	L2
  3914  0139FC                     l8577:
  3915                           
  3916                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  3917  0139FC  0E00               	movlw	0
  3918  0139FE  6EE6               	movwf	postinc1,c
  3919  013A00  0E00               	movlw	0
  3920  013A02  6EE6               	movwf	postinc1,c
  3921  013A04  0E7A               	movlw	122
  3922  013A06  6EE6               	movwf	postinc1,c
  3923  013A08  0E44               	movlw	68
  3924  013A0A  6EE6               	movwf	postinc1,c
  3925  013A0C  0E61               	movlw	97
  3926  013A0E  6EE6               	movwf	postinc1,c
  3927  013A10  0E03               	movlw	3
  3928  013A12  6EE6               	movwf	postinc1,c
  3929  013A14  0E84               	movlw	132
  3930  013A16  6EE6               	movwf	postinc1,c
  3931  013A18  0E40               	movlw	64
  3932  013A1A  6EE6               	movwf	postinc1,c
  3933                           
  3934                           ;stkvar	_chan @ sp[(-8)+-1]
  3935  013A1C  0EF7               	movlw	-9
  3936  013A1E  50E3               	movf	plusw1,w,c
  3937  013A20  6EE6               	movwf	postinc1,c
  3938  013A22  ECF8  F0C2         	call	_get_raw_result	;wreg free
  3939  013A26  0060  F0C8  F03C   	movff	btemp,btemp+10
  3940  013A2C  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3941  013A32  503C               	movf	(btemp+10)^0,w,c
  3942  013A34  6E36               	movwf	(btemp+4)^0,c
  3943  013A36  503D               	movf	(btemp+11)^0,w,c
  3944  013A38  6E37               	movwf	(btemp+5)^0,c
  3945  013A3A  6A38               	clrf	(btemp+6)^0,c
  3946  013A3C  6A39               	clrf	(btemp+7)^0,c
  3947  013A3E  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3948  013A44  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3949  013A4A  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3950  013A50  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3951  013A56  0E00               	movlw	0
  3952  013A58  6EE6               	movwf	postinc1,c
  3953  013A5A  EC85  F0AC         	call	___xxtofl	;wreg free
  3954  013A5E  0060  F0CB  FFE6   	movff	btemp,postinc1
  3955  013A64  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3956  013A6A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3957  013A70  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3958  013A76  ECC1  F08E         	call	___flmul	;wreg free
  3959  013A7A  0060  F0CB  FFE6   	movff	btemp,postinc1
  3960  013A80  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3961  013A86  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3962  013A8C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3963  013A92  ECB4  F096         	call	___fldiv	;wreg free
  3964  013A96  D0D7               	goto	l1657
  3965  013A98                     l8581:
  3966                           
  3967                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  3968                           ;stkvar	_chan @ sp[(0)+-1]
  3969  013A98  0EFF               	movlw	-1
  3970  013A9A  006F FF8C  F03D    	movff	plusw1,btemp+11
  3971  013AA0  0E03               	movlw	3
  3972  013AA2  6E3A               	movwf	(btemp+8)^0,c
  3973  013AA4  0E00               	movlw	0
  3974  013AA6  6E3B               	movwf	(btemp+9)^0,c
  3975  013AA8  2A3D               	incf	(btemp+11)^0,f,c
  3976  013AAA  D003               	goto	u8134
  3977  013AAC                     u8135:
  3978  013AAC  343B               	rlcf	(btemp+9)^0,w,c
  3979  013AAE  323B               	rrcf	(btemp+9)^0,f,c
  3980  013AB0  323A               	rrcf	(btemp+8)^0,f,c
  3981  013AB2                     u8134:
  3982  013AB2  2E3D               	decfsz	(btemp+11)^0,f,c
  3983  013AB4  D7FB               	goto	u8135
  3984  013AB6  B03A               	btfsc	(btemp+8)^0,0,c
  3985  013AB8  D011               	goto	u8160
  3986                           
  3987                           ;stkvar	_chan @ sp[(0)+-1]
  3988  013ABA  0EFF               	movlw	-1
  3989  013ABC  006F FF8C  F03D    	movff	plusw1,btemp+11
  3990  013AC2  0E00               	movlw	0
  3991  013AC4  6E3A               	movwf	(btemp+8)^0,c
  3992  013AC6  0E08               	movlw	8
  3993  013AC8  6E3B               	movwf	(btemp+9)^0,c
  3994  013ACA  2A3D               	incf	(btemp+11)^0,f,c
  3995  013ACC  D003               	goto	u8154
  3996  013ACE                     u8155:
  3997  013ACE  343B               	rlcf	(btemp+9)^0,w,c
  3998  013AD0  323B               	rrcf	(btemp+9)^0,f,c
  3999  013AD2  323A               	rrcf	(btemp+8)^0,f,c
  4000  013AD4                     u8154:
  4001  013AD4  2E3D               	decfsz	(btemp+11)^0,f,c
  4002  013AD6  D7FB               	goto	u8155
  4003  013AD8  A03A               	btfss	(btemp+8)^0,0,c
  4004  013ADA  D04E               	goto	l8589
  4005  013ADC                     u8160:
  4006                           
  4007                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4008  013ADC  0E00               	movlw	0
  4009  013ADE  6EE6               	movwf	postinc1,c
  4010  013AE0  0E00               	movlw	0
  4011  013AE2  6EE6               	movwf	postinc1,c
  4012  013AE4  0E7A               	movlw	122
  4013  013AE6  6EE6               	movwf	postinc1,c
  4014  013AE8  0E44               	movlw	68
  4015  013AEA  6EE6               	movwf	postinc1,c
  4016  013AEC  0E00               	movlw	0
  4017  013AEE  6EE6               	movwf	postinc1,c
  4018  013AF0  0E00               	movlw	0
  4019  013AF2  6EE6               	movwf	postinc1,c
  4020  013AF4  0E20               	movlw	32
  4021  013AF6  6EE6               	movwf	postinc1,c
  4022  013AF8  0E3F               	movlw	63
  4023  013AFA  6EE6               	movwf	postinc1,c
  4024                           
  4025                           ;stkvar	_chan @ sp[(-8)+-1]
  4026  013AFC  0EF7               	movlw	-9
  4027  013AFE  50E3               	movf	plusw1,w,c
  4028  013B00  6EE6               	movwf	postinc1,c
  4029  013B02  ECF8  F0C2         	call	_get_raw_result	;wreg free
  4030  013B06  0060  F0C8  F03C   	movff	btemp,btemp+10
  4031  013B0C  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4032  013B12  503C               	movf	(btemp+10)^0,w,c
  4033  013B14  6E36               	movwf	(btemp+4)^0,c
  4034  013B16  503D               	movf	(btemp+11)^0,w,c
  4035  013B18  6E37               	movwf	(btemp+5)^0,c
  4036  013B1A  6A38               	clrf	(btemp+6)^0,c
  4037  013B1C  6A39               	clrf	(btemp+7)^0,c
  4038  013B1E  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4039  013B24  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4040  013B2A  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4041  013B30  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4042  013B36  0E00               	movlw	0
  4043  013B38  6EE6               	movwf	postinc1,c
  4044  013B3A  EC85  F0AC         	call	___xxtofl	;wreg free
  4045  013B3E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4046  013B44  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4047  013B4A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4048  013B50  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4049  013B56  ECC1  F08E         	call	___flmul	;wreg free
  4050  013B5A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4051  013B60  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4052  013B66  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4053  013B6C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4054  013B72  ECB4  F096         	call	___fldiv	;wreg free
  4055  013B76  D067               	goto	l1657
  4056  013B78                     l8589:
  4057                           
  4058                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4059  013B78  0E00               	movlw	0
  4060  013B7A  6EE6               	movwf	postinc1,c
  4061  013B7C  0E00               	movlw	0
  4062  013B7E  6EE6               	movwf	postinc1,c
  4063  013B80  0E7A               	movlw	122
  4064  013B82  6EE6               	movwf	postinc1,c
  4065  013B84  0E44               	movlw	68
  4066  013B86  6EE6               	movwf	postinc1,c
  4067  013B88  0E61               	movlw	97
  4068  013B8A  6EE6               	movwf	postinc1,c
  4069  013B8C  0E03               	movlw	3
  4070  013B8E  6EE6               	movwf	postinc1,c
  4071  013B90  0E84               	movlw	132
  4072  013B92  6EE6               	movwf	postinc1,c
  4073  013B94  0E40               	movlw	64
  4074  013B96  6EE6               	movwf	postinc1,c
  4075                           
  4076                           ;stkvar	_chan @ sp[(-8)+-1]
  4077  013B98  0EF7               	movlw	-9
  4078  013B9A  50E3               	movf	plusw1,w,c
  4079  013B9C  6EE6               	movwf	postinc1,c
  4080  013B9E  ECF8  F0C2         	call	_get_raw_result	;wreg free
  4081  013BA2  0060  F0C8  F03C   	movff	btemp,btemp+10
  4082  013BA8  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4083  013BAE  503C               	movf	(btemp+10)^0,w,c
  4084  013BB0  6E36               	movwf	(btemp+4)^0,c
  4085  013BB2  503D               	movf	(btemp+11)^0,w,c
  4086  013BB4  6E37               	movwf	(btemp+5)^0,c
  4087  013BB6  6A38               	clrf	(btemp+6)^0,c
  4088  013BB8  6A39               	clrf	(btemp+7)^0,c
  4089  013BBA  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4090  013BC0  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4091  013BC6  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4092  013BCC  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4093  013BD2  0E00               	movlw	0
  4094  013BD4  6EE6               	movwf	postinc1,c
  4095  013BD6  EC85  F0AC         	call	___xxtofl	;wreg free
  4096  013BDA  0060  F0CB  FFE6   	movff	btemp,postinc1
  4097  013BE0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4098  013BE6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4099  013BEC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4100  013BF2  ECC1  F08E         	call	___flmul	;wreg free
  4101  013BF6  0060  F0CB  FFE6   	movff	btemp,postinc1
  4102  013BFC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4103  013C02  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4104  013C08  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4105  013C0E  ECB4  F096         	call	___fldiv	;wreg free
  4106  013C12  D019               	goto	l1657
  4107  013C14                     l8595:
  4108                           
  4109                           ;daq.c: 109:   return 0.0;
  4110  013C14  0E00               	movlw	0
  4111  013C16  6E32               	movwf	btemp^0,c
  4112  013C18  0E00               	movlw	0
  4113  013C1A  6E33               	movwf	(btemp+1)^0,c
  4114  013C1C  0E00               	movlw	0
  4115  013C1E  6E34               	movwf	(btemp+2)^0,c
  4116  013C20  0E00               	movlw	0
  4117  013C22                     L2:
  4118  013C22  6E35               	movwf	(btemp+3)^0,c
  4119  013C24  D010               	goto	l1657
  4120  013C26                     l8603:
  4121                           
  4122                           ;stkvar	_to_what @ sp[(0)+-2]
  4123  013C26  0EFE               	movlw	-2
  4124  013C28  50E3               	movf	plusw1,w,c
  4125  013C2A  6E3C               	movwf	(btemp+10)^0,c
  4126  013C2C  6A3D               	clrf	(btemp+11)^0,c
  4127                           
  4128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4129                           ; Switch size 1, requested type "simple"
  4130                           ; Number of cases is 1, Range of values is 0 to 0
  4131                           ; switch strategies available:
  4132                           ; Name         Instructions Cycles
  4133                           ; simple_byte            4     3 (average)
  4134                           ;	Chosen strategy is simple_byte
  4135  013C2E  503D               	movf	(btemp+11)^0,w,c
  4136  013C30  0A00               	xorlw	0	; case 0
  4137  013C32  A4D8               	btfss	status,2,c
  4138  013C34  D7EF               	goto	l8595
  4139                           
  4140                           ; Switch size 1, requested type "simple"
  4141                           ; Number of cases is 2, Range of values is 0 to 1
  4142                           ; switch strategies available:
  4143                           ; Name         Instructions Cycles
  4144                           ; simple_byte            7     4 (average)
  4145                           ;	Chosen strategy is simple_byte
  4146  013C36  503C               	movf	(btemp+10)^0,w,c
  4147  013C38  0A00               	xorlw	0	; case 0
  4148  013C3A  B4D8               	btfsc	status,2,c
  4149  013C3C  D5B2               	goto	l8549
  4150  013C3E  0A01               	xorlw	1	; case 1
  4151  013C40  B4D8               	btfsc	status,2,c
  4152  013C42  D72A               	goto	l8581
  4153  013C44  D7E7               	goto	l8595
  4154  013C46                     l1657:
  4155                           
  4156                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4157  013C46  52E5               	movf	postdec1,f,c
  4158  013C48  52E5               	movf	postdec1,f,c
  4159  013C4A  0012               	return		;funcret
  4160  013C4C                     __end_of_conv_raw_result:
  4161                           	opt callstack 0
  4162                           
  4163 ;; *************** function _nanf *****************
  4164 ;; Defined at:
  4165 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  s               2  [STACK] PTR const unsigned char 
  4168 ;;		 -> STR_36(1), 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  u               4  [STACK] struct .
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  4  [STACK] float 
  4173 ;; Registers used:
  4174 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/39
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4184 ;;Total ram usage:        0 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    6
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_conv_raw_result
  4191 ;; This function uses a reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text15
  4195  0179A6                     __ptext15:
  4196                           	opt callstack 0
  4197  0179A6                     _nanf:
  4198                           	opt callstack 0
  4199                           
  4200                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4201  0179A6  52E6               	movf	postinc1,f,c
  4202  0179A8  52E6               	movf	postinc1,f,c
  4203  0179AA  52E6               	movf	postinc1,f,c
  4204  0179AC  52E6               	movf	postinc1,f,c
  4205                           
  4206                           ;incstack = 0
  4207  0179AE  0EFF               	movlw	255
  4208  0179B0  6E3A               	movwf	(btemp+8)^0,c
  4209  0179B2  0EFF               	movlw	255
  4210  0179B4  6E3B               	movwf	(btemp+9)^0,c
  4211  0179B6  0EFF               	movlw	255
  4212  0179B8  6E3C               	movwf	(btemp+10)^0,c
  4213  0179BA  0E7F               	movlw	127
  4214  0179BC  6E3D               	movwf	(btemp+11)^0,c
  4215                           
  4216                           ;stkvar	_u @ sp[(-4)+0]
  4217  0179BE  0EFC               	movlw	-4
  4218  0179C0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4219  0179C6  0EFD               	movlw	-3
  4220  0179C8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4221  0179CE  0EFE               	movlw	-2
  4222  0179D0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4223  0179D6  0EFF               	movlw	-1
  4224  0179D8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4225                           
  4226                           ;stkvar	_u @ sp[(-4)+0]
  4227  0179DE  0EFC               	movlw	-4
  4228  0179E0  006F FF8C  F032    	movff	plusw1,btemp
  4229  0179E6  0EFD               	movlw	-3
  4230  0179E8  006F FF8C  F033    	movff	plusw1,btemp+1
  4231  0179EE  0EFE               	movlw	-2
  4232  0179F0  006F FF8C  F034    	movff	plusw1,btemp+2
  4233  0179F6  0EFF               	movlw	-1
  4234  0179F8  006F FF8C  F035    	movff	plusw1,btemp+3
  4235                           
  4236                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4237  0179FE  0EFA               	movlw	250
  4238  017A00  26E1               	addwf	fsr1l,f,c
  4239  017A02  0EFF               	movlw	255
  4240  017A04  22E2               	addwfc	fsr1h,f,c
  4241  017A06  0012               	return		;funcret
  4242  017A08                     __end_of_nanf:
  4243                           	opt callstack 0
  4244                           
  4245 ;; *************** function _get_raw_result *****************
  4246 ;; Defined at:
  4247 ;;		line 72 in file "daq.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  index           1  [STACK] const enum E16136
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  2  [STACK] unsigned short 
  4254 ;; Registers used:
  4255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/39
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4265 ;;Total ram usage:        0 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    6
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_conv_raw_result
  4272 ;; This function uses a reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text16
  4276  0185F0                     __ptext16:
  4277                           	opt callstack 0
  4278  0185F0                     _get_raw_result:
  4279                           	opt callstack 22
  4280                           
  4281                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4282                           ;stkvar	_index @ sp[(0)+-1]
  4283                           
  4284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4285                           ;incstack = 0
  4286  0185F0  0EFF               	movlw	-1
  4287  0185F2  50E3               	movf	plusw1,w,c
  4288  0185F4  0D02               	mullw	2
  4289  0185F6  50F3               	movf	243,w,c
  4290  0185F8  0FC7               	addlw	low _R
  4291  0185FA  6ED9               	movwf	fsr2l,c
  4292  0185FC  6ADA               	clrf	fsr2h,c
  4293  0185FE  006F FF78  F032    	movff	postinc2,btemp
  4294  018604  006F FF74  F033    	movff	postdec2,btemp+1
  4295                           
  4296                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4297  01860A  52E5               	movf	postdec1,f,c
  4298  01860C  0012               	return		;funcret
  4299  01860E                     __end_of_get_raw_result:
  4300                           	opt callstack 0
  4301                           
  4302 ;; *************** function ___xxtofl *****************
  4303 ;; Defined at:
  4304 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  sign            1  [STACK] unsigned char 
  4307 ;;  val             4  [STACK] long 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  arg             4  [STACK] unsigned long 
  4310 ;;  exp             1  [STACK] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  4  [STACK] unsigned char 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/39
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    6
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_conv_raw_result
  4331 ;; This function uses a reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text17
  4335  01590A                     __ptext17:
  4336                           	opt callstack 0
  4337  01590A                     ___xxtofl:
  4338                           	opt callstack 0
  4339                           
  4340                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4341  01590A  0E05               	movlw	5
  4342  01590C  26E1               	addwf	fsr1l,f,c
  4343  01590E  0E00               	movlw	0
  4344  015910  22E2               	addwfc	fsr1h,f,c
  4345                           
  4346                           ;stkvar	_sign @ sp[(-5)+-1]
  4347                           
  4348                           ;incstack = 0
  4349  015912  0EFA               	movlw	-6
  4350  015914  50E3               	movf	plusw1,w,c
  4351  015916  B4D8               	btfsc	status,2,c
  4352  015918  D01D               	goto	l8027
  4353                           
  4354                           ;stkvar	_val @ sp[(-5)+-5]
  4355  01591A  0EF9               	movlw	-7
  4356  01591C  AEE3               	btfss	plusw1,7,c
  4357  01591E  D01A               	goto	l8027
  4358                           
  4359                           ;stkvar	_val @ sp[(-5)+-5]
  4360  015920  0EF6               	movlw	-10
  4361  015922  006F FF8C  F03A    	movff	plusw1,btemp+8
  4362  015928  0EF7               	movlw	-9
  4363  01592A  006F FF8C  F03B    	movff	plusw1,btemp+9
  4364  015930  0EF8               	movlw	-8
  4365  015932  006F FF8C  F03C    	movff	plusw1,btemp+10
  4366  015938  0EF9               	movlw	-7
  4367  01593A  006F FF8C  F03D    	movff	plusw1,btemp+11
  4368  015940  1E3A               	comf	(btemp+8)^0,f,c
  4369  015942  1E3B               	comf	(btemp+9)^0,f,c
  4370  015944  1E3C               	comf	(btemp+10)^0,f,c
  4371  015946  1E3D               	comf	(btemp+11)^0,f,c
  4372  015948  2A3A               	incf	(btemp+8)^0,f,c
  4373  01594A  0E00               	movlw	0
  4374  01594C  223B               	addwfc	(btemp+9)^0,f,c
  4375  01594E  223C               	addwfc	(btemp+10)^0,f,c
  4376  015950  223D               	addwfc	(btemp+11)^0,f,c
  4377  015952  D010               	goto	L3
  4378  015954                     l8027:
  4379                           
  4380                           ;stkvar	_val @ sp[(-5)+-5]
  4381  015954  0EF6               	movlw	-10
  4382  015956  006F FF8C  F03A    	movff	plusw1,btemp+8
  4383  01595C  0EF7               	movlw	-9
  4384  01595E  006F FF8C  F03B    	movff	plusw1,btemp+9
  4385  015964  0EF8               	movlw	-8
  4386  015966  006F FF8C  F03C    	movff	plusw1,btemp+10
  4387  01596C  0EF9               	movlw	-7
  4388  01596E  006F FF8C  F03D    	movff	plusw1,btemp+11
  4389  015974                     L3:
  4390                           
  4391                           ;stkvar	_arg @ sp[(-5)+0]
  4392  015974  0EFB               	movlw	-5
  4393  015976  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4394  01597C  0EFC               	movlw	-4
  4395  01597E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4396  015984  0EFD               	movlw	-3
  4397  015986  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4398  01598C  0EFE               	movlw	-2
  4399  01598E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4400                           
  4401                           ;stkvar	_val @ sp[(-5)+-5]
  4402  015994  0EF6               	movlw	-10
  4403  015996  50E3               	movf	plusw1,w,c
  4404  015998  E113               	bnz	l8035
  4405  01599A  0EF7               	movlw	-9
  4406  01599C  50E3               	movf	plusw1,w,c
  4407  01599E  E110               	bnz	l8035
  4408  0159A0  0EF8               	movlw	-8
  4409  0159A2  50E3               	movf	plusw1,w,c
  4410  0159A4  E10D               	bnz	l8035
  4411  0159A6  0EF9               	movlw	-7
  4412  0159A8  50E3               	movf	plusw1,w,c
  4413  0159AA  A4D8               	btfss	status,2,c
  4414  0159AC  D009               	goto	l8035
  4415  0159AE  0E00               	movlw	0
  4416  0159B0  6E32               	movwf	btemp^0,c
  4417  0159B2  0E00               	movlw	0
  4418  0159B4  6E33               	movwf	(btemp+1)^0,c
  4419  0159B6  0E00               	movlw	0
  4420  0159B8  6E34               	movwf	(btemp+2)^0,c
  4421  0159BA  0E00               	movlw	0
  4422  0159BC  6E35               	movwf	(btemp+3)^0,c
  4423  0159BE  D0A2               	goto	l2704
  4424  0159C0                     l8035:
  4425  0159C0  0E96               	movlw	150
  4426  0159C2  6E3D               	movwf	(btemp+11)^0,c
  4427                           
  4428                           ;stkvar	_exp @ sp[(-5)+4]
  4429  0159C4  0EFF               	movlw	-1
  4430  0159C6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4431  0159CC  D00B               	goto	l8039
  4432  0159CE                     l8037:
  4433                           
  4434                           ;stkvar	_exp @ sp[(-5)+4]
  4435  0159CE  0EFF               	movlw	-1
  4436  0159D0  2AE3               	incf	plusw1,f,c
  4437                           
  4438                           ;stkvar	_arg @ sp[(-5)+0]
  4439  0159D2  90D8               	bcf	status,0,c
  4440  0159D4  0EFE               	movlw	-2
  4441  0159D6  32E3               	rrcf	plusw1,f,c
  4442  0159D8  0EFD               	movlw	-3
  4443  0159DA  32E3               	rrcf	plusw1,f,c
  4444  0159DC  0EFC               	movlw	-4
  4445  0159DE  32E3               	rrcf	plusw1,f,c
  4446  0159E0  0EFB               	movlw	-5
  4447  0159E2  32E3               	rrcf	plusw1,f,c
  4448  0159E4                     l8039:
  4449                           
  4450                           ;stkvar	_arg @ sp[(-5)+0]
  4451  0159E4  50E1               	movf	fsr1l,w,c
  4452  0159E6  0FFB               	addlw	-5
  4453  0159E8  6ED9               	movwf	fsr2l,c
  4454  0159EA  50E2               	movf	fsr1h,w,c
  4455  0159EC  6EDA               	movwf	fsr2h,c
  4456  0159EE  0EFF               	movlw	255
  4457  0159F0  22DA               	addwfc	fsr2h,f,c
  4458  0159F2  52DE               	movf	postinc2,f,c
  4459  0159F4  52DE               	movf	postinc2,f,c
  4460  0159F6  52DE               	movf	postinc2,f,c
  4461  0159F8  0EFE               	movlw	254
  4462  0159FA  14DD               	andwf	postdec2,w,c
  4463  0159FC  B4D8               	btfsc	status,2,c
  4464  0159FE  D018               	goto	l8047
  4465  015A00  D7E6               	goto	l8037
  4466  015A02                     l8041:
  4467                           
  4468                           ;stkvar	_exp @ sp[(-5)+4]
  4469  015A02  0EFF               	movlw	-1
  4470  015A04  2AE3               	incf	plusw1,f,c
  4471                           
  4472                           ;stkvar	_arg @ sp[(-5)+0]
  4473  015A06  50E1               	movf	fsr1l,w,c
  4474  015A08  0FFB               	addlw	-5
  4475  015A0A  6ED9               	movwf	fsr2l,c
  4476  015A0C  50E2               	movf	fsr1h,w,c
  4477  015A0E  6EDA               	movwf	fsr2h,c
  4478  015A10  0EFF               	movlw	255
  4479  015A12  22DA               	addwfc	fsr2h,f,c
  4480  015A14  2ADE               	incf	postinc2,f,c
  4481  015A16  0E00               	movlw	0
  4482  015A18  22DE               	addwfc	postinc2,f,c
  4483  015A1A  22DE               	addwfc	postinc2,f,c
  4484  015A1C  22DE               	addwfc	postinc2,f,c
  4485                           
  4486                           ;stkvar	_arg @ sp[(-5)+0]
  4487  015A1E  90D8               	bcf	status,0,c
  4488  015A20  0EFE               	movlw	-2
  4489  015A22  32E3               	rrcf	plusw1,f,c
  4490  015A24  0EFD               	movlw	-3
  4491  015A26  32E3               	rrcf	plusw1,f,c
  4492  015A28  0EFC               	movlw	-4
  4493  015A2A  32E3               	rrcf	plusw1,f,c
  4494  015A2C  0EFB               	movlw	-5
  4495  015A2E  32E3               	rrcf	plusw1,f,c
  4496  015A30                     l8047:
  4497                           
  4498                           ;stkvar	_arg @ sp[(-5)+0]
  4499  015A30  50E1               	movf	fsr1l,w,c
  4500  015A32  0FFB               	addlw	-5
  4501  015A34  6ED9               	movwf	fsr2l,c
  4502  015A36  50E2               	movf	fsr1h,w,c
  4503  015A38  6EDA               	movwf	fsr2h,c
  4504  015A3A  0EFF               	movlw	255
  4505  015A3C  22DA               	addwfc	fsr2h,f,c
  4506  015A3E  52DE               	movf	postinc2,f,c
  4507  015A40  52DE               	movf	postinc2,f,c
  4508  015A42  52DE               	movf	postinc2,f,c
  4509  015A44  0EFF               	movlw	255
  4510  015A46  14DD               	andwf	postdec2,w,c
  4511  015A48  B4D8               	btfsc	status,2,c
  4512  015A4A  D00C               	goto	l8051
  4513  015A4C  D7DA               	goto	l8041
  4514  015A4E                     l8049:
  4515                           
  4516                           ;stkvar	_exp @ sp[(-5)+4]
  4517  015A4E  0EFF               	movlw	-1
  4518  015A50  06E3               	decf	plusw1,f,c
  4519                           
  4520                           ;stkvar	_arg @ sp[(-5)+0]
  4521  015A52  90D8               	bcf	status,0,c
  4522  015A54  0EFB               	movlw	-5
  4523  015A56  36E3               	rlcf	plusw1,f,c
  4524  015A58  0EFC               	movlw	-4
  4525  015A5A  36E3               	rlcf	plusw1,f,c
  4526  015A5C  0EFD               	movlw	-3
  4527  015A5E  36E3               	rlcf	plusw1,f,c
  4528  015A60  0EFE               	movlw	-2
  4529  015A62  36E3               	rlcf	plusw1,f,c
  4530  015A64                     l8051:
  4531                           
  4532                           ;stkvar	_arg @ sp[(-5)+0]
  4533  015A64  0EFD               	movlw	-3
  4534  015A66  BEE3               	btfsc	plusw1,7,c
  4535  015A68  D007               	goto	u7880
  4536                           
  4537                           ;stkvar	_exp @ sp[(-5)+4]
  4538  015A6A  0EFF               	movlw	-1
  4539  015A6C  006F FF8C  F032    	movff	plusw1,btemp
  4540  015A72  0E02               	movlw	2
  4541  015A74  6032               	cpfslt	btemp^0,c
  4542  015A76  D7EB               	goto	l8049
  4543  015A78                     u7880:
  4544                           
  4545                           ;stkvar	_exp @ sp[(-5)+4]
  4546  015A78  0EFF               	movlw	-1
  4547  015A7A  B0E3               	btfsc	plusw1,0,c
  4548  015A7C  D002               	goto	l8059
  4549                           
  4550                           ;stkvar	_arg @ sp[(-5)+0]
  4551  015A7E  0EFD               	movlw	-3
  4552  015A80  9EE3               	bcf	plusw1,7,c
  4553  015A82                     l8059:
  4554                           
  4555                           ;stkvar	_exp @ sp[(-5)+4]
  4556  015A82  50E1               	movf	fsr1l,w,c
  4557  015A84  0FFF               	addlw	-1
  4558  015A86  6ED9               	movwf	fsr2l,c
  4559  015A88  50E2               	movf	fsr1h,w,c
  4560  015A8A  6EDA               	movwf	fsr2h,c
  4561  015A8C  0EFF               	movlw	255
  4562  015A8E  22DA               	addwfc	fsr2h,f,c
  4563  015A90  90D8               	bcf	status,0,c
  4564  015A92  32DF               	rrcf	indf2,f,c
  4565                           
  4566                           ;stkvar	_exp @ sp[(-5)+4]
  4567  015A94  0EFF               	movlw	-1
  4568  015A96  006F FF8C  F03D    	movff	plusw1,btemp+11
  4569  015A9C  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4570  015AA2  6A37               	clrf	(btemp+5)^0,c
  4571  015AA4  6A38               	clrf	(btemp+6)^0,c
  4572  015AA6  6A39               	clrf	(btemp+7)^0,c
  4573  015AA8  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4574  015AAE  6A38               	clrf	(btemp+6)^0,c
  4575  015AB0  6A37               	clrf	(btemp+5)^0,c
  4576  015AB2  6A36               	clrf	(btemp+4)^0,c
  4577                           
  4578                           ;stkvar	_arg @ sp[(-5)+0]
  4579  015AB4  50E1               	movf	fsr1l,w,c
  4580  015AB6  0FFB               	addlw	-5
  4581  015AB8  6ED9               	movwf	fsr2l,c
  4582  015ABA  50E2               	movf	fsr1h,w,c
  4583  015ABC  6EDA               	movwf	fsr2h,c
  4584  015ABE  0EFF               	movlw	255
  4585  015AC0  22DA               	addwfc	fsr2h,f,c
  4586  015AC2  5036               	movf	(btemp+4)^0,w,c
  4587  015AC4  12DE               	iorwf	postinc2,f,c
  4588  015AC6  5037               	movf	(btemp+5)^0,w,c
  4589  015AC8  12DE               	iorwf	postinc2,f,c
  4590  015ACA  5038               	movf	(btemp+6)^0,w,c
  4591  015ACC  12DE               	iorwf	postinc2,f,c
  4592  015ACE  5039               	movf	(btemp+7)^0,w,c
  4593  015AD0  12DE               	iorwf	postinc2,f,c
  4594                           
  4595                           ;stkvar	_sign @ sp[(-5)+-1]
  4596  015AD2  0EFA               	movlw	-6
  4597  015AD4  50E3               	movf	plusw1,w,c
  4598  015AD6  B4D8               	btfsc	status,2,c
  4599  015AD8  D005               	goto	l8069
  4600                           
  4601                           ;stkvar	_val @ sp[(-5)+-5]
  4602  015ADA  0EF9               	movlw	-7
  4603  015ADC  AEE3               	btfss	plusw1,7,c
  4604  015ADE  D002               	goto	l8069
  4605                           
  4606                           ;stkvar	_arg @ sp[(-5)+0]
  4607  015AE0  0EFE               	movlw	-2
  4608  015AE2  8EE3               	bsf	plusw1,7,c
  4609  015AE4                     l8069:
  4610                           
  4611                           ;stkvar	_arg @ sp[(-5)+0]
  4612  015AE4  0EFB               	movlw	-5
  4613  015AE6  006F FF8C  F032    	movff	plusw1,btemp
  4614  015AEC  0EFC               	movlw	-4
  4615  015AEE  006F FF8C  F033    	movff	plusw1,btemp+1
  4616  015AF4  0EFD               	movlw	-3
  4617  015AF6  006F FF8C  F034    	movff	plusw1,btemp+2
  4618  015AFC  0EFE               	movlw	-2
  4619  015AFE  006F FF8C  F035    	movff	plusw1,btemp+3
  4620  015B04                     l2704:
  4621                           
  4622                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4623  015B04  0EF6               	movlw	246
  4624  015B06  26E1               	addwf	fsr1l,f,c
  4625  015B08  0EFF               	movlw	255
  4626  015B0A  22E2               	addwfc	fsr1h,f,c
  4627  015B0C  0012               	return		;funcret
  4628  015B0E                     __end_of___xxtofl:
  4629                           	opt callstack 0
  4630                           
  4631 ;; *************** function _clear_adc_scan *****************
  4632 ;; Defined at:
  4633 ;;		line 64 in file "daq.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;		None
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1  [STACK] void 
  4640 ;; Registers used:
  4641 ;;		None
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/39
  4644 ;;		On exit  : 3F/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4651 ;;Total ram usage:        0 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:    6
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;; This function uses a reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text18
  4662  01881E                     __ptext18:
  4663                           	opt callstack 0
  4664  01881E                     _clear_adc_scan:
  4665                           	opt callstack 24
  4666                           
  4667                           ;daq.c: 66:  R.done = 0;
  4668                           
  4669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4670                           ;incstack = 0
  4671  01881E  0100               	movlb	0	; () banked
  4672  018820  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  4673                           
  4674                           ; BSR set to: 0
  4675                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4676  018822  0012               	return		;funcret
  4677  018824                     __end_of_clear_adc_scan:
  4678                           	opt callstack 0
  4679                           
  4680 ;; *************** function _check_help *****************
  4681 ;; Defined at:
  4682 ;;		line 40 in file "mconfig.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  flipper         1  [STACK] const _Bool 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  estatus         1  [STACK] _Bool 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1  [STACK] _Bool 
  4689 ;; Registers used:
  4690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4691 ;; Tracked objects:
  4692 ;;		On entry : 3F/2
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4700 ;;Total ram usage:        0 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:   18
  4703 ;; This function calls:
  4704 ;;		_StartTimer
  4705 ;;		_TimerDone
  4706 ;;		_display_help
  4707 ;;		_display_info
  4708 ;;		_get_vterm_ptr
  4709 ;;		_help_button
  4710 ;;		_mode_lamp_bright
  4711 ;;		_mode_lamp_dim
  4712 ;;		_set_display_info
  4713 ;;		_set_temp_display_help
  4714 ;;		_set_vterm
  4715 ;;		_sprintf
  4716 ;;		_update_lcd
  4717 ;;		_vterm_dump
  4718 ;; This function is called by:
  4719 ;;		_main
  4720 ;; This function uses a reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text19
  4724  0154D0                     __ptext19:
  4725                           	opt callstack 0
  4726  0154D0                     _check_help:
  4727                           	opt callstack 0
  4728                           
  4729                           ; BSR set to: 0
  4730                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4731  0154D0  52E6               	movf	postinc1,f,c
  4732                           
  4733                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  4734                           ;stkvar	_estatus @ sp[(-1)+0]
  4735                           
  4736                           ;incstack = 0
  4737  0154D2  0EFF               	movlw	-1
  4738  0154D4  6AE3               	clrf	plusw1,c
  4739                           
  4740                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  4741  0154D6  ECB1  F0BF         	call	_help_button	;wreg free
  4742  0154DA  5032               	movf	btemp^0,w,c
  4743  0154DC  B4D8               	btfsc	status,2,c
  4744  0154DE  D0D3               	goto	l10209
  4745  0154E0  ECFF  F0C3         	call	_display_info	;wreg free
  4746  0154E4  0432               	decf	btemp^0,w,c
  4747  0154E6  B4D8               	btfsc	status,2,c
  4748  0154E8  D0CE               	goto	l10209
  4749                           
  4750                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  4751  0154EA  0EDC               	movlw	220
  4752  0154EC  6EE6               	movwf	postinc1,c
  4753  0154EE  0E05               	movlw	5
  4754  0154F0  6EE6               	movwf	postinc1,c
  4755  0154F2  0E0B               	movlw	11
  4756  0154F4  6EE6               	movwf	postinc1,c
  4757  0154F6  EC93  F0BF         	call	_StartTimer	;wreg free
  4758                           
  4759                           ;mconfig.c: 48:   if (V.debug)
  4760  0154FA  0102               	movlb	2	; () banked
  4761  0154FC  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4762                           
  4763                           ; BSR set to: 2
  4764                           ;mconfig.c: 49:    vterm_dump();
  4765  0154FE  ECCB  F0B2         	call	_vterm_dump	;wreg free
  4766                           
  4767                           ;mconfig.c: 51:   set_vterm(1);
  4768  015502  0E01               	movlw	1
  4769  015504  6EE6               	movwf	postinc1,c
  4770  015506  EC42  F0C3         	call	_set_vterm	;wreg free
  4771                           
  4772                           ; BSR set to: 5
  4773                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  4774  01550A  ECFF  F0C3         	call	_display_info	;wreg free
  4775  01550E  5032               	movf	btemp^0,w,c
  4776  015510  6EE6               	movwf	postinc1,c
  4777  015512  ECBF  F0C3         	call	_set_temp_display_help	;wreg free
  4778                           
  4779                           ; BSR set to: 2
  4780                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  4781  015516  0E01               	movlw	1
  4782  015518  6EE6               	movwf	postinc1,c
  4783  01551A  EC07  F0C3         	call	_set_display_info	;wreg free
  4784                           
  4785                           ;mconfig.c: 54:   if (flipper) {
  4786                           ;stkvar	_flipper @ sp[(-1)+-1]
  4787  01551E  0EFE               	movlw	-2
  4788  015520  50E3               	movf	plusw1,w,c
  4789  015522  B4D8               	btfsc	status,2,c
  4790  015524  D019               	goto	l10195
  4791                           
  4792                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4793  015526  0EC2               	movlw	low STR_18
  4794  015528  6EE6               	movwf	postinc1,c
  4795  01552A  0EFF               	movlw	high STR_18
  4796  01552C  6EE6               	movwf	postinc1,c
  4797  01552E  0EC8               	movlw	low STR_20
  4798  015530  6EE6               	movwf	postinc1,c
  4799  015532  0EFE               	movlw	high STR_20
  4800  015534  6EE6               	movwf	postinc1,c
  4801  015536  0E01               	movlw	1
  4802  015538  6EE6               	movwf	postinc1,c
  4803  01553A  0E00               	movlw	0
  4804  01553C  6EE6               	movwf	postinc1,c
  4805  01553E  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  4806  015542  0060  F0CB  FFE6   	movff	btemp,postinc1
  4807  015548  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4808  01554E  0E06               	movlw	6
  4809  015550  6EE6               	movwf	postinc1,c
  4810  015552  EC91  F0B5         	call	_sprintf	;wreg free
  4811                           
  4812                           ;mconfig.c: 56:   } else {
  4813  015556  D018               	goto	l1561
  4814  015558                     l10195:
  4815                           
  4816                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4817  015558  0ED8               	movlw	low STR_19
  4818  01555A  6EE6               	movwf	postinc1,c
  4819  01555C  0EFF               	movlw	high STR_19
  4820  01555E  6EE6               	movwf	postinc1,c
  4821  015560  0EC8               	movlw	low STR_20
  4822  015562  6EE6               	movwf	postinc1,c
  4823  015564  0EFE               	movlw	high STR_20
  4824  015566  6EE6               	movwf	postinc1,c
  4825  015568  0E01               	movlw	1
  4826  01556A  6EE6               	movwf	postinc1,c
  4827  01556C  0E00               	movlw	0
  4828  01556E  6EE6               	movwf	postinc1,c
  4829  015570  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  4830  015574  0060  F0CB  FFE6   	movff	btemp,postinc1
  4831  01557A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4832  015580  0E06               	movlw	6
  4833  015582  6EE6               	movwf	postinc1,c
  4834  015584  EC91  F0B5         	call	_sprintf	;wreg free
  4835  015588                     l1561:
  4836                           
  4837                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4838  015588  0102               	movlb	2	; () banked
  4839  01558A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4840  01558C  32E8               	rrcf	wreg,f,c
  4841  01558E  32E8               	rrcf	wreg,f,c
  4842  015590  0B03               	andlw	3
  4843  015592  0D24               	mullw	36
  4844  015594  0E12               	movlw	18
  4845  015596  26F3               	addwf	243,f,c
  4846  015598  0E00               	movlw	0
  4847  01559A  22F4               	addwfc	244,f,c
  4848  01559C  0E0D               	movlw	low _T
  4849  01559E  6E3C               	movwf	(btemp+10)^0,c
  4850  0155A0  0EFE               	movlw	high _T
  4851  0155A2  6E3D               	movwf	(btemp+11)^0,c
  4852  0155A4  50F3               	movf	243,w,c
  4853  0155A6  263C               	addwf	(btemp+10)^0,f,c
  4854  0155A8  50F4               	movf	244,w,c
  4855  0155AA  223D               	addwfc	(btemp+11)^0,f,c
  4856  0155AC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4857  0155B2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4858  0155B8  0ECE               	movlw	low STR_22
  4859  0155BA  6EE6               	movwf	postinc1,c
  4860  0155BC  0EFF               	movlw	high STR_22
  4861  0155BE  6EE6               	movwf	postinc1,c
  4862  0155C0  0E01               	movlw	1
  4863  0155C2  6EE6               	movwf	postinc1,c
  4864  0155C4  0E01               	movlw	1
  4865  0155C6  6EE6               	movwf	postinc1,c
  4866  0155C8  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  4867  0155CC  0060  F0CB  FFE6   	movff	btemp,postinc1
  4868  0155D2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4869  0155D8  0E06               	movlw	6
  4870  0155DA  6EE6               	movwf	postinc1,c
  4871  0155DC  EC91  F0B5         	call	_sprintf	;wreg free
  4872                           
  4873                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4874  0155E0  0102               	movlb	2	; () banked
  4875  0155E2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4876  0155E4  32E8               	rrcf	wreg,f,c
  4877  0155E6  32E8               	rrcf	wreg,f,c
  4878  0155E8  0B03               	andlw	3
  4879  0155EA  0D24               	mullw	36
  4880  0155EC  0E0D               	movlw	low _T
  4881  0155EE  6E3C               	movwf	(btemp+10)^0,c
  4882  0155F0  0EFE               	movlw	high _T
  4883  0155F2  6E3D               	movwf	(btemp+11)^0,c
  4884  0155F4  50F3               	movf	243,w,c
  4885  0155F6  263C               	addwf	(btemp+10)^0,f,c
  4886  0155F8  50F4               	movf	244,w,c
  4887  0155FA  223D               	addwfc	(btemp+11)^0,f,c
  4888  0155FC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4889  015602  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4890  015608  0ECE               	movlw	low STR_22
  4891  01560A  6EE6               	movwf	postinc1,c
  4892  01560C  0EFF               	movlw	high STR_22
  4893  01560E  6EE6               	movwf	postinc1,c
  4894  015610  0E01               	movlw	1
  4895  015612  6EE6               	movwf	postinc1,c
  4896  015614  0E02               	movlw	2
  4897  015616  6EE6               	movwf	postinc1,c
  4898  015618  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  4899  01561C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4900  015622  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4901  015628  0E06               	movlw	6
  4902  01562A  6EE6               	movwf	postinc1,c
  4903  01562C  EC91  F0B5         	call	_sprintf	;wreg free
  4904                           
  4905                           ;mconfig.c: 61:   V.help_id++;
  4906  015630  EE20  F29B         	lfsr	2,_V+155	;volatile
  4907  015634  38DF               	swapf	223,w,c
  4908  015636  6E3D               	movwf	(btemp+11)^0,c
  4909  015638  323D               	rrcf	(btemp+11)^0,f,c
  4910  01563A  303D               	rrcf	(btemp+11)^0,w,c
  4911  01563C  0B03               	andlw	3
  4912  01563E  6E3D               	movwf	(btemp+11)^0,c
  4913  015640  2A3D               	incf	(btemp+11)^0,f,c
  4914  015642  3A3D               	swapf	(btemp+11)^0,f,c
  4915  015644  363D               	rlcf	(btemp+11)^0,f,c
  4916  015646  363D               	rlcf	(btemp+11)^0,f,c
  4917  015648  50DF               	movf	223,w,c
  4918  01564A  183D               	xorwf	(btemp+11)^0,w,c
  4919  01564C  0B3F               	andlw	-193
  4920  01564E  183D               	xorwf	(btemp+11)^0,w,c
  4921  015650  6EDF               	movwf	223,c
  4922                           
  4923                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  4924  015652  0EB8               	movlw	184
  4925  015654  6EE6               	movwf	postinc1,c
  4926  015656  0E0B               	movlw	11
  4927  015658  6EE6               	movwf	postinc1,c
  4928  01565A  0E09               	movlw	9
  4929  01565C  6EE6               	movwf	postinc1,c
  4930  01565E  EC93  F0BF         	call	_StartTimer	;wreg free
  4931                           
  4932                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  4933  015662  0EB8               	movlw	184
  4934  015664  6EE6               	movwf	postinc1,c
  4935  015666  0E0B               	movlw	11
  4936  015668  6EE6               	movwf	postinc1,c
  4937  01566A  0E07               	movlw	7
  4938  01566C  6EE6               	movwf	postinc1,c
  4939  01566E  EC93  F0BF         	call	_StartTimer	;wreg free
  4940                           
  4941                           ;mconfig.c: 64:   mode_lamp_bright();
  4942  015672  ECCE  F0C3         	call	_mode_lamp_bright	;wreg free
  4943                           
  4944                           ;mconfig.c: 65:   update_lcd(1);
  4945  015676  0E01               	movlw	1
  4946  015678  6EE6               	movwf	postinc1,c
  4947  01567A  EC0A  F0B5         	call	_update_lcd	;wreg free
  4948                           
  4949                           ;mconfig.c: 66:   estatus=1;
  4950                           ;stkvar	_estatus @ sp[(-1)+0]
  4951  01567E  0EFF               	movlw	-1
  4952  015680  6AE3               	clrf	plusw1,c
  4953  015682  2AE3               	incf	plusw1,f,c
  4954                           
  4955                           ;mconfig.c: 67:  } else {
  4956  015684  D032               	goto	l10225
  4957  015686                     l10209:
  4958                           
  4959                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  4960  015686  0E09               	movlw	9
  4961  015688  6EE6               	movwf	postinc1,c
  4962  01568A  EC81  F0C2         	call	_TimerDone	;wreg free
  4963  01568E  5032               	movf	btemp^0,w,c
  4964  015690  B4D8               	btfsc	status,2,c
  4965  015692  D02B               	goto	l10225
  4966                           
  4967                           ;mconfig.c: 69:    set_vterm(0);
  4968  015694  0E00               	movlw	0
  4969  015696  6EE6               	movwf	postinc1,c
  4970  015698  EC42  F0C3         	call	_set_vterm	;wreg free
  4971                           
  4972                           ; BSR set to: 5
  4973                           ;mconfig.c: 70:    V.help = 0;
  4974  01569C  0102               	movlb	2	; () banked
  4975  01569E  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  4976                           
  4977                           ; BSR set to: 2
  4978                           ;mconfig.c: 71:    set_display_info(display_help());
  4979  0156A0  EC03  F0C4         	call	_display_help	;wreg free
  4980  0156A4  5032               	movf	btemp^0,w,c
  4981  0156A6  6EE6               	movwf	postinc1,c
  4982  0156A8  EC07  F0C3         	call	_set_display_info	;wreg free
  4983                           
  4984                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  4985  0156AC  0060  FA57  FFE6   	movff	_V+149,postinc1
  4986  0156B2  0060  FA5B  FFE6   	movff	_V+150,postinc1
  4987  0156B8  EC6B  F0C3         	call	_mode_lamp_dim	;wreg free
  4988                           
  4989                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  4990  0156BC  0E0B               	movlw	11
  4991  0156BE  6EE6               	movwf	postinc1,c
  4992  0156C0  EC81  F0C2         	call	_TimerDone	;wreg free
  4993  0156C4  5032               	movf	btemp^0,w,c
  4994  0156C6  B4D8               	btfsc	status,2,c
  4995  0156C8  D010               	goto	l10225
  4996                           
  4997                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  4998  0156CA  0102               	movlb	2	; () banked
  4999  0156CC  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5000  0156CE  A4D8               	btfss	status,2,c
  5001  0156D0  D002               	goto	u10280
  5002  0156D2  0E01               	movlw	1
  5003  0156D4  D001               	goto	u10290
  5004  0156D6                     u10280:
  5005  0156D6  0E00               	movlw	0
  5006  0156D8                     u10290:
  5007  0156D8  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5008                           
  5009                           ; BSR set to: 2
  5010                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  5011  0156DA  0EDC               	movlw	220
  5012  0156DC  6EE6               	movwf	postinc1,c
  5013  0156DE  0E05               	movlw	5
  5014  0156E0  6EE6               	movwf	postinc1,c
  5015  0156E2  0E0B               	movlw	11
  5016  0156E4  6EE6               	movwf	postinc1,c
  5017  0156E6  EC93  F0BF         	call	_StartTimer	;wreg free
  5018  0156EA                     l10225:
  5019                           
  5020                           ;mconfig.c: 79:  return estatus;
  5021                           ;stkvar	_estatus @ sp[(-1)+0]
  5022  0156EA  0EFF               	movlw	-1
  5023  0156EC  006F FF8C  F032    	movff	plusw1,btemp
  5024                           
  5025                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5026  0156F2  52E5               	movf	postdec1,f,c
  5027  0156F4  52E5               	movf	postdec1,f,c
  5028  0156F6  0012               	return		;funcret
  5029  0156F8                     __end_of_check_help:
  5030                           	opt callstack 0
  5031                           
  5032 ;; *************** function _vterm_dump *****************
  5033 ;; Defined at:
  5034 ;;		line 121 in file "mconfig.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1  [STACK] void 
  5041 ;; Registers used:
  5042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5043 ;; Tracked objects:
  5044 ;;		On entry : 3F/2
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5052 ;;Total ram usage:        0 bytes
  5053 ;; Hardware stack levels used:    1
  5054 ;; Hardware stack levels required when called:   17
  5055 ;; This function calls:
  5056 ;;		_WaitMs
  5057 ;;		_eaDogM_WriteStringAtPos
  5058 ;;		_get_vterm_ptr
  5059 ;;		_sprintf
  5060 ;;		_wait_lcd_done
  5061 ;; This function is called by:
  5062 ;;		_check_help
  5063 ;; This function uses a reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text20
  5067  016596                     __ptext20:
  5068                           	opt callstack 0
  5069  016596                     _vterm_dump:
  5070                           	opt callstack 12
  5071                           
  5072                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5073                           
  5074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5075                           ;incstack = 0
  5076  016596  0E01               	movlw	1
  5077  016598  6EE6               	movwf	postinc1,c
  5078  01659A  0E00               	movlw	0
  5079  01659C  6EE6               	movwf	postinc1,c
  5080  01659E  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  5081  0165A2  0060  F0CB  FFE6   	movff	btemp,postinc1
  5082  0165A8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5083  0165AE  0E00               	movlw	0
  5084  0165B0  6EE6               	movwf	postinc1,c
  5085  0165B2  0E00               	movlw	0
  5086  0165B4  6EE6               	movwf	postinc1,c
  5087  0165B6  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  5088  0165BA  0060  F0CB  FFE6   	movff	btemp,postinc1
  5089  0165C0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5090  0165C6  0EA4               	movlw	low STR_24
  5091  0165C8  6EE6               	movwf	postinc1,c
  5092  0165CA  0EFF               	movlw	high STR_24
  5093  0165CC  6EE6               	movwf	postinc1,c
  5094  0165CE  0E01               	movlw	low (_V+1)
  5095  0165D0  6EE6               	movwf	postinc1,c
  5096  0165D2  0E02               	movlw	high (_V+1)
  5097  0165D4  6EE6               	movwf	postinc1,c
  5098  0165D6  0E08               	movlw	8
  5099  0165D8  6EE6               	movwf	postinc1,c
  5100  0165DA  EC91  F0B5         	call	_sprintf	;wreg free
  5101                           
  5102                           ;mconfig.c: 124:  wait_lcd_done();
  5103  0165DE  EC34  F0C3         	call	_wait_lcd_done	;wreg free
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5107  0165E2  0E01               	movlw	low (_V+1)
  5108  0165E4  6EE6               	movwf	postinc1,c
  5109  0165E6  0E02               	movlw	high (_V+1)
  5110  0165E8  6EE6               	movwf	postinc1,c
  5111  0165EA  0E00               	movlw	0
  5112  0165EC  6EE6               	movwf	postinc1,c
  5113  0165EE  0E00               	movlw	0
  5114  0165F0  6EE6               	movwf	postinc1,c
  5115  0165F2  ECE8  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5116                           
  5117                           ; BSR set to: 59
  5118                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5119  0165F6  0E01               	movlw	1
  5120  0165F8  6EE6               	movwf	postinc1,c
  5121  0165FA  0E01               	movlw	1
  5122  0165FC  6EE6               	movwf	postinc1,c
  5123  0165FE  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  5124  016602  0060  F0CB  FFE6   	movff	btemp,postinc1
  5125  016608  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5126  01660E  0E00               	movlw	0
  5127  016610  6EE6               	movwf	postinc1,c
  5128  016612  0E01               	movlw	1
  5129  016614  6EE6               	movwf	postinc1,c
  5130  016616  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  5131  01661A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5132  016620  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5133  016626  0EA4               	movlw	low STR_24
  5134  016628  6EE6               	movwf	postinc1,c
  5135  01662A  0EFF               	movlw	high STR_24
  5136  01662C  6EE6               	movwf	postinc1,c
  5137  01662E  0E01               	movlw	low (_V+1)
  5138  016630  6EE6               	movwf	postinc1,c
  5139  016632  0E02               	movlw	high (_V+1)
  5140  016634  6EE6               	movwf	postinc1,c
  5141  016636  0E08               	movlw	8
  5142  016638  6EE6               	movwf	postinc1,c
  5143  01663A  EC91  F0B5         	call	_sprintf	;wreg free
  5144                           
  5145                           ;mconfig.c: 127:  wait_lcd_done();
  5146  01663E  EC34  F0C3         	call	_wait_lcd_done	;wreg free
  5147                           
  5148                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5149  016642  0E01               	movlw	low (_V+1)
  5150  016644  6EE6               	movwf	postinc1,c
  5151  016646  0E02               	movlw	high (_V+1)
  5152  016648  6EE6               	movwf	postinc1,c
  5153  01664A  0E00               	movlw	0
  5154  01664C  6EE6               	movwf	postinc1,c
  5155  01664E  0E01               	movlw	1
  5156  016650  6EE6               	movwf	postinc1,c
  5157  016652  ECE8  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5158                           
  5159                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5160  016656  0E01               	movlw	1
  5161  016658  6EE6               	movwf	postinc1,c
  5162  01665A  0E02               	movlw	2
  5163  01665C  6EE6               	movwf	postinc1,c
  5164  01665E  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  5165  016662  0060  F0CB  FFE6   	movff	btemp,postinc1
  5166  016668  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5167  01666E  0E00               	movlw	0
  5168  016670  6EE6               	movwf	postinc1,c
  5169  016672  0E02               	movlw	2
  5170  016674  6EE6               	movwf	postinc1,c
  5171  016676  EC97  F0C0         	call	_get_vterm_ptr	;wreg free
  5172  01667A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5173  016680  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5174  016686  0EA4               	movlw	low STR_24
  5175  016688  6EE6               	movwf	postinc1,c
  5176  01668A  0EFF               	movlw	high STR_24
  5177  01668C  6EE6               	movwf	postinc1,c
  5178  01668E  0E01               	movlw	low (_V+1)
  5179  016690  6EE6               	movwf	postinc1,c
  5180  016692  0E02               	movlw	high (_V+1)
  5181  016694  6EE6               	movwf	postinc1,c
  5182  016696  0E08               	movlw	8
  5183  016698  6EE6               	movwf	postinc1,c
  5184  01669A  EC91  F0B5         	call	_sprintf	;wreg free
  5185                           
  5186                           ;mconfig.c: 130:  wait_lcd_done();
  5187  01669E  EC34  F0C3         	call	_wait_lcd_done	;wreg free
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5191  0166A2  0E01               	movlw	low (_V+1)
  5192  0166A4  6EE6               	movwf	postinc1,c
  5193  0166A6  0E02               	movlw	high (_V+1)
  5194  0166A8  6EE6               	movwf	postinc1,c
  5195  0166AA  0E00               	movlw	0
  5196  0166AC  6EE6               	movwf	postinc1,c
  5197  0166AE  0E02               	movlw	2
  5198  0166B0  6EE6               	movwf	postinc1,c
  5199  0166B2  ECE8  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5200                           
  5201                           ; BSR set to: 59
  5202                           ;mconfig.c: 132:  WaitMs(3000);
  5203  0166B6  0EB8               	movlw	184
  5204  0166B8  6EE6               	movwf	postinc1,c
  5205  0166BA  0E0B               	movlw	11
  5206  0166BC  6EE6               	movwf	postinc1,c
  5207  0166BE  ECCD  F0BF         	call	_WaitMs	;wreg free
  5208                           
  5209                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5210  0166C2  0012               	return		;funcret
  5211  0166C4                     __end_of_vterm_dump:
  5212                           	opt callstack 0
  5213                           
  5214 ;; *************** function _sprintf *****************
  5215 ;; Defined at:
  5216 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  s               2  [STACK] PTR unsigned char 
  5219 ;;		 -> D.lcd(216), D(218), V(187), 
  5220 ;;  fmt             2  [STACK] PTR const unsigned char 
  5221 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  5222 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  5223 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  5224 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  5225 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(19), 
  5226 ;;		 -> STR_10(19), STR_9(19), STR_8(17), STR_6(15), 
  5227 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  f               6  [STACK] struct _IO_FILE
  5230 ;;  ap              2  [STACK] PTR void [1]
  5231 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5232 ;;  ret             2    0        int 
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  2  [STACK] int 
  5235 ;; Registers used:
  5236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/5
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5246 ;;Total ram usage:        0 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:   14
  5249 ;; This function calls:
  5250 ;;		_vfprintf
  5251 ;; This function is called by:
  5252 ;;		_main
  5253 ;;		_check_help
  5254 ;;		_vterm_dump
  5255 ;; This function uses a reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text21
  5259  016B22                     __ptext21:
  5260                           	opt callstack 0
  5261  016B22                     _sprintf:
  5262                           	opt callstack 0
  5263                           
  5264                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5265  016B22  0E08               	movlw	8
  5266  016B24  26E1               	addwf	fsr1l,f,c
  5267  016B26  0E00               	movlw	0
  5268  016B28  22E2               	addwfc	fsr1h,f,c
  5269                           
  5270                           ;incstack = 0
  5271  016B2A  0EFE               	movlw	254
  5272  016B2C  6E3C               	movwf	(btemp+10)^0,c
  5273  016B2E  0EFF               	movlw	255
  5274  016B30  6E3D               	movwf	(btemp+11)^0,c
  5275                           
  5276                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5277  016B32  0EF5               	movlw	245
  5278  016B34  24E1               	addwf	fsr1l,w,c
  5279  016B36  6E3A               	movwf	(btemp+8)^0,c
  5280  016B38  0EFF               	movlw	255
  5281  016B3A  20E2               	addwfc	fsr1h,w,c
  5282  016B3C  6E3B               	movwf	(btemp+9)^0,c
  5283  016B3E  503C               	movf	(btemp+10)^0,w,c
  5284  016B40  263A               	addwf	(btemp+8)^0,f,c
  5285  016B42  503D               	movf	(btemp+11)^0,w,c
  5286  016B44  223B               	addwfc	(btemp+9)^0,f,c
  5287                           
  5288                           ;stkvar	_ap @ sp[(-8)+6]
  5289  016B46  0EFF               	movlw	-1
  5290  016B48  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5291  016B4E  0EFE               	movlw	-2
  5292  016B50  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5293                           
  5294                           ;stkvar	_s @ sp[(-8)+-3]
  5295  016B56  0EF5               	movlw	-11
  5296  016B58  006F FF8C  F03C    	movff	plusw1,btemp+10
  5297  016B5E  0EF6               	movlw	-10
  5298  016B60  006F FF8C  F03D    	movff	plusw1,btemp+11
  5299                           
  5300                           ;stkvar	_f @ sp[(-8)+0]
  5301  016B66  0EF9               	movlw	-7
  5302  016B68  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5303  016B6E  0EF8               	movlw	-8
  5304  016B70  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5305                           
  5306                           ;stkvar	_f @ sp[(-8)+0]
  5307  016B76  0EFA               	movlw	250
  5308  016B78  24E1               	addwf	fsr1l,w,c
  5309  016B7A  6ED9               	movwf	fsr2l,c
  5310  016B7C  0EFF               	movlw	255
  5311  016B7E  20E2               	addwfc	fsr1h,w,c
  5312  016B80  6EDA               	movwf	fsr2h,c
  5313  016B82  0E00               	movlw	0
  5314  016B84  6EDE               	movwf	postinc2,c
  5315  016B86  0E00               	movlw	0
  5316  016B88  6EDD               	movwf	postdec2,c
  5317                           
  5318                           ;stkvar	_f @ sp[(-8)+0]
  5319  016B8A  0EFC               	movlw	252
  5320  016B8C  24E1               	addwf	fsr1l,w,c
  5321  016B8E  6ED9               	movwf	fsr2l,c
  5322  016B90  0EFF               	movlw	255
  5323  016B92  20E2               	addwfc	fsr1h,w,c
  5324  016B94  6EDA               	movwf	fsr2h,c
  5325  016B96  0E00               	movlw	0
  5326  016B98  6EDE               	movwf	postinc2,c
  5327  016B9A  0E00               	movlw	0
  5328  016B9C  6EDD               	movwf	postdec2,c
  5329                           
  5330                           ;stkvar	_ap @ sp[(-8)+6]
  5331  016B9E  0EFE               	movlw	254
  5332  016BA0  24E1               	addwf	fsr1l,w,c
  5333  016BA2  6E32               	movwf	btemp^0,c
  5334  016BA4  0EFF               	movlw	255
  5335  016BA6  20E2               	addwfc	fsr1h,w,c
  5336  016BA8  6E33               	movwf	(btemp+1)^0,c
  5337  016BAA  0060  F0CB  FFE6   	movff	btemp,postinc1
  5338  016BB0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5339                           
  5340                           ;stkvar	_fmt @ sp[(-10)+-5]
  5341  016BB6  0EF1               	movlw	-15
  5342  016BB8  006F FF8F FFE6     	movff	plusw1,postinc1
  5343  016BBE  006F FF8F FFE6     	movff	plusw1,postinc1
  5344                           
  5345                           ;stkvar	_f @ sp[(-12)+0]
  5346  016BC4  0EF4               	movlw	244
  5347  016BC6  24E1               	addwf	fsr1l,w,c
  5348  016BC8  6E32               	movwf	btemp^0,c
  5349  016BCA  0EFF               	movlw	255
  5350  016BCC  20E2               	addwfc	fsr1h,w,c
  5351  016BCE  6E33               	movwf	(btemp+1)^0,c
  5352  016BD0  0060  F0CB  FFE6   	movff	btemp,postinc1
  5353  016BD6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5354  016BDC  EC84  F0B8         	call	_vfprintf	;wreg free
  5355                           
  5356                           ;stkvar	_f @ sp[(-8)+0]
  5357  016BE0  0EFA               	movlw	250
  5358  016BE2  24E1               	addwf	fsr1l,w,c
  5359  016BE4  6ED9               	movwf	fsr2l,c
  5360  016BE6  0EFF               	movlw	255
  5361  016BE8  20E2               	addwfc	fsr1h,w,c
  5362  016BEA  6EDA               	movwf	fsr2h,c
  5363  016BEC  006F FF78  F03C    	movff	postinc2,btemp+10
  5364  016BF2  006F FF74  F03D    	movff	postdec2,btemp+11
  5365                           
  5366                           ;stkvar	_s @ sp[(-8)+-3]
  5367  016BF8  0EF5               	movlw	-11
  5368  016BFA  006F FF8C  F03A    	movff	plusw1,btemp+8
  5369  016C00  0EF6               	movlw	-10
  5370  016C02  006F FF8C  F03B    	movff	plusw1,btemp+9
  5371  016C08  503C               	movf	(btemp+10)^0,w,c
  5372  016C0A  243A               	addwf	(btemp+8)^0,w,c
  5373  016C0C  6ED9               	movwf	fsr2l,c
  5374  016C0E  503D               	movf	(btemp+11)^0,w,c
  5375  016C10  203B               	addwfc	(btemp+9)^0,w,c
  5376  016C12  6EDA               	movwf	fsr2h,c
  5377  016C14  0E00               	movlw	0
  5378  016C16  6EDF               	movwf	indf2,c
  5379                           
  5380                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5381  016C18  0EF8               	movlw	248
  5382  016C1A  26E1               	addwf	fsr1l,f,c
  5383  016C1C  0EFF               	movlw	255
  5384  016C1E  22E2               	addwfc	fsr1h,f,c
  5385  016C20  52E5               	movf	postdec1,f,c
  5386  016C22  50E7               	movf	indf1,w,c
  5387  016C24  5EE1               	subwf	fsr1l,f,c
  5388  016C26  0E00               	movlw	0
  5389  016C28  5AE2               	subwfb	fsr1h,f,c
  5390  016C2A  0012               	return		;funcret
  5391  016C2C                     __end_of_sprintf:
  5392                           	opt callstack 0
  5393                           
  5394 ;; *************** function _get_vterm_ptr *****************
  5395 ;; Defined at:
  5396 ;;		line 116 in file "mconfig.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  line            1  [STACK] const unsigned char 
  5399 ;;  vterm           1  [STACK] const unsigned char 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  2  [STACK] PTR unsigned char 
  5404 ;; Registers used:
  5405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/5
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5415 ;;Total ram usage:        0 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    6
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_main
  5422 ;;		_check_help
  5423 ;;		_vterm_dump
  5424 ;; This function uses a reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text22
  5428  01812E                     __ptext22:
  5429                           	opt callstack 0
  5430  01812E                     _get_vterm_ptr:
  5431                           	opt callstack 24
  5432                           
  5433                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  5434                           ;stkvar	_vterm @ sp[(0)+-2]
  5435                           
  5436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5437                           ;incstack = 0
  5438  01812E  0EFE               	movlw	-2
  5439  018130  50E3               	movf	plusw1,w,c
  5440  018132  0B03               	andlw	3
  5441  018134  0D36               	mullw	54
  5442  018136  0E00               	movlw	low _D
  5443  018138  6E32               	movwf	btemp^0,c
  5444  01813A  0E05               	movlw	high _D
  5445  01813C  6E33               	movwf	(btemp+1)^0,c
  5446  01813E  50F3               	movf	243,w,c
  5447  018140  2632               	addwf	btemp^0,f,c
  5448  018142  50F4               	movf	244,w,c
  5449  018144  2233               	addwfc	(btemp+1)^0,f,c
  5450                           
  5451                           ;stkvar	_line @ sp[(0)+-1]
  5452  018146  0EFF               	movlw	-1
  5453  018148  50E3               	movf	plusw1,w,c
  5454  01814A  0B03               	andlw	3
  5455  01814C  0D12               	mullw	18
  5456  01814E  50F3               	movf	243,w,c
  5457  018150  2632               	addwf	btemp^0,f,c
  5458  018152  50F4               	movf	244,w,c
  5459  018154  2233               	addwfc	(btemp+1)^0,f,c
  5460                           
  5461                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5462  018156  52E5               	movf	postdec1,f,c
  5463  018158  52E5               	movf	postdec1,f,c
  5464  01815A  0012               	return		;funcret
  5465  01815C                     __end_of_get_vterm_ptr:
  5466                           	opt callstack 0
  5467                           
  5468 ;; *************** function _WaitMs *****************
  5469 ;; Defined at:
  5470 ;;		line 32 in file "timers.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  numMilliseco    2  [STACK] const unsigned short 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1  [STACK] void 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/2
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5488 ;;Total ram usage:        0 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    7
  5491 ;; This function calls:
  5492 ;;		_StartTimer
  5493 ;;		_TimerDone
  5494 ;; This function is called by:
  5495 ;;		_main
  5496 ;;		_vterm_dump
  5497 ;; This function uses a reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text23
  5501  017F9A                     __ptext23:
  5502                           	opt callstack 0
  5503  017F9A                     _WaitMs:
  5504                           	opt callstack 21
  5505                           
  5506                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5507                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5508                           
  5509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5510                           ;incstack = 0
  5511  017F9A  0EFE               	movlw	-2
  5512  017F9C  006F FF8F FFE6     	movff	plusw1,postinc1
  5513  017FA2  006F FF8F FFE6     	movff	plusw1,postinc1
  5514  017FA8  0E00               	movlw	0
  5515  017FAA  6EE6               	movwf	postinc1,c
  5516  017FAC  EC93  F0BF         	call	_StartTimer	;wreg free
  5517                           
  5518                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5519  017FB0  D005               	goto	l7989
  5520  017FB2                     l1491:
  5521                           
  5522                           ;timers.c: 36:   __nop();
  5523  017FB2  F000               	nop	
  5524                           
  5525                           ;timers.c: 37:   __nop();
  5526  017FB4  F000               	nop	
  5527                           
  5528                           ;timers.c: 38:   __nop();
  5529  017FB6  F000               	nop	
  5530                           
  5531                           ;timers.c: 39:   __nop();
  5532  017FB8  F000               	nop	
  5533  017FBA  0004               	clrwdt		;# 
  5534  017FBC                     l7989:
  5535                           
  5536                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5537  017FBC  0E00               	movlw	0
  5538  017FBE  6EE6               	movwf	postinc1,c
  5539  017FC0  EC81  F0C2         	call	_TimerDone	;wreg free
  5540  017FC4  5032               	movf	btemp^0,w,c
  5541  017FC6  B4D8               	btfsc	status,2,c
  5542  017FC8  D7F4               	goto	l1491
  5543                           
  5544                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5545  017FCA  52E5               	movf	postdec1,f,c
  5546  017FCC  52E5               	movf	postdec1,f,c
  5547  017FCE  0012               	return		;funcret
  5548  017FD0                     __end_of_WaitMs:
  5549                           	opt callstack 0
  5550                           
  5551 ;; *************** function _update_lcd *****************
  5552 ;; Defined at:
  5553 ;;		line 85 in file "mconfig.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  vterm           1  [STACK] unsigned char 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1  [STACK] unsigned char 
  5560 ;; Registers used:
  5561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/5
  5564 ;;		On exit  : 1/1
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:   17
  5574 ;; This function calls:
  5575 ;;		_eaDogM_WriteStringAtPos
  5576 ;;		_wait_lcd_done
  5577 ;; This function is called by:
  5578 ;;		_main
  5579 ;;		_check_help
  5580 ;; This function uses a reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text24
  5584  016A14                     __ptext24:
  5585                           	opt callstack 0
  5586  016A14                     _update_lcd:
  5587                           	opt callstack 13
  5588                           
  5589                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  5590                           ;stkvar	_vterm @ sp[(0)+-1]
  5591                           
  5592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5593                           ;incstack = 0
  5594  016A14  0EFF               	movlw	-1
  5595  016A16  006F FF8C  F032    	movff	plusw1,btemp
  5596  016A1C  0E03               	movlw	3
  5597  016A1E  1632               	andwf	btemp^0,f,c
  5598  016A20  0EFF               	movlw	-1
  5599  016A22  0060  F0CB  FFE3   	movff	btemp,plusw1
  5600                           
  5601                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  5602  016A28  0105               	movlb	5	; () banked
  5603  016A2A  A1D8               	btfss	(_D+216)& (0+255),0,b
  5604  016A2C  D004               	goto	l10075
  5605                           
  5606                           ; BSR set to: 5
  5607                           ;stkvar	_vterm @ sp[(0)+-1]
  5608  016A2E  0EFF               	movlw	-1
  5609  016A30  50E3               	movf	plusw1,w,c
  5610  016A32  B4D8               	btfsc	status,2,c
  5611  016A34  D074               	goto	l1569
  5612  016A36                     l10075:
  5613                           
  5614                           ; BSR set to: 5
  5615                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  5616                           ;stkvar	_vterm @ sp[(0)+-1]
  5617  016A36  0EFF               	movlw	-1
  5618  016A38  50E3               	movf	plusw1,w,c
  5619  016A3A  0D36               	mullw	54
  5620  016A3C  0E10               	movlw	low (_D+16)
  5621  016A3E  24F3               	addwf	243,w,c
  5622  016A40  6ED9               	movwf	fsr2l,c
  5623  016A42  0E05               	movlw	high (_D+16)
  5624  016A44  20F4               	addwfc	prodh,w,c
  5625  016A46  6EDA               	movwf	fsr2h,c
  5626  016A48  0E00               	movlw	0
  5627  016A4A  6EDF               	movwf	indf2,c
  5628                           
  5629                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  5630                           ;stkvar	_vterm @ sp[(0)+-1]
  5631  016A4C  0EFF               	movlw	-1
  5632  016A4E  50E3               	movf	plusw1,w,c
  5633  016A50  0D36               	mullw	54
  5634  016A52  0E22               	movlw	low (_D+34)
  5635  016A54  24F3               	addwf	243,w,c
  5636  016A56  6ED9               	movwf	fsr2l,c
  5637  016A58  0E05               	movlw	high (_D+34)
  5638  016A5A  20F4               	addwfc	prodh,w,c
  5639  016A5C  6EDA               	movwf	fsr2h,c
  5640  016A5E  0E00               	movlw	0
  5641  016A60  6EDF               	movwf	indf2,c
  5642                           
  5643                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  5644                           ;stkvar	_vterm @ sp[(0)+-1]
  5645  016A62  0EFF               	movlw	-1
  5646  016A64  50E3               	movf	plusw1,w,c
  5647  016A66  0D36               	mullw	54
  5648  016A68  0E34               	movlw	low (_D+52)
  5649  016A6A  24F3               	addwf	243,w,c
  5650  016A6C  6ED9               	movwf	fsr2l,c
  5651  016A6E  0E05               	movlw	high (_D+52)
  5652  016A70  20F4               	addwfc	prodh,w,c
  5653  016A72  6EDA               	movwf	fsr2h,c
  5654  016A74  0E00               	movlw	0
  5655  016A76  6EDF               	movwf	indf2,c
  5656                           
  5657                           ; BSR set to: 5
  5658                           ;mconfig.c: 95:  wait_lcd_done();
  5659  016A78  EC34  F0C3         	call	_wait_lcd_done	;wreg free
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5663                           ;stkvar	_vterm @ sp[(0)+-1]
  5664  016A7C  0EFF               	movlw	-1
  5665  016A7E  50E3               	movf	plusw1,w,c
  5666  016A80  0D36               	mullw	54
  5667  016A82  0E00               	movlw	low _D
  5668  016A84  6E3C               	movwf	(btemp+10)^0,c
  5669  016A86  0E05               	movlw	high _D
  5670  016A88  6E3D               	movwf	(btemp+11)^0,c
  5671  016A8A  50F3               	movf	243,w,c
  5672  016A8C  263C               	addwf	(btemp+10)^0,f,c
  5673  016A8E  50F4               	movf	244,w,c
  5674  016A90  223D               	addwfc	(btemp+11)^0,f,c
  5675  016A92  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5676  016A98  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5677  016A9E  0E00               	movlw	0
  5678  016AA0  6EE6               	movwf	postinc1,c
  5679  016AA2  0E00               	movlw	0
  5680  016AA4  6EE6               	movwf	postinc1,c
  5681  016AA6  ECE8  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5682                           
  5683                           ; BSR set to: 59
  5684                           ;mconfig.c: 97:  wait_lcd_done();
  5685  016AAA  EC34  F0C3         	call	_wait_lcd_done	;wreg free
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5689                           ;stkvar	_vterm @ sp[(0)+-1]
  5690  016AAE  0EFF               	movlw	-1
  5691  016AB0  50E3               	movf	plusw1,w,c
  5692  016AB2  0D36               	mullw	54
  5693  016AB4  0E00               	movlw	low _D
  5694  016AB6  6E3C               	movwf	(btemp+10)^0,c
  5695  016AB8  0E05               	movlw	high _D
  5696  016ABA  6E3D               	movwf	(btemp+11)^0,c
  5697  016ABC  0E12               	movlw	18
  5698  016ABE  263C               	addwf	(btemp+10)^0,f,c
  5699  016AC0  0E00               	movlw	0
  5700  016AC2  223D               	addwfc	(btemp+11)^0,f,c
  5701  016AC4  50F3               	movf	243,w,c
  5702  016AC6  263C               	addwf	(btemp+10)^0,f,c
  5703  016AC8  50F4               	movf	244,w,c
  5704  016ACA  223D               	addwfc	(btemp+11)^0,f,c
  5705  016ACC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5706  016AD2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5707  016AD8  0E00               	movlw	0
  5708  016ADA  6EE6               	movwf	postinc1,c
  5709  016ADC  0E01               	movlw	1
  5710  016ADE  6EE6               	movwf	postinc1,c
  5711  016AE0  ECE8  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5712                           
  5713                           ; BSR set to: 59
  5714                           ;mconfig.c: 99:  wait_lcd_done();
  5715  016AE4  EC34  F0C3         	call	_wait_lcd_done	;wreg free
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5719                           ;stkvar	_vterm @ sp[(0)+-1]
  5720  016AE8  0EFF               	movlw	-1
  5721  016AEA  50E3               	movf	plusw1,w,c
  5722  016AEC  0D36               	mullw	54
  5723  016AEE  0E00               	movlw	low _D
  5724  016AF0  6E3C               	movwf	(btemp+10)^0,c
  5725  016AF2  0E05               	movlw	high _D
  5726  016AF4  6E3D               	movwf	(btemp+11)^0,c
  5727  016AF6  0E24               	movlw	36
  5728  016AF8  263C               	addwf	(btemp+10)^0,f,c
  5729  016AFA  0E00               	movlw	0
  5730  016AFC  223D               	addwfc	(btemp+11)^0,f,c
  5731  016AFE  50F3               	movf	243,w,c
  5732  016B00  263C               	addwf	(btemp+10)^0,f,c
  5733  016B02  50F4               	movf	244,w,c
  5734  016B04  223D               	addwfc	(btemp+11)^0,f,c
  5735  016B06  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5736  016B0C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5737  016B12  0E00               	movlw	0
  5738  016B14  6EE6               	movwf	postinc1,c
  5739  016B16  0E02               	movlw	2
  5740  016B18  6EE6               	movwf	postinc1,c
  5741  016B1A  ECE8  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5742  016B1E                     l1569:
  5743                           
  5744                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5745  016B1E  52E5               	movf	postdec1,f,c
  5746  016B20  0012               	return		;funcret
  5747  016B22                     __end_of_update_lcd:
  5748                           	opt callstack 0
  5749                           
  5750 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5751 ;; Defined at:
  5752 ;;		line 252 in file "eadog.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  r               1  [STACK] const unsigned char 
  5755 ;;  c               1  [STACK] const unsigned char 
  5756 ;;  strPtr          2  [STACK] PTR unsigned char 
  5757 ;;		 -> D.lcd(216), D(218), V(187), 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1  [STACK] void 
  5762 ;; Registers used:
  5763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5764 ;; Tracked objects:
  5765 ;;		On entry : 3F/0
  5766 ;;		On exit  : 3F/3B
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5773 ;;Total ram usage:        0 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:   16
  5776 ;; This function calls:
  5777 ;;		_eaDogM_WriteString
  5778 ;;		_send_lcd_cmd_dma
  5779 ;; This function is called by:
  5780 ;;		_update_lcd
  5781 ;;		_vterm_dump
  5782 ;; This function uses a reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text25
  5786  017FD0                     __ptext25:
  5787                           	opt callstack 0
  5788  017FD0                     _eaDogM_WriteStringAtPos:
  5789                           	opt callstack 13
  5790                           
  5791                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5792                           ;stkvar	_c @ sp[(0)+-2]
  5793                           
  5794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5795                           ;incstack = 0
  5796  017FD0  0EFE               	movlw	-2
  5797  017FD2  006F FF8C  F03D    	movff	plusw1,btemp+11
  5798                           
  5799                           ;stkvar	_r @ sp[(0)+-1]
  5800  017FD8  0EFF               	movlw	-1
  5801  017FDA  50E3               	movf	plusw1,w,c
  5802  017FDC  0D10               	mullw	16
  5803  017FDE  50F3               	movf	243,w,c
  5804  017FE0  243D               	addwf	(btemp+11)^0,w,c
  5805  017FE2  0F80               	addlw	128
  5806  017FE4  6EE6               	movwf	postinc1,c
  5807  017FE6  ECEC  F0BD         	call	_send_lcd_cmd_dma	;wreg free
  5808                           
  5809                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5810                           ;stkvar	_strPtr @ sp[(0)+-4]
  5811  017FEA  0EFC               	movlw	-4
  5812  017FEC  006F FF8F FFE6     	movff	plusw1,postinc1
  5813  017FF2  006F FF8F FFE6     	movff	plusw1,postinc1
  5814  017FF8  ECD8  F0B8         	call	_eaDogM_WriteString	;wreg free
  5815                           
  5816                           ; BSR set to: 59
  5817                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5818  017FFC  52E5               	movf	postdec1,f,c
  5819  017FFE  52E5               	movf	postdec1,f,c
  5820  018000  52E5               	movf	postdec1,f,c
  5821  018002  52E5               	movf	postdec1,f,c
  5822  018004  0012               	return		;funcret
  5823  018006                     __end_of_eaDogM_WriteStringAtPos:
  5824                           	opt callstack 0
  5825                           
  5826 ;; *************** function _send_lcd_cmd_dma *****************
  5827 ;; Defined at:
  5828 ;;		line 205 in file "eadog.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  strPtr          1  [STACK] unsigned char 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;		None
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  1  [STACK] void 
  5835 ;; Registers used:
  5836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/3D
  5839 ;;		On exit  : 3F/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5846 ;;Total ram usage:        0 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:   15
  5849 ;; This function calls:
  5850 ;;		_printf
  5851 ;;		_ringBufS_flush
  5852 ;;		_start_lcd
  5853 ;;		_wait_lcd_done
  5854 ;;		_wait_lcd_set
  5855 ;; This function is called by:
  5856 ;;		_eaDogM_WriteCommand
  5857 ;;		_eaDogM_WriteStringAtPos
  5858 ;; This function uses a reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text26
  5862  017BD8                     __ptext26:
  5863                           	opt callstack 0
  5864  017BD8                     _send_lcd_cmd_dma:
  5865                           	opt callstack 13
  5866                           
  5867                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5868                           
  5869                           ; BSR set to: 59
  5870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5871                           ;incstack = 0
  5872  017BD8  EC12  F0C4         	call	_wait_lcd_set	;wreg free
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5876  017BDC  0E00               	movlw	0
  5877  017BDE  6EE6               	movwf	postinc1,c
  5878  017BE0  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  5879  017BE6  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  5880  017BEC  ECC8  F0B9         	call	_ringBufS_flush	;wreg free
  5881  017BF0  92BC               	bcf	188,1,c	;volatile
  5882  017BF2  94BC               	bcf	188,2,c	;volatile
  5883                           
  5884                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5885  017BF4  013B               	movlb	59	; () banked
  5886  017BF6  9FFC               	bcf	252,7,b	;volatile
  5887                           
  5888                           ; BSR set to: 59
  5889                           ;eadog.c: 214:  DMA1SSZ = 1;
  5890  017BF8  0E00               	movlw	0
  5891  017BFA  6FF8               	movwf	248,b	;volatile
  5892  017BFC  0E01               	movlw	1
  5893  017BFE  6FF7               	movwf	247,b	;volatile
  5894                           
  5895                           ; BSR set to: 59
  5896                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5897  017C00  8FFC               	bsf	252,7,b	;volatile
  5898                           
  5899                           ; BSR set to: 59
  5900                           ;eadog.c: 216:  printf("%c", strPtr);
  5901                           ;stkvar	_strPtr @ sp[(0)+-1]
  5902  017C02  0EFF               	movlw	-1
  5903  017C04  50E3               	movf	plusw1,w,c
  5904  017C06  6EE6               	movwf	postinc1,c
  5905  017C08  0E00               	movlw	0
  5906  017C0A  6EE6               	movwf	postinc1,c
  5907  017C0C  0EF9               	movlw	low STR_16
  5908  017C0E  6EE6               	movwf	postinc1,c
  5909  017C10  0EFF               	movlw	high STR_16
  5910  017C12  6EE6               	movwf	postinc1,c
  5911  017C14  0E04               	movlw	4
  5912  017C16  6EE6               	movwf	postinc1,c
  5913  017C18  EC04  F0BD         	call	_printf	;wreg free
  5914                           
  5915                           ;eadog.c: 217:  start_lcd();
  5916  017C1C  EC15  F0C4         	call	_start_lcd	;wreg free
  5917                           
  5918                           ; BSR set to: 59
  5919                           ;eadog.c: 218:  wait_lcd_done();
  5920  017C20  EC34  F0C3         	call	_wait_lcd_done	;wreg free
  5921                           
  5922                           ; BSR set to: 0
  5923  017C24  82BC               	bsf	188,1,c	;volatile
  5924                           
  5925                           ; BSR set to: 0
  5926                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5927  017C26  52E5               	movf	postdec1,f,c
  5928  017C28  0012               	return		;funcret
  5929  017C2A                     __end_of_send_lcd_cmd_dma:
  5930                           	opt callstack 0
  5931                           
  5932 ;; *************** function _wait_lcd_done *****************
  5933 ;; Defined at:
  5934 ;;		line 141 in file "eadog.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1  [STACK] void 
  5941 ;; Registers used:
  5942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/2
  5945 ;;		On exit  : 3F/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5952 ;;Total ram usage:        0 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    7
  5955 ;; This function calls:
  5956 ;;		_wdtdelay
  5957 ;; This function is called by:
  5958 ;;		_send_lcd_cmd_dma
  5959 ;;		_update_lcd
  5960 ;;		_vterm_dump
  5961 ;; This function uses a reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text27
  5965  018668                     __ptext27:
  5966                           	opt callstack 0
  5967  018668                     _wait_lcd_done:
  5968                           	opt callstack 22
  5969                           
  5970                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5971                           
  5972                           ; BSR set to: 0
  5973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5974                           ;incstack = 0
  5975  018668  0100               	movlb	0	; () banked
  5976  01866A  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  5977  01866C  D7FD               	goto	_wait_lcd_done
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;eadog.c: 144:  wdtdelay(50);
  5981  01866E  0E32               	movlw	50
  5982  018670  6EE6               	movwf	postinc1,c
  5983  018672  0E00               	movlw	0
  5984  018674  6EE6               	movwf	postinc1,c
  5985  018676  0E00               	movlw	0
  5986  018678  6EE6               	movwf	postinc1,c
  5987  01867A  0E00               	movlw	0
  5988  01867C  6EE6               	movwf	postinc1,c
  5989  01867E  EC92  F0BD         	call	_wdtdelay	;wreg free
  5990                           
  5991                           ; BSR set to: 0
  5992                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5993  018682  0012               	return		;funcret
  5994  018684                     __end_of_wait_lcd_done:
  5995                           	opt callstack 0
  5996                           
  5997 ;; *************** function _wdtdelay *****************
  5998 ;; Defined at:
  5999 ;;		line 22 in file "eadog.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  delay           4  [STACK] const unsigned long 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  1  [STACK] void 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 3F/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6017 ;;Total ram usage:        0 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    6
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_init_display
  6024 ;;		_send_lcd_cmd
  6025 ;;		_send_lcd_cmd_long
  6026 ;;		_wait_lcd_done
  6027 ;; This function uses a reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text28
  6031  017B24                     __ptext28:
  6032                           	opt callstack 0
  6033  017B24                     _wdtdelay:
  6034                           	opt callstack 22
  6035                           
  6036                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6037                           
  6038                           ; BSR set to: 0
  6039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6040                           ;incstack = 0
  6041  017B24  0100               	movlb	0	; () banked
  6042  017B26  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6043  017B28  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6044  017B2A  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6045  017B2C  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6046  017B2E                     l1336:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;eadog.c: 27:   __nop();
  6050  017B2E  F000               	nop	
  6051  017B30  0004               	clrwdt		;# 
  6052                           
  6053                           ;eadog.c: 29:  };
  6054  017B32  0E01               	movlw	1
  6055  017B34  0100               	movlb	0	; () banked
  6056  017B36  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6057  017B38  0E00               	movlw	0
  6058  017B3A  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6059  017B3C  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6060  017B3E  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;stkvar	_delay @ sp[(0)+-4]
  6064  017B40  0EFC               	movlw	-4
  6065  017B42  006F FF8C  F032    	movff	plusw1,btemp
  6066  017B48  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6067  017B4A  5C32               	subwf	btemp^0,w,c
  6068  017B4C  0EFD               	movlw	-3
  6069  017B4E  006F FF8C  F032    	movff	plusw1,btemp
  6070  017B54  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6071  017B56  5832               	subwfb	btemp^0,w,c
  6072  017B58  0EFE               	movlw	-2
  6073  017B5A  006F FF8C  F032    	movff	plusw1,btemp
  6074  017B60  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6075  017B62  5832               	subwfb	btemp^0,w,c
  6076  017B64  0EFF               	movlw	-1
  6077  017B66  006F FF8C  F032    	movff	plusw1,btemp
  6078  017B6C  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6079  017B6E  5832               	subwfb	btemp^0,w,c
  6080  017B70  B0D8               	btfsc	status,0,c
  6081  017B72  D7DD               	goto	l1336
  6082                           
  6083                           ; BSR set to: 0
  6084                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6085  017B74  52E5               	movf	postdec1,f,c
  6086  017B76  52E5               	movf	postdec1,f,c
  6087  017B78  52E5               	movf	postdec1,f,c
  6088  017B7A  52E5               	movf	postdec1,f,c
  6089  017B7C  0012               	return		;funcret
  6090  017B7E                     __end_of_wdtdelay:
  6091                           	opt callstack 0
  6092                           
  6093 ;; *************** function _eaDogM_WriteString *****************
  6094 ;; Defined at:
  6095 ;;		line 184 in file "eadog.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  strPtr          2  [STACK] PTR unsigned char 
  6098 ;;		 -> D.lcd(216), D(218), V(187), 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1  [STACK] void 
  6103 ;; Registers used:
  6104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6105 ;; Tracked objects:
  6106 ;;		On entry : 3F/0
  6107 ;;		On exit  : 3F/3B
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;Total ram usage:        0 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:   15
  6117 ;; This function calls:
  6118 ;;		_printf
  6119 ;;		_ringBufS_flush
  6120 ;;		_start_lcd
  6121 ;;		_strlen
  6122 ;;		_wait_lcd_set
  6123 ;; This function is called by:
  6124 ;;		_eaDogM_WriteStringAtPos
  6125 ;; This function uses a reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text29
  6129  0171B0                     __ptext29:
  6130                           	opt callstack 0
  6131  0171B0                     _eaDogM_WriteString:
  6132                           	opt callstack 13
  6133                           
  6134                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6135                           
  6136                           ; BSR set to: 0
  6137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6138                           ;incstack = 0
  6139  0171B0  EC12  F0C4         	call	_wait_lcd_set	;wreg free
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6143  0171B4  0E00               	movlw	0
  6144  0171B6  6EE6               	movwf	postinc1,c
  6145  0171B8  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6146  0171BE  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6147  0171C4  ECC8  F0B9         	call	_ringBufS_flush	;wreg free
  6148  0171C8  94BC               	bcf	188,2,c	;volatile
  6149                           
  6150                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6151                           ;stkvar	_strPtr @ sp[(0)+-2]
  6152  0171CA  0EFE               	movlw	-2
  6153  0171CC  006F FF8F FFE6     	movff	plusw1,postinc1
  6154  0171D2  006F FF8F FFE6     	movff	plusw1,postinc1
  6155  0171D8  EC2B  F0B9         	call	_strlen	;wreg free
  6156  0171DC  5033               	movf	(btemp+1)^0,w,c
  6157  0171DE  E104               	bnz	u10190
  6158  0171E0  0E41               	movlw	65
  6159  0171E2  5C32               	subwf	btemp^0,w,c
  6160  0171E4  A0D8               	btfss	status,0,c
  6161  0171E6  D010               	goto	l10041
  6162  0171E8                     u10190:
  6163                           
  6164                           ;stkvar	_strPtr @ sp[(0)+-2]
  6165  0171E8  0EFE               	movlw	-2
  6166  0171EA  006F FF8C  F03C    	movff	plusw1,btemp+10
  6167  0171F0  0EFF               	movlw	-1
  6168  0171F2  006F FF8C  F03D    	movff	plusw1,btemp+11
  6169  0171F8  0E40               	movlw	64
  6170  0171FA  243C               	addwf	(btemp+10)^0,w,c
  6171  0171FC  6ED9               	movwf	fsr2l,c
  6172  0171FE  0E00               	movlw	0
  6173  017200  203D               	addwfc	(btemp+11)^0,w,c
  6174  017202  6EDA               	movwf	fsr2h,c
  6175  017204  0E00               	movlw	0
  6176  017206  6EDF               	movwf	indf2,c
  6177  017208                     l10041:
  6178                           
  6179                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6180  017208  013B               	movlb	59	; () banked
  6181  01720A  9FFC               	bcf	252,7,b	;volatile
  6182                           
  6183                           ; BSR set to: 59
  6184                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6185                           ;stkvar	_strPtr @ sp[(0)+-2]
  6186  01720C  0EFE               	movlw	-2
  6187  01720E  006F FF8F FFE6     	movff	plusw1,postinc1
  6188  017214  006F FF8F FFE6     	movff	plusw1,postinc1
  6189  01721A  EC2B  F0B9         	call	_strlen	;wreg free
  6190  01721E  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6191  017224  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6192                           
  6193                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6194  01722A  013B               	movlb	59	; () banked
  6195  01722C  8FFC               	bsf	252,7,b	;volatile
  6196                           
  6197                           ; BSR set to: 59
  6198                           ;eadog.c: 195:  printf("%s", strPtr);
  6199                           ;stkvar	_strPtr @ sp[(0)+-2]
  6200  01722E  0EFE               	movlw	-2
  6201  017230  006F FF8F FFE6     	movff	plusw1,postinc1
  6202  017236  006F FF8F FFE6     	movff	plusw1,postinc1
  6203  01723C  0EFC               	movlw	low STR_15
  6204  01723E  6EE6               	movwf	postinc1,c
  6205  017240  0EFF               	movlw	high STR_15
  6206  017242  6EE6               	movwf	postinc1,c
  6207  017244  0E04               	movlw	4
  6208  017246  6EE6               	movwf	postinc1,c
  6209  017248  EC04  F0BD         	call	_printf	;wreg free
  6210                           
  6211                           ;eadog.c: 196:  start_lcd();
  6212  01724C  EC15  F0C4         	call	_start_lcd	;wreg free
  6213                           
  6214                           ; BSR set to: 59
  6215                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6216  017250  52E5               	movf	postdec1,f,c
  6217  017252  52E5               	movf	postdec1,f,c
  6218  017254  0012               	return		;funcret
  6219  017256                     __end_of_eaDogM_WriteString:
  6220                           	opt callstack 0
  6221                           
  6222 ;; *************** function _wait_lcd_set *****************
  6223 ;; Defined at:
  6224 ;;		line 131 in file "eadog.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1  [STACK] void 
  6231 ;; Registers used:
  6232 ;;		None
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/3D
  6235 ;;		On exit  : 3F/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6242 ;;Total ram usage:        0 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    6
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_eaDogM_WriteString
  6249 ;;		_send_lcd_cmd_dma
  6250 ;; This function uses a reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text30
  6254  018824                     __ptext30:
  6255                           	opt callstack 0
  6256  018824                     _wait_lcd_set:
  6257                           	opt callstack 21
  6258                           
  6259                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6260                           
  6261                           ; BSR set to: 59
  6262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6263                           ;incstack = 0
  6264  018824  0100               	movlb	0	; () banked
  6265  018826  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6266                           
  6267                           ; BSR set to: 0
  6268                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6269  018828  0012               	return		;funcret
  6270  01882A                     __end_of_wait_lcd_set:
  6271                           	opt callstack 0
  6272                           
  6273 ;; *************** function _start_lcd *****************
  6274 ;; Defined at:
  6275 ;;		line 126 in file "eadog.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;		None
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;		None
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1  [STACK] void 
  6282 ;; Registers used:
  6283 ;;		None
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/3B
  6286 ;;		On exit  : 3F/3B
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6293 ;;Total ram usage:        0 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    6
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_eaDogM_WriteString
  6300 ;;		_send_lcd_cmd_dma
  6301 ;; This function uses a reentrant model
  6302 ;;
  6303                           
  6304                           	psect	text31
  6305  01882A                     __ptext31:
  6306                           	opt callstack 0
  6307  01882A                     _start_lcd:
  6308                           	opt callstack 21
  6309                           
  6310                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6311                           
  6312                           ; BSR set to: 0
  6313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6314                           ;incstack = 0
  6315  01882A  013B               	movlb	59	; () banked
  6316  01882C  8DFC               	bsf	252,6,b	;volatile
  6317                           
  6318                           ; BSR set to: 59
  6319                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6320  01882E  0012               	return		;funcret
  6321  018830                     __end_of_start_lcd:
  6322                           	opt callstack 0
  6323                           
  6324 ;; *************** function _ringBufS_flush *****************
  6325 ;; Defined at:
  6326 ;;		line 76 in file "ringbufs.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6329 ;;		 -> ring_buf1(67), 
  6330 ;;  clearBuffer     1  [STACK] const char 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1  [STACK] void 
  6335 ;; Registers used:
  6336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6337 ;; Tracked objects:
  6338 ;;		On entry : 3F/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6346 ;;Total ram usage:        0 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    7
  6349 ;; This function calls:
  6350 ;;		_memset
  6351 ;; This function is called by:
  6352 ;;		_eaDogM_WriteString
  6353 ;;		_send_lcd_cmd_dma
  6354 ;; This function uses a reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text32
  6358  017390                     __ptext32:
  6359                           	opt callstack 0
  6360  017390                     _ringBufS_flush:
  6361                           	opt callstack 20
  6362                           
  6363                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6364                           ;stkvar	__this @ sp[(0)+-2]
  6365                           
  6366                           ; BSR set to: 59
  6367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6368                           ;incstack = 0
  6369  017390  0EFE               	movlw	-2
  6370  017392  006F FF8C  F03C    	movff	plusw1,btemp+10
  6371  017398  0EFF               	movlw	-1
  6372  01739A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6373  0173A0  0E42               	movlw	66
  6374  0173A2  243C               	addwf	(btemp+10)^0,w,c
  6375  0173A4  6ED9               	movwf	fsr2l,c
  6376  0173A6  0E00               	movlw	0
  6377  0173A8  203D               	addwfc	(btemp+11)^0,w,c
  6378  0173AA  6EDA               	movwf	fsr2h,c
  6379  0173AC  0E00               	movlw	0
  6380  0173AE  6EDF               	movwf	indf2,c
  6381                           
  6382                           ;ringbufs.c: 79:  _this->head = 0;
  6383                           ;stkvar	__this @ sp[(0)+-2]
  6384  0173B0  0EFE               	movlw	-2
  6385  0173B2  006F FF8C  F03C    	movff	plusw1,btemp+10
  6386  0173B8  0EFF               	movlw	-1
  6387  0173BA  006F FF8C  F03D    	movff	plusw1,btemp+11
  6388  0173C0  0E40               	movlw	64
  6389  0173C2  243C               	addwf	(btemp+10)^0,w,c
  6390  0173C4  6ED9               	movwf	fsr2l,c
  6391  0173C6  0E00               	movlw	0
  6392  0173C8  203D               	addwfc	(btemp+11)^0,w,c
  6393  0173CA  6EDA               	movwf	fsr2h,c
  6394  0173CC  0E00               	movlw	0
  6395  0173CE  6EDF               	movwf	indf2,c
  6396                           
  6397                           ;ringbufs.c: 80:  _this->tail = 0;
  6398                           ;stkvar	__this @ sp[(0)+-2]
  6399  0173D0  0EFE               	movlw	-2
  6400  0173D2  006F FF8C  F03C    	movff	plusw1,btemp+10
  6401  0173D8  0EFF               	movlw	-1
  6402  0173DA  006F FF8C  F03D    	movff	plusw1,btemp+11
  6403  0173E0  0E41               	movlw	65
  6404  0173E2  243C               	addwf	(btemp+10)^0,w,c
  6405  0173E4  6ED9               	movwf	fsr2l,c
  6406  0173E6  0E00               	movlw	0
  6407  0173E8  203D               	addwfc	(btemp+11)^0,w,c
  6408  0173EA  6EDA               	movwf	fsr2h,c
  6409  0173EC  0E00               	movlw	0
  6410  0173EE  6EDF               	movwf	indf2,c
  6411                           
  6412                           ;ringbufs.c: 81:  if (clearBuffer) {
  6413                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6414  0173F0  0EFD               	movlw	-3
  6415  0173F2  50E3               	movf	plusw1,w,c
  6416  0173F4  B4D8               	btfsc	status,2,c
  6417  0173F6  D011               	goto	l1476
  6418                           
  6419                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6420  0173F8  0E40               	movlw	64
  6421  0173FA  6EE6               	movwf	postinc1,c
  6422  0173FC  0E00               	movlw	0
  6423  0173FE  6EE6               	movwf	postinc1,c
  6424  017400  0E00               	movlw	0
  6425  017402  6EE6               	movwf	postinc1,c
  6426  017404  0E00               	movlw	0
  6427  017406  6EE6               	movwf	postinc1,c
  6428                           
  6429                           ;stkvar	__this @ sp[(-4)+-2]
  6430  017408  0EFA               	movlw	-6
  6431  01740A  006F FF8F FFE6     	movff	plusw1,postinc1
  6432  017410  006F FF8F FFE6     	movff	plusw1,postinc1
  6433  017416  ECF9  F0A3         	call	_memset	;wreg free
  6434  01741A                     l1476:
  6435                           
  6436                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6437  01741A  52E5               	movf	postdec1,f,c
  6438  01741C  52E5               	movf	postdec1,f,c
  6439  01741E  52E5               	movf	postdec1,f,c
  6440  017420  0012               	return		;funcret
  6441  017422                     __end_of_ringBufS_flush:
  6442                           	opt callstack 0
  6443                           
  6444 ;; *************** function _memset *****************
  6445 ;; Defined at:
  6446 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  dest            2  [STACK] PTR void 
  6449 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6450 ;;  c               2  [STACK] int 
  6451 ;;  n               2  [STACK] unsigned int 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  s               2  [STACK] PTR unsigned char 
  6454 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6455 ;;  k               2  [STACK] unsigned int 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  2  [STACK] PTR void 
  6458 ;; Registers used:
  6459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6469 ;;Total ram usage:        0 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    6
  6472 ;; This function calls:
  6473 ;;		Nothing
  6474 ;; This function is called by:
  6475 ;;		_ringBufS_init
  6476 ;;		_ringBufS_flush
  6477 ;; This function uses a reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text33
  6481  0147F2                     __ptext33:
  6482                           	opt callstack 0
  6483  0147F2                     _memset:
  6484                           	opt callstack 0
  6485                           
  6486                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6487  0147F2  52E6               	movf	postinc1,f,c
  6488  0147F4  52E6               	movf	postinc1,f,c
  6489  0147F6  52E6               	movf	postinc1,f,c
  6490  0147F8  52E6               	movf	postinc1,f,c
  6491                           
  6492                           ;stkvar	_dest @ sp[(-4)+-2]
  6493                           
  6494                           ;incstack = 0
  6495  0147FA  0EFA               	movlw	-6
  6496  0147FC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6497  014802  0EFB               	movlw	-5
  6498  014804  006F FF8C  F03D    	movff	plusw1,btemp+11
  6499                           
  6500                           ;stkvar	_s @ sp[(-4)+0]
  6501  01480A  0EFD               	movlw	-3
  6502  01480C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6503  014812  0EFC               	movlw	-4
  6504  014814  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6505                           
  6506                           ;stkvar	_n @ sp[(-4)+-6]
  6507  01481A  0EF6               	movlw	-10
  6508  01481C  006F FF8C  F032    	movff	plusw1,btemp
  6509  014822  0EF7               	movlw	-9
  6510  014824  50E3               	movf	plusw1,w,c
  6511  014826  1032               	iorwf	btemp^0,w,c
  6512  014828  B4D8               	btfsc	status,2,c
  6513  01482A  D154               	goto	u10160
  6514                           
  6515                           ;stkvar	_c @ sp[(-4)+-4]
  6516                           ;stkvar	_s @ sp[(-4)+0]
  6517  01482C  0EFC               	movlw	-4
  6518  01482E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6519  014834  0EFD               	movlw	-3
  6520  014836  006F FF8F FFDA     	movff	plusw1,fsr2h
  6521  01483C  0EF8               	movlw	-8
  6522  01483E  006F FF8F FFDF     	movff	plusw1,indf2
  6523                           
  6524                           ;stkvar	_c @ sp[(-4)+-4]
  6525                           ;stkvar	_n @ sp[(-4)+-6]
  6526                           ;stkvar	_s @ sp[(-4)+0]
  6527  014844  0EFC               	movlw	-4
  6528  014846  006F FF8C  F03C    	movff	plusw1,btemp+10
  6529  01484C  0EFD               	movlw	-3
  6530  01484E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6531  014854  0EF6               	movlw	-10
  6532  014856  50E3               	movf	plusw1,w,c
  6533  014858  263C               	addwf	(btemp+10)^0,f,c
  6534  01485A  0EF7               	movlw	-9
  6535  01485C  50E3               	movf	plusw1,w,c
  6536  01485E  223D               	addwfc	(btemp+11)^0,f,c
  6537  014860  0EFF               	movlw	255
  6538  014862  243C               	addwf	(btemp+10)^0,w,c
  6539  014864  6ED9               	movwf	fsr2l,c
  6540  014866  0EFF               	movlw	255
  6541  014868  203D               	addwfc	(btemp+11)^0,w,c
  6542  01486A  6EDA               	movwf	fsr2h,c
  6543  01486C  0EF8               	movlw	-8
  6544  01486E  006F FF8F FFDF     	movff	plusw1,indf2
  6545                           
  6546                           ;stkvar	_n @ sp[(-4)+-6]
  6547  014874  0EF7               	movlw	-9
  6548  014876  50E3               	movf	plusw1,w,c
  6549  014878  E108               	bnz	l9957
  6550  01487A  0EF6               	movlw	-10
  6551  01487C  006F FF8C  F032    	movff	plusw1,btemp
  6552  014882  0E03               	movlw	3
  6553  014884  5E32               	subwf	btemp^0,f,c
  6554  014886  A0D8               	btfss	status,0,c
  6555  014888  D125               	goto	u10160
  6556  01488A                     l9957:
  6557                           
  6558                           ;stkvar	_c @ sp[(-4)+-4]
  6559                           ;stkvar	_s @ sp[(-4)+0]
  6560  01488A  0EFC               	movlw	-4
  6561  01488C  006F FF8C  F03C    	movff	plusw1,btemp+10
  6562  014892  0EFD               	movlw	-3
  6563  014894  006F FF8C  F03D    	movff	plusw1,btemp+11
  6564  01489A  0E01               	movlw	1
  6565  01489C  243C               	addwf	(btemp+10)^0,w,c
  6566  01489E  6ED9               	movwf	fsr2l,c
  6567  0148A0  0E00               	movlw	0
  6568  0148A2  203D               	addwfc	(btemp+11)^0,w,c
  6569  0148A4  6EDA               	movwf	fsr2h,c
  6570  0148A6  0EF8               	movlw	-8
  6571  0148A8  006F FF8F FFDF     	movff	plusw1,indf2
  6572                           
  6573                           ;stkvar	_c @ sp[(-4)+-4]
  6574                           ;stkvar	_s @ sp[(-4)+0]
  6575  0148AE  0EFC               	movlw	-4
  6576  0148B0  006F FF8C  F03C    	movff	plusw1,btemp+10
  6577  0148B6  0EFD               	movlw	-3
  6578  0148B8  006F FF8C  F03D    	movff	plusw1,btemp+11
  6579  0148BE  0E02               	movlw	2
  6580  0148C0  243C               	addwf	(btemp+10)^0,w,c
  6581  0148C2  6ED9               	movwf	fsr2l,c
  6582  0148C4  0E00               	movlw	0
  6583  0148C6  203D               	addwfc	(btemp+11)^0,w,c
  6584  0148C8  6EDA               	movwf	fsr2h,c
  6585  0148CA  0EF8               	movlw	-8
  6586  0148CC  006F FF8F FFDF     	movff	plusw1,indf2
  6587                           
  6588                           ;stkvar	_c @ sp[(-4)+-4]
  6589                           ;stkvar	_n @ sp[(-4)+-6]
  6590                           ;stkvar	_s @ sp[(-4)+0]
  6591  0148D2  0EFC               	movlw	-4
  6592  0148D4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6593  0148DA  0EFD               	movlw	-3
  6594  0148DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  6595  0148E2  0EF6               	movlw	-10
  6596  0148E4  50E3               	movf	plusw1,w,c
  6597  0148E6  263C               	addwf	(btemp+10)^0,f,c
  6598  0148E8  0EF7               	movlw	-9
  6599  0148EA  50E3               	movf	plusw1,w,c
  6600  0148EC  223D               	addwfc	(btemp+11)^0,f,c
  6601  0148EE  0EFE               	movlw	254
  6602  0148F0  243C               	addwf	(btemp+10)^0,w,c
  6603  0148F2  6ED9               	movwf	fsr2l,c
  6604  0148F4  0EFF               	movlw	255
  6605  0148F6  203D               	addwfc	(btemp+11)^0,w,c
  6606  0148F8  6EDA               	movwf	fsr2h,c
  6607  0148FA  0EF8               	movlw	-8
  6608  0148FC  006F FF8F FFDF     	movff	plusw1,indf2
  6609                           
  6610                           ;stkvar	_c @ sp[(-4)+-4]
  6611                           ;stkvar	_n @ sp[(-4)+-6]
  6612                           ;stkvar	_s @ sp[(-4)+0]
  6613  014902  0EFC               	movlw	-4
  6614  014904  006F FF8C  F03C    	movff	plusw1,btemp+10
  6615  01490A  0EFD               	movlw	-3
  6616  01490C  006F FF8C  F03D    	movff	plusw1,btemp+11
  6617  014912  0EF6               	movlw	-10
  6618  014914  50E3               	movf	plusw1,w,c
  6619  014916  263C               	addwf	(btemp+10)^0,f,c
  6620  014918  0EF7               	movlw	-9
  6621  01491A  50E3               	movf	plusw1,w,c
  6622  01491C  223D               	addwfc	(btemp+11)^0,f,c
  6623  01491E  0EFD               	movlw	253
  6624  014920  243C               	addwf	(btemp+10)^0,w,c
  6625  014922  6ED9               	movwf	fsr2l,c
  6626  014924  0EFF               	movlw	255
  6627  014926  203D               	addwfc	(btemp+11)^0,w,c
  6628  014928  6EDA               	movwf	fsr2h,c
  6629  01492A  0EF8               	movlw	-8
  6630  01492C  006F FF8F FFDF     	movff	plusw1,indf2
  6631                           
  6632                           ;stkvar	_n @ sp[(-4)+-6]
  6633  014932  0EF7               	movlw	-9
  6634  014934  50E3               	movf	plusw1,w,c
  6635  014936  E108               	bnz	l9963
  6636  014938  0EF6               	movlw	-10
  6637  01493A  006F FF8C  F032    	movff	plusw1,btemp
  6638  014940  0E07               	movlw	7
  6639  014942  5E32               	subwf	btemp^0,f,c
  6640  014944  A0D8               	btfss	status,0,c
  6641  014946  D0C6               	goto	u10160
  6642  014948                     l9963:
  6643                           
  6644                           ;stkvar	_c @ sp[(-4)+-4]
  6645                           ;stkvar	_s @ sp[(-4)+0]
  6646  014948  0EFC               	movlw	-4
  6647  01494A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6648  014950  0EFD               	movlw	-3
  6649  014952  006F FF8C  F03D    	movff	plusw1,btemp+11
  6650  014958  0E03               	movlw	3
  6651  01495A  243C               	addwf	(btemp+10)^0,w,c
  6652  01495C  6ED9               	movwf	fsr2l,c
  6653  01495E  0E00               	movlw	0
  6654  014960  203D               	addwfc	(btemp+11)^0,w,c
  6655  014962  6EDA               	movwf	fsr2h,c
  6656  014964  0EF8               	movlw	-8
  6657  014966  006F FF8F FFDF     	movff	plusw1,indf2
  6658                           
  6659                           ;stkvar	_c @ sp[(-4)+-4]
  6660                           ;stkvar	_n @ sp[(-4)+-6]
  6661                           ;stkvar	_s @ sp[(-4)+0]
  6662  01496C  0EFC               	movlw	-4
  6663  01496E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6664  014974  0EFD               	movlw	-3
  6665  014976  006F FF8C  F03D    	movff	plusw1,btemp+11
  6666  01497C  0EF6               	movlw	-10
  6667  01497E  50E3               	movf	plusw1,w,c
  6668  014980  263C               	addwf	(btemp+10)^0,f,c
  6669  014982  0EF7               	movlw	-9
  6670  014984  50E3               	movf	plusw1,w,c
  6671  014986  223D               	addwfc	(btemp+11)^0,f,c
  6672  014988  0EFC               	movlw	252
  6673  01498A  243C               	addwf	(btemp+10)^0,w,c
  6674  01498C  6ED9               	movwf	fsr2l,c
  6675  01498E  0EFF               	movlw	255
  6676  014990  203D               	addwfc	(btemp+11)^0,w,c
  6677  014992  6EDA               	movwf	fsr2h,c
  6678  014994  0EF8               	movlw	-8
  6679  014996  006F FF8F FFDF     	movff	plusw1,indf2
  6680                           
  6681                           ;stkvar	_n @ sp[(-4)+-6]
  6682  01499C  0EF7               	movlw	-9
  6683  01499E  50E3               	movf	plusw1,w,c
  6684  0149A0  E108               	bnz	l9969
  6685  0149A2  0EF6               	movlw	-10
  6686  0149A4  006F FF8C  F032    	movff	plusw1,btemp
  6687  0149AA  0E09               	movlw	9
  6688  0149AC  5E32               	subwf	btemp^0,f,c
  6689  0149AE  A0D8               	btfss	status,0,c
  6690  0149B0  D091               	goto	u10160
  6691  0149B2                     l9969:
  6692                           
  6693                           ;stkvar	_s @ sp[(-4)+0]
  6694  0149B2  0EFC               	movlw	-4
  6695  0149B4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6696  0149BA  1E3C               	comf	(btemp+10)^0,f,c
  6697  0149BC  0EFD               	movlw	-3
  6698  0149BE  006F FF8C  F03D    	movff	plusw1,btemp+11
  6699  0149C4  1E3D               	comf	(btemp+11)^0,f,c
  6700  0149C6  2A3C               	incf	(btemp+10)^0,f,c
  6701  0149C8  B4D8               	btfsc	status,2,c
  6702  0149CA  2A3D               	incf	(btemp+11)^0,f,c
  6703  0149CC  0E03               	movlw	3
  6704  0149CE  163C               	andwf	(btemp+10)^0,f,c
  6705  0149D0  0E00               	movlw	0
  6706  0149D2  163D               	andwf	(btemp+11)^0,f,c
  6707                           
  6708                           ;stkvar	_k @ sp[(-4)+2]
  6709  0149D4  0EFE               	movlw	-2
  6710  0149D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6711  0149DC  0EFF               	movlw	-1
  6712  0149DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6713                           
  6714                           ;stkvar	_k @ sp[(-4)+2]
  6715                           ;stkvar	_s @ sp[(-4)+0]
  6716  0149E4  0EFC               	movlw	-4
  6717  0149E6  50E3               	movf	plusw1,w,c
  6718  0149E8  6E32               	movwf	btemp^0,c
  6719  0149EA  0EFE               	movlw	-2
  6720  0149EC  50E3               	movf	plusw1,w,c
  6721  0149EE  2632               	addwf	btemp^0,f,c
  6722  0149F0  0EFC               	movlw	-4
  6723  0149F2  0060  F0CB  FFE3   	movff	btemp,plusw1
  6724  0149F8  0EFD               	movlw	-3
  6725  0149FA  50E3               	movf	plusw1,w,c
  6726  0149FC  6E32               	movwf	btemp^0,c
  6727  0149FE  0EFF               	movlw	-1
  6728  014A00  50E3               	movf	plusw1,w,c
  6729  014A02  2232               	addwfc	btemp^0,f,c
  6730  014A04  0EFD               	movlw	-3
  6731  014A06  0060  F0CB  FFE3   	movff	btemp,plusw1
  6732                           
  6733                           ;stkvar	_k @ sp[(-4)+2]
  6734                           ;stkvar	_n @ sp[(-4)+-6]
  6735  014A0C  0EF6               	movlw	-10
  6736  014A0E  50E3               	movf	plusw1,w,c
  6737  014A10  6E32               	movwf	btemp^0,c
  6738  014A12  0EFE               	movlw	-2
  6739  014A14  50E3               	movf	plusw1,w,c
  6740  014A16  5E32               	subwf	btemp^0,f,c
  6741  014A18  0EF6               	movlw	-10
  6742  014A1A  0060  F0CB  FFE3   	movff	btemp,plusw1
  6743  014A20  0EF7               	movlw	-9
  6744  014A22  50E3               	movf	plusw1,w,c
  6745  014A24  6E32               	movwf	btemp^0,c
  6746  014A26  0EFF               	movlw	-1
  6747  014A28  50E3               	movf	plusw1,w,c
  6748  014A2A  5A32               	subwfb	btemp^0,f,c
  6749  014A2C  0EF7               	movlw	-9
  6750  014A2E  0060  F0CB  FFE3   	movff	btemp,plusw1
  6751  014A34  0EFC               	movlw	252
  6752  014A36  6E3C               	movwf	(btemp+10)^0,c
  6753  014A38  0EFF               	movlw	255
  6754  014A3A  6E3D               	movwf	(btemp+11)^0,c
  6755                           
  6756                           ;stkvar	_n @ sp[(-4)+-6]
  6757  014A3C  0EF6               	movlw	-10
  6758  014A3E  006F FF8C  F032    	movff	plusw1,btemp
  6759  014A44  503C               	movf	(btemp+10)^0,w,c
  6760  014A46  1632               	andwf	btemp^0,f,c
  6761  014A48  0EF6               	movlw	-10
  6762  014A4A  0060  F0CB  FFE3   	movff	btemp,plusw1
  6763  014A50  0EF7               	movlw	-9
  6764  014A52  006F FF8C  F032    	movff	plusw1,btemp
  6765  014A58  503D               	movf	(btemp+11)^0,w,c
  6766  014A5A  1632               	andwf	btemp^0,f,c
  6767  014A5C  0EF7               	movlw	-9
  6768  014A5E  D02E               	goto	L4
  6769  014A60                     l9977:
  6770                           
  6771                           ;stkvar	_c @ sp[(-4)+-4]
  6772                           ;stkvar	_s @ sp[(-4)+0]
  6773  014A60  0EFC               	movlw	-4
  6774  014A62  006F FF8F FFD9     	movff	plusw1,fsr2l
  6775  014A68  0EFD               	movlw	-3
  6776  014A6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6777  014A70  0EF8               	movlw	-8
  6778  014A72  006F FF8F FFDF     	movff	plusw1,indf2
  6779                           
  6780                           ;stkvar	_n @ sp[(-4)+-6]
  6781  014A78  0EF6               	movlw	-10
  6782  014A7A  006F FF8C  F032    	movff	plusw1,btemp
  6783  014A80  0E01               	movlw	1
  6784  014A82  5E32               	subwf	btemp^0,f,c
  6785  014A84  0EF6               	movlw	-10
  6786  014A86  0060  F0CB  FFE3   	movff	btemp,plusw1
  6787  014A8C  0EF7               	movlw	-9
  6788  014A8E  006F FF8C  F032    	movff	plusw1,btemp
  6789  014A94  0E00               	movlw	0
  6790  014A96  5A32               	subwfb	btemp^0,f,c
  6791  014A98  0EF7               	movlw	-9
  6792  014A9A  0060  F0CB  FFE3   	movff	btemp,plusw1
  6793                           
  6794                           ;stkvar	_s @ sp[(-4)+0]
  6795  014AA0  0EFC               	movlw	-4
  6796  014AA2  50E3               	movf	plusw1,w,c
  6797  014AA4  0F01               	addlw	1
  6798  014AA6  6E32               	movwf	btemp^0,c
  6799  014AA8  0EFC               	movlw	-4
  6800  014AAA  0060  F0CB  FFE3   	movff	btemp,plusw1
  6801  014AB0  6A32               	clrf	btemp^0,c
  6802  014AB2  0EFD               	movlw	-3
  6803  014AB4  50E3               	movf	plusw1,w,c
  6804  014AB6  2032               	addwfc	btemp^0,w,c
  6805  014AB8  6E32               	movwf	btemp^0,c
  6806  014ABA  0EFD               	movlw	-3
  6807  014ABC                     L4:
  6808  014ABC  0060  F0CB  FFE3   	movff	btemp,plusw1
  6809                           
  6810                           ;stkvar	_n @ sp[(-4)+-6]
  6811  014AC2  0EF6               	movlw	-10
  6812  014AC4  006F FF8C  F032    	movff	plusw1,btemp
  6813  014ACA  0EF7               	movlw	-9
  6814  014ACC  50E3               	movf	plusw1,w,c
  6815  014ACE  1032               	iorwf	btemp^0,w,c
  6816  014AD0  A4D8               	btfss	status,2,c
  6817  014AD2  D7C6               	goto	l9977
  6818  014AD4                     u10160:
  6819                           
  6820                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6821  014AD4  0EF6               	movlw	246
  6822  014AD6  26E1               	addwf	fsr1l,f,c
  6823  014AD8  0EFF               	movlw	255
  6824  014ADA  22E2               	addwfc	fsr1h,f,c
  6825  014ADC  0012               	return		;funcret
  6826  014ADE                     __end_of_memset:
  6827                           	opt callstack 0
  6828                           
  6829 ;; *************** function _printf *****************
  6830 ;; Defined at:
  6831 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;  fmt             2  [STACK] PTR const unsigned char 
  6834 ;;		 -> STR_17(3), STR_16(3), STR_15(3), 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  ap              2  [STACK] PTR void [1]
  6837 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6838 ;;  ret             2    0        int 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  2  [STACK] int 
  6841 ;; Registers used:
  6842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6843 ;; Tracked objects:
  6844 ;;		On entry : 3F/3B
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6852 ;;Total ram usage:        0 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:   14
  6855 ;; This function calls:
  6856 ;;		_vfprintf
  6857 ;; This function is called by:
  6858 ;;		_eaDogM_WriteString
  6859 ;;		_send_lcd_cmd_dma
  6860 ;; This function uses a reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text34
  6864  017A08                     __ptext34:
  6865                           	opt callstack 0
  6866  017A08                     _printf:
  6867                           	opt callstack 0
  6868                           
  6869                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6870  017A08  52E6               	movf	postinc1,f,c
  6871  017A0A  52E6               	movf	postinc1,f,c
  6872                           
  6873                           ;stkvar	?_printf @ sp[(-2)+-3]
  6874                           
  6875                           ;incstack = 0
  6876  017A0C  0EFB               	movlw	251
  6877  017A0E  24E1               	addwf	fsr1l,w,c
  6878  017A10  6E3C               	movwf	(btemp+10)^0,c
  6879  017A12  0EFF               	movlw	255
  6880  017A14  20E2               	addwfc	fsr1h,w,c
  6881  017A16  6E3D               	movwf	(btemp+11)^0,c
  6882                           
  6883                           ;stkvar	_ap @ sp[(-2)+0]
  6884  017A18  0EFF               	movlw	-1
  6885  017A1A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6886  017A20  0EFE               	movlw	-2
  6887  017A22  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6888                           
  6889                           ;stkvar	_ap @ sp[(-2)+0]
  6890  017A28  0EFE               	movlw	254
  6891  017A2A  24E1               	addwf	fsr1l,w,c
  6892  017A2C  6E32               	movwf	btemp^0,c
  6893  017A2E  0EFF               	movlw	255
  6894  017A30  20E2               	addwfc	fsr1h,w,c
  6895  017A32  6E33               	movwf	(btemp+1)^0,c
  6896  017A34  0060  F0CB  FFE6   	movff	btemp,postinc1
  6897  017A3A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6898                           
  6899                           ;stkvar	_fmt @ sp[(-4)+-3]
  6900  017A40  0EF9               	movlw	-7
  6901  017A42  006F FF8F FFE6     	movff	plusw1,postinc1
  6902  017A48  006F FF8F FFE6     	movff	plusw1,postinc1
  6903  017A4E  0E00               	movlw	0
  6904  017A50  6EE6               	movwf	postinc1,c
  6905  017A52  0E00               	movlw	0
  6906  017A54  6EE6               	movwf	postinc1,c
  6907  017A56  EC84  F0B8         	call	_vfprintf	;wreg free
  6908                           
  6909                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6910  017A5A  52E5               	movf	postdec1,f,c
  6911  017A5C  52E5               	movf	postdec1,f,c
  6912  017A5E  52E5               	movf	postdec1,f,c
  6913  017A60  50E7               	movf	indf1,w,c
  6914  017A62  5EE1               	subwf	fsr1l,f,c
  6915  017A64  0E00               	movlw	0
  6916  017A66  5AE2               	subwfb	fsr1h,f,c
  6917  017A68  0012               	return		;funcret
  6918  017A6A                     __end_of_printf:
  6919                           	opt callstack 0
  6920                           
  6921 ;; *************** function _vfprintf *****************
  6922 ;; Defined at:
  6923 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6926 ;;		 -> f(6), NULL(0), 
  6927 ;;  fmt             2  [STACK] PTR const unsigned char 
  6928 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  6929 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  6930 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  6931 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  6932 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
  6933 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
  6934 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
  6935 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6936 ;;  ap              2  [STACK] PTR PTR void 
  6937 ;;		 -> ap(2), ap(2), 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;  cfmt            2  [STACK] PTR unsigned char 
  6940 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  6941 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  6942 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  6943 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  6944 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
  6945 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
  6946 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
  6947 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  2  [STACK] int 
  6950 ;; Registers used:
  6951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/5
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6961 ;;Total ram usage:        0 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:   13
  6964 ;; This function calls:
  6965 ;;		_vfpfcnvrt
  6966 ;; This function is called by:
  6967 ;;		_sprintf
  6968 ;;		_printf
  6969 ;; This function uses a reentrant model
  6970 ;;
  6971                           
  6972                           	psect	text35
  6973  017108                     __ptext35:
  6974                           	opt callstack 0
  6975  017108                     _vfprintf:
  6976                           	opt callstack 0
  6977                           
  6978                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6979  017108  52E6               	movf	postinc1,f,c
  6980  01710A  52E6               	movf	postinc1,f,c
  6981                           
  6982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6983                           ;stkvar	_fmt @ sp[(-2)+-4]
  6984                           
  6985                           ;incstack = 0
  6986  01710C  0EFA               	movlw	-6
  6987  01710E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6988  017114  0EFB               	movlw	-5
  6989  017116  006F FF8C  F03D    	movff	plusw1,btemp+11
  6990                           
  6991                           ;stkvar	_cfmt @ sp[(-2)+0]
  6992  01711C  0EFF               	movlw	-1
  6993  01711E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6994  017124  0EFE               	movlw	-2
  6995  017126  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6996                           
  6997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6998  01712C  6A19               	clrf	_nout^0,c
  6999  01712E  6A1A               	clrf	(_nout+1)^0,c
  7000                           
  7001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7002  017130  D020               	goto	l9991
  7003  017132                     l9989:
  7004                           
  7005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7006                           ;stkvar	_ap @ sp[(-2)+-6]
  7007  017132  0EF8               	movlw	-8
  7008  017134  006F FF8F FFE6     	movff	plusw1,postinc1
  7009  01713A  006F FF8F FFE6     	movff	plusw1,postinc1
  7010                           
  7011                           ;stkvar	_cfmt @ sp[(-4)+0]
  7012  017140  0EFC               	movlw	252
  7013  017142  24E1               	addwf	fsr1l,w,c
  7014  017144  6E32               	movwf	btemp^0,c
  7015  017146  0EFF               	movlw	255
  7016  017148  20E2               	addwfc	fsr1h,w,c
  7017  01714A  6E33               	movwf	(btemp+1)^0,c
  7018  01714C  0060  F0CB  FFE6   	movff	btemp,postinc1
  7019  017152  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7020                           
  7021                           ;stkvar	_fp @ sp[(-6)+-2]
  7022  017158  0EF8               	movlw	-8
  7023  01715A  006F FF8F FFE6     	movff	plusw1,postinc1
  7024  017160  006F FF8F FFE6     	movff	plusw1,postinc1
  7025  017166  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7026  01716A  5032               	movf	btemp^0,w,c
  7027  01716C  2619               	addwf	_nout^0,f,c
  7028  01716E  5033               	movf	(btemp+1)^0,w,c
  7029  017170  221A               	addwfc	(_nout+1)^0,f,c
  7030  017172                     l9991:
  7031                           
  7032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7033                           ;stkvar	_cfmt @ sp[(-2)+0]
  7034  017172  50E1               	movf	fsr1l,w,c
  7035  017174  0FFE               	addlw	-2
  7036  017176  6ED9               	movwf	fsr2l,c
  7037  017178  50E2               	movf	fsr1h,w,c
  7038  01717A  6EDA               	movwf	fsr2h,c
  7039  01717C  0EFF               	movlw	255
  7040  01717E  22DA               	addwfc	fsr2h,f,c
  7041  017180  006F FF7B FFF6     	movff	postinc2,tblptrl
  7042  017186  006F FF77 FFF7     	movff	postdec2,tblptrh
  7043  01718C                     	if	0	;tblptru may be non-zero
  7044  01718C                     	endif
  7045  01718C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7046  01718C  0E00               	movlw	low (__mediumconst shr (0+16))
  7047  01718E  6EF8               	movwf	tblptru,c
  7048  017190                     	endif
  7049  017190  0008               	tblrd		*
  7050  017192  50F5               	movf	tablat,w,c
  7051  017194  0900               	iorlw	0
  7052  017196  A4D8               	btfss	status,2,c
  7053  017198  D7CC               	goto	l9989
  7054                           
  7055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7056  01719A  0060  F064  F032   	movff	_nout,btemp
  7057  0171A0  0060  F068  F033   	movff	_nout+1,btemp+1
  7058                           
  7059                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7060  0171A6  0EF8               	movlw	248
  7061  0171A8  26E1               	addwf	fsr1l,f,c
  7062  0171AA  0EFF               	movlw	255
  7063  0171AC  22E2               	addwfc	fsr1h,f,c
  7064  0171AE  0012               	return		;funcret
  7065  0171B0                     __end_of_vfprintf:
  7066                           	opt callstack 0
  7067                           
  7068 ;; *************** function _vfpfcnvrt *****************
  7069 ;; Defined at:
  7070 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7073 ;;		 -> f(6), NULL(0), 
  7074 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7075 ;;		 -> cfmt(2), 
  7076 ;;  ap              2  [STACK] PTR PTR void 
  7077 ;;		 -> ap(2), ap(2), 
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  llu             8  [STACK] unsigned long long 
  7080 ;;  ll              8  [STACK] long long 
  7081 ;;  f               4  [STACK] long long 
  7082 ;;  ct              3  [STACK] unsigned char [3]
  7083 ;;  vp              3    0        PTR void 
  7084 ;;  cp              2  [STACK] PTR unsigned char 
  7085 ;;		 -> ?_printf(2), ?_sprintf(2), STR_19(9), STR_18(12), 
  7086 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7087 ;;		 -> STR_3(5), V(187), 
  7088 ;;  i               2    0        int 
  7089 ;;  done            2    0        int 
  7090 ;;  c               1  [STACK] unsigned char 
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  2  [STACK] int 
  7093 ;; Registers used:
  7094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/5
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7104 ;;Total ram usage:        0 bytes
  7105 ;; Hardware stack levels used:    1
  7106 ;; Hardware stack levels required when called:   12
  7107 ;; This function calls:
  7108 ;;		_atoi
  7109 ;;		_ctoa
  7110 ;;		_dtoa
  7111 ;;		_efgtoa
  7112 ;;		_fputc
  7113 ;;		_isdigit
  7114 ;;		_isupper
  7115 ;;		_stoa
  7116 ;;		_strncmp
  7117 ;;		_tolower
  7118 ;;		_xtoa
  7119 ;; This function is called by:
  7120 ;;		_vfprintf
  7121 ;; This function uses a reentrant model
  7122 ;;
  7123                           
  7124                           	psect	text36
  7125  011244                     __ptext36:
  7126                           	opt callstack 0
  7127  011244                     _vfpfcnvrt:
  7128                           	opt callstack 0
  7129                           
  7130                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7131  011244  0E20               	movlw	32
  7132  011246  26E1               	addwf	fsr1l,f,c
  7133  011248  0E00               	movlw	0
  7134  01124A  22E2               	addwfc	fsr1h,f,c
  7135                           
  7136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7137                           ;stkvar	_fmt @ sp[(-32)+-4]
  7138                           
  7139                           ;incstack = 0
  7140  01124C  0EDC               	movlw	-36
  7141  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7142  011254  0EDD               	movlw	-35
  7143  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7144  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7145  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7146  011268                     	if	0	;tblptru may be non-zero
  7147  011268                     	endif
  7148  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7149  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7150  01126A  6EF8               	movwf	tblptru,c
  7151  01126C                     	endif
  7152  01126C  0008               	tblrd		*
  7153  01126E  50F5               	movf	tablat,w,c
  7154  011270  0A25               	xorlw	37
  7155  011272  A4D8               	btfss	status,2,c
  7156  011274  EF92  F08E         	goto	l9935
  7157                           
  7158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7159                           ;stkvar	_fmt @ sp[(-32)+-4]
  7160  011278  0EDC               	movlw	-36
  7161  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7162  011280  0EDD               	movlw	-35
  7163  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7164  011288  2ADE               	incf	postinc2,f,c
  7165  01128A  0E00               	movlw	0
  7166  01128C  22DD               	addwfc	postdec2,f,c
  7167                           
  7168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7169  01128E  6A1B               	clrf	_width^0,c
  7170  011290  6A1C               	clrf	(_width+1)^0,c
  7171  011292  6A1F               	clrf	_flags^0,c
  7172  011294  6A20               	clrf	(_flags+1)^0,c
  7173                           
  7174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7175  011296  681D               	setf	_prec^0,c
  7176  011298  681E               	setf	(_prec+1)^0,c
  7177                           
  7178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7179                           ;stkvar	_fmt @ sp[(-32)+-4]
  7180  01129A  0EDC               	movlw	-36
  7181  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7182  0112A2  0EDD               	movlw	-35
  7183  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7184  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7185  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7186  0112B6                     	if	0	;tblptru may be non-zero
  7187  0112B6                     	endif
  7188  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7189  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7190  0112B8  6EF8               	movwf	tblptru,c
  7191  0112BA                     	endif
  7192  0112BA  0008               	tblrd		*
  7193  0112BC  50F5               	movf	tablat,w,c
  7194  0112BE  0A2A               	xorlw	42
  7195  0112C0  A4D8               	btfss	status,2,c
  7196  0112C2  D031               	goto	l9799
  7197                           
  7198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7199                           ;stkvar	_fmt @ sp[(-32)+-4]
  7200  0112C4  0EDC               	movlw	-36
  7201  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7202  0112CC  0EDD               	movlw	-35
  7203  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7204  0112D4  2ADE               	incf	postinc2,f,c
  7205  0112D6  0E00               	movlw	0
  7206  0112D8  22DD               	addwfc	postdec2,f,c
  7207                           
  7208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7209                           ;stkvar	_ap @ sp[(-32)+-6]
  7210  0112DA  0EDA               	movlw	-38
  7211  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7212  0112E2  0EDB               	movlw	-37
  7213  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7214  0112EA  0E02               	movlw	2
  7215  0112EC  5EDE               	subwf	postinc2,f,c
  7216  0112EE  0E00               	movlw	0
  7217  0112F0  5ADD               	subwfb	postdec2,f,c
  7218  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7219  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7220  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7221  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7222  01130A  006F FF78  F01B    	movff	postinc2,_width
  7223  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7224                           
  7225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7226  011316  AE1C               	btfss	(_width+1)^0,7,c
  7227  011318  D066               	goto	u9920
  7228                           
  7229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7230  01131A  801F               	bsf	_flags^0,0,c
  7231                           
  7232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7233  01131C  6C1B               	negf	_width^0,c
  7234  01131E  1E1C               	comf	(_width+1)^0,f,c
  7235  011320  B0D8               	btfsc	status,0,c
  7236  011322  2A1C               	incf	(_width+1)^0,f,c
  7237  011324  D060               	goto	u9920
  7238  011326                     l9799:
  7239                           
  7240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7241                           ;stkvar	_fmt @ sp[(-32)+-4]
  7242  011326  0EDC               	movlw	-36
  7243  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7244  01132E  0EDD               	movlw	-35
  7245  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7246  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7247  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7248  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7249  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7250  01134E  EC0E  F0A8         	call	_atoi	;wreg free
  7251  011352  0060  F0C8  F01B   	movff	btemp,_width
  7252  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7253                           
  7254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7255  01135E  D00B               	goto	l9803
  7256  011360                     l9801:
  7257                           
  7258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7259                           ;stkvar	_fmt @ sp[(-32)+-4]
  7260  011360  0EDC               	movlw	-36
  7261  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7262  011368  0EDD               	movlw	-35
  7263  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7264  011370  2ADE               	incf	postinc2,f,c
  7265  011372  0E00               	movlw	0
  7266  011374  22DD               	addwfc	postdec2,f,c
  7267  011376                     l9803:
  7268  011376  0ED0               	movlw	208
  7269  011378  6E3C               	movwf	(btemp+10)^0,c
  7270  01137A  0EFF               	movlw	255
  7271  01137C  6E3D               	movwf	(btemp+11)^0,c
  7272                           
  7273                           ;stkvar	_fmt @ sp[(-32)+-4]
  7274  01137E  0EDC               	movlw	-36
  7275  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7276  011386  0EDD               	movlw	-35
  7277  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7278  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7279  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7280  01139A                     	if	0	;tblptru may be non-zero
  7281  01139A                     	endif
  7282  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7283  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7284  01139C  6EF8               	movwf	tblptru,c
  7285  01139E                     	endif
  7286  01139E  0008               	tblrd		*
  7287  0113A0  50F5               	movf	tablat,w,c
  7288  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7289  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7290  0113A6  503C               	movf	(btemp+10)^0,w,c
  7291  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7292  0113AA  503D               	movf	(btemp+11)^0,w,c
  7293  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7294  0113AE  503B               	movf	(btemp+9)^0,w,c
  7295  0113B0  E106               	bnz	u9900
  7296  0113B2  0E0A               	movlw	10
  7297  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7298  0113B6  B0D8               	btfsc	status,0,c
  7299  0113B8  D002               	goto	u9900
  7300  0113BA  0E01               	movlw	1
  7301  0113BC  D001               	goto	u9910
  7302  0113BE                     u9900:
  7303  0113BE  0E00               	movlw	0
  7304  0113C0                     u9910:
  7305  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7306  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7307                           
  7308                           ;stkvar	_vfpfcnvrt$4438 @ sp[(-32)+4]
  7309  0113C4  0EE4               	movlw	-28
  7310  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7311  0113CC  0EE5               	movlw	-27
  7312  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7313                           
  7314                           ;stkvar	_vfpfcnvrt$4438 @ sp[(-32)+4]
  7315  0113D4  0EE4               	movlw	-28
  7316  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7317  0113DC  0EE5               	movlw	-27
  7318  0113DE  50E3               	movf	plusw1,w,c
  7319  0113E0  1032               	iorwf	btemp^0,w,c
  7320  0113E2  A4D8               	btfss	status,2,c
  7321  0113E4  D7BD               	goto	l9801
  7322  0113E6                     u9920:
  7323                           
  7324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7325                           ;stkvar	_fmt @ sp[(-32)+-4]
  7326  0113E6  0EDC               	movlw	-36
  7327  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7328  0113EE  0EDD               	movlw	-35
  7329  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7330  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7331  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7332  011402                     	if	0	;tblptru may be non-zero
  7333  011402                     	endif
  7334  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7335  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7336  011404  6EF8               	movwf	tblptru,c
  7337  011406                     	endif
  7338  011406  0008               	tblrd		*
  7339  011408  50F5               	movf	tablat,w,c
  7340  01140A  0A2E               	xorlw	46
  7341  01140C  A4D8               	btfss	status,2,c
  7342  01140E  D0AC               	goto	u9970
  7343                           
  7344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7345  011410  6A1D               	clrf	_prec^0,c
  7346  011412  6A1E               	clrf	(_prec+1)^0,c
  7347                           
  7348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7349                           ;stkvar	_fmt @ sp[(-32)+-4]
  7350  011414  0EDC               	movlw	-36
  7351  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7352  01141C  0EDD               	movlw	-35
  7353  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7354  011424  2ADE               	incf	postinc2,f,c
  7355  011426  0E00               	movlw	0
  7356  011428  22DD               	addwfc	postdec2,f,c
  7357                           
  7358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7359                           ;stkvar	_fmt @ sp[(-32)+-4]
  7360  01142A  0EDC               	movlw	-36
  7361  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7362  011432  0EDD               	movlw	-35
  7363  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7364  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7365  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7366  011446                     	if	0	;tblptru may be non-zero
  7367  011446                     	endif
  7368  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7369  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7370  011448  6EF8               	movwf	tblptru,c
  7371  01144A                     	endif
  7372  01144A  0008               	tblrd		*
  7373  01144C  50F5               	movf	tablat,w,c
  7374  01144E  0A2A               	xorlw	42
  7375  011450  A4D8               	btfss	status,2,c
  7376  011452  D02A               	goto	l9821
  7377                           
  7378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7379                           ;stkvar	_fmt @ sp[(-32)+-4]
  7380  011454  0EDC               	movlw	-36
  7381  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7382  01145C  0EDD               	movlw	-35
  7383  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7384  011464  2ADE               	incf	postinc2,f,c
  7385  011466  0E00               	movlw	0
  7386  011468  22DD               	addwfc	postdec2,f,c
  7387                           
  7388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7389                           ;stkvar	_ap @ sp[(-32)+-6]
  7390  01146A  0EDA               	movlw	-38
  7391  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7392  011472  0EDB               	movlw	-37
  7393  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7394  01147A  0E02               	movlw	2
  7395  01147C  5EDE               	subwf	postinc2,f,c
  7396  01147E  0E00               	movlw	0
  7397  011480  5ADD               	subwfb	postdec2,f,c
  7398  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7399  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7400  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7401  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7402  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7403  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7404                           
  7405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7406  0114A6  D060               	goto	u9970
  7407  0114A8                     l9821:
  7408                           
  7409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7410                           ;stkvar	_fmt @ sp[(-32)+-4]
  7411  0114A8  0EDC               	movlw	-36
  7412  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7413  0114B0  0EDD               	movlw	-35
  7414  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7415  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7416  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7417  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7418  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7419  0114D0  EC0E  F0A8         	call	_atoi	;wreg free
  7420  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7421  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7422                           
  7423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7424  0114E0  D00B               	goto	l9825
  7425  0114E2                     l9823:
  7426                           
  7427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7428                           ;stkvar	_fmt @ sp[(-32)+-4]
  7429  0114E2  0EDC               	movlw	-36
  7430  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7431  0114EA  0EDD               	movlw	-35
  7432  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7433  0114F2  2ADE               	incf	postinc2,f,c
  7434  0114F4  0E00               	movlw	0
  7435  0114F6  22DD               	addwfc	postdec2,f,c
  7436  0114F8                     l9825:
  7437  0114F8  0ED0               	movlw	208
  7438  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7439  0114FC  0EFF               	movlw	255
  7440  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7441                           
  7442                           ;stkvar	_fmt @ sp[(-32)+-4]
  7443  011500  0EDC               	movlw	-36
  7444  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7445  011508  0EDD               	movlw	-35
  7446  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7447  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7448  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7449  01151C                     	if	0	;tblptru may be non-zero
  7450  01151C                     	endif
  7451  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7452  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7453  01151E  6EF8               	movwf	tblptru,c
  7454  011520                     	endif
  7455  011520  0008               	tblrd		*
  7456  011522  50F5               	movf	tablat,w,c
  7457  011524  6E3A               	movwf	(btemp+8)^0,c
  7458  011526  6A3B               	clrf	(btemp+9)^0,c
  7459  011528  503C               	movf	(btemp+10)^0,w,c
  7460  01152A  263A               	addwf	(btemp+8)^0,f,c
  7461  01152C  503D               	movf	(btemp+11)^0,w,c
  7462  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7463  011530  503B               	movf	(btemp+9)^0,w,c
  7464  011532  E106               	bnz	u9950
  7465  011534  0E0A               	movlw	10
  7466  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7467  011538  B0D8               	btfsc	status,0,c
  7468  01153A  D002               	goto	u9950
  7469  01153C  0E01               	movlw	1
  7470  01153E  D001               	goto	u9960
  7471  011540                     u9950:
  7472  011540  0E00               	movlw	0
  7473  011542                     u9960:
  7474  011542  6E3C               	movwf	(btemp+10)^0,c
  7475  011544  6A3D               	clrf	(btemp+11)^0,c
  7476                           
  7477                           ;stkvar	_vfpfcnvrt$4439 @ sp[(-32)+0]
  7478  011546  0EE0               	movlw	-32
  7479  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7480  01154E  0EE1               	movlw	-31
  7481  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7482                           
  7483                           ;stkvar	_vfpfcnvrt$4439 @ sp[(-32)+0]
  7484  011556  0EE0               	movlw	-32
  7485  011558  006F FF8C  F032    	movff	plusw1,btemp
  7486  01155E  0EE1               	movlw	-31
  7487  011560  50E3               	movf	plusw1,w,c
  7488  011562  1032               	iorwf	btemp^0,w,c
  7489  011564  A4D8               	btfss	status,2,c
  7490  011566  D7BD               	goto	l9823
  7491  011568                     u9970:
  7492                           
  7493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7494                           ;stkvar	_fmt @ sp[(-32)+-4]
  7495  011568  0EDC               	movlw	-36
  7496  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7497  011570  0EDD               	movlw	-35
  7498  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7499  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7500  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7501  011584                     	if	0	;tblptru may be non-zero
  7502  011584                     	endif
  7503  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7504  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7505  011586  6EF8               	movwf	tblptru,c
  7506  011588                     	endif
  7507  011588  0008               	tblrd		*
  7508  01158A  50F5               	movf	tablat,w,c
  7509  01158C  6EE6               	movwf	postinc1,c
  7510  01158E  0E00               	movlw	0
  7511  011590  6EE6               	movwf	postinc1,c
  7512  011592  ECE0  F0BA         	call	_tolower	;wreg free
  7513                           
  7514                           ;stkvar	_ct @ sp[(-32)+26]
  7515  011596  0EFA               	movlw	-6
  7516  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7517                           
  7518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7519                           ;stkvar	_ct @ sp[(-32)+26]
  7520  01159E  0EFA               	movlw	-6
  7521  0115A0  50E3               	movf	plusw1,w,c
  7522  0115A2  B4D8               	btfsc	status,2,c
  7523  0115A4  D05B               	goto	l9841
  7524                           
  7525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7526                           ;stkvar	_ct @ sp[(-32)+26]
  7527  0115A6  0EFB               	movlw	251
  7528  0115A8  24E1               	addwf	fsr1l,w,c
  7529  0115AA  6ED9               	movwf	fsr2l,c
  7530  0115AC  0EFF               	movlw	255
  7531  0115AE  20E2               	addwfc	fsr1h,w,c
  7532  0115B0  6EDA               	movwf	fsr2h,c
  7533                           
  7534                           ;stkvar	_fmt @ sp[(-32)+-4]
  7535  0115B2  0EDC               	movlw	-36
  7536  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7537  0115BA  0EDD               	movlw	-35
  7538  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7539  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7540  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7541  0115CE  0E01               	movlw	1
  7542  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7543  0115D2  0E00               	movlw	0
  7544  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7545  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7546  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7547  0115E2                     	if	0	;tblptru may be non-zero
  7548  0115E2                     	endif
  7549  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7550  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7551  0115E4  6EF8               	movwf	tblptru,c
  7552  0115E6                     	endif
  7553  0115E6  0008               	tblrd		*
  7554  0115E8  50F5               	movf	tablat,w,c
  7555  0115EA  6EE6               	movwf	postinc1,c
  7556  0115EC  0E00               	movlw	0
  7557  0115EE  6EE6               	movwf	postinc1,c
  7558  0115F0  ECE0  F0BA         	call	_tolower	;wreg free
  7559  0115F4  5032               	movf	btemp^0,w,c
  7560  0115F6  6EDF               	movwf	indf2,c
  7561                           
  7562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7563                           ;stkvar	_ct @ sp[(-32)+26]
  7564  0115F8  0EFB               	movlw	251
  7565  0115FA  24E1               	addwf	fsr1l,w,c
  7566  0115FC  6ED9               	movwf	fsr2l,c
  7567  0115FE  0EFF               	movlw	255
  7568  011600  20E2               	addwfc	fsr1h,w,c
  7569  011602  6EDA               	movwf	fsr2h,c
  7570  011604  50DF               	movf	indf2,w,c
  7571  011606  B4D8               	btfsc	status,2,c
  7572  011608  D029               	goto	l9841
  7573                           
  7574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7575                           ;stkvar	_ct @ sp[(-32)+26]
  7576  01160A  0EFC               	movlw	252
  7577  01160C  24E1               	addwf	fsr1l,w,c
  7578  01160E  6ED9               	movwf	fsr2l,c
  7579  011610  0EFF               	movlw	255
  7580  011612  20E2               	addwfc	fsr1h,w,c
  7581  011614  6EDA               	movwf	fsr2h,c
  7582                           
  7583                           ;stkvar	_fmt @ sp[(-32)+-4]
  7584  011616  0EDC               	movlw	-36
  7585  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7586  01161E  0EDD               	movlw	-35
  7587  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7588  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7589  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7590  011632  0E02               	movlw	2
  7591  011634  263C               	addwf	(btemp+10)^0,f,c
  7592  011636  0E00               	movlw	0
  7593  011638  223D               	addwfc	(btemp+11)^0,f,c
  7594  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7595  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7596  011646                     	if	0	;tblptru may be non-zero
  7597  011646                     	endif
  7598  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7599  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7600  011648  6EF8               	movwf	tblptru,c
  7601  01164A                     	endif
  7602  01164A  0008               	tblrd		*
  7603  01164C  50F5               	movf	tablat,w,c
  7604  01164E  6EE6               	movwf	postinc1,c
  7605  011650  0E00               	movlw	0
  7606  011652  6EE6               	movwf	postinc1,c
  7607  011654  ECE0  F0BA         	call	_tolower	;wreg free
  7608  011658  5032               	movf	btemp^0,w,c
  7609  01165A  6EDF               	movwf	indf2,c
  7610  01165C                     l9841:
  7611                           
  7612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7613                           ;stkvar	_fmt @ sp[(-32)+-4]
  7614  01165C  0EDC               	movlw	-36
  7615  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7616  011664  0EDD               	movlw	-35
  7617  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7618  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7619  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7620  011678                     	if	0	;tblptru may be non-zero
  7621  011678                     	endif
  7622  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7623  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7624  01167A  6EF8               	movwf	tblptru,c
  7625  01167C                     	endif
  7626  01167C  0008               	tblrd		*
  7627  01167E  50F5               	movf	tablat,w,c
  7628  011680  0A63               	xorlw	99
  7629  011682  A4D8               	btfss	status,2,c
  7630  011684  D036               	goto	l9851
  7631                           
  7632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7633                           ;stkvar	_fmt @ sp[(-32)+-4]
  7634  011686  0EDC               	movlw	-36
  7635  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7636  01168E  0EDD               	movlw	-35
  7637  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7638  011696  2ADE               	incf	postinc2,f,c
  7639  011698  0E00               	movlw	0
  7640  01169A  22DD               	addwfc	postdec2,f,c
  7641                           
  7642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7643                           ;stkvar	_ap @ sp[(-32)+-6]
  7644  01169C  0EDA               	movlw	-38
  7645  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7646  0116A4  0EDB               	movlw	-37
  7647  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7648  0116AC  0E02               	movlw	2
  7649  0116AE  5EDE               	subwf	postinc2,f,c
  7650  0116B0  0E00               	movlw	0
  7651  0116B2  5ADD               	subwfb	postdec2,f,c
  7652  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  7653  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  7654  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7655  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7656  0116CC  50DF               	movf	indf2,w,c
  7657  0116CE  6E3D               	movwf	(btemp+11)^0,c
  7658                           
  7659                           ;stkvar	_c @ sp[(-32)+31]
  7660  0116D0  0EFF               	movlw	-1
  7661  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7662                           
  7663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7664                           ;stkvar	_c @ sp[(-32)+31]
  7665  0116D8  0EFF               	movlw	-1
  7666  0116DA  50E3               	movf	plusw1,w,c
  7667  0116DC  6EE6               	movwf	postinc1,c
  7668                           
  7669                           ;stkvar	_fp @ sp[(-33)+-2]
  7670  0116DE  0EDD               	movlw	-35
  7671  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7672  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7673  0116EC  EC5A  F0BA         	call	_ctoa	;wreg free
  7674  0116F0  D343               	goto	l2021
  7675  0116F2                     l9851:
  7676                           
  7677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7678                           ;stkvar	_fmt @ sp[(-32)+-4]
  7679  0116F2  0EDC               	movlw	-36
  7680  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7681  0116FA  0EDD               	movlw	-35
  7682  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7683  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7684  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7685  01170E                     	if	0	;tblptru may be non-zero
  7686  01170E                     	endif
  7687  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7688  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7689  011710  6EF8               	movwf	tblptru,c
  7690  011712                     	endif
  7691  011712  0008               	tblrd		*
  7692  011714  50F5               	movf	tablat,w,c
  7693  011716  0A64               	xorlw	100
  7694  011718  B4D8               	btfsc	status,2,c
  7695  01171A  D015               	goto	u10020
  7696                           
  7697                           ;stkvar	_fmt @ sp[(-32)+-4]
  7698  01171C  0EDC               	movlw	-36
  7699  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7700  011724  0EDD               	movlw	-35
  7701  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7702  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7703  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7704  011738                     	if	0	;tblptru may be non-zero
  7705  011738                     	endif
  7706  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7707  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7708  01173A  6EF8               	movwf	tblptru,c
  7709  01173C                     	endif
  7710  01173C  0008               	tblrd		*
  7711  01173E  50F5               	movf	tablat,w,c
  7712  011740  0A69               	xorlw	105
  7713  011742  A4D8               	btfss	status,2,c
  7714  011744  D075               	goto	l9863
  7715  011746                     u10020:
  7716                           
  7717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7718                           ;stkvar	_fmt @ sp[(-32)+-4]
  7719  011746  0EDC               	movlw	-36
  7720  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7721  01174E  0EDD               	movlw	-35
  7722  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7723  011756  2ADE               	incf	postinc2,f,c
  7724  011758  0E00               	movlw	0
  7725  01175A  22DD               	addwfc	postdec2,f,c
  7726                           
  7727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7728                           ;stkvar	_ap @ sp[(-32)+-6]
  7729  01175C  0EDA               	movlw	-38
  7730  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7731  011764  0EDB               	movlw	-37
  7732  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7733  01176C  0E02               	movlw	2
  7734  01176E  5EDE               	subwf	postinc2,f,c
  7735  011770  0E00               	movlw	0
  7736  011772  5ADD               	subwfb	postdec2,f,c
  7737  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  7738  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  7739  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7740  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7741  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  7742  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  7743                           
  7744                           ;stkvar	_ll @ sp[(-32)+14]
  7745  011798  0EEE               	movlw	-18
  7746  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7747  0117A0  0EEF               	movlw	-17
  7748  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7749  0117A8  6A32               	clrf	btemp^0,c
  7750  0117AA  BEE3               	btfsc	plusw1,7,c
  7751  0117AC  6832               	setf	btemp^0,c
  7752  0117AE  0EF0               	movlw	-16
  7753  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7754  0117B6  0EF1               	movlw	-15
  7755  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7756  0117BE  0EF2               	movlw	-14
  7757  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7758  0117C6  0EF3               	movlw	-13
  7759  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7760  0117CE  0EF4               	movlw	-12
  7761  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7762  0117D6  0EF5               	movlw	-11
  7763  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7764                           
  7765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7766                           ;stkvar	_ll @ sp[(-32)+14]
  7767  0117DE  50E1               	movf	fsr1l,w,c
  7768  0117E0  0FEE               	addlw	-18
  7769  0117E2  6ED9               	movwf	fsr2l,c
  7770  0117E4  50E2               	movf	fsr1h,w,c
  7771  0117E6  6EDA               	movwf	fsr2h,c
  7772  0117E8  0EFF               	movlw	255
  7773  0117EA  22DA               	addwfc	fsr2h,f,c
  7774  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7775  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7776  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7777  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7778  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7779  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7780  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7781  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7782                           
  7783                           ;stkvar	_fp @ sp[(-40)+-2]
  7784  01181C  0ED6               	movlw	-42
  7785  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7786  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7787  01182A  EC26  F09E         	call	_dtoa	;wreg free
  7788  01182E  D2A4               	goto	l2021
  7789  011830                     l9863:
  7790                           
  7791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7792                           ;stkvar	_ct @ sp[(-32)+26]
  7793  011830  0EFA               	movlw	-6
  7794  011832  006F FF8C  F032    	movff	plusw1,btemp
  7795  011838  0E66               	movlw	102
  7796  01183A  1832               	xorwf	btemp^0,w,c
  7797  01183C  A4D8               	btfss	status,2,c
  7798  01183E  D06E               	goto	l9875
  7799                           
  7800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7801                           ;stkvar	_fmt @ sp[(-32)+-4]
  7802  011840  0EDC               	movlw	-36
  7803  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7804  011848  0EDD               	movlw	-35
  7805  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7806  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7807  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7808  01185C                     	if	0	;tblptru may be non-zero
  7809  01185C                     	endif
  7810  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7811  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7812  01185E  6EF8               	movwf	tblptru,c
  7813  011860                     	endif
  7814                           
  7815                           ;stkvar	_c @ sp[(-32)+31]
  7816  011860  0008               	tblrd		*
  7817  011862  0EFF               	movlw	-1
  7818  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7819                           
  7820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7821                           ;stkvar	_fmt @ sp[(-32)+-4]
  7822  01186A  0EDC               	movlw	-36
  7823  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7824  011872  0EDD               	movlw	-35
  7825  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7826  01187A  2ADE               	incf	postinc2,f,c
  7827  01187C  0E00               	movlw	0
  7828  01187E  22DD               	addwfc	postdec2,f,c
  7829                           
  7830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7831                           ;stkvar	_ap @ sp[(-32)+-6]
  7832  011880  0EDA               	movlw	-38
  7833  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7834  011888  0EDB               	movlw	-37
  7835  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7836  011890  0E04               	movlw	4
  7837  011892  5EDE               	subwf	postinc2,f,c
  7838  011894  0E00               	movlw	0
  7839  011896  5ADD               	subwfb	postdec2,f,c
  7840  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  7841  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  7842  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7843  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7844  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  7845  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  7846  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  7847  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  7848                           
  7849                           ;stkvar	_f @ sp[(-32)+22]
  7850  0118C8  0EF6               	movlw	-10
  7851  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  7852  0118D0  0EF7               	movlw	-9
  7853  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  7854  0118D8  0EF8               	movlw	-8
  7855  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7856  0118E0  0EF9               	movlw	-7
  7857  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7858  0118E8                     l9871:
  7859                           
  7860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7861                           ;stkvar	_c @ sp[(-32)+31]
  7862  0118E8  0EFF               	movlw	-1
  7863  0118EA  50E3               	movf	plusw1,w,c
  7864  0118EC  6EE6               	movwf	postinc1,c
  7865                           
  7866                           ;stkvar	_f @ sp[(-33)+22]
  7867  0118EE  0EF5               	movlw	-11
  7868  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7869  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7870  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7871  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  7872                           
  7873                           ;stkvar	_fp @ sp[(-37)+-2]
  7874  011908  0ED9               	movlw	-39
  7875  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  7876  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  7877  011916  EC00  F080         	call	_efgtoa	;wreg free
  7878  01191A  D22E               	goto	l2021
  7879  01191C                     l9875:
  7880                           
  7881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7882  01191C  0E02               	movlw	2
  7883  01191E  6EE6               	movwf	postinc1,c
  7884  011920  0E00               	movlw	0
  7885  011922  6EE6               	movwf	postinc1,c
  7886  011924  0EF6               	movlw	low STR_45
  7887  011926  6EE6               	movwf	postinc1,c
  7888  011928  0EFF               	movlw	high STR_45
  7889  01192A  6EE6               	movwf	postinc1,c
  7890                           
  7891                           ;stkvar	_ct @ sp[(-36)+26]
  7892  01192C  0EF6               	movlw	246
  7893  01192E  24E1               	addwf	fsr1l,w,c
  7894  011930  6E32               	movwf	btemp^0,c
  7895  011932  0EFF               	movlw	255
  7896  011934  20E2               	addwfc	fsr1h,w,c
  7897  011936  6E33               	movwf	(btemp+1)^0,c
  7898  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  7899  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7900  011944  EC87  F0AD         	call	_strncmp	;wreg free
  7901  011948  5032               	movf	btemp^0,w,c
  7902  01194A  1033               	iorwf	(btemp+1)^0,w,c
  7903  01194C  A4D8               	btfss	status,2,c
  7904  01194E  D096               	goto	l9895
  7905                           
  7906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7907                           ;stkvar	_fmt @ sp[(-32)+-4]
  7908  011950  0EDC               	movlw	-36
  7909  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  7910  011958  0EDD               	movlw	-35
  7911  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7912  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  7913  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  7914  01196C  0E01               	movlw	1
  7915  01196E  263C               	addwf	(btemp+10)^0,f,c
  7916  011970  0E00               	movlw	0
  7917  011972  223D               	addwfc	(btemp+11)^0,f,c
  7918  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7919  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7920  011980                     	if	0	;tblptru may be non-zero
  7921  011980                     	endif
  7922  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7923  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  7924  011982  6EF8               	movwf	tblptru,c
  7925  011984                     	endif
  7926                           
  7927                           ;stkvar	_c @ sp[(-32)+31]
  7928  011984  0008               	tblrd		*
  7929  011986  0EFF               	movlw	-1
  7930  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  7931  01198E  0EBF               	movlw	191
  7932  011990  6E3C               	movwf	(btemp+10)^0,c
  7933  011992  0EFF               	movlw	255
  7934  011994  6E3D               	movwf	(btemp+11)^0,c
  7935                           
  7936                           ;stkvar	_fmt @ sp[(-32)+-4]
  7937  011996  0EDC               	movlw	-36
  7938  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  7939  01199E  0EDD               	movlw	-35
  7940  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7941  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7942  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7943  0119B2                     	if	0	;tblptru may be non-zero
  7944  0119B2                     	endif
  7945  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7946  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7947  0119B4  6EF8               	movwf	tblptru,c
  7948  0119B6                     	endif
  7949  0119B6  0008               	tblrd		*
  7950  0119B8  50F5               	movf	tablat,w,c
  7951  0119BA  6E3A               	movwf	(btemp+8)^0,c
  7952  0119BC  6A3B               	clrf	(btemp+9)^0,c
  7953  0119BE  503C               	movf	(btemp+10)^0,w,c
  7954  0119C0  263A               	addwf	(btemp+8)^0,f,c
  7955  0119C2  503D               	movf	(btemp+11)^0,w,c
  7956  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  7957  0119C6  503B               	movf	(btemp+9)^0,w,c
  7958  0119C8  E106               	bnz	u10050
  7959  0119CA  0E1A               	movlw	26
  7960  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  7961  0119CE  B0D8               	btfsc	status,0,c
  7962  0119D0  D002               	goto	u10050
  7963  0119D2  0E01               	movlw	1
  7964  0119D4  D001               	goto	u10060
  7965  0119D6                     u10050:
  7966  0119D6  0E00               	movlw	0
  7967  0119D8                     u10060:
  7968  0119D8  6E3C               	movwf	(btemp+10)^0,c
  7969  0119DA  6A3D               	clrf	(btemp+11)^0,c
  7970                           
  7971                           ;stkvar	_vfpfcnvrt$4445 @ sp[(-32)+2]
  7972  0119DC  0EE2               	movlw	-30
  7973  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7974  0119E4  0EE3               	movlw	-29
  7975  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7976                           
  7977                           ;stkvar	_vfpfcnvrt$4445 @ sp[(-32)+2]
  7978  0119EC  0EE2               	movlw	-30
  7979  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  7980  0119F4  0EE3               	movlw	-29
  7981  0119F6  50E3               	movf	plusw1,w,c
  7982  0119F8  1032               	iorwf	btemp^0,w,c
  7983                           
  7984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7985                           ;stkvar	_ap @ sp[(-32)+-6]
  7986                           
  7987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7988                           
  7989                           ;stkvar	_f @ sp[(-32)+22]
  7990                           
  7991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7992                           ;stkvar	_ap @ sp[(-32)+-6]
  7993  0119FA  0EDA               	movlw	-38
  7994  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7995  011A02  0EDB               	movlw	-37
  7996  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  7997  011A0A  0E04               	movlw	4
  7998  011A0C  5EDE               	subwf	postinc2,f,c
  7999  011A0E  0E00               	movlw	0
  8000  011A10  5ADD               	subwfb	postdec2,f,c
  8001  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8002  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8003  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8004  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8005  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8006  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8007  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8008  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8009                           
  8010                           ;stkvar	_f @ sp[(-32)+22]
  8011  011A42  0EF6               	movlw	-10
  8012  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8013  011A4A  0EF7               	movlw	-9
  8014  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8015  011A52  0EF8               	movlw	-8
  8016  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8017  011A5A  0EF9               	movlw	-7
  8018  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8019                           
  8020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8021                           ;stkvar	_fmt @ sp[(-32)+-4]
  8022  011A62  0EDC               	movlw	-36
  8023  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8024  011A6A  0EDD               	movlw	-35
  8025  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8026  011A72  0E02               	movlw	2
  8027  011A74  26DE               	addwf	postinc2,f,c
  8028  011A76  0E00               	movlw	0
  8029  011A78  22DD               	addwfc	postdec2,f,c
  8030  011A7A  D736               	goto	l9871
  8031  011A7C                     l9895:
  8032                           
  8033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8034                           ;stkvar	_fmt @ sp[(-32)+-4]
  8035  011A7C  0EDC               	movlw	-36
  8036  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8037  011A84  0EDD               	movlw	-35
  8038  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8039  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8040  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8041  011A98                     	if	0	;tblptru may be non-zero
  8042  011A98                     	endif
  8043  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8044  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8045  011A9A  6EF8               	movwf	tblptru,c
  8046  011A9C                     	endif
  8047  011A9C  0008               	tblrd		*
  8048  011A9E  50F5               	movf	tablat,w,c
  8049  011AA0  0A73               	xorlw	115
  8050  011AA2  A4D8               	btfss	status,2,c
  8051  011AA4  D042               	goto	l9905
  8052                           
  8053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8054                           ;stkvar	_fmt @ sp[(-32)+-4]
  8055  011AA6  0EDC               	movlw	-36
  8056  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8057  011AAE  0EDD               	movlw	-35
  8058  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8059  011AB6  2ADE               	incf	postinc2,f,c
  8060  011AB8  0E00               	movlw	0
  8061  011ABA  22DD               	addwfc	postdec2,f,c
  8062                           
  8063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8064                           ;stkvar	_ap @ sp[(-32)+-6]
  8065  011ABC  0EDA               	movlw	-38
  8066  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8067  011AC4  0EDB               	movlw	-37
  8068  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8069  011ACC  0E02               	movlw	2
  8070  011ACE  5EDE               	subwf	postinc2,f,c
  8071  011AD0  0E00               	movlw	0
  8072  011AD2  5ADD               	subwfb	postdec2,f,c
  8073  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8074  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8075  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8076  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8077  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8078  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8079                           
  8080                           ;stkvar	_cp @ sp[(-32)+29]
  8081  011AF8  0EFE               	movlw	-2
  8082  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8083  011B00  0EFD               	movlw	-3
  8084  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8085                           
  8086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8087                           ;stkvar	_cp @ sp[(-32)+29]
  8088  011B08  0EFD               	movlw	-3
  8089  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8090  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8091                           
  8092                           ;stkvar	_fp @ sp[(-34)+-2]
  8093  011B16  0EDC               	movlw	-36
  8094  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8095  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8096  011B24  EC6F  F0A5         	call	_stoa	;wreg free
  8097  011B28  D127               	goto	l2021
  8098  011B2A                     l9905:
  8099                           
  8100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8101                           ;stkvar	_fmt @ sp[(-32)+-4]
  8102  011B2A  0EDC               	movlw	-36
  8103  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8104  011B32  0EDD               	movlw	-35
  8105  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8106  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8107  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8108  011B46                     	if	0	;tblptru may be non-zero
  8109  011B46                     	endif
  8110  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8111  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8112  011B48  6EF8               	movwf	tblptru,c
  8113  011B4A                     	endif
  8114  011B4A  0008               	tblrd		*
  8115  011B4C  50F5               	movf	tablat,w,c
  8116  011B4E  0A78               	xorlw	120
  8117  011B50  B4D8               	btfsc	status,2,c
  8118  011B52  D015               	goto	u10100
  8119                           
  8120                           ;stkvar	_fmt @ sp[(-32)+-4]
  8121  011B54  0EDC               	movlw	-36
  8122  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8123  011B5C  0EDD               	movlw	-35
  8124  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8125  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8126  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8127  011B70                     	if	0	;tblptru may be non-zero
  8128  011B70                     	endif
  8129  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8130  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8131  011B72  6EF8               	movwf	tblptru,c
  8132  011B74                     	endif
  8133  011B74  0008               	tblrd		*
  8134  011B76  50F5               	movf	tablat,w,c
  8135  011B78  0A58               	xorlw	88
  8136  011B7A  A4D8               	btfss	status,2,c
  8137  011B7C  D094               	goto	l9919
  8138  011B7E                     u10100:
  8139                           
  8140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8141                           ;stkvar	_fmt @ sp[(-32)+-4]
  8142  011B7E  0EDC               	movlw	-36
  8143  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8144  011B86  0EDD               	movlw	-35
  8145  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8146  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8147  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8148  011B9A                     	if	0	;tblptru may be non-zero
  8149  011B9A                     	endif
  8150  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8151  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8152  011B9C  6EF8               	movwf	tblptru,c
  8153  011B9E                     	endif
  8154                           
  8155                           ;stkvar	_c @ sp[(-32)+31]
  8156  011B9E  0008               	tblrd		*
  8157  011BA0  0EFF               	movlw	-1
  8158  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8159                           
  8160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8161                           ;stkvar	_fmt @ sp[(-32)+-4]
  8162  011BA8  0EDC               	movlw	-36
  8163  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8164  011BB0  0EDD               	movlw	-35
  8165  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8166  011BB8  2ADE               	incf	postinc2,f,c
  8167  011BBA  0E00               	movlw	0
  8168  011BBC  22DD               	addwfc	postdec2,f,c
  8169                           
  8170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8171                           ;stkvar	_ap @ sp[(-32)+-6]
  8172  011BBE  0EDA               	movlw	-38
  8173  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8174  011BC6  0EDB               	movlw	-37
  8175  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8176  011BCE  0E02               	movlw	2
  8177  011BD0  5EDE               	subwf	postinc2,f,c
  8178  011BD2  0E00               	movlw	0
  8179  011BD4  5ADD               	subwfb	postdec2,f,c
  8180  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8181  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8182  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8183  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8184  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8185  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8186  011BFA  503C               	movf	(btemp+10)^0,w,c
  8187  011BFC  6E42               	movwf	(btemp+16)^0,c
  8188  011BFE  503D               	movf	(btemp+11)^0,w,c
  8189  011C00  6E43               	movwf	(btemp+17)^0,c
  8190  011C02  6A44               	clrf	(btemp+18)^0,c
  8191  011C04  6A45               	clrf	(btemp+19)^0,c
  8192  011C06  6A46               	clrf	(btemp+20)^0,c
  8193  011C08  6A47               	clrf	(btemp+21)^0,c
  8194  011C0A  6A48               	clrf	(btemp+22)^0,c
  8195  011C0C  6A49               	clrf	(btemp+23)^0,c
  8196                           
  8197                           ;stkvar	_llu @ sp[(-32)+6]
  8198  011C0E  0EE6               	movlw	-26
  8199  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8200  011C16  0EE7               	movlw	-25
  8201  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8202  011C1E  0EE8               	movlw	-24
  8203  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8204  011C26  0EE9               	movlw	-23
  8205  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8206  011C2E  0EEA               	movlw	-22
  8207  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8208  011C36  0EEB               	movlw	-21
  8209  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8210  011C3E  0EEC               	movlw	-20
  8211  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8212  011C46  0EED               	movlw	-19
  8213  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8214                           
  8215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8216                           ;stkvar	_c @ sp[(-32)+31]
  8217  011C4E  0EFF               	movlw	-1
  8218  011C50  50E3               	movf	plusw1,w,c
  8219  011C52  6EE6               	movwf	postinc1,c
  8220                           
  8221                           ;stkvar	_llu @ sp[(-33)+6]
  8222  011C54  50E1               	movf	fsr1l,w,c
  8223  011C56  0FE5               	addlw	-27
  8224  011C58  6ED9               	movwf	fsr2l,c
  8225  011C5A  50E2               	movf	fsr1h,w,c
  8226  011C5C  6EDA               	movwf	fsr2h,c
  8227  011C5E  0EFF               	movlw	255
  8228  011C60  22DA               	addwfc	fsr2h,f,c
  8229  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8230  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8231  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8232  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8233  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8234  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8235  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8236  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8237                           
  8238                           ;stkvar	_fp @ sp[(-41)+-2]
  8239  011C92  0ED5               	movlw	-43
  8240  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8241  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8242  011CA0  EC66  F0A0         	call	_xtoa	;wreg free
  8243  011CA4  D069               	goto	l2021
  8244  011CA6                     l9919:
  8245                           
  8246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8247                           ;stkvar	_fmt @ sp[(-32)+-4]
  8248  011CA6  0EDC               	movlw	-36
  8249  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8250  011CAE  0EDD               	movlw	-35
  8251  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8252  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8253  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8254  011CC2                     	if	0	;tblptru may be non-zero
  8255  011CC2                     	endif
  8256  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8257  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8258  011CC4  6EF8               	movwf	tblptru,c
  8259  011CC6                     	endif
  8260  011CC6  0008               	tblrd		*
  8261  011CC8  50F5               	movf	tablat,w,c
  8262  011CCA  0A25               	xorlw	37
  8263  011CCC  A4D8               	btfss	status,2,c
  8264  011CCE  D01A               	goto	l9929
  8265                           
  8266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8267                           ;stkvar	_fmt @ sp[(-32)+-4]
  8268  011CD0  0EDC               	movlw	-36
  8269  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8270  011CD8  0EDD               	movlw	-35
  8271  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8272  011CE0  2ADE               	incf	postinc2,f,c
  8273  011CE2  0E00               	movlw	0
  8274  011CE4  22DD               	addwfc	postdec2,f,c
  8275                           
  8276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8277                           ;stkvar	_fp @ sp[(-32)+-2]
  8278  011CE6  0EDE               	movlw	-34
  8279  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8280  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8281  011CF4  0E25               	movlw	37
  8282  011CF6  6EE6               	movwf	postinc1,c
  8283  011CF8  0E00               	movlw	0
  8284  011CFA  6EE6               	movwf	postinc1,c
  8285  011CFC  EC62  F0B3         	call	_fputc	;wreg free
  8286  011D00                     l9925:
  8287                           
  8288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8289  011D00  0E01               	movlw	1
  8290  011D02  D00C               	goto	L5
  8291  011D04                     l9929:
  8292                           
  8293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8294                           ;stkvar	_fmt @ sp[(-32)+-4]
  8295  011D04  0EDC               	movlw	-36
  8296  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8297  011D0C  0EDD               	movlw	-35
  8298  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8299  011D14  2ADE               	incf	postinc2,f,c
  8300  011D16  0E00               	movlw	0
  8301  011D18  22DD               	addwfc	postdec2,f,c
  8302                           
  8303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8304  011D1A  0E00               	movlw	0
  8305  011D1C                     L5:
  8306  011D1C  6E32               	movwf	btemp^0,c
  8307  011D1E  0E00               	movlw	0
  8308  011D20  6E33               	movwf	(btemp+1)^0,c
  8309  011D22  D02A               	goto	l2021
  8310  011D24                     l9935:
  8311                           
  8312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8313                           ;stkvar	_fp @ sp[(-32)+-2]
  8314  011D24  0EDE               	movlw	-34
  8315  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8316  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8317                           
  8318                           ;stkvar	_fmt @ sp[(-34)+-4]
  8319  011D32  0EDA               	movlw	-38
  8320  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8321  011D3A  0EDB               	movlw	-37
  8322  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8323  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8324  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8325  011D4E                     	if	0	;tblptru may be non-zero
  8326  011D4E                     	endif
  8327  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8328  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8329  011D50  6EF8               	movwf	tblptru,c
  8330  011D52                     	endif
  8331  011D52  0008               	tblrd		*
  8332  011D54  50F5               	movf	tablat,w,c
  8333  011D56  6EE6               	movwf	postinc1,c
  8334  011D58  0E00               	movlw	0
  8335  011D5A  6EE6               	movwf	postinc1,c
  8336  011D5C  EC62  F0B3         	call	_fputc	;wreg free
  8337                           
  8338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8339                           ;stkvar	_fmt @ sp[(-32)+-4]
  8340  011D60  0EDC               	movlw	-36
  8341  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8342  011D68  0EDD               	movlw	-35
  8343  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8344  011D70  2ADE               	incf	postinc2,f,c
  8345  011D72  0E00               	movlw	0
  8346  011D74  22DD               	addwfc	postdec2,f,c
  8347  011D76  D7C4               	goto	l9925
  8348  011D78                     l2021:
  8349                           
  8350                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8351  011D78  0EDA               	movlw	218
  8352  011D7A  26E1               	addwf	fsr1l,f,c
  8353  011D7C  0EFF               	movlw	255
  8354  011D7E  22E2               	addwfc	fsr1h,f,c
  8355  011D80  0012               	return		;funcret
  8356  011D82                     __end_of_vfpfcnvrt:
  8357                           	opt callstack 0
  8358                           
  8359 ;; *************** function _xtoa *****************
  8360 ;; Defined at:
  8361 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8364 ;;		 -> f(6), NULL(0), 
  8365 ;;  d               8  [STACK] unsigned long long 
  8366 ;;  x               1  [STACK] unsigned char 
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;  n               8  [STACK] unsigned long long 
  8369 ;;  c               2  [STACK] int 
  8370 ;;  i               2  [STACK] int 
  8371 ;;  w               2  [STACK] int 
  8372 ;;  p               2  [STACK] int 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  2  [STACK] int 
  8375 ;; Registers used:
  8376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/5
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8386 ;;Total ram usage:        0 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:   11
  8389 ;; This function calls:
  8390 ;;		_isalpha
  8391 ;;		_isupper
  8392 ;;		_pad
  8393 ;;		_toupper
  8394 ;; This function is called by:
  8395 ;;		_vfpfcnvrt
  8396 ;; This function uses a reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text37
  8400  0140CC                     __ptext37:
  8401                           	opt callstack 0
  8402  0140CC                     _xtoa:
  8403                           	opt callstack 0
  8404                           
  8405                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8406  0140CC  0E14               	movlw	20
  8407  0140CE  26E1               	addwf	fsr1l,f,c
  8408  0140D0  0E00               	movlw	0
  8409  0140D2  22E2               	addwfc	fsr1h,f,c
  8410                           
  8411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8412                           
  8413                           ;incstack = 0
  8414  0140D4  AE1E               	btfss	(_prec+1)^0,7,c
  8415                           
  8416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8417  0140D6  921F               	bcf	_flags^0,1,c
  8418                           
  8419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8420  0140D8  BE1E               	btfsc	(_prec+1)^0,7,c
  8421  0140DA  D005               	goto	u9700
  8422  0140DC  501E               	movf	(_prec+1)^0,w,c
  8423  0140DE  E110               	bnz	l9717
  8424  0140E0  041D               	decf	_prec^0,w,c
  8425  0140E2  B0D8               	btfsc	status,0,c
  8426  0140E4  D00D               	goto	l9717
  8427  0140E6                     u9700:
  8428  0140E6  0E01               	movlw	1
  8429  0140E8  6E3C               	movwf	(btemp+10)^0,c
  8430  0140EA  0E00               	movlw	0
  8431  0140EC  6E3D               	movwf	(btemp+11)^0,c
  8432                           
  8433                           ;stkvar	_p @ sp[(-20)+18]
  8434  0140EE  0EFE               	movlw	-2
  8435  0140F0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8436  0140F6  0EFF               	movlw	-1
  8437  0140F8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8438  0140FE  D008               	goto	l1971
  8439  014100                     l9717:
  8440                           
  8441                           ;stkvar	_p @ sp[(-20)+18]
  8442  014100  0EFE               	movlw	-2
  8443  014102  0060  F077  FFE3   	movff	_prec,plusw1
  8444  014108  0EFF               	movlw	-1
  8445  01410A  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8446  014110                     l1971:
  8447                           
  8448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8449                           ;stkvar	_w @ sp[(-20)+16]
  8450  014110  0EFC               	movlw	-4
  8451  014112  0060  F06F  FFE3   	movff	_width,plusw1
  8452  014118  0EFD               	movlw	-3
  8453  01411A  0060  F073  FFE3   	movff	_width+1,plusw1
  8454                           
  8455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8456  014120  A81F               	btfss	_flags^0,4,c
  8457  014122  D00B               	goto	l9723
  8458                           
  8459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8460                           ;stkvar	_w @ sp[(-20)+16]
  8461  014124  50E1               	movf	fsr1l,w,c
  8462  014126  0FFC               	addlw	-4
  8463  014128  6ED9               	movwf	fsr2l,c
  8464  01412A  50E2               	movf	fsr1h,w,c
  8465  01412C  6EDA               	movwf	fsr2h,c
  8466  01412E  0EFF               	movlw	255
  8467  014130  22DA               	addwfc	fsr2h,f,c
  8468  014132  0EFE               	movlw	254
  8469  014134  26DE               	addwf	postinc2,f,c
  8470  014136  0EFF               	movlw	255
  8471  014138  22DD               	addwfc	postdec2,f,c
  8472  01413A                     l9723:
  8473                           
  8474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8475                           ;stkvar	_d @ sp[(-20)+-10]
  8476  01413A  0EE2               	movlw	226
  8477  01413C  24E1               	addwf	fsr1l,w,c
  8478  01413E  6ED9               	movwf	fsr2l,c
  8479  014140  0EFF               	movlw	255
  8480  014142  20E2               	addwfc	fsr1h,w,c
  8481  014144  6EDA               	movwf	fsr2h,c
  8482                           
  8483                           ;stkvar	_n @ sp[(-20)+4]
  8484  014146  0E08               	movlw	8
  8485  014148  6E32               	movwf	btemp^0,c
  8486  01414A  0EF0               	movlw	-16
  8487  01414C                     us972999:
  8488  01414C  006F FF7B FFE3     	movff	postinc2,plusw1
  8489  014152  28E8               	incf	wreg,w,c
  8490  014154  2E32               	decfsz	btemp^0,f,c
  8491  014156  D7FA               	bra	us972999
  8492                           
  8493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8494  014158  0E4F               	movlw	79
  8495  01415A  6E3C               	movwf	(btemp+10)^0,c
  8496  01415C  0E00               	movlw	0
  8497  01415E  6E3D               	movwf	(btemp+11)^0,c
  8498                           
  8499                           ;stkvar	_i @ sp[(-20)+14]
  8500  014160  0EFA               	movlw	-6
  8501  014162  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8502  014168  0EFB               	movlw	-5
  8503  01416A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8504                           
  8505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8506  014170  0101               	movlb	1	; () banked
  8507  014172  6BC7               	clrf	(_dbuf+79)& (0+255),b
  8508                           
  8509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8510  014174  D0EE               	goto	l9761
  8511  014176                     l9729:
  8512                           
  8513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8514                           ;stkvar	_i @ sp[(-20)+14]
  8515  014176  50E1               	movf	fsr1l,w,c
  8516  014178  0FFA               	addlw	-6
  8517  01417A  6ED9               	movwf	fsr2l,c
  8518  01417C  50E2               	movf	fsr1h,w,c
  8519  01417E  6EDA               	movwf	fsr2h,c
  8520  014180  0EFF               	movlw	255
  8521  014182  22DA               	addwfc	fsr2h,f,c
  8522  014184  06DE               	decf	postinc2,f,c
  8523  014186  0E00               	movlw	0
  8524  014188  5ADD               	subwfb	postdec2,f,c
  8525                           
  8526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8527                           ;stkvar	_n @ sp[(-20)+4]
  8528  01418A  0EF0               	movlw	-16
  8529  01418C  006F FF8C  F03C    	movff	plusw1,btemp+10
  8530  014192  0EF1               	movlw	-15
  8531  014194  006F FF8C  F03D    	movff	plusw1,btemp+11
  8532  01419A  0E0F               	movlw	15
  8533  01419C  163C               	andwf	(btemp+10)^0,f,c
  8534  01419E  0E00               	movlw	0
  8535  0141A0  163D               	andwf	(btemp+11)^0,f,c
  8536                           
  8537                           ;stkvar	_c @ sp[(-20)+12]
  8538  0141A2  0EF8               	movlw	-8
  8539  0141A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8540  0141AA  0EF9               	movlw	-7
  8541  0141AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8542                           
  8543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8544                           ;stkvar	_c @ sp[(-20)+12]
  8545  0141B2  0EF9               	movlw	-7
  8546  0141B4  BEE3               	btfsc	plusw1,7,c
  8547  0141B6  D00F               	goto	l9737
  8548  0141B8  0EF9               	movlw	-7
  8549  0141BA  50E3               	movf	plusw1,w,c
  8550  0141BC  E108               	bnz	u9730
  8551  0141BE  0EF8               	movlw	-8
  8552  0141C0  006F FF8C  F032    	movff	plusw1,btemp
  8553  0141C6  0E0A               	movlw	10
  8554  0141C8  5E32               	subwf	btemp^0,f,c
  8555  0141CA  A0D8               	btfss	status,0,c
  8556  0141CC  D004               	goto	l9737
  8557  0141CE                     u9730:
  8558                           
  8559                           ;stkvar	_c @ sp[(-20)+12]
  8560  0141CE  0EF8               	movlw	-8
  8561  0141D0  50E3               	movf	plusw1,w,c
  8562  0141D2  0F57               	addlw	87
  8563  0141D4  D003               	goto	L6
  8564  0141D6                     l9737:
  8565                           
  8566                           ;stkvar	_c @ sp[(-20)+12]
  8567  0141D6  0EF8               	movlw	-8
  8568  0141D8  50E3               	movf	plusw1,w,c
  8569  0141DA  0F30               	addlw	48
  8570  0141DC                     L6:
  8571  0141DC  6E3C               	movwf	(btemp+10)^0,c
  8572  0141DE  0EF9               	movlw	-7
  8573  0141E0  006F FF8C  F03D    	movff	plusw1,btemp+11
  8574  0141E6  0E00               	movlw	0
  8575  0141E8  223D               	addwfc	(btemp+11)^0,f,c
  8576                           
  8577                           ;stkvar	_c @ sp[(-20)+12]
  8578  0141EA  0EF8               	movlw	-8
  8579  0141EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8580  0141F2  0EF9               	movlw	-7
  8581  0141F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8582  0141FA  0EBF               	movlw	191
  8583  0141FC  6E3C               	movwf	(btemp+10)^0,c
  8584  0141FE  0EFF               	movlw	255
  8585  014200  6E3D               	movwf	(btemp+11)^0,c
  8586                           
  8587                           ;stkvar	_x @ sp[(-20)+-11]
  8588  014202  0EE1               	movlw	-31
  8589  014204  50E3               	movf	plusw1,w,c
  8590  014206  6E3A               	movwf	(btemp+8)^0,c
  8591  014208  6A3B               	clrf	(btemp+9)^0,c
  8592  01420A  503C               	movf	(btemp+10)^0,w,c
  8593  01420C  263A               	addwf	(btemp+8)^0,f,c
  8594  01420E  503D               	movf	(btemp+11)^0,w,c
  8595  014210  223B               	addwfc	(btemp+9)^0,f,c
  8596  014212  503B               	movf	(btemp+9)^0,w,c
  8597  014214  E106               	bnz	u9740
  8598  014216  0E1A               	movlw	26
  8599  014218  5C3A               	subwf	(btemp+8)^0,w,c
  8600  01421A  B0D8               	btfsc	status,0,c
  8601  01421C  D002               	goto	u9740
  8602  01421E  0E01               	movlw	1
  8603  014220  D001               	goto	u9750
  8604  014222                     u9740:
  8605  014222  0E00               	movlw	0
  8606  014224                     u9750:
  8607  014224  6E3C               	movwf	(btemp+10)^0,c
  8608  014226  6A3D               	clrf	(btemp+11)^0,c
  8609                           
  8610                           ;stkvar	_xtoa$4423 @ sp[(-20)+2]
  8611  014228  0EEE               	movlw	-18
  8612  01422A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8613  014230  0EEF               	movlw	-17
  8614  014232  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8615                           
  8616                           ;stkvar	_xtoa$4423 @ sp[(-20)+2]
  8617  014238  0EEE               	movlw	-18
  8618  01423A  006F FF8C  F032    	movff	plusw1,btemp
  8619  014240  0EEF               	movlw	-17
  8620  014242  50E3               	movf	plusw1,w,c
  8621  014244  1032               	iorwf	btemp^0,w,c
  8622  014246  B4D8               	btfsc	status,2,c
  8623  014248  D041               	goto	l9753
  8624  01424A  0E9F               	movlw	159
  8625  01424C  6E3C               	movwf	(btemp+10)^0,c
  8626  01424E  0EFF               	movlw	255
  8627  014250  6E3D               	movwf	(btemp+11)^0,c
  8628                           
  8629                           ;stkvar	_c @ sp[(-20)+12]
  8630  014252  0EF8               	movlw	-8
  8631  014254  006F FF8C  F03A    	movff	plusw1,btemp+8
  8632  01425A  0EF9               	movlw	-7
  8633  01425C  006F FF8C  F03B    	movff	plusw1,btemp+9
  8634  014262  0E20               	movlw	32
  8635  014264  123A               	iorwf	(btemp+8)^0,f,c
  8636  014266  0E00               	movlw	0
  8637  014268  123B               	iorwf	(btemp+9)^0,f,c
  8638  01426A  503C               	movf	(btemp+10)^0,w,c
  8639  01426C  263A               	addwf	(btemp+8)^0,f,c
  8640  01426E  503D               	movf	(btemp+11)^0,w,c
  8641  014270  223B               	addwfc	(btemp+9)^0,f,c
  8642  014272  503B               	movf	(btemp+9)^0,w,c
  8643  014274  E106               	bnz	u9770
  8644  014276  0E1A               	movlw	26
  8645  014278  5C3A               	subwf	(btemp+8)^0,w,c
  8646  01427A  B0D8               	btfsc	status,0,c
  8647  01427C  D002               	goto	u9770
  8648  01427E  0E01               	movlw	1
  8649  014280  D001               	goto	u9780
  8650  014282                     u9770:
  8651  014282  0E00               	movlw	0
  8652  014284                     u9780:
  8653  014284  6E3C               	movwf	(btemp+10)^0,c
  8654  014286  6A3D               	clrf	(btemp+11)^0,c
  8655                           
  8656                           ;stkvar	_xtoa$4424 @ sp[(-20)+0]
  8657  014288  0EEC               	movlw	-20
  8658  01428A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8659  014290  0EED               	movlw	-19
  8660  014292  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8661                           
  8662                           ;stkvar	_xtoa$4424 @ sp[(-20)+0]
  8663  014298  0EEC               	movlw	-20
  8664  01429A  006F FF8C  F032    	movff	plusw1,btemp
  8665  0142A0  0EED               	movlw	-19
  8666  0142A2  50E3               	movf	plusw1,w,c
  8667  0142A4  1032               	iorwf	btemp^0,w,c
  8668  0142A6  B4D8               	btfsc	status,2,c
  8669  0142A8  D011               	goto	l9753
  8670                           
  8671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8672                           ;stkvar	_c @ sp[(-20)+12]
  8673  0142AA  0EF8               	movlw	-8
  8674  0142AC  006F FF8F FFE6     	movff	plusw1,postinc1
  8675  0142B2  006F FF8F FFE6     	movff	plusw1,postinc1
  8676  0142B8  EC9E  F0BA         	call	_toupper	;wreg free
  8677                           
  8678                           ;stkvar	_c @ sp[(-20)+12]
  8679  0142BC  0EF8               	movlw	-8
  8680  0142BE  0060  F0CB  FFE3   	movff	btemp,plusw1
  8681  0142C4  0EF9               	movlw	-7
  8682  0142C6  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  8683  0142CC                     l9753:
  8684                           
  8685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8686                           ;stkvar	_c @ sp[(-20)+12]
  8687                           ;stkvar	_i @ sp[(-20)+14]
  8688  0142CC  0EFA               	movlw	-6
  8689  0142CE  006F FF8C  F03C    	movff	plusw1,btemp+10
  8690  0142D4  0EFB               	movlw	-5
  8691  0142D6  006F FF8C  F03D    	movff	plusw1,btemp+11
  8692  0142DC  0E78               	movlw	low _dbuf
  8693  0142DE  243C               	addwf	(btemp+10)^0,w,c
  8694  0142E0  6ED9               	movwf	fsr2l,c
  8695  0142E2  0E01               	movlw	high _dbuf
  8696  0142E4  203D               	addwfc	(btemp+11)^0,w,c
  8697  0142E6  6EDA               	movwf	fsr2h,c
  8698  0142E8  0EF8               	movlw	-8
  8699  0142EA  006F FF8F FFDF     	movff	plusw1,indf2
  8700                           
  8701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8702                           ;stkvar	_p @ sp[(-20)+18]
  8703  0142F0  50E1               	movf	fsr1l,w,c
  8704  0142F2  0FFE               	addlw	-2
  8705  0142F4  6ED9               	movwf	fsr2l,c
  8706  0142F6  50E2               	movf	fsr1h,w,c
  8707  0142F8  6EDA               	movwf	fsr2h,c
  8708  0142FA  0EFF               	movlw	255
  8709  0142FC  22DA               	addwfc	fsr2h,f,c
  8710  0142FE  06DE               	decf	postinc2,f,c
  8711  014300  0E00               	movlw	0
  8712  014302  5ADD               	subwfb	postdec2,f,c
  8713                           
  8714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8715                           ;stkvar	_w @ sp[(-20)+16]
  8716  014304  50E1               	movf	fsr1l,w,c
  8717  014306  0FFC               	addlw	-4
  8718  014308  6ED9               	movwf	fsr2l,c
  8719  01430A  50E2               	movf	fsr1h,w,c
  8720  01430C  6EDA               	movwf	fsr2h,c
  8721  01430E  0EFF               	movlw	255
  8722  014310  22DA               	addwfc	fsr2h,f,c
  8723  014312  06DE               	decf	postinc2,f,c
  8724  014314  0E00               	movlw	0
  8725  014316  5ADD               	subwfb	postdec2,f,c
  8726                           
  8727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8728  014318  0E04               	movlw	4
  8729  01431A  6E3D               	movwf	(btemp+11)^0,c
  8730                           
  8731                           ;stkvar	_n @ sp[(-20)+4]
  8732  01431C  50E1               	movf	fsr1l,w,c
  8733  01431E  0FF0               	addlw	-16
  8734  014320  6ED9               	movwf	fsr2l,c
  8735  014322  50E2               	movf	fsr1h,w,c
  8736  014324  6EDA               	movwf	fsr2h,c
  8737  014326  0EFF               	movlw	255
  8738  014328  22DA               	addwfc	fsr2h,f,c
  8739  01432A  283D               	incf	(btemp+11)^0,w,c
  8740  01432C  52DE               	movf	postinc2,f,c
  8741  01432E  D00F               	goto	u9800
  8742  014330                     u9805:
  8743  014330  52DE               	movf	postinc2,f,c
  8744  014332  52DE               	movf	postinc2,f,c
  8745  014334  52DE               	movf	postinc2,f,c
  8746  014336  52DE               	movf	postinc2,f,c
  8747  014338  52DE               	movf	postinc2,f,c
  8748  01433A  52DE               	movf	postinc2,f,c
  8749  01433C  90D8               	bcf	status,0,c
  8750  01433E  32DD               	rrcf	postdec2,f,c
  8751  014340  32DD               	rrcf	postdec2,f,c
  8752  014342  32DD               	rrcf	postdec2,f,c
  8753  014344  32DD               	rrcf	postdec2,f,c
  8754  014346  32DD               	rrcf	postdec2,f,c
  8755  014348  32DD               	rrcf	postdec2,f,c
  8756  01434A  32DD               	rrcf	postdec2,f,c
  8757  01434C  32DE               	rrcf	postinc2,f,c
  8758  01434E                     u9800:
  8759  01434E  2EE8               	decfsz	wreg,f,c
  8760  014350  D7EF               	goto	u9805
  8761  014352                     l9761:
  8762                           
  8763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8764                           ;stkvar	_i @ sp[(-20)+14]
  8765  014352  0EFB               	movlw	-5
  8766  014354  BEE3               	btfsc	plusw1,7,c
  8767  014356  D03A               	goto	u9850
  8768  014358  0EFB               	movlw	-5
  8769  01435A  50E3               	movf	plusw1,w,c
  8770  01435C  E108               	bnz	u9810
  8771  01435E  0EFA               	movlw	-6
  8772  014360  006F FF8C  F032    	movff	plusw1,btemp
  8773  014366  0E02               	movlw	2
  8774  014368  5E32               	subwf	btemp^0,f,c
  8775  01436A  A0D8               	btfss	status,0,c
  8776  01436C  D02F               	goto	u9850
  8777  01436E                     u9810:
  8778                           
  8779                           ;stkvar	_n @ sp[(-20)+4]
  8780  01436E  0EF0               	movlw	-16
  8781  014370  50E3               	movf	plusw1,w,c
  8782  014372  E115               	bnz	u9821
  8783  014374  0EF1               	movlw	-15
  8784  014376  50E3               	movf	plusw1,w,c
  8785  014378  E112               	bnz	u9821
  8786  01437A  0EF2               	movlw	-14
  8787  01437C  50E3               	movf	plusw1,w,c
  8788  01437E  E10F               	bnz	u9821
  8789  014380  0EF3               	movlw	-13
  8790  014382  50E3               	movf	plusw1,w,c
  8791  014384  E10C               	bnz	u9821
  8792  014386  0EF4               	movlw	-12
  8793  014388  50E3               	movf	plusw1,w,c
  8794  01438A  E109               	bnz	u9821
  8795  01438C  0EF5               	movlw	-11
  8796  01438E  50E3               	movf	plusw1,w,c
  8797  014390  E106               	bnz	u9821
  8798  014392  0EF6               	movlw	-10
  8799  014394  50E3               	movf	plusw1,w,c
  8800  014396  E103               	bnz	u9821
  8801  014398  0EF7               	movlw	-9
  8802  01439A  50E3               	movf	plusw1,w,c
  8803  01439C  A4D8               	btfss	status,2,c
  8804  01439E                     u9821:
  8805  01439E  D6EB               	goto	l9729
  8806                           
  8807                           ;stkvar	_p @ sp[(-20)+18]
  8808  0143A0  0EFF               	movlw	-1
  8809  0143A2  BEE3               	btfsc	plusw1,7,c
  8810  0143A4  D007               	goto	u9830
  8811  0143A6  0EFF               	movlw	-1
  8812  0143A8  50E3               	movf	plusw1,w,c
  8813  0143AA  E103               	bnz	u9831
  8814  0143AC  0EFE               	movlw	-2
  8815  0143AE  04E3               	decf	plusw1,w,c
  8816  0143B0  B0D8               	btfsc	status,0,c
  8817  0143B2                     u9831:
  8818  0143B2  D6E1               	goto	l9729
  8819  0143B4                     u9830:
  8820                           
  8821                           ;stkvar	_w @ sp[(-20)+16]
  8822  0143B4  0EFD               	movlw	-3
  8823  0143B6  BEE3               	btfsc	plusw1,7,c
  8824  0143B8  D009               	goto	u9850
  8825  0143BA  0EFD               	movlw	-3
  8826  0143BC  50E3               	movf	plusw1,w,c
  8827  0143BE  E104               	bnz	u9840
  8828  0143C0  0EFC               	movlw	-4
  8829  0143C2  04E3               	decf	plusw1,w,c
  8830  0143C4  A0D8               	btfss	status,0,c
  8831  0143C6  D002               	goto	u9850
  8832  0143C8                     u9840:
  8833  0143C8  B21F               	btfsc	_flags^0,1,c
  8834  0143CA  D6D5               	goto	l9729
  8835  0143CC                     u9850:
  8836                           
  8837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8838  0143CC  A81F               	btfss	_flags^0,4,c
  8839  0143CE  D036               	goto	l9777
  8840                           
  8841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8842                           ;stkvar	_i @ sp[(-20)+14]
  8843  0143D0  50E1               	movf	fsr1l,w,c
  8844  0143D2  0FFA               	addlw	-6
  8845  0143D4  6ED9               	movwf	fsr2l,c
  8846  0143D6  50E2               	movf	fsr1h,w,c
  8847  0143D8  6EDA               	movwf	fsr2h,c
  8848  0143DA  0EFF               	movlw	255
  8849  0143DC  22DA               	addwfc	fsr2h,f,c
  8850  0143DE  06DE               	decf	postinc2,f,c
  8851  0143E0  0E00               	movlw	0
  8852  0143E2  5ADD               	subwfb	postdec2,f,c
  8853                           
  8854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  8855                           ;stkvar	_x @ sp[(-20)+-11]
  8856                           ;stkvar	_i @ sp[(-20)+14]
  8857  0143E4  0EFA               	movlw	-6
  8858  0143E6  006F FF8C  F03C    	movff	plusw1,btemp+10
  8859  0143EC  0EFB               	movlw	-5
  8860  0143EE  006F FF8C  F03D    	movff	plusw1,btemp+11
  8861  0143F4  0E78               	movlw	low _dbuf
  8862  0143F6  243C               	addwf	(btemp+10)^0,w,c
  8863  0143F8  6ED9               	movwf	fsr2l,c
  8864  0143FA  0E01               	movlw	high _dbuf
  8865  0143FC  203D               	addwfc	(btemp+11)^0,w,c
  8866  0143FE  6EDA               	movwf	fsr2h,c
  8867  014400  0EE1               	movlw	-31
  8868  014402  006F FF8F FFDF     	movff	plusw1,indf2
  8869                           
  8870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  8871                           ;stkvar	_i @ sp[(-20)+14]
  8872  014408  50E1               	movf	fsr1l,w,c
  8873  01440A  0FFA               	addlw	-6
  8874  01440C  6ED9               	movwf	fsr2l,c
  8875  01440E  50E2               	movf	fsr1h,w,c
  8876  014410  6EDA               	movwf	fsr2h,c
  8877  014412  0EFF               	movlw	255
  8878  014414  22DA               	addwfc	fsr2h,f,c
  8879  014416  06DE               	decf	postinc2,f,c
  8880  014418  0E00               	movlw	0
  8881  01441A  5ADD               	subwfb	postdec2,f,c
  8882                           
  8883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  8884                           ;stkvar	_i @ sp[(-20)+14]
  8885  01441C  0EFA               	movlw	-6
  8886  01441E  006F FF8C  F03C    	movff	plusw1,btemp+10
  8887  014424  0EFB               	movlw	-5
  8888  014426  006F FF8C  F03D    	movff	plusw1,btemp+11
  8889  01442C  0E78               	movlw	low _dbuf
  8890  01442E  243C               	addwf	(btemp+10)^0,w,c
  8891  014430  6ED9               	movwf	fsr2l,c
  8892  014432  0E01               	movlw	high _dbuf
  8893  014434  203D               	addwfc	(btemp+11)^0,w,c
  8894  014436  6EDA               	movwf	fsr2h,c
  8895  014438  0E30               	movlw	48
  8896  01443A  6EDF               	movwf	indf2,c
  8897  01443C                     l9777:
  8898                           
  8899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  8900                           ;stkvar	_w @ sp[(-20)+16]
  8901  01443C  0EFC               	movlw	-4
  8902  01443E  006F FF8F FFE6     	movff	plusw1,postinc1
  8903  014444  006F FF8F FFE6     	movff	plusw1,postinc1
  8904                           
  8905                           ;stkvar	_i @ sp[(-22)+14]
  8906  01444A  0E78               	movlw	low _dbuf
  8907  01444C  6E3C               	movwf	(btemp+10)^0,c
  8908  01444E  0E01               	movlw	high _dbuf
  8909  014450  6E3D               	movwf	(btemp+11)^0,c
  8910  014452  0EF8               	movlw	-8
  8911  014454  50E3               	movf	plusw1,w,c
  8912  014456  263C               	addwf	(btemp+10)^0,f,c
  8913  014458  0EF9               	movlw	-7
  8914  01445A  50E3               	movf	plusw1,w,c
  8915  01445C  223D               	addwfc	(btemp+11)^0,f,c
  8916  01445E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8917  014464  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8918                           
  8919                           ;stkvar	_fp @ sp[(-24)+-2]
  8920  01446A  0EE6               	movlw	-26
  8921  01446C  006F FF8F FFE6     	movff	plusw1,postinc1
  8922  014472  006F FF8F FFE6     	movff	plusw1,postinc1
  8923  014478  EC80  F0B4         	call	_pad	;wreg free
  8924                           
  8925                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  8926  01447C  0EE1               	movlw	225
  8927  01447E  26E1               	addwf	fsr1l,f,c
  8928  014480  0EFF               	movlw	255
  8929  014482  22E2               	addwfc	fsr1h,f,c
  8930  014484  0012               	return		;funcret
  8931  014486                     __end_of_xtoa:
  8932                           	opt callstack 0
  8933                           
  8934 ;; *************** function _toupper *****************
  8935 ;; Defined at:
  8936 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  c               2  [STACK] int 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  2  [STACK] int 
  8943 ;; Registers used:
  8944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/1
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8954 ;;Total ram usage:        0 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; Hardware stack levels required when called:    7
  8957 ;; This function calls:
  8958 ;;		_islower
  8959 ;; This function is called by:
  8960 ;;		_xtoa
  8961 ;; This function uses a reentrant model
  8962 ;;
  8963                           
  8964                           	psect	text38
  8965  01753C                     __ptext38:
  8966                           	opt callstack 0
  8967  01753C                     _toupper:
  8968                           	opt callstack 0
  8969                           
  8970                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8971  01753C  52E6               	movf	postinc1,f,c
  8972  01753E  52E6               	movf	postinc1,f,c
  8973                           
  8974                           ;stkvar	_c @ sp[(-2)+-2]
  8975                           
  8976                           ;incstack = 0
  8977  017540  0EFC               	movlw	-4
  8978  017542  50E3               	movf	plusw1,w,c
  8979  017544  0F9F               	addlw	159
  8980  017546  6E3C               	movwf	(btemp+10)^0,c
  8981  017548  0EFD               	movlw	-3
  8982  01754A  006F FF8C  F03D    	movff	plusw1,btemp+11
  8983  017550  0EFF               	movlw	255
  8984  017552  223D               	addwfc	(btemp+11)^0,f,c
  8985  017554  503D               	movf	(btemp+11)^0,w,c
  8986  017556  E106               	bnz	u5240
  8987  017558  0E1A               	movlw	26
  8988  01755A  5C3C               	subwf	(btemp+10)^0,w,c
  8989  01755C  B0D8               	btfsc	status,0,c
  8990  01755E  D002               	goto	u5240
  8991  017560  0E01               	movlw	1
  8992  017562  D001               	goto	u5250
  8993  017564                     u5240:
  8994  017564  0E00               	movlw	0
  8995  017566                     u5250:
  8996  017566  6E3C               	movwf	(btemp+10)^0,c
  8997  017568  6A3D               	clrf	(btemp+11)^0,c
  8998                           
  8999                           ;stkvar	_toupper$5084 @ sp[(-2)+0]
  9000  01756A  0EFE               	movlw	-2
  9001  01756C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9002  017572  0EFF               	movlw	-1
  9003  017574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9004                           
  9005                           ;stkvar	_toupper$5084 @ sp[(-2)+0]
  9006  01757A  0EFE               	movlw	-2
  9007  01757C  006F FF8C  F032    	movff	plusw1,btemp
  9008  017582  0EFF               	movlw	-1
  9009  017584  50E3               	movf	plusw1,w,c
  9010  017586  1032               	iorwf	btemp^0,w,c
  9011  017588  B4D8               	btfsc	status,2,c
  9012  01758A  D00D               	goto	l6483
  9013                           
  9014                           ;stkvar	_c @ sp[(-2)+-2]
  9015  01758C  0EFC               	movlw	-4
  9016  01758E  006F FF8C  F032    	movff	plusw1,btemp
  9017  017594  0EFD               	movlw	-3
  9018  017596  006F FF8C  F033    	movff	plusw1,btemp+1
  9019  01759C  0E5F               	movlw	95
  9020  01759E  1632               	andwf	btemp^0,f,c
  9021  0175A0  0E00               	movlw	0
  9022  0175A2  1633               	andwf	(btemp+1)^0,f,c
  9023  0175A4  D008               	goto	l2904
  9024  0175A6                     l6483:
  9025                           
  9026                           ;stkvar	_c @ sp[(-2)+-2]
  9027  0175A6  0EFC               	movlw	-4
  9028  0175A8  006F FF8C  F032    	movff	plusw1,btemp
  9029  0175AE  0EFD               	movlw	-3
  9030  0175B0  006F FF8C  F033    	movff	plusw1,btemp+1
  9031  0175B6                     l2904:
  9032                           
  9033                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9034  0175B6  52E5               	movf	postdec1,f,c
  9035  0175B8  52E5               	movf	postdec1,f,c
  9036  0175BA  52E5               	movf	postdec1,f,c
  9037  0175BC  52E5               	movf	postdec1,f,c
  9038  0175BE  0012               	return		;funcret
  9039  0175C0                     __end_of_toupper:
  9040                           	opt callstack 0
  9041                           
  9042 ;; *************** function _islower *****************
  9043 ;; Defined at:
  9044 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;  c               2  [STACK] int 
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  2  [STACK] int 
  9051 ;; Registers used:
  9052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9062 ;;Total ram usage:        0 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; Hardware stack levels required when called:    6
  9065 ;; This function calls:
  9066 ;;		Nothing
  9067 ;; This function is called by:
  9068 ;;		_toupper
  9069 ;; This function uses a reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text39
  9073  01806E                     __ptext39:
  9074                           	opt callstack 0
  9075  01806E                     _islower:
  9076                           	opt callstack 16
  9077                           
  9078                           ;stkvar	_c @ sp[(0)+-2]
  9079                           
  9080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9081                           ;incstack = 0
  9082  01806E  0EFE               	movlw	-2
  9083  018070  50E3               	movf	plusw1,w,c
  9084  018072  0F9F               	addlw	159
  9085  018074  6E3C               	movwf	(btemp+10)^0,c
  9086  018076  0EFF               	movlw	-1
  9087  018078  006F FF8C  F03D    	movff	plusw1,btemp+11
  9088  01807E  0EFF               	movlw	255
  9089  018080  223D               	addwfc	(btemp+11)^0,f,c
  9090  018082  503D               	movf	(btemp+11)^0,w,c
  9091  018084  E106               	bnz	u4930
  9092  018086  0E1A               	movlw	26
  9093  018088  5C3C               	subwf	(btemp+10)^0,w,c
  9094  01808A  B0D8               	btfsc	status,0,c
  9095  01808C  D002               	goto	u4930
  9096  01808E  0E01               	movlw	1
  9097  018090  D001               	goto	u4940
  9098  018092                     u4930:
  9099  018092  0E00               	movlw	0
  9100  018094                     u4940:
  9101  018094  6E32               	movwf	btemp^0,c
  9102  018096  6A33               	clrf	(btemp+1)^0,c
  9103                           
  9104                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9105  018098  52E5               	movf	postdec1,f,c
  9106  01809A  52E5               	movf	postdec1,f,c
  9107  01809C  0012               	return		;funcret
  9108  01809E                     __end_of_islower:
  9109                           	opt callstack 0
  9110                           
  9111 ;; *************** function _isalpha *****************
  9112 ;; Defined at:
  9113 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  c               2  [STACK] int 
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;		None
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  2  [STACK] int 
  9120 ;; Registers used:
  9121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9131 ;;Total ram usage:        0 bytes
  9132 ;; Hardware stack levels used:    1
  9133 ;; Hardware stack levels required when called:    6
  9134 ;; This function calls:
  9135 ;;		Nothing
  9136 ;; This function is called by:
  9137 ;;		_xtoa
  9138 ;; This function uses a reentrant model
  9139 ;;
  9140                           
  9141                           	psect	text40
  9142  017E22                     __ptext40:
  9143                           	opt callstack 0
  9144  017E22                     _isalpha:
  9145                           	opt callstack 17
  9146                           
  9147                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9148                           ;incstack = 0
  9149  017E22  0E9F               	movlw	159
  9150  017E24  6E3C               	movwf	(btemp+10)^0,c
  9151  017E26  0EFF               	movlw	255
  9152  017E28  6E3D               	movwf	(btemp+11)^0,c
  9153                           
  9154                           ;stkvar	_c @ sp[(0)+-2]
  9155  017E2A  0EFE               	movlw	-2
  9156  017E2C  006F FF8C  F03A    	movff	plusw1,btemp+8
  9157  017E32  0EFF               	movlw	-1
  9158  017E34  006F FF8C  F03B    	movff	plusw1,btemp+9
  9159  017E3A  0E20               	movlw	32
  9160  017E3C  123A               	iorwf	(btemp+8)^0,f,c
  9161  017E3E  0E00               	movlw	0
  9162  017E40  123B               	iorwf	(btemp+9)^0,f,c
  9163  017E42  503C               	movf	(btemp+10)^0,w,c
  9164  017E44  263A               	addwf	(btemp+8)^0,f,c
  9165  017E46  503D               	movf	(btemp+11)^0,w,c
  9166  017E48  223B               	addwfc	(btemp+9)^0,f,c
  9167  017E4A  503B               	movf	(btemp+9)^0,w,c
  9168  017E4C  E106               	bnz	u5220
  9169  017E4E  0E1A               	movlw	26
  9170  017E50  5C3A               	subwf	(btemp+8)^0,w,c
  9171  017E52  B0D8               	btfsc	status,0,c
  9172  017E54  D002               	goto	u5220
  9173  017E56  0E01               	movlw	1
  9174  017E58  D001               	goto	u5230
  9175  017E5A                     u5220:
  9176  017E5A  0E00               	movlw	0
  9177  017E5C                     u5230:
  9178  017E5C  6E32               	movwf	btemp^0,c
  9179  017E5E  6A33               	clrf	(btemp+1)^0,c
  9180                           
  9181                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9182  017E60  52E5               	movf	postdec1,f,c
  9183  017E62  52E5               	movf	postdec1,f,c
  9184  017E64  0012               	return		;funcret
  9185  017E66                     __end_of_isalpha:
  9186                           	opt callstack 0
  9187                           
  9188 ;; *************** function _strncmp *****************
  9189 ;; Defined at:
  9190 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;  _l              2  [STACK] PTR const unsigned char 
  9193 ;;		 -> ct(3), 
  9194 ;;  _r              2  [STACK] PTR const unsigned char 
  9195 ;;		 -> STR_47(3), 
  9196 ;;  n               2  [STACK] unsigned int 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;  r               2  [STACK] PTR const unsigned char 
  9199 ;;		 -> STR_47(3), 
  9200 ;;  l               2  [STACK] PTR const unsigned char 
  9201 ;;		 -> ct(3), 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  2  [STACK] int 
  9204 ;; Registers used:
  9205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/5
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9215 ;;Total ram usage:        0 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:    6
  9218 ;; This function calls:
  9219 ;;		Nothing
  9220 ;; This function is called by:
  9221 ;;		_vfpfcnvrt
  9222 ;; This function uses a reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text41
  9226  015B0E                     __ptext41:
  9227                           	opt callstack 0
  9228  015B0E                     _strncmp:
  9229                           	opt callstack 0
  9230                           
  9231                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9232  015B0E  52E6               	movf	postinc1,f,c
  9233  015B10  52E6               	movf	postinc1,f,c
  9234  015B12  52E6               	movf	postinc1,f,c
  9235  015B14  52E6               	movf	postinc1,f,c
  9236                           
  9237                           ;stkvar	__l @ sp[(-4)+-2]
  9238                           
  9239                           ;incstack = 0
  9240  015B16  0EFA               	movlw	-6
  9241  015B18  006F FF8C  F03C    	movff	plusw1,btemp+10
  9242  015B1E  0EFB               	movlw	-5
  9243  015B20  006F FF8C  F03D    	movff	plusw1,btemp+11
  9244                           
  9245                           ;stkvar	_l @ sp[(-4)+2]
  9246  015B26  0EFF               	movlw	-1
  9247  015B28  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9248  015B2E  0EFE               	movlw	-2
  9249  015B30  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9250                           
  9251                           ;stkvar	__r @ sp[(-4)+-4]
  9252  015B36  0EF8               	movlw	-8
  9253  015B38  006F FF8C  F03C    	movff	plusw1,btemp+10
  9254  015B3E  0EF9               	movlw	-7
  9255  015B40  006F FF8C  F03D    	movff	plusw1,btemp+11
  9256                           
  9257                           ;stkvar	_r @ sp[(-4)+0]
  9258  015B46  0EFD               	movlw	-3
  9259  015B48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9260  015B4E  0EFC               	movlw	-4
  9261  015B50  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9262                           
  9263                           ;stkvar	_n @ sp[(-4)+-6]
  9264  015B56  0EF6               	movlw	-10
  9265  015B58  006F FF8C  F032    	movff	plusw1,btemp
  9266  015B5E  0E01               	movlw	1
  9267  015B60  5E32               	subwf	btemp^0,f,c
  9268  015B62  0EF6               	movlw	-10
  9269  015B64  0060  F0CB  FFE3   	movff	btemp,plusw1
  9270  015B6A  0EF7               	movlw	-9
  9271  015B6C  006F FF8C  F032    	movff	plusw1,btemp
  9272  015B72  0E00               	movlw	0
  9273  015B74  5A32               	subwfb	btemp^0,f,c
  9274  015B76  0EF7               	movlw	-9
  9275  015B78  0060  F0CB  FFE3   	movff	btemp,plusw1
  9276  015B7E  0EF6               	movlw	-10
  9277  015B80  28E3               	incf	plusw1,w,c
  9278  015B82  E13F               	bnz	l7641
  9279  015B84  0EF7               	movlw	-9
  9280  015B86  28E3               	incf	plusw1,w,c
  9281  015B88  A4D8               	btfss	status,2,c
  9282  015B8A  D03B               	goto	l7641
  9283  015B8C  0E00               	movlw	0
  9284  015B8E  6E32               	movwf	btemp^0,c
  9285  015B90  0E00               	movlw	0
  9286  015B92  6E33               	movwf	(btemp+1)^0,c
  9287  015B94  D09B               	goto	l2876
  9288  015B96                     l7639:
  9289                           
  9290                           ;stkvar	_l @ sp[(-4)+2]
  9291  015B96  0EFE               	movlw	-2
  9292  015B98  50E3               	movf	plusw1,w,c
  9293  015B9A  0F01               	addlw	1
  9294  015B9C  6E32               	movwf	btemp^0,c
  9295  015B9E  0EFE               	movlw	-2
  9296  015BA0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9297  015BA6  6A32               	clrf	btemp^0,c
  9298  015BA8  0EFF               	movlw	-1
  9299  015BAA  50E3               	movf	plusw1,w,c
  9300  015BAC  2032               	addwfc	btemp^0,w,c
  9301  015BAE  6E32               	movwf	btemp^0,c
  9302  015BB0  0EFF               	movlw	-1
  9303  015BB2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9304                           
  9305                           ;stkvar	_r @ sp[(-4)+0]
  9306  015BB8  0EFC               	movlw	-4
  9307  015BBA  50E3               	movf	plusw1,w,c
  9308  015BBC  0F01               	addlw	1
  9309  015BBE  6E32               	movwf	btemp^0,c
  9310  015BC0  0EFC               	movlw	-4
  9311  015BC2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9312  015BC8  6A32               	clrf	btemp^0,c
  9313  015BCA  0EFD               	movlw	-3
  9314  015BCC  50E3               	movf	plusw1,w,c
  9315  015BCE  2032               	addwfc	btemp^0,w,c
  9316  015BD0  6E32               	movwf	btemp^0,c
  9317  015BD2  0EFD               	movlw	-3
  9318  015BD4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9319                           
  9320                           ;stkvar	_n @ sp[(-4)+-6]
  9321  015BDA  0EF6               	movlw	-10
  9322  015BDC  006F FF8C  F032    	movff	plusw1,btemp
  9323  015BE2  0E01               	movlw	1
  9324  015BE4  5E32               	subwf	btemp^0,f,c
  9325  015BE6  0EF6               	movlw	-10
  9326  015BE8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9327  015BEE  0EF7               	movlw	-9
  9328  015BF0  006F FF8C  F032    	movff	plusw1,btemp
  9329  015BF6  0E00               	movlw	0
  9330  015BF8  5A32               	subwfb	btemp^0,f,c
  9331  015BFA  0EF7               	movlw	-9
  9332  015BFC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9333  015C02                     l7641:
  9334                           
  9335                           ;stkvar	_l @ sp[(-4)+2]
  9336  015C02  0EFE               	movlw	-2
  9337  015C04  006F FF8F FFD9     	movff	plusw1,fsr2l
  9338  015C0A  0EFF               	movlw	-1
  9339  015C0C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9340  015C12  50DF               	movf	indf2,w,c
  9341  015C14  B4D8               	btfsc	status,2,c
  9342  015C16  D03B               	goto	u7420
  9343                           
  9344                           ;stkvar	_r @ sp[(-4)+0]
  9345  015C18  50E1               	movf	fsr1l,w,c
  9346  015C1A  0FFC               	addlw	-4
  9347  015C1C  6ED9               	movwf	fsr2l,c
  9348  015C1E  50E2               	movf	fsr1h,w,c
  9349  015C20  6EDA               	movwf	fsr2h,c
  9350  015C22  0EFF               	movlw	255
  9351  015C24  22DA               	addwfc	fsr2h,f,c
  9352  015C26  006F FF7B FFF6     	movff	postinc2,tblptrl
  9353  015C2C  006F FF77 FFF7     	movff	postdec2,tblptrh
  9354  015C32                     	if	0	;tblptru may be non-zero
  9355  015C32                     	endif
  9356  015C32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9357  015C32  0E00               	movlw	low (__mediumconst shr (0+16))
  9358  015C34  6EF8               	movwf	tblptru,c
  9359  015C36                     	endif
  9360  015C36  0008               	tblrd		*
  9361  015C38  50F5               	movf	tablat,w,c
  9362  015C3A  0900               	iorlw	0
  9363  015C3C  B4D8               	btfsc	status,2,c
  9364  015C3E  D027               	goto	u7420
  9365                           
  9366                           ;stkvar	_n @ sp[(-4)+-6]
  9367  015C40  0EF6               	movlw	-10
  9368  015C42  006F FF8C  F032    	movff	plusw1,btemp
  9369  015C48  0EF7               	movlw	-9
  9370  015C4A  50E3               	movf	plusw1,w,c
  9371  015C4C  1032               	iorwf	btemp^0,w,c
  9372  015C4E  B4D8               	btfsc	status,2,c
  9373  015C50  D01E               	goto	u7420
  9374                           
  9375                           ;stkvar	_l @ sp[(-4)+2]
  9376  015C52  0EFE               	movlw	-2
  9377  015C54  006F FF8F FFD9     	movff	plusw1,fsr2l
  9378  015C5A  0EFF               	movlw	-1
  9379  015C5C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9380  015C62  50DF               	movf	indf2,w,c
  9381  015C64  6E3D               	movwf	(btemp+11)^0,c
  9382                           
  9383                           ;stkvar	_r @ sp[(-4)+0]
  9384  015C66  50E1               	movf	fsr1l,w,c
  9385  015C68  0FFC               	addlw	-4
  9386  015C6A  6ED9               	movwf	fsr2l,c
  9387  015C6C  50E2               	movf	fsr1h,w,c
  9388  015C6E  6EDA               	movwf	fsr2h,c
  9389  015C70  0EFF               	movlw	255
  9390  015C72  22DA               	addwfc	fsr2h,f,c
  9391  015C74  006F FF7B FFF6     	movff	postinc2,tblptrl
  9392  015C7A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9393  015C80                     	if	0	;tblptru may be non-zero
  9394  015C80                     	endif
  9395  015C80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9396  015C80  0E00               	movlw	low (__mediumconst shr (0+16))
  9397  015C82  6EF8               	movwf	tblptru,c
  9398  015C84                     	endif
  9399  015C84  0008               	tblrd		*
  9400  015C86  50F5               	movf	tablat,w,c
  9401  015C88  183D               	xorwf	(btemp+11)^0,w,c
  9402  015C8A  B4D8               	btfsc	status,2,c
  9403  015C8C  D784               	goto	l7639
  9404  015C8E                     u7420:
  9405                           
  9406                           ;stkvar	_l @ sp[(-4)+2]
  9407  015C8E  0EFE               	movlw	-2
  9408  015C90  006F FF8F FFD9     	movff	plusw1,fsr2l
  9409  015C96  0EFF               	movlw	-1
  9410  015C98  006F FF8F FFDA     	movff	plusw1,fsr2h
  9411  015C9E  50DF               	movf	indf2,w,c
  9412  015CA0  6E32               	movwf	btemp^0,c
  9413  015CA2  6A33               	clrf	(btemp+1)^0,c
  9414                           
  9415                           ;stkvar	_r @ sp[(-4)+0]
  9416  015CA4  50E1               	movf	fsr1l,w,c
  9417  015CA6  0FFC               	addlw	-4
  9418  015CA8  6ED9               	movwf	fsr2l,c
  9419  015CAA  50E2               	movf	fsr1h,w,c
  9420  015CAC  6EDA               	movwf	fsr2h,c
  9421  015CAE  0EFF               	movlw	255
  9422  015CB0  22DA               	addwfc	fsr2h,f,c
  9423  015CB2  006F FF7B FFF6     	movff	postinc2,tblptrl
  9424  015CB8  006F FF77 FFF7     	movff	postdec2,tblptrh
  9425  015CBE                     	if	0	;tblptru may be non-zero
  9426  015CBE                     	endif
  9427  015CBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9428  015CBE  0E00               	movlw	low (__mediumconst shr (0+16))
  9429  015CC0  6EF8               	movwf	tblptru,c
  9430  015CC2                     	endif
  9431  015CC2  0008               	tblrd		*
  9432  015CC4  50F5               	movf	tablat,w,c
  9433  015CC6  5E32               	subwf	btemp^0,f,c
  9434  015CC8  0E00               	movlw	0
  9435  015CCA  5A33               	subwfb	(btemp+1)^0,f,c
  9436  015CCC                     l2876:
  9437                           
  9438                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9439  015CCC  0EF6               	movlw	246
  9440  015CCE  26E1               	addwf	fsr1l,f,c
  9441  015CD0  0EFF               	movlw	255
  9442  015CD2  22E2               	addwfc	fsr1h,f,c
  9443  015CD4  0012               	return		;funcret
  9444  015CD6                     __end_of_strncmp:
  9445                           	opt callstack 0
  9446                           
  9447 ;; *************** function _stoa *****************
  9448 ;; Defined at:
  9449 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9452 ;;		 -> f(6), NULL(0), 
  9453 ;;  s               2  [STACK] PTR unsigned char 
  9454 ;;		 -> ?_printf(2), ?_sprintf(2), STR_19(9), STR_18(12), 
  9455 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  9456 ;;		 -> STR_3(5), V(187), 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  nuls            7  [STACK] unsigned char [7]
  9459 ;;  l               2  [STACK] int 
  9460 ;;  p               2  [STACK] int 
  9461 ;;  cp              2  [STACK] PTR unsigned char 
  9462 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_19(9), 
  9463 ;;		 -> STR_18(12), D.lcd(216), D(218), T(144), 
  9464 ;;		 -> STR_7(5), STR_3(5), V(187), 
  9465 ;;  w               2  [STACK] int 
  9466 ;;  i               2  [STACK] int 
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  2  [STACK] int 
  9469 ;; Registers used:
  9470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/5
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9480 ;;Total ram usage:        0 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; Hardware stack levels required when called:    9
  9483 ;; This function calls:
  9484 ;;		_fputc
  9485 ;;		_strlen
  9486 ;; This function is called by:
  9487 ;;		_vfpfcnvrt
  9488 ;; This function uses a reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text42
  9492  014ADE                     __ptext42:
  9493                           	opt callstack 0
  9494  014ADE                     _stoa:
  9495                           	opt callstack 0
  9496                           
  9497                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9498  014ADE  0E11               	movlw	17
  9499  014AE0  26E1               	addwf	fsr1l,f,c
  9500  014AE2  0E00               	movlw	0
  9501  014AE4  22E2               	addwfc	fsr1h,f,c
  9502                           
  9503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9504                           
  9505                           ;incstack = 0
  9506  014AE6  EE20  F0EF         	lfsr	2,stoa@F1166
  9507                           
  9508                           ;stkvar	_nuls @ sp[(-17)+0]
  9509  014AEA  0E07               	movlw	7
  9510  014AEC  6E32               	movwf	btemp^0,c
  9511  014AEE  0EEF               	movlw	-17
  9512  014AF0                     us959999:
  9513  014AF0  006F FF7B FFE3     	movff	postinc2,plusw1
  9514  014AF6  28E8               	incf	wreg,w,c
  9515  014AF8  2E32               	decfsz	btemp^0,f,c
  9516  014AFA  D7FA               	bra	us959999
  9517                           
  9518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9519                           ;stkvar	_s @ sp[(-17)+-4]
  9520  014AFC  0EEB               	movlw	-21
  9521  014AFE  006F FF8C  F03C    	movff	plusw1,btemp+10
  9522  014B04  0EEC               	movlw	-20
  9523  014B06  006F FF8C  F03D    	movff	plusw1,btemp+11
  9524                           
  9525                           ;stkvar	_cp @ sp[(-17)+11]
  9526  014B0C  0EFB               	movlw	-5
  9527  014B0E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9528  014B14  0EFA               	movlw	-6
  9529  014B16  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9530                           
  9531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9532                           ;stkvar	_cp @ sp[(-17)+11]
  9533  014B1C  0EFA               	movlw	-6
  9534  014B1E  006F FF8C  F032    	movff	plusw1,btemp
  9535  014B24  0EFB               	movlw	-5
  9536  014B26  50E3               	movf	plusw1,w,c
  9537  014B28  1032               	iorwf	btemp^0,w,c
  9538  014B2A  A4D8               	btfss	status,2,c
  9539  014B2C  D00E               	goto	l9665
  9540                           
  9541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9542                           ;stkvar	_nuls @ sp[(-17)+0]
  9543  014B2E  0EEF               	movlw	239
  9544  014B30  24E1               	addwf	fsr1l,w,c
  9545  014B32  6E3C               	movwf	(btemp+10)^0,c
  9546  014B34  0EFF               	movlw	255
  9547  014B36  20E2               	addwfc	fsr1h,w,c
  9548  014B38  6E3D               	movwf	(btemp+11)^0,c
  9549                           
  9550                           ;stkvar	_cp @ sp[(-17)+11]
  9551  014B3A  0EFB               	movlw	-5
  9552  014B3C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9553  014B42  0EFA               	movlw	-6
  9554  014B44  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9555  014B4A                     l9665:
  9556                           
  9557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9558                           ;stkvar	_cp @ sp[(-17)+11]
  9559  014B4A  0EFA               	movlw	-6
  9560  014B4C  006F FF8F FFE6     	movff	plusw1,postinc1
  9561  014B52  006F FF8F FFE6     	movff	plusw1,postinc1
  9562  014B58  EC2B  F0B9         	call	_strlen	;wreg free
  9563                           
  9564                           ;stkvar	_l @ sp[(-17)+7]
  9565  014B5C  0EF6               	movlw	-10
  9566  014B5E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9567  014B64  0EF7               	movlw	-9
  9568  014B66  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9569                           
  9570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9571                           ;stkvar	_p @ sp[(-17)+9]
  9572  014B6C  0EF8               	movlw	-8
  9573  014B6E  0060  F077  FFE3   	movff	_prec,plusw1
  9574  014B74  0EF9               	movlw	-7
  9575  014B76  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9576                           
  9577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9578                           ;stkvar	_p @ sp[(-17)+9]
  9579  014B7C  0EF9               	movlw	-7
  9580  014B7E  BEE3               	btfsc	plusw1,7,c
  9581  014B80  D023               	goto	l1950
  9582                           
  9583                           ;stkvar	_l @ sp[(-17)+7]
  9584                           ;stkvar	_p @ sp[(-17)+9]
  9585  014B82  50E1               	movf	fsr1l,w,c
  9586  014B84  0FF8               	addlw	-8
  9587  014B86  6ED9               	movwf	fsr2l,c
  9588  014B88  50E2               	movf	fsr1h,w,c
  9589  014B8A  6EDA               	movwf	fsr2h,c
  9590  014B8C  0EFF               	movlw	255
  9591  014B8E  22DA               	addwfc	fsr2h,f,c
  9592  014B90  0EF6               	movlw	-10
  9593  014B92  50E3               	movf	plusw1,w,c
  9594  014B94  5CDE               	subwf	postinc2,w,c
  9595  014B96  50DE               	movf	postinc2,w,c
  9596  014B98  0A80               	xorlw	128
  9597  014B9A  6E32               	movwf	btemp^0,c
  9598  014B9C  0EF7               	movlw	-9
  9599  014B9E  50E3               	movf	plusw1,w,c
  9600  014BA0  0A80               	xorlw	128
  9601  014BA2  5832               	subwfb	btemp^0,w,c
  9602  014BA4  B0D8               	btfsc	status,0,c
  9603  014BA6  D010               	goto	l1950
  9604                           
  9605                           ;stkvar	_p @ sp[(-17)+9]
  9606                           ;stkvar	_l @ sp[(-17)+7]
  9607  014BA8  0EF8               	movlw	-8
  9608  014BAA  006F FF8C  F032    	movff	plusw1,btemp
  9609  014BB0  0EF6               	movlw	-10
  9610  014BB2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9611  014BB8  0EF9               	movlw	-7
  9612  014BBA  006F FF8C  F032    	movff	plusw1,btemp
  9613  014BC0  0EF7               	movlw	-9
  9614  014BC2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9615  014BC8                     l1950:
  9616                           
  9617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9618                           ;stkvar	_l @ sp[(-17)+7]
  9619                           ;stkvar	_p @ sp[(-17)+9]
  9620  014BC8  0EF6               	movlw	-10
  9621  014BCA  006F FF8C  F032    	movff	plusw1,btemp
  9622  014BD0  0EF8               	movlw	-8
  9623  014BD2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9624  014BD8  0EF7               	movlw	-9
  9625  014BDA  006F FF8C  F032    	movff	plusw1,btemp
  9626  014BE0  0EF9               	movlw	-7
  9627  014BE2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9628                           
  9629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9630                           ;stkvar	_w @ sp[(-17)+13]
  9631  014BE8  0EFC               	movlw	-4
  9632  014BEA  0060  F06F  FFE3   	movff	_width,plusw1
  9633  014BF0  0EFD               	movlw	-3
  9634  014BF2  0060  F073  FFE3   	movff	_width+1,plusw1
  9635                           
  9636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9637  014BF8  A01F               	btfss	_flags^0,0,c
  9638  014BFA  D01F               	goto	l9685
  9639  014BFC  D031               	goto	u9640
  9640  014BFE                     l9681:
  9641                           
  9642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9643                           ;stkvar	_fp @ sp[(-17)+-2]
  9644  014BFE  0EED               	movlw	-19
  9645  014C00  006F FF8F FFE6     	movff	plusw1,postinc1
  9646  014C06  006F FF8F FFE6     	movff	plusw1,postinc1
  9647  014C0C  0E20               	movlw	32
  9648  014C0E  6EE6               	movwf	postinc1,c
  9649  014C10  0E00               	movlw	0
  9650  014C12  6EE6               	movwf	postinc1,c
  9651  014C14  EC62  F0B3         	call	_fputc	;wreg free
  9652                           
  9653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9654                           ;stkvar	_l @ sp[(-17)+7]
  9655  014C18  0EF6               	movlw	-10
  9656  014C1A  50E3               	movf	plusw1,w,c
  9657  014C1C  0F01               	addlw	1
  9658  014C1E  6E32               	movwf	btemp^0,c
  9659  014C20  0EF6               	movlw	-10
  9660  014C22  0060  F0CB  FFE3   	movff	btemp,plusw1
  9661  014C28  6A32               	clrf	btemp^0,c
  9662  014C2A  0EF7               	movlw	-9
  9663  014C2C  50E3               	movf	plusw1,w,c
  9664  014C2E  2032               	addwfc	btemp^0,w,c
  9665  014C30  6E32               	movwf	btemp^0,c
  9666  014C32  0EF7               	movlw	-9
  9667  014C34  0060  F0CB  FFE3   	movff	btemp,plusw1
  9668  014C3A                     l9685:
  9669                           
  9670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9671                           ;stkvar	_w @ sp[(-17)+13]
  9672                           ;stkvar	_l @ sp[(-17)+7]
  9673  014C3A  50E1               	movf	fsr1l,w,c
  9674  014C3C  0FF6               	addlw	-10
  9675  014C3E  6ED9               	movwf	fsr2l,c
  9676  014C40  50E2               	movf	fsr1h,w,c
  9677  014C42  6EDA               	movwf	fsr2h,c
  9678  014C44  0EFF               	movlw	255
  9679  014C46  22DA               	addwfc	fsr2h,f,c
  9680  014C48  0EFC               	movlw	-4
  9681  014C4A  50E3               	movf	plusw1,w,c
  9682  014C4C  5CDE               	subwf	postinc2,w,c
  9683  014C4E  50DE               	movf	postinc2,w,c
  9684  014C50  0A80               	xorlw	128
  9685  014C52  6E32               	movwf	btemp^0,c
  9686  014C54  0EFD               	movlw	-3
  9687  014C56  50E3               	movf	plusw1,w,c
  9688  014C58  0A80               	xorlw	128
  9689  014C5A  5832               	subwfb	btemp^0,w,c
  9690  014C5C  A0D8               	btfss	status,0,c
  9691  014C5E  D7CF               	goto	l9681
  9692  014C60                     u9640:
  9693                           
  9694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9695                           ;stkvar	_i @ sp[(-17)+15]
  9696  014C60  0EFE               	movlw	-2
  9697  014C62  6AE3               	clrf	plusw1,c
  9698  014C64  0EFF               	movlw	-1
  9699  014C66  6AE3               	clrf	plusw1,c
  9700                           
  9701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9702  014C68  D045               	goto	l9695
  9703  014C6A                     l9689:
  9704                           
  9705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9706                           ;stkvar	_fp @ sp[(-17)+-2]
  9707  014C6A  0EED               	movlw	-19
  9708  014C6C  006F FF8F FFE6     	movff	plusw1,postinc1
  9709  014C72  006F FF8F FFE6     	movff	plusw1,postinc1
  9710                           
  9711                           ;stkvar	_cp @ sp[(-19)+11]
  9712  014C78  0EF8               	movlw	-8
  9713  014C7A  006F FF8F FFF6     	movff	plusw1,tblptrl
  9714  014C80  0EF9               	movlw	-7
  9715  014C82  006F FF8F FFF7     	movff	plusw1,tblptrh
  9716  014C88  0E00               	movlw	low (__mediumconst shr (0+16))
  9717  014C8A  6EF8               	movwf	tblptru,c
  9718  014C8C  0E1F               	movlw	(high __ramtop+-1)
  9719  014C8E  64F7               	cpfsgt	tblptrh,c
  9720  014C90  D003               	bra	u9657
  9721  014C92  0008               	tblrd		*
  9722  014C94  50F5               	movf	tablat,w,c
  9723  014C96  D007               	bra	u9650
  9724  014C98                     u9657:
  9725  014C98  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9726  014C9E  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9727  014CA4  50EF               	movf	indf0,w,c
  9728  014CA6                     u9650:
  9729  014CA6  6EE6               	movwf	postinc1,c
  9730  014CA8  0E00               	movlw	0
  9731  014CAA  6EE6               	movwf	postinc1,c
  9732  014CAC  EC62  F0B3         	call	_fputc	;wreg free
  9733                           
  9734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9735                           ;stkvar	_cp @ sp[(-17)+11]
  9736  014CB0  0EFA               	movlw	-6
  9737  014CB2  50E3               	movf	plusw1,w,c
  9738  014CB4  0F01               	addlw	1
  9739  014CB6  6E32               	movwf	btemp^0,c
  9740  014CB8  0EFA               	movlw	-6
  9741  014CBA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9742  014CC0  6A32               	clrf	btemp^0,c
  9743  014CC2  0EFB               	movlw	-5
  9744  014CC4  50E3               	movf	plusw1,w,c
  9745  014CC6  2032               	addwfc	btemp^0,w,c
  9746  014CC8  6E32               	movwf	btemp^0,c
  9747  014CCA  0EFB               	movlw	-5
  9748  014CCC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9749                           
  9750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9751                           ;stkvar	_i @ sp[(-17)+15]
  9752  014CD2  0EFE               	movlw	-2
  9753  014CD4  50E3               	movf	plusw1,w,c
  9754  014CD6  0F01               	addlw	1
  9755  014CD8  6E32               	movwf	btemp^0,c
  9756  014CDA  0EFE               	movlw	-2
  9757  014CDC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9758  014CE2  6A32               	clrf	btemp^0,c
  9759  014CE4  0EFF               	movlw	-1
  9760  014CE6  50E3               	movf	plusw1,w,c
  9761  014CE8  2032               	addwfc	btemp^0,w,c
  9762  014CEA  6E32               	movwf	btemp^0,c
  9763  014CEC  0EFF               	movlw	-1
  9764  014CEE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9765  014CF4                     l9695:
  9766                           
  9767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9768                           ;stkvar	_p @ sp[(-17)+9]
  9769                           ;stkvar	_i @ sp[(-17)+15]
  9770  014CF4  50E1               	movf	fsr1l,w,c
  9771  014CF6  0FFE               	addlw	-2
  9772  014CF8  6ED9               	movwf	fsr2l,c
  9773  014CFA  50E2               	movf	fsr1h,w,c
  9774  014CFC  6EDA               	movwf	fsr2h,c
  9775  014CFE  0EFF               	movlw	255
  9776  014D00  22DA               	addwfc	fsr2h,f,c
  9777  014D02  0EF8               	movlw	-8
  9778  014D04  50E3               	movf	plusw1,w,c
  9779  014D06  5CDE               	subwf	postinc2,w,c
  9780  014D08  50DE               	movf	postinc2,w,c
  9781  014D0A  0A80               	xorlw	128
  9782  014D0C  6E32               	movwf	btemp^0,c
  9783  014D0E  0EF9               	movlw	-7
  9784  014D10  50E3               	movf	plusw1,w,c
  9785  014D12  0A80               	xorlw	128
  9786  014D14  5832               	subwfb	btemp^0,w,c
  9787  014D16  A0D8               	btfss	status,0,c
  9788  014D18  D7A8               	goto	l9689
  9789                           
  9790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9791  014D1A  B01F               	btfsc	_flags^0,0,c
  9792  014D1C  D01F               	goto	l9703
  9793  014D1E  D031               	goto	u9680
  9794  014D20                     l9699:
  9795                           
  9796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9797                           ;stkvar	_fp @ sp[(-17)+-2]
  9798  014D20  0EED               	movlw	-19
  9799  014D22  006F FF8F FFE6     	movff	plusw1,postinc1
  9800  014D28  006F FF8F FFE6     	movff	plusw1,postinc1
  9801  014D2E  0E20               	movlw	32
  9802  014D30  6EE6               	movwf	postinc1,c
  9803  014D32  0E00               	movlw	0
  9804  014D34  6EE6               	movwf	postinc1,c
  9805  014D36  EC62  F0B3         	call	_fputc	;wreg free
  9806                           
  9807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9808                           ;stkvar	_l @ sp[(-17)+7]
  9809  014D3A  0EF6               	movlw	-10
  9810  014D3C  50E3               	movf	plusw1,w,c
  9811  014D3E  0F01               	addlw	1
  9812  014D40  6E32               	movwf	btemp^0,c
  9813  014D42  0EF6               	movlw	-10
  9814  014D44  0060  F0CB  FFE3   	movff	btemp,plusw1
  9815  014D4A  6A32               	clrf	btemp^0,c
  9816  014D4C  0EF7               	movlw	-9
  9817  014D4E  50E3               	movf	plusw1,w,c
  9818  014D50  2032               	addwfc	btemp^0,w,c
  9819  014D52  6E32               	movwf	btemp^0,c
  9820  014D54  0EF7               	movlw	-9
  9821  014D56  0060  F0CB  FFE3   	movff	btemp,plusw1
  9822  014D5C                     l9703:
  9823                           
  9824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9825                           ;stkvar	_w @ sp[(-17)+13]
  9826                           ;stkvar	_l @ sp[(-17)+7]
  9827  014D5C  50E1               	movf	fsr1l,w,c
  9828  014D5E  0FF6               	addlw	-10
  9829  014D60  6ED9               	movwf	fsr2l,c
  9830  014D62  50E2               	movf	fsr1h,w,c
  9831  014D64  6EDA               	movwf	fsr2h,c
  9832  014D66  0EFF               	movlw	255
  9833  014D68  22DA               	addwfc	fsr2h,f,c
  9834  014D6A  0EFC               	movlw	-4
  9835  014D6C  50E3               	movf	plusw1,w,c
  9836  014D6E  5CDE               	subwf	postinc2,w,c
  9837  014D70  50DE               	movf	postinc2,w,c
  9838  014D72  0A80               	xorlw	128
  9839  014D74  6E32               	movwf	btemp^0,c
  9840  014D76  0EFD               	movlw	-3
  9841  014D78  50E3               	movf	plusw1,w,c
  9842  014D7A  0A80               	xorlw	128
  9843  014D7C  5832               	subwfb	btemp^0,w,c
  9844  014D7E  A0D8               	btfss	status,0,c
  9845  014D80  D7CF               	goto	l9699
  9846  014D82                     u9680:
  9847                           
  9848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  9849                           ;stkvar	_l @ sp[(-17)+7]
  9850  014D82  0EF6               	movlw	-10
  9851  014D84  006F FF8C  F032    	movff	plusw1,btemp
  9852  014D8A  0EF7               	movlw	-9
  9853  014D8C  006F FF8C  F033    	movff	plusw1,btemp+1
  9854                           
  9855                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9856  014D92  0EEB               	movlw	235
  9857  014D94  26E1               	addwf	fsr1l,f,c
  9858  014D96  0EFF               	movlw	255
  9859  014D98  22E2               	addwfc	fsr1h,f,c
  9860  014D9A  0012               	return		;funcret
  9861  014D9C                     __end_of_stoa:
  9862                           	opt callstack 0
  9863                           
  9864 ;; *************** function _efgtoa *****************
  9865 ;; Defined at:
  9866 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9869 ;;		 -> f(6), NULL(0), 
  9870 ;;  f               4  [STACK] PTR struct _IO_FILE
  9871 ;;  c               1  [STACK] unsigned char 
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;  u               4  [STACK] unsigned char 
  9874 ;;  g               4  [STACK] unsigned char 
  9875 ;;  l               4  [STACK] unsigned char 
  9876 ;;  h               4  [STACK] unsigned char 
  9877 ;;  ou              4  [STACK] unsigned char 
  9878 ;;  n               2  [STACK] int 
  9879 ;;  e               2  [STACK] int 
  9880 ;;  i               2  [STACK] int 
  9881 ;;  w               2  [STACK] int 
  9882 ;;  p               2  [STACK] int 
  9883 ;;  sign            2  [STACK] int 
  9884 ;;  d               2  [STACK] int 
  9885 ;;  ne              2  [STACK] int 
  9886 ;;  m               2  [STACK] int 
  9887 ;;  pp              2  [STACK] int 
  9888 ;;  t               2  [STACK] int 
  9889 ;;  mode            1  [STACK] unsigned char 
  9890 ;;  nmode           1  [STACK] unsigned char 
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  2  [STACK] int 
  9893 ;; Registers used:
  9894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/5
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9904 ;;Total ram usage:        0 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:   11
  9907 ;; This function calls:
  9908 ;;		___awdiv
  9909 ;;		___awmod
  9910 ;;		___fladd
  9911 ;;		___fldiv
  9912 ;;		___fleq
  9913 ;;		___flge
  9914 ;;		___flmul
  9915 ;;		___flneg
  9916 ;;		___flsub
  9917 ;;		___fltol
  9918 ;;		___fpclassifyf
  9919 ;;		_floorf
  9920 ;;		_isupper
  9921 ;;		_pad
  9922 ;;		_strcpy
  9923 ;;		_tolower
  9924 ;; This function is called by:
  9925 ;;		_vfpfcnvrt
  9926 ;; This function uses a reentrant model
  9927 ;;
  9928                           
  9929                           	psect	text43
  9930  010000                     __ptext43:
  9931                           	opt callstack 0
  9932  010000                     _efgtoa:
  9933                           	opt callstack 0
  9934                           
  9935                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9936  010000  0E38               	movlw	56
  9937  010002  26E1               	addwf	fsr1l,f,c
  9938  010004  0E00               	movlw	0
  9939  010006  22E2               	addwfc	fsr1h,f,c
  9940                           
  9941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  9942                           ;stkvar	_sign @ sp[(-56)+42]
  9943                           
  9944                           ;incstack = 0
  9945  010008  0EF2               	movlw	-14
  9946  01000A  6AE3               	clrf	plusw1,c
  9947  01000C  0EF3               	movlw	-13
  9948  01000E  6AE3               	clrf	plusw1,c
  9949                           
  9950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  9951                           ;stkvar	_f @ sp[(-56)+-6]
  9952  010010  0EC2               	movlw	-62
  9953  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
  9954  010018  0EC3               	movlw	-61
  9955  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
  9956  010020  0EC4               	movlw	-60
  9957  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
  9958  010028  0EC5               	movlw	-59
  9959  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9960                           
  9961                           ;stkvar	_g @ sp[(-56)+16]
  9962  010030  0ED8               	movlw	-40
  9963  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  9964  010038  0ED9               	movlw	-39
  9965  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  9966  010040  0EDA               	movlw	-38
  9967  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9968  010048  0EDB               	movlw	-37
  9969  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9970                           
  9971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  9972                           ;stkvar	_g @ sp[(-56)+16]
  9973  010050  0EDB               	movlw	-37
  9974  010052  AEE3               	btfss	plusw1,7,c
  9975  010054  D02B               	goto	l9363
  9976                           
  9977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  9978  010056  0E01               	movlw	1
  9979  010058  6E3C               	movwf	(btemp+10)^0,c
  9980  01005A  0E00               	movlw	0
  9981  01005C  6E3D               	movwf	(btemp+11)^0,c
  9982                           
  9983                           ;stkvar	_sign @ sp[(-56)+42]
  9984  01005E  0EF2               	movlw	-14
  9985  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9986  010066  0EF3               	movlw	-13
  9987  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9988                           
  9989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  9990                           ;stkvar	_g @ sp[(-56)+16]
  9991  01006E  0ED8               	movlw	-40
  9992  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  9993  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  9994  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
  9995  010082  006F FF8F FFE6     	movff	plusw1,postinc1
  9996  010088  EC3E  F0BE         	call	___flneg	;wreg free
  9997                           
  9998                           ;stkvar	_g @ sp[(-56)+16]
  9999  01008C  0ED8               	movlw	-40
 10000  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10001  010094  0ED9               	movlw	-39
 10002  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10003  01009C  0EDA               	movlw	-38
 10004  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10005  0100A4  0EDB               	movlw	-37
 10006  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10007  0100AC                     l9363:
 10008                           
 10009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10010                           ;stkvar	_n @ sp[(-56)+32]
 10011  0100AC  0EE8               	movlw	-24
 10012  0100AE  6AE3               	clrf	plusw1,c
 10013  0100B0  0EE9               	movlw	-23
 10014  0100B2  6AE3               	clrf	plusw1,c
 10015                           
 10016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10017                           ;stkvar	_w @ sp[(-56)+38]
 10018  0100B4  0EEE               	movlw	-18
 10019  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10020  0100BC  0EEF               	movlw	-17
 10021  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10022                           
 10023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10024                           ;stkvar	_sign @ sp[(-56)+42]
 10025  0100C4  0EF2               	movlw	-14
 10026  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10027  0100CC  0EF3               	movlw	-13
 10028  0100CE  50E3               	movf	plusw1,w,c
 10029  0100D0  1032               	iorwf	btemp^0,w,c
 10030  0100D2  A4D8               	btfss	status,2,c
 10031  0100D4  D002               	goto	u9090
 10032  0100D6  A41F               	btfss	_flags^0,2,c
 10033  0100D8  D036               	goto	l9383
 10034  0100DA                     u9090:
 10035                           
 10036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10037                           ;stkvar	_sign @ sp[(-56)+42]
 10038  0100DA  0EF2               	movlw	-14
 10039  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10040  0100E2  0EF3               	movlw	-13
 10041  0100E4  50E3               	movf	plusw1,w,c
 10042  0100E6  1032               	iorwf	btemp^0,w,c
 10043  0100E8  A4D8               	btfss	status,2,c
 10044  0100EA  D002               	goto	l9375
 10045  0100EC  0E2B               	movlw	43
 10046  0100EE  D001               	goto	L7
 10047  0100F0                     l9375:
 10048  0100F0  0E2D               	movlw	45
 10049  0100F2                     L7:
 10050  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10051  0100F4  0E00               	movlw	0
 10052  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10053                           
 10054                           ;stkvar	_efgtoa$4392 @ sp[(-56)+10]
 10055  0100F8  0ED2               	movlw	-46
 10056  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10057  010100  0ED3               	movlw	-45
 10058  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10059                           
 10060                           ;stkvar	_efgtoa$4392 @ sp[(-56)+10]
 10061  010108  0ED2               	movlw	-46
 10062  01010A  006F FF8C  F178    	movff	plusw1,_dbuf
 10063                           
 10064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10065                           ;stkvar	_n @ sp[(-56)+32]
 10066  010110  0EE8               	movlw	-24
 10067  010112  50E3               	movf	plusw1,w,c
 10068  010114  0F01               	addlw	1
 10069  010116  6E32               	movwf	btemp^0,c
 10070  010118  0EE8               	movlw	-24
 10071  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10072  010120  6A32               	clrf	btemp^0,c
 10073  010122  0EE9               	movlw	-23
 10074  010124  50E3               	movf	plusw1,w,c
 10075  010126  2032               	addwfc	btemp^0,w,c
 10076  010128  6E32               	movwf	btemp^0,c
 10077  01012A  0EE9               	movlw	-23
 10078  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10079                           
 10080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10081                           ;stkvar	_w @ sp[(-56)+38]
 10082  010132  50E1               	movf	fsr1l,w,c
 10083  010134  0FEE               	addlw	-18
 10084  010136  6ED9               	movwf	fsr2l,c
 10085  010138  50E2               	movf	fsr1h,w,c
 10086  01013A  6EDA               	movwf	fsr2h,c
 10087  01013C  0EFF               	movlw	255
 10088  01013E  22DA               	addwfc	fsr2h,f,c
 10089  010140  06DE               	decf	postinc2,f,c
 10090  010142  0E00               	movlw	0
 10091  010144  5ADD               	subwfb	postdec2,f,c
 10092  010146                     l9383:
 10093                           
 10094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10095                           ;stkvar	_g @ sp[(-56)+16]
 10096  010146  0ED8               	movlw	-40
 10097  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10098  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10099  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10100  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10101  010160  EC4B  F0AF         	call	___fpclassifyf	;wreg free
 10102  010164  0432               	decf	btemp^0,w,c
 10103  010166  1033               	iorwf	(btemp+1)^0,w,c
 10104  010168  A4D8               	btfss	status,2,c
 10105  01016A  D076               	goto	l9401
 10106  01016C  0EBF               	movlw	191
 10107  01016E  6E3C               	movwf	(btemp+10)^0,c
 10108  010170  0EFF               	movlw	255
 10109  010172  6E3D               	movwf	(btemp+11)^0,c
 10110                           
 10111                           ;stkvar	_c @ sp[(-56)+-7]
 10112  010174  0EC1               	movlw	-63
 10113  010176  50E3               	movf	plusw1,w,c
 10114  010178  6E3A               	movwf	(btemp+8)^0,c
 10115  01017A  6A3B               	clrf	(btemp+9)^0,c
 10116  01017C  503C               	movf	(btemp+10)^0,w,c
 10117  01017E  263A               	addwf	(btemp+8)^0,f,c
 10118  010180  503D               	movf	(btemp+11)^0,w,c
 10119  010182  223B               	addwfc	(btemp+9)^0,f,c
 10120  010184  503B               	movf	(btemp+9)^0,w,c
 10121  010186  E106               	bnz	u9120
 10122  010188  0E1A               	movlw	26
 10123  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10124  01018C  B0D8               	btfsc	status,0,c
 10125  01018E  D002               	goto	u9120
 10126  010190  0E01               	movlw	1
 10127  010192  D001               	goto	u9130
 10128  010194                     u9120:
 10129  010194  0E00               	movlw	0
 10130  010196                     u9130:
 10131  010196  6E3C               	movwf	(btemp+10)^0,c
 10132  010198  6A3D               	clrf	(btemp+11)^0,c
 10133                           
 10134                           ;stkvar	_efgtoa$4393 @ sp[(-56)+8]
 10135  01019A  0ED0               	movlw	-48
 10136  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10137  0101A2  0ED1               	movlw	-47
 10138  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10139                           
 10140                           ;stkvar	_efgtoa$4393 @ sp[(-56)+8]
 10141  0101AA  0ED0               	movlw	-48
 10142  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10143  0101B2  0ED1               	movlw	-47
 10144  0101B4  50E3               	movf	plusw1,w,c
 10145  0101B6  1032               	iorwf	btemp^0,w,c
 10146  0101B8  B4D8               	btfsc	status,2,c
 10147  0101BA  D017               	goto	l9393
 10148                           
 10149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10150  0101BC  0EE6               	movlw	low STR_37
 10151  0101BE  6EE6               	movwf	postinc1,c
 10152  0101C0  0EFF               	movlw	high STR_37
 10153  0101C2  6EE6               	movwf	postinc1,c
 10154                           
 10155                           ;stkvar	_n @ sp[(-58)+32]
 10156  0101C4  0E78               	movlw	low _dbuf
 10157  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10158  0101C8  0E01               	movlw	high _dbuf
 10159  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10160  0101CC  0EE6               	movlw	-26
 10161  0101CE  50E3               	movf	plusw1,w,c
 10162  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10163  0101D2  0EE7               	movlw	-25
 10164  0101D4  50E3               	movf	plusw1,w,c
 10165  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10166  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10167  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10168  0101E4  EC05  F0B7         	call	_strcpy	;wreg free
 10169                           
 10170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10171  0101E8  D016               	goto	l9395
 10172  0101EA                     l9393:
 10173                           
 10174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10175  0101EA  0EEE               	movlw	low STR_38
 10176  0101EC  6EE6               	movwf	postinc1,c
 10177  0101EE  0EFF               	movlw	high STR_38
 10178  0101F0  6EE6               	movwf	postinc1,c
 10179                           
 10180                           ;stkvar	_n @ sp[(-58)+32]
 10181  0101F2  0E78               	movlw	low _dbuf
 10182  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10183  0101F6  0E01               	movlw	high _dbuf
 10184  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10185  0101FA  0EE6               	movlw	-26
 10186  0101FC  50E3               	movf	plusw1,w,c
 10187  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10188  010200  0EE7               	movlw	-25
 10189  010202  50E3               	movf	plusw1,w,c
 10190  010204  223D               	addwfc	(btemp+11)^0,f,c
 10191  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10192  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10193  010212  EC05  F0B7         	call	_strcpy	;wreg free
 10194  010216                     l9395:
 10195                           
 10196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10197                           ;stkvar	_w @ sp[(-56)+38]
 10198  010216  50E1               	movf	fsr1l,w,c
 10199  010218  0FEE               	addlw	-18
 10200  01021A  6ED9               	movwf	fsr2l,c
 10201  01021C  50E2               	movf	fsr1h,w,c
 10202  01021E  6EDA               	movwf	fsr2h,c
 10203  010220  0EFF               	movlw	255
 10204  010222  22DA               	addwfc	fsr2h,f,c
 10205  010224  0EFD               	movlw	253
 10206  010226  26DE               	addwf	postinc2,f,c
 10207  010228  0EFF               	movlw	255
 10208  01022A  22DD               	addwfc	postdec2,f,c
 10209  01022C                     l9397:
 10210                           
 10211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10212                           ;stkvar	_w @ sp[(-56)+38]
 10213  01022C  0EEE               	movlw	-18
 10214  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10215  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10216  01023A  0E78               	movlw	low _dbuf
 10217  01023C  6EE6               	movwf	postinc1,c
 10218  01023E  0E01               	movlw	high _dbuf
 10219  010240  6EE6               	movwf	postinc1,c
 10220                           
 10221                           ;stkvar	_fp @ sp[(-60)+-2]
 10222  010242  0EC2               	movlw	-62
 10223  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10224  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10225  010250  EC80  F0B4         	call	_pad	;wreg free
 10226  010254  EF1D  F089         	goto	l1868
 10227  010258                     l9401:
 10228                           
 10229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10230                           ;stkvar	_g @ sp[(-56)+16]
 10231  010258  0ED8               	movlw	-40
 10232  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10233  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10234  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10235  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10236  010272  EC4B  F0AF         	call	___fpclassifyf	;wreg free
 10237  010276  5032               	movf	btemp^0,w,c
 10238  010278  1033               	iorwf	(btemp+1)^0,w,c
 10239  01027A  A4D8               	btfss	status,2,c
 10240  01027C  D056               	goto	l9419
 10241  01027E  0EBF               	movlw	191
 10242  010280  6E3C               	movwf	(btemp+10)^0,c
 10243  010282  0EFF               	movlw	255
 10244  010284  6E3D               	movwf	(btemp+11)^0,c
 10245                           
 10246                           ;stkvar	_c @ sp[(-56)+-7]
 10247  010286  0EC1               	movlw	-63
 10248  010288  50E3               	movf	plusw1,w,c
 10249  01028A  6E3A               	movwf	(btemp+8)^0,c
 10250  01028C  6A3B               	clrf	(btemp+9)^0,c
 10251  01028E  503C               	movf	(btemp+10)^0,w,c
 10252  010290  263A               	addwf	(btemp+8)^0,f,c
 10253  010292  503D               	movf	(btemp+11)^0,w,c
 10254  010294  223B               	addwfc	(btemp+9)^0,f,c
 10255  010296  503B               	movf	(btemp+9)^0,w,c
 10256  010298  E106               	bnz	u9160
 10257  01029A  0E1A               	movlw	26
 10258  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10259  01029E  B0D8               	btfsc	status,0,c
 10260  0102A0  D002               	goto	u9160
 10261  0102A2  0E01               	movlw	1
 10262  0102A4  D001               	goto	u9170
 10263  0102A6                     u9160:
 10264  0102A6  0E00               	movlw	0
 10265  0102A8                     u9170:
 10266  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10267  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10268                           
 10269                           ;stkvar	_efgtoa$4397 @ sp[(-56)+6]
 10270  0102AC  0ECE               	movlw	-50
 10271  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10272  0102B4  0ECF               	movlw	-49
 10273  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10274                           
 10275                           ;stkvar	_efgtoa$4397 @ sp[(-56)+6]
 10276  0102BC  0ECE               	movlw	-50
 10277  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10278  0102C4  0ECF               	movlw	-49
 10279  0102C6  50E3               	movf	plusw1,w,c
 10280  0102C8  1032               	iorwf	btemp^0,w,c
 10281  0102CA  B4D8               	btfsc	status,2,c
 10282  0102CC  D017               	goto	l9411
 10283                           
 10284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10285  0102CE  0EEA               	movlw	low STR_41
 10286  0102D0  6EE6               	movwf	postinc1,c
 10287  0102D2  0EFF               	movlw	high STR_41
 10288  0102D4  6EE6               	movwf	postinc1,c
 10289                           
 10290                           ;stkvar	_n @ sp[(-58)+32]
 10291  0102D6  0E78               	movlw	low _dbuf
 10292  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10293  0102DA  0E01               	movlw	high _dbuf
 10294  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10295  0102DE  0EE6               	movlw	-26
 10296  0102E0  50E3               	movf	plusw1,w,c
 10297  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10298  0102E4  0EE7               	movlw	-25
 10299  0102E6  50E3               	movf	plusw1,w,c
 10300  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10301  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10302  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10303  0102F6  EC05  F0B7         	call	_strcpy	;wreg free
 10304                           
 10305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10306  0102FA  D78D               	goto	l9395
 10307  0102FC                     l9411:
 10308                           
 10309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10310  0102FC  0EF2               	movlw	low STR_42
 10311  0102FE  6EE6               	movwf	postinc1,c
 10312  010300  0EFF               	movlw	high STR_42
 10313  010302  6EE6               	movwf	postinc1,c
 10314                           
 10315                           ;stkvar	_n @ sp[(-58)+32]
 10316  010304  0E78               	movlw	low _dbuf
 10317  010306  6E3C               	movwf	(btemp+10)^0,c
 10318  010308  0E01               	movlw	high _dbuf
 10319  01030A  6E3D               	movwf	(btemp+11)^0,c
 10320  01030C  0EE6               	movlw	-26
 10321  01030E  50E3               	movf	plusw1,w,c
 10322  010310  263C               	addwf	(btemp+10)^0,f,c
 10323  010312  0EE7               	movlw	-25
 10324  010314  50E3               	movf	plusw1,w,c
 10325  010316  223D               	addwfc	(btemp+11)^0,f,c
 10326  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10327  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10328  010324  EC05  F0B7         	call	_strcpy	;wreg free
 10329  010328  D776               	goto	l9395
 10330  01032A                     l9419:
 10331                           
 10332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10333  01032A  0E00               	movlw	0
 10334  01032C  6E3A               	movwf	(btemp+8)^0,c
 10335  01032E  0E00               	movlw	0
 10336  010330  6E3B               	movwf	(btemp+9)^0,c
 10337  010332  0E80               	movlw	128
 10338  010334  6E3C               	movwf	(btemp+10)^0,c
 10339  010336  0E3F               	movlw	63
 10340  010338  6E3D               	movwf	(btemp+11)^0,c
 10341                           
 10342                           ;stkvar	_u @ sp[(-56)+12]
 10343  01033A  0ED4               	movlw	-44
 10344  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10345  010342  0ED5               	movlw	-43
 10346  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10347  01034A  0ED6               	movlw	-42
 10348  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10349  010352  0ED7               	movlw	-41
 10350  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10351                           
 10352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10353                           ;stkvar	_e @ sp[(-56)+34]
 10354  01035A  0EEA               	movlw	-22
 10355  01035C  6AE3               	clrf	plusw1,c
 10356  01035E  0EEB               	movlw	-21
 10357  010360  6AE3               	clrf	plusw1,c
 10358                           
 10359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10360  010362  0E00               	movlw	0
 10361  010364  6EE6               	movwf	postinc1,c
 10362  010366  0E00               	movlw	0
 10363  010368  6EE6               	movwf	postinc1,c
 10364  01036A  0E00               	movlw	0
 10365  01036C  6EE6               	movwf	postinc1,c
 10366  01036E  0E00               	movlw	0
 10367  010370  6EE6               	movwf	postinc1,c
 10368                           
 10369                           ;stkvar	_g @ sp[(-60)+16]
 10370  010372  0ED4               	movlw	-44
 10371  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10372  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10373  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10374  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10375  01038C  EC6F  F0B7         	call	___fleq	;wreg free
 10376  010390  A032               	btfss	btemp& (0+255),0,c
 10377  010392  D039               	goto	l9431
 10378  010394  D0BC               	goto	u9210
 10379  010396                     l9427:
 10380                           
 10381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10382  010396  0E00               	movlw	0
 10383  010398  6EE6               	movwf	postinc1,c
 10384  01039A  0E00               	movlw	0
 10385  01039C  6EE6               	movwf	postinc1,c
 10386  01039E  0E20               	movlw	32
 10387  0103A0  6EE6               	movwf	postinc1,c
 10388  0103A2  0E41               	movlw	65
 10389  0103A4  6EE6               	movwf	postinc1,c
 10390                           
 10391                           ;stkvar	_u @ sp[(-60)+12]
 10392  0103A6  0ED0               	movlw	-48
 10393  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10394  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10395  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10396  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10397  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10398                           
 10399                           ;stkvar	_u @ sp[(-56)+12]
 10400  0103C4  0ED4               	movlw	-44
 10401  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10402  0103CC  0ED5               	movlw	-43
 10403  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10404  0103D4  0ED6               	movlw	-42
 10405  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10406  0103DC  0ED7               	movlw	-41
 10407  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10408                           
 10409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10410                           ;stkvar	_e @ sp[(-56)+34]
 10411  0103E4  0EEA               	movlw	-22
 10412  0103E6  50E3               	movf	plusw1,w,c
 10413  0103E8  0F01               	addlw	1
 10414  0103EA  6E32               	movwf	btemp^0,c
 10415  0103EC  0EEA               	movlw	-22
 10416  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10417  0103F4  6A32               	clrf	btemp^0,c
 10418  0103F6  0EEB               	movlw	-21
 10419  0103F8  50E3               	movf	plusw1,w,c
 10420  0103FA  2032               	addwfc	btemp^0,w,c
 10421  0103FC  6E32               	movwf	btemp^0,c
 10422  0103FE  0EEB               	movlw	-21
 10423  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10424  010406                     l9431:
 10425                           
 10426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10427  010406  0E00               	movlw	0
 10428  010408  6EE6               	movwf	postinc1,c
 10429  01040A  0E00               	movlw	0
 10430  01040C  6EE6               	movwf	postinc1,c
 10431  01040E  0E20               	movlw	32
 10432  010410  6EE6               	movwf	postinc1,c
 10433  010412  0E41               	movlw	65
 10434  010414  6EE6               	movwf	postinc1,c
 10435                           
 10436                           ;stkvar	_u @ sp[(-60)+12]
 10437  010416  0ED0               	movlw	-48
 10438  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10439  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10440  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10441  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10442  010430  ECC1  F08E         	call	___flmul	;wreg free
 10443  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10444  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10445  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10446  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10447                           
 10448                           ;stkvar	_g @ sp[(-60)+16]
 10449  01044C  0ED4               	movlw	-44
 10450  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10451  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10452  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10453  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10454  010466  ECCF  F0B0         	call	___flge	;wreg free
 10455  01046A  A032               	btfss	btemp& (0+255),0,c
 10456  01046C  D032               	goto	l9437
 10457  01046E  D793               	goto	l9427
 10458  010470                     l9433:
 10459                           
 10460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10461  010470  0E00               	movlw	0
 10462  010472  6EE6               	movwf	postinc1,c
 10463  010474  0E00               	movlw	0
 10464  010476  6EE6               	movwf	postinc1,c
 10465  010478  0E20               	movlw	32
 10466  01047A  6EE6               	movwf	postinc1,c
 10467  01047C  0E41               	movlw	65
 10468  01047E  6EE6               	movwf	postinc1,c
 10469                           
 10470                           ;stkvar	_u @ sp[(-60)+12]
 10471  010480  0ED0               	movlw	-48
 10472  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10473  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10474  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10475  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10476  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10477                           
 10478                           ;stkvar	_u @ sp[(-56)+12]
 10479  01049E  0ED4               	movlw	-44
 10480  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10481  0104A6  0ED5               	movlw	-43
 10482  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10483  0104AE  0ED6               	movlw	-42
 10484  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10485  0104B6  0ED7               	movlw	-41
 10486  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10487                           
 10488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10489                           ;stkvar	_e @ sp[(-56)+34]
 10490  0104BE  50E1               	movf	fsr1l,w,c
 10491  0104C0  0FEA               	addlw	-22
 10492  0104C2  6ED9               	movwf	fsr2l,c
 10493  0104C4  50E2               	movf	fsr1h,w,c
 10494  0104C6  6EDA               	movwf	fsr2h,c
 10495  0104C8  0EFF               	movlw	255
 10496  0104CA  22DA               	addwfc	fsr2h,f,c
 10497  0104CC  06DE               	decf	postinc2,f,c
 10498  0104CE  0E00               	movlw	0
 10499  0104D0  5ADD               	subwfb	postdec2,f,c
 10500  0104D2                     l9437:
 10501                           
 10502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10503                           ;stkvar	_u @ sp[(-56)+12]
 10504  0104D2  0ED4               	movlw	-44
 10505  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10506  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10507  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10508  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10509                           
 10510                           ;stkvar	_g @ sp[(-60)+16]
 10511  0104EC  0ED4               	movlw	-44
 10512  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10513  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10514  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10515  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10516  010506  ECCF  F0B0         	call	___flge	;wreg free
 10517  01050A  A032               	btfss	btemp& (0+255),0,c
 10518  01050C  D7B1               	goto	l9433
 10519  01050E                     u9210:
 10520                           
 10521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10522                           ;stkvar	_c @ sp[(-56)+-7]
 10523  01050E  0EC1               	movlw	-63
 10524  010510  50E3               	movf	plusw1,w,c
 10525  010512  6EE6               	movwf	postinc1,c
 10526  010514  0E00               	movlw	0
 10527  010516  6EE6               	movwf	postinc1,c
 10528  010518  ECE0  F0BA         	call	_tolower	;wreg free
 10529                           
 10530                           ;stkvar	_mode @ sp[(-56)+54]
 10531  01051C  0EFE               	movlw	-2
 10532  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10533                           
 10534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10535                           ;stkvar	_mode @ sp[(-56)+54]
 10536                           ;stkvar	_nmode @ sp[(-56)+55]
 10537  010524  0EFE               	movlw	-2
 10538  010526  006F FF8C  F032    	movff	plusw1,btemp
 10539  01052C  0EFF               	movlw	-1
 10540  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10541                           
 10542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10543                           ;stkvar	_mode @ sp[(-56)+54]
 10544  010534  0EFE               	movlw	-2
 10545  010536  006F FF8C  F032    	movff	plusw1,btemp
 10546  01053C  0E67               	movlw	103
 10547  01053E  1832               	xorwf	btemp^0,w,c
 10548  010540  A4D8               	btfss	status,2,c
 10549  010542  D025               	goto	l9455
 10550                           
 10551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10552  010544  501D               	movf	_prec^0,w,c
 10553  010546  101E               	iorwf	(_prec+1)^0,w,c
 10554  010548  A4D8               	btfss	status,2,c
 10555  01054A  D004               	goto	l9449
 10556                           
 10557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10558  01054C  0E00               	movlw	0
 10559  01054E  6E1E               	movwf	(_prec+1)^0,c
 10560  010550  0E01               	movlw	1
 10561  010552  6E1D               	movwf	_prec^0,c
 10562  010554                     l9449:
 10563                           
 10564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10565  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10566  010556  D005               	goto	u9240
 10567  010558  501E               	movf	(_prec+1)^0,w,c
 10568  01055A  E110               	bnz	l9453
 10569  01055C  041D               	decf	_prec^0,w,c
 10570  01055E  B0D8               	btfsc	status,0,c
 10571  010560  D00D               	goto	l9453
 10572  010562                     u9240:
 10573  010562  0E06               	movlw	6
 10574  010564  6E3C               	movwf	(btemp+10)^0,c
 10575  010566  0E00               	movlw	0
 10576  010568  6E3D               	movwf	(btemp+11)^0,c
 10577                           
 10578                           ;stkvar	_p @ sp[(-56)+40]
 10579  01056A  0EF0               	movlw	-16
 10580  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10581  010572  0EF1               	movlw	-15
 10582  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10583  01057A  D00C               	goto	l9461
 10584  01057C                     l9453:
 10585                           
 10586                           ;stkvar	_p @ sp[(-56)+40]
 10587  01057C  0EF0               	movlw	-16
 10588  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 10589  010584  0EF1               	movlw	-15
 10590  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10591  01058C  D003               	goto	l9461
 10592  01058E                     l9455:
 10593                           
 10594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10595  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 10596  010590  D7F5               	goto	l9453
 10597  010592  D7E7               	goto	u9240
 10598  010594                     l9461:
 10599                           
 10600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10601                           ;stkvar	_mode @ sp[(-56)+54]
 10602  010594  0EFE               	movlw	-2
 10603  010596  006F FF8C  F032    	movff	plusw1,btemp
 10604  01059C  0E67               	movlw	103
 10605  01059E  1832               	xorwf	btemp^0,w,c
 10606  0105A0  A4D8               	btfss	status,2,c
 10607  0105A2  D02F               	goto	l9471
 10608                           
 10609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10610                           ;stkvar	_e @ sp[(-56)+34]
 10611  0105A4  0EEB               	movlw	-21
 10612  0105A6  AEE3               	btfss	plusw1,7,c
 10613  0105A8  D00E               	goto	u9270
 10614  0105AA  0EEA               	movlw	-22
 10615  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 10616  0105B2  0EFC               	movlw	252
 10617  0105B4  5E32               	subwf	btemp^0,f,c
 10618  0105B6  0EEB               	movlw	-21
 10619  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 10620  0105BE  0EFF               	movlw	255
 10621  0105C0  5A32               	subwfb	btemp^0,f,c
 10622  0105C2  A0D8               	btfss	status,0,c
 10623  0105C4  D018               	goto	l9469
 10624  0105C6                     u9270:
 10625                           
 10626                           ;stkvar	_e @ sp[(-56)+34]
 10627                           ;stkvar	_p @ sp[(-56)+40]
 10628  0105C6  0EF0               	movlw	-16
 10629  0105C8  50E3               	movf	plusw1,w,c
 10630  0105CA  0FFF               	addlw	255
 10631  0105CC  6E3C               	movwf	(btemp+10)^0,c
 10632  0105CE  0EF1               	movlw	-15
 10633  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10634  0105D6  0EFF               	movlw	255
 10635  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 10636  0105DA  0EEA               	movlw	-22
 10637  0105DC  50E3               	movf	plusw1,w,c
 10638  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 10639  0105E0  503D               	movf	(btemp+11)^0,w,c
 10640  0105E2  0A80               	xorlw	128
 10641  0105E4  6E32               	movwf	btemp^0,c
 10642  0105E6  0EEB               	movlw	-21
 10643  0105E8  50E3               	movf	plusw1,w,c
 10644  0105EA  0A80               	xorlw	128
 10645  0105EC  5832               	subwfb	btemp^0,w,c
 10646  0105EE  A0D8               	btfss	status,0,c
 10647  0105F0  D002               	goto	l9469
 10648                           
 10649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10650  0105F2  0E66               	movlw	102
 10651  0105F4  D001               	goto	L8
 10652  0105F6                     l9469:
 10653                           
 10654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10655  0105F6  0E65               	movlw	101
 10656  0105F8                     L8:
 10657  0105F8  6E3D               	movwf	(btemp+11)^0,c
 10658                           
 10659                           ;stkvar	_nmode @ sp[(-56)+55]
 10660  0105FA  0EFF               	movlw	-1
 10661  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10662  010602                     l9471:
 10663                           
 10664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10665                           ;stkvar	_p @ sp[(-56)+40]
 10666                           ;stkvar	_m @ sp[(-56)+48]
 10667  010602  0EF0               	movlw	-16
 10668  010604  006F FF8C  F032    	movff	plusw1,btemp
 10669  01060A  0EF8               	movlw	-8
 10670  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10671  010612  0EF1               	movlw	-15
 10672  010614  006F FF8C  F032    	movff	plusw1,btemp
 10673  01061A  0EF9               	movlw	-7
 10674  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10675                           
 10676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10677                           ;stkvar	_mode @ sp[(-56)+54]
 10678  010622  0EFE               	movlw	-2
 10679  010624  006F FF8C  F032    	movff	plusw1,btemp
 10680  01062A  0E67               	movlw	103
 10681  01062C  1832               	xorwf	btemp^0,w,c
 10682  01062E  A4D8               	btfss	status,2,c
 10683  010630  D00B               	goto	u9310
 10684                           
 10685                           ;stkvar	_nmode @ sp[(-56)+55]
 10686  010632  0EFF               	movlw	-1
 10687  010634  006F FF8C  F032    	movff	plusw1,btemp
 10688  01063A  0E66               	movlw	102
 10689  01063C  1832               	xorwf	btemp^0,w,c
 10690  01063E  A4D8               	btfss	status,2,c
 10691  010640  D014               	goto	l1897
 10692                           
 10693                           ;stkvar	_e @ sp[(-56)+34]
 10694  010642  0EEB               	movlw	-21
 10695  010644  AEE3               	btfss	plusw1,7,c
 10696  010646  D011               	goto	l1897
 10697  010648                     u9310:
 10698                           
 10699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10700                           ;stkvar	_m @ sp[(-56)+48]
 10701  010648  0EF8               	movlw	-8
 10702  01064A  50E3               	movf	plusw1,w,c
 10703  01064C  0F01               	addlw	1
 10704  01064E  6E32               	movwf	btemp^0,c
 10705  010650  0EF8               	movlw	-8
 10706  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 10707  010658  6A32               	clrf	btemp^0,c
 10708  01065A  0EF9               	movlw	-7
 10709  01065C  50E3               	movf	plusw1,w,c
 10710  01065E  2032               	addwfc	btemp^0,w,c
 10711  010660  6E32               	movwf	btemp^0,c
 10712  010662  0EF9               	movlw	-7
 10713  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 10714  01066A                     l1897:
 10715                           
 10716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10717                           ;stkvar	_nmode @ sp[(-56)+55]
 10718  01066A  0EFF               	movlw	-1
 10719  01066C  006F FF8C  F032    	movff	plusw1,btemp
 10720  010672  0E66               	movlw	102
 10721  010674  1832               	xorwf	btemp^0,w,c
 10722  010676  A4D8               	btfss	status,2,c
 10723  010678  D03B               	goto	l9491
 10724                           
 10725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10726                           ;stkvar	_e @ sp[(-56)+34]
 10727  01067A  0EEB               	movlw	-21
 10728  01067C  AEE3               	btfss	plusw1,7,c
 10729  01067E  D01C               	goto	l9487
 10730                           
 10731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10732  010680  0E00               	movlw	0
 10733  010682  6E3A               	movwf	(btemp+8)^0,c
 10734  010684  0E00               	movlw	0
 10735  010686  6E3B               	movwf	(btemp+9)^0,c
 10736  010688  0E80               	movlw	128
 10737  01068A  6E3C               	movwf	(btemp+10)^0,c
 10738  01068C  0E3F               	movlw	63
 10739  01068E  6E3D               	movwf	(btemp+11)^0,c
 10740                           
 10741                           ;stkvar	_u @ sp[(-56)+12]
 10742  010690  0ED4               	movlw	-44
 10743  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10744  010698  0ED5               	movlw	-43
 10745  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10746  0106A0  0ED6               	movlw	-42
 10747  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10748  0106A8  0ED7               	movlw	-41
 10749  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10750                           
 10751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10752                           ;stkvar	_e @ sp[(-56)+34]
 10753  0106B0  0EEA               	movlw	-22
 10754  0106B2  6AE3               	clrf	plusw1,c
 10755  0106B4  0EEB               	movlw	-21
 10756  0106B6  6AE3               	clrf	plusw1,c
 10757  0106B8                     l9487:
 10758                           
 10759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10760                           ;stkvar	_mode @ sp[(-56)+54]
 10761  0106B8  0EFE               	movlw	-2
 10762  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 10763  0106C0  0E67               	movlw	103
 10764  0106C2  1832               	xorwf	btemp^0,w,c
 10765  0106C4  B4D8               	btfsc	status,2,c
 10766  0106C6  D014               	goto	l9491
 10767                           
 10768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10769                           ;stkvar	_e @ sp[(-56)+34]
 10770                           ;stkvar	_m @ sp[(-56)+48]
 10771  0106C8  0EF8               	movlw	-8
 10772  0106CA  50E3               	movf	plusw1,w,c
 10773  0106CC  6E32               	movwf	btemp^0,c
 10774  0106CE  0EEA               	movlw	-22
 10775  0106D0  50E3               	movf	plusw1,w,c
 10776  0106D2  2632               	addwf	btemp^0,f,c
 10777  0106D4  0EF8               	movlw	-8
 10778  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10779  0106DC  0EF9               	movlw	-7
 10780  0106DE  50E3               	movf	plusw1,w,c
 10781  0106E0  6E32               	movwf	btemp^0,c
 10782  0106E2  0EEB               	movlw	-21
 10783  0106E4  50E3               	movf	plusw1,w,c
 10784  0106E6  2232               	addwfc	btemp^0,f,c
 10785  0106E8  0EF9               	movlw	-7
 10786  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10787  0106F0                     l9491:
 10788                           
 10789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10790                           ;stkvar	_i @ sp[(-56)+36]
 10791  0106F0  0EEC               	movlw	-20
 10792  0106F2  6AE3               	clrf	plusw1,c
 10793  0106F4  0EED               	movlw	-19
 10794  0106F6  6AE3               	clrf	plusw1,c
 10795                           
 10796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10797                           ;stkvar	_g @ sp[(-56)+16]
 10798  0106F8  0ED8               	movlw	-40
 10799  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 10800  010700  0ED9               	movlw	-39
 10801  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 10802  010708  0EDA               	movlw	-38
 10803  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10804  010710  0EDB               	movlw	-37
 10805  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 10806                           
 10807                           ;stkvar	_h @ sp[(-56)+24]
 10808  010718  0EE0               	movlw	-32
 10809  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10810  010720  0EE1               	movlw	-31
 10811  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10812  010728  0EE2               	movlw	-30
 10813  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10814  010730  0EE3               	movlw	-29
 10815  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10816                           
 10817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10818                           ;stkvar	_u @ sp[(-56)+12]
 10819  010738  0ED4               	movlw	-44
 10820  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 10821  010740  0ED5               	movlw	-43
 10822  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 10823  010748  0ED6               	movlw	-42
 10824  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10825  010750  0ED7               	movlw	-41
 10826  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 10827                           
 10828                           ;stkvar	_ou @ sp[(-56)+28]
 10829  010758  0EE4               	movlw	-28
 10830  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10831  010760  0EE5               	movlw	-27
 10832  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10833  010768  0EE6               	movlw	-26
 10834  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10835  010770  0EE7               	movlw	-25
 10836  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10837                           
 10838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10839  010778  D0D6               	goto	l9507
 10840  01077A                     l9497:
 10841                           
 10842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10843                           ;stkvar	_u @ sp[(-56)+12]
 10844  01077A  0ED4               	movlw	-44
 10845  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10846  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 10847  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 10848  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 10849                           
 10850                           ;stkvar	_h @ sp[(-60)+24]
 10851  010794  0EDC               	movlw	-36
 10852  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 10853  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 10854  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10855  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10856  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 10857  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 10858  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10859  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10860  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10861  0107CA  EC43  F0A2         	call	_floorf	;wreg free
 10862                           
 10863                           ;stkvar	_l @ sp[(-56)+20]
 10864  0107CE  0EDC               	movlw	-36
 10865  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10866  0107D6  0EDD               	movlw	-35
 10867  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10868  0107DE  0EDE               	movlw	-34
 10869  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10870  0107E6  0EDF               	movlw	-33
 10871  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10872                           
 10873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 10874                           ;stkvar	_l @ sp[(-56)+20]
 10875  0107EE  0EDC               	movlw	-36
 10876  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10877  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10878  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10879  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 10880  010808  EC16  F0B0         	call	___fltol	;wreg free
 10881  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 10882  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 10883                           
 10884                           ;stkvar	_d @ sp[(-56)+44]
 10885  010818  0EF4               	movlw	-12
 10886  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10887  010820  0EF5               	movlw	-11
 10888  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10889                           
 10890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 10891                           ;stkvar	_u @ sp[(-56)+12]
 10892  010828  0ED4               	movlw	-44
 10893  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 10894  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 10895  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 10896  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 10897                           
 10898                           ;stkvar	_l @ sp[(-60)+20]
 10899  010842  0ED8               	movlw	-40
 10900  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 10901  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 10902  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 10903  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 10904  01085C  ECC1  F08E         	call	___flmul	;wreg free
 10905  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 10906  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10907  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10908  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10909                           
 10910                           ;stkvar	_h @ sp[(-60)+24]
 10911  010878  0EDC               	movlw	-36
 10912  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 10913  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 10914  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 10915  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 10916  010892  EC85  F0BE         	call	___flsub	;wreg free
 10917                           
 10918                           ;stkvar	_h @ sp[(-56)+24]
 10919  010896  0EE0               	movlw	-32
 10920  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 10921  01089E  0EE1               	movlw	-31
 10922  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10923  0108A6  0EE2               	movlw	-30
 10924  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10925  0108AE  0EE3               	movlw	-29
 10926  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10927                           
 10928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 10929  0108B6  0E00               	movlw	0
 10930  0108B8  6EE6               	movwf	postinc1,c
 10931  0108BA  0E00               	movlw	0
 10932  0108BC  6EE6               	movwf	postinc1,c
 10933  0108BE  0E20               	movlw	32
 10934  0108C0  6EE6               	movwf	postinc1,c
 10935  0108C2  0E41               	movlw	65
 10936  0108C4  6EE6               	movwf	postinc1,c
 10937                           
 10938                           ;stkvar	_u @ sp[(-60)+12]
 10939  0108C6  0ED0               	movlw	-48
 10940  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10941  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10942  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10943  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10944  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 10945                           
 10946                           ;stkvar	_u @ sp[(-56)+12]
 10947  0108E4  0ED4               	movlw	-44
 10948  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10949  0108EC  0ED5               	movlw	-43
 10950  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10951  0108F4  0ED6               	movlw	-42
 10952  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10953  0108FC  0ED7               	movlw	-41
 10954  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10955                           
 10956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 10957                           ;stkvar	_i @ sp[(-56)+36]
 10958  010904  0EEC               	movlw	-20
 10959  010906  50E3               	movf	plusw1,w,c
 10960  010908  0F01               	addlw	1
 10961  01090A  6E32               	movwf	btemp^0,c
 10962  01090C  0EEC               	movlw	-20
 10963  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10964  010914  6A32               	clrf	btemp^0,c
 10965  010916  0EED               	movlw	-19
 10966  010918  50E3               	movf	plusw1,w,c
 10967  01091A  2032               	addwfc	btemp^0,w,c
 10968  01091C  6E32               	movwf	btemp^0,c
 10969  01091E  0EED               	movlw	-19
 10970  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 10971  010926                     l9507:
 10972                           
 10973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10974                           ;stkvar	_m @ sp[(-56)+48]
 10975                           ;stkvar	_i @ sp[(-56)+36]
 10976  010926  50E1               	movf	fsr1l,w,c
 10977  010928  0FEC               	addlw	-20
 10978  01092A  6ED9               	movwf	fsr2l,c
 10979  01092C  50E2               	movf	fsr1h,w,c
 10980  01092E  6EDA               	movwf	fsr2h,c
 10981  010930  0EFF               	movlw	255
 10982  010932  22DA               	addwfc	fsr2h,f,c
 10983  010934  0EF8               	movlw	-8
 10984  010936  50E3               	movf	plusw1,w,c
 10985  010938  5CDE               	subwf	postinc2,w,c
 10986  01093A  50DE               	movf	postinc2,w,c
 10987  01093C  0A80               	xorlw	128
 10988  01093E  6E32               	movwf	btemp^0,c
 10989  010940  0EF9               	movlw	-7
 10990  010942  50E3               	movf	plusw1,w,c
 10991  010944  0A80               	xorlw	128
 10992  010946  5832               	subwfb	btemp^0,w,c
 10993  010948  A0D8               	btfss	status,0,c
 10994  01094A  D717               	goto	l9497
 10995                           
 10996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 10997  01094C  0E00               	movlw	0
 10998  01094E  6EE6               	movwf	postinc1,c
 10999  010950  0E00               	movlw	0
 11000  010952  6EE6               	movwf	postinc1,c
 11001  010954  0EA0               	movlw	160
 11002  010956  6EE6               	movwf	postinc1,c
 11003  010958  0E40               	movlw	64
 11004  01095A  6EE6               	movwf	postinc1,c
 11005                           
 11006                           ;stkvar	_u @ sp[(-60)+12]
 11007  01095C  0ED0               	movlw	-48
 11008  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11009  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11010  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11011  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11012  010976  ECC1  F08E         	call	___flmul	;wreg free
 11013                           
 11014                           ;stkvar	_l @ sp[(-56)+20]
 11015  01097A  0EDC               	movlw	-36
 11016  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11017  010982  0EDD               	movlw	-35
 11018  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11019  01098A  0EDE               	movlw	-34
 11020  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11021  010992  0EDF               	movlw	-33
 11022  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11023                           
 11024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11025                           ;stkvar	_l @ sp[(-56)+20]
 11026  01099A  0EDC               	movlw	-36
 11027  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11028  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11029  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11030  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11031                           
 11032                           ;stkvar	_h @ sp[(-60)+24]
 11033  0109B4  0EDC               	movlw	-36
 11034  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11035  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11036  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11037  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11038  0109CE  ECCF  F0B0         	call	___flge	;wreg free
 11039  0109D2  A032               	btfss	btemp& (0+255),0,c
 11040  0109D4  D021               	goto	u9380
 11041                           
 11042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11043                           ;stkvar	_l @ sp[(-56)+20]
 11044                           
 11045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11046                           
 11047                           ;stkvar	_l @ sp[(-56)+20]
 11048                           
 11049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11050  0109D6  0EDC               	movlw	-36
 11051  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11052  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11053  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11054  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11055                           
 11056                           ;stkvar	_h @ sp[(-60)+24]
 11057  0109F0  0EDC               	movlw	-36
 11058  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11059  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11060  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11061  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11062  010A0A  EC6F  F0B7         	call	___fleq	;wreg free
 11063  010A0E  A032               	btfss	btemp& (0+255),0,c
 11064  010A10  D01B               	goto	l9521
 11065                           
 11066                           ;stkvar	_d @ sp[(-56)+44]
 11067  010A12  0EF4               	movlw	-12
 11068  010A14  B0E3               	btfsc	plusw1,0,c
 11069  010A16  D018               	goto	l9521
 11070  010A18                     u9380:
 11071                           
 11072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11073  010A18  0E00               	movlw	0
 11074  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11075  010A1C  0E00               	movlw	0
 11076  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11077  010A20  0E00               	movlw	0
 11078  010A22  6E3C               	movwf	(btemp+10)^0,c
 11079  010A24  0E00               	movlw	0
 11080  010A26  6E3D               	movwf	(btemp+11)^0,c
 11081                           
 11082                           ;stkvar	_l @ sp[(-56)+20]
 11083  010A28  0EDC               	movlw	-36
 11084  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11085  010A30  0EDD               	movlw	-35
 11086  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11087  010A38  0EDE               	movlw	-34
 11088  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11089  010A40  0EDF               	movlw	-33
 11090  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11091  010A48                     l9521:
 11092                           
 11093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11094                           ;stkvar	_l @ sp[(-56)+20]
 11095  010A48  0EDC               	movlw	-36
 11096  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11097  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11098  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11099  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11100                           
 11101                           ;stkvar	_g @ sp[(-60)+16]
 11102  010A62  0ED4               	movlw	-44
 11103  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11104  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11105  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11106  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11107  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11108                           
 11109                           ;stkvar	_h @ sp[(-56)+24]
 11110  010A80  0EE0               	movlw	-32
 11111  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11112  010A88  0EE1               	movlw	-31
 11113  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11114  010A90  0EE2               	movlw	-30
 11115  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11116  010A98  0EE3               	movlw	-29
 11117  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11118                           
 11119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11120                           ;stkvar	_ou @ sp[(-56)+28]
 11121  010AA0  0EE4               	movlw	-28
 11122  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11123  010AA8  0EE5               	movlw	-27
 11124  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11125  010AB0  0EE6               	movlw	-26
 11126  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11127  010AB8  0EE7               	movlw	-25
 11128  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11129                           
 11130                           ;stkvar	_u @ sp[(-56)+12]
 11131  010AC0  0ED4               	movlw	-44
 11132  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11133  010AC8  0ED5               	movlw	-43
 11134  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11135  010AD0  0ED6               	movlw	-42
 11136  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11137  010AD8  0ED7               	movlw	-41
 11138  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11139                           
 11140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11141                           ;stkvar	_nmode @ sp[(-56)+55]
 11142  010AE0  0EFF               	movlw	-1
 11143  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11144  010AE8  0E65               	movlw	101
 11145  010AEA  1832               	xorwf	btemp^0,w,c
 11146  010AEC  B4D8               	btfsc	status,2,c
 11147  010AEE  D011               	goto	l9529
 11148                           
 11149                           ;stkvar	_e @ sp[(-56)+34]
 11150                           ;stkvar	_ne @ sp[(-56)+46]
 11151  010AF0  0EEA               	movlw	-22
 11152  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11153  010AF8  0EF6               	movlw	-10
 11154  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11155  010B00  0EEB               	movlw	-21
 11156  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11157  010B08  0EF7               	movlw	-9
 11158  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11159  010B10  D004               	goto	l1912
 11160  010B12                     l9529:
 11161                           
 11162                           ;stkvar	_ne @ sp[(-56)+46]
 11163  010B12  0EF6               	movlw	-10
 11164  010B14  6AE3               	clrf	plusw1,c
 11165  010B16  0EF7               	movlw	-9
 11166  010B18  6AE3               	clrf	plusw1,c
 11167  010B1A                     l1912:
 11168                           
 11169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11170                           ;stkvar	_pp @ sp[(-56)+50]
 11171  010B1A  0EFA               	movlw	-6
 11172  010B1C  6AE3               	clrf	plusw1,c
 11173  010B1E  0EFB               	movlw	-5
 11174  010B20  6AE3               	clrf	plusw1,c
 11175                           
 11176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11177                           ;stkvar	_t @ sp[(-56)+52]
 11178  010B22  0EFC               	movlw	-4
 11179  010B24  6AE3               	clrf	plusw1,c
 11180  010B26  0EFD               	movlw	-3
 11181  010B28  6AE3               	clrf	plusw1,c
 11182                           
 11183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11184                           ;stkvar	_i @ sp[(-56)+36]
 11185  010B2A  0EEC               	movlw	-20
 11186  010B2C  6AE3               	clrf	plusw1,c
 11187  010B2E  0EED               	movlw	-19
 11188  010B30  6AE3               	clrf	plusw1,c
 11189                           
 11190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11191  010B32  D1B7               	goto	l9581
 11192  010B34                     l9531:
 11193                           
 11194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11195                           ;stkvar	_u @ sp[(-56)+12]
 11196  010B34  0ED4               	movlw	-44
 11197  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11198  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11199  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11200  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11201                           
 11202                           ;stkvar	_h @ sp[(-60)+24]
 11203  010B4E  0EDC               	movlw	-36
 11204  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11205  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11206  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11207  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11208  010B68  ECB4  F096         	call	___fldiv	;wreg free
 11209  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11210  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11211  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11212  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11213  010B84  EC43  F0A2         	call	_floorf	;wreg free
 11214                           
 11215                           ;stkvar	_l @ sp[(-56)+20]
 11216  010B88  0EDC               	movlw	-36
 11217  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11218  010B90  0EDD               	movlw	-35
 11219  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11220  010B98  0EDE               	movlw	-34
 11221  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11222  010BA0  0EDF               	movlw	-33
 11223  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11224                           
 11225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11226                           ;stkvar	_l @ sp[(-56)+20]
 11227  010BA8  0EDC               	movlw	-36
 11228  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11229  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11230  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11231  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11232  010BC2  EC16  F0B0         	call	___fltol	;wreg free
 11233  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11234  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11235                           
 11236                           ;stkvar	_d @ sp[(-56)+44]
 11237  010BD2  0EF4               	movlw	-12
 11238  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11239  010BDA  0EF5               	movlw	-11
 11240  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11241                           
 11242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11243  010BE2  B81F               	btfsc	_flags^0,4,c
 11244  010BE4  D026               	goto	l9545
 11245                           
 11246                           ;stkvar	_d @ sp[(-56)+44]
 11247  010BE6  0EF4               	movlw	-12
 11248  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11249  010BEE  0EF5               	movlw	-11
 11250  010BF0  50E3               	movf	plusw1,w,c
 11251  010BF2  1032               	iorwf	btemp^0,w,c
 11252  010BF4  A4D8               	btfss	status,2,c
 11253  010BF6  D01D               	goto	l9545
 11254                           
 11255                           ;stkvar	_mode @ sp[(-56)+54]
 11256  010BF8  0EFE               	movlw	-2
 11257  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11258  010C00  0E67               	movlw	103
 11259  010C02  1832               	xorwf	btemp^0,w,c
 11260  010C04  A4D8               	btfss	status,2,c
 11261  010C06  D015               	goto	l9545
 11262                           
 11263                           ;stkvar	_ne @ sp[(-56)+46]
 11264  010C08  0EF7               	movlw	-9
 11265  010C0A  AEE3               	btfss	plusw1,7,c
 11266  010C0C  D012               	goto	l9545
 11267                           
 11268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11269                           ;stkvar	_t @ sp[(-56)+52]
 11270  010C0E  0EFC               	movlw	-4
 11271  010C10  50E3               	movf	plusw1,w,c
 11272  010C12  0F01               	addlw	1
 11273  010C14  6E32               	movwf	btemp^0,c
 11274  010C16  0EFC               	movlw	-4
 11275  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11276  010C1E  6A32               	clrf	btemp^0,c
 11277  010C20  0EFD               	movlw	-3
 11278  010C22  50E3               	movf	plusw1,w,c
 11279  010C24  2032               	addwfc	btemp^0,w,c
 11280  010C26  6E32               	movwf	btemp^0,c
 11281  010C28  0EFD               	movlw	-3
 11282  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11283                           
 11284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11285  010C30  D0AF               	goto	l9573
 11286  010C32                     l9545:
 11287                           
 11288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11289                           ;stkvar	_pp @ sp[(-56)+50]
 11290  010C32  0EFA               	movlw	-6
 11291  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11292  010C3A  0EFB               	movlw	-5
 11293  010C3C  50E3               	movf	plusw1,w,c
 11294  010C3E  1032               	iorwf	btemp^0,w,c
 11295  010C40  A4D8               	btfss	status,2,c
 11296  010C42  D070               	goto	l9565
 11297                           
 11298                           ;stkvar	_ne @ sp[(-56)+46]
 11299  010C44  0EF7               	movlw	-9
 11300  010C46  AEE3               	btfss	plusw1,7,c
 11301  010C48  D06D               	goto	l9565
 11302                           
 11303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11304                           ;stkvar	_n @ sp[(-56)+32]
 11305  010C4A  0EE8               	movlw	-24
 11306  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11307  010C52  0EE9               	movlw	-23
 11308  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11309  010C5A  0E78               	movlw	low _dbuf
 11310  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11311  010C5E  6ED9               	movwf	fsr2l,c
 11312  010C60  0E01               	movlw	high _dbuf
 11313  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11314  010C64  6EDA               	movwf	fsr2h,c
 11315  010C66  0E2E               	movlw	46
 11316  010C68  6EDF               	movwf	indf2,c
 11317                           
 11318                           ;stkvar	_n @ sp[(-56)+32]
 11319  010C6A  0EE8               	movlw	-24
 11320  010C6C  50E3               	movf	plusw1,w,c
 11321  010C6E  0F01               	addlw	1
 11322  010C70  6E32               	movwf	btemp^0,c
 11323  010C72  0EE8               	movlw	-24
 11324  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11325  010C7A  6A32               	clrf	btemp^0,c
 11326  010C7C  0EE9               	movlw	-23
 11327  010C7E  50E3               	movf	plusw1,w,c
 11328  010C80  2032               	addwfc	btemp^0,w,c
 11329  010C82  6E32               	movwf	btemp^0,c
 11330  010C84  0EE9               	movlw	-23
 11331  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11332                           
 11333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11334                           ;stkvar	_w @ sp[(-56)+38]
 11335  010C8C  50E1               	movf	fsr1l,w,c
 11336  010C8E  0FEE               	addlw	-18
 11337  010C90  6ED9               	movwf	fsr2l,c
 11338  010C92  50E2               	movf	fsr1h,w,c
 11339  010C94  6EDA               	movwf	fsr2h,c
 11340  010C96  0EFF               	movlw	255
 11341  010C98  22DA               	addwfc	fsr2h,f,c
 11342  010C9A  06DE               	decf	postinc2,f,c
 11343  010C9C  0E00               	movlw	0
 11344  010C9E  5ADD               	subwfb	postdec2,f,c
 11345                           
 11346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11347  010CA0  0E01               	movlw	1
 11348  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11349  010CA4  0E00               	movlw	0
 11350  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11351                           
 11352                           ;stkvar	_pp @ sp[(-56)+50]
 11353  010CA8  0EFA               	movlw	-6
 11354  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11355  010CB0  0EFB               	movlw	-5
 11356  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11357  010CB8  D035               	goto	l9565
 11358  010CBA                     l9557:
 11359                           
 11360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11361                           ;stkvar	_n @ sp[(-56)+32]
 11362  010CBA  0EE8               	movlw	-24
 11363  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11364  010CC2  0EE9               	movlw	-23
 11365  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11366  010CCA  0E78               	movlw	low _dbuf
 11367  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11368  010CCE  6ED9               	movwf	fsr2l,c
 11369  010CD0  0E01               	movlw	high _dbuf
 11370  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11371  010CD4  6EDA               	movwf	fsr2h,c
 11372  010CD6  0E30               	movlw	48
 11373  010CD8  6EDF               	movwf	indf2,c
 11374                           
 11375                           ;stkvar	_n @ sp[(-56)+32]
 11376  010CDA  0EE8               	movlw	-24
 11377  010CDC  50E3               	movf	plusw1,w,c
 11378  010CDE  0F01               	addlw	1
 11379  010CE0  6E32               	movwf	btemp^0,c
 11380  010CE2  0EE8               	movlw	-24
 11381  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11382  010CEA  6A32               	clrf	btemp^0,c
 11383  010CEC  0EE9               	movlw	-23
 11384  010CEE  50E3               	movf	plusw1,w,c
 11385  010CF0  2032               	addwfc	btemp^0,w,c
 11386  010CF2  6E32               	movwf	btemp^0,c
 11387  010CF4  0EE9               	movlw	-23
 11388  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11389                           
 11390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11391                           ;stkvar	_w @ sp[(-56)+38]
 11392  010CFC  50E1               	movf	fsr1l,w,c
 11393  010CFE  0FEE               	addlw	-18
 11394  010D00  6ED9               	movwf	fsr2l,c
 11395  010D02  50E2               	movf	fsr1h,w,c
 11396  010D04  6EDA               	movwf	fsr2h,c
 11397  010D06  0EFF               	movlw	255
 11398  010D08  22DA               	addwfc	fsr2h,f,c
 11399  010D0A  06DE               	decf	postinc2,f,c
 11400  010D0C  0E00               	movlw	0
 11401  010D0E  5ADD               	subwfb	postdec2,f,c
 11402                           
 11403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11404                           ;stkvar	_t @ sp[(-56)+52]
 11405  010D10  50E1               	movf	fsr1l,w,c
 11406  010D12  0FFC               	addlw	-4
 11407  010D14  6ED9               	movwf	fsr2l,c
 11408  010D16  50E2               	movf	fsr1h,w,c
 11409  010D18  6EDA               	movwf	fsr2h,c
 11410  010D1A  0EFF               	movlw	255
 11411  010D1C  22DA               	addwfc	fsr2h,f,c
 11412  010D1E  06DE               	decf	postinc2,f,c
 11413  010D20  0E00               	movlw	0
 11414  010D22  5ADD               	subwfb	postdec2,f,c
 11415  010D24                     l9565:
 11416                           
 11417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11418                           ;stkvar	_t @ sp[(-56)+52]
 11419  010D24  0EFC               	movlw	-4
 11420  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11421  010D2C  0EFD               	movlw	-3
 11422  010D2E  50E3               	movf	plusw1,w,c
 11423  010D30  1032               	iorwf	btemp^0,w,c
 11424  010D32  A4D8               	btfss	status,2,c
 11425  010D34  D7C2               	goto	l9557
 11426                           
 11427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11428                           ;stkvar	_n @ sp[(-56)+32]
 11429  010D36  0EE8               	movlw	-24
 11430  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11431  010D3E  0EE9               	movlw	-23
 11432  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11433  010D46  0E78               	movlw	low _dbuf
 11434  010D48  243C               	addwf	(btemp+10)^0,w,c
 11435  010D4A  6ED9               	movwf	fsr2l,c
 11436  010D4C  0E01               	movlw	high _dbuf
 11437  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11438  010D50  6EDA               	movwf	fsr2h,c
 11439                           
 11440                           ;stkvar	_d @ sp[(-56)+44]
 11441  010D52  0EF4               	movlw	-12
 11442  010D54  50E3               	movf	plusw1,w,c
 11443  010D56  0F30               	addlw	48
 11444  010D58  6EDF               	movwf	indf2,c
 11445                           
 11446                           ;stkvar	_n @ sp[(-56)+32]
 11447  010D5A  0EE8               	movlw	-24
 11448  010D5C  50E3               	movf	plusw1,w,c
 11449  010D5E  0F01               	addlw	1
 11450  010D60  6E32               	movwf	btemp^0,c
 11451  010D62  0EE8               	movlw	-24
 11452  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11453  010D6A  6A32               	clrf	btemp^0,c
 11454  010D6C  0EE9               	movlw	-23
 11455  010D6E  50E3               	movf	plusw1,w,c
 11456  010D70  2032               	addwfc	btemp^0,w,c
 11457  010D72  6E32               	movwf	btemp^0,c
 11458  010D74  0EE9               	movlw	-23
 11459  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11460                           
 11461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11462                           ;stkvar	_w @ sp[(-56)+38]
 11463  010D7C  50E1               	movf	fsr1l,w,c
 11464  010D7E  0FEE               	addlw	-18
 11465  010D80  6ED9               	movwf	fsr2l,c
 11466  010D82  50E2               	movf	fsr1h,w,c
 11467  010D84  6EDA               	movwf	fsr2h,c
 11468  010D86  0EFF               	movlw	255
 11469  010D88  22DA               	addwfc	fsr2h,f,c
 11470  010D8A  06DE               	decf	postinc2,f,c
 11471  010D8C  0E00               	movlw	0
 11472  010D8E  5ADD               	subwfb	postdec2,f,c
 11473  010D90                     l9573:
 11474                           
 11475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11476                           ;stkvar	_u @ sp[(-56)+12]
 11477  010D90  0ED4               	movlw	-44
 11478  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11479  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11480  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11481  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11482                           
 11483                           ;stkvar	_l @ sp[(-60)+20]
 11484  010DAA  0ED8               	movlw	-40
 11485  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11486  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11487  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11488  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11489  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11490  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11491  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11492  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11493  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11494                           
 11495                           ;stkvar	_h @ sp[(-60)+24]
 11496  010DE0  0EDC               	movlw	-36
 11497  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11498  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11499  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11500  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11501  010DFA  EC85  F0BE         	call	___flsub	;wreg free
 11502                           
 11503                           ;stkvar	_h @ sp[(-56)+24]
 11504  010DFE  0EE0               	movlw	-32
 11505  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11506  010E06  0EE1               	movlw	-31
 11507  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11508  010E0E  0EE2               	movlw	-30
 11509  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11510  010E16  0EE3               	movlw	-29
 11511  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11512                           
 11513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11514  010E1E  0E00               	movlw	0
 11515  010E20  6EE6               	movwf	postinc1,c
 11516  010E22  0E00               	movlw	0
 11517  010E24  6EE6               	movwf	postinc1,c
 11518  010E26  0E20               	movlw	32
 11519  010E28  6EE6               	movwf	postinc1,c
 11520  010E2A  0E41               	movlw	65
 11521  010E2C  6EE6               	movwf	postinc1,c
 11522                           
 11523                           ;stkvar	_u @ sp[(-60)+12]
 11524  010E2E  0ED0               	movlw	-48
 11525  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11526  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11527  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11528  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11529  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11530                           
 11531                           ;stkvar	_u @ sp[(-56)+12]
 11532  010E4C  0ED4               	movlw	-44
 11533  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11534  010E54  0ED5               	movlw	-43
 11535  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11536  010E5C  0ED6               	movlw	-42
 11537  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11538  010E64  0ED7               	movlw	-41
 11539  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11540                           
 11541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11542                           ;stkvar	_ne @ sp[(-56)+46]
 11543  010E6C  50E1               	movf	fsr1l,w,c
 11544  010E6E  0FF6               	addlw	-10
 11545  010E70  6ED9               	movwf	fsr2l,c
 11546  010E72  50E2               	movf	fsr1h,w,c
 11547  010E74  6EDA               	movwf	fsr2h,c
 11548  010E76  0EFF               	movlw	255
 11549  010E78  22DA               	addwfc	fsr2h,f,c
 11550  010E7A  06DE               	decf	postinc2,f,c
 11551  010E7C  0E00               	movlw	0
 11552  010E7E  5ADD               	subwfb	postdec2,f,c
 11553                           
 11554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11555                           ;stkvar	_i @ sp[(-56)+36]
 11556  010E80  0EEC               	movlw	-20
 11557  010E82  50E3               	movf	plusw1,w,c
 11558  010E84  0F01               	addlw	1
 11559  010E86  6E32               	movwf	btemp^0,c
 11560  010E88  0EEC               	movlw	-20
 11561  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11562  010E90  6A32               	clrf	btemp^0,c
 11563  010E92  0EED               	movlw	-19
 11564  010E94  50E3               	movf	plusw1,w,c
 11565  010E96  2032               	addwfc	btemp^0,w,c
 11566  010E98  6E32               	movwf	btemp^0,c
 11567  010E9A  0EED               	movlw	-19
 11568  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11569  010EA2                     l9581:
 11570                           
 11571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11572                           ;stkvar	_m @ sp[(-56)+48]
 11573                           ;stkvar	_i @ sp[(-56)+36]
 11574  010EA2  50E1               	movf	fsr1l,w,c
 11575  010EA4  0FEC               	addlw	-20
 11576  010EA6  6ED9               	movwf	fsr2l,c
 11577  010EA8  50E2               	movf	fsr1h,w,c
 11578  010EAA  6EDA               	movwf	fsr2h,c
 11579  010EAC  0EFF               	movlw	255
 11580  010EAE  22DA               	addwfc	fsr2h,f,c
 11581  010EB0  0EF8               	movlw	-8
 11582  010EB2  50E3               	movf	plusw1,w,c
 11583  010EB4  5CDE               	subwf	postinc2,w,c
 11584  010EB6  50DE               	movf	postinc2,w,c
 11585  010EB8  0A80               	xorlw	128
 11586  010EBA  6E32               	movwf	btemp^0,c
 11587  010EBC  0EF9               	movlw	-7
 11588  010EBE  50E3               	movf	plusw1,w,c
 11589  010EC0  0A80               	xorlw	128
 11590  010EC2  5832               	subwfb	btemp^0,w,c
 11591  010EC4  B0D8               	btfsc	status,0,c
 11592  010EC6  D00E               	goto	u9480
 11593                           
 11594                           ;stkvar	_n @ sp[(-56)+32]
 11595  010EC8  0EE9               	movlw	-23
 11596  010ECA  BEE3               	btfsc	plusw1,7,c
 11597  010ECC  D633               	goto	l9531
 11598  010ECE  0EE9               	movlw	-23
 11599  010ED0  50E3               	movf	plusw1,w,c
 11600  010ED2  E108               	bnz	u9480
 11601  010ED4  0EE8               	movlw	-24
 11602  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 11603  010EDC  0E4B               	movlw	75
 11604  010EDE  5E32               	subwf	btemp^0,f,c
 11605  010EE0  A0D8               	btfss	status,0,c
 11606  010EE2  D628               	goto	l9531
 11607  010EE4                     u9480:
 11608                           
 11609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11610                           ;stkvar	_pp @ sp[(-56)+50]
 11611  010EE4  0EFA               	movlw	-6
 11612  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 11613  010EEC  0EFB               	movlw	-5
 11614  010EEE  50E3               	movf	plusw1,w,c
 11615  010EF0  1032               	iorwf	btemp^0,w,c
 11616  010EF2  B4D8               	btfsc	status,2,c
 11617  010EF4  A81F               	btfss	_flags^0,4,c
 11618  010EF6  D021               	goto	l9593
 11619                           
 11620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11621                           ;stkvar	_n @ sp[(-56)+32]
 11622  010EF8  0EE8               	movlw	-24
 11623  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 11624  010F00  0EE9               	movlw	-23
 11625  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 11626  010F08  0E78               	movlw	low _dbuf
 11627  010F0A  243C               	addwf	(btemp+10)^0,w,c
 11628  010F0C  6ED9               	movwf	fsr2l,c
 11629  010F0E  0E01               	movlw	high _dbuf
 11630  010F10  203D               	addwfc	(btemp+11)^0,w,c
 11631  010F12  6EDA               	movwf	fsr2h,c
 11632  010F14  0E2E               	movlw	46
 11633  010F16  6EDF               	movwf	indf2,c
 11634                           
 11635                           ;stkvar	_n @ sp[(-56)+32]
 11636  010F18  0EE8               	movlw	-24
 11637  010F1A  50E3               	movf	plusw1,w,c
 11638  010F1C  0F01               	addlw	1
 11639  010F1E  6E32               	movwf	btemp^0,c
 11640  010F20  0EE8               	movlw	-24
 11641  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 11642  010F28  6A32               	clrf	btemp^0,c
 11643  010F2A  0EE9               	movlw	-23
 11644  010F2C  50E3               	movf	plusw1,w,c
 11645  010F2E  2032               	addwfc	btemp^0,w,c
 11646  010F30  6E32               	movwf	btemp^0,c
 11647  010F32  0EE9               	movlw	-23
 11648  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 11649  010F3A                     l9593:
 11650                           
 11651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11652                           ;stkvar	_n @ sp[(-56)+32]
 11653  010F3A  0EE8               	movlw	-24
 11654  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11655  010F42  0EE9               	movlw	-23
 11656  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 11657  010F4A  0E78               	movlw	low _dbuf
 11658  010F4C  243C               	addwf	(btemp+10)^0,w,c
 11659  010F4E  6ED9               	movwf	fsr2l,c
 11660  010F50  0E01               	movlw	high _dbuf
 11661  010F52  203D               	addwfc	(btemp+11)^0,w,c
 11662  010F54  6EDA               	movwf	fsr2h,c
 11663  010F56  0E00               	movlw	0
 11664  010F58  6EDF               	movwf	indf2,c
 11665                           
 11666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11667                           ;stkvar	_nmode @ sp[(-56)+55]
 11668  010F5A  0EFF               	movlw	-1
 11669  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 11670  010F62  0E65               	movlw	101
 11671  010F64  1832               	xorwf	btemp^0,w,c
 11672  010F66  A4D8               	btfss	status,2,c
 11673  010F68  EF16  F081         	goto	l9397
 11674                           
 11675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11676  010F6C  0E4F               	movlw	79
 11677  010F6E  6E3C               	movwf	(btemp+10)^0,c
 11678  010F70  0E00               	movlw	0
 11679  010F72  6E3D               	movwf	(btemp+11)^0,c
 11680                           
 11681                           ;stkvar	_i @ sp[(-56)+36]
 11682  010F74  0EEC               	movlw	-20
 11683  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11684  010F7C  0EED               	movlw	-19
 11685  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11686                           
 11687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11688                           ;stkvar	_i @ sp[(-56)+36]
 11689  010F84  0EEC               	movlw	-20
 11690  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 11691  010F8C  0EED               	movlw	-19
 11692  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11693  010F94  0E78               	movlw	low _dbuf
 11694  010F96  243C               	addwf	(btemp+10)^0,w,c
 11695  010F98  6ED9               	movwf	fsr2l,c
 11696  010F9A  0E01               	movlw	high _dbuf
 11697  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 11698  010F9E  6EDA               	movwf	fsr2h,c
 11699  010FA0  0E00               	movlw	0
 11700  010FA2  6EDF               	movwf	indf2,c
 11701                           
 11702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11703                           ;stkvar	_sign @ sp[(-56)+42]
 11704  010FA4  0EF2               	movlw	-14
 11705  010FA6  6AE3               	clrf	plusw1,c
 11706  010FA8  0EF3               	movlw	-13
 11707  010FAA  6AE3               	clrf	plusw1,c
 11708                           
 11709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11710                           ;stkvar	_e @ sp[(-56)+34]
 11711  010FAC  0EEB               	movlw	-21
 11712  010FAE  AEE3               	btfss	plusw1,7,c
 11713  010FB0  D012               	goto	l9607
 11714                           
 11715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11716  010FB2  0E01               	movlw	1
 11717  010FB4  6E3C               	movwf	(btemp+10)^0,c
 11718  010FB6  0E00               	movlw	0
 11719  010FB8  6E3D               	movwf	(btemp+11)^0,c
 11720                           
 11721                           ;stkvar	_sign @ sp[(-56)+42]
 11722  010FBA  0EF2               	movlw	-14
 11723  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11724  010FC2  0EF3               	movlw	-13
 11725  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11726                           
 11727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11728                           ;stkvar	_e @ sp[(-56)+34]
 11729                           ;stkvar	_e @ sp[(-56)+34]
 11730  010FCA  0EEA               	movlw	-22
 11731  010FCC  6CE3               	negf	plusw1,c
 11732  010FCE  0EEB               	movlw	-21
 11733  010FD0  1EE3               	comf	plusw1,f,c
 11734  010FD2  B0D8               	btfsc	status,0,c
 11735  010FD4  2AE3               	incf	plusw1,f,c
 11736  010FD6                     l9607:
 11737                           
 11738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11739  010FD6  0E02               	movlw	2
 11740  010FD8  6E3C               	movwf	(btemp+10)^0,c
 11741  010FDA  0E00               	movlw	0
 11742  010FDC  6E3D               	movwf	(btemp+11)^0,c
 11743                           
 11744                           ;stkvar	_p @ sp[(-56)+40]
 11745  010FDE  0EF0               	movlw	-16
 11746  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11747  010FE6  0EF1               	movlw	-15
 11748  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11749                           
 11750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11751  010FEE  D051               	goto	l9619
 11752  010FF0                     l9609:
 11753                           
 11754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11755                           ;stkvar	_i @ sp[(-56)+36]
 11756  010FF0  50E1               	movf	fsr1l,w,c
 11757  010FF2  0FEC               	addlw	-20
 11758  010FF4  6ED9               	movwf	fsr2l,c
 11759  010FF6  50E2               	movf	fsr1h,w,c
 11760  010FF8  6EDA               	movwf	fsr2h,c
 11761  010FFA  0EFF               	movlw	255
 11762  010FFC  22DA               	addwfc	fsr2h,f,c
 11763  010FFE  06DE               	decf	postinc2,f,c
 11764  011000  0E00               	movlw	0
 11765  011002  5ADD               	subwfb	postdec2,f,c
 11766                           
 11767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11768                           ;stkvar	_i @ sp[(-56)+36]
 11769  011004  0EEC               	movlw	-20
 11770  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 11771  01100C  0EED               	movlw	-19
 11772  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11773  011014  0E78               	movlw	low _dbuf
 11774  011016  243C               	addwf	(btemp+10)^0,w,c
 11775  011018  6ED9               	movwf	fsr2l,c
 11776  01101A  0E01               	movlw	high _dbuf
 11777  01101C  203D               	addwfc	(btemp+11)^0,w,c
 11778  01101E  6EDA               	movwf	fsr2h,c
 11779  011020  0E0A               	movlw	10
 11780  011022  6EE6               	movwf	postinc1,c
 11781  011024  0E00               	movlw	0
 11782  011026  6EE6               	movwf	postinc1,c
 11783                           
 11784                           ;stkvar	_e @ sp[(-58)+34]
 11785  011028  0EE8               	movlw	-24
 11786  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11787  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11788  011036  ECF4  F0B3         	call	___awmod	;wreg free
 11789  01103A  5032               	movf	btemp^0,w,c
 11790  01103C  0F30               	addlw	48
 11791  01103E  6EDF               	movwf	indf2,c
 11792                           
 11793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11794  011040  0E0A               	movlw	10
 11795  011042  6EE6               	movwf	postinc1,c
 11796  011044  0E00               	movlw	0
 11797  011046  6EE6               	movwf	postinc1,c
 11798                           
 11799                           ;stkvar	_e @ sp[(-58)+34]
 11800  011048  0EE8               	movlw	-24
 11801  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11802  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11803  011056  EC80  F0B1         	call	___awdiv	;wreg free
 11804                           
 11805                           ;stkvar	_e @ sp[(-56)+34]
 11806  01105A  0EEA               	movlw	-22
 11807  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11808  011062  0EEB               	movlw	-21
 11809  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11810                           
 11811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11812                           ;stkvar	_p @ sp[(-56)+40]
 11813  01106A  50E1               	movf	fsr1l,w,c
 11814  01106C  0FF0               	addlw	-16
 11815  01106E  6ED9               	movwf	fsr2l,c
 11816  011070  50E2               	movf	fsr1h,w,c
 11817  011072  6EDA               	movwf	fsr2h,c
 11818  011074  0EFF               	movlw	255
 11819  011076  22DA               	addwfc	fsr2h,f,c
 11820  011078  06DE               	decf	postinc2,f,c
 11821  01107A  0E00               	movlw	0
 11822  01107C  5ADD               	subwfb	postdec2,f,c
 11823                           
 11824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11825                           ;stkvar	_w @ sp[(-56)+38]
 11826  01107E  50E1               	movf	fsr1l,w,c
 11827  011080  0FEE               	addlw	-18
 11828  011082  6ED9               	movwf	fsr2l,c
 11829  011084  50E2               	movf	fsr1h,w,c
 11830  011086  6EDA               	movwf	fsr2h,c
 11831  011088  0EFF               	movlw	255
 11832  01108A  22DA               	addwfc	fsr2h,f,c
 11833  01108C  06DE               	decf	postinc2,f,c
 11834  01108E  0E00               	movlw	0
 11835  011090  5ADD               	subwfb	postdec2,f,c
 11836  011092                     l9619:
 11837                           
 11838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11839                           ;stkvar	_e @ sp[(-56)+34]
 11840  011092  0EEA               	movlw	-22
 11841  011094  006F FF8C  F032    	movff	plusw1,btemp
 11842  01109A  0EEB               	movlw	-21
 11843  01109C  50E3               	movf	plusw1,w,c
 11844  01109E  1032               	iorwf	btemp^0,w,c
 11845  0110A0  A4D8               	btfss	status,2,c
 11846  0110A2  D7A6               	goto	l9609
 11847                           
 11848                           ;stkvar	_p @ sp[(-56)+40]
 11849  0110A4  0EF1               	movlw	-15
 11850  0110A6  BEE3               	btfsc	plusw1,7,c
 11851  0110A8  D007               	goto	u9540
 11852  0110AA  0EF1               	movlw	-15
 11853  0110AC  50E3               	movf	plusw1,w,c
 11854  0110AE  E1A0               	bnz	l9609
 11855  0110B0  0EF0               	movlw	-16
 11856  0110B2  04E3               	decf	plusw1,w,c
 11857  0110B4  B0D8               	btfsc	status,0,c
 11858  0110B6  D79C               	goto	l9609
 11859  0110B8                     u9540:
 11860                           
 11861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 11862                           ;stkvar	_i @ sp[(-56)+36]
 11863  0110B8  50E1               	movf	fsr1l,w,c
 11864  0110BA  0FEC               	addlw	-20
 11865  0110BC  6ED9               	movwf	fsr2l,c
 11866  0110BE  50E2               	movf	fsr1h,w,c
 11867  0110C0  6EDA               	movwf	fsr2h,c
 11868  0110C2  0EFF               	movlw	255
 11869  0110C4  22DA               	addwfc	fsr2h,f,c
 11870  0110C6  06DE               	decf	postinc2,f,c
 11871  0110C8  0E00               	movlw	0
 11872  0110CA  5ADD               	subwfb	postdec2,f,c
 11873                           
 11874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 11875                           ;stkvar	_sign @ sp[(-56)+42]
 11876  0110CC  0EF2               	movlw	-14
 11877  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 11878  0110D4  0EF3               	movlw	-13
 11879  0110D6  50E3               	movf	plusw1,w,c
 11880  0110D8  1032               	iorwf	btemp^0,w,c
 11881  0110DA  A4D8               	btfss	status,2,c
 11882  0110DC  D002               	goto	l9629
 11883  0110DE  0E2B               	movlw	43
 11884  0110E0  D001               	goto	L9
 11885  0110E2                     l9629:
 11886  0110E2  0E2D               	movlw	45
 11887  0110E4                     L9:
 11888  0110E4  6E3C               	movwf	(btemp+10)^0,c
 11889  0110E6  0E00               	movlw	0
 11890  0110E8  6E3D               	movwf	(btemp+11)^0,c
 11891                           
 11892                           ;stkvar	_efgtoa$4401 @ sp[(-56)+4]
 11893  0110EA  0ECC               	movlw	-52
 11894  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11895  0110F2  0ECD               	movlw	-51
 11896  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11897                           
 11898                           ;stkvar	_efgtoa$4401 @ sp[(-56)+4]
 11899                           ;stkvar	_i @ sp[(-56)+36]
 11900  0110FA  0EEC               	movlw	-20
 11901  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11902  011102  0EED               	movlw	-19
 11903  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 11904  01110A  0E78               	movlw	low _dbuf
 11905  01110C  243C               	addwf	(btemp+10)^0,w,c
 11906  01110E  6ED9               	movwf	fsr2l,c
 11907  011110  0E01               	movlw	high _dbuf
 11908  011112  203D               	addwfc	(btemp+11)^0,w,c
 11909  011114  6EDA               	movwf	fsr2h,c
 11910  011116  0ECC               	movlw	-52
 11911  011118  006F FF8F FFDF     	movff	plusw1,indf2
 11912                           
 11913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 11914                           ;stkvar	_w @ sp[(-56)+38]
 11915  01111E  50E1               	movf	fsr1l,w,c
 11916  011120  0FEE               	addlw	-18
 11917  011122  6ED9               	movwf	fsr2l,c
 11918  011124  50E2               	movf	fsr1h,w,c
 11919  011126  6EDA               	movwf	fsr2h,c
 11920  011128  0EFF               	movlw	255
 11921  01112A  22DA               	addwfc	fsr2h,f,c
 11922  01112C  06DE               	decf	postinc2,f,c
 11923  01112E  0E00               	movlw	0
 11924  011130  5ADD               	subwfb	postdec2,f,c
 11925                           
 11926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11927                           ;stkvar	_i @ sp[(-56)+36]
 11928  011132  50E1               	movf	fsr1l,w,c
 11929  011134  0FEC               	addlw	-20
 11930  011136  6ED9               	movwf	fsr2l,c
 11931  011138  50E2               	movf	fsr1h,w,c
 11932  01113A  6EDA               	movwf	fsr2h,c
 11933  01113C  0EFF               	movlw	255
 11934  01113E  22DA               	addwfc	fsr2h,f,c
 11935  011140  06DE               	decf	postinc2,f,c
 11936  011142  0E00               	movlw	0
 11937  011144  5ADD               	subwfb	postdec2,f,c
 11938  011146  0EBF               	movlw	191
 11939  011148  6E3C               	movwf	(btemp+10)^0,c
 11940  01114A  0EFF               	movlw	255
 11941  01114C  6E3D               	movwf	(btemp+11)^0,c
 11942                           
 11943                           ;stkvar	_c @ sp[(-56)+-7]
 11944  01114E  0EC1               	movlw	-63
 11945  011150  50E3               	movf	plusw1,w,c
 11946  011152  6E3A               	movwf	(btemp+8)^0,c
 11947  011154  6A3B               	clrf	(btemp+9)^0,c
 11948  011156  503C               	movf	(btemp+10)^0,w,c
 11949  011158  263A               	addwf	(btemp+8)^0,f,c
 11950  01115A  503D               	movf	(btemp+11)^0,w,c
 11951  01115C  223B               	addwfc	(btemp+9)^0,f,c
 11952  01115E  503B               	movf	(btemp+9)^0,w,c
 11953  011160  E106               	bnz	u9560
 11954  011162  0E1A               	movlw	26
 11955  011164  5C3A               	subwf	(btemp+8)^0,w,c
 11956  011166  B0D8               	btfsc	status,0,c
 11957  011168  D002               	goto	u9560
 11958  01116A  0E01               	movlw	1
 11959  01116C  D001               	goto	u9570
 11960  01116E                     u9560:
 11961  01116E  0E00               	movlw	0
 11962  011170                     u9570:
 11963  011170  6E3C               	movwf	(btemp+10)^0,c
 11964  011172  6A3D               	clrf	(btemp+11)^0,c
 11965                           
 11966                           ;stkvar	_efgtoa$4403 @ sp[(-56)+0]
 11967  011174  0EC8               	movlw	-56
 11968  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11969  01117C  0EC9               	movlw	-55
 11970  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11971                           
 11972                           ;stkvar	_efgtoa$4403 @ sp[(-56)+0]
 11973  011184  0EC8               	movlw	-56
 11974  011186  006F FF8C  F032    	movff	plusw1,btemp
 11975  01118C  0EC9               	movlw	-55
 11976  01118E  50E3               	movf	plusw1,w,c
 11977  011190  1032               	iorwf	btemp^0,w,c
 11978  011192  A4D8               	btfss	status,2,c
 11979  011194  D002               	goto	l9645
 11980  011196  0E65               	movlw	101
 11981  011198  D001               	goto	L10
 11982  01119A                     l9645:
 11983  01119A  0E45               	movlw	69
 11984  01119C                     L10:
 11985  01119C  6E3C               	movwf	(btemp+10)^0,c
 11986  01119E  0E00               	movlw	0
 11987  0111A0  6E3D               	movwf	(btemp+11)^0,c
 11988                           
 11989                           ;stkvar	_efgtoa$4402 @ sp[(-56)+2]
 11990  0111A2  0ECA               	movlw	-54
 11991  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11992  0111AA  0ECB               	movlw	-53
 11993  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11994                           
 11995                           ;stkvar	_efgtoa$4402 @ sp[(-56)+2]
 11996                           ;stkvar	_i @ sp[(-56)+36]
 11997  0111B2  0EEC               	movlw	-20
 11998  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 11999  0111BA  0EED               	movlw	-19
 12000  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12001  0111C2  0E78               	movlw	low _dbuf
 12002  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12003  0111C6  6ED9               	movwf	fsr2l,c
 12004  0111C8  0E01               	movlw	high _dbuf
 12005  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12006  0111CC  6EDA               	movwf	fsr2h,c
 12007  0111CE  0ECA               	movlw	-54
 12008  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12009                           
 12010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12011                           ;stkvar	_w @ sp[(-56)+38]
 12012  0111D6  50E1               	movf	fsr1l,w,c
 12013  0111D8  0FEE               	addlw	-18
 12014  0111DA  6ED9               	movwf	fsr2l,c
 12015  0111DC  50E2               	movf	fsr1h,w,c
 12016  0111DE  6EDA               	movwf	fsr2h,c
 12017  0111E0  0EFF               	movlw	255
 12018  0111E2  22DA               	addwfc	fsr2h,f,c
 12019  0111E4  06DE               	decf	postinc2,f,c
 12020  0111E6  0E00               	movlw	0
 12021  0111E8  5ADD               	subwfb	postdec2,f,c
 12022                           
 12023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12024                           ;stkvar	_i @ sp[(-56)+36]
 12025  0111EA  0EEC               	movlw	-20
 12026  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12027  0111F2  0EED               	movlw	-19
 12028  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12029  0111FA  0E78               	movlw	low _dbuf
 12030  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12031  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12032  011200  0E01               	movlw	high _dbuf
 12033  011202  203D               	addwfc	(btemp+11)^0,w,c
 12034  011204  6E3B               	movwf	(btemp+9)^0,c
 12035  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12036  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12037                           
 12038                           ;stkvar	_n @ sp[(-58)+32]
 12039  011212  0E78               	movlw	low _dbuf
 12040  011214  6E3C               	movwf	(btemp+10)^0,c
 12041  011216  0E01               	movlw	high _dbuf
 12042  011218  6E3D               	movwf	(btemp+11)^0,c
 12043  01121A  0EE6               	movlw	-26
 12044  01121C  50E3               	movf	plusw1,w,c
 12045  01121E  263C               	addwf	(btemp+10)^0,f,c
 12046  011220  0EE7               	movlw	-25
 12047  011222  50E3               	movf	plusw1,w,c
 12048  011224  223D               	addwfc	(btemp+11)^0,f,c
 12049  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12050  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12051  011232  EC05  F0B7         	call	_strcpy	;wreg free
 12052  011236  EF16  F081         	goto	l9397
 12053  01123A                     l1868:
 12054                           
 12055                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12056  01123A  0EC1               	movlw	193
 12057  01123C  26E1               	addwf	fsr1l,f,c
 12058  01123E  0EFF               	movlw	255
 12059  011240  22E2               	addwfc	fsr1h,f,c
 12060  011242  0012               	return		;funcret
 12061  011244                     __end_of_efgtoa:
 12062                           	opt callstack 0
 12063                           
 12064 ;; *************** function _tolower *****************
 12065 ;; Defined at:
 12066 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12067 ;; Parameters:    Size  Location     Type
 12068 ;;  c               2  [STACK] int 
 12069 ;; Auto vars:     Size  Location     Type
 12070 ;;		None
 12071 ;; Return value:  Size  Location     Type
 12072 ;;                  2  [STACK] int 
 12073 ;; Registers used:
 12074 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12075 ;; Tracked objects:
 12076 ;;		On entry : 0/5
 12077 ;;		On exit  : 0/0
 12078 ;;		Unchanged: 0/0
 12079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12084 ;;Total ram usage:        0 bytes
 12085 ;; Hardware stack levels used:    1
 12086 ;; Hardware stack levels required when called:    7
 12087 ;; This function calls:
 12088 ;;		_isupper
 12089 ;; This function is called by:
 12090 ;;		_efgtoa
 12091 ;;		_vfpfcnvrt
 12092 ;; This function uses a reentrant model
 12093 ;;
 12094                           
 12095                           	psect	text44
 12096  0175C0                     __ptext44:
 12097                           	opt callstack 0
 12098  0175C0                     _tolower:
 12099                           	opt callstack 0
 12100                           
 12101                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12102  0175C0  52E6               	movf	postinc1,f,c
 12103  0175C2  52E6               	movf	postinc1,f,c
 12104                           
 12105                           ;stkvar	_c @ sp[(-2)+-2]
 12106                           
 12107                           ;incstack = 0
 12108  0175C4  0EFC               	movlw	-4
 12109  0175C6  50E3               	movf	plusw1,w,c
 12110  0175C8  0FBF               	addlw	191
 12111  0175CA  6E3C               	movwf	(btemp+10)^0,c
 12112  0175CC  0EFD               	movlw	-3
 12113  0175CE  006F FF8C  F03D    	movff	plusw1,btemp+11
 12114  0175D4  0EFF               	movlw	255
 12115  0175D6  223D               	addwfc	(btemp+11)^0,f,c
 12116  0175D8  503D               	movf	(btemp+11)^0,w,c
 12117  0175DA  E106               	bnz	u5090
 12118  0175DC  0E1A               	movlw	26
 12119  0175DE  5C3C               	subwf	(btemp+10)^0,w,c
 12120  0175E0  B0D8               	btfsc	status,0,c
 12121  0175E2  D002               	goto	u5090
 12122  0175E4  0E01               	movlw	1
 12123  0175E6  D001               	goto	u5100
 12124  0175E8                     u5090:
 12125  0175E8  0E00               	movlw	0
 12126  0175EA                     u5100:
 12127  0175EA  6E3C               	movwf	(btemp+10)^0,c
 12128  0175EC  6A3D               	clrf	(btemp+11)^0,c
 12129                           
 12130                           ;stkvar	_tolower$5069 @ sp[(-2)+0]
 12131  0175EE  0EFE               	movlw	-2
 12132  0175F0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12133  0175F6  0EFF               	movlw	-1
 12134  0175F8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12135                           
 12136                           ;stkvar	_tolower$5069 @ sp[(-2)+0]
 12137  0175FE  0EFE               	movlw	-2
 12138  017600  006F FF8C  F032    	movff	plusw1,btemp
 12139  017606  0EFF               	movlw	-1
 12140  017608  50E3               	movf	plusw1,w,c
 12141  01760A  1032               	iorwf	btemp^0,w,c
 12142  01760C  B4D8               	btfsc	status,2,c
 12143  01760E  D00D               	goto	l6427
 12144                           
 12145                           ;stkvar	_c @ sp[(-2)+-2]
 12146  017610  0EFC               	movlw	-4
 12147  017612  006F FF8C  F032    	movff	plusw1,btemp
 12148  017618  0EFD               	movlw	-3
 12149  01761A  006F FF8C  F033    	movff	plusw1,btemp+1
 12150  017620  0E20               	movlw	32
 12151  017622  1232               	iorwf	btemp^0,f,c
 12152  017624  0E00               	movlw	0
 12153  017626  1233               	iorwf	(btemp+1)^0,f,c
 12154  017628  D008               	goto	l2891
 12155  01762A                     l6427:
 12156                           
 12157                           ;stkvar	_c @ sp[(-2)+-2]
 12158  01762A  0EFC               	movlw	-4
 12159  01762C  006F FF8C  F032    	movff	plusw1,btemp
 12160  017632  0EFD               	movlw	-3
 12161  017634  006F FF8C  F033    	movff	plusw1,btemp+1
 12162  01763A                     l2891:
 12163                           
 12164                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12165  01763A  52E5               	movf	postdec1,f,c
 12166  01763C  52E5               	movf	postdec1,f,c
 12167  01763E  52E5               	movf	postdec1,f,c
 12168  017640  52E5               	movf	postdec1,f,c
 12169  017642  0012               	return		;funcret
 12170  017644                     __end_of_tolower:
 12171                           	opt callstack 0
 12172                           
 12173 ;; *************** function _isupper *****************
 12174 ;; Defined at:
 12175 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;  c               2  [STACK] int 
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;		None
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  2  [STACK] int 
 12182 ;; Registers used:
 12183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12184 ;; Tracked objects:
 12185 ;;		On entry : 0/0
 12186 ;;		On exit  : 0/0
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12193 ;;Total ram usage:        0 bytes
 12194 ;; Hardware stack levels used:    1
 12195 ;; Hardware stack levels required when called:    6
 12196 ;; This function calls:
 12197 ;;		Nothing
 12198 ;; This function is called by:
 12199 ;;		_efgtoa
 12200 ;;		_xtoa
 12201 ;;		_vfpfcnvrt
 12202 ;;		_tolower
 12203 ;; This function uses a reentrant model
 12204 ;;
 12205                           
 12206                           	psect	text45
 12207  01809E                     __ptext45:
 12208                           	opt callstack 0
 12209  01809E                     _isupper:
 12210                           	opt callstack 17
 12211                           
 12212                           ;stkvar	_c @ sp[(0)+-2]
 12213                           
 12214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12215                           ;incstack = 0
 12216  01809E  0EFE               	movlw	-2
 12217  0180A0  50E3               	movf	plusw1,w,c
 12218  0180A2  0FBF               	addlw	191
 12219  0180A4  6E3C               	movwf	(btemp+10)^0,c
 12220  0180A6  0EFF               	movlw	-1
 12221  0180A8  006F FF8C  F03D    	movff	plusw1,btemp+11
 12222  0180AE  0EFF               	movlw	255
 12223  0180B0  223D               	addwfc	(btemp+11)^0,f,c
 12224  0180B2  503D               	movf	(btemp+11)^0,w,c
 12225  0180B4  E106               	bnz	u4490
 12226  0180B6  0E1A               	movlw	26
 12227  0180B8  5C3C               	subwf	(btemp+10)^0,w,c
 12228  0180BA  B0D8               	btfsc	status,0,c
 12229  0180BC  D002               	goto	u4490
 12230  0180BE  0E01               	movlw	1
 12231  0180C0  D001               	goto	u4500
 12232  0180C2                     u4490:
 12233  0180C2  0E00               	movlw	0
 12234  0180C4                     u4500:
 12235  0180C4  6E32               	movwf	btemp^0,c
 12236  0180C6  6A33               	clrf	(btemp+1)^0,c
 12237                           
 12238                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12239  0180C8  52E5               	movf	postdec1,f,c
 12240  0180CA  52E5               	movf	postdec1,f,c
 12241  0180CC  0012               	return		;funcret
 12242  0180CE                     __end_of_isupper:
 12243                           	opt callstack 0
 12244                           
 12245 ;; *************** function _strcpy *****************
 12246 ;; Defined at:
 12247 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;  dest            2  [STACK] PTR unsigned char 
 12250 ;;		 -> dbuf(80), 
 12251 ;;  src             2  [STACK] PTR const unsigned char 
 12252 ;;		 -> STR_42(4), STR_41(4), STR_38(4), STR_37(4), 
 12253 ;;		 -> dbuf(80), 
 12254 ;; Auto vars:     Size  Location     Type
 12255 ;;  d               2  [STACK] PTR unsigned char 
 12256 ;;		 -> dbuf(80), 
 12257 ;;  s               2  [STACK] PTR const unsigned char 
 12258 ;;		 -> STR_42(4), STR_41(4), STR_38(4), STR_37(4), 
 12259 ;;		 -> dbuf(80), 
 12260 ;; Return value:  Size  Location     Type
 12261 ;;                  2  [STACK] PTR unsigned char 
 12262 ;; Registers used:
 12263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12264 ;; Tracked objects:
 12265 ;;		On entry : 0/5
 12266 ;;		On exit  : 0/0
 12267 ;;		Unchanged: 0/0
 12268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12273 ;;Total ram usage:        0 bytes
 12274 ;; Hardware stack levels used:    1
 12275 ;; Hardware stack levels required when called:    6
 12276 ;; This function calls:
 12277 ;;		Nothing
 12278 ;; This function is called by:
 12279 ;;		_efgtoa
 12280 ;; This function uses a reentrant model
 12281 ;;
 12282                           
 12283                           	psect	text46
 12284  016E0A                     __ptext46:
 12285                           	opt callstack 0
 12286  016E0A                     _strcpy:
 12287                           	opt callstack 0
 12288                           
 12289                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12290  016E0A  52E6               	movf	postinc1,f,c
 12291  016E0C  52E6               	movf	postinc1,f,c
 12292  016E0E  52E6               	movf	postinc1,f,c
 12293  016E10  52E6               	movf	postinc1,f,c
 12294                           
 12295                           ;stkvar	_src @ sp[(-4)+-4]
 12296                           
 12297                           ;incstack = 0
 12298  016E12  0EF8               	movlw	-8
 12299  016E14  006F FF8C  F03C    	movff	plusw1,btemp+10
 12300  016E1A  0EF9               	movlw	-7
 12301  016E1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 12302                           
 12303                           ;stkvar	_s @ sp[(-4)+2]
 12304  016E22  0EFF               	movlw	-1
 12305  016E24  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12306  016E2A  0EFE               	movlw	-2
 12307  016E2C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12308                           
 12309                           ;stkvar	_dest @ sp[(-4)+-2]
 12310  016E32  0EFA               	movlw	-6
 12311  016E34  006F FF8C  F03C    	movff	plusw1,btemp+10
 12312  016E3A  0EFB               	movlw	-5
 12313  016E3C  006F FF8C  F03D    	movff	plusw1,btemp+11
 12314                           
 12315                           ;stkvar	_d @ sp[(-4)+0]
 12316  016E42  0EFD               	movlw	-3
 12317  016E44  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12318  016E4A  0EFC               	movlw	-4
 12319  016E4C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12320  016E52                     l9271:
 12321                           
 12322                           ;stkvar	_s @ sp[(-4)+2]
 12323  016E52  50E1               	movf	fsr1l,w,c
 12324  016E54  0FFE               	addlw	-2
 12325  016E56  6ED9               	movwf	fsr2l,c
 12326  016E58  50E2               	movf	fsr1h,w,c
 12327  016E5A  6EDA               	movwf	fsr2h,c
 12328  016E5C  0EFF               	movlw	255
 12329  016E5E  22DA               	addwfc	fsr2h,f,c
 12330  016E60  006F FF7C  F03C    	movff	indf2,btemp+10
 12331  016E66  0E01               	movlw	1
 12332  016E68  26DE               	addwf	postinc2,f,c
 12333  016E6A  006F FF7C  F03D    	movff	indf2,btemp+11
 12334  016E70  0E00               	movlw	0
 12335  016E72  22DD               	addwfc	postdec2,f,c
 12336  016E74  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12337  016E7A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12338  016E80  0E00               	movlw	low (__mediumconst shr (0+16))
 12339  016E82  6EF8               	movwf	tblptru,c
 12340                           
 12341                           ;stkvar	_d @ sp[(-4)+0]
 12342  016E84  50E1               	movf	fsr1l,w,c
 12343  016E86  0FFC               	addlw	-4
 12344  016E88  6ED9               	movwf	fsr2l,c
 12345  016E8A  50E2               	movf	fsr1h,w,c
 12346  016E8C  6EDA               	movwf	fsr2h,c
 12347  016E8E  0EFF               	movlw	255
 12348  016E90  22DA               	addwfc	fsr2h,f,c
 12349  016E92  006F FF7C  F03C    	movff	indf2,btemp+10
 12350  016E98  0E01               	movlw	1
 12351  016E9A  26DE               	addwf	postinc2,f,c
 12352  016E9C  006F FF7C  F03D    	movff	indf2,btemp+11
 12353  016EA2  0E00               	movlw	0
 12354  016EA4  22DD               	addwfc	postdec2,f,c
 12355  016EA6  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12356  016EAC  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12357  016EB2  0E1F               	movlw	(high __ramtop+-1)
 12358  016EB4  64F7               	cpfsgt	tblptrh,c
 12359  016EB6  D003               	bra	u8877
 12360  016EB8  0008               	tblrd		*
 12361  016EBA  50F5               	movf	tablat,w,c
 12362  016EBC  D007               	bra	u8870
 12363  016EBE                     u8877:
 12364  016EBE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12365  016EC4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12366  016ECA  50EF               	movf	indf0,w,c
 12367  016ECC                     u8870:
 12368  016ECC  6EDF               	movwf	indf2,c
 12369  016ECE  50DF               	movf	indf2,w,c
 12370  016ED0  A4D8               	btfss	status,2,c
 12371  016ED2  D7BF               	goto	l9271
 12372                           
 12373                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12374  016ED4  0EF8               	movlw	248
 12375  016ED6  26E1               	addwf	fsr1l,f,c
 12376  016ED8  0EFF               	movlw	255
 12377  016EDA  22E2               	addwfc	fsr1h,f,c
 12378  016EDC  0012               	return		;funcret
 12379  016EDE                     __end_of_strcpy:
 12380                           	opt callstack 0
 12381                           
 12382 ;; *************** function _floorf *****************
 12383 ;; Defined at:
 12384 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12385 ;; Parameters:    Size  Location     Type
 12386 ;;  x               4  [STACK] float 
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;  u               4  [STACK] struct .
 12389 ;;  m               4  [STACK] unsigned long 
 12390 ;;  e               2  [STACK] int 
 12391 ;; Return value:  Size  Location     Type
 12392 ;;                  4  [STACK] float 
 12393 ;; Registers used:
 12394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12395 ;; Tracked objects:
 12396 ;;		On entry : 0/5
 12397 ;;		On exit  : 0/0
 12398 ;;		Unchanged: 0/0
 12399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12404 ;;Total ram usage:        0 bytes
 12405 ;; Hardware stack levels used:    1
 12406 ;; Hardware stack levels required when called:    6
 12407 ;; This function calls:
 12408 ;;		Nothing
 12409 ;; This function is called by:
 12410 ;;		_efgtoa
 12411 ;; This function uses a reentrant model
 12412 ;;
 12413                           
 12414                           	psect	text47
 12415  014486                     __ptext47:
 12416                           	opt callstack 0
 12417  014486                     _floorf:
 12418                           	opt callstack 0
 12419                           
 12420                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12421  014486  0E0A               	movlw	10
 12422  014488  26E1               	addwf	fsr1l,f,c
 12423  01448A  0E00               	movlw	0
 12424  01448C  22E2               	addwfc	fsr1h,f,c
 12425                           
 12426                           ;incstack = 0
 12427  01448E  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 12428  014494  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 12429  01449A  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 12430  0144A0  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 12431                           
 12432                           ;stkvar	_u @ sp[(-10)+0]
 12433  0144A6  0EF6               	movlw	-10
 12434  0144A8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12435  0144AE  0EF7               	movlw	-9
 12436  0144B0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12437  0144B6  0EF8               	movlw	-8
 12438  0144B8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12439  0144BE  0EF9               	movlw	-7
 12440  0144C0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12441                           
 12442                           ;stkvar	_x @ sp[(-10)+-4]
 12443  0144C6  0EF2               	movlw	-14
 12444  0144C8  006F FF8C  F03A    	movff	plusw1,btemp+8
 12445  0144CE  0EF3               	movlw	-13
 12446  0144D0  006F FF8C  F03B    	movff	plusw1,btemp+9
 12447  0144D6  0EF4               	movlw	-12
 12448  0144D8  006F FF8C  F03C    	movff	plusw1,btemp+10
 12449  0144DE  0EF5               	movlw	-11
 12450  0144E0  006F FF8C  F03D    	movff	plusw1,btemp+11
 12451                           
 12452                           ;stkvar	_u @ sp[(-10)+0]
 12453  0144E6  0EF6               	movlw	-10
 12454  0144E8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12455  0144EE  0EF7               	movlw	-9
 12456  0144F0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12457  0144F6  0EF8               	movlw	-8
 12458  0144F8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12459  0144FE  0EF9               	movlw	-7
 12460  014500  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12461  014506  0E81               	movlw	129
 12462  014508  6E3C               	movwf	(btemp+10)^0,c
 12463  01450A  0EFF               	movlw	255
 12464  01450C  6E3D               	movwf	(btemp+11)^0,c
 12465                           
 12466                           ;stkvar	_u @ sp[(-10)+0]
 12467  01450E  0EF6               	movlw	-10
 12468  014510  006F FF8C  F036    	movff	plusw1,btemp+4
 12469  014516  0EF7               	movlw	-9
 12470  014518  006F FF8C  F037    	movff	plusw1,btemp+5
 12471  01451E  0EF8               	movlw	-8
 12472  014520  006F FF8C  F038    	movff	plusw1,btemp+6
 12473  014526  0EF9               	movlw	-7
 12474  014528  006F FF8C  F039    	movff	plusw1,btemp+7
 12475  01452E  0E18               	movlw	24
 12476  014530  D005               	goto	u5120
 12477  014532                     u5125:
 12478  014532  90D8               	bcf	status,0,c
 12479  014534  3239               	rrcf	(btemp+7)^0,f,c
 12480  014536  3238               	rrcf	(btemp+6)^0,f,c
 12481  014538  3237               	rrcf	(btemp+5)^0,f,c
 12482  01453A  3236               	rrcf	(btemp+4)^0,f,c
 12483  01453C                     u5120:
 12484  01453C  2EE8               	decfsz	wreg,f,c
 12485  01453E  D7F9               	goto	u5125
 12486  014540  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12487  014546  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12488  01454C  0EFF               	movlw	255
 12489  01454E  163A               	andwf	(btemp+8)^0,f,c
 12490  014550  0E00               	movlw	0
 12491  014552  163B               	andwf	(btemp+9)^0,f,c
 12492  014554  503C               	movf	(btemp+10)^0,w,c
 12493  014556  263A               	addwf	(btemp+8)^0,f,c
 12494  014558  503D               	movf	(btemp+11)^0,w,c
 12495  01455A  223B               	addwfc	(btemp+9)^0,f,c
 12496                           
 12497                           ;stkvar	_e @ sp[(-10)+8]
 12498  01455C  0EFE               	movlw	-2
 12499  01455E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12500  014564  0EFF               	movlw	-1
 12501  014566  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12502                           
 12503                           ;stkvar	_e @ sp[(-10)+8]
 12504  01456C  0EFF               	movlw	-1
 12505  01456E  BEE3               	btfsc	plusw1,7,c
 12506  014570  D019               	goto	l6441
 12507  014572  0EFF               	movlw	-1
 12508  014574  50E3               	movf	plusw1,w,c
 12509  014576  E108               	bnz	u5130
 12510  014578  0EFE               	movlw	-2
 12511  01457A  006F FF8C  F032    	movff	plusw1,btemp
 12512  014580  0E17               	movlw	23
 12513  014582  5E32               	subwf	btemp^0,f,c
 12514  014584  A0D8               	btfss	status,0,c
 12515  014586  D00E               	goto	l6441
 12516  014588                     u5130:
 12517                           
 12518                           ;stkvar	_x @ sp[(-10)+-4]
 12519  014588  0EF2               	movlw	-14
 12520  01458A  006F FF8C  F032    	movff	plusw1,btemp
 12521  014590  0EF3               	movlw	-13
 12522  014592  006F FF8C  F033    	movff	plusw1,btemp+1
 12523  014598  0EF4               	movlw	-12
 12524  01459A  006F FF8C  F034    	movff	plusw1,btemp+2
 12525  0145A0  0EF5               	movlw	-11
 12526  0145A2  D11F               	goto	L11
 12527  0145A4                     l6441:
 12528                           
 12529                           ;stkvar	_e @ sp[(-10)+8]
 12530  0145A4  0EFF               	movlw	-1
 12531  0145A6  BEE3               	btfsc	plusw1,7,c
 12532  0145A8  D0B4               	goto	l6457
 12533                           
 12534                           ;stkvar	_e @ sp[(-10)+8]
 12535  0145AA  0EFE               	movlw	-2
 12536  0145AC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12537  0145B2  0EFF               	movlw	255
 12538  0145B4  6E36               	movwf	(btemp+4)^0,c
 12539  0145B6  0EFF               	movlw	255
 12540  0145B8  6E37               	movwf	(btemp+5)^0,c
 12541  0145BA  0E7F               	movlw	127
 12542  0145BC  6E38               	movwf	(btemp+6)^0,c
 12543  0145BE  0E00               	movlw	0
 12544  0145C0  6E39               	movwf	(btemp+7)^0,c
 12545  0145C2                     u5155:
 12546  0145C2  663D               	tstfsz	(btemp+11)^0,c
 12547  0145C4  D001               	goto	u5156
 12548  0145C6  D007               	goto	u5157
 12549  0145C8                     u5156:
 12550  0145C8  3439               	rlcf	(btemp+7)^0,w,c
 12551  0145CA  3239               	rrcf	(btemp+7)^0,f,c
 12552  0145CC  3238               	rrcf	(btemp+6)^0,f,c
 12553  0145CE  3237               	rrcf	(btemp+5)^0,f,c
 12554  0145D0  3236               	rrcf	(btemp+4)^0,f,c
 12555  0145D2  2E3D               	decfsz	(btemp+11)^0,f,c
 12556  0145D4  D7F6               	goto	u5155
 12557  0145D6                     u5157:
 12558                           
 12559                           ;stkvar	_m @ sp[(-10)+4]
 12560  0145D6  0EFA               	movlw	-6
 12561  0145D8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12562  0145DE  0EFB               	movlw	-5
 12563  0145E0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12564  0145E6  0EFC               	movlw	-4
 12565  0145E8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12566  0145EE  0EFD               	movlw	-3
 12567  0145F0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12568                           
 12569                           ;stkvar	_m @ sp[(-10)+4]
 12570                           ;stkvar	_u @ sp[(-10)+0]
 12571  0145F6  0EF6               	movlw	-10
 12572  0145F8  006F FF8C  F03A    	movff	plusw1,btemp+8
 12573  0145FE  0EF7               	movlw	-9
 12574  014600  006F FF8C  F03B    	movff	plusw1,btemp+9
 12575  014606  0EF8               	movlw	-8
 12576  014608  006F FF8C  F03C    	movff	plusw1,btemp+10
 12577  01460E  0EF9               	movlw	-7
 12578  014610  006F FF8C  F03D    	movff	plusw1,btemp+11
 12579  014616  0EFA               	movlw	-6
 12580  014618  50E3               	movf	plusw1,w,c
 12581  01461A  163A               	andwf	(btemp+8)^0,f,c
 12582  01461C  0EFB               	movlw	-5
 12583  01461E  50E3               	movf	plusw1,w,c
 12584  014620  163B               	andwf	(btemp+9)^0,f,c
 12585  014622  0EFC               	movlw	-4
 12586  014624  50E3               	movf	plusw1,w,c
 12587  014626  163C               	andwf	(btemp+10)^0,f,c
 12588  014628  0EFD               	movlw	-3
 12589  01462A  50E3               	movf	plusw1,w,c
 12590  01462C  163D               	andwf	(btemp+11)^0,f,c
 12591  01462E  503A               	movf	(btemp+8)^0,w,c
 12592  014630  103B               	iorwf	(btemp+9)^0,w,c
 12593  014632  103C               	iorwf	(btemp+10)^0,w,c
 12594  014634  103D               	iorwf	(btemp+11)^0,w,c
 12595  014636  B4D8               	btfsc	status,2,c
 12596  014638  D7A7               	goto	u5130
 12597                           
 12598                           ;stkvar	_u @ sp[(-10)+0]
 12599  01463A  0EF6               	movlw	-10
 12600  01463C  006F FF8C  F03A    	movff	plusw1,btemp+8
 12601  014642  0EF7               	movlw	-9
 12602  014644  006F FF8C  F03B    	movff	plusw1,btemp+9
 12603  01464A  0EF8               	movlw	-8
 12604  01464C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12605  014652  0EF9               	movlw	-7
 12606  014654  006F FF8C  F03D    	movff	plusw1,btemp+11
 12607  01465A  0E20               	movlw	32
 12608  01465C  D005               	goto	u5170
 12609  01465E                     u5175:
 12610  01465E  90D8               	bcf	status,0,c
 12611  014660  323D               	rrcf	(btemp+11)^0,f,c
 12612  014662  323C               	rrcf	(btemp+10)^0,f,c
 12613  014664  323B               	rrcf	(btemp+9)^0,f,c
 12614  014666  323A               	rrcf	(btemp+8)^0,f,c
 12615  014668                     u5170:
 12616  014668  2EE8               	decfsz	wreg,f,c
 12617  01466A  D7F9               	goto	u5175
 12618  01466C  503A               	movf	(btemp+8)^0,w,c
 12619  01466E  B4D8               	btfsc	status,2,c
 12620  014670  D028               	goto	l6455
 12621                           
 12622                           ;stkvar	_m @ sp[(-10)+4]
 12623                           ;stkvar	_u @ sp[(-10)+0]
 12624  014672  0EF6               	movlw	-10
 12625  014674  50E3               	movf	plusw1,w,c
 12626  014676  6E32               	movwf	btemp^0,c
 12627  014678  0EFA               	movlw	-6
 12628  01467A  50E3               	movf	plusw1,w,c
 12629  01467C  2632               	addwf	btemp^0,f,c
 12630  01467E  0EF6               	movlw	-10
 12631  014680  0060  F0CB  FFE3   	movff	btemp,plusw1
 12632  014686  0EF7               	movlw	-9
 12633  014688  50E3               	movf	plusw1,w,c
 12634  01468A  6E32               	movwf	btemp^0,c
 12635  01468C  0EFB               	movlw	-5
 12636  01468E  50E3               	movf	plusw1,w,c
 12637  014690  2232               	addwfc	btemp^0,f,c
 12638  014692  0EF7               	movlw	-9
 12639  014694  0060  F0CB  FFE3   	movff	btemp,plusw1
 12640  01469A  0EF8               	movlw	-8
 12641  01469C  50E3               	movf	plusw1,w,c
 12642  01469E  6E32               	movwf	btemp^0,c
 12643  0146A0  0EFC               	movlw	-4
 12644  0146A2  50E3               	movf	plusw1,w,c
 12645  0146A4  2232               	addwfc	btemp^0,f,c
 12646  0146A6  0EF8               	movlw	-8
 12647  0146A8  0060  F0CB  FFE3   	movff	btemp,plusw1
 12648  0146AE  0EF9               	movlw	-7
 12649  0146B0  50E3               	movf	plusw1,w,c
 12650  0146B2  6E32               	movwf	btemp^0,c
 12651  0146B4  0EFD               	movlw	-3
 12652  0146B6  50E3               	movf	plusw1,w,c
 12653  0146B8  2232               	addwfc	btemp^0,f,c
 12654  0146BA  0EF9               	movlw	-7
 12655  0146BC  0060  F0CB  FFE3   	movff	btemp,plusw1
 12656  0146C2                     l6455:
 12657                           
 12658                           ;stkvar	_m @ sp[(-10)+4]
 12659  0146C2  0EFA               	movlw	-6
 12660  0146C4  006F FF8C  F03A    	movff	plusw1,btemp+8
 12661  0146CA  0EFB               	movlw	-5
 12662  0146CC  006F FF8C  F03B    	movff	plusw1,btemp+9
 12663  0146D2  0EFC               	movlw	-4
 12664  0146D4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12665  0146DA  0EFD               	movlw	-3
 12666  0146DC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12667  0146E2  1C3A               	comf	(btemp+8)^0,w,c
 12668  0146E4  6E36               	movwf	(btemp+4)^0,c
 12669  0146E6  1C3B               	comf	(btemp+9)^0,w,c
 12670  0146E8  6E37               	movwf	(btemp+5)^0,c
 12671  0146EA  1C3C               	comf	(btemp+10)^0,w,c
 12672  0146EC  6E38               	movwf	(btemp+6)^0,c
 12673  0146EE  1C3D               	comf	(btemp+11)^0,w,c
 12674  0146F0  6E39               	movwf	(btemp+7)^0,c
 12675                           
 12676                           ;stkvar	_u @ sp[(-10)+0]
 12677  0146F2  50E1               	movf	fsr1l,w,c
 12678  0146F4  0FF6               	addlw	-10
 12679  0146F6  6ED9               	movwf	fsr2l,c
 12680  0146F8  50E2               	movf	fsr1h,w,c
 12681  0146FA  6EDA               	movwf	fsr2h,c
 12682  0146FC  0EFF               	movlw	255
 12683  0146FE  22DA               	addwfc	fsr2h,f,c
 12684  014700  5036               	movf	(btemp+4)^0,w,c
 12685  014702  16DE               	andwf	postinc2,f,c
 12686  014704  5037               	movf	(btemp+5)^0,w,c
 12687  014706  16DE               	andwf	postinc2,f,c
 12688  014708  5038               	movf	(btemp+6)^0,w,c
 12689  01470A  16DE               	andwf	postinc2,f,c
 12690  01470C  5039               	movf	(btemp+7)^0,w,c
 12691  01470E  16DE               	andwf	postinc2,f,c
 12692  014710  D05B               	goto	l6465
 12693  014712                     l6457:
 12694                           
 12695                           ;stkvar	_u @ sp[(-10)+0]
 12696  014712  0EF6               	movlw	-10
 12697  014714  006F FF8C  F03A    	movff	plusw1,btemp+8
 12698  01471A  0EF7               	movlw	-9
 12699  01471C  006F FF8C  F03B    	movff	plusw1,btemp+9
 12700  014722  0EF8               	movlw	-8
 12701  014724  006F FF8C  F03C    	movff	plusw1,btemp+10
 12702  01472A  0EF9               	movlw	-7
 12703  01472C  006F FF8C  F03D    	movff	plusw1,btemp+11
 12704  014732  0E20               	movlw	32
 12705  014734  D005               	goto	u5190
 12706  014736                     u5195:
 12707  014736  90D8               	bcf	status,0,c
 12708  014738  323D               	rrcf	(btemp+11)^0,f,c
 12709  01473A  323C               	rrcf	(btemp+10)^0,f,c
 12710  01473C  323B               	rrcf	(btemp+9)^0,f,c
 12711  01473E  323A               	rrcf	(btemp+8)^0,f,c
 12712  014740                     u5190:
 12713  014740  2EE8               	decfsz	wreg,f,c
 12714  014742  D7F9               	goto	u5195
 12715  014744  663A               	tstfsz	(btemp+8)^0,c
 12716  014746  D009               	goto	l6461
 12717                           
 12718                           ;stkvar	_u @ sp[(-10)+0]
 12719  014748  0EF6               	movlw	-10
 12720  01474A  6AE3               	clrf	plusw1,c
 12721  01474C  0EF7               	movlw	-9
 12722  01474E  6AE3               	clrf	plusw1,c
 12723  014750  0EF8               	movlw	-8
 12724  014752  6AE3               	clrf	plusw1,c
 12725  014754  0EF9               	movlw	-7
 12726  014756  6AE3               	clrf	plusw1,c
 12727  014758  D037               	goto	l6465
 12728  01475A                     l6461:
 12729                           
 12730                           ;stkvar	_u @ sp[(-10)+0]
 12731  01475A  0EF6               	movlw	-10
 12732  01475C  006F FF8C  F03A    	movff	plusw1,btemp+8
 12733  014762  0EF7               	movlw	-9
 12734  014764  006F FF8C  F03B    	movff	plusw1,btemp+9
 12735  01476A  0EF8               	movlw	-8
 12736  01476C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12737  014772  0EF9               	movlw	-7
 12738  014774  006F FF8C  F03D    	movff	plusw1,btemp+11
 12739  01477A  90D8               	bcf	status,0,c
 12740  01477C  343A               	rlcf	(btemp+8)^0,w,c
 12741  01477E  6E36               	movwf	(btemp+4)^0,c
 12742  014780  343B               	rlcf	(btemp+9)^0,w,c
 12743  014782  6E37               	movwf	(btemp+5)^0,c
 12744  014784  343C               	rlcf	(btemp+10)^0,w,c
 12745  014786  6E38               	movwf	(btemp+6)^0,c
 12746  014788  343D               	rlcf	(btemp+11)^0,w,c
 12747  01478A  6E39               	movwf	(btemp+7)^0,c
 12748  01478C  5036               	movf	(btemp+4)^0,w,c
 12749  01478E  1037               	iorwf	(btemp+5)^0,w,c
 12750  014790  1038               	iorwf	(btemp+6)^0,w,c
 12751  014792  1039               	iorwf	(btemp+7)^0,w,c
 12752  014794  B4D8               	btfsc	status,2,c
 12753  014796  D018               	goto	l6465
 12754  014798  0E00               	movlw	0
 12755  01479A  6E3A               	movwf	(btemp+8)^0,c
 12756  01479C  0E00               	movlw	0
 12757  01479E  6E3B               	movwf	(btemp+9)^0,c
 12758  0147A0  0E80               	movlw	128
 12759  0147A2  6E3C               	movwf	(btemp+10)^0,c
 12760  0147A4  0EBF               	movlw	191
 12761  0147A6  6E3D               	movwf	(btemp+11)^0,c
 12762                           
 12763                           ;stkvar	_u @ sp[(-10)+0]
 12764  0147A8  0EF6               	movlw	-10
 12765  0147AA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12766  0147B0  0EF7               	movlw	-9
 12767  0147B2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12768  0147B8  0EF8               	movlw	-8
 12769  0147BA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12770  0147C0  0EF9               	movlw	-7
 12771  0147C2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12772  0147C8                     l6465:
 12773                           
 12774                           ;stkvar	_u @ sp[(-10)+0]
 12775  0147C8  0EF6               	movlw	-10
 12776  0147CA  006F FF8C  F032    	movff	plusw1,btemp
 12777  0147D0  0EF7               	movlw	-9
 12778  0147D2  006F FF8C  F033    	movff	plusw1,btemp+1
 12779  0147D8  0EF8               	movlw	-8
 12780  0147DA  006F FF8C  F034    	movff	plusw1,btemp+2
 12781  0147E0  0EF9               	movlw	-7
 12782  0147E2                     L11:
 12783  0147E2  006F FF8C  F035    	movff	plusw1,btemp+3
 12784                           
 12785                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12786  0147E8  0EF2               	movlw	242
 12787  0147EA  26E1               	addwf	fsr1l,f,c
 12788  0147EC  0EFF               	movlw	255
 12789  0147EE  22E2               	addwfc	fsr1h,f,c
 12790  0147F0  0012               	return		;funcret
 12791  0147F2                     __end_of_floorf:
 12792                           	opt callstack 0
 12793                           
 12794 ;; *************** function ___fpclassifyf *****************
 12795 ;; Defined at:
 12796 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12797 ;; Parameters:    Size  Location     Type
 12798 ;;  x               4  [STACK] float 
 12799 ;; Auto vars:     Size  Location     Type
 12800 ;;  u               4  [STACK] struct .
 12801 ;;  e               2  [STACK] int 
 12802 ;; Return value:  Size  Location     Type
 12803 ;;                  2  [STACK] int 
 12804 ;; Registers used:
 12805 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12806 ;; Tracked objects:
 12807 ;;		On entry : 0/5
 12808 ;;		On exit  : 0/0
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12815 ;;Total ram usage:        0 bytes
 12816 ;; Hardware stack levels used:    1
 12817 ;; Hardware stack levels required when called:    6
 12818 ;; This function calls:
 12819 ;;		Nothing
 12820 ;; This function is called by:
 12821 ;;		_efgtoa
 12822 ;; This function uses a reentrant model
 12823 ;;
 12824                           
 12825                           	psect	text48
 12826  015E96                     __ptext48:
 12827                           	opt callstack 0
 12828  015E96                     ___fpclassifyf:
 12829                           	opt callstack 0
 12830                           
 12831                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12832  015E96  0E06               	movlw	6
 12833  015E98  26E1               	addwf	fsr1l,f,c
 12834  015E9A  0E00               	movlw	0
 12835  015E9C  22E2               	addwfc	fsr1h,f,c
 12836                           
 12837                           ;incstack = 0
 12838  015E9E  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 12839  015EA4  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 12840  015EAA  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 12841  015EB0  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 12842                           
 12843                           ;stkvar	_u @ sp[(-6)+0]
 12844  015EB6  0EFA               	movlw	-6
 12845  015EB8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12846  015EBE  0EFB               	movlw	-5
 12847  015EC0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12848  015EC6  0EFC               	movlw	-4
 12849  015EC8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12850  015ECE  0EFD               	movlw	-3
 12851  015ED0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12852                           
 12853                           ;stkvar	_x @ sp[(-6)+-4]
 12854  015ED6  0EF6               	movlw	-10
 12855  015ED8  006F FF8C  F03A    	movff	plusw1,btemp+8
 12856  015EDE  0EF7               	movlw	-9
 12857  015EE0  006F FF8C  F03B    	movff	plusw1,btemp+9
 12858  015EE6  0EF8               	movlw	-8
 12859  015EE8  006F FF8C  F03C    	movff	plusw1,btemp+10
 12860  015EEE  0EF9               	movlw	-7
 12861  015EF0  006F FF8C  F03D    	movff	plusw1,btemp+11
 12862                           
 12863                           ;stkvar	_u @ sp[(-6)+0]
 12864  015EF6  0EFA               	movlw	-6
 12865  015EF8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12866  015EFE  0EFB               	movlw	-5
 12867  015F00  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12868  015F06  0EFC               	movlw	-4
 12869  015F08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12870  015F0E  0EFD               	movlw	-3
 12871  015F10  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12872                           
 12873                           ;stkvar	_u @ sp[(-6)+0]
 12874  015F16  0EFA               	movlw	-6
 12875  015F18  006F FF8C  F03A    	movff	plusw1,btemp+8
 12876  015F1E  0EFB               	movlw	-5
 12877  015F20  006F FF8C  F03B    	movff	plusw1,btemp+9
 12878  015F26  0EFC               	movlw	-4
 12879  015F28  006F FF8C  F03C    	movff	plusw1,btemp+10
 12880  015F2E  0EFD               	movlw	-3
 12881  015F30  006F FF8C  F03D    	movff	plusw1,btemp+11
 12882  015F36  0E18               	movlw	24
 12883  015F38  D005               	goto	u5000
 12884  015F3A                     u5005:
 12885  015F3A  90D8               	bcf	status,0,c
 12886  015F3C  323D               	rrcf	(btemp+11)^0,f,c
 12887  015F3E  323C               	rrcf	(btemp+10)^0,f,c
 12888  015F40  323B               	rrcf	(btemp+9)^0,f,c
 12889  015F42  323A               	rrcf	(btemp+8)^0,f,c
 12890  015F44                     u5000:
 12891  015F44  2EE8               	decfsz	wreg,f,c
 12892  015F46  D7F9               	goto	u5005
 12893  015F48  0060  F0E8  F038   	movff	btemp+8,btemp+6
 12894  015F4E  0060  F0EC  F039   	movff	btemp+9,btemp+7
 12895  015F54  0EFF               	movlw	255
 12896  015F56  1638               	andwf	(btemp+6)^0,f,c
 12897  015F58  0E00               	movlw	0
 12898  015F5A  1639               	andwf	(btemp+7)^0,f,c
 12899                           
 12900                           ;stkvar	_e @ sp[(-6)+4]
 12901  015F5C  0EFE               	movlw	-2
 12902  015F5E  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12903  015F64  0EFF               	movlw	-1
 12904  015F66  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12905                           
 12906                           ;stkvar	_e @ sp[(-6)+4]
 12907  015F6C  0EFE               	movlw	-2
 12908  015F6E  006F FF8C  F032    	movff	plusw1,btemp
 12909  015F74  0EFF               	movlw	-1
 12910  015F76  50E3               	movf	plusw1,w,c
 12911  015F78  1032               	iorwf	btemp^0,w,c
 12912  015F7A  A4D8               	btfss	status,2,c
 12913  015F7C  D023               	goto	l6403
 12914                           
 12915                           ;stkvar	_u @ sp[(-6)+0]
 12916  015F7E  0EFA               	movlw	-6
 12917  015F80  006F FF8C  F03A    	movff	plusw1,btemp+8
 12918  015F86  0EFB               	movlw	-5
 12919  015F88  006F FF8C  F03B    	movff	plusw1,btemp+9
 12920  015F8E  0EFC               	movlw	-4
 12921  015F90  006F FF8C  F03C    	movff	plusw1,btemp+10
 12922  015F96  0EFD               	movlw	-3
 12923  015F98  006F FF8C  F03D    	movff	plusw1,btemp+11
 12924  015F9E  90D8               	bcf	status,0,c
 12925  015FA0  343A               	rlcf	(btemp+8)^0,w,c
 12926  015FA2  6E36               	movwf	(btemp+4)^0,c
 12927  015FA4  343B               	rlcf	(btemp+9)^0,w,c
 12928  015FA6  6E37               	movwf	(btemp+5)^0,c
 12929  015FA8  343C               	rlcf	(btemp+10)^0,w,c
 12930  015FAA  6E38               	movwf	(btemp+6)^0,c
 12931  015FAC  343D               	rlcf	(btemp+11)^0,w,c
 12932  015FAE  6E39               	movwf	(btemp+7)^0,c
 12933  015FB0  5036               	movf	(btemp+4)^0,w,c
 12934  015FB2  1037               	iorwf	(btemp+5)^0,w,c
 12935  015FB4  1038               	iorwf	(btemp+6)^0,w,c
 12936  015FB6  1039               	iorwf	(btemp+7)^0,w,c
 12937  015FB8  A4D8               	btfss	status,2,c
 12938  015FBA  D002               	goto	l6399
 12939  015FBC  0E02               	movlw	2
 12940  015FBE  D02E               	goto	L12
 12941  015FC0                     l6399:
 12942  015FC0  0E03               	movlw	3
 12943  015FC2  D02C               	goto	L12
 12944  015FC4                     l6403:
 12945                           
 12946                           ;stkvar	_e @ sp[(-6)+4]
 12947  015FC4  0EFE               	movlw	-2
 12948  015FC6  28E3               	incf	plusw1,w,c
 12949  015FC8  E128               	bnz	l6409
 12950  015FCA  0EFF               	movlw	-1
 12951  015FCC  50E3               	movf	plusw1,w,c
 12952  015FCE  A4D8               	btfss	status,2,c
 12953  015FD0  D024               	goto	l6409
 12954                           
 12955                           ;stkvar	_u @ sp[(-6)+0]
 12956  015FD2  0EFA               	movlw	-6
 12957  015FD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 12958  015FDA  0EFB               	movlw	-5
 12959  015FDC  006F FF8C  F03B    	movff	plusw1,btemp+9
 12960  015FE2  0EFC               	movlw	-4
 12961  015FE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12962  015FEA  0EFD               	movlw	-3
 12963  015FEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12964  015FF2  0E09               	movlw	9
 12965  015FF4                     u5045:
 12966  015FF4  90D8               	bcf	status,0,c
 12967  015FF6  363A               	rlcf	(btemp+8)^0,f,c
 12968  015FF8  363B               	rlcf	(btemp+9)^0,f,c
 12969  015FFA  363C               	rlcf	(btemp+10)^0,f,c
 12970  015FFC  363D               	rlcf	(btemp+11)^0,f,c
 12971  015FFE  2EE8               	decfsz	wreg,f,c
 12972  016000  D7F9               	goto	u5045
 12973  016002  503A               	movf	(btemp+8)^0,w,c
 12974  016004  103B               	iorwf	(btemp+9)^0,w,c
 12975  016006  103C               	iorwf	(btemp+10)^0,w,c
 12976  016008  103D               	iorwf	(btemp+11)^0,w,c
 12977  01600A  A4D8               	btfss	status,2,c
 12978  01600C  D002               	goto	u5050
 12979  01600E  0E01               	movlw	1
 12980  016010  D001               	goto	u5060
 12981  016012                     u5050:
 12982  016012  0E00               	movlw	0
 12983  016014                     u5060:
 12984  016014  6E32               	movwf	btemp^0,c
 12985  016016  6A33               	clrf	(btemp+1)^0,c
 12986  016018  D004               	goto	l2727
 12987  01601A                     l6409:
 12988  01601A  0E04               	movlw	4
 12989  01601C                     L12:
 12990  01601C  6E32               	movwf	btemp^0,c
 12991  01601E  0E00               	movlw	0
 12992  016020  6E33               	movwf	(btemp+1)^0,c
 12993  016022                     l2727:
 12994                           
 12995                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 12996  016022  0EF6               	movlw	246
 12997  016024  26E1               	addwf	fsr1l,f,c
 12998  016026  0EFF               	movlw	255
 12999  016028  22E2               	addwfc	fsr1h,f,c
 13000  01602A  0012               	return		;funcret
 13001  01602C                     __end_of___fpclassifyf:
 13002                           	opt callstack 0
 13003                           
 13004 ;; *************** function ___fltol *****************
 13005 ;; Defined at:
 13006 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13007 ;; Parameters:    Size  Location     Type
 13008 ;;  f1              4  [STACK] int 
 13009 ;; Auto vars:     Size  Location     Type
 13010 ;;  exp1            1  [STACK] unsigned char 
 13011 ;;  sign1           1  [STACK] unsigned char 
 13012 ;; Return value:  Size  Location     Type
 13013 ;;                  4  [STACK] long 
 13014 ;; Registers used:
 13015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13016 ;; Tracked objects:
 13017 ;;		On entry : 0/5
 13018 ;;		On exit  : 0/0
 13019 ;;		Unchanged: 0/0
 13020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13025 ;;Total ram usage:        0 bytes
 13026 ;; Hardware stack levels used:    1
 13027 ;; Hardware stack levels required when called:    6
 13028 ;; This function calls:
 13029 ;;		Nothing
 13030 ;; This function is called by:
 13031 ;;		_efgtoa
 13032 ;; This function uses a reentrant model
 13033 ;;
 13034                           
 13035                           	psect	text49
 13036  01602C                     __ptext49:
 13037                           	opt callstack 0
 13038  01602C                     ___fltol:
 13039                           	opt callstack 0
 13040                           
 13041                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13042  01602C  52E6               	movf	postinc1,f,c
 13043  01602E  52E6               	movf	postinc1,f,c
 13044                           
 13045                           ;stkvar	_f1 @ sp[(-2)+-4]
 13046                           
 13047                           ;incstack = 0
 13048  016030  0EFA               	movlw	-6
 13049  016032  006F FF8C  F03A    	movff	plusw1,btemp+8
 13050  016038  0EFB               	movlw	-5
 13051  01603A  006F FF8C  F03B    	movff	plusw1,btemp+9
 13052  016040  0EFC               	movlw	-4
 13053  016042  006F FF8C  F03C    	movff	plusw1,btemp+10
 13054  016048  0EFD               	movlw	-3
 13055  01604A  006F FF8C  F03D    	movff	plusw1,btemp+11
 13056  016050  0E18               	movlw	24
 13057  016052  D005               	goto	u6210
 13058  016054                     u6215:
 13059  016054  90D8               	bcf	status,0,c
 13060  016056  323D               	rrcf	(btemp+11)^0,f,c
 13061  016058  323C               	rrcf	(btemp+10)^0,f,c
 13062  01605A  323B               	rrcf	(btemp+9)^0,f,c
 13063  01605C  323A               	rrcf	(btemp+8)^0,f,c
 13064  01605E                     u6210:
 13065  01605E  2EE8               	decfsz	wreg,f,c
 13066  016060  D7F9               	goto	u6215
 13067                           
 13068                           ;stkvar	_exp1 @ sp[(-2)+0]
 13069  016062  0EFE               	movlw	-2
 13070  016064  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13071  01606A  0EFE               	movlw	-2
 13072  01606C  50E3               	movf	plusw1,w,c
 13073  01606E  A4D8               	btfss	status,2,c
 13074  016070  D006               	goto	l7029
 13075  016072                     u6220:
 13076  016072  0E00               	movlw	0
 13077  016074  6E32               	movwf	btemp^0,c
 13078  016076  6A33               	clrf	(btemp+1)^0,c
 13079  016078  6A34               	clrf	(btemp+2)^0,c
 13080  01607A  6A35               	clrf	(btemp+3)^0,c
 13081  01607C  D08B               	goto	l2343
 13082  01607E                     l7029:
 13083                           
 13084                           ;stkvar	_f1 @ sp[(-2)+-4]
 13085  01607E  0EFA               	movlw	-6
 13086  016080  006F FF8C  F03A    	movff	plusw1,btemp+8
 13087  016086  0EFB               	movlw	-5
 13088  016088  006F FF8C  F03B    	movff	plusw1,btemp+9
 13089  01608E  0EFC               	movlw	-4
 13090  016090  006F FF8C  F03C    	movff	plusw1,btemp+10
 13091  016096  0EFD               	movlw	-3
 13092  016098  006F FF8C  F03D    	movff	plusw1,btemp+11
 13093  01609E  0E20               	movlw	32
 13094  0160A0  D005               	goto	u6230
 13095  0160A2                     u6235:
 13096  0160A2  90D8               	bcf	status,0,c
 13097  0160A4  323D               	rrcf	(btemp+11)^0,f,c
 13098  0160A6  323C               	rrcf	(btemp+10)^0,f,c
 13099  0160A8  323B               	rrcf	(btemp+9)^0,f,c
 13100  0160AA  323A               	rrcf	(btemp+8)^0,f,c
 13101  0160AC                     u6230:
 13102  0160AC  2EE8               	decfsz	wreg,f,c
 13103  0160AE  D7F9               	goto	u6235
 13104                           
 13105                           ;stkvar	_sign1 @ sp[(-2)+1]
 13106  0160B0  0EFF               	movlw	-1
 13107  0160B2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13108                           
 13109                           ;stkvar	_f1 @ sp[(-2)+-4]
 13110  0160B8  0EFC               	movlw	-4
 13111  0160BA  8EE3               	bsf	plusw1,7,c
 13112                           
 13113                           ;stkvar	_f1 @ sp[(-2)+-4]
 13114  0160BC  50E1               	movf	fsr1l,w,c
 13115  0160BE  0FFA               	addlw	-6
 13116  0160C0  6ED9               	movwf	fsr2l,c
 13117  0160C2  50E2               	movf	fsr1h,w,c
 13118  0160C4  6EDA               	movwf	fsr2h,c
 13119  0160C6  0EFF               	movlw	255
 13120  0160C8  22DA               	addwfc	fsr2h,f,c
 13121  0160CA  0EFF               	movlw	255
 13122  0160CC  16DE               	andwf	postinc2,f,c
 13123  0160CE  0EFF               	movlw	255
 13124  0160D0  16DE               	andwf	postinc2,f,c
 13125  0160D2  0EFF               	movlw	255
 13126  0160D4  16DE               	andwf	postinc2,f,c
 13127  0160D6  0E00               	movlw	0
 13128  0160D8  16DE               	andwf	postinc2,f,c
 13129                           
 13130                           ;stkvar	_exp1 @ sp[(-2)+0]
 13131  0160DA  0EFE               	movlw	-2
 13132  0160DC  006F FF8C  F032    	movff	plusw1,btemp
 13133  0160E2  0E96               	movlw	150
 13134  0160E4  5E32               	subwf	btemp^0,f,c
 13135  0160E6  0EFE               	movlw	-2
 13136  0160E8  0060  F0CB  FFE3   	movff	btemp,plusw1
 13137                           
 13138                           ;stkvar	_exp1 @ sp[(-2)+0]
 13139  0160EE  0EFE               	movlw	-2
 13140  0160F0  AEE3               	btfss	plusw1,7,c
 13141  0160F2  D014               	goto	l7047
 13142                           
 13143                           ;stkvar	_exp1 @ sp[(-2)+0]
 13144  0160F4  0EFE               	movlw	-2
 13145  0160F6  50E3               	movf	plusw1,w,c
 13146  0160F8  0A80               	xorlw	128
 13147  0160FA  0F97               	addlw	151
 13148  0160FC  A0D8               	btfss	status,0,c
 13149  0160FE  D7B9               	goto	u6220
 13150  016100                     l7045:
 13151                           
 13152                           ;stkvar	_f1 @ sp[(-2)+-4]
 13153  016100  90D8               	bcf	status,0,c
 13154  016102  0EFD               	movlw	-3
 13155  016104  32E3               	rrcf	plusw1,f,c
 13156  016106  0EFC               	movlw	-4
 13157  016108  32E3               	rrcf	plusw1,f,c
 13158  01610A  0EFB               	movlw	-5
 13159  01610C  32E3               	rrcf	plusw1,f,c
 13160  01610E  0EFA               	movlw	-6
 13161  016110  32E3               	rrcf	plusw1,f,c
 13162                           
 13163                           ;stkvar	_exp1 @ sp[(-2)+0]
 13164  016112  0EFE               	movlw	-2
 13165  016114  2AE3               	incf	plusw1,f,c
 13166  016116  B4D8               	btfsc	status,2,c
 13167  016118  D018               	goto	u6280
 13168  01611A  D7F2               	goto	l7045
 13169  01611C                     l7047:
 13170                           
 13171                           ;stkvar	_exp1 @ sp[(-2)+0]
 13172  01611C  0EFE               	movlw	-2
 13173  01611E  006F FF8C  F032    	movff	plusw1,btemp
 13174  016124  0E1F               	movlw	31
 13175  016126  6432               	cpfsgt	btemp^0,c
 13176  016128  D00C               	goto	l7055
 13177  01612A  D7A3               	goto	u6220
 13178  01612C                     l7053:
 13179                           
 13180                           ;stkvar	_f1 @ sp[(-2)+-4]
 13181  01612C  90D8               	bcf	status,0,c
 13182  01612E  0EFA               	movlw	-6
 13183  016130  36E3               	rlcf	plusw1,f,c
 13184  016132  0EFB               	movlw	-5
 13185  016134  36E3               	rlcf	plusw1,f,c
 13186  016136  0EFC               	movlw	-4
 13187  016138  36E3               	rlcf	plusw1,f,c
 13188  01613A  0EFD               	movlw	-3
 13189  01613C  36E3               	rlcf	plusw1,f,c
 13190                           
 13191                           ;stkvar	_exp1 @ sp[(-2)+0]
 13192  01613E  0EFE               	movlw	-2
 13193  016140  06E3               	decf	plusw1,f,c
 13194  016142                     l7055:
 13195                           
 13196                           ;stkvar	_exp1 @ sp[(-2)+0]
 13197  016142  0EFE               	movlw	-2
 13198  016144  50E3               	movf	plusw1,w,c
 13199  016146  A4D8               	btfss	status,2,c
 13200  016148  D7F1               	goto	l7053
 13201  01614A                     u6280:
 13202                           
 13203                           ;stkvar	_sign1 @ sp[(-2)+1]
 13204  01614A  0EFF               	movlw	-1
 13205  01614C  50E3               	movf	plusw1,w,c
 13206  01614E  B4D8               	btfsc	status,2,c
 13207  016150  D011               	goto	u6300
 13208                           
 13209                           ;stkvar	_f1 @ sp[(-2)+-4]
 13210                           ;stkvar	_f1 @ sp[(-2)+-4]
 13211  016152  0EFA               	movlw	-6
 13212  016154  6CE3               	negf	plusw1,c
 13213  016156  0EFB               	movlw	-5
 13214  016158  1EE3               	comf	plusw1,f,c
 13215  01615A  0EFC               	movlw	-4
 13216  01615C  1EE3               	comf	plusw1,f,c
 13217  01615E  0EFD               	movlw	-3
 13218  016160  1EE3               	comf	plusw1,f,c
 13219  016162  E308               	bnc	u6300
 13220  016164  0EFB               	movlw	-5
 13221  016166  2AE3               	incf	plusw1,f,c
 13222  016168  E305               	bnc	u6300
 13223  01616A  0EFC               	movlw	-4
 13224  01616C  2AE3               	incf	plusw1,f,c
 13225  01616E  E302               	bnc	u6300
 13226  016170  0EFD               	movlw	-3
 13227  016172  2AE3               	incf	plusw1,f,c
 13228  016174                     u6300:
 13229                           
 13230                           ;stkvar	_f1 @ sp[(-2)+-4]
 13231  016174  0EFA               	movlw	-6
 13232  016176  006F FF8C  F032    	movff	plusw1,btemp
 13233  01617C  0EFB               	movlw	-5
 13234  01617E  006F FF8C  F033    	movff	plusw1,btemp+1
 13235  016184  0EFC               	movlw	-4
 13236  016186  006F FF8C  F034    	movff	plusw1,btemp+2
 13237  01618C  0EFD               	movlw	-3
 13238  01618E  006F FF8C  F035    	movff	plusw1,btemp+3
 13239  016194                     l2343:
 13240                           
 13241                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13242  016194  0EFA               	movlw	250
 13243  016196  26E1               	addwf	fsr1l,f,c
 13244  016198  0EFF               	movlw	255
 13245  01619A  22E2               	addwfc	fsr1h,f,c
 13246  01619C  0012               	return		;funcret
 13247  01619E                     __end_of___fltol:
 13248                           	opt callstack 0
 13249                           
 13250 ;; *************** function ___flneg *****************
 13251 ;; Defined at:
 13252 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;  f1              4  [STACK] long 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  4  [STACK] long 
 13259 ;; Registers used:
 13260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/5
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13270 ;;Total ram usage:        0 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:    6
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_efgtoa
 13277 ;; This function uses a reentrant model
 13278 ;;
 13279                           
 13280                           	psect	text50
 13281  017C7C                     __ptext50:
 13282                           	opt callstack 0
 13283  017C7C                     ___flneg:
 13284                           	opt callstack 17
 13285                           
 13286                           ;stkvar	_f1 @ sp[(0)+-4]
 13287                           
 13288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13289                           ;incstack = 0
 13290  017C7C  0EFC               	movlw	-4
 13291  017C7E  50E3               	movf	plusw1,w,c
 13292  017C80  E10A               	bnz	u6200
 13293  017C82  0EFD               	movlw	-3
 13294  017C84  50E3               	movf	plusw1,w,c
 13295  017C86  E107               	bnz	u6200
 13296  017C88  0EFE               	movlw	-2
 13297  017C8A  50E3               	movf	plusw1,w,c
 13298  017C8C  E104               	bnz	u6200
 13299  017C8E  0EFF               	movlw	-1
 13300  017C90  50E3               	movf	plusw1,w,c
 13301  017C92  B4D8               	btfsc	status,2,c
 13302  017C94  D002               	goto	l7019
 13303  017C96                     u6200:
 13304                           
 13305                           ;stkvar	_f1 @ sp[(0)+-4]
 13306  017C96  0EFF               	movlw	-1
 13307  017C98  7EE3               	btg	plusw1,7,c
 13308  017C9A                     l7019:
 13309                           
 13310                           ;stkvar	_f1 @ sp[(0)+-4]
 13311  017C9A  0EFC               	movlw	-4
 13312  017C9C  006F FF8C  F032    	movff	plusw1,btemp
 13313  017CA2  0EFD               	movlw	-3
 13314  017CA4  006F FF8C  F033    	movff	plusw1,btemp+1
 13315  017CAA  0EFE               	movlw	-2
 13316  017CAC  006F FF8C  F034    	movff	plusw1,btemp+2
 13317  017CB2  0EFF               	movlw	-1
 13318  017CB4  006F FF8C  F035    	movff	plusw1,btemp+3
 13319                           
 13320                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13321  017CBA  52E5               	movf	postdec1,f,c
 13322  017CBC  52E5               	movf	postdec1,f,c
 13323  017CBE  52E5               	movf	postdec1,f,c
 13324  017CC0  52E5               	movf	postdec1,f,c
 13325  017CC2  0012               	return		;funcret
 13326  017CC4                     __end_of___flneg:
 13327                           	opt callstack 0
 13328                           
 13329 ;; *************** function ___flge *****************
 13330 ;; Defined at:
 13331 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 13332 ;; Parameters:    Size  Location     Type
 13333 ;;  ff1             4  [STACK] long 
 13334 ;;  ff2             4  [STACK] long 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;		None
 13337 ;; Return value:  Size  Location     Type
 13338 ;;		None               void
 13339 ;; Registers used:
 13340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/5
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13350 ;;Total ram usage:        0 bytes
 13351 ;; Hardware stack levels used:    1
 13352 ;; Hardware stack levels required when called:    6
 13353 ;; This function calls:
 13354 ;;		Nothing
 13355 ;; This function is called by:
 13356 ;;		_efgtoa
 13357 ;; This function uses a reentrant model
 13358 ;;
 13359                           
 13360                           	psect	text51
 13361  01619E                     __ptext51:
 13362                           	opt callstack 0
 13363  01619E                     ___flge:
 13364                           	opt callstack 17
 13365                           
 13366                           ;stkvar	_ff1 @ sp[(0)+-4]
 13367                           
 13368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13369                           ;incstack = 0
 13370  01619E  50E1               	movf	fsr1l,w,c
 13371  0161A0  0FFC               	addlw	-4
 13372  0161A2  6ED9               	movwf	fsr2l,c
 13373  0161A4  50E2               	movf	fsr1h,w,c
 13374  0161A6  6EDA               	movwf	fsr2h,c
 13375  0161A8  0EFF               	movlw	255
 13376  0161AA  22DA               	addwfc	fsr2h,f,c
 13377  0161AC  0E00               	movlw	0
 13378  0161AE  14DE               	andwf	postinc2,w,c
 13379  0161B0  6E3A               	movwf	(btemp+8)^0,c
 13380  0161B2  0E00               	movlw	0
 13381  0161B4  14DE               	andwf	postinc2,w,c
 13382  0161B6  6E3B               	movwf	(btemp+9)^0,c
 13383  0161B8  0E80               	movlw	128
 13384  0161BA  14DE               	andwf	postinc2,w,c
 13385  0161BC  6E3C               	movwf	(btemp+10)^0,c
 13386  0161BE  0E7F               	movlw	127
 13387  0161C0  14DE               	andwf	postinc2,w,c
 13388  0161C2  6E3D               	movwf	(btemp+11)^0,c
 13389  0161C4  503A               	movf	(btemp+8)^0,w,c
 13390  0161C6  103B               	iorwf	(btemp+9)^0,w,c
 13391  0161C8  103C               	iorwf	(btemp+10)^0,w,c
 13392  0161CA  103D               	iorwf	(btemp+11)^0,w,c
 13393  0161CC  A4D8               	btfss	status,2,c
 13394  0161CE  D008               	goto	l6993
 13395                           
 13396                           ;stkvar	_ff1 @ sp[(0)+-4]
 13397  0161D0  0EFC               	movlw	-4
 13398  0161D2  6AE3               	clrf	plusw1,c
 13399  0161D4  0EFD               	movlw	-3
 13400  0161D6  6AE3               	clrf	plusw1,c
 13401  0161D8  0EFE               	movlw	-2
 13402  0161DA  6AE3               	clrf	plusw1,c
 13403  0161DC  0EFF               	movlw	-1
 13404  0161DE  6AE3               	clrf	plusw1,c
 13405  0161E0                     l6993:
 13406                           
 13407                           ;stkvar	_ff2 @ sp[(0)+-8]
 13408  0161E0  50E1               	movf	fsr1l,w,c
 13409  0161E2  0FF8               	addlw	-8
 13410  0161E4  6ED9               	movwf	fsr2l,c
 13411  0161E6  50E2               	movf	fsr1h,w,c
 13412  0161E8  6EDA               	movwf	fsr2h,c
 13413  0161EA  0EFF               	movlw	255
 13414  0161EC  22DA               	addwfc	fsr2h,f,c
 13415  0161EE  0E00               	movlw	0
 13416  0161F0  14DE               	andwf	postinc2,w,c
 13417  0161F2  6E3A               	movwf	(btemp+8)^0,c
 13418  0161F4  0E00               	movlw	0
 13419  0161F6  14DE               	andwf	postinc2,w,c
 13420  0161F8  6E3B               	movwf	(btemp+9)^0,c
 13421  0161FA  0E80               	movlw	128
 13422  0161FC  14DE               	andwf	postinc2,w,c
 13423  0161FE  6E3C               	movwf	(btemp+10)^0,c
 13424  016200  0E7F               	movlw	127
 13425  016202  14DE               	andwf	postinc2,w,c
 13426  016204  6E3D               	movwf	(btemp+11)^0,c
 13427  016206  503A               	movf	(btemp+8)^0,w,c
 13428  016208  103B               	iorwf	(btemp+9)^0,w,c
 13429  01620A  103C               	iorwf	(btemp+10)^0,w,c
 13430  01620C  103D               	iorwf	(btemp+11)^0,w,c
 13431  01620E  A4D8               	btfss	status,2,c
 13432  016210  D008               	goto	l2309
 13433                           
 13434                           ;stkvar	_ff2 @ sp[(0)+-8]
 13435  016212  0EF8               	movlw	-8
 13436  016214  6AE3               	clrf	plusw1,c
 13437  016216  0EF9               	movlw	-7
 13438  016218  6AE3               	clrf	plusw1,c
 13439  01621A  0EFA               	movlw	-6
 13440  01621C  6AE3               	clrf	plusw1,c
 13441  01621E  0EFB               	movlw	-5
 13442  016220  6AE3               	clrf	plusw1,c
 13443  016222                     l2309:
 13444                           
 13445                           ;stkvar	_ff1 @ sp[(0)+-4]
 13446  016222  0EFF               	movlw	-1
 13447  016224  AEE3               	btfss	plusw1,7,c
 13448  016226  D024               	goto	l6999
 13449                           
 13450                           ;stkvar	_ff1 @ sp[(0)+-4]
 13451  016228  0E00               	movlw	0
 13452  01622A  6E3A               	movwf	(btemp+8)^0,c
 13453  01622C  0E00               	movlw	0
 13454  01622E  6E3B               	movwf	(btemp+9)^0,c
 13455  016230  0E00               	movlw	0
 13456  016232  6E3C               	movwf	(btemp+10)^0,c
 13457  016234  0E80               	movlw	128
 13458  016236  6E3D               	movwf	(btemp+11)^0,c
 13459  016238  0EFC               	movlw	-4
 13460  01623A  50E3               	movf	plusw1,w,c
 13461  01623C  5E3A               	subwf	(btemp+8)^0,f,c
 13462  01623E  0EFD               	movlw	-3
 13463  016240  50E3               	movf	plusw1,w,c
 13464  016242  5A3B               	subwfb	(btemp+9)^0,f,c
 13465  016244  0EFE               	movlw	-2
 13466  016246  50E3               	movf	plusw1,w,c
 13467  016248  5A3C               	subwfb	(btemp+10)^0,f,c
 13468  01624A  0EFF               	movlw	-1
 13469  01624C  50E3               	movf	plusw1,w,c
 13470  01624E  5A3D               	subwfb	(btemp+11)^0,f,c
 13471                           
 13472                           ;stkvar	_ff1 @ sp[(0)+-4]
 13473  016250  0EFC               	movlw	-4
 13474  016252  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13475  016258  0EFD               	movlw	-3
 13476  01625A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13477  016260  0EFE               	movlw	-2
 13478  016262  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13479  016268  0EFF               	movlw	-1
 13480  01626A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13481  016270                     l6999:
 13482                           
 13483                           ;stkvar	_ff2 @ sp[(0)+-8]
 13484  016270  0EFB               	movlw	-5
 13485  016272  AEE3               	btfss	plusw1,7,c
 13486  016274  D024               	goto	l7003
 13487                           
 13488                           ;stkvar	_ff2 @ sp[(0)+-8]
 13489  016276  0E00               	movlw	0
 13490  016278  6E3A               	movwf	(btemp+8)^0,c
 13491  01627A  0E00               	movlw	0
 13492  01627C  6E3B               	movwf	(btemp+9)^0,c
 13493  01627E  0E00               	movlw	0
 13494  016280  6E3C               	movwf	(btemp+10)^0,c
 13495  016282  0E80               	movlw	128
 13496  016284  6E3D               	movwf	(btemp+11)^0,c
 13497  016286  0EF8               	movlw	-8
 13498  016288  50E3               	movf	plusw1,w,c
 13499  01628A  5E3A               	subwf	(btemp+8)^0,f,c
 13500  01628C  0EF9               	movlw	-7
 13501  01628E  50E3               	movf	plusw1,w,c
 13502  016290  5A3B               	subwfb	(btemp+9)^0,f,c
 13503  016292  0EFA               	movlw	-6
 13504  016294  50E3               	movf	plusw1,w,c
 13505  016296  5A3C               	subwfb	(btemp+10)^0,f,c
 13506  016298  0EFB               	movlw	-5
 13507  01629A  50E3               	movf	plusw1,w,c
 13508  01629C  5A3D               	subwfb	(btemp+11)^0,f,c
 13509                           
 13510                           ;stkvar	_ff2 @ sp[(0)+-8]
 13511  01629E  0EF8               	movlw	-8
 13512  0162A0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13513  0162A6  0EF9               	movlw	-7
 13514  0162A8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13515  0162AE  0EFA               	movlw	-6
 13516  0162B0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13517  0162B6  0EFB               	movlw	-5
 13518  0162B8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13519  0162BE                     l7003:
 13520                           
 13521                           ;stkvar	_ff1 @ sp[(0)+-4]
 13522  0162BE  0EFF               	movlw	-1
 13523  0162C0  7EE3               	btg	plusw1,7,c
 13524                           
 13525                           ;stkvar	_ff2 @ sp[(0)+-8]
 13526  0162C2  0EFB               	movlw	-5
 13527  0162C4  7EE3               	btg	plusw1,7,c
 13528                           
 13529                           ;stkvar	_ff2 @ sp[(0)+-8]
 13530                           ;stkvar	_ff1 @ sp[(0)+-4]
 13531  0162C6  50E1               	movf	fsr1l,w,c
 13532  0162C8  0FFC               	addlw	-4
 13533  0162CA  6ED9               	movwf	fsr2l,c
 13534  0162CC  50E2               	movf	fsr1h,w,c
 13535  0162CE  6EDA               	movwf	fsr2h,c
 13536  0162D0  0EFF               	movlw	255
 13537  0162D2  22DA               	addwfc	fsr2h,f,c
 13538  0162D4  0EF8               	movlw	-8
 13539  0162D6  50E3               	movf	plusw1,w,c
 13540  0162D8  5CDE               	subwf	postinc2,w,c
 13541  0162DA  0EF9               	movlw	-7
 13542  0162DC  50E3               	movf	plusw1,w,c
 13543  0162DE  58DE               	subwfb	postinc2,w,c
 13544  0162E0  0EFA               	movlw	-6
 13545  0162E2  50E3               	movf	plusw1,w,c
 13546  0162E4  58DE               	subwfb	postinc2,w,c
 13547  0162E6  0EFB               	movlw	-5
 13548  0162E8  50E3               	movf	plusw1,w,c
 13549  0162EA  58DE               	subwfb	postinc2,w,c
 13550  0162EC  B0D8               	btfsc	status,0,c
 13551  0162EE  D002               	goto	l7011
 13552  0162F0  9032               	bcf	btemp& (0+255),0,c
 13553  0162F2  D001               	goto	l2316
 13554  0162F4                     l7011:
 13555  0162F4  8032               	bsf	btemp& (0+255),0,c
 13556  0162F6                     l2316:
 13557                           
 13558                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 13559  0162F6  0EF8               	movlw	248
 13560  0162F8  26E1               	addwf	fsr1l,f,c
 13561  0162FA  0EFF               	movlw	255
 13562  0162FC  22E2               	addwfc	fsr1h,f,c
 13563  0162FE  0012               	return		;funcret
 13564  016300                     __end_of___flge:
 13565                           	opt callstack 0
 13566                           
 13567 ;; *************** function ___fleq *****************
 13568 ;; Defined at:
 13569 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 13570 ;; Parameters:    Size  Location     Type
 13571 ;;  ff1             4  [STACK] long 
 13572 ;;  ff2             4  [STACK] long 
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;		None
 13575 ;; Return value:  Size  Location     Type
 13576 ;;		None               void
 13577 ;; Registers used:
 13578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13579 ;; Tracked objects:
 13580 ;;		On entry : 0/5
 13581 ;;		On exit  : 0/0
 13582 ;;		Unchanged: 0/0
 13583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13588 ;;Total ram usage:        0 bytes
 13589 ;; Hardware stack levels used:    1
 13590 ;; Hardware stack levels required when called:    6
 13591 ;; This function calls:
 13592 ;;		Nothing
 13593 ;; This function is called by:
 13594 ;;		_efgtoa
 13595 ;; This function uses a reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text52
 13599  016EDE                     __ptext52:
 13600                           	opt callstack 0
 13601  016EDE                     ___fleq:
 13602                           	opt callstack 17
 13603                           
 13604                           ;stkvar	_ff1 @ sp[(0)+-4]
 13605                           
 13606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13607                           ;incstack = 0
 13608  016EDE  50E1               	movf	fsr1l,w,c
 13609  016EE0  0FFC               	addlw	-4
 13610  016EE2  6ED9               	movwf	fsr2l,c
 13611  016EE4  50E2               	movf	fsr1h,w,c
 13612  016EE6  6EDA               	movwf	fsr2h,c
 13613  016EE8  0EFF               	movlw	255
 13614  016EEA  22DA               	addwfc	fsr2h,f,c
 13615  016EEC  0E00               	movlw	0
 13616  016EEE  14DE               	andwf	postinc2,w,c
 13617  016EF0  6E3A               	movwf	(btemp+8)^0,c
 13618  016EF2  0E00               	movlw	0
 13619  016EF4  14DE               	andwf	postinc2,w,c
 13620  016EF6  6E3B               	movwf	(btemp+9)^0,c
 13621  016EF8  0E80               	movlw	128
 13622  016EFA  14DE               	andwf	postinc2,w,c
 13623  016EFC  6E3C               	movwf	(btemp+10)^0,c
 13624  016EFE  0E7F               	movlw	127
 13625  016F00  14DE               	andwf	postinc2,w,c
 13626  016F02  6E3D               	movwf	(btemp+11)^0,c
 13627  016F04  503A               	movf	(btemp+8)^0,w,c
 13628  016F06  103B               	iorwf	(btemp+9)^0,w,c
 13629  016F08  103C               	iorwf	(btemp+10)^0,w,c
 13630  016F0A  103D               	iorwf	(btemp+11)^0,w,c
 13631  016F0C  A4D8               	btfss	status,2,c
 13632  016F0E  D008               	goto	l6977
 13633                           
 13634                           ;stkvar	_ff1 @ sp[(0)+-4]
 13635  016F10  0EFC               	movlw	-4
 13636  016F12  6AE3               	clrf	plusw1,c
 13637  016F14  0EFD               	movlw	-3
 13638  016F16  6AE3               	clrf	plusw1,c
 13639  016F18  0EFE               	movlw	-2
 13640  016F1A  6AE3               	clrf	plusw1,c
 13641  016F1C  0EFF               	movlw	-1
 13642  016F1E  6AE3               	clrf	plusw1,c
 13643  016F20                     l6977:
 13644                           
 13645                           ;stkvar	_ff2 @ sp[(0)+-8]
 13646  016F20  50E1               	movf	fsr1l,w,c
 13647  016F22  0FF8               	addlw	-8
 13648  016F24  6ED9               	movwf	fsr2l,c
 13649  016F26  50E2               	movf	fsr1h,w,c
 13650  016F28  6EDA               	movwf	fsr2h,c
 13651  016F2A  0EFF               	movlw	255
 13652  016F2C  22DA               	addwfc	fsr2h,f,c
 13653  016F2E  0E00               	movlw	0
 13654  016F30  14DE               	andwf	postinc2,w,c
 13655  016F32  6E3A               	movwf	(btemp+8)^0,c
 13656  016F34  0E00               	movlw	0
 13657  016F36  14DE               	andwf	postinc2,w,c
 13658  016F38  6E3B               	movwf	(btemp+9)^0,c
 13659  016F3A  0E80               	movlw	128
 13660  016F3C  14DE               	andwf	postinc2,w,c
 13661  016F3E  6E3C               	movwf	(btemp+10)^0,c
 13662  016F40  0E7F               	movlw	127
 13663  016F42  14DE               	andwf	postinc2,w,c
 13664  016F44  6E3D               	movwf	(btemp+11)^0,c
 13665  016F46  503A               	movf	(btemp+8)^0,w,c
 13666  016F48  103B               	iorwf	(btemp+9)^0,w,c
 13667  016F4A  103C               	iorwf	(btemp+10)^0,w,c
 13668  016F4C  103D               	iorwf	(btemp+11)^0,w,c
 13669  016F4E  A4D8               	btfss	status,2,c
 13670  016F50  D008               	goto	l6981
 13671                           
 13672                           ;stkvar	_ff2 @ sp[(0)+-8]
 13673  016F52  0EF8               	movlw	-8
 13674  016F54  6AE3               	clrf	plusw1,c
 13675  016F56  0EF9               	movlw	-7
 13676  016F58  6AE3               	clrf	plusw1,c
 13677  016F5A  0EFA               	movlw	-6
 13678  016F5C  6AE3               	clrf	plusw1,c
 13679  016F5E  0EFB               	movlw	-5
 13680  016F60  6AE3               	clrf	plusw1,c
 13681  016F62                     l6981:
 13682                           
 13683                           ;stkvar	_ff2 @ sp[(0)+-8]
 13684                           ;stkvar	_ff1 @ sp[(0)+-4]
 13685  016F62  50E1               	movf	fsr1l,w,c
 13686  016F64  0FFC               	addlw	-4
 13687  016F66  6ED9               	movwf	fsr2l,c
 13688  016F68  50E2               	movf	fsr1h,w,c
 13689  016F6A  6EDA               	movwf	fsr2h,c
 13690  016F6C  0EFF               	movlw	255
 13691  016F6E  22DA               	addwfc	fsr2h,f,c
 13692  016F70  0EF8               	movlw	-8
 13693  016F72  50E3               	movf	plusw1,w,c
 13694  016F74  18DE               	xorwf	postinc2,w,c
 13695  016F76  E10D               	bnz	u6140
 13696  016F78  0EF9               	movlw	-7
 13697  016F7A  50E3               	movf	plusw1,w,c
 13698  016F7C  18DE               	xorwf	postinc2,w,c
 13699  016F7E  E109               	bnz	u6140
 13700  016F80  0EFA               	movlw	-6
 13701  016F82  50E3               	movf	plusw1,w,c
 13702  016F84  18DE               	xorwf	postinc2,w,c
 13703  016F86  E105               	bnz	u6140
 13704  016F88  0EFB               	movlw	-5
 13705  016F8A  50E3               	movf	plusw1,w,c
 13706  016F8C  18DE               	xorwf	postinc2,w,c
 13707  016F8E  B4D8               	btfsc	status,2,c
 13708  016F90  D002               	goto	l6985
 13709  016F92                     u6140:
 13710  016F92  9032               	bcf	btemp& (0+255),0,c
 13711  016F94  D001               	goto	l2305
 13712  016F96                     l6985:
 13713  016F96  8032               	bsf	btemp& (0+255),0,c
 13714  016F98                     l2305:
 13715                           
 13716                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 13717  016F98  0EF8               	movlw	248
 13718  016F9A  26E1               	addwf	fsr1l,f,c
 13719  016F9C  0EFF               	movlw	255
 13720  016F9E  22E2               	addwfc	fsr1h,f,c
 13721  016FA0  0012               	return		;funcret
 13722  016FA2                     __end_of___fleq:
 13723                           	opt callstack 0
 13724                           
 13725 ;; *************** function ___fldiv *****************
 13726 ;; Defined at:
 13727 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 13728 ;; Parameters:    Size  Location     Type
 13729 ;;  b               4  [STACK] long 
 13730 ;;  a               4  [STACK] long 
 13731 ;; Auto vars:     Size  Location     Type
 13732 ;;  grs             4  [STACK] unsigned long 
 13733 ;;  rem             4  [STACK] unsigned long 
 13734 ;;  new_exp         2  [STACK] short 
 13735 ;;  aexp            1  [STACK] unsigned char 
 13736 ;;  bexp            1  [STACK] unsigned char 
 13737 ;;  sign            1  [STACK] unsigned char 
 13738 ;; Return value:  Size  Location     Type
 13739 ;;                  4  [STACK] unsigned char 
 13740 ;; Registers used:
 13741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/39
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13751 ;;Total ram usage:        0 bytes
 13752 ;; Hardware stack levels used:    1
 13753 ;; Hardware stack levels required when called:    6
 13754 ;; This function calls:
 13755 ;;		Nothing
 13756 ;; This function is called by:
 13757 ;;		_conv_raw_result
 13758 ;;		_efgtoa
 13759 ;; This function uses a reentrant model
 13760 ;;
 13761                           
 13762                           	psect	text53
 13763  012D68                     __ptext53:
 13764                           	opt callstack 0
 13765  012D68                     ___fldiv:
 13766                           	opt callstack 0
 13767                           
 13768                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13769  012D68  0E0D               	movlw	13
 13770  012D6A  26E1               	addwf	fsr1l,f,c
 13771  012D6C  0E00               	movlw	0
 13772  012D6E  22E2               	addwfc	fsr1h,f,c
 13773                           
 13774                           ;stkvar	_b @ sp[(-13)+-4]
 13775                           
 13776                           ;incstack = 0
 13777  012D70  0EF2               	movlw	242
 13778  012D72  24E1               	addwf	fsr1l,w,c
 13779  012D74  6ED9               	movwf	fsr2l,c
 13780  012D76  0EFF               	movlw	255
 13781  012D78  20E2               	addwfc	fsr1h,w,c
 13782  012D7A  6EDA               	movwf	fsr2h,c
 13783  012D7C  50DF               	movf	indf2,w,c
 13784  012D7E  6E3D               	movwf	(btemp+11)^0,c
 13785  012D80  0E80               	movlw	128
 13786  012D82  163D               	andwf	(btemp+11)^0,f,c
 13787                           
 13788                           ;stkvar	_sign @ sp[(-13)+12]
 13789  012D84  0EFF               	movlw	-1
 13790  012D86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13791                           
 13792                           ;stkvar	_b @ sp[(-13)+-4]
 13793  012D8C  0EF2               	movlw	242
 13794  012D8E  24E1               	addwf	fsr1l,w,c
 13795  012D90  6ED9               	movwf	fsr2l,c
 13796  012D92  0EFF               	movlw	255
 13797  012D94  20E2               	addwfc	fsr1h,w,c
 13798  012D96  6EDA               	movwf	fsr2h,c
 13799  012D98  50DF               	movf	indf2,w,c
 13800  012D9A  6E3D               	movwf	(btemp+11)^0,c
 13801  012D9C  90D8               	bcf	status,0,c
 13802  012D9E  343D               	rlcf	(btemp+11)^0,w,c
 13803  012DA0  6E3C               	movwf	(btemp+10)^0,c
 13804                           
 13805                           ;stkvar	_bexp @ sp[(-13)+11]
 13806  012DA2  0EFE               	movlw	-2
 13807  012DA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13808                           
 13809                           ;stkvar	_b @ sp[(-13)+-4]
 13810  012DAA  0EF1               	movlw	241
 13811  012DAC  24E1               	addwf	fsr1l,w,c
 13812  012DAE  6ED9               	movwf	fsr2l,c
 13813  012DB0  0EFF               	movlw	255
 13814  012DB2  20E2               	addwfc	fsr1h,w,c
 13815  012DB4  6EDA               	movwf	fsr2h,c
 13816  012DB6  AEDF               	btfss	indf2,7,c
 13817  012DB8  D002               	goto	l6579
 13818                           
 13819                           ;stkvar	_bexp @ sp[(-13)+11]
 13820  012DBA  0EFE               	movlw	-2
 13821  012DBC  80E3               	bsf	plusw1,0,c
 13822  012DBE                     l6579:
 13823                           
 13824                           ;stkvar	_bexp @ sp[(-13)+11]
 13825  012DBE  0EFE               	movlw	-2
 13826  012DC0  50E3               	movf	plusw1,w,c
 13827  012DC2  B4D8               	btfsc	status,2,c
 13828  012DC4  D027               	goto	l6589
 13829                           
 13830                           ;stkvar	_bexp @ sp[(-13)+11]
 13831  012DC6  0EFE               	movlw	-2
 13832  012DC8  28E3               	incf	plusw1,w,c
 13833  012DCA  A4D8               	btfss	status,2,c
 13834  012DCC  D018               	goto	l6585
 13835  012DCE  0E00               	movlw	0
 13836  012DD0  6E3A               	movwf	(btemp+8)^0,c
 13837  012DD2  0E00               	movlw	0
 13838  012DD4  6E3B               	movwf	(btemp+9)^0,c
 13839  012DD6  0E00               	movlw	0
 13840  012DD8  6E3C               	movwf	(btemp+10)^0,c
 13841  012DDA  0E00               	movlw	0
 13842  012DDC  6E3D               	movwf	(btemp+11)^0,c
 13843                           
 13844                           ;stkvar	_b @ sp[(-13)+-4]
 13845  012DDE  0EEF               	movlw	-17
 13846  012DE0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13847  012DE6  0EF0               	movlw	-16
 13848  012DE8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13849  012DEE  0EF1               	movlw	-15
 13850  012DF0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13851  012DF6  0EF2               	movlw	-14
 13852  012DF8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13853  012DFE                     l6585:
 13854                           
 13855                           ;stkvar	_b @ sp[(-13)+-4]
 13856  012DFE  0EF1               	movlw	-15
 13857  012E00  8EE3               	bsf	plusw1,7,c
 13858                           
 13859                           ;stkvar	_b @ sp[(-13)+-4]
 13860  012E02  0EF2               	movlw	242
 13861  012E04  24E1               	addwf	fsr1l,w,c
 13862  012E06  6ED9               	movwf	fsr2l,c
 13863  012E08  0EFF               	movlw	255
 13864  012E0A  20E2               	addwfc	fsr1h,w,c
 13865  012E0C  6EDA               	movwf	fsr2h,c
 13866  012E0E  0E00               	movlw	0
 13867  012E10  6EDF               	movwf	indf2,c
 13868  012E12  D018               	goto	l6591
 13869  012E14                     l6589:
 13870  012E14  0E00               	movlw	0
 13871  012E16  6E3A               	movwf	(btemp+8)^0,c
 13872  012E18  0E00               	movlw	0
 13873  012E1A  6E3B               	movwf	(btemp+9)^0,c
 13874  012E1C  0E00               	movlw	0
 13875  012E1E  6E3C               	movwf	(btemp+10)^0,c
 13876  012E20  0E00               	movlw	0
 13877  012E22  6E3D               	movwf	(btemp+11)^0,c
 13878                           
 13879                           ;stkvar	_b @ sp[(-13)+-4]
 13880  012E24  0EEF               	movlw	-17
 13881  012E26  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13882  012E2C  0EF0               	movlw	-16
 13883  012E2E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13884  012E34  0EF1               	movlw	-15
 13885  012E36  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13886  012E3C  0EF2               	movlw	-14
 13887  012E3E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13888  012E44                     l6591:
 13889                           
 13890                           ;stkvar	_a @ sp[(-13)+-8]
 13891  012E44  0EEE               	movlw	238
 13892  012E46  24E1               	addwf	fsr1l,w,c
 13893  012E48  6ED9               	movwf	fsr2l,c
 13894  012E4A  0EFF               	movlw	255
 13895  012E4C  20E2               	addwfc	fsr1h,w,c
 13896  012E4E  6EDA               	movwf	fsr2h,c
 13897  012E50  50DF               	movf	indf2,w,c
 13898  012E52  6E3D               	movwf	(btemp+11)^0,c
 13899  012E54  0E80               	movlw	128
 13900  012E56  163D               	andwf	(btemp+11)^0,f,c
 13901                           
 13902                           ;stkvar	_sign @ sp[(-13)+12]
 13903  012E58  50E1               	movf	fsr1l,w,c
 13904  012E5A  0FFF               	addlw	-1
 13905  012E5C  6ED9               	movwf	fsr2l,c
 13906  012E5E  50E2               	movf	fsr1h,w,c
 13907  012E60  6EDA               	movwf	fsr2h,c
 13908  012E62  0EFF               	movlw	255
 13909  012E64  22DA               	addwfc	fsr2h,f,c
 13910  012E66  503D               	movf	(btemp+11)^0,w,c
 13911  012E68  1ADF               	xorwf	indf2,f,c
 13912                           
 13913                           ;stkvar	_a @ sp[(-13)+-8]
 13914  012E6A  0EEE               	movlw	238
 13915  012E6C  24E1               	addwf	fsr1l,w,c
 13916  012E6E  6ED9               	movwf	fsr2l,c
 13917  012E70  0EFF               	movlw	255
 13918  012E72  20E2               	addwfc	fsr1h,w,c
 13919  012E74  6EDA               	movwf	fsr2h,c
 13920  012E76  50DF               	movf	indf2,w,c
 13921  012E78  6E3D               	movwf	(btemp+11)^0,c
 13922  012E7A  90D8               	bcf	status,0,c
 13923  012E7C  343D               	rlcf	(btemp+11)^0,w,c
 13924  012E7E  6E3C               	movwf	(btemp+10)^0,c
 13925                           
 13926                           ;stkvar	_aexp @ sp[(-13)+10]
 13927  012E80  0EFD               	movlw	-3
 13928  012E82  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13929                           
 13930                           ;stkvar	_a @ sp[(-13)+-8]
 13931  012E88  0EED               	movlw	237
 13932  012E8A  24E1               	addwf	fsr1l,w,c
 13933  012E8C  6ED9               	movwf	fsr2l,c
 13934  012E8E  0EFF               	movlw	255
 13935  012E90  20E2               	addwfc	fsr1h,w,c
 13936  012E92  6EDA               	movwf	fsr2h,c
 13937  012E94  AEDF               	btfss	indf2,7,c
 13938  012E96  D002               	goto	l6599
 13939                           
 13940                           ;stkvar	_aexp @ sp[(-13)+10]
 13941  012E98  0EFD               	movlw	-3
 13942  012E9A  80E3               	bsf	plusw1,0,c
 13943  012E9C                     l6599:
 13944                           
 13945                           ;stkvar	_aexp @ sp[(-13)+10]
 13946  012E9C  0EFD               	movlw	-3
 13947  012E9E  50E3               	movf	plusw1,w,c
 13948  012EA0  B4D8               	btfsc	status,2,c
 13949  012EA2  D027               	goto	l6609
 13950                           
 13951                           ;stkvar	_aexp @ sp[(-13)+10]
 13952  012EA4  0EFD               	movlw	-3
 13953  012EA6  28E3               	incf	plusw1,w,c
 13954  012EA8  A4D8               	btfss	status,2,c
 13955  012EAA  D018               	goto	l6605
 13956  012EAC  0E00               	movlw	0
 13957  012EAE  6E3A               	movwf	(btemp+8)^0,c
 13958  012EB0  0E00               	movlw	0
 13959  012EB2  6E3B               	movwf	(btemp+9)^0,c
 13960  012EB4  0E00               	movlw	0
 13961  012EB6  6E3C               	movwf	(btemp+10)^0,c
 13962  012EB8  0E00               	movlw	0
 13963  012EBA  6E3D               	movwf	(btemp+11)^0,c
 13964                           
 13965                           ;stkvar	_a @ sp[(-13)+-8]
 13966  012EBC  0EEB               	movlw	-21
 13967  012EBE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13968  012EC4  0EEC               	movlw	-20
 13969  012EC6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13970  012ECC  0EED               	movlw	-19
 13971  012ECE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13972  012ED4  0EEE               	movlw	-18
 13973  012ED6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13974  012EDC                     l6605:
 13975                           
 13976                           ;stkvar	_a @ sp[(-13)+-8]
 13977  012EDC  0EED               	movlw	-19
 13978  012EDE  8EE3               	bsf	plusw1,7,c
 13979                           
 13980                           ;stkvar	_a @ sp[(-13)+-8]
 13981  012EE0  0EEE               	movlw	238
 13982  012EE2  24E1               	addwf	fsr1l,w,c
 13983  012EE4  6ED9               	movwf	fsr2l,c
 13984  012EE6  0EFF               	movlw	255
 13985  012EE8  20E2               	addwfc	fsr1h,w,c
 13986  012EEA  6EDA               	movwf	fsr2h,c
 13987  012EEC  0E00               	movlw	0
 13988  012EEE  6EDF               	movwf	indf2,c
 13989  012EF0  D018               	goto	l6611
 13990  012EF2                     l6609:
 13991  012EF2  0E00               	movlw	0
 13992  012EF4  6E3A               	movwf	(btemp+8)^0,c
 13993  012EF6  0E00               	movlw	0
 13994  012EF8  6E3B               	movwf	(btemp+9)^0,c
 13995  012EFA  0E00               	movlw	0
 13996  012EFC  6E3C               	movwf	(btemp+10)^0,c
 13997  012EFE  0E00               	movlw	0
 13998  012F00  6E3D               	movwf	(btemp+11)^0,c
 13999                           
 14000                           ;stkvar	_a @ sp[(-13)+-8]
 14001  012F02  0EEB               	movlw	-21
 14002  012F04  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14003  012F0A  0EEC               	movlw	-20
 14004  012F0C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14005  012F12  0EED               	movlw	-19
 14006  012F14  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14007  012F1A  0EEE               	movlw	-18
 14008  012F1C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14009  012F22                     l6611:
 14010                           
 14011                           ;stkvar	_a @ sp[(-13)+-8]
 14012  012F22  0EEB               	movlw	-21
 14013  012F24  50E3               	movf	plusw1,w,c
 14014  012F26  E139               	bnz	l6623
 14015  012F28  0EEC               	movlw	-20
 14016  012F2A  50E3               	movf	plusw1,w,c
 14017  012F2C  E136               	bnz	l6623
 14018  012F2E  0EED               	movlw	-19
 14019  012F30  50E3               	movf	plusw1,w,c
 14020  012F32  E133               	bnz	l6623
 14021  012F34  0EEE               	movlw	-18
 14022  012F36  50E3               	movf	plusw1,w,c
 14023  012F38  A4D8               	btfss	status,2,c
 14024  012F3A  D02F               	goto	l6623
 14025                           
 14026                           ;stkvar	_b @ sp[(-13)+-4]
 14027  012F3C  0EEF               	movlw	-17
 14028  012F3E  6AE3               	clrf	plusw1,c
 14029  012F40  0EF0               	movlw	-16
 14030  012F42  6AE3               	clrf	plusw1,c
 14031  012F44  0EF1               	movlw	-15
 14032  012F46  6AE3               	clrf	plusw1,c
 14033  012F48  0EF2               	movlw	-14
 14034  012F4A  6AE3               	clrf	plusw1,c
 14035                           
 14036                           ;stkvar	_b @ sp[(-13)+-4]
 14037  012F4C  0EF1               	movlw	241
 14038  012F4E  24E1               	addwf	fsr1l,w,c
 14039  012F50  6ED9               	movwf	fsr2l,c
 14040  012F52  0EFF               	movlw	255
 14041  012F54  20E2               	addwfc	fsr1h,w,c
 14042  012F56  6EDA               	movwf	fsr2h,c
 14043  012F58  0E80               	movlw	128
 14044  012F5A  12DE               	iorwf	postinc2,f,c
 14045  012F5C  0E7F               	movlw	127
 14046  012F5E  12DD               	iorwf	postdec2,f,c
 14047  012F60                     l6617:
 14048                           
 14049                           ;stkvar	_sign @ sp[(-13)+12]
 14050  012F60  0EFF               	movlw	-1
 14051  012F62  006F FF8C  F03D    	movff	plusw1,btemp+11
 14052                           
 14053                           ;stkvar	_b @ sp[(-13)+-4]
 14054  012F68  0EF2               	movlw	242
 14055  012F6A  24E1               	addwf	fsr1l,w,c
 14056  012F6C  6ED9               	movwf	fsr2l,c
 14057  012F6E  0EFF               	movlw	255
 14058  012F70  20E2               	addwfc	fsr1h,w,c
 14059  012F72  6EDA               	movwf	fsr2h,c
 14060  012F74  503D               	movf	(btemp+11)^0,w,c
 14061  012F76  12DF               	iorwf	indf2,f,c
 14062                           
 14063                           ;stkvar	_b @ sp[(-13)+-4]
 14064  012F78  0EEF               	movlw	-17
 14065  012F7A  006F FF8C  F032    	movff	plusw1,btemp
 14066  012F80  0EF0               	movlw	-16
 14067  012F82  006F FF8C  F033    	movff	plusw1,btemp+1
 14068  012F88  0EF1               	movlw	-15
 14069  012F8A  006F FF8C  F034    	movff	plusw1,btemp+2
 14070  012F90  0EF2               	movlw	-14
 14071  012F92  006F FF8C  F035    	movff	plusw1,btemp+3
 14072  012F98  D19F               	goto	l2628
 14073  012F9A                     l6623:
 14074                           
 14075                           ;stkvar	_bexp @ sp[(-13)+11]
 14076  012F9A  0EFE               	movlw	-2
 14077  012F9C  50E3               	movf	plusw1,w,c
 14078  012F9E  A4D8               	btfss	status,2,c
 14079  012FA0  D009               	goto	l6631
 14080  012FA2  0E00               	movlw	0
 14081  012FA4  6E32               	movwf	btemp^0,c
 14082  012FA6  0E00               	movlw	0
 14083  012FA8  6E33               	movwf	(btemp+1)^0,c
 14084  012FAA  0E00               	movlw	0
 14085  012FAC  6E34               	movwf	(btemp+2)^0,c
 14086  012FAE  0E00               	movlw	0
 14087  012FB0  6E35               	movwf	(btemp+3)^0,c
 14088  012FB2  D192               	goto	l2628
 14089  012FB4                     l6631:
 14090                           
 14091                           ;stkvar	_bexp @ sp[(-13)+11]
 14092  012FB4  0EFE               	movlw	-2
 14093  012FB6  50E3               	movf	plusw1,w,c
 14094  012FB8  6E3C               	movwf	(btemp+10)^0,c
 14095  012FBA  6A3D               	clrf	(btemp+11)^0,c
 14096                           
 14097                           ;stkvar	_aexp @ sp[(-13)+10]
 14098  012FBC  0EFD               	movlw	-3
 14099  012FBE  50E3               	movf	plusw1,w,c
 14100  012FC0  5E3C               	subwf	(btemp+10)^0,f,c
 14101  012FC2  0E00               	movlw	0
 14102  012FC4  5A3D               	subwfb	(btemp+11)^0,f,c
 14103  012FC6  0E7F               	movlw	127
 14104  012FC8  263C               	addwf	(btemp+10)^0,f,c
 14105  012FCA  0E00               	movlw	0
 14106  012FCC  223D               	addwfc	(btemp+11)^0,f,c
 14107                           
 14108                           ;stkvar	_new_exp @ sp[(-13)+8]
 14109  012FCE  0EFB               	movlw	-5
 14110  012FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14111  012FD6  0EFC               	movlw	-4
 14112  012FD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14113                           
 14114                           ;stkvar	_b @ sp[(-13)+-4]
 14115  012FDE  0EEF               	movlw	-17
 14116  012FE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 14117  012FE6  0EF0               	movlw	-16
 14118  012FE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 14119  012FEE  0EF1               	movlw	-15
 14120  012FF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 14121  012FF6  0EF2               	movlw	-14
 14122  012FF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 14123                           
 14124                           ;stkvar	_rem @ sp[(-13)+4]
 14125  012FFE  0EF7               	movlw	-9
 14126  013000  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14127  013006  0EF8               	movlw	-8
 14128  013008  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14129  01300E  0EF9               	movlw	-7
 14130  013010  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14131  013016  0EFA               	movlw	-6
 14132  013018  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14133                           
 14134                           ;stkvar	_b @ sp[(-13)+-4]
 14135  01301E  0EEF               	movlw	-17
 14136  013020  6AE3               	clrf	plusw1,c
 14137  013022  0EF0               	movlw	-16
 14138  013024  6AE3               	clrf	plusw1,c
 14139  013026  0EF1               	movlw	-15
 14140  013028  6AE3               	clrf	plusw1,c
 14141  01302A  0EF2               	movlw	-14
 14142  01302C  6AE3               	clrf	plusw1,c
 14143                           
 14144                           ;stkvar	_grs @ sp[(-13)+0]
 14145  01302E  0EF3               	movlw	-13
 14146  013030  6AE3               	clrf	plusw1,c
 14147  013032  0EF4               	movlw	-12
 14148  013034  6AE3               	clrf	plusw1,c
 14149  013036  0EF5               	movlw	-11
 14150  013038  6AE3               	clrf	plusw1,c
 14151  01303A  0EF6               	movlw	-10
 14152  01303C  6AE3               	clrf	plusw1,c
 14153                           
 14154                           ;stkvar	_aexp @ sp[(-13)+10]
 14155  01303E  0EFD               	movlw	-3
 14156  013040  6AE3               	clrf	plusw1,c
 14157  013042  D050               	goto	l6659
 14158  013044                     l6641:
 14159                           
 14160                           ;stkvar	_aexp @ sp[(-13)+10]
 14161  013044  0EFD               	movlw	-3
 14162  013046  50E3               	movf	plusw1,w,c
 14163  013048  B4D8               	btfsc	status,2,c
 14164  01304A  D020               	goto	l6651
 14165                           
 14166                           ;stkvar	_rem @ sp[(-13)+4]
 14167  01304C  90D8               	bcf	status,0,c
 14168  01304E  0EF7               	movlw	-9
 14169  013050  36E3               	rlcf	plusw1,f,c
 14170  013052  0EF8               	movlw	-8
 14171  013054  36E3               	rlcf	plusw1,f,c
 14172  013056  0EF9               	movlw	-7
 14173  013058  36E3               	rlcf	plusw1,f,c
 14174  01305A  0EFA               	movlw	-6
 14175  01305C  36E3               	rlcf	plusw1,f,c
 14176                           
 14177                           ;stkvar	_b @ sp[(-13)+-4]
 14178  01305E  90D8               	bcf	status,0,c
 14179  013060  0EEF               	movlw	-17
 14180  013062  36E3               	rlcf	plusw1,f,c
 14181  013064  0EF0               	movlw	-16
 14182  013066  36E3               	rlcf	plusw1,f,c
 14183  013068  0EF1               	movlw	-15
 14184  01306A  36E3               	rlcf	plusw1,f,c
 14185  01306C  0EF2               	movlw	-14
 14186  01306E  36E3               	rlcf	plusw1,f,c
 14187                           
 14188                           ;stkvar	_grs @ sp[(-13)+0]
 14189  013070  0EF6               	movlw	-10
 14190  013072  AEE3               	btfss	plusw1,7,c
 14191  013074  D002               	goto	l6649
 14192                           
 14193                           ;stkvar	_b @ sp[(-13)+-4]
 14194  013076  0EEF               	movlw	-17
 14195  013078  80E3               	bsf	plusw1,0,c
 14196  01307A                     l6649:
 14197                           
 14198                           ;stkvar	_grs @ sp[(-13)+0]
 14199  01307A  90D8               	bcf	status,0,c
 14200  01307C  0EF3               	movlw	-13
 14201  01307E  36E3               	rlcf	plusw1,f,c
 14202  013080  0EF4               	movlw	-12
 14203  013082  36E3               	rlcf	plusw1,f,c
 14204  013084  0EF5               	movlw	-11
 14205  013086  36E3               	rlcf	plusw1,f,c
 14206  013088  0EF6               	movlw	-10
 14207  01308A  36E3               	rlcf	plusw1,f,c
 14208  01308C                     l6651:
 14209                           
 14210                           ;stkvar	_a @ sp[(-13)+-8]
 14211                           ;stkvar	_rem @ sp[(-13)+4]
 14212  01308C  50E1               	movf	fsr1l,w,c
 14213  01308E  0FF7               	addlw	-9
 14214  013090  6ED9               	movwf	fsr2l,c
 14215  013092  50E2               	movf	fsr1h,w,c
 14216  013094  6EDA               	movwf	fsr2h,c
 14217  013096  0EFF               	movlw	255
 14218  013098  22DA               	addwfc	fsr2h,f,c
 14219  01309A  0EEB               	movlw	-21
 14220  01309C  50E3               	movf	plusw1,w,c
 14221  01309E  5CDE               	subwf	postinc2,w,c
 14222  0130A0  0EEC               	movlw	-20
 14223  0130A2  50E3               	movf	plusw1,w,c
 14224  0130A4  58DE               	subwfb	postinc2,w,c
 14225  0130A6  0EED               	movlw	-19
 14226  0130A8  50E3               	movf	plusw1,w,c
 14227  0130AA  58DE               	subwfb	postinc2,w,c
 14228  0130AC  0EEE               	movlw	-18
 14229  0130AE  50E3               	movf	plusw1,w,c
 14230  0130B0  58DE               	subwfb	postinc2,w,c
 14231  0130B2  A0D8               	btfss	status,0,c
 14232  0130B4  D015               	goto	l6657
 14233                           
 14234                           ;stkvar	_grs @ sp[(-13)+0]
 14235  0130B6  0EF6               	movlw	-10
 14236  0130B8  8CE3               	bsf	plusw1,6,c
 14237                           
 14238                           ;stkvar	_a @ sp[(-13)+-8]
 14239                           ;stkvar	_rem @ sp[(-13)+4]
 14240  0130BA  50E1               	movf	fsr1l,w,c
 14241  0130BC  0FF7               	addlw	-9
 14242  0130BE  6ED9               	movwf	fsr2l,c
 14243  0130C0  50E2               	movf	fsr1h,w,c
 14244  0130C2  6EDA               	movwf	fsr2h,c
 14245  0130C4  0EFF               	movlw	255
 14246  0130C6  22DA               	addwfc	fsr2h,f,c
 14247  0130C8  0EEB               	movlw	-21
 14248  0130CA  50E3               	movf	plusw1,w,c
 14249  0130CC  5EDE               	subwf	postinc2,f,c
 14250  0130CE  0EEC               	movlw	-20
 14251  0130D0  50E3               	movf	plusw1,w,c
 14252  0130D2  5ADE               	subwfb	postinc2,f,c
 14253  0130D4  0EED               	movlw	-19
 14254  0130D6  50E3               	movf	plusw1,w,c
 14255  0130D8  5ADE               	subwfb	postinc2,f,c
 14256  0130DA  0EEE               	movlw	-18
 14257  0130DC  50E3               	movf	plusw1,w,c
 14258  0130DE  5ADE               	subwfb	postinc2,f,c
 14259  0130E0                     l6657:
 14260                           
 14261                           ;stkvar	_aexp @ sp[(-13)+10]
 14262  0130E0  0EFD               	movlw	-3
 14263  0130E2  2AE3               	incf	plusw1,f,c
 14264  0130E4                     l6659:
 14265                           
 14266                           ;stkvar	_aexp @ sp[(-13)+10]
 14267  0130E4  0EFD               	movlw	-3
 14268  0130E6  006F FF8C  F032    	movff	plusw1,btemp
 14269  0130EC  0E19               	movlw	25
 14270  0130EE  6432               	cpfsgt	btemp^0,c
 14271  0130F0  D7A9               	goto	l6641
 14272                           
 14273                           ;stkvar	_rem @ sp[(-13)+4]
 14274  0130F2  0EF7               	movlw	-9
 14275  0130F4  50E3               	movf	plusw1,w,c
 14276  0130F6  E10A               	bnz	u5640
 14277  0130F8  0EF8               	movlw	-8
 14278  0130FA  50E3               	movf	plusw1,w,c
 14279  0130FC  E107               	bnz	u5640
 14280  0130FE  0EF9               	movlw	-7
 14281  013100  50E3               	movf	plusw1,w,c
 14282  013102  E104               	bnz	u5640
 14283  013104  0EFA               	movlw	-6
 14284  013106  50E3               	movf	plusw1,w,c
 14285  013108  B4D8               	btfsc	status,2,c
 14286  01310A  D024               	goto	l6675
 14287  01310C                     u5640:
 14288                           
 14289                           ;stkvar	_grs @ sp[(-13)+0]
 14290  01310C  0EF3               	movlw	-13
 14291  01310E  80E3               	bsf	plusw1,0,c
 14292  013110  D021               	goto	l6675
 14293  013112                     l6665:
 14294                           
 14295                           ;stkvar	_b @ sp[(-13)+-4]
 14296  013112  90D8               	bcf	status,0,c
 14297  013114  0EEF               	movlw	-17
 14298  013116  36E3               	rlcf	plusw1,f,c
 14299  013118  0EF0               	movlw	-16
 14300  01311A  36E3               	rlcf	plusw1,f,c
 14301  01311C  0EF1               	movlw	-15
 14302  01311E  36E3               	rlcf	plusw1,f,c
 14303  013120  0EF2               	movlw	-14
 14304  013122  36E3               	rlcf	plusw1,f,c
 14305                           
 14306                           ;stkvar	_grs @ sp[(-13)+0]
 14307  013124  0EF6               	movlw	-10
 14308  013126  AEE3               	btfss	plusw1,7,c
 14309  013128  D002               	goto	l6671
 14310                           
 14311                           ;stkvar	_b @ sp[(-13)+-4]
 14312  01312A  0EEF               	movlw	-17
 14313  01312C  80E3               	bsf	plusw1,0,c
 14314  01312E                     l6671:
 14315                           
 14316                           ;stkvar	_grs @ sp[(-13)+0]
 14317  01312E  90D8               	bcf	status,0,c
 14318  013130  0EF3               	movlw	-13
 14319  013132  36E3               	rlcf	plusw1,f,c
 14320  013134  0EF4               	movlw	-12
 14321  013136  36E3               	rlcf	plusw1,f,c
 14322  013138  0EF5               	movlw	-11
 14323  01313A  36E3               	rlcf	plusw1,f,c
 14324  01313C  0EF6               	movlw	-10
 14325  01313E  36E3               	rlcf	plusw1,f,c
 14326                           
 14327                           ;stkvar	_new_exp @ sp[(-13)+8]
 14328  013140  50E1               	movf	fsr1l,w,c
 14329  013142  0FFB               	addlw	-5
 14330  013144  6ED9               	movwf	fsr2l,c
 14331  013146  50E2               	movf	fsr1h,w,c
 14332  013148  6EDA               	movwf	fsr2h,c
 14333  01314A  0EFF               	movlw	255
 14334  01314C  22DA               	addwfc	fsr2h,f,c
 14335  01314E  06DE               	decf	postinc2,f,c
 14336  013150  0E00               	movlw	0
 14337  013152  5ADD               	subwfb	postdec2,f,c
 14338  013154                     l6675:
 14339                           
 14340                           ;stkvar	_b @ sp[(-13)+-4]
 14341  013154  0EF1               	movlw	-15
 14342  013156  AEE3               	btfss	plusw1,7,c
 14343  013158  D7DC               	goto	l6665
 14344                           
 14345                           ;stkvar	_aexp @ sp[(-13)+10]
 14346  01315A  0EFD               	movlw	-3
 14347  01315C  6AE3               	clrf	plusw1,c
 14348                           
 14349                           ;stkvar	_grs @ sp[(-13)+0]
 14350  01315E  0EF6               	movlw	-10
 14351  013160  AEE3               	btfss	plusw1,7,c
 14352  013162  D020               	goto	l6689
 14353                           
 14354                           ;stkvar	_grs @ sp[(-13)+0]
 14355  013164  50E1               	movf	fsr1l,w,c
 14356  013166  0FF3               	addlw	-13
 14357  013168  6ED9               	movwf	fsr2l,c
 14358  01316A  50E2               	movf	fsr1h,w,c
 14359  01316C  6EDA               	movwf	fsr2h,c
 14360  01316E  0EFF               	movlw	255
 14361  013170  22DA               	addwfc	fsr2h,f,c
 14362  013172  0EFF               	movlw	255
 14363  013174  14DE               	andwf	postinc2,w,c
 14364  013176  6E3A               	movwf	(btemp+8)^0,c
 14365  013178  0EFF               	movlw	255
 14366  01317A  14DE               	andwf	postinc2,w,c
 14367  01317C  6E3B               	movwf	(btemp+9)^0,c
 14368  01317E  0EFF               	movlw	255
 14369  013180  14DE               	andwf	postinc2,w,c
 14370  013182  6E3C               	movwf	(btemp+10)^0,c
 14371  013184  0E7F               	movlw	127
 14372  013186  14DE               	andwf	postinc2,w,c
 14373  013188  6E3D               	movwf	(btemp+11)^0,c
 14374  01318A  503A               	movf	(btemp+8)^0,w,c
 14375  01318C  103B               	iorwf	(btemp+9)^0,w,c
 14376  01318E  103C               	iorwf	(btemp+10)^0,w,c
 14377  013190  103D               	iorwf	(btemp+11)^0,w,c
 14378  013192  B4D8               	btfsc	status,2,c
 14379  013194  D004               	goto	l6685
 14380  013196                     u5680:
 14381                           
 14382                           ;stkvar	_aexp @ sp[(-13)+10]
 14383  013196  0EFD               	movlw	-3
 14384  013198  6AE3               	clrf	plusw1,c
 14385  01319A  2AE3               	incf	plusw1,f,c
 14386  01319C  D003               	goto	l6689
 14387  01319E                     l6685:
 14388                           
 14389                           ;stkvar	_b @ sp[(-13)+-4]
 14390  01319E  0EEF               	movlw	-17
 14391  0131A0  B0E3               	btfsc	plusw1,0,c
 14392  0131A2  D7F9               	goto	u5680
 14393  0131A4                     l6689:
 14394                           
 14395                           ;stkvar	_aexp @ sp[(-13)+10]
 14396  0131A4  0EFD               	movlw	-3
 14397  0131A6  50E3               	movf	plusw1,w,c
 14398  0131A8  B4D8               	btfsc	status,2,c
 14399  0131AA  D036               	goto	l6699
 14400                           
 14401                           ;stkvar	_b @ sp[(-13)+-4]
 14402  0131AC  50E1               	movf	fsr1l,w,c
 14403  0131AE  0FEF               	addlw	-17
 14404  0131B0  6ED9               	movwf	fsr2l,c
 14405  0131B2  50E2               	movf	fsr1h,w,c
 14406  0131B4  6EDA               	movwf	fsr2h,c
 14407  0131B6  0EFF               	movlw	255
 14408  0131B8  22DA               	addwfc	fsr2h,f,c
 14409  0131BA  2ADE               	incf	postinc2,f,c
 14410  0131BC  0E00               	movlw	0
 14411  0131BE  22DE               	addwfc	postinc2,f,c
 14412  0131C0  22DE               	addwfc	postinc2,f,c
 14413  0131C2  22DE               	addwfc	postinc2,f,c
 14414                           
 14415                           ;stkvar	_b @ sp[(-13)+-4]
 14416  0131C4  0EF2               	movlw	-14
 14417  0131C6  A0E3               	btfss	plusw1,0,c
 14418  0131C8  D027               	goto	l6699
 14419  0131CA  0E01               	movlw	1
 14420  0131CC  6E3D               	movwf	(btemp+11)^0,c
 14421                           
 14422                           ;stkvar	_b @ sp[(-13)+-4]
 14423  0131CE  50E1               	movf	fsr1l,w,c
 14424  0131D0  0FEF               	addlw	-17
 14425  0131D2  6ED9               	movwf	fsr2l,c
 14426  0131D4  50E2               	movf	fsr1h,w,c
 14427  0131D6  6EDA               	movwf	fsr2h,c
 14428  0131D8  0EFF               	movlw	255
 14429  0131DA  22DA               	addwfc	fsr2h,f,c
 14430  0131DC  283D               	incf	(btemp+11)^0,w,c
 14431  0131DE  52DE               	movf	postinc2,f,c
 14432  0131E0  D008               	goto	u5720
 14433  0131E2                     u5725:
 14434  0131E2  52DE               	movf	postinc2,f,c
 14435  0131E4  90D8               	bcf	status,0,c
 14436  0131E6  BEDC               	btfsc	preinc2,7,c
 14437  0131E8  80D8               	bsf	status,0,c
 14438  0131EA  32DD               	rrcf	postdec2,f,c
 14439  0131EC  32DD               	rrcf	postdec2,f,c
 14440  0131EE  32DD               	rrcf	postdec2,f,c
 14441  0131F0  32DE               	rrcf	postinc2,f,c
 14442  0131F2                     u5720:
 14443  0131F2  2EE8               	decfsz	wreg,f,c
 14444  0131F4  D7F6               	goto	u5725
 14445                           
 14446                           ;stkvar	_new_exp @ sp[(-13)+8]
 14447  0131F6  0EFB               	movlw	-5
 14448  0131F8  50E3               	movf	plusw1,w,c
 14449  0131FA  0F01               	addlw	1
 14450  0131FC  6E32               	movwf	btemp^0,c
 14451  0131FE  0EFB               	movlw	-5
 14452  013200  0060  F0CB  FFE3   	movff	btemp,plusw1
 14453  013206  6A32               	clrf	btemp^0,c
 14454  013208  0EFC               	movlw	-4
 14455  01320A  50E3               	movf	plusw1,w,c
 14456  01320C  2032               	addwfc	btemp^0,w,c
 14457  01320E  6E32               	movwf	btemp^0,c
 14458  013210  0EFC               	movlw	-4
 14459  013212  0060  F0CB  FFE3   	movff	btemp,plusw1
 14460  013218                     l6699:
 14461                           
 14462                           ;stkvar	_new_exp @ sp[(-13)+8]
 14463  013218  0EFC               	movlw	-4
 14464  01321A  BEE3               	btfsc	plusw1,7,c
 14465  01321C  D01B               	goto	l6705
 14466  01321E  0EFC               	movlw	-4
 14467  013220  50E3               	movf	plusw1,w,c
 14468  013222  E104               	bnz	u5730
 14469  013224  0EFB               	movlw	-5
 14470  013226  28E3               	incf	plusw1,w,c
 14471  013228  A0D8               	btfss	status,0,c
 14472  01322A  D014               	goto	l6705
 14473  01322C                     u5730:
 14474  01322C  0EFF               	movlw	255
 14475  01322E  6E3C               	movwf	(btemp+10)^0,c
 14476  013230  0E00               	movlw	0
 14477  013232  6E3D               	movwf	(btemp+11)^0,c
 14478                           
 14479                           ;stkvar	_new_exp @ sp[(-13)+8]
 14480  013234  0EFB               	movlw	-5
 14481  013236  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14482  01323C  0EFC               	movlw	-4
 14483  01323E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14484                           
 14485                           ;stkvar	_b @ sp[(-13)+-4]
 14486  013244  0EEF               	movlw	-17
 14487  013246  6AE3               	clrf	plusw1,c
 14488  013248  0EF0               	movlw	-16
 14489  01324A  6AE3               	clrf	plusw1,c
 14490  01324C  0EF1               	movlw	-15
 14491  01324E  6AE3               	clrf	plusw1,c
 14492  013250  0EF2               	movlw	-14
 14493  013252  6AE3               	clrf	plusw1,c
 14494  013254                     l6705:
 14495                           
 14496                           ;stkvar	_new_exp @ sp[(-13)+8]
 14497  013254  0EFC               	movlw	-4
 14498  013256  BEE3               	btfsc	plusw1,7,c
 14499  013258  D007               	goto	u5740
 14500  01325A  0EFC               	movlw	-4
 14501  01325C  50E3               	movf	plusw1,w,c
 14502  01325E  E112               	bnz	l6711
 14503  013260  0EFB               	movlw	-5
 14504  013262  04E3               	decf	plusw1,w,c
 14505  013264  B0D8               	btfsc	status,0,c
 14506  013266  D00E               	goto	l6711
 14507  013268                     u5740:
 14508                           
 14509                           ;stkvar	_new_exp @ sp[(-13)+8]
 14510  013268  0EFB               	movlw	-5
 14511  01326A  6AE3               	clrf	plusw1,c
 14512  01326C  0EFC               	movlw	-4
 14513  01326E  6AE3               	clrf	plusw1,c
 14514                           
 14515                           ;stkvar	_b @ sp[(-13)+-4]
 14516  013270  0EEF               	movlw	-17
 14517  013272  6AE3               	clrf	plusw1,c
 14518  013274  0EF0               	movlw	-16
 14519  013276  6AE3               	clrf	plusw1,c
 14520  013278  0EF1               	movlw	-15
 14521  01327A  6AE3               	clrf	plusw1,c
 14522  01327C  0EF2               	movlw	-14
 14523  01327E  6AE3               	clrf	plusw1,c
 14524                           
 14525                           ;stkvar	_sign @ sp[(-13)+12]
 14526  013280  0EFF               	movlw	-1
 14527  013282  6AE3               	clrf	plusw1,c
 14528  013284                     l6711:
 14529                           
 14530                           ;stkvar	_new_exp @ sp[(-13)+8]
 14531                           ;stkvar	_bexp @ sp[(-13)+11]
 14532  013284  0EFB               	movlw	-5
 14533  013286  006F FF8C  F032    	movff	plusw1,btemp
 14534  01328C  0EFE               	movlw	-2
 14535  01328E  0060  F0CB  FFE3   	movff	btemp,plusw1
 14536                           
 14537                           ;stkvar	_bexp @ sp[(-13)+11]
 14538  013294  0EFE               	movlw	-2
 14539  013296  A0E3               	btfss	plusw1,0,c
 14540  013298  D009               	goto	l6717
 14541                           
 14542                           ;stkvar	_b @ sp[(-13)+-4]
 14543  01329A  0EF1               	movlw	241
 14544  01329C  24E1               	addwf	fsr1l,w,c
 14545  01329E  6ED9               	movwf	fsr2l,c
 14546  0132A0  0EFF               	movlw	255
 14547  0132A2  20E2               	addwfc	fsr1h,w,c
 14548  0132A4  6EDA               	movwf	fsr2h,c
 14549  0132A6  0E00               	movlw	0
 14550  0132A8  8EDB               	bsf	plusw2,7,c
 14551  0132AA  D008               	goto	l6719
 14552  0132AC                     l6717:
 14553                           
 14554                           ;stkvar	_b @ sp[(-13)+-4]
 14555  0132AC  0EF1               	movlw	241
 14556  0132AE  24E1               	addwf	fsr1l,w,c
 14557  0132B0  6ED9               	movwf	fsr2l,c
 14558  0132B2  0EFF               	movlw	255
 14559  0132B4  20E2               	addwfc	fsr1h,w,c
 14560  0132B6  6EDA               	movwf	fsr2h,c
 14561  0132B8  0E7F               	movlw	127
 14562  0132BA  16DF               	andwf	indf2,f,c
 14563  0132BC                     l6719:
 14564                           
 14565                           ;stkvar	_b @ sp[(-13)+-4]
 14566  0132BC  0EF2               	movlw	242
 14567  0132BE  24E1               	addwf	fsr1l,w,c
 14568  0132C0  6ED9               	movwf	fsr2l,c
 14569  0132C2  0EFF               	movlw	255
 14570  0132C4  20E2               	addwfc	fsr1h,w,c
 14571  0132C6  6EDA               	movwf	fsr2h,c
 14572                           
 14573                           ;stkvar	_bexp @ sp[(-13)+11]
 14574  0132C8  0EFE               	movlw	-2
 14575  0132CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 14576  0132D0  90D8               	bcf	status,0,c
 14577  0132D2  303D               	rrcf	(btemp+11)^0,w,c
 14578  0132D4  6EDF               	movwf	indf2,c
 14579  0132D6  D644               	goto	l6617
 14580  0132D8                     l2628:
 14581                           
 14582                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 14583  0132D8  0EEB               	movlw	235
 14584  0132DA  26E1               	addwf	fsr1l,f,c
 14585  0132DC  0EFF               	movlw	255
 14586  0132DE  22E2               	addwfc	fsr1h,f,c
 14587  0132E0  0012               	return		;funcret
 14588  0132E2                     __end_of___fldiv:
 14589                           	opt callstack 0
 14590                           
 14591 ;; *************** function ___awmod *****************
 14592 ;; Defined at:
 14593 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;  dividend        2  [STACK] int 
 14596 ;;  divisor         2  [STACK] int 
 14597 ;; Auto vars:     Size  Location     Type
 14598 ;;  sign            1  [STACK] unsigned char 
 14599 ;;  counter         1  [STACK] unsigned char 
 14600 ;; Return value:  Size  Location     Type
 14601 ;;                  2  [STACK] int 
 14602 ;; Registers used:
 14603 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 14604 ;; Tracked objects:
 14605 ;;		On entry : 0/5
 14606 ;;		On exit  : 0/0
 14607 ;;		Unchanged: 0/0
 14608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14613 ;;Total ram usage:        0 bytes
 14614 ;; Hardware stack levels used:    1
 14615 ;; Hardware stack levels required when called:    6
 14616 ;; This function calls:
 14617 ;;		Nothing
 14618 ;; This function is called by:
 14619 ;;		_efgtoa
 14620 ;; This function uses a reentrant model
 14621 ;;
 14622                           
 14623                           	psect	text54
 14624  0167E8                     __ptext54:
 14625                           	opt callstack 0
 14626  0167E8                     ___awmod:
 14627                           	opt callstack 0
 14628                           
 14629                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14630  0167E8  52E6               	movf	postinc1,f,c
 14631  0167EA  52E6               	movf	postinc1,f,c
 14632                           
 14633                           ;stkvar	_sign @ sp[(-2)+0]
 14634                           
 14635                           ;incstack = 0
 14636  0167EC  0EFE               	movlw	-2
 14637  0167EE  6AE3               	clrf	plusw1,c
 14638                           
 14639                           ;stkvar	_dividend @ sp[(-2)+-2]
 14640  0167F0  0EFD               	movlw	-3
 14641  0167F2  AEE3               	btfss	plusw1,7,c
 14642  0167F4  D009               	goto	l6943
 14643                           
 14644                           ;stkvar	_dividend @ sp[(-2)+-2]
 14645                           ;stkvar	_dividend @ sp[(-2)+-2]
 14646  0167F6  0EFC               	movlw	-4
 14647  0167F8  6CE3               	negf	plusw1,c
 14648  0167FA  0EFD               	movlw	-3
 14649  0167FC  1EE3               	comf	plusw1,f,c
 14650  0167FE  B0D8               	btfsc	status,0,c
 14651  016800  2AE3               	incf	plusw1,f,c
 14652                           
 14653                           ;stkvar	_sign @ sp[(-2)+0]
 14654  016802  0EFE               	movlw	-2
 14655  016804  6AE3               	clrf	plusw1,c
 14656  016806  2AE3               	incf	plusw1,f,c
 14657  016808                     l6943:
 14658                           
 14659                           ;stkvar	_divisor @ sp[(-2)+-4]
 14660  016808  0EFB               	movlw	-5
 14661  01680A  AEE3               	btfss	plusw1,7,c
 14662  01680C  D006               	goto	l6947
 14663                           
 14664                           ;stkvar	_divisor @ sp[(-2)+-4]
 14665                           ;stkvar	_divisor @ sp[(-2)+-4]
 14666  01680E  0EFA               	movlw	-6
 14667  016810  6CE3               	negf	plusw1,c
 14668  016812  0EFB               	movlw	-5
 14669  016814  1EE3               	comf	plusw1,f,c
 14670  016816  B0D8               	btfsc	status,0,c
 14671  016818  2AE3               	incf	plusw1,f,c
 14672  01681A                     l6947:
 14673                           
 14674                           ;stkvar	_divisor @ sp[(-2)+-4]
 14675  01681A  0EFA               	movlw	-6
 14676  01681C  006F FF8C  F032    	movff	plusw1,btemp
 14677  016822  0EFB               	movlw	-5
 14678  016824  50E3               	movf	plusw1,w,c
 14679  016826  1032               	iorwf	btemp^0,w,c
 14680  016828  B4D8               	btfsc	status,2,c
 14681  01682A  D053               	goto	u6100
 14682                           
 14683                           ;stkvar	_counter @ sp[(-2)+1]
 14684  01682C  0EFF               	movlw	-1
 14685  01682E  6AE3               	clrf	plusw1,c
 14686  016830  D012               	goto	L13
 14687  016832                     l6951:
 14688                           
 14689                           ;stkvar	_divisor @ sp[(-2)+-4]
 14690  016832  0EFA               	movlw	-6
 14691  016834  50E3               	movf	plusw1,w,c
 14692  016836  90D8               	bcf	status,0,c
 14693  016838  34E8               	rlcf	wreg,w,c
 14694  01683A  6E32               	movwf	btemp^0,c
 14695  01683C  0EFA               	movlw	-6
 14696  01683E  0060  F0CB  FFE3   	movff	btemp,plusw1
 14697  016844  0EFB               	movlw	-5
 14698  016846  50E3               	movf	plusw1,w,c
 14699  016848  34E8               	rlcf	wreg,w,c
 14700  01684A  6E32               	movwf	btemp^0,c
 14701  01684C  0EFB               	movlw	-5
 14702  01684E  0060  F0CB  FFE3   	movff	btemp,plusw1
 14703                           
 14704                           ;stkvar	_counter @ sp[(-2)+1]
 14705  016854  0EFF               	movlw	-1
 14706  016856                     L13:
 14707  016856  2AE3               	incf	plusw1,f,c
 14708                           
 14709                           ;stkvar	_divisor @ sp[(-2)+-4]
 14710  016858  0EFB               	movlw	-5
 14711  01685A  AEE3               	btfss	plusw1,7,c
 14712  01685C  D7EA               	goto	l6951
 14713  01685E                     u6080:
 14714                           
 14715                           ;stkvar	_divisor @ sp[(-2)+-4]
 14716  01685E  0EFA               	movlw	-6
 14717  016860  006F FF8C  F03C    	movff	plusw1,btemp+10
 14718  016866  0EFB               	movlw	-5
 14719  016868  006F FF8C  F03D    	movff	plusw1,btemp+11
 14720                           
 14721                           ;stkvar	_dividend @ sp[(-2)+-2]
 14722  01686E  0EFC               	movlw	-4
 14723  016870  006F FF8C  F03A    	movff	plusw1,btemp+8
 14724  016876  0EFD               	movlw	-3
 14725  016878  006F FF8C  F03B    	movff	plusw1,btemp+9
 14726  01687E  503C               	movf	(btemp+10)^0,w,c
 14727  016880  5C3A               	subwf	(btemp+8)^0,w,c
 14728  016882  503D               	movf	(btemp+11)^0,w,c
 14729  016884  583B               	subwfb	(btemp+9)^0,w,c
 14730  016886  A0D8               	btfss	status,0,c
 14731  016888  D014               	goto	l6961
 14732                           
 14733                           ;stkvar	_divisor @ sp[(-2)+-4]
 14734                           ;stkvar	_dividend @ sp[(-2)+-2]
 14735  01688A  0EFC               	movlw	-4
 14736  01688C  50E3               	movf	plusw1,w,c
 14737  01688E  6E32               	movwf	btemp^0,c
 14738  016890  0EFA               	movlw	-6
 14739  016892  50E3               	movf	plusw1,w,c
 14740  016894  5E32               	subwf	btemp^0,f,c
 14741  016896  0EFC               	movlw	-4
 14742  016898  0060  F0CB  FFE3   	movff	btemp,plusw1
 14743  01689E  0EFD               	movlw	-3
 14744  0168A0  50E3               	movf	plusw1,w,c
 14745  0168A2  6E32               	movwf	btemp^0,c
 14746  0168A4  0EFB               	movlw	-5
 14747  0168A6  50E3               	movf	plusw1,w,c
 14748  0168A8  5A32               	subwfb	btemp^0,f,c
 14749  0168AA  0EFD               	movlw	-3
 14750  0168AC  0060  F0CB  FFE3   	movff	btemp,plusw1
 14751  0168B2                     l6961:
 14752                           
 14753                           ;stkvar	_divisor @ sp[(-2)+-4]
 14754  0168B2  90D8               	bcf	status,0,c
 14755  0168B4  0EFB               	movlw	-5
 14756  0168B6  32E3               	rrcf	plusw1,f,c
 14757  0168B8  0EFA               	movlw	-6
 14758  0168BA  32E3               	rrcf	plusw1,f,c
 14759                           
 14760                           ;stkvar	_counter @ sp[(-2)+1]
 14761  0168BC  0EFF               	movlw	-1
 14762  0168BE  50E3               	movf	plusw1,w,c
 14763  0168C0  6E32               	movwf	btemp^0,c
 14764  0168C2  0E01               	movlw	1
 14765  0168C4  5E32               	subwf	btemp^0,f,c
 14766  0168C6  0EFF               	movlw	-1
 14767  0168C8  0060  F0CB  FFE3   	movff	btemp,plusw1
 14768  0168CE  A4D8               	btfss	status,2,c
 14769  0168D0  D7C6               	goto	u6080
 14770  0168D2                     u6100:
 14771                           
 14772                           ;stkvar	_sign @ sp[(-2)+0]
 14773  0168D2  0EFE               	movlw	-2
 14774  0168D4  50E3               	movf	plusw1,w,c
 14775  0168D6  B4D8               	btfsc	status,2,c
 14776  0168D8  D006               	goto	l6969
 14777                           
 14778                           ;stkvar	_dividend @ sp[(-2)+-2]
 14779                           ;stkvar	_dividend @ sp[(-2)+-2]
 14780  0168DA  0EFC               	movlw	-4
 14781  0168DC  6CE3               	negf	plusw1,c
 14782  0168DE  0EFD               	movlw	-3
 14783  0168E0  1EE3               	comf	plusw1,f,c
 14784  0168E2  B0D8               	btfsc	status,0,c
 14785  0168E4  2AE3               	incf	plusw1,f,c
 14786  0168E6                     l6969:
 14787                           
 14788                           ;stkvar	_dividend @ sp[(-2)+-2]
 14789  0168E6  0EFC               	movlw	-4
 14790  0168E8  006F FF8C  F032    	movff	plusw1,btemp
 14791  0168EE  0EFD               	movlw	-3
 14792  0168F0  006F FF8C  F033    	movff	plusw1,btemp+1
 14793                           
 14794                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14795  0168F6  0EFA               	movlw	250
 14796  0168F8  26E1               	addwf	fsr1l,f,c
 14797  0168FA  0EFF               	movlw	255
 14798  0168FC  22E2               	addwfc	fsr1h,f,c
 14799  0168FE  0012               	return		;funcret
 14800  016900                     __end_of___awmod:
 14801                           	opt callstack 0
 14802                           
 14803 ;; *************** function ___awdiv *****************
 14804 ;; Defined at:
 14805 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 14806 ;; Parameters:    Size  Location     Type
 14807 ;;  dividend        2  [STACK] int 
 14808 ;;  divisor         2  [STACK] int 
 14809 ;; Auto vars:     Size  Location     Type
 14810 ;;  quotient        2  [STACK] int 
 14811 ;;  sign            1  [STACK] unsigned char 
 14812 ;;  counter         1  [STACK] unsigned char 
 14813 ;; Return value:  Size  Location     Type
 14814 ;;                  2  [STACK] int 
 14815 ;; Registers used:
 14816 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 14817 ;; Tracked objects:
 14818 ;;		On entry : 0/5
 14819 ;;		On exit  : 0/0
 14820 ;;		Unchanged: 0/0
 14821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14826 ;;Total ram usage:        0 bytes
 14827 ;; Hardware stack levels used:    1
 14828 ;; Hardware stack levels required when called:    6
 14829 ;; This function calls:
 14830 ;;		Nothing
 14831 ;; This function is called by:
 14832 ;;		_efgtoa
 14833 ;; This function uses a reentrant model
 14834 ;;
 14835                           
 14836                           	psect	text55
 14837  016300                     __ptext55:
 14838                           	opt callstack 0
 14839  016300                     ___awdiv:
 14840                           	opt callstack 0
 14841                           
 14842                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14843  016300  52E6               	movf	postinc1,f,c
 14844  016302  52E6               	movf	postinc1,f,c
 14845  016304  52E6               	movf	postinc1,f,c
 14846  016306  52E6               	movf	postinc1,f,c
 14847                           
 14848                           ;stkvar	_sign @ sp[(-4)+2]
 14849                           
 14850                           ;incstack = 0
 14851  016308  0EFE               	movlw	-2
 14852  01630A  6AE3               	clrf	plusw1,c
 14853                           
 14854                           ;stkvar	_divisor @ sp[(-4)+-4]
 14855  01630C  0EF9               	movlw	-7
 14856  01630E  AEE3               	btfss	plusw1,7,c
 14857  016310  D009               	goto	l6897
 14858                           
 14859                           ;stkvar	_divisor @ sp[(-4)+-4]
 14860                           ;stkvar	_divisor @ sp[(-4)+-4]
 14861  016312  0EF8               	movlw	-8
 14862  016314  6CE3               	negf	plusw1,c
 14863  016316  0EF9               	movlw	-7
 14864  016318  1EE3               	comf	plusw1,f,c
 14865  01631A  B0D8               	btfsc	status,0,c
 14866  01631C  2AE3               	incf	plusw1,f,c
 14867                           
 14868                           ;stkvar	_sign @ sp[(-4)+2]
 14869  01631E  0EFE               	movlw	-2
 14870  016320  6AE3               	clrf	plusw1,c
 14871  016322  2AE3               	incf	plusw1,f,c
 14872  016324                     l6897:
 14873                           
 14874                           ;stkvar	_dividend @ sp[(-4)+-2]
 14875  016324  0EFB               	movlw	-5
 14876  016326  AEE3               	btfss	plusw1,7,c
 14877  016328  D008               	goto	l6903
 14878                           
 14879                           ;stkvar	_dividend @ sp[(-4)+-2]
 14880                           ;stkvar	_dividend @ sp[(-4)+-2]
 14881  01632A  0EFA               	movlw	-6
 14882  01632C  6CE3               	negf	plusw1,c
 14883  01632E  0EFB               	movlw	-5
 14884  016330  1EE3               	comf	plusw1,f,c
 14885  016332  B0D8               	btfsc	status,0,c
 14886  016334  2AE3               	incf	plusw1,f,c
 14887                           
 14888                           ;stkvar	_sign @ sp[(-4)+2]
 14889  016336  0EFE               	movlw	-2
 14890  016338  70E3               	btg	plusw1,0,c
 14891  01633A                     l6903:
 14892                           
 14893                           ;stkvar	_quotient @ sp[(-4)+0]
 14894  01633A  0EFC               	movlw	-4
 14895  01633C  6AE3               	clrf	plusw1,c
 14896  01633E  0EFD               	movlw	-3
 14897  016340  6AE3               	clrf	plusw1,c
 14898                           
 14899                           ;stkvar	_divisor @ sp[(-4)+-4]
 14900  016342  0EF8               	movlw	-8
 14901  016344  006F FF8C  F032    	movff	plusw1,btemp
 14902  01634A  0EF9               	movlw	-7
 14903  01634C  50E3               	movf	plusw1,w,c
 14904  01634E  1032               	iorwf	btemp^0,w,c
 14905  016350  B4D8               	btfsc	status,2,c
 14906  016352  D066               	goto	u6030
 14907                           
 14908                           ;stkvar	_counter @ sp[(-4)+3]
 14909  016354  0EFF               	movlw	-1
 14910  016356  6AE3               	clrf	plusw1,c
 14911  016358  D012               	goto	L14
 14912  01635A                     l6909:
 14913                           
 14914                           ;stkvar	_divisor @ sp[(-4)+-4]
 14915  01635A  0EF8               	movlw	-8
 14916  01635C  50E3               	movf	plusw1,w,c
 14917  01635E  90D8               	bcf	status,0,c
 14918  016360  34E8               	rlcf	wreg,w,c
 14919  016362  6E32               	movwf	btemp^0,c
 14920  016364  0EF8               	movlw	-8
 14921  016366  0060  F0CB  FFE3   	movff	btemp,plusw1
 14922  01636C  0EF9               	movlw	-7
 14923  01636E  50E3               	movf	plusw1,w,c
 14924  016370  34E8               	rlcf	wreg,w,c
 14925  016372  6E32               	movwf	btemp^0,c
 14926  016374  0EF9               	movlw	-7
 14927  016376  0060  F0CB  FFE3   	movff	btemp,plusw1
 14928                           
 14929                           ;stkvar	_counter @ sp[(-4)+3]
 14930  01637C  0EFF               	movlw	-1
 14931  01637E                     L14:
 14932  01637E  2AE3               	incf	plusw1,f,c
 14933                           
 14934                           ;stkvar	_divisor @ sp[(-4)+-4]
 14935  016380  0EF9               	movlw	-7
 14936  016382  AEE3               	btfss	plusw1,7,c
 14937  016384  D7EA               	goto	l6909
 14938  016386                     u6010:
 14939                           
 14940                           ;stkvar	_quotient @ sp[(-4)+0]
 14941  016386  0EFC               	movlw	-4
 14942  016388  50E3               	movf	plusw1,w,c
 14943  01638A  90D8               	bcf	status,0,c
 14944  01638C  34E8               	rlcf	wreg,w,c
 14945  01638E  6E32               	movwf	btemp^0,c
 14946  016390  0EFC               	movlw	-4
 14947  016392  0060  F0CB  FFE3   	movff	btemp,plusw1
 14948  016398  0EFD               	movlw	-3
 14949  01639A  50E3               	movf	plusw1,w,c
 14950  01639C  34E8               	rlcf	wreg,w,c
 14951  01639E  6E32               	movwf	btemp^0,c
 14952  0163A0  0EFD               	movlw	-3
 14953  0163A2  0060  F0CB  FFE3   	movff	btemp,plusw1
 14954                           
 14955                           ;stkvar	_divisor @ sp[(-4)+-4]
 14956  0163A8  0EF8               	movlw	-8
 14957  0163AA  006F FF8C  F03C    	movff	plusw1,btemp+10
 14958  0163B0  0EF9               	movlw	-7
 14959  0163B2  006F FF8C  F03D    	movff	plusw1,btemp+11
 14960                           
 14961                           ;stkvar	_dividend @ sp[(-4)+-2]
 14962  0163B8  0EFA               	movlw	-6
 14963  0163BA  006F FF8C  F03A    	movff	plusw1,btemp+8
 14964  0163C0  0EFB               	movlw	-5
 14965  0163C2  006F FF8C  F03B    	movff	plusw1,btemp+9
 14966  0163C8  503C               	movf	(btemp+10)^0,w,c
 14967  0163CA  5C3A               	subwf	(btemp+8)^0,w,c
 14968  0163CC  503D               	movf	(btemp+11)^0,w,c
 14969  0163CE  583B               	subwfb	(btemp+9)^0,w,c
 14970  0163D0  A0D8               	btfss	status,0,c
 14971  0163D2  D016               	goto	l6923
 14972                           
 14973                           ;stkvar	_divisor @ sp[(-4)+-4]
 14974                           ;stkvar	_dividend @ sp[(-4)+-2]
 14975  0163D4  0EFA               	movlw	-6
 14976  0163D6  50E3               	movf	plusw1,w,c
 14977  0163D8  6E32               	movwf	btemp^0,c
 14978  0163DA  0EF8               	movlw	-8
 14979  0163DC  50E3               	movf	plusw1,w,c
 14980  0163DE  5E32               	subwf	btemp^0,f,c
 14981  0163E0  0EFA               	movlw	-6
 14982  0163E2  0060  F0CB  FFE3   	movff	btemp,plusw1
 14983  0163E8  0EFB               	movlw	-5
 14984  0163EA  50E3               	movf	plusw1,w,c
 14985  0163EC  6E32               	movwf	btemp^0,c
 14986  0163EE  0EF9               	movlw	-7
 14987  0163F0  50E3               	movf	plusw1,w,c
 14988  0163F2  5A32               	subwfb	btemp^0,f,c
 14989  0163F4  0EFB               	movlw	-5
 14990  0163F6  0060  F0CB  FFE3   	movff	btemp,plusw1
 14991                           
 14992                           ;stkvar	_quotient @ sp[(-4)+0]
 14993  0163FC  0EFC               	movlw	-4
 14994  0163FE  80E3               	bsf	plusw1,0,c
 14995  016400                     l6923:
 14996                           
 14997                           ;stkvar	_divisor @ sp[(-4)+-4]
 14998  016400  90D8               	bcf	status,0,c
 14999  016402  0EF9               	movlw	-7
 15000  016404  32E3               	rrcf	plusw1,f,c
 15001  016406  0EF8               	movlw	-8
 15002  016408  32E3               	rrcf	plusw1,f,c
 15003                           
 15004                           ;stkvar	_counter @ sp[(-4)+3]
 15005  01640A  0EFF               	movlw	-1
 15006  01640C  50E3               	movf	plusw1,w,c
 15007  01640E  6E32               	movwf	btemp^0,c
 15008  016410  0E01               	movlw	1
 15009  016412  5E32               	subwf	btemp^0,f,c
 15010  016414  0EFF               	movlw	-1
 15011  016416  0060  F0CB  FFE3   	movff	btemp,plusw1
 15012  01641C  A4D8               	btfss	status,2,c
 15013  01641E  D7B3               	goto	u6010
 15014  016420                     u6030:
 15015                           
 15016                           ;stkvar	_sign @ sp[(-4)+2]
 15017  016420  0EFE               	movlw	-2
 15018  016422  50E3               	movf	plusw1,w,c
 15019  016424  B4D8               	btfsc	status,2,c
 15020  016426  D006               	goto	l6931
 15021                           
 15022                           ;stkvar	_quotient @ sp[(-4)+0]
 15023                           ;stkvar	_quotient @ sp[(-4)+0]
 15024  016428  0EFC               	movlw	-4
 15025  01642A  6CE3               	negf	plusw1,c
 15026  01642C  0EFD               	movlw	-3
 15027  01642E  1EE3               	comf	plusw1,f,c
 15028  016430  B0D8               	btfsc	status,0,c
 15029  016432  2AE3               	incf	plusw1,f,c
 15030  016434                     l6931:
 15031                           
 15032                           ;stkvar	_quotient @ sp[(-4)+0]
 15033  016434  0EFC               	movlw	-4
 15034  016436  006F FF8C  F032    	movff	plusw1,btemp
 15035  01643C  0EFD               	movlw	-3
 15036  01643E  006F FF8C  F033    	movff	plusw1,btemp+1
 15037                           
 15038                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15039  016444  0EF8               	movlw	248
 15040  016446  26E1               	addwf	fsr1l,f,c
 15041  016448  0EFF               	movlw	255
 15042  01644A  22E2               	addwfc	fsr1h,f,c
 15043  01644C  0012               	return		;funcret
 15044  01644E                     __end_of___awdiv:
 15045                           	opt callstack 0
 15046                           
 15047 ;; *************** function _dtoa *****************
 15048 ;; Defined at:
 15049 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15050 ;; Parameters:    Size  Location     Type
 15051 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15052 ;;		 -> f(6), NULL(0), 
 15053 ;;  d               8  [STACK] long long 
 15054 ;; Auto vars:     Size  Location     Type
 15055 ;;  n               8  [STACK] long long 
 15056 ;;  i               2  [STACK] int 
 15057 ;;  s               2  [STACK] int 
 15058 ;;  w               2  [STACK] int 
 15059 ;;  p               2  [STACK] int 
 15060 ;; Return value:  Size  Location     Type
 15061 ;;                  2  [STACK] int 
 15062 ;; Registers used:
 15063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 15064 ;; Tracked objects:
 15065 ;;		On entry : 0/5
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15073 ;;Total ram usage:        0 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; Hardware stack levels required when called:   11
 15076 ;; This function calls:
 15077 ;;		___aodiv
 15078 ;;		___aomod
 15079 ;;		_abs
 15080 ;;		_pad
 15081 ;; This function is called by:
 15082 ;;		_vfpfcnvrt
 15083 ;; This function uses a reentrant model
 15084 ;;
 15085                           
 15086                           	psect	text56
 15087  013C4C                     __ptext56:
 15088                           	opt callstack 0
 15089  013C4C                     _dtoa:
 15090                           	opt callstack 0
 15091                           
 15092                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15093  013C4C  0E12               	movlw	18
 15094  013C4E  26E1               	addwf	fsr1l,f,c
 15095  013C50  0E00               	movlw	0
 15096  013C52  22E2               	addwfc	fsr1h,f,c
 15097                           
 15098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 15099                           ;stkvar	_d @ sp[(-18)+-10]
 15100                           
 15101                           ;incstack = 0
 15102  013C54  0EE4               	movlw	228
 15103  013C56  24E1               	addwf	fsr1l,w,c
 15104  013C58  6ED9               	movwf	fsr2l,c
 15105  013C5A  0EFF               	movlw	255
 15106  013C5C  20E2               	addwfc	fsr1h,w,c
 15107  013C5E  6EDA               	movwf	fsr2h,c
 15108                           
 15109                           ;stkvar	_n @ sp[(-18)+2]
 15110  013C60  0E08               	movlw	8
 15111  013C62  6E32               	movwf	btemp^0,c
 15112  013C64  0EF0               	movlw	-16
 15113  013C66                     us890999:
 15114  013C66  006F FF7B FFE3     	movff	postinc2,plusw1
 15115  013C6C  28E8               	incf	wreg,w,c
 15116  013C6E  2E32               	decfsz	btemp^0,f,c
 15117  013C70  D7FA               	bra	us890999
 15118                           
 15119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 15120                           ;stkvar	_n @ sp[(-18)+2]
 15121  013C72  0EF7               	movlw	-9
 15122  013C74  AEE3               	btfss	plusw1,7,c
 15123  013C76  D002               	goto	u8910
 15124  013C78  0E01               	movlw	1
 15125  013C7A  D001               	goto	u8920
 15126  013C7C                     u8910:
 15127  013C7C  0E00               	movlw	0
 15128  013C7E                     u8920:
 15129  013C7E  6E3C               	movwf	(btemp+10)^0,c
 15130  013C80  6A3D               	clrf	(btemp+11)^0,c
 15131                           
 15132                           ;stkvar	_s @ sp[(-18)+12]
 15133  013C82  0EFA               	movlw	-6
 15134  013C84  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15135  013C8A  0EFB               	movlw	-5
 15136  013C8C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15137                           
 15138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 15139                           ;stkvar	_s @ sp[(-18)+12]
 15140  013C92  0EFA               	movlw	-6
 15141  013C94  006F FF8C  F032    	movff	plusw1,btemp
 15142  013C9A  0EFB               	movlw	-5
 15143  013C9C  50E3               	movf	plusw1,w,c
 15144  013C9E  1032               	iorwf	btemp^0,w,c
 15145  013CA0  B4D8               	btfsc	status,2,c
 15146  013CA2  D025               	goto	u8940
 15147                           
 15148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 15149                           ;stkvar	_n @ sp[(-18)+2]
 15150                           ;stkvar	_n @ sp[(-18)+2]
 15151  013CA4  0EF0               	movlw	-16
 15152  013CA6  6CE3               	negf	plusw1,c
 15153  013CA8  0EF1               	movlw	-15
 15154  013CAA  1EE3               	comf	plusw1,f,c
 15155  013CAC  0EF2               	movlw	-14
 15156  013CAE  1EE3               	comf	plusw1,f,c
 15157  013CB0  0EF3               	movlw	-13
 15158  013CB2  1EE3               	comf	plusw1,f,c
 15159  013CB4  0EF4               	movlw	-12
 15160  013CB6  1EE3               	comf	plusw1,f,c
 15161  013CB8  0EF5               	movlw	-11
 15162  013CBA  1EE3               	comf	plusw1,f,c
 15163  013CBC  0EF6               	movlw	-10
 15164  013CBE  1EE3               	comf	plusw1,f,c
 15165  013CC0  0EF7               	movlw	-9
 15166  013CC2  1EE3               	comf	plusw1,f,c
 15167  013CC4  E314               	bnc	u8940
 15168  013CC6  0EF1               	movlw	-15
 15169  013CC8  2AE3               	incf	plusw1,f,c
 15170  013CCA  E311               	bnc	u8940
 15171  013CCC  0EF2               	movlw	-14
 15172  013CCE  2AE3               	incf	plusw1,f,c
 15173  013CD0  E30E               	bnc	u8940
 15174  013CD2  0EF3               	movlw	-13
 15175  013CD4  2AE3               	incf	plusw1,f,c
 15176  013CD6  E30B               	bnc	u8940
 15177  013CD8  0EF4               	movlw	-12
 15178  013CDA  2AE3               	incf	plusw1,f,c
 15179  013CDC  E308               	bnc	u8940
 15180  013CDE  0EF5               	movlw	-11
 15181  013CE0  2AE3               	incf	plusw1,f,c
 15182  013CE2  E305               	bnc	u8940
 15183  013CE4  0EF6               	movlw	-10
 15184  013CE6  2AE3               	incf	plusw1,f,c
 15185  013CE8  E302               	bnc	u8940
 15186  013CEA  0EF7               	movlw	-9
 15187  013CEC  2AE3               	incf	plusw1,f,c
 15188  013CEE                     u8940:
 15189                           
 15190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 15191  013CEE  AE1E               	btfss	(_prec+1)^0,7,c
 15192                           
 15193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 15194  013CF0  921F               	bcf	_flags^0,1,c
 15195                           
 15196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 15197  013CF2  BE1E               	btfsc	(_prec+1)^0,7,c
 15198  013CF4  D005               	goto	u8960
 15199  013CF6  501E               	movf	(_prec+1)^0,w,c
 15200  013CF8  E110               	bnz	l9303
 15201  013CFA  041D               	decf	_prec^0,w,c
 15202  013CFC  B0D8               	btfsc	status,0,c
 15203  013CFE  D00D               	goto	l9303
 15204  013D00                     u8960:
 15205  013D00  0E01               	movlw	1
 15206  013D02  6E3C               	movwf	(btemp+10)^0,c
 15207  013D04  0E00               	movlw	0
 15208  013D06  6E3D               	movwf	(btemp+11)^0,c
 15209                           
 15210                           ;stkvar	_p @ sp[(-18)+16]
 15211  013D08  0EFE               	movlw	-2
 15212  013D0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15213  013D10  0EFF               	movlw	-1
 15214  013D12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15215  013D18  D008               	goto	l1832
 15216  013D1A                     l9303:
 15217                           
 15218                           ;stkvar	_p @ sp[(-18)+16]
 15219  013D1A  0EFE               	movlw	-2
 15220  013D1C  0060  F077  FFE3   	movff	_prec,plusw1
 15221  013D22  0EFF               	movlw	-1
 15222  013D24  0060  F07B  FFE3   	movff	_prec+1,plusw1
 15223  013D2A                     l1832:
 15224                           
 15225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 15226                           ;stkvar	_w @ sp[(-18)+14]
 15227  013D2A  0EFC               	movlw	-4
 15228  013D2C  0060  F06F  FFE3   	movff	_width,plusw1
 15229  013D32  0EFD               	movlw	-3
 15230  013D34  0060  F073  FFE3   	movff	_width+1,plusw1
 15231                           
 15232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 15233                           ;stkvar	_s @ sp[(-18)+12]
 15234  013D3A  0EFA               	movlw	-6
 15235  013D3C  006F FF8C  F032    	movff	plusw1,btemp
 15236  013D42  0EFB               	movlw	-5
 15237  013D44  50E3               	movf	plusw1,w,c
 15238  013D46  1032               	iorwf	btemp^0,w,c
 15239  013D48  A4D8               	btfss	status,2,c
 15240  013D4A  D002               	goto	u8980
 15241  013D4C  A41F               	btfss	_flags^0,2,c
 15242  013D4E  D00A               	goto	l9311
 15243  013D50                     u8980:
 15244                           
 15245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 15246                           ;stkvar	_w @ sp[(-18)+14]
 15247  013D50  50E1               	movf	fsr1l,w,c
 15248  013D52  0FFC               	addlw	-4
 15249  013D54  6ED9               	movwf	fsr2l,c
 15250  013D56  50E2               	movf	fsr1h,w,c
 15251  013D58  6EDA               	movwf	fsr2h,c
 15252  013D5A  0EFF               	movlw	255
 15253  013D5C  22DA               	addwfc	fsr2h,f,c
 15254  013D5E  06DE               	decf	postinc2,f,c
 15255  013D60  0E00               	movlw	0
 15256  013D62  5ADD               	subwfb	postdec2,f,c
 15257  013D64                     l9311:
 15258                           
 15259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 15260  013D64  0E4F               	movlw	79
 15261  013D66  6E3C               	movwf	(btemp+10)^0,c
 15262  013D68  0E00               	movlw	0
 15263  013D6A  6E3D               	movwf	(btemp+11)^0,c
 15264                           
 15265                           ;stkvar	_i @ sp[(-18)+10]
 15266  013D6C  0EF8               	movlw	-8
 15267  013D6E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15268  013D74  0EF9               	movlw	-7
 15269  013D76  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15270                           
 15271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 15272  013D7C  0101               	movlb	1	; () banked
 15273  013D7E  6BC7               	clrf	(_dbuf+79)& (0+255),b
 15274                           
 15275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15276  013D80  D109               	goto	l9325
 15277  013D82                     l9315:
 15278                           
 15279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 15280                           ;stkvar	_i @ sp[(-18)+10]
 15281  013D82  50E1               	movf	fsr1l,w,c
 15282  013D84  0FF8               	addlw	-8
 15283  013D86  6ED9               	movwf	fsr2l,c
 15284  013D88  50E2               	movf	fsr1h,w,c
 15285  013D8A  6EDA               	movwf	fsr2h,c
 15286  013D8C  0EFF               	movlw	255
 15287  013D8E  22DA               	addwfc	fsr2h,f,c
 15288  013D90  06DE               	decf	postinc2,f,c
 15289  013D92  0E00               	movlw	0
 15290  013D94  5ADD               	subwfb	postdec2,f,c
 15291                           
 15292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 15293  013D96  0E0A               	movlw	10
 15294  013D98  6EE6               	movwf	postinc1,c
 15295  013D9A  0E00               	movlw	0
 15296  013D9C  6EE6               	movwf	postinc1,c
 15297  013D9E  0E00               	movlw	0
 15298  013DA0  6EE6               	movwf	postinc1,c
 15299  013DA2  0E00               	movlw	0
 15300  013DA4  6EE6               	movwf	postinc1,c
 15301  013DA6  0E00               	movlw	0
 15302  013DA8  6EE6               	movwf	postinc1,c
 15303  013DAA  0E00               	movlw	0
 15304  013DAC  6EE6               	movwf	postinc1,c
 15305  013DAE  0E00               	movlw	0
 15306  013DB0  6EE6               	movwf	postinc1,c
 15307  013DB2  0E00               	movlw	0
 15308  013DB4  6EE6               	movwf	postinc1,c
 15309                           
 15310                           ;stkvar	_n @ sp[(-26)+2]
 15311  013DB6  50E1               	movf	fsr1l,w,c
 15312  013DB8  0FE8               	addlw	-24
 15313  013DBA  6ED9               	movwf	fsr2l,c
 15314  013DBC  50E2               	movf	fsr1h,w,c
 15315  013DBE  6EDA               	movwf	fsr2h,c
 15316  013DC0  0EFF               	movlw	255
 15317  013DC2  22DA               	addwfc	fsr2h,f,c
 15318  013DC4  006F FF7B FFE6     	movff	postinc2,postinc1
 15319  013DCA  006F FF7B FFE6     	movff	postinc2,postinc1
 15320  013DD0  006F FF7B FFE6     	movff	postinc2,postinc1
 15321  013DD6  006F FF7B FFE6     	movff	postinc2,postinc1
 15322  013DDC  006F FF7B FFE6     	movff	postinc2,postinc1
 15323  013DE2  006F FF7B FFE6     	movff	postinc2,postinc1
 15324  013DE8  006F FF7B FFE6     	movff	postinc2,postinc1
 15325  013DEE  006F FF7B FFE6     	movff	postinc2,postinc1
 15326  013DF4  EC48  F0A9         	call	___aomod	;wreg free
 15327  013DF8  52E5               	movf	postdec1,f,c
 15328  013DFA  006F FF9C  F049    	movff	indf1,btemp+23
 15329  013E00  52E5               	movf	postdec1,f,c
 15330  013E02  006F FF9C  F048    	movff	indf1,btemp+22
 15331  013E08  52E5               	movf	postdec1,f,c
 15332  013E0A  006F FF9C  F047    	movff	indf1,btemp+21
 15333  013E10  52E5               	movf	postdec1,f,c
 15334  013E12  006F FF9C  F046    	movff	indf1,btemp+20
 15335  013E18  52E5               	movf	postdec1,f,c
 15336  013E1A  006F FF9C  F045    	movff	indf1,btemp+19
 15337  013E20  52E5               	movf	postdec1,f,c
 15338  013E22  006F FF9C  F044    	movff	indf1,btemp+18
 15339  013E28  52E5               	movf	postdec1,f,c
 15340  013E2A  006F FF9C  F043    	movff	indf1,btemp+17
 15341  013E30  52E5               	movf	postdec1,f,c
 15342  013E32  006F FF9C  F042    	movff	indf1,btemp+16
 15343  013E38  0EF8               	movlw	248
 15344  013E3A  26E1               	addwf	fsr1l,f,c
 15345  013E3C  0EFF               	movlw	255
 15346  013E3E  22E2               	addwfc	fsr1h,f,c
 15347  013E40  0060  F108  F03C   	movff	btemp+16,btemp+10
 15348  013E46  0060  F10C  F03D   	movff	btemp+17,btemp+11
 15349  013E4C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 15350  013E52  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 15351  013E58  EC62  F0BE         	call	_abs	;wreg free
 15352  013E5C  0E30               	movlw	48
 15353  013E5E  2632               	addwf	btemp^0,f,c
 15354                           
 15355                           ;stkvar	_i @ sp[(-18)+10]
 15356  013E60  0EF8               	movlw	-8
 15357  013E62  006F FF8C  F03C    	movff	plusw1,btemp+10
 15358  013E68  0EF9               	movlw	-7
 15359  013E6A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15360  013E70  0E78               	movlw	low _dbuf
 15361  013E72  243C               	addwf	(btemp+10)^0,w,c
 15362  013E74  6ED9               	movwf	fsr2l,c
 15363  013E76  0E01               	movlw	high _dbuf
 15364  013E78  203D               	addwfc	(btemp+11)^0,w,c
 15365  013E7A  6EDA               	movwf	fsr2h,c
 15366  013E7C  0060  F0CB  FFDF   	movff	btemp,indf2
 15367                           
 15368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 15369                           ;stkvar	_p @ sp[(-18)+16]
 15370  013E82  50E1               	movf	fsr1l,w,c
 15371  013E84  0FFE               	addlw	-2
 15372  013E86  6ED9               	movwf	fsr2l,c
 15373  013E88  50E2               	movf	fsr1h,w,c
 15374  013E8A  6EDA               	movwf	fsr2h,c
 15375  013E8C  0EFF               	movlw	255
 15376  013E8E  22DA               	addwfc	fsr2h,f,c
 15377  013E90  06DE               	decf	postinc2,f,c
 15378  013E92  0E00               	movlw	0
 15379  013E94  5ADD               	subwfb	postdec2,f,c
 15380                           
 15381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 15382                           ;stkvar	_w @ sp[(-18)+14]
 15383  013E96  50E1               	movf	fsr1l,w,c
 15384  013E98  0FFC               	addlw	-4
 15385  013E9A  6ED9               	movwf	fsr2l,c
 15386  013E9C  50E2               	movf	fsr1h,w,c
 15387  013E9E  6EDA               	movwf	fsr2h,c
 15388  013EA0  0EFF               	movlw	255
 15389  013EA2  22DA               	addwfc	fsr2h,f,c
 15390  013EA4  06DE               	decf	postinc2,f,c
 15391  013EA6  0E00               	movlw	0
 15392  013EA8  5ADD               	subwfb	postdec2,f,c
 15393                           
 15394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 15395  013EAA  0E0A               	movlw	10
 15396  013EAC  6EE6               	movwf	postinc1,c
 15397  013EAE  0E00               	movlw	0
 15398  013EB0  6EE6               	movwf	postinc1,c
 15399  013EB2  0E00               	movlw	0
 15400  013EB4  6EE6               	movwf	postinc1,c
 15401  013EB6  0E00               	movlw	0
 15402  013EB8  6EE6               	movwf	postinc1,c
 15403  013EBA  0E00               	movlw	0
 15404  013EBC  6EE6               	movwf	postinc1,c
 15405  013EBE  0E00               	movlw	0
 15406  013EC0  6EE6               	movwf	postinc1,c
 15407  013EC2  0E00               	movlw	0
 15408  013EC4  6EE6               	movwf	postinc1,c
 15409  013EC6  0E00               	movlw	0
 15410  013EC8  6EE6               	movwf	postinc1,c
 15411                           
 15412                           ;stkvar	_n @ sp[(-26)+2]
 15413  013ECA  50E1               	movf	fsr1l,w,c
 15414  013ECC  0FE8               	addlw	-24
 15415  013ECE  6ED9               	movwf	fsr2l,c
 15416  013ED0  50E2               	movf	fsr1h,w,c
 15417  013ED2  6EDA               	movwf	fsr2h,c
 15418  013ED4  0EFF               	movlw	255
 15419  013ED6  22DA               	addwfc	fsr2h,f,c
 15420  013ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 15421  013EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 15422  013EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 15423  013EEA  006F FF7B FFE6     	movff	postinc2,postinc1
 15424  013EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 15425  013EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 15426  013EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 15427  013F02  006F FF7B FFE6     	movff	postinc2,postinc1
 15428  013F08  ECCE  F0A6         	call	___aodiv	;wreg free
 15429  013F0C  52E5               	movf	postdec1,f,c
 15430  013F0E  006F FF9C  F049    	movff	indf1,btemp+23
 15431  013F14  52E5               	movf	postdec1,f,c
 15432  013F16  006F FF9C  F048    	movff	indf1,btemp+22
 15433  013F1C  52E5               	movf	postdec1,f,c
 15434  013F1E  006F FF9C  F047    	movff	indf1,btemp+21
 15435  013F24  52E5               	movf	postdec1,f,c
 15436  013F26  006F FF9C  F046    	movff	indf1,btemp+20
 15437  013F2C  52E5               	movf	postdec1,f,c
 15438  013F2E  006F FF9C  F045    	movff	indf1,btemp+19
 15439  013F34  52E5               	movf	postdec1,f,c
 15440  013F36  006F FF9C  F044    	movff	indf1,btemp+18
 15441  013F3C  52E5               	movf	postdec1,f,c
 15442  013F3E  006F FF9C  F043    	movff	indf1,btemp+17
 15443  013F44  52E5               	movf	postdec1,f,c
 15444  013F46  006F FF9C  F042    	movff	indf1,btemp+16
 15445  013F4C  0EF8               	movlw	248
 15446  013F4E  26E1               	addwf	fsr1l,f,c
 15447  013F50  0EFF               	movlw	255
 15448  013F52  22E2               	addwfc	fsr1h,f,c
 15449                           
 15450                           ;stkvar	_n @ sp[(-18)+2]
 15451  013F54  0EF0               	movlw	-16
 15452  013F56  0060  F10B  FFE3   	movff	btemp+16,plusw1
 15453  013F5C  0EF1               	movlw	-15
 15454  013F5E  0060  F10F  FFE3   	movff	btemp+17,plusw1
 15455  013F64  0EF2               	movlw	-14
 15456  013F66  0060  F113  FFE3   	movff	btemp+18,plusw1
 15457  013F6C  0EF3               	movlw	-13
 15458  013F6E  0060  F117  FFE3   	movff	btemp+19,plusw1
 15459  013F74  0EF4               	movlw	-12
 15460  013F76  0060  F11B  FFE3   	movff	btemp+20,plusw1
 15461  013F7C  0EF5               	movlw	-11
 15462  013F7E  0060  F11F  FFE3   	movff	btemp+21,plusw1
 15463  013F84  0EF6               	movlw	-10
 15464  013F86  0060  F123  FFE3   	movff	btemp+22,plusw1
 15465  013F8C  0EF7               	movlw	-9
 15466  013F8E  0060  F127  FFE3   	movff	btemp+23,plusw1
 15467  013F94                     l9325:
 15468                           
 15469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15470                           ;stkvar	_i @ sp[(-18)+10]
 15471  013F94  0EF9               	movlw	-7
 15472  013F96  BEE3               	btfsc	plusw1,7,c
 15473  013F98  D036               	goto	u9030
 15474  013F9A  0EF9               	movlw	-7
 15475  013F9C  50E3               	movf	plusw1,w,c
 15476  013F9E  E104               	bnz	u8990
 15477  013FA0  0EF8               	movlw	-8
 15478  013FA2  04E3               	decf	plusw1,w,c
 15479  013FA4  A0D8               	btfss	status,0,c
 15480  013FA6  D02F               	goto	u9030
 15481  013FA8                     u8990:
 15482                           
 15483                           ;stkvar	_n @ sp[(-18)+2]
 15484  013FA8  0EF0               	movlw	-16
 15485  013FAA  50E3               	movf	plusw1,w,c
 15486  013FAC  E115               	bnz	u9001
 15487  013FAE  0EF1               	movlw	-15
 15488  013FB0  50E3               	movf	plusw1,w,c
 15489  013FB2  E112               	bnz	u9001
 15490  013FB4  0EF2               	movlw	-14
 15491  013FB6  50E3               	movf	plusw1,w,c
 15492  013FB8  E10F               	bnz	u9001
 15493  013FBA  0EF3               	movlw	-13
 15494  013FBC  50E3               	movf	plusw1,w,c
 15495  013FBE  E10C               	bnz	u9001
 15496  013FC0  0EF4               	movlw	-12
 15497  013FC2  50E3               	movf	plusw1,w,c
 15498  013FC4  E109               	bnz	u9001
 15499  013FC6  0EF5               	movlw	-11
 15500  013FC8  50E3               	movf	plusw1,w,c
 15501  013FCA  E106               	bnz	u9001
 15502  013FCC  0EF6               	movlw	-10
 15503  013FCE  50E3               	movf	plusw1,w,c
 15504  013FD0  E103               	bnz	u9001
 15505  013FD2  0EF7               	movlw	-9
 15506  013FD4  50E3               	movf	plusw1,w,c
 15507  013FD6  A4D8               	btfss	status,2,c
 15508  013FD8                     u9001:
 15509  013FD8  D6D4               	goto	l9315
 15510                           
 15511                           ;stkvar	_p @ sp[(-18)+16]
 15512  013FDA  0EFF               	movlw	-1
 15513  013FDC  BEE3               	btfsc	plusw1,7,c
 15514  013FDE  D007               	goto	u9010
 15515  013FE0  0EFF               	movlw	-1
 15516  013FE2  50E3               	movf	plusw1,w,c
 15517  013FE4  E103               	bnz	u9011
 15518  013FE6  0EFE               	movlw	-2
 15519  013FE8  04E3               	decf	plusw1,w,c
 15520  013FEA  B0D8               	btfsc	status,0,c
 15521  013FEC                     u9011:
 15522  013FEC  D6CA               	goto	l9315
 15523  013FEE                     u9010:
 15524                           
 15525                           ;stkvar	_w @ sp[(-18)+14]
 15526  013FEE  0EFD               	movlw	-3
 15527  013FF0  BEE3               	btfsc	plusw1,7,c
 15528  013FF2  D009               	goto	u9030
 15529  013FF4  0EFD               	movlw	-3
 15530  013FF6  50E3               	movf	plusw1,w,c
 15531  013FF8  E104               	bnz	u9020
 15532  013FFA  0EFC               	movlw	-4
 15533  013FFC  04E3               	decf	plusw1,w,c
 15534  013FFE  A0D8               	btfss	status,0,c
 15535  014000  D002               	goto	u9030
 15536  014002                     u9020:
 15537  014002  B21F               	btfsc	_flags^0,1,c
 15538  014004  D6BE               	goto	l9315
 15539  014006                     u9030:
 15540                           
 15541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 15542                           ;stkvar	_s @ sp[(-18)+12]
 15543  014006  0EFA               	movlw	-6
 15544  014008  006F FF8C  F032    	movff	plusw1,btemp
 15545  01400E  0EFB               	movlw	-5
 15546  014010  50E3               	movf	plusw1,w,c
 15547  014012  1032               	iorwf	btemp^0,w,c
 15548  014014  A4D8               	btfss	status,2,c
 15549  014016  D002               	goto	u9050
 15550  014018  A41F               	btfss	_flags^0,2,c
 15551  01401A  D033               	goto	l9349
 15552  01401C                     u9050:
 15553                           
 15554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 15555                           ;stkvar	_i @ sp[(-18)+10]
 15556  01401C  50E1               	movf	fsr1l,w,c
 15557  01401E  0FF8               	addlw	-8
 15558  014020  6ED9               	movwf	fsr2l,c
 15559  014022  50E2               	movf	fsr1h,w,c
 15560  014024  6EDA               	movwf	fsr2h,c
 15561  014026  0EFF               	movlw	255
 15562  014028  22DA               	addwfc	fsr2h,f,c
 15563  01402A  06DE               	decf	postinc2,f,c
 15564  01402C  0E00               	movlw	0
 15565  01402E  5ADD               	subwfb	postdec2,f,c
 15566                           
 15567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 15568                           ;stkvar	_s @ sp[(-18)+12]
 15569  014030  0EFA               	movlw	-6
 15570  014032  006F FF8C  F032    	movff	plusw1,btemp
 15571  014038  0EFB               	movlw	-5
 15572  01403A  50E3               	movf	plusw1,w,c
 15573  01403C  1032               	iorwf	btemp^0,w,c
 15574  01403E  A4D8               	btfss	status,2,c
 15575  014040  D002               	goto	l9345
 15576  014042  0E2B               	movlw	43
 15577  014044  D001               	goto	L15
 15578  014046                     l9345:
 15579  014046  0E2D               	movlw	45
 15580  014048                     L15:
 15581  014048  6E3C               	movwf	(btemp+10)^0,c
 15582  01404A  0E00               	movlw	0
 15583  01404C  6E3D               	movwf	(btemp+11)^0,c
 15584                           
 15585                           ;stkvar	_dtoa$4369 @ sp[(-18)+0]
 15586  01404E  0EEE               	movlw	-18
 15587  014050  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15588  014056  0EEF               	movlw	-17
 15589  014058  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15590                           
 15591                           ;stkvar	_dtoa$4369 @ sp[(-18)+0]
 15592                           ;stkvar	_i @ sp[(-18)+10]
 15593  01405E  0EF8               	movlw	-8
 15594  014060  006F FF8C  F03C    	movff	plusw1,btemp+10
 15595  014066  0EF9               	movlw	-7
 15596  014068  006F FF8C  F03D    	movff	plusw1,btemp+11
 15597  01406E  0E78               	movlw	low _dbuf
 15598  014070  243C               	addwf	(btemp+10)^0,w,c
 15599  014072  6ED9               	movwf	fsr2l,c
 15600  014074  0E01               	movlw	high _dbuf
 15601  014076  203D               	addwfc	(btemp+11)^0,w,c
 15602  014078  6EDA               	movwf	fsr2h,c
 15603  01407A  0EEE               	movlw	-18
 15604  01407C  006F FF8F FFDF     	movff	plusw1,indf2
 15605  014082                     l9349:
 15606                           
 15607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 15608                           ;stkvar	_w @ sp[(-18)+14]
 15609  014082  0EFC               	movlw	-4
 15610  014084  006F FF8F FFE6     	movff	plusw1,postinc1
 15611  01408A  006F FF8F FFE6     	movff	plusw1,postinc1
 15612                           
 15613                           ;stkvar	_i @ sp[(-20)+10]
 15614  014090  0E78               	movlw	low _dbuf
 15615  014092  6E3C               	movwf	(btemp+10)^0,c
 15616  014094  0E01               	movlw	high _dbuf
 15617  014096  6E3D               	movwf	(btemp+11)^0,c
 15618  014098  0EF6               	movlw	-10
 15619  01409A  50E3               	movf	plusw1,w,c
 15620  01409C  263C               	addwf	(btemp+10)^0,f,c
 15621  01409E  0EF7               	movlw	-9
 15622  0140A0  50E3               	movf	plusw1,w,c
 15623  0140A2  223D               	addwfc	(btemp+11)^0,f,c
 15624  0140A4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 15625  0140AA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 15626                           
 15627                           ;stkvar	_fp @ sp[(-22)+-2]
 15628  0140B0  0EE8               	movlw	-24
 15629  0140B2  006F FF8F FFE6     	movff	plusw1,postinc1
 15630  0140B8  006F FF8F FFE6     	movff	plusw1,postinc1
 15631  0140BE  EC80  F0B4         	call	_pad	;wreg free
 15632                           
 15633                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15634  0140C2  0EE4               	movlw	228
 15635  0140C4  26E1               	addwf	fsr1l,f,c
 15636  0140C6  0EFF               	movlw	255
 15637  0140C8  22E2               	addwfc	fsr1h,f,c
 15638  0140CA  0012               	return		;funcret
 15639  0140CC                     __end_of_dtoa:
 15640                           	opt callstack 0
 15641                           
 15642 ;; *************** function _abs *****************
 15643 ;; Defined at:
 15644 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 15645 ;; Parameters:    Size  Location     Type
 15646 ;;  a               2  [STACK] int 
 15647 ;; Auto vars:     Size  Location     Type
 15648 ;;		None
 15649 ;; Return value:  Size  Location     Type
 15650 ;;                  2  [STACK] int 
 15651 ;; Registers used:
 15652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 15653 ;; Tracked objects:
 15654 ;;		On entry : 0/1
 15655 ;;		On exit  : 0/0
 15656 ;;		Unchanged: 0/0
 15657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15662 ;;Total ram usage:        0 bytes
 15663 ;; Hardware stack levels used:    1
 15664 ;; Hardware stack levels required when called:    6
 15665 ;; This function calls:
 15666 ;;		Nothing
 15667 ;; This function is called by:
 15668 ;;		_dtoa
 15669 ;; This function uses a reentrant model
 15670 ;;
 15671                           
 15672                           	psect	text57
 15673  017CC4                     __ptext57:
 15674                           	opt callstack 0
 15675  017CC4                     _abs:
 15676                           	opt callstack 17
 15677                           
 15678                           ;stkvar	_a @ sp[(0)+-2]
 15679                           
 15680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15681                           ;incstack = 0
 15682  017CC4  0EFF               	movlw	-1
 15683  017CC6  BEE3               	btfsc	plusw1,7,c
 15684  017CC8  D007               	goto	u4990
 15685  017CCA  0EFF               	movlw	-1
 15686  017CCC  50E3               	movf	plusw1,w,c
 15687  017CCE  E112               	bnz	l6385
 15688  017CD0  0EFE               	movlw	-2
 15689  017CD2  04E3               	decf	plusw1,w,c
 15690  017CD4  B0D8               	btfsc	status,0,c
 15691  017CD6  D00E               	goto	l6385
 15692  017CD8                     u4990:
 15693                           
 15694                           ;stkvar	_a @ sp[(0)+-2]
 15695  017CD8  0EFE               	movlw	-2
 15696  017CDA  006F FF8C  F032    	movff	plusw1,btemp
 15697  017CE0  1E32               	comf	btemp^0,f,c
 15698  017CE2  0EFF               	movlw	-1
 15699  017CE4  006F FF8C  F033    	movff	plusw1,btemp+1
 15700  017CEA  1E33               	comf	(btemp+1)^0,f,c
 15701  017CEC  2A32               	incf	btemp^0,f,c
 15702  017CEE  B4D8               	btfsc	status,2,c
 15703  017CF0  2A33               	incf	(btemp+1)^0,f,c
 15704  017CF2  D008               	goto	l2735
 15705  017CF4                     l6385:
 15706                           
 15707                           ;stkvar	_a @ sp[(0)+-2]
 15708  017CF4  0EFE               	movlw	-2
 15709  017CF6  006F FF8C  F032    	movff	plusw1,btemp
 15710  017CFC  0EFF               	movlw	-1
 15711  017CFE  006F FF8C  F033    	movff	plusw1,btemp+1
 15712  017D04                     l2735:
 15713                           
 15714                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 15715  017D04  52E5               	movf	postdec1,f,c
 15716  017D06  52E5               	movf	postdec1,f,c
 15717  017D08  0012               	return		;funcret
 15718  017D0A                     __end_of_abs:
 15719                           	opt callstack 0
 15720                           
 15721 ;; *************** function ___aomod *****************
 15722 ;; Defined at:
 15723 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 15724 ;; Parameters:    Size  Location     Type
 15725 ;;  dividend        8  [STACK] long long 
 15726 ;;  divisor         8  [STACK] long long 
 15727 ;; Auto vars:     Size  Location     Type
 15728 ;;  sign            1  [STACK] unsigned char 
 15729 ;;  counter         1  [STACK] unsigned char 
 15730 ;; Return value:  Size  Location     Type
 15731 ;;                  8  [STACK] long long 
 15732 ;; Registers used:
 15733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15734 ;; Tracked objects:
 15735 ;;		On entry : 0/1
 15736 ;;		On exit  : 0/0
 15737 ;;		Unchanged: 0/0
 15738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15743 ;;Total ram usage:        0 bytes
 15744 ;; Hardware stack levels used:    1
 15745 ;; Hardware stack levels required when called:    6
 15746 ;; This function calls:
 15747 ;;		Nothing
 15748 ;; This function is called by:
 15749 ;;		_dtoa
 15750 ;; This function uses a reentrant model
 15751 ;;
 15752                           
 15753                           	psect	text58
 15754  015290                     __ptext58:
 15755                           	opt callstack 0
 15756  015290                     ___aomod:
 15757                           	opt callstack 0
 15758                           
 15759                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15760  015290  52E6               	movf	postinc1,f,c
 15761  015292  52E6               	movf	postinc1,f,c
 15762                           
 15763                           ;stkvar	_sign @ sp[(-2)+0]
 15764                           
 15765                           ;incstack = 0
 15766  015294  0EFE               	movlw	-2
 15767  015296  6AE3               	clrf	plusw1,c
 15768                           
 15769                           ;stkvar	_dividend @ sp[(-2)+-8]
 15770  015298  0EFD               	movlw	-3
 15771  01529A  AEE3               	btfss	plusw1,7,c
 15772  01529C  D028               	goto	l6543
 15773                           
 15774                           ;stkvar	_dividend @ sp[(-2)+-8]
 15775                           ;stkvar	_dividend @ sp[(-2)+-8]
 15776  01529E  0EF6               	movlw	-10
 15777  0152A0  6CE3               	negf	plusw1,c
 15778  0152A2  0EF7               	movlw	-9
 15779  0152A4  1EE3               	comf	plusw1,f,c
 15780  0152A6  0EF8               	movlw	-8
 15781  0152A8  1EE3               	comf	plusw1,f,c
 15782  0152AA  0EF9               	movlw	-7
 15783  0152AC  1EE3               	comf	plusw1,f,c
 15784  0152AE  0EFA               	movlw	-6
 15785  0152B0  1EE3               	comf	plusw1,f,c
 15786  0152B2  0EFB               	movlw	-5
 15787  0152B4  1EE3               	comf	plusw1,f,c
 15788  0152B6  0EFC               	movlw	-4
 15789  0152B8  1EE3               	comf	plusw1,f,c
 15790  0152BA  0EFD               	movlw	-3
 15791  0152BC  1EE3               	comf	plusw1,f,c
 15792  0152BE  E314               	bnc	u5420
 15793  0152C0  0EF7               	movlw	-9
 15794  0152C2  2AE3               	incf	plusw1,f,c
 15795  0152C4  E311               	bnc	u5420
 15796  0152C6  0EF8               	movlw	-8
 15797  0152C8  2AE3               	incf	plusw1,f,c
 15798  0152CA  E30E               	bnc	u5420
 15799  0152CC  0EF9               	movlw	-7
 15800  0152CE  2AE3               	incf	plusw1,f,c
 15801  0152D0  E30B               	bnc	u5420
 15802  0152D2  0EFA               	movlw	-6
 15803  0152D4  2AE3               	incf	plusw1,f,c
 15804  0152D6  E308               	bnc	u5420
 15805  0152D8  0EFB               	movlw	-5
 15806  0152DA  2AE3               	incf	plusw1,f,c
 15807  0152DC  E305               	bnc	u5420
 15808  0152DE  0EFC               	movlw	-4
 15809  0152E0  2AE3               	incf	plusw1,f,c
 15810  0152E2  E302               	bnc	u5420
 15811  0152E4  0EFD               	movlw	-3
 15812  0152E6  2AE3               	incf	plusw1,f,c
 15813  0152E8                     u5420:
 15814                           
 15815                           ;stkvar	_sign @ sp[(-2)+0]
 15816  0152E8  0EFE               	movlw	-2
 15817  0152EA  6AE3               	clrf	plusw1,c
 15818  0152EC  2AE3               	incf	plusw1,f,c
 15819  0152EE                     l6543:
 15820                           
 15821                           ;stkvar	_divisor @ sp[(-2)+-16]
 15822  0152EE  0EF5               	movlw	-11
 15823  0152F0  AEE3               	btfss	plusw1,7,c
 15824  0152F2  D025               	goto	u5440
 15825                           
 15826                           ;stkvar	_divisor @ sp[(-2)+-16]
 15827                           ;stkvar	_divisor @ sp[(-2)+-16]
 15828  0152F4  0EEE               	movlw	-18
 15829  0152F6  6CE3               	negf	plusw1,c
 15830  0152F8  0EEF               	movlw	-17
 15831  0152FA  1EE3               	comf	plusw1,f,c
 15832  0152FC  0EF0               	movlw	-16
 15833  0152FE  1EE3               	comf	plusw1,f,c
 15834  015300  0EF1               	movlw	-15
 15835  015302  1EE3               	comf	plusw1,f,c
 15836  015304  0EF2               	movlw	-14
 15837  015306  1EE3               	comf	plusw1,f,c
 15838  015308  0EF3               	movlw	-13
 15839  01530A  1EE3               	comf	plusw1,f,c
 15840  01530C  0EF4               	movlw	-12
 15841  01530E  1EE3               	comf	plusw1,f,c
 15842  015310  0EF5               	movlw	-11
 15843  015312  1EE3               	comf	plusw1,f,c
 15844  015314  E314               	bnc	u5440
 15845  015316  0EEF               	movlw	-17
 15846  015318  2AE3               	incf	plusw1,f,c
 15847  01531A  E311               	bnc	u5440
 15848  01531C  0EF0               	movlw	-16
 15849  01531E  2AE3               	incf	plusw1,f,c
 15850  015320  E30E               	bnc	u5440
 15851  015322  0EF1               	movlw	-15
 15852  015324  2AE3               	incf	plusw1,f,c
 15853  015326  E30B               	bnc	u5440
 15854  015328  0EF2               	movlw	-14
 15855  01532A  2AE3               	incf	plusw1,f,c
 15856  01532C  E308               	bnc	u5440
 15857  01532E  0EF3               	movlw	-13
 15858  015330  2AE3               	incf	plusw1,f,c
 15859  015332  E305               	bnc	u5440
 15860  015334  0EF4               	movlw	-12
 15861  015336  2AE3               	incf	plusw1,f,c
 15862  015338  E302               	bnc	u5440
 15863  01533A  0EF5               	movlw	-11
 15864  01533C  2AE3               	incf	plusw1,f,c
 15865  01533E                     u5440:
 15866                           
 15867                           ;stkvar	_divisor @ sp[(-2)+-16]
 15868  01533E  0EEE               	movlw	-18
 15869  015340  50E3               	movf	plusw1,w,c
 15870  015342  E116               	bnz	u5450
 15871  015344  0EEF               	movlw	-17
 15872  015346  50E3               	movf	plusw1,w,c
 15873  015348  E113               	bnz	u5450
 15874  01534A  0EF0               	movlw	-16
 15875  01534C  50E3               	movf	plusw1,w,c
 15876  01534E  E110               	bnz	u5450
 15877  015350  0EF1               	movlw	-15
 15878  015352  50E3               	movf	plusw1,w,c
 15879  015354  E10D               	bnz	u5450
 15880  015356  0EF2               	movlw	-14
 15881  015358  50E3               	movf	plusw1,w,c
 15882  01535A  E10A               	bnz	u5450
 15883  01535C  0EF3               	movlw	-13
 15884  01535E  50E3               	movf	plusw1,w,c
 15885  015360  E107               	bnz	u5450
 15886  015362  0EF4               	movlw	-12
 15887  015364  50E3               	movf	plusw1,w,c
 15888  015366  E104               	bnz	u5450
 15889  015368  0EF5               	movlw	-11
 15890  01536A  50E3               	movf	plusw1,w,c
 15891  01536C  B4D8               	btfsc	status,2,c
 15892  01536E  D075               	goto	u5480
 15893  015370                     u5450:
 15894                           
 15895                           ;stkvar	_counter @ sp[(-2)+1]
 15896  015370  0EFF               	movlw	-1
 15897  015372  6AE3               	clrf	plusw1,c
 15898  015374  D012               	goto	L16
 15899  015376                     l6551:
 15900                           
 15901                           ;stkvar	_divisor @ sp[(-2)+-16]
 15902  015376  90D8               	bcf	status,0,c
 15903  015378  0EEE               	movlw	-18
 15904  01537A  36E3               	rlcf	plusw1,f,c
 15905  01537C  0EEF               	movlw	-17
 15906  01537E  36E3               	rlcf	plusw1,f,c
 15907  015380  0EF0               	movlw	-16
 15908  015382  36E3               	rlcf	plusw1,f,c
 15909  015384  0EF1               	movlw	-15
 15910  015386  36E3               	rlcf	plusw1,f,c
 15911  015388  0EF2               	movlw	-14
 15912  01538A  36E3               	rlcf	plusw1,f,c
 15913  01538C  0EF3               	movlw	-13
 15914  01538E  36E3               	rlcf	plusw1,f,c
 15915  015390  0EF4               	movlw	-12
 15916  015392  36E3               	rlcf	plusw1,f,c
 15917  015394  0EF5               	movlw	-11
 15918  015396  36E3               	rlcf	plusw1,f,c
 15919                           
 15920                           ;stkvar	_counter @ sp[(-2)+1]
 15921  015398  0EFF               	movlw	-1
 15922  01539A                     L16:
 15923  01539A  2AE3               	incf	plusw1,f,c
 15924                           
 15925                           ;stkvar	_divisor @ sp[(-2)+-16]
 15926  01539C  0EF5               	movlw	-11
 15927  01539E  AEE3               	btfss	plusw1,7,c
 15928  0153A0  D7EA               	goto	l6551
 15929  0153A2                     u5460:
 15930                           
 15931                           ;stkvar	_divisor @ sp[(-2)+-16]
 15932                           ;stkvar	_dividend @ sp[(-2)+-8]
 15933  0153A2  50E1               	movf	fsr1l,w,c
 15934  0153A4  0FF6               	addlw	-10
 15935  0153A6  6ED9               	movwf	fsr2l,c
 15936  0153A8  50E2               	movf	fsr1h,w,c
 15937  0153AA  6EDA               	movwf	fsr2h,c
 15938  0153AC  0EFF               	movlw	255
 15939  0153AE  22DA               	addwfc	fsr2h,f,c
 15940  0153B0  0EEE               	movlw	-18
 15941  0153B2  50E3               	movf	plusw1,w,c
 15942  0153B4  5CDE               	subwf	postinc2,w,c
 15943  0153B6  0EEF               	movlw	-17
 15944  0153B8  50E3               	movf	plusw1,w,c
 15945  0153BA  58DE               	subwfb	postinc2,w,c
 15946  0153BC  0EF0               	movlw	-16
 15947  0153BE  50E3               	movf	plusw1,w,c
 15948  0153C0  58DE               	subwfb	postinc2,w,c
 15949  0153C2  0EF1               	movlw	-15
 15950  0153C4  50E3               	movf	plusw1,w,c
 15951  0153C6  58DE               	subwfb	postinc2,w,c
 15952  0153C8  0EF2               	movlw	-14
 15953  0153CA  50E3               	movf	plusw1,w,c
 15954  0153CC  58DE               	subwfb	postinc2,w,c
 15955  0153CE  0EF3               	movlw	-13
 15956  0153D0  50E3               	movf	plusw1,w,c
 15957  0153D2  58DE               	subwfb	postinc2,w,c
 15958  0153D4  0EF4               	movlw	-12
 15959  0153D6  50E3               	movf	plusw1,w,c
 15960  0153D8  58DE               	subwfb	postinc2,w,c
 15961  0153DA  0EF5               	movlw	-11
 15962  0153DC  50E3               	movf	plusw1,w,c
 15963  0153DE  58DE               	subwfb	postinc2,w,c
 15964  0153E0  A0D8               	btfss	status,0,c
 15965  0153E2  D01F               	goto	l6559
 15966                           
 15967                           ;stkvar	_divisor @ sp[(-2)+-16]
 15968                           ;stkvar	_dividend @ sp[(-2)+-8]
 15969  0153E4  50E1               	movf	fsr1l,w,c
 15970  0153E6  0FF6               	addlw	-10
 15971  0153E8  6ED9               	movwf	fsr2l,c
 15972  0153EA  50E2               	movf	fsr1h,w,c
 15973  0153EC  6EDA               	movwf	fsr2h,c
 15974  0153EE  0EFF               	movlw	255
 15975  0153F0  22DA               	addwfc	fsr2h,f,c
 15976  0153F2  0EEE               	movlw	-18
 15977  0153F4  50E3               	movf	plusw1,w,c
 15978  0153F6  5EDE               	subwf	postinc2,f,c
 15979  0153F8  0EEF               	movlw	-17
 15980  0153FA  50E3               	movf	plusw1,w,c
 15981  0153FC  5ADE               	subwfb	postinc2,f,c
 15982  0153FE  0EF0               	movlw	-16
 15983  015400  50E3               	movf	plusw1,w,c
 15984  015402  5ADE               	subwfb	postinc2,f,c
 15985  015404  0EF1               	movlw	-15
 15986  015406  50E3               	movf	plusw1,w,c
 15987  015408  5ADE               	subwfb	postinc2,f,c
 15988  01540A  0EF2               	movlw	-14
 15989  01540C  50E3               	movf	plusw1,w,c
 15990  01540E  5ADE               	subwfb	postinc2,f,c
 15991  015410  0EF3               	movlw	-13
 15992  015412  50E3               	movf	plusw1,w,c
 15993  015414  5ADE               	subwfb	postinc2,f,c
 15994  015416  0EF4               	movlw	-12
 15995  015418  50E3               	movf	plusw1,w,c
 15996  01541A  5ADE               	subwfb	postinc2,f,c
 15997  01541C  0EF5               	movlw	-11
 15998  01541E  50E3               	movf	plusw1,w,c
 15999  015420  5ADE               	subwfb	postinc2,f,c
 16000  015422                     l6559:
 16001                           
 16002                           ;stkvar	_divisor @ sp[(-2)+-16]
 16003  015422  90D8               	bcf	status,0,c
 16004  015424  0EF5               	movlw	-11
 16005  015426  32E3               	rrcf	plusw1,f,c
 16006  015428  0EF4               	movlw	-12
 16007  01542A  32E3               	rrcf	plusw1,f,c
 16008  01542C  0EF3               	movlw	-13
 16009  01542E  32E3               	rrcf	plusw1,f,c
 16010  015430  0EF2               	movlw	-14
 16011  015432  32E3               	rrcf	plusw1,f,c
 16012  015434  0EF1               	movlw	-15
 16013  015436  32E3               	rrcf	plusw1,f,c
 16014  015438  0EF0               	movlw	-16
 16015  01543A  32E3               	rrcf	plusw1,f,c
 16016  01543C  0EEF               	movlw	-17
 16017  01543E  32E3               	rrcf	plusw1,f,c
 16018  015440  0EEE               	movlw	-18
 16019  015442  32E3               	rrcf	plusw1,f,c
 16020                           
 16021                           ;stkvar	_counter @ sp[(-2)+1]
 16022  015444  0EFF               	movlw	-1
 16023  015446  50E3               	movf	plusw1,w,c
 16024  015448  6E32               	movwf	btemp^0,c
 16025  01544A  0E01               	movlw	1
 16026  01544C  5E32               	subwf	btemp^0,f,c
 16027  01544E  0EFF               	movlw	-1
 16028  015450  0060  F0CB  FFE3   	movff	btemp,plusw1
 16029  015456  A4D8               	btfss	status,2,c
 16030  015458  D7A4               	goto	u5460
 16031  01545A                     u5480:
 16032                           
 16033                           ;stkvar	_sign @ sp[(-2)+0]
 16034  01545A  0EFE               	movlw	-2
 16035  01545C  50E3               	movf	plusw1,w,c
 16036  01545E  B4D8               	btfsc	status,2,c
 16037  015460  D025               	goto	u5500
 16038                           
 16039                           ;stkvar	_dividend @ sp[(-2)+-8]
 16040                           ;stkvar	_dividend @ sp[(-2)+-8]
 16041  015462  0EF6               	movlw	-10
 16042  015464  6CE3               	negf	plusw1,c
 16043  015466  0EF7               	movlw	-9
 16044  015468  1EE3               	comf	plusw1,f,c
 16045  01546A  0EF8               	movlw	-8
 16046  01546C  1EE3               	comf	plusw1,f,c
 16047  01546E  0EF9               	movlw	-7
 16048  015470  1EE3               	comf	plusw1,f,c
 16049  015472  0EFA               	movlw	-6
 16050  015474  1EE3               	comf	plusw1,f,c
 16051  015476  0EFB               	movlw	-5
 16052  015478  1EE3               	comf	plusw1,f,c
 16053  01547A  0EFC               	movlw	-4
 16054  01547C  1EE3               	comf	plusw1,f,c
 16055  01547E  0EFD               	movlw	-3
 16056  015480  1EE3               	comf	plusw1,f,c
 16057  015482  E314               	bnc	u5500
 16058  015484  0EF7               	movlw	-9
 16059  015486  2AE3               	incf	plusw1,f,c
 16060  015488  E311               	bnc	u5500
 16061  01548A  0EF8               	movlw	-8
 16062  01548C  2AE3               	incf	plusw1,f,c
 16063  01548E  E30E               	bnc	u5500
 16064  015490  0EF9               	movlw	-7
 16065  015492  2AE3               	incf	plusw1,f,c
 16066  015494  E30B               	bnc	u5500
 16067  015496  0EFA               	movlw	-6
 16068  015498  2AE3               	incf	plusw1,f,c
 16069  01549A  E308               	bnc	u5500
 16070  01549C  0EFB               	movlw	-5
 16071  01549E  2AE3               	incf	plusw1,f,c
 16072  0154A0  E305               	bnc	u5500
 16073  0154A2  0EFC               	movlw	-4
 16074  0154A4  2AE3               	incf	plusw1,f,c
 16075  0154A6  E302               	bnc	u5500
 16076  0154A8  0EFD               	movlw	-3
 16077  0154AA  2AE3               	incf	plusw1,f,c
 16078  0154AC                     u5500:
 16079                           
 16080                           ;stkvar	_dividend @ sp[(-2)+-8]
 16081  0154AC  0EF6               	movlw	246
 16082  0154AE  24E1               	addwf	fsr1l,w,c
 16083  0154B0  6ED9               	movwf	fsr2l,c
 16084  0154B2  0EFF               	movlw	255
 16085  0154B4  20E2               	addwfc	fsr1h,w,c
 16086  0154B6  6EDA               	movwf	fsr2h,c
 16087                           
 16088                           ;stkvar	?___aomod @ sp[(-2)+-8]
 16089  0154B8  0E08               	movlw	8
 16090  0154BA  6E32               	movwf	btemp^0,c
 16091  0154BC  0EF6               	movlw	-10
 16092  0154BE                     us551999:
 16093  0154BE  006F FF7B FFE3     	movff	postinc2,plusw1
 16094  0154C4  28E8               	incf	wreg,w,c
 16095  0154C6  2E32               	decfsz	btemp^0,f,c
 16096  0154C8  D7FA               	bra	us551999
 16097                           
 16098                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16099  0154CA  52E5               	movf	postdec1,f,c
 16100  0154CC  52E5               	movf	postdec1,f,c
 16101  0154CE  0012               	return		;funcret
 16102  0154D0                     __end_of___aomod:
 16103                           	opt callstack 0
 16104                           
 16105 ;; *************** function ___aodiv *****************
 16106 ;; Defined at:
 16107 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 16108 ;; Parameters:    Size  Location     Type
 16109 ;;  dividend        8  [STACK] long long 
 16110 ;;  divisor         8  [STACK] long long 
 16111 ;; Auto vars:     Size  Location     Type
 16112 ;;  quotient        8  [STACK] long long 
 16113 ;;  sign            1  [STACK] unsigned char 
 16114 ;;  counter         1  [STACK] unsigned char 
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  8  [STACK] long long 
 16117 ;; Registers used:
 16118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/1
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16128 ;;Total ram usage:        0 bytes
 16129 ;; Hardware stack levels used:    1
 16130 ;; Hardware stack levels required when called:    6
 16131 ;; This function calls:
 16132 ;;		Nothing
 16133 ;; This function is called by:
 16134 ;;		_dtoa
 16135 ;; This function uses a reentrant model
 16136 ;;
 16137                           
 16138                           	psect	text59
 16139  014D9C                     __ptext59:
 16140                           	opt callstack 0
 16141  014D9C                     ___aodiv:
 16142                           	opt callstack 0
 16143                           
 16144                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 16145  014D9C  0E0A               	movlw	10
 16146  014D9E  26E1               	addwf	fsr1l,f,c
 16147  014DA0  0E00               	movlw	0
 16148  014DA2  22E2               	addwfc	fsr1h,f,c
 16149                           
 16150                           ;stkvar	_sign @ sp[(-10)+8]
 16151                           
 16152                           ;incstack = 0
 16153  014DA4  0EFE               	movlw	-2
 16154  014DA6  6AE3               	clrf	plusw1,c
 16155                           
 16156                           ;stkvar	_divisor @ sp[(-10)+-16]
 16157  014DA8  0EED               	movlw	-19
 16158  014DAA  AEE3               	btfss	plusw1,7,c
 16159  014DAC  D028               	goto	l6499
 16160                           
 16161                           ;stkvar	_divisor @ sp[(-10)+-16]
 16162                           ;stkvar	_divisor @ sp[(-10)+-16]
 16163  014DAE  0EE6               	movlw	-26
 16164  014DB0  6CE3               	negf	plusw1,c
 16165  014DB2  0EE7               	movlw	-25
 16166  014DB4  1EE3               	comf	plusw1,f,c
 16167  014DB6  0EE8               	movlw	-24
 16168  014DB8  1EE3               	comf	plusw1,f,c
 16169  014DBA  0EE9               	movlw	-23
 16170  014DBC  1EE3               	comf	plusw1,f,c
 16171  014DBE  0EEA               	movlw	-22
 16172  014DC0  1EE3               	comf	plusw1,f,c
 16173  014DC2  0EEB               	movlw	-21
 16174  014DC4  1EE3               	comf	plusw1,f,c
 16175  014DC6  0EEC               	movlw	-20
 16176  014DC8  1EE3               	comf	plusw1,f,c
 16177  014DCA  0EED               	movlw	-19
 16178  014DCC  1EE3               	comf	plusw1,f,c
 16179  014DCE  E314               	bnc	u5300
 16180  014DD0  0EE7               	movlw	-25
 16181  014DD2  2AE3               	incf	plusw1,f,c
 16182  014DD4  E311               	bnc	u5300
 16183  014DD6  0EE8               	movlw	-24
 16184  014DD8  2AE3               	incf	plusw1,f,c
 16185  014DDA  E30E               	bnc	u5300
 16186  014DDC  0EE9               	movlw	-23
 16187  014DDE  2AE3               	incf	plusw1,f,c
 16188  014DE0  E30B               	bnc	u5300
 16189  014DE2  0EEA               	movlw	-22
 16190  014DE4  2AE3               	incf	plusw1,f,c
 16191  014DE6  E308               	bnc	u5300
 16192  014DE8  0EEB               	movlw	-21
 16193  014DEA  2AE3               	incf	plusw1,f,c
 16194  014DEC  E305               	bnc	u5300
 16195  014DEE  0EEC               	movlw	-20
 16196  014DF0  2AE3               	incf	plusw1,f,c
 16197  014DF2  E302               	bnc	u5300
 16198  014DF4  0EED               	movlw	-19
 16199  014DF6  2AE3               	incf	plusw1,f,c
 16200  014DF8                     u5300:
 16201                           
 16202                           ;stkvar	_sign @ sp[(-10)+8]
 16203  014DF8  0EFE               	movlw	-2
 16204  014DFA  6AE3               	clrf	plusw1,c
 16205  014DFC  2AE3               	incf	plusw1,f,c
 16206  014DFE                     l6499:
 16207                           
 16208                           ;stkvar	_dividend @ sp[(-10)+-8]
 16209  014DFE  0EF5               	movlw	-11
 16210  014E00  AEE3               	btfss	plusw1,7,c
 16211  014E02  D027               	goto	l6505
 16212                           
 16213                           ;stkvar	_dividend @ sp[(-10)+-8]
 16214                           ;stkvar	_dividend @ sp[(-10)+-8]
 16215  014E04  0EEE               	movlw	-18
 16216  014E06  6CE3               	negf	plusw1,c
 16217  014E08  0EEF               	movlw	-17
 16218  014E0A  1EE3               	comf	plusw1,f,c
 16219  014E0C  0EF0               	movlw	-16
 16220  014E0E  1EE3               	comf	plusw1,f,c
 16221  014E10  0EF1               	movlw	-15
 16222  014E12  1EE3               	comf	plusw1,f,c
 16223  014E14  0EF2               	movlw	-14
 16224  014E16  1EE3               	comf	plusw1,f,c
 16225  014E18  0EF3               	movlw	-13
 16226  014E1A  1EE3               	comf	plusw1,f,c
 16227  014E1C  0EF4               	movlw	-12
 16228  014E1E  1EE3               	comf	plusw1,f,c
 16229  014E20  0EF5               	movlw	-11
 16230  014E22  1EE3               	comf	plusw1,f,c
 16231  014E24  E314               	bnc	u5320
 16232  014E26  0EEF               	movlw	-17
 16233  014E28  2AE3               	incf	plusw1,f,c
 16234  014E2A  E311               	bnc	u5320
 16235  014E2C  0EF0               	movlw	-16
 16236  014E2E  2AE3               	incf	plusw1,f,c
 16237  014E30  E30E               	bnc	u5320
 16238  014E32  0EF1               	movlw	-15
 16239  014E34  2AE3               	incf	plusw1,f,c
 16240  014E36  E30B               	bnc	u5320
 16241  014E38  0EF2               	movlw	-14
 16242  014E3A  2AE3               	incf	plusw1,f,c
 16243  014E3C  E308               	bnc	u5320
 16244  014E3E  0EF3               	movlw	-13
 16245  014E40  2AE3               	incf	plusw1,f,c
 16246  014E42  E305               	bnc	u5320
 16247  014E44  0EF4               	movlw	-12
 16248  014E46  2AE3               	incf	plusw1,f,c
 16249  014E48  E302               	bnc	u5320
 16250  014E4A  0EF5               	movlw	-11
 16251  014E4C  2AE3               	incf	plusw1,f,c
 16252  014E4E                     u5320:
 16253                           
 16254                           ;stkvar	_sign @ sp[(-10)+8]
 16255  014E4E  0EFE               	movlw	-2
 16256  014E50  70E3               	btg	plusw1,0,c
 16257  014E52                     l6505:
 16258                           
 16259                           ;stkvar	_quotient @ sp[(-10)+0]
 16260  014E52  0E07               	movlw	7
 16261  014E54  6E32               	movwf	btemp^0,c
 16262  014E56  0EF6               	movlw	-10
 16263  014E58                     u5331:
 16264  014E58  6AE3               	clrf	plusw1,c
 16265  014E5A  2AE8               	incf	wreg,f,c
 16266  014E5C  0632               	decf	btemp^0,f,c
 16267  014E5E  E2FC               	bc	u5331
 16268                           
 16269                           ;stkvar	_divisor @ sp[(-10)+-16]
 16270  014E60  0EE6               	movlw	-26
 16271  014E62  50E3               	movf	plusw1,w,c
 16272  014E64  E116               	bnz	u5340
 16273  014E66  0EE7               	movlw	-25
 16274  014E68  50E3               	movf	plusw1,w,c
 16275  014E6A  E113               	bnz	u5340
 16276  014E6C  0EE8               	movlw	-24
 16277  014E6E  50E3               	movf	plusw1,w,c
 16278  014E70  E110               	bnz	u5340
 16279  014E72  0EE9               	movlw	-23
 16280  014E74  50E3               	movf	plusw1,w,c
 16281  014E76  E10D               	bnz	u5340
 16282  014E78  0EEA               	movlw	-22
 16283  014E7A  50E3               	movf	plusw1,w,c
 16284  014E7C  E10A               	bnz	u5340
 16285  014E7E  0EEB               	movlw	-21
 16286  014E80  50E3               	movf	plusw1,w,c
 16287  014E82  E107               	bnz	u5340
 16288  014E84  0EEC               	movlw	-20
 16289  014E86  50E3               	movf	plusw1,w,c
 16290  014E88  E104               	bnz	u5340
 16291  014E8A  0EED               	movlw	-19
 16292  014E8C  50E3               	movf	plusw1,w,c
 16293  014E8E  B4D8               	btfsc	status,2,c
 16294  014E90  D088               	goto	u5370
 16295  014E92                     u5340:
 16296                           
 16297                           ;stkvar	_counter @ sp[(-10)+9]
 16298  014E92  0EFF               	movlw	-1
 16299  014E94  6AE3               	clrf	plusw1,c
 16300  014E96  D012               	goto	L17
 16301  014E98                     l6511:
 16302                           
 16303                           ;stkvar	_divisor @ sp[(-10)+-16]
 16304  014E98  90D8               	bcf	status,0,c
 16305  014E9A  0EE6               	movlw	-26
 16306  014E9C  36E3               	rlcf	plusw1,f,c
 16307  014E9E  0EE7               	movlw	-25
 16308  014EA0  36E3               	rlcf	plusw1,f,c
 16309  014EA2  0EE8               	movlw	-24
 16310  014EA4  36E3               	rlcf	plusw1,f,c
 16311  014EA6  0EE9               	movlw	-23
 16312  014EA8  36E3               	rlcf	plusw1,f,c
 16313  014EAA  0EEA               	movlw	-22
 16314  014EAC  36E3               	rlcf	plusw1,f,c
 16315  014EAE  0EEB               	movlw	-21
 16316  014EB0  36E3               	rlcf	plusw1,f,c
 16317  014EB2  0EEC               	movlw	-20
 16318  014EB4  36E3               	rlcf	plusw1,f,c
 16319  014EB6  0EED               	movlw	-19
 16320  014EB8  36E3               	rlcf	plusw1,f,c
 16321                           
 16322                           ;stkvar	_counter @ sp[(-10)+9]
 16323  014EBA  0EFF               	movlw	-1
 16324  014EBC                     L17:
 16325  014EBC  2AE3               	incf	plusw1,f,c
 16326                           
 16327                           ;stkvar	_divisor @ sp[(-10)+-16]
 16328  014EBE  0EED               	movlw	-19
 16329  014EC0  AEE3               	btfss	plusw1,7,c
 16330  014EC2  D7EA               	goto	l6511
 16331  014EC4                     u5350:
 16332                           
 16333                           ;stkvar	_quotient @ sp[(-10)+0]
 16334  014EC4  90D8               	bcf	status,0,c
 16335  014EC6  0EF6               	movlw	-10
 16336  014EC8  36E3               	rlcf	plusw1,f,c
 16337  014ECA  0EF7               	movlw	-9
 16338  014ECC  36E3               	rlcf	plusw1,f,c
 16339  014ECE  0EF8               	movlw	-8
 16340  014ED0  36E3               	rlcf	plusw1,f,c
 16341  014ED2  0EF9               	movlw	-7
 16342  014ED4  36E3               	rlcf	plusw1,f,c
 16343  014ED6  0EFA               	movlw	-6
 16344  014ED8  36E3               	rlcf	plusw1,f,c
 16345  014EDA  0EFB               	movlw	-5
 16346  014EDC  36E3               	rlcf	plusw1,f,c
 16347  014EDE  0EFC               	movlw	-4
 16348  014EE0  36E3               	rlcf	plusw1,f,c
 16349  014EE2  0EFD               	movlw	-3
 16350  014EE4  36E3               	rlcf	plusw1,f,c
 16351                           
 16352                           ;stkvar	_divisor @ sp[(-10)+-16]
 16353                           ;stkvar	_dividend @ sp[(-10)+-8]
 16354  014EE6  50E1               	movf	fsr1l,w,c
 16355  014EE8  0FEE               	addlw	-18
 16356  014EEA  6ED9               	movwf	fsr2l,c
 16357  014EEC  50E2               	movf	fsr1h,w,c
 16358  014EEE  6EDA               	movwf	fsr2h,c
 16359  014EF0  0EFF               	movlw	255
 16360  014EF2  22DA               	addwfc	fsr2h,f,c
 16361  014EF4  0EE6               	movlw	-26
 16362  014EF6  50E3               	movf	plusw1,w,c
 16363  014EF8  5CDE               	subwf	postinc2,w,c
 16364  014EFA  0EE7               	movlw	-25
 16365  014EFC  50E3               	movf	plusw1,w,c
 16366  014EFE  58DE               	subwfb	postinc2,w,c
 16367  014F00  0EE8               	movlw	-24
 16368  014F02  50E3               	movf	plusw1,w,c
 16369  014F04  58DE               	subwfb	postinc2,w,c
 16370  014F06  0EE9               	movlw	-23
 16371  014F08  50E3               	movf	plusw1,w,c
 16372  014F0A  58DE               	subwfb	postinc2,w,c
 16373  014F0C  0EEA               	movlw	-22
 16374  014F0E  50E3               	movf	plusw1,w,c
 16375  014F10  58DE               	subwfb	postinc2,w,c
 16376  014F12  0EEB               	movlw	-21
 16377  014F14  50E3               	movf	plusw1,w,c
 16378  014F16  58DE               	subwfb	postinc2,w,c
 16379  014F18  0EEC               	movlw	-20
 16380  014F1A  50E3               	movf	plusw1,w,c
 16381  014F1C  58DE               	subwfb	postinc2,w,c
 16382  014F1E  0EED               	movlw	-19
 16383  014F20  50E3               	movf	plusw1,w,c
 16384  014F22  58DE               	subwfb	postinc2,w,c
 16385  014F24  A0D8               	btfss	status,0,c
 16386  014F26  D021               	goto	l6523
 16387                           
 16388                           ;stkvar	_divisor @ sp[(-10)+-16]
 16389                           ;stkvar	_dividend @ sp[(-10)+-8]
 16390  014F28  50E1               	movf	fsr1l,w,c
 16391  014F2A  0FEE               	addlw	-18
 16392  014F2C  6ED9               	movwf	fsr2l,c
 16393  014F2E  50E2               	movf	fsr1h,w,c
 16394  014F30  6EDA               	movwf	fsr2h,c
 16395  014F32  0EFF               	movlw	255
 16396  014F34  22DA               	addwfc	fsr2h,f,c
 16397  014F36  0EE6               	movlw	-26
 16398  014F38  50E3               	movf	plusw1,w,c
 16399  014F3A  5EDE               	subwf	postinc2,f,c
 16400  014F3C  0EE7               	movlw	-25
 16401  014F3E  50E3               	movf	plusw1,w,c
 16402  014F40  5ADE               	subwfb	postinc2,f,c
 16403  014F42  0EE8               	movlw	-24
 16404  014F44  50E3               	movf	plusw1,w,c
 16405  014F46  5ADE               	subwfb	postinc2,f,c
 16406  014F48  0EE9               	movlw	-23
 16407  014F4A  50E3               	movf	plusw1,w,c
 16408  014F4C  5ADE               	subwfb	postinc2,f,c
 16409  014F4E  0EEA               	movlw	-22
 16410  014F50  50E3               	movf	plusw1,w,c
 16411  014F52  5ADE               	subwfb	postinc2,f,c
 16412  014F54  0EEB               	movlw	-21
 16413  014F56  50E3               	movf	plusw1,w,c
 16414  014F58  5ADE               	subwfb	postinc2,f,c
 16415  014F5A  0EEC               	movlw	-20
 16416  014F5C  50E3               	movf	plusw1,w,c
 16417  014F5E  5ADE               	subwfb	postinc2,f,c
 16418  014F60  0EED               	movlw	-19
 16419  014F62  50E3               	movf	plusw1,w,c
 16420  014F64  5ADE               	subwfb	postinc2,f,c
 16421                           
 16422                           ;stkvar	_quotient @ sp[(-10)+0]
 16423  014F66  0EF6               	movlw	-10
 16424  014F68  80E3               	bsf	plusw1,0,c
 16425  014F6A                     l6523:
 16426                           
 16427                           ;stkvar	_divisor @ sp[(-10)+-16]
 16428  014F6A  90D8               	bcf	status,0,c
 16429  014F6C  0EED               	movlw	-19
 16430  014F6E  32E3               	rrcf	plusw1,f,c
 16431  014F70  0EEC               	movlw	-20
 16432  014F72  32E3               	rrcf	plusw1,f,c
 16433  014F74  0EEB               	movlw	-21
 16434  014F76  32E3               	rrcf	plusw1,f,c
 16435  014F78  0EEA               	movlw	-22
 16436  014F7A  32E3               	rrcf	plusw1,f,c
 16437  014F7C  0EE9               	movlw	-23
 16438  014F7E  32E3               	rrcf	plusw1,f,c
 16439  014F80  0EE8               	movlw	-24
 16440  014F82  32E3               	rrcf	plusw1,f,c
 16441  014F84  0EE7               	movlw	-25
 16442  014F86  32E3               	rrcf	plusw1,f,c
 16443  014F88  0EE6               	movlw	-26
 16444  014F8A  32E3               	rrcf	plusw1,f,c
 16445                           
 16446                           ;stkvar	_counter @ sp[(-10)+9]
 16447  014F8C  0EFF               	movlw	-1
 16448  014F8E  50E3               	movf	plusw1,w,c
 16449  014F90  6E32               	movwf	btemp^0,c
 16450  014F92  0E01               	movlw	1
 16451  014F94  5E32               	subwf	btemp^0,f,c
 16452  014F96  0EFF               	movlw	-1
 16453  014F98  0060  F0CB  FFE3   	movff	btemp,plusw1
 16454  014F9E  A4D8               	btfss	status,2,c
 16455  014FA0  D791               	goto	u5350
 16456  014FA2                     u5370:
 16457                           
 16458                           ;stkvar	_sign @ sp[(-10)+8]
 16459  014FA2  0EFE               	movlw	-2
 16460  014FA4  50E3               	movf	plusw1,w,c
 16461  014FA6  B4D8               	btfsc	status,2,c
 16462  014FA8  D025               	goto	u5390
 16463                           
 16464                           ;stkvar	_quotient @ sp[(-10)+0]
 16465                           ;stkvar	_quotient @ sp[(-10)+0]
 16466  014FAA  0EF6               	movlw	-10
 16467  014FAC  6CE3               	negf	plusw1,c
 16468  014FAE  0EF7               	movlw	-9
 16469  014FB0  1EE3               	comf	plusw1,f,c
 16470  014FB2  0EF8               	movlw	-8
 16471  014FB4  1EE3               	comf	plusw1,f,c
 16472  014FB6  0EF9               	movlw	-7
 16473  014FB8  1EE3               	comf	plusw1,f,c
 16474  014FBA  0EFA               	movlw	-6
 16475  014FBC  1EE3               	comf	plusw1,f,c
 16476  014FBE  0EFB               	movlw	-5
 16477  014FC0  1EE3               	comf	plusw1,f,c
 16478  014FC2  0EFC               	movlw	-4
 16479  014FC4  1EE3               	comf	plusw1,f,c
 16480  014FC6  0EFD               	movlw	-3
 16481  014FC8  1EE3               	comf	plusw1,f,c
 16482  014FCA  E314               	bnc	u5390
 16483  014FCC  0EF7               	movlw	-9
 16484  014FCE  2AE3               	incf	plusw1,f,c
 16485  014FD0  E311               	bnc	u5390
 16486  014FD2  0EF8               	movlw	-8
 16487  014FD4  2AE3               	incf	plusw1,f,c
 16488  014FD6  E30E               	bnc	u5390
 16489  014FD8  0EF9               	movlw	-7
 16490  014FDA  2AE3               	incf	plusw1,f,c
 16491  014FDC  E30B               	bnc	u5390
 16492  014FDE  0EFA               	movlw	-6
 16493  014FE0  2AE3               	incf	plusw1,f,c
 16494  014FE2  E308               	bnc	u5390
 16495  014FE4  0EFB               	movlw	-5
 16496  014FE6  2AE3               	incf	plusw1,f,c
 16497  014FE8  E305               	bnc	u5390
 16498  014FEA  0EFC               	movlw	-4
 16499  014FEC  2AE3               	incf	plusw1,f,c
 16500  014FEE  E302               	bnc	u5390
 16501  014FF0  0EFD               	movlw	-3
 16502  014FF2  2AE3               	incf	plusw1,f,c
 16503  014FF4                     u5390:
 16504                           
 16505                           ;stkvar	_quotient @ sp[(-10)+0]
 16506  014FF4  0EF6               	movlw	246
 16507  014FF6  24E1               	addwf	fsr1l,w,c
 16508  014FF8  6ED9               	movwf	fsr2l,c
 16509  014FFA  0EFF               	movlw	255
 16510  014FFC  20E2               	addwfc	fsr1h,w,c
 16511  014FFE  6EDA               	movwf	fsr2h,c
 16512                           
 16513                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 16514  015000  0E08               	movlw	8
 16515  015002  6E32               	movwf	btemp^0,c
 16516  015004  0EEE               	movlw	-18
 16517  015006                     us540999:
 16518  015006  006F FF7B FFE3     	movff	postinc2,plusw1
 16519  01500C  28E8               	incf	wreg,w,c
 16520  01500E  2E32               	decfsz	btemp^0,f,c
 16521  015010  D7FA               	bra	us540999
 16522                           
 16523                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 16524  015012  0EF6               	movlw	246
 16525  015014  26E1               	addwf	fsr1l,f,c
 16526  015016  0EFF               	movlw	255
 16527  015018  22E2               	addwfc	fsr1h,f,c
 16528  01501A  0012               	return		;funcret
 16529  01501C                     __end_of___aodiv:
 16530                           	opt callstack 0
 16531                           
 16532 ;; *************** function _ctoa *****************
 16533 ;; Defined at:
 16534 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16535 ;; Parameters:    Size  Location     Type
 16536 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16537 ;;		 -> f(6), NULL(0), 
 16538 ;;  c               1  [STACK] unsigned char 
 16539 ;; Auto vars:     Size  Location     Type
 16540 ;;  w               2  [STACK] int 
 16541 ;;  l               2    0        int 
 16542 ;; Return value:  Size  Location     Type
 16543 ;;                  2  [STACK] int 
 16544 ;; Registers used:
 16545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16546 ;; Tracked objects:
 16547 ;;		On entry : 0/5
 16548 ;;		On exit  : 0/0
 16549 ;;		Unchanged: 0/0
 16550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16555 ;;Total ram usage:        0 bytes
 16556 ;; Hardware stack levels used:    1
 16557 ;; Hardware stack levels required when called:   11
 16558 ;; This function calls:
 16559 ;;		_pad
 16560 ;; This function is called by:
 16561 ;;		_vfpfcnvrt
 16562 ;; This function uses a reentrant model
 16563 ;;
 16564                           
 16565                           	psect	text60
 16566  0174B4                     __ptext60:
 16567                           	opt callstack 0
 16568  0174B4                     _ctoa:
 16569                           	opt callstack 0
 16570                           
 16571                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16572  0174B4  52E6               	movf	postinc1,f,c
 16573  0174B6  52E6               	movf	postinc1,f,c
 16574                           
 16575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 16576                           
 16577                           ;incstack = 0
 16578  0174B8  501B               	movf	_width^0,w,c
 16579  0174BA  101C               	iorwf	(_width+1)^0,w,c
 16580  0174BC  A4D8               	btfss	status,2,c
 16581  0174BE  D009               	goto	l9277
 16582                           
 16583                           ;stkvar	_w @ sp[(-2)+0]
 16584  0174C0  0EFE               	movlw	-2
 16585  0174C2  0060  F06F  FFE3   	movff	_width,plusw1
 16586  0174C8  0EFF               	movlw	-1
 16587  0174CA  0060  F073  FFE3   	movff	_width+1,plusw1
 16588  0174D0  D016               	goto	l9279
 16589  0174D2                     l9277:
 16590  0174D2  0EFF               	movlw	255
 16591  0174D4  6E3C               	movwf	(btemp+10)^0,c
 16592  0174D6  0EFF               	movlw	255
 16593  0174D8  6E3D               	movwf	(btemp+11)^0,c
 16594  0174DA  0060  F06C  F03A   	movff	_width,btemp+8
 16595  0174E0  0060  F070  F03B   	movff	_width+1,btemp+9
 16596  0174E6  503C               	movf	(btemp+10)^0,w,c
 16597  0174E8  263A               	addwf	(btemp+8)^0,f,c
 16598  0174EA  503D               	movf	(btemp+11)^0,w,c
 16599  0174EC  223B               	addwfc	(btemp+9)^0,f,c
 16600                           
 16601                           ;stkvar	_w @ sp[(-2)+0]
 16602  0174EE  0EFE               	movlw	-2
 16603  0174F0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16604  0174F6  0EFF               	movlw	-1
 16605  0174F8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16606  0174FE                     l9279:
 16607                           
 16608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 16609                           ;stkvar	_c @ sp[(-2)+-3]
 16610  0174FE  0EFB               	movlw	-5
 16611  017500  006F FF8C  F178    	movff	plusw1,_dbuf
 16612                           
 16613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 16614  017506  0101               	movlb	1	; () banked
 16615  017508  6B79               	clrf	(_dbuf+1)& (0+255),b
 16616                           
 16617                           ; BSR set to: 1
 16618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 16619                           ;stkvar	_w @ sp[(-2)+0]
 16620  01750A  0EFE               	movlw	-2
 16621  01750C  006F FF8F FFE6     	movff	plusw1,postinc1
 16622  017512  006F FF8F FFE6     	movff	plusw1,postinc1
 16623  017518  0E78               	movlw	low _dbuf
 16624  01751A  6EE6               	movwf	postinc1,c
 16625  01751C  0E01               	movlw	high _dbuf
 16626  01751E  6EE6               	movwf	postinc1,c
 16627                           
 16628                           ;stkvar	_fp @ sp[(-6)+-2]
 16629  017520  0EF8               	movlw	-8
 16630  017522  006F FF8F FFE6     	movff	plusw1,postinc1
 16631  017528  006F FF8F FFE6     	movff	plusw1,postinc1
 16632  01752E  EC80  F0B4         	call	_pad	;wreg free
 16633                           
 16634                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 16635  017532  0EFB               	movlw	251
 16636  017534  26E1               	addwf	fsr1l,f,c
 16637  017536  0EFF               	movlw	255
 16638  017538  22E2               	addwfc	fsr1h,f,c
 16639  01753A  0012               	return		;funcret
 16640  01753C                     __end_of_ctoa:
 16641                           	opt callstack 0
 16642                           
 16643 ;; *************** function _pad *****************
 16644 ;; Defined at:
 16645 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16646 ;; Parameters:    Size  Location     Type
 16647 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16648 ;;		 -> f(6), NULL(0), 
 16649 ;;  buf             2  [STACK] PTR unsigned char 
 16650 ;;		 -> dbuf(80), 
 16651 ;;  p               2  [STACK] int 
 16652 ;; Auto vars:     Size  Location     Type
 16653 ;;  w               2  [STACK] int 
 16654 ;;  i               2  [STACK] int 
 16655 ;; Return value:  Size  Location     Type
 16656 ;;                  2  [STACK] int 
 16657 ;; Registers used:
 16658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16659 ;; Tracked objects:
 16660 ;;		On entry : 0/1
 16661 ;;		On exit  : 0/0
 16662 ;;		Unchanged: 0/0
 16663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16668 ;;Total ram usage:        0 bytes
 16669 ;; Hardware stack levels used:    1
 16670 ;; Hardware stack levels required when called:   10
 16671 ;; This function calls:
 16672 ;;		_fputc
 16673 ;;		_fputs
 16674 ;;		_strlen
 16675 ;; This function is called by:
 16676 ;;		_ctoa
 16677 ;;		_dtoa
 16678 ;;		_efgtoa
 16679 ;;		_xtoa
 16680 ;; This function uses a reentrant model
 16681 ;;
 16682                           
 16683                           	psect	text61
 16684  016900                     __ptext61:
 16685                           	opt callstack 0
 16686  016900                     _pad:
 16687                           	opt callstack 0
 16688                           
 16689                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16690  016900  52E6               	movf	postinc1,f,c
 16691  016902  52E6               	movf	postinc1,f,c
 16692  016904  52E6               	movf	postinc1,f,c
 16693  016906  52E6               	movf	postinc1,f,c
 16694                           
 16695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 16696                           
 16697                           ;incstack = 0
 16698  016908  A01F               	btfss	_flags^0,0,c
 16699  01690A  D010               	goto	l9251
 16700                           
 16701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 16702                           ;stkvar	_fp @ sp[(-4)+-2]
 16703  01690C  0EFA               	movlw	-6
 16704  01690E  006F FF8F FFE6     	movff	plusw1,postinc1
 16705  016914  006F FF8F FFE6     	movff	plusw1,postinc1
 16706                           
 16707                           ;stkvar	_buf @ sp[(-6)+-4]
 16708  01691A  0EF6               	movlw	-10
 16709  01691C  006F FF8F FFE6     	movff	plusw1,postinc1
 16710  016922  006F FF8F FFE6     	movff	plusw1,postinc1
 16711  016928  EC7C  F0B9         	call	_fputs	;wreg free
 16712  01692C                     l9251:
 16713                           
 16714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 16715                           ;stkvar	_p @ sp[(-4)+-6]
 16716  01692C  0EF7               	movlw	-9
 16717  01692E  BEE3               	btfsc	plusw1,7,c
 16718  016930  D011               	goto	l9255
 16719                           
 16720                           ;stkvar	_p @ sp[(-4)+-6]
 16721                           ;stkvar	_w @ sp[(-4)+0]
 16722  016932  0EF6               	movlw	-10
 16723  016934  006F FF8C  F032    	movff	plusw1,btemp
 16724  01693A  0EFC               	movlw	-4
 16725  01693C  0060  F0CB  FFE3   	movff	btemp,plusw1
 16726  016942  0EF7               	movlw	-9
 16727  016944  006F FF8C  F032    	movff	plusw1,btemp
 16728  01694A  0EFD               	movlw	-3
 16729  01694C  0060  F0CB  FFE3   	movff	btemp,plusw1
 16730  016952  D004               	goto	l1812
 16731  016954                     l9255:
 16732                           
 16733                           ;stkvar	_w @ sp[(-4)+0]
 16734  016954  0EFC               	movlw	-4
 16735  016956  6AE3               	clrf	plusw1,c
 16736  016958  0EFD               	movlw	-3
 16737  01695A  6AE3               	clrf	plusw1,c
 16738  01695C                     l1812:
 16739                           
 16740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 16741                           ;stkvar	_i @ sp[(-4)+2]
 16742  01695C  0EFE               	movlw	-2
 16743  01695E  6AE3               	clrf	plusw1,c
 16744  016960  0EFF               	movlw	-1
 16745  016962  6AE3               	clrf	plusw1,c
 16746                           
 16747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 16748  016964  D01E               	goto	l9261
 16749  016966                     l9257:
 16750                           
 16751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 16752                           ;stkvar	_fp @ sp[(-4)+-2]
 16753  016966  0EFA               	movlw	-6
 16754  016968  006F FF8F FFE6     	movff	plusw1,postinc1
 16755  01696E  006F FF8F FFE6     	movff	plusw1,postinc1
 16756  016974  0E20               	movlw	32
 16757  016976  6EE6               	movwf	postinc1,c
 16758  016978  0E00               	movlw	0
 16759  01697A  6EE6               	movwf	postinc1,c
 16760  01697C  EC62  F0B3         	call	_fputc	;wreg free
 16761                           
 16762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 16763                           ;stkvar	_i @ sp[(-4)+2]
 16764  016980  0EFE               	movlw	-2
 16765  016982  50E3               	movf	plusw1,w,c
 16766  016984  0F01               	addlw	1
 16767  016986  6E32               	movwf	btemp^0,c
 16768  016988  0EFE               	movlw	-2
 16769  01698A  0060  F0CB  FFE3   	movff	btemp,plusw1
 16770  016990  6A32               	clrf	btemp^0,c
 16771  016992  0EFF               	movlw	-1
 16772  016994  50E3               	movf	plusw1,w,c
 16773  016996  2032               	addwfc	btemp^0,w,c
 16774  016998  6E32               	movwf	btemp^0,c
 16775  01699A  0EFF               	movlw	-1
 16776  01699C  0060  F0CB  FFE3   	movff	btemp,plusw1
 16777  0169A2                     l9261:
 16778                           
 16779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 16780                           ;stkvar	_w @ sp[(-4)+0]
 16781                           ;stkvar	_i @ sp[(-4)+2]
 16782  0169A2  50E1               	movf	fsr1l,w,c
 16783  0169A4  0FFE               	addlw	-2
 16784  0169A6  6ED9               	movwf	fsr2l,c
 16785  0169A8  50E2               	movf	fsr1h,w,c
 16786  0169AA  6EDA               	movwf	fsr2h,c
 16787  0169AC  0EFF               	movlw	255
 16788  0169AE  22DA               	addwfc	fsr2h,f,c
 16789  0169B0  0EFC               	movlw	-4
 16790  0169B2  50E3               	movf	plusw1,w,c
 16791  0169B4  5CDE               	subwf	postinc2,w,c
 16792  0169B6  50DE               	movf	postinc2,w,c
 16793  0169B8  0A80               	xorlw	128
 16794  0169BA  6E32               	movwf	btemp^0,c
 16795  0169BC  0EFD               	movlw	-3
 16796  0169BE  50E3               	movf	plusw1,w,c
 16797  0169C0  0A80               	xorlw	128
 16798  0169C2  5832               	subwfb	btemp^0,w,c
 16799  0169C4  A0D8               	btfss	status,0,c
 16800  0169C6  D7CF               	goto	l9257
 16801                           
 16802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 16803  0169C8  B01F               	btfsc	_flags^0,0,c
 16804  0169CA  D010               	goto	l9265
 16805                           
 16806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 16807                           ;stkvar	_fp @ sp[(-4)+-2]
 16808  0169CC  0EFA               	movlw	-6
 16809  0169CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16810  0169D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16811                           
 16812                           ;stkvar	_buf @ sp[(-6)+-4]
 16813  0169DA  0EF6               	movlw	-10
 16814  0169DC  006F FF8F FFE6     	movff	plusw1,postinc1
 16815  0169E2  006F FF8F FFE6     	movff	plusw1,postinc1
 16816  0169E8  EC7C  F0B9         	call	_fputs	;wreg free
 16817  0169EC                     l9265:
 16818                           
 16819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 16820                           ;stkvar	_w @ sp[(-4)+0]
 16821                           ;stkvar	_buf @ sp[(-4)+-4]
 16822  0169EC  0EF8               	movlw	-8
 16823  0169EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16824  0169F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16825  0169FA  EC2B  F0B9         	call	_strlen	;wreg free
 16826  0169FE  0EFC               	movlw	-4
 16827  016A00  50E3               	movf	plusw1,w,c
 16828  016A02  2632               	addwf	btemp^0,f,c
 16829  016A04  0EFD               	movlw	-3
 16830  016A06  50E3               	movf	plusw1,w,c
 16831  016A08  2233               	addwfc	(btemp+1)^0,f,c
 16832                           
 16833                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 16834  016A0A  0EF6               	movlw	246
 16835  016A0C  26E1               	addwf	fsr1l,f,c
 16836  016A0E  0EFF               	movlw	255
 16837  016A10  22E2               	addwfc	fsr1h,f,c
 16838  016A12  0012               	return		;funcret
 16839  016A14                     __end_of_pad:
 16840                           	opt callstack 0
 16841                           
 16842 ;; *************** function _strlen *****************
 16843 ;; Defined at:
 16844 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 16845 ;; Parameters:    Size  Location     Type
 16846 ;;  s               2  [STACK] PTR const unsigned char 
 16847 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 16848 ;;		 -> STR_19(9), STR_18(12), D.lcd(216), D(218), 
 16849 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 16850 ;; Auto vars:     Size  Location     Type
 16851 ;;  a               2  [STACK] PTR const unsigned char 
 16852 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 16853 ;;		 -> STR_19(9), STR_18(12), D.lcd(216), D(218), 
 16854 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 16855 ;; Return value:  Size  Location     Type
 16856 ;;                  2  [STACK] unsigned int 
 16857 ;; Registers used:
 16858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 16859 ;; Tracked objects:
 16860 ;;		On entry : 0/0
 16861 ;;		On exit  : 0/0
 16862 ;;		Unchanged: 0/0
 16863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16868 ;;Total ram usage:        0 bytes
 16869 ;; Hardware stack levels used:    1
 16870 ;; Hardware stack levels required when called:    6
 16871 ;; This function calls:
 16872 ;;		Nothing
 16873 ;; This function is called by:
 16874 ;;		_eaDogM_WriteString
 16875 ;;		_pad
 16876 ;;		_stoa
 16877 ;; This function uses a reentrant model
 16878 ;;
 16879                           
 16880                           	psect	text62
 16881  017256                     __ptext62:
 16882                           	opt callstack 0
 16883  017256                     _strlen:
 16884                           	opt callstack 0
 16885                           
 16886                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16887  017256  52E6               	movf	postinc1,f,c
 16888  017258  52E6               	movf	postinc1,f,c
 16889                           
 16890                           ;stkvar	_s @ sp[(-2)+-2]
 16891                           
 16892                           ;incstack = 0
 16893  01725A  0EFC               	movlw	-4
 16894  01725C  006F FF8C  F03C    	movff	plusw1,btemp+10
 16895  017262  0EFD               	movlw	-3
 16896  017264  006F FF8C  F03D    	movff	plusw1,btemp+11
 16897                           
 16898                           ;stkvar	_a @ sp[(-2)+0]
 16899  01726A  0EFF               	movlw	-1
 16900  01726C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16901  017272  0EFE               	movlw	-2
 16902  017274  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16903  01727A  D011               	goto	l6117
 16904  01727C                     l6115:
 16905                           
 16906                           ;stkvar	_s @ sp[(-2)+-2]
 16907  01727C  0EFC               	movlw	-4
 16908  01727E  50E3               	movf	plusw1,w,c
 16909  017280  0F01               	addlw	1
 16910  017282  6E32               	movwf	btemp^0,c
 16911  017284  0EFC               	movlw	-4
 16912  017286  0060  F0CB  FFE3   	movff	btemp,plusw1
 16913  01728C  6A32               	clrf	btemp^0,c
 16914  01728E  0EFD               	movlw	-3
 16915  017290  50E3               	movf	plusw1,w,c
 16916  017292  2032               	addwfc	btemp^0,w,c
 16917  017294  6E32               	movwf	btemp^0,c
 16918  017296  0EFD               	movlw	-3
 16919  017298  0060  F0CB  FFE3   	movff	btemp,plusw1
 16920  01729E                     l6117:
 16921                           
 16922                           ;stkvar	_s @ sp[(-2)+-2]
 16923  01729E  0EFC               	movlw	-4
 16924  0172A0  006F FF8F FFF6     	movff	plusw1,tblptrl
 16925  0172A6  0EFD               	movlw	-3
 16926  0172A8  006F FF8F FFF7     	movff	plusw1,tblptrh
 16927  0172AE  0E00               	movlw	low (__mediumconst shr (0+16))
 16928  0172B0  6EF8               	movwf	tblptru,c
 16929  0172B2  0E1F               	movlw	(high __ramtop+-1)
 16930  0172B4  64F7               	cpfsgt	tblptrh,c
 16931  0172B6  D003               	bra	u4467
 16932  0172B8  0008               	tblrd		*
 16933  0172BA  50F5               	movf	tablat,w,c
 16934  0172BC  D007               	bra	u4460
 16935  0172BE                     u4467:
 16936  0172BE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16937  0172C4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16938  0172CA  50EF               	movf	indf0,w,c
 16939  0172CC                     u4460:
 16940  0172CC  0900               	iorlw	0
 16941  0172CE  A4D8               	btfss	status,2,c
 16942  0172D0  D7D5               	goto	l6115
 16943                           
 16944                           ;stkvar	_a @ sp[(-2)+0]
 16945                           ;stkvar	_s @ sp[(-2)+-2]
 16946  0172D2  0EFC               	movlw	-4
 16947  0172D4  006F FF8C  F032    	movff	plusw1,btemp
 16948  0172DA  0EFD               	movlw	-3
 16949  0172DC  006F FF8C  F033    	movff	plusw1,btemp+1
 16950  0172E2  0EFE               	movlw	-2
 16951  0172E4  50E3               	movf	plusw1,w,c
 16952  0172E6  5E32               	subwf	btemp^0,f,c
 16953  0172E8  0EFF               	movlw	-1
 16954  0172EA  50E3               	movf	plusw1,w,c
 16955  0172EC  5A33               	subwfb	(btemp+1)^0,f,c
 16956                           
 16957                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16958  0172EE  52E5               	movf	postdec1,f,c
 16959  0172F0  52E5               	movf	postdec1,f,c
 16960  0172F2  52E5               	movf	postdec1,f,c
 16961  0172F4  52E5               	movf	postdec1,f,c
 16962  0172F6  0012               	return		;funcret
 16963  0172F8                     __end_of_strlen:
 16964                           	opt callstack 0
 16965                           
 16966 ;; *************** function _fputs *****************
 16967 ;; Defined at:
 16968 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 16969 ;; Parameters:    Size  Location     Type
 16970 ;;  s               2  [STACK] PTR const unsigned char 
 16971 ;;		 -> dbuf(80), 
 16972 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16973 ;;		 -> f(6), NULL(0), 
 16974 ;; Auto vars:     Size  Location     Type
 16975 ;;  i               2  [STACK] int 
 16976 ;;  c               1  [STACK] unsigned char 
 16977 ;; Return value:  Size  Location     Type
 16978 ;;                  2  [STACK] int 
 16979 ;; Registers used:
 16980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 16981 ;; Tracked objects:
 16982 ;;		On entry : 0/1
 16983 ;;		On exit  : 0/0
 16984 ;;		Unchanged: 0/0
 16985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16990 ;;Total ram usage:        0 bytes
 16991 ;; Hardware stack levels used:    1
 16992 ;; Hardware stack levels required when called:    9
 16993 ;; This function calls:
 16994 ;;		_fputc
 16995 ;; This function is called by:
 16996 ;;		_pad
 16997 ;; This function uses a reentrant model
 16998 ;;
 16999                           
 17000                           	psect	text63
 17001  0172F8                     __ptext63:
 17002                           	opt callstack 0
 17003  0172F8                     _fputs:
 17004                           	opt callstack 0
 17005                           
 17006                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17007  0172F8  52E6               	movf	postinc1,f,c
 17008  0172FA  52E6               	movf	postinc1,f,c
 17009  0172FC  52E6               	movf	postinc1,f,c
 17010                           
 17011                           ;stkvar	_i @ sp[(-3)+0]
 17012                           
 17013                           ;incstack = 0
 17014  0172FE  0EFD               	movlw	-3
 17015  017300  6AE3               	clrf	plusw1,c
 17016  017302  0EFE               	movlw	-2
 17017  017304  6AE3               	clrf	plusw1,c
 17018  017306  D01F               	goto	l9245
 17019  017308                     l9241:
 17020                           
 17021                           ;stkvar	_fp @ sp[(-3)+-4]
 17022  017308  0EF9               	movlw	-7
 17023  01730A  006F FF8F FFE6     	movff	plusw1,postinc1
 17024  017310  006F FF8F FFE6     	movff	plusw1,postinc1
 17025                           
 17026                           ;stkvar	_c @ sp[(-5)+2]
 17027  017316  0EFD               	movlw	-3
 17028  017318  50E3               	movf	plusw1,w,c
 17029  01731A  6EE6               	movwf	postinc1,c
 17030  01731C  0E00               	movlw	0
 17031  01731E  6EE6               	movwf	postinc1,c
 17032  017320  EC62  F0B3         	call	_fputc	;wreg free
 17033                           
 17034                           ;stkvar	_i @ sp[(-3)+0]
 17035  017324  0EFD               	movlw	-3
 17036  017326  50E3               	movf	plusw1,w,c
 17037  017328  0F01               	addlw	1
 17038  01732A  6E32               	movwf	btemp^0,c
 17039  01732C  0EFD               	movlw	-3
 17040  01732E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17041  017334  6A32               	clrf	btemp^0,c
 17042  017336  0EFE               	movlw	-2
 17043  017338  50E3               	movf	plusw1,w,c
 17044  01733A  2032               	addwfc	btemp^0,w,c
 17045  01733C  6E32               	movwf	btemp^0,c
 17046  01733E  0EFE               	movlw	-2
 17047  017340  0060  F0CB  FFE3   	movff	btemp,plusw1
 17048  017346                     l9245:
 17049                           
 17050                           ;stkvar	_i @ sp[(-3)+0]
 17051  017346  0EFD               	movlw	-3
 17052  017348  006F FF8C  F03C    	movff	plusw1,btemp+10
 17053  01734E  0EFE               	movlw	-2
 17054  017350  006F FF8C  F03D    	movff	plusw1,btemp+11
 17055                           
 17056                           ;stkvar	_s @ sp[(-3)+-2]
 17057  017356  0EFB               	movlw	-5
 17058  017358  006F FF8C  F03A    	movff	plusw1,btemp+8
 17059  01735E  0EFC               	movlw	-4
 17060  017360  006F FF8C  F03B    	movff	plusw1,btemp+9
 17061  017366  503C               	movf	(btemp+10)^0,w,c
 17062  017368  243A               	addwf	(btemp+8)^0,w,c
 17063  01736A  6ED9               	movwf	fsr2l,c
 17064  01736C  503D               	movf	(btemp+11)^0,w,c
 17065  01736E  203B               	addwfc	(btemp+9)^0,w,c
 17066  017370  6EDA               	movwf	fsr2h,c
 17067  017372  50DF               	movf	indf2,w,c
 17068  017374  6E3D               	movwf	(btemp+11)^0,c
 17069                           
 17070                           ;stkvar	_c @ sp[(-3)+2]
 17071  017376  0EFF               	movlw	-1
 17072  017378  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17073  01737E  0EFF               	movlw	-1
 17074  017380  50E3               	movf	plusw1,w,c
 17075  017382  A4D8               	btfss	status,2,c
 17076  017384  D7C1               	goto	l9241
 17077                           
 17078                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17079  017386  0EF9               	movlw	249
 17080  017388  26E1               	addwf	fsr1l,f,c
 17081  01738A  0EFF               	movlw	255
 17082  01738C  22E2               	addwfc	fsr1h,f,c
 17083  01738E  0012               	return		;funcret
 17084  017390                     __end_of_fputs:
 17085                           	opt callstack 0
 17086                           
 17087 ;; *************** function _fputc *****************
 17088 ;; Defined at:
 17089 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 17090 ;; Parameters:    Size  Location     Type
 17091 ;;  c               2  [STACK] int 
 17092 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17093 ;;		 -> f(6), NULL(0), 
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;		None
 17096 ;; Return value:  Size  Location     Type
 17097 ;;                  2  [STACK] int 
 17098 ;; Registers used:
 17099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17100 ;; Tracked objects:
 17101 ;;		On entry : 0/5
 17102 ;;		On exit  : 0/0
 17103 ;;		Unchanged: 0/0
 17104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17109 ;;Total ram usage:        0 bytes
 17110 ;; Hardware stack levels used:    1
 17111 ;; Hardware stack levels required when called:    8
 17112 ;; This function calls:
 17113 ;;		_putch
 17114 ;; This function is called by:
 17115 ;;		_pad
 17116 ;;		_stoa
 17117 ;;		_vfpfcnvrt
 17118 ;;		_fputs
 17119 ;; This function uses a reentrant model
 17120 ;;
 17121                           
 17122                           	psect	text64
 17123  0166C4                     __ptext64:
 17124                           	opt callstack 0
 17125  0166C4                     _fputc:
 17126                           	opt callstack 13
 17127                           
 17128                           ;stkvar	_fp @ sp[(0)+-4]
 17129                           
 17130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17131                           ;incstack = 0
 17132  0166C4  0EFC               	movlw	-4
 17133  0166C6  006F FF8C  F032    	movff	plusw1,btemp
 17134  0166CC  0EFD               	movlw	-3
 17135  0166CE  50E3               	movf	plusw1,w,c
 17136  0166D0  1032               	iorwf	btemp^0,w,c
 17137  0166D2  B4D8               	btfsc	status,2,c
 17138  0166D4  D009               	goto	u8790
 17139                           
 17140                           ;stkvar	_fp @ sp[(0)+-4]
 17141  0166D6  0EFC               	movlw	-4
 17142  0166D8  006F FF8C  F032    	movff	plusw1,btemp
 17143  0166DE  0EFD               	movlw	-3
 17144  0166E0  50E3               	movf	plusw1,w,c
 17145  0166E2  1032               	iorwf	btemp^0,w,c
 17146  0166E4  A4D8               	btfss	status,2,c
 17147  0166E6  D006               	goto	l9229
 17148  0166E8                     u8790:
 17149                           
 17150                           ;stkvar	_c @ sp[(0)+-2]
 17151  0166E8  0EFE               	movlw	-2
 17152  0166EA  50E3               	movf	plusw1,w,c
 17153  0166EC  6EE6               	movwf	postinc1,c
 17154  0166EE  EC50  F0C3         	call	_putch	;wreg free
 17155  0166F2  D075               	goto	l2830
 17156  0166F4                     l9229:
 17157                           
 17158                           ;stkvar	_fp @ sp[(0)+-4]
 17159  0166F4  0EFC               	movlw	-4
 17160  0166F6  006F FF8C  F03C    	movff	plusw1,btemp+10
 17161  0166FC  0EFD               	movlw	-3
 17162  0166FE  006F FF8C  F03D    	movff	plusw1,btemp+11
 17163  016704  0E04               	movlw	4
 17164  016706  243C               	addwf	(btemp+10)^0,w,c
 17165  016708  6ED9               	movwf	fsr2l,c
 17166  01670A  0E00               	movlw	0
 17167  01670C  203D               	addwfc	(btemp+11)^0,w,c
 17168  01670E  6EDA               	movwf	fsr2h,c
 17169  016710  50DE               	movf	postinc2,w,c
 17170  016712  10DE               	iorwf	postinc2,w,c
 17171  016714  B4D8               	btfsc	status,2,c
 17172  016716  D026               	goto	u8810
 17173                           
 17174                           ;stkvar	_fp @ sp[(0)+-4]
 17175  016718  0EFC               	movlw	-4
 17176  01671A  006F FF8C  F03C    	movff	plusw1,btemp+10
 17177  016720  0EFD               	movlw	-3
 17178  016722  006F FF8C  F03D    	movff	plusw1,btemp+11
 17179  016728  0E04               	movlw	4
 17180  01672A  243C               	addwf	(btemp+10)^0,w,c
 17181  01672C  6ED9               	movwf	fsr2l,c
 17182  01672E  0E00               	movlw	0
 17183  016730  203D               	addwfc	(btemp+11)^0,w,c
 17184  016732  6EDA               	movwf	fsr2h,c
 17185                           
 17186                           ;stkvar	_fp @ sp[(0)+-4]
 17187  016734  0EFC               	movlw	-4
 17188  016736  006F FF8C  F03C    	movff	plusw1,btemp+10
 17189  01673C  0EFD               	movlw	-3
 17190  01673E  006F FF8C  F03D    	movff	plusw1,btemp+11
 17191  016744  0E02               	movlw	2
 17192  016746  243C               	addwf	(btemp+10)^0,w,c
 17193  016748  6EE9               	movwf	fsr0l,c
 17194  01674A  0E00               	movlw	0
 17195  01674C  203D               	addwfc	(btemp+11)^0,w,c
 17196  01674E  6EEA               	movwf	fsr0h,c
 17197  016750  50DE               	movf	postinc2,w,c
 17198  016752  5CEE               	subwf	postinc0,w,c
 17199  016754  50EE               	movf	postinc0,w,c
 17200  016756  0A80               	xorlw	128
 17201  016758  6E32               	movwf	btemp^0,c
 17202  01675A  50DE               	movf	postinc2,w,c
 17203  01675C  0A80               	xorlw	128
 17204  01675E  5832               	subwfb	btemp^0,w,c
 17205  016760  B0D8               	btfsc	status,0,c
 17206  016762  D03D               	goto	l2830
 17207  016764                     u8810:
 17208                           
 17209                           ;stkvar	_c @ sp[(0)+-2]
 17210                           ;stkvar	_fp @ sp[(0)+-4]
 17211  016764  0EFC               	movlw	-4
 17212  016766  006F FF8C  F03C    	movff	plusw1,btemp+10
 17213  01676C  0EFD               	movlw	-3
 17214  01676E  006F FF8C  F03D    	movff	plusw1,btemp+11
 17215  016774  0E02               	movlw	2
 17216  016776  243C               	addwf	(btemp+10)^0,w,c
 17217  016778  6ED9               	movwf	fsr2l,c
 17218  01677A  0E00               	movlw	0
 17219  01677C  203D               	addwfc	(btemp+11)^0,w,c
 17220  01677E  6EDA               	movwf	fsr2h,c
 17221  016780  006F FF78  F03C    	movff	postinc2,btemp+10
 17222  016786  006F FF74  F03D    	movff	postdec2,btemp+11
 17223                           
 17224                           ;stkvar	_fp @ sp[(0)+-4]
 17225  01678C  0EFC               	movlw	-4
 17226  01678E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17227  016794  0EFD               	movlw	-3
 17228  016796  006F FF8F FFDA     	movff	plusw1,fsr2h
 17229  01679C  006F FF78  F03A    	movff	postinc2,btemp+8
 17230  0167A2  006F FF74  F03B    	movff	postdec2,btemp+9
 17231  0167A8  503C               	movf	(btemp+10)^0,w,c
 17232  0167AA  243A               	addwf	(btemp+8)^0,w,c
 17233  0167AC  6ED9               	movwf	fsr2l,c
 17234  0167AE  503D               	movf	(btemp+11)^0,w,c
 17235  0167B0  203B               	addwfc	(btemp+9)^0,w,c
 17236  0167B2  6EDA               	movwf	fsr2h,c
 17237  0167B4  0EFE               	movlw	-2
 17238  0167B6  006F FF8F FFDF     	movff	plusw1,indf2
 17239                           
 17240                           ;stkvar	_fp @ sp[(0)+-4]
 17241  0167BC  0EFC               	movlw	-4
 17242  0167BE  006F FF8C  F03C    	movff	plusw1,btemp+10
 17243  0167C4  0EFD               	movlw	-3
 17244  0167C6  006F FF8C  F03D    	movff	plusw1,btemp+11
 17245  0167CC  0E02               	movlw	2
 17246  0167CE  243C               	addwf	(btemp+10)^0,w,c
 17247  0167D0  6ED9               	movwf	fsr2l,c
 17248  0167D2  0E00               	movlw	0
 17249  0167D4  203D               	addwfc	(btemp+11)^0,w,c
 17250  0167D6  6EDA               	movwf	fsr2h,c
 17251  0167D8  2ADE               	incf	postinc2,f,c
 17252  0167DA  0E00               	movlw	0
 17253  0167DC  22DD               	addwfc	postdec2,f,c
 17254  0167DE                     l2830:
 17255                           
 17256                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17257  0167DE  52E5               	movf	postdec1,f,c
 17258  0167E0  52E5               	movf	postdec1,f,c
 17259  0167E2  52E5               	movf	postdec1,f,c
 17260  0167E4  52E5               	movf	postdec1,f,c
 17261  0167E6  0012               	return		;funcret
 17262  0167E8                     __end_of_fputc:
 17263                           	opt callstack 0
 17264                           
 17265 ;; *************** function _putch *****************
 17266 ;; Defined at:
 17267 ;;		line 155 in file "eadog.c"
 17268 ;; Parameters:    Size  Location     Type
 17269 ;;  c               1  [STACK] unsigned char 
 17270 ;; Auto vars:     Size  Location     Type
 17271 ;;		None
 17272 ;; Return value:  Size  Location     Type
 17273 ;;                  1  [STACK] void 
 17274 ;; Registers used:
 17275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17276 ;; Tracked objects:
 17277 ;;		On entry : 0/5
 17278 ;;		On exit  : 0/0
 17279 ;;		Unchanged: 0/0
 17280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17285 ;;Total ram usage:        0 bytes
 17286 ;; Hardware stack levels used:    1
 17287 ;; Hardware stack levels required when called:    7
 17288 ;; This function calls:
 17289 ;;		_ringBufS_put_dma
 17290 ;; This function is called by:
 17291 ;;		_fputc
 17292 ;; This function uses a reentrant model
 17293 ;;
 17294                           
 17295                           	psect	text65
 17296  0186A0                     __ptext65:
 17297                           	opt callstack 0
 17298  0186A0                     _putch:
 17299                           	opt callstack 13
 17300                           
 17301                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 17302                           ;stkvar	_c @ sp[(0)+-1]
 17303                           
 17304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17305                           ;incstack = 0
 17306  0186A0  0EFF               	movlw	-1
 17307  0186A2  50E3               	movf	plusw1,w,c
 17308  0186A4  6EE6               	movwf	postinc1,c
 17309  0186A6  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 17310  0186AC  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 17311  0186B2  EC2F  F0B8         	call	_ringBufS_put_dma	;wreg free
 17312                           
 17313                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 17314  0186B6  52E5               	movf	postdec1,f,c
 17315  0186B8  0012               	return		;funcret
 17316  0186BA                     __end_of_putch:
 17317                           	opt callstack 0
 17318                           
 17319 ;; *************** function _ringBufS_put_dma *****************
 17320 ;; Defined at:
 17321 ;;		line 67 in file "ringbufs.c"
 17322 ;; Parameters:    Size  Location     Type
 17323 ;;  _this           2  [STACK] PTR struct ringBufS_t
 17324 ;;		 -> ring_buf1(67), 
 17325 ;;  c               1  [STACK] const unsigned char 
 17326 ;; Auto vars:     Size  Location     Type
 17327 ;;		None
 17328 ;; Return value:  Size  Location     Type
 17329 ;;                  1  [STACK] void 
 17330 ;; Registers used:
 17331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17332 ;; Tracked objects:
 17333 ;;		On entry : 0/5
 17334 ;;		On exit  : 0/0
 17335 ;;		Unchanged: 0/0
 17336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17341 ;;Total ram usage:        0 bytes
 17342 ;; Hardware stack levels used:    1
 17343 ;; Hardware stack levels required when called:    6
 17344 ;; This function calls:
 17345 ;;		Nothing
 17346 ;; This function is called by:
 17347 ;;		_putch
 17348 ;; This function uses a reentrant model
 17349 ;;
 17350                           
 17351                           	psect	text66
 17352  01705E                     __ptext66:
 17353                           	opt callstack 0
 17354  01705E                     _ringBufS_put_dma:
 17355                           	opt callstack 13
 17356                           
 17357                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 17358                           ;stkvar	__this @ sp[(0)+-2]
 17359                           
 17360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17361                           ;incstack = 0
 17362  01705E  0EFE               	movlw	-2
 17363  017060  006F FF8C  F03C    	movff	plusw1,btemp+10
 17364  017066  0EFF               	movlw	-1
 17365  017068  006F FF8C  F03D    	movff	plusw1,btemp+11
 17366  01706E  0E42               	movlw	66
 17367  017070  243C               	addwf	(btemp+10)^0,w,c
 17368  017072  6ED9               	movwf	fsr2l,c
 17369  017074  0E00               	movlw	0
 17370  017076  203D               	addwfc	(btemp+11)^0,w,c
 17371  017078  6EDA               	movwf	fsr2h,c
 17372  01707A  0E40               	movlw	64
 17373  01707C  60DF               	cpfslt	indf2,c
 17374  01707E  D040               	goto	l1472
 17375                           
 17376                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 17377                           ;stkvar	_c @ sp[(0)+-3]
 17378                           ;stkvar	__this @ sp[(0)+-2]
 17379  017080  0EFE               	movlw	-2
 17380  017082  006F FF8C  F03C    	movff	plusw1,btemp+10
 17381  017088  0EFF               	movlw	-1
 17382  01708A  006F FF8C  F03D    	movff	plusw1,btemp+11
 17383  017090  0E40               	movlw	64
 17384  017092  243C               	addwf	(btemp+10)^0,w,c
 17385  017094  6ED9               	movwf	fsr2l,c
 17386  017096  0E00               	movlw	0
 17387  017098  203D               	addwfc	(btemp+11)^0,w,c
 17388  01709A  6EDA               	movwf	fsr2h,c
 17389  01709C  50DF               	movf	indf2,w,c
 17390  01709E  6E3D               	movwf	(btemp+11)^0,c
 17391                           
 17392                           ;stkvar	__this @ sp[(0)+-2]
 17393  0170A0  0EFE               	movlw	-2
 17394  0170A2  006F FF8C  F03A    	movff	plusw1,btemp+8
 17395  0170A8  0EFF               	movlw	-1
 17396  0170AA  006F FF8C  F03B    	movff	plusw1,btemp+9
 17397  0170B0  503D               	movf	(btemp+11)^0,w,c
 17398  0170B2  243A               	addwf	(btemp+8)^0,w,c
 17399  0170B4  6ED9               	movwf	fsr2l,c
 17400  0170B6  0E00               	movlw	0
 17401  0170B8  203B               	addwfc	(btemp+9)^0,w,c
 17402  0170BA  6EDA               	movwf	fsr2h,c
 17403  0170BC  0EFD               	movlw	-3
 17404  0170BE  006F FF8F FFDF     	movff	plusw1,indf2
 17405                           
 17406                           ;ringbufs.c: 71:   ++_this->head;
 17407                           ;stkvar	__this @ sp[(0)+-2]
 17408  0170C4  0EFE               	movlw	-2
 17409  0170C6  006F FF8C  F03C    	movff	plusw1,btemp+10
 17410  0170CC  0EFF               	movlw	-1
 17411  0170CE  006F FF8C  F03D    	movff	plusw1,btemp+11
 17412  0170D4  0E40               	movlw	64
 17413  0170D6  243C               	addwf	(btemp+10)^0,w,c
 17414  0170D8  6ED9               	movwf	fsr2l,c
 17415  0170DA  0E00               	movlw	0
 17416  0170DC  203D               	addwfc	(btemp+11)^0,w,c
 17417  0170DE  6EDA               	movwf	fsr2h,c
 17418  0170E0  2ADF               	incf	indf2,f,c
 17419                           
 17420                           ;ringbufs.c: 72:   ++_this->count;
 17421                           ;stkvar	__this @ sp[(0)+-2]
 17422  0170E2  0EFE               	movlw	-2
 17423  0170E4  006F FF8C  F03C    	movff	plusw1,btemp+10
 17424  0170EA  0EFF               	movlw	-1
 17425  0170EC  006F FF8C  F03D    	movff	plusw1,btemp+11
 17426  0170F2  0E42               	movlw	66
 17427  0170F4  243C               	addwf	(btemp+10)^0,w,c
 17428  0170F6  6ED9               	movwf	fsr2l,c
 17429  0170F8  0E00               	movlw	0
 17430  0170FA  203D               	addwfc	(btemp+11)^0,w,c
 17431  0170FC  6EDA               	movwf	fsr2h,c
 17432  0170FE  2ADF               	incf	indf2,f,c
 17433  017100                     l1472:
 17434                           
 17435                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 17436  017100  52E5               	movf	postdec1,f,c
 17437  017102  52E5               	movf	postdec1,f,c
 17438  017104  52E5               	movf	postdec1,f,c
 17439  017106  0012               	return		;funcret
 17440  017108                     __end_of_ringBufS_put_dma:
 17441                           	opt callstack 0
 17442                           
 17443 ;; *************** function _atoi *****************
 17444 ;; Defined at:
 17445 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 17446 ;; Parameters:    Size  Location     Type
 17447 ;;  s               2  [STACK] PTR const unsigned char 
 17448 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
 17449 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 17450 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
 17451 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
 17452 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
 17453 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
 17454 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
 17455 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 17456 ;; Auto vars:     Size  Location     Type
 17457 ;;  n               2  [STACK] int 
 17458 ;;  neg             2  [STACK] int 
 17459 ;; Return value:  Size  Location     Type
 17460 ;;                  2  [STACK] int 
 17461 ;; Registers used:
 17462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 17463 ;; Tracked objects:
 17464 ;;		On entry : 0/5
 17465 ;;		On exit  : 0/0
 17466 ;;		Unchanged: 0/0
 17467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17472 ;;Total ram usage:        0 bytes
 17473 ;; Hardware stack levels used:    1
 17474 ;; Hardware stack levels required when called:    7
 17475 ;; This function calls:
 17476 ;;		_isdigit
 17477 ;;		_isspace
 17478 ;; This function is called by:
 17479 ;;		_vfpfcnvrt
 17480 ;; This function uses a reentrant model
 17481 ;;
 17482                           
 17483                           	psect	text67
 17484  01501C                     __ptext67:
 17485                           	opt callstack 0
 17486  01501C                     _atoi:
 17487                           	opt callstack 0
 17488                           
 17489                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17490  01501C  0E09               	movlw	9
 17491  01501E  26E1               	addwf	fsr1l,f,c
 17492  015020  0E00               	movlw	0
 17493  015022  22E2               	addwfc	fsr1h,f,c
 17494                           
 17495                           ;stkvar	_n @ sp[(-9)+5]
 17496                           
 17497                           ;incstack = 0
 17498  015024  0EFC               	movlw	-4
 17499  015026  6AE3               	clrf	plusw1,c
 17500  015028  0EFD               	movlw	-3
 17501  01502A  6AE3               	clrf	plusw1,c
 17502                           
 17503                           ;stkvar	_neg @ sp[(-9)+7]
 17504  01502C  0EFE               	movlw	-2
 17505  01502E  6AE3               	clrf	plusw1,c
 17506  015030  0EFF               	movlw	-1
 17507  015032  6AE3               	clrf	plusw1,c
 17508  015034  D011               	goto	l7589
 17509  015036                     l7587:
 17510                           
 17511                           ;stkvar	_s @ sp[(-9)+-2]
 17512  015036  0EF5               	movlw	-11
 17513  015038  50E3               	movf	plusw1,w,c
 17514  01503A  0F01               	addlw	1
 17515  01503C  6E32               	movwf	btemp^0,c
 17516  01503E  0EF5               	movlw	-11
 17517  015040  0060  F0CB  FFE3   	movff	btemp,plusw1
 17518  015046  6A32               	clrf	btemp^0,c
 17519  015048  0EF6               	movlw	-10
 17520  01504A  50E3               	movf	plusw1,w,c
 17521  01504C  2032               	addwfc	btemp^0,w,c
 17522  01504E  6E32               	movwf	btemp^0,c
 17523  015050  0EF6               	movlw	-10
 17524  015052  0060  F0CB  FFE3   	movff	btemp,plusw1
 17525  015058                     l7589:
 17526                           
 17527                           ;stkvar	_atoi$4921 @ sp[(-9)+4]
 17528  015058  0EFB               	movlw	-5
 17529  01505A  6AE3               	clrf	plusw1,c
 17530  01505C  2AE3               	incf	plusw1,f,c
 17531                           
 17532                           ;stkvar	_s @ sp[(-9)+-2]
 17533  01505E  50E1               	movf	fsr1l,w,c
 17534  015060  0FF5               	addlw	-11
 17535  015062  6ED9               	movwf	fsr2l,c
 17536  015064  50E2               	movf	fsr1h,w,c
 17537  015066  6EDA               	movwf	fsr2h,c
 17538  015068  0EFF               	movlw	255
 17539  01506A  22DA               	addwfc	fsr2h,f,c
 17540  01506C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17541  015072  006F FF77 FFF7     	movff	postdec2,tblptrh
 17542  015078                     	if	0	;tblptru may be non-zero
 17543  015078                     	endif
 17544  015078                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17545  015078  0E00               	movlw	low (__mediumconst shr (0+16))
 17546  01507A  6EF8               	movwf	tblptru,c
 17547  01507C                     	endif
 17548  01507C  0008               	tblrd		*
 17549  01507E  50F5               	movf	tablat,w,c
 17550  015080  0A20               	xorlw	32
 17551  015082  B4D8               	btfsc	status,2,c
 17552  015084  D023               	goto	l7597
 17553  015086  0EF7               	movlw	247
 17554  015088  6E3C               	movwf	(btemp+10)^0,c
 17555  01508A  0EFF               	movlw	255
 17556  01508C  6E3D               	movwf	(btemp+11)^0,c
 17557                           
 17558                           ;stkvar	_s @ sp[(-9)+-2]
 17559  01508E  50E1               	movf	fsr1l,w,c
 17560  015090  0FF5               	addlw	-11
 17561  015092  6ED9               	movwf	fsr2l,c
 17562  015094  50E2               	movf	fsr1h,w,c
 17563  015096  6EDA               	movwf	fsr2h,c
 17564  015098  0EFF               	movlw	255
 17565  01509A  22DA               	addwfc	fsr2h,f,c
 17566  01509C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17567  0150A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 17568  0150A8                     	if	0	;tblptru may be non-zero
 17569  0150A8                     	endif
 17570  0150A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17571  0150A8  0E00               	movlw	low (__mediumconst shr (0+16))
 17572  0150AA  6EF8               	movwf	tblptru,c
 17573  0150AC                     	endif
 17574  0150AC  0008               	tblrd		*
 17575  0150AE  50F5               	movf	tablat,w,c
 17576  0150B0  6E3A               	movwf	(btemp+8)^0,c
 17577  0150B2  6A3B               	clrf	(btemp+9)^0,c
 17578  0150B4  503C               	movf	(btemp+10)^0,w,c
 17579  0150B6  263A               	addwf	(btemp+8)^0,f,c
 17580  0150B8  503D               	movf	(btemp+11)^0,w,c
 17581  0150BA  223B               	addwfc	(btemp+9)^0,f,c
 17582  0150BC  503B               	movf	(btemp+9)^0,w,c
 17583  0150BE  E104               	bnz	u7320
 17584  0150C0  0E05               	movlw	5
 17585  0150C2  5C3A               	subwf	(btemp+8)^0,w,c
 17586  0150C4  A0D8               	btfss	status,0,c
 17587  0150C6  D002               	goto	l7597
 17588  0150C8                     u7320:
 17589                           
 17590                           ;stkvar	_atoi$4921 @ sp[(-9)+4]
 17591  0150C8  0EFB               	movlw	-5
 17592  0150CA  6AE3               	clrf	plusw1,c
 17593  0150CC                     l7597:
 17594                           
 17595                           ;stkvar	_atoi$4921 @ sp[(-9)+4]
 17596  0150CC  0EFB               	movlw	-5
 17597  0150CE  50E3               	movf	plusw1,w,c
 17598  0150D0  6E3C               	movwf	(btemp+10)^0,c
 17599  0150D2  6A3D               	clrf	(btemp+11)^0,c
 17600                           
 17601                           ;stkvar	_atoi$4920 @ sp[(-9)+2]
 17602  0150D4  0EF9               	movlw	-7
 17603  0150D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17604  0150DC  0EFA               	movlw	-6
 17605  0150DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17606                           
 17607                           ;stkvar	_atoi$4920 @ sp[(-9)+2]
 17608  0150E4  0EF9               	movlw	-7
 17609  0150E6  006F FF8C  F032    	movff	plusw1,btemp
 17610  0150EC  0EFA               	movlw	-6
 17611  0150EE  50E3               	movf	plusw1,w,c
 17612  0150F0  1032               	iorwf	btemp^0,w,c
 17613  0150F2  B4D8               	btfsc	status,2,c
 17614  0150F4  D01F               	goto	l7607
 17615  0150F6  D79F               	goto	l7587
 17616  0150F8                     l7603:
 17617  0150F8  0E01               	movlw	1
 17618  0150FA  6E3C               	movwf	(btemp+10)^0,c
 17619  0150FC  0E00               	movlw	0
 17620  0150FE  6E3D               	movwf	(btemp+11)^0,c
 17621                           
 17622                           ;stkvar	_neg @ sp[(-9)+7]
 17623  015100  0EFE               	movlw	-2
 17624  015102  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17625  015108  0EFF               	movlw	-1
 17626  01510A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17627  015110                     l7605:
 17628                           
 17629                           ;stkvar	_s @ sp[(-9)+-2]
 17630  015110  0EF5               	movlw	-11
 17631  015112  50E3               	movf	plusw1,w,c
 17632  015114  0F01               	addlw	1
 17633  015116  6E32               	movwf	btemp^0,c
 17634  015118  0EF5               	movlw	-11
 17635  01511A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17636  015120  6A32               	clrf	btemp^0,c
 17637  015122  0EF6               	movlw	-10
 17638  015124  50E3               	movf	plusw1,w,c
 17639  015126  2032               	addwfc	btemp^0,w,c
 17640  015128  6E32               	movwf	btemp^0,c
 17641  01512A  0EF6               	movlw	-10
 17642  01512C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17643  015132  D053               	goto	l7613
 17644  015134                     l7607:
 17645                           
 17646                           ;stkvar	_s @ sp[(-9)+-2]
 17647  015134  50E1               	movf	fsr1l,w,c
 17648  015136  0FF5               	addlw	-11
 17649  015138  6ED9               	movwf	fsr2l,c
 17650  01513A  50E2               	movf	fsr1h,w,c
 17651  01513C  6EDA               	movwf	fsr2h,c
 17652  01513E  0EFF               	movlw	255
 17653  015140  22DA               	addwfc	fsr2h,f,c
 17654  015142  006F FF7B FFF6     	movff	postinc2,tblptrl
 17655  015148  006F FF77 FFF7     	movff	postdec2,tblptrh
 17656  01514E                     	if	0	;tblptru may be non-zero
 17657  01514E                     	endif
 17658  01514E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17659  01514E  0E00               	movlw	low (__mediumconst shr (0+16))
 17660  015150  6EF8               	movwf	tblptru,c
 17661  015152                     	endif
 17662  015152  0008               	tblrd		*
 17663  015154  50F5               	movf	tablat,w,c
 17664  015156  6E3C               	movwf	(btemp+10)^0,c
 17665  015158  6A3D               	clrf	(btemp+11)^0,c
 17666                           
 17667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17668                           ; Switch size 1, requested type "simple"
 17669                           ; Number of cases is 1, Range of values is 0 to 0
 17670                           ; switch strategies available:
 17671                           ; Name         Instructions Cycles
 17672                           ; simple_byte            4     3 (average)
 17673                           ;	Chosen strategy is simple_byte
 17674  01515A  503D               	movf	(btemp+11)^0,w,c
 17675  01515C  0A00               	xorlw	0	; case 0
 17676  01515E  A4D8               	btfss	status,2,c
 17677  015160  D03C               	goto	l7613
 17678                           
 17679                           ; Switch size 1, requested type "simple"
 17680                           ; Number of cases is 2, Range of values is 43 to 45
 17681                           ; switch strategies available:
 17682                           ; Name         Instructions Cycles
 17683                           ; simple_byte            7     4 (average)
 17684                           ;	Chosen strategy is simple_byte
 17685  015162  503C               	movf	(btemp+10)^0,w,c
 17686  015164  0A2B               	xorlw	43	; case 43
 17687  015166  B4D8               	btfsc	status,2,c
 17688  015168  D7D3               	goto	l7605
 17689  01516A  0A06               	xorlw	6	; case 45
 17690  01516C  B4D8               	btfsc	status,2,c
 17691  01516E  D7C4               	goto	l7603
 17692  015170  D034               	goto	l7613
 17693  015172                     l7609:
 17694                           
 17695                           ;stkvar	_n @ sp[(-9)+5]
 17696  015172  0EFC               	movlw	-4
 17697  015174  006F FF8C  F03C    	movff	plusw1,btemp+10
 17698  01517A  0EFD               	movlw	-3
 17699  01517C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17700  015182  0E0A               	movlw	10
 17701  015184  023C               	mulwf	(btemp+10)^0,c
 17702  015186  006F FFCC  F03A    	movff	prodl,btemp+8
 17703  01518C  006F FFD0  F03B    	movff	prodh,btemp+9
 17704  015192  023D               	mulwf	(btemp+11)^0,c
 17705  015194  50F3               	movf	prodl,w,c
 17706  015196  263B               	addwf	(btemp+9)^0,f,c
 17707                           
 17708                           ;stkvar	_s @ sp[(-9)+-2]
 17709  015198  50E1               	movf	fsr1l,w,c
 17710  01519A  0FF5               	addlw	-11
 17711  01519C  6ED9               	movwf	fsr2l,c
 17712  01519E  50E2               	movf	fsr1h,w,c
 17713  0151A0  6EDA               	movwf	fsr2h,c
 17714  0151A2  0EFF               	movlw	255
 17715  0151A4  22DA               	addwfc	fsr2h,f,c
 17716  0151A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 17717  0151AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 17718  0151B2                     	if	0	;tblptru may be non-zero
 17719  0151B2                     	endif
 17720  0151B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17721  0151B2  0E00               	movlw	low (__mediumconst shr (0+16))
 17722  0151B4  6EF8               	movwf	tblptru,c
 17723  0151B6                     	endif
 17724  0151B6  0008               	tblrd		*
 17725  0151B8  50F5               	movf	tablat,w,c
 17726  0151BA  5E3A               	subwf	(btemp+8)^0,f,c
 17727  0151BC  0E00               	movlw	0
 17728  0151BE  5A3B               	subwfb	(btemp+9)^0,f,c
 17729  0151C0  0E30               	movlw	48
 17730  0151C2  263A               	addwf	(btemp+8)^0,f,c
 17731  0151C4  0E00               	movlw	0
 17732  0151C6  223B               	addwfc	(btemp+9)^0,f,c
 17733                           
 17734                           ;stkvar	_n @ sp[(-9)+5]
 17735  0151C8  0EFC               	movlw	-4
 17736  0151CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17737  0151D0  0EFD               	movlw	-3
 17738  0151D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17739  0151D8  D79B               	goto	l7605
 17740  0151DA                     l7613:
 17741  0151DA  0ED0               	movlw	208
 17742  0151DC  6E3C               	movwf	(btemp+10)^0,c
 17743  0151DE  0EFF               	movlw	255
 17744  0151E0  6E3D               	movwf	(btemp+11)^0,c
 17745                           
 17746                           ;stkvar	_s @ sp[(-9)+-2]
 17747  0151E2  50E1               	movf	fsr1l,w,c
 17748  0151E4  0FF5               	addlw	-11
 17749  0151E6  6ED9               	movwf	fsr2l,c
 17750  0151E8  50E2               	movf	fsr1h,w,c
 17751  0151EA  6EDA               	movwf	fsr2h,c
 17752  0151EC  0EFF               	movlw	255
 17753  0151EE  22DA               	addwfc	fsr2h,f,c
 17754  0151F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 17755  0151F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 17756  0151FC                     	if	0	;tblptru may be non-zero
 17757  0151FC                     	endif
 17758  0151FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17759  0151FC  0E00               	movlw	low (__mediumconst shr (0+16))
 17760  0151FE  6EF8               	movwf	tblptru,c
 17761  015200                     	endif
 17762  015200  0008               	tblrd		*
 17763  015202  50F5               	movf	tablat,w,c
 17764  015204  6E3A               	movwf	(btemp+8)^0,c
 17765  015206  6A3B               	clrf	(btemp+9)^0,c
 17766  015208  503C               	movf	(btemp+10)^0,w,c
 17767  01520A  263A               	addwf	(btemp+8)^0,f,c
 17768  01520C  503D               	movf	(btemp+11)^0,w,c
 17769  01520E  223B               	addwfc	(btemp+9)^0,f,c
 17770  015210  503B               	movf	(btemp+9)^0,w,c
 17771  015212  E106               	bnz	u7340
 17772  015214  0E0A               	movlw	10
 17773  015216  5C3A               	subwf	(btemp+8)^0,w,c
 17774  015218  B0D8               	btfsc	status,0,c
 17775  01521A  D002               	goto	u7340
 17776  01521C  0E01               	movlw	1
 17777  01521E  D001               	goto	u7350
 17778  015220                     u7340:
 17779  015220  0E00               	movlw	0
 17780  015222                     u7350:
 17781  015222  6E3C               	movwf	(btemp+10)^0,c
 17782  015224  6A3D               	clrf	(btemp+11)^0,c
 17783                           
 17784                           ;stkvar	_atoi$4922 @ sp[(-9)+0]
 17785  015226  0EF7               	movlw	-9
 17786  015228  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17787  01522E  0EF8               	movlw	-8
 17788  015230  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17789                           
 17790                           ;stkvar	_atoi$4922 @ sp[(-9)+0]
 17791  015236  0EF7               	movlw	-9
 17792  015238  006F FF8C  F032    	movff	plusw1,btemp
 17793  01523E  0EF8               	movlw	-8
 17794  015240  50E3               	movf	plusw1,w,c
 17795  015242  1032               	iorwf	btemp^0,w,c
 17796  015244  A4D8               	btfss	status,2,c
 17797  015246  D795               	goto	l7609
 17798                           
 17799                           ;stkvar	_neg @ sp[(-9)+7]
 17800  015248  0EFE               	movlw	-2
 17801  01524A  006F FF8C  F032    	movff	plusw1,btemp
 17802  015250  0EFF               	movlw	-1
 17803  015252  50E3               	movf	plusw1,w,c
 17804  015254  1032               	iorwf	btemp^0,w,c
 17805  015256  A4D8               	btfss	status,2,c
 17806  015258  D00E               	goto	l7623
 17807                           
 17808                           ;stkvar	_n @ sp[(-9)+5]
 17809  01525A  0EFC               	movlw	-4
 17810  01525C  006F FF8C  F032    	movff	plusw1,btemp
 17811  015262  1E32               	comf	btemp^0,f,c
 17812  015264  0EFD               	movlw	-3
 17813  015266  006F FF8C  F033    	movff	plusw1,btemp+1
 17814  01526C  1E33               	comf	(btemp+1)^0,f,c
 17815  01526E  2A32               	incf	btemp^0,f,c
 17816  015270  B4D8               	btfsc	status,2,c
 17817  015272  2A33               	incf	(btemp+1)^0,f,c
 17818  015274  D008               	goto	l2766
 17819  015276                     l7623:
 17820                           
 17821                           ;stkvar	_n @ sp[(-9)+5]
 17822  015276  0EFC               	movlw	-4
 17823  015278  006F FF8C  F032    	movff	plusw1,btemp
 17824  01527E  0EFD               	movlw	-3
 17825  015280  006F FF8C  F033    	movff	plusw1,btemp+1
 17826  015286                     l2766:
 17827                           
 17828                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 17829  015286  0EF5               	movlw	245
 17830  015288  26E1               	addwf	fsr1l,f,c
 17831  01528A  0EFF               	movlw	255
 17832  01528C  22E2               	addwfc	fsr1h,f,c
 17833  01528E  0012               	return		;funcret
 17834  015290                     __end_of_atoi:
 17835                           	opt callstack 0
 17836                           
 17837 ;; *************** function _isspace *****************
 17838 ;; Defined at:
 17839 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 17840 ;; Parameters:    Size  Location     Type
 17841 ;;  c               2  [STACK] int 
 17842 ;; Auto vars:     Size  Location     Type
 17843 ;;		None
 17844 ;; Return value:  Size  Location     Type
 17845 ;;                  2  [STACK] int 
 17846 ;; Registers used:
 17847 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17848 ;; Tracked objects:
 17849 ;;		On entry : 0/0
 17850 ;;		On exit  : 0/0
 17851 ;;		Unchanged: 0/0
 17852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17857 ;;Total ram usage:        0 bytes
 17858 ;; Hardware stack levels used:    1
 17859 ;; Hardware stack levels required when called:    6
 17860 ;; This function calls:
 17861 ;;		Nothing
 17862 ;; This function is called by:
 17863 ;;		_atoi
 17864 ;; This function uses a reentrant model
 17865 ;;
 17866                           
 17867                           	psect	text68
 17868  017C2A                     __ptext68:
 17869                           	opt callstack 0
 17870  017C2A                     _isspace:
 17871                           	opt callstack 0
 17872                           
 17873                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17874  017C2A  52E6               	movf	postinc1,f,c
 17875                           
 17876                           ;stkvar	_isspace$4960 @ sp[(-1)+0]
 17877                           
 17878                           ;incstack = 0
 17879  017C2C  0EFF               	movlw	-1
 17880  017C2E  6AE3               	clrf	plusw1,c
 17881  017C30  2AE3               	incf	plusw1,f,c
 17882                           
 17883                           ;stkvar	_c @ sp[(-1)+-2]
 17884  017C32  0EFD               	movlw	-3
 17885  017C34  006F FF8C  F032    	movff	plusw1,btemp
 17886  017C3A  0E20               	movlw	32
 17887  017C3C  1832               	xorwf	btemp^0,w,c
 17888  017C3E  E104               	bnz	u6310
 17889  017C40  0EFE               	movlw	-2
 17890  017C42  50E3               	movf	plusw1,w,c
 17891  017C44  B4D8               	btfsc	status,2,c
 17892  017C46  D012               	goto	l7073
 17893  017C48                     u6310:
 17894                           
 17895                           ;stkvar	_c @ sp[(-1)+-2]
 17896  017C48  0EFD               	movlw	-3
 17897  017C4A  50E3               	movf	plusw1,w,c
 17898  017C4C  0FF7               	addlw	247
 17899  017C4E  6E3C               	movwf	(btemp+10)^0,c
 17900  017C50  0EFE               	movlw	-2
 17901  017C52  006F FF8C  F03D    	movff	plusw1,btemp+11
 17902  017C58  0EFF               	movlw	255
 17903  017C5A  223D               	addwfc	(btemp+11)^0,f,c
 17904  017C5C  503D               	movf	(btemp+11)^0,w,c
 17905  017C5E  E104               	bnz	u6320
 17906  017C60  0E05               	movlw	5
 17907  017C62  5C3C               	subwf	(btemp+10)^0,w,c
 17908  017C64  A0D8               	btfss	status,0,c
 17909  017C66  D002               	goto	l7073
 17910  017C68                     u6320:
 17911                           
 17912                           ;stkvar	_isspace$4960 @ sp[(-1)+0]
 17913  017C68  0EFF               	movlw	-1
 17914  017C6A  6AE3               	clrf	plusw1,c
 17915  017C6C                     l7073:
 17916                           
 17917                           ;stkvar	_isspace$4960 @ sp[(-1)+0]
 17918  017C6C  0EFF               	movlw	-1
 17919  017C6E  50E3               	movf	plusw1,w,c
 17920  017C70  6E32               	movwf	btemp^0,c
 17921  017C72  6A33               	clrf	(btemp+1)^0,c
 17922                           
 17923                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17924  017C74  52E5               	movf	postdec1,f,c
 17925  017C76  52E5               	movf	postdec1,f,c
 17926  017C78  52E5               	movf	postdec1,f,c
 17927  017C7A  0012               	return		;funcret
 17928  017C7C                     __end_of_isspace:
 17929                           	opt callstack 0
 17930                           
 17931 ;; *************** function _isdigit *****************
 17932 ;; Defined at:
 17933 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 17934 ;; Parameters:    Size  Location     Type
 17935 ;;  c               2  [STACK] int 
 17936 ;; Auto vars:     Size  Location     Type
 17937 ;;		None
 17938 ;; Return value:  Size  Location     Type
 17939 ;;                  2  [STACK] int 
 17940 ;; Registers used:
 17941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17942 ;; Tracked objects:
 17943 ;;		On entry : 0/0
 17944 ;;		On exit  : 0/0
 17945 ;;		Unchanged: 0/0
 17946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17951 ;;Total ram usage:        0 bytes
 17952 ;; Hardware stack levels used:    1
 17953 ;; Hardware stack levels required when called:    6
 17954 ;; This function calls:
 17955 ;;		Nothing
 17956 ;; This function is called by:
 17957 ;;		_vfpfcnvrt
 17958 ;;		_atoi
 17959 ;; This function uses a reentrant model
 17960 ;;
 17961                           
 17962                           	psect	text69
 17963  0180CE                     __ptext69:
 17964                           	opt callstack 0
 17965  0180CE                     _isdigit:
 17966                           	opt callstack 18
 17967                           
 17968                           ;stkvar	_c @ sp[(0)+-2]
 17969                           
 17970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17971                           ;incstack = 0
 17972  0180CE  0EFE               	movlw	-2
 17973  0180D0  50E3               	movf	plusw1,w,c
 17974  0180D2  0FD0               	addlw	208
 17975  0180D4  6E3C               	movwf	(btemp+10)^0,c
 17976  0180D6  0EFF               	movlw	-1
 17977  0180D8  006F FF8C  F03D    	movff	plusw1,btemp+11
 17978  0180DE  0EFF               	movlw	255
 17979  0180E0  223D               	addwfc	(btemp+11)^0,f,c
 17980  0180E2  503D               	movf	(btemp+11)^0,w,c
 17981  0180E4  E106               	bnz	u5270
 17982  0180E6  0E0A               	movlw	10
 17983  0180E8  5C3C               	subwf	(btemp+10)^0,w,c
 17984  0180EA  B0D8               	btfsc	status,0,c
 17985  0180EC  D002               	goto	u5270
 17986  0180EE  0E01               	movlw	1
 17987  0180F0  D001               	goto	u5280
 17988  0180F2                     u5270:
 17989  0180F2  0E00               	movlw	0
 17990  0180F4                     u5280:
 17991  0180F4  6E32               	movwf	btemp^0,c
 17992  0180F6  6A33               	clrf	(btemp+1)^0,c
 17993                           
 17994                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17995  0180F8  52E5               	movf	postdec1,f,c
 17996  0180FA  52E5               	movf	postdec1,f,c
 17997  0180FC  0012               	return		;funcret
 17998  0180FE                     __end_of_isdigit:
 17999                           	opt callstack 0
 18000                           
 18001 ;; *************** function _set_vterm *****************
 18002 ;; Defined at:
 18003 ;;		line 107 in file "mconfig.c"
 18004 ;; Parameters:    Size  Location     Type
 18005 ;;  vterm           1  [STACK] const unsigned char 
 18006 ;; Auto vars:     Size  Location     Type
 18007 ;;		None
 18008 ;; Return value:  Size  Location     Type
 18009 ;;                  1  [STACK] unsigned char 
 18010 ;; Registers used:
 18011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 18012 ;; Tracked objects:
 18013 ;;		On entry : 0/1
 18014 ;;		On exit  : 3F/5
 18015 ;;		Unchanged: 0/0
 18016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18021 ;;Total ram usage:        0 bytes
 18022 ;; Hardware stack levels used:    1
 18023 ;; Hardware stack levels required when called:    6
 18024 ;; This function calls:
 18025 ;;		Nothing
 18026 ;; This function is called by:
 18027 ;;		_main
 18028 ;;		_check_help
 18029 ;; This function uses a reentrant model
 18030 ;;
 18031                           
 18032                           	psect	text70
 18033  018684                     __ptext70:
 18034                           	opt callstack 0
 18035  018684                     _set_vterm:
 18036                           	opt callstack 24
 18037                           
 18038                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 18039                           ;stkvar	_vterm @ sp[(0)+-1]
 18040                           
 18041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18042                           ;incstack = 0
 18043  018684  0EFF               	movlw	-1
 18044  018686  006F FF8C  F03D    	movff	plusw1,btemp+11
 18045  01868C  0E03               	movlw	3
 18046  01868E  163D               	andwf	(btemp+11)^0,f,c
 18047  018690  0105               	movlb	5	; () banked
 18048  018692  51D8               	movf	(_D+216)& (0+255),w,b
 18049  018694  183D               	xorwf	(btemp+11)^0,w,c
 18050  018696  0BFE               	andlw	-2
 18051  018698  183D               	xorwf	(btemp+11)^0,w,c
 18052  01869A  6FD8               	movwf	(_D+216)& (0+255),b
 18053                           
 18054                           ; BSR set to: 5
 18055                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 18056  01869C  52E5               	movf	postdec1,f,c
 18057  01869E  0012               	return		;funcret
 18058  0186A0                     __end_of_set_vterm:
 18059                           	opt callstack 0
 18060                           
 18061 ;; *************** function _set_temp_display_help *****************
 18062 ;; Defined at:
 18063 ;;		line 211 in file "mconfig.c"
 18064 ;; Parameters:    Size  Location     Type
 18065 ;;  new_response    1  [STACK] const enum E16501
 18066 ;; Auto vars:     Size  Location     Type
 18067 ;;		None
 18068 ;; Return value:  Size  Location     Type
 18069 ;;                  1  [STACK] enum E16501
 18070 ;; Registers used:
 18071 ;;		wreg, fsr1l, fsr1h
 18072 ;; Tracked objects:
 18073 ;;		On entry : 0/5
 18074 ;;		On exit  : 3F/2
 18075 ;;		Unchanged: 0/0
 18076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18081 ;;Total ram usage:        0 bytes
 18082 ;; Hardware stack levels used:    1
 18083 ;; Hardware stack levels required when called:    6
 18084 ;; This function calls:
 18085 ;;		Nothing
 18086 ;; This function is called by:
 18087 ;;		_check_help
 18088 ;; This function uses a reentrant model
 18089 ;;
 18090                           
 18091                           	psect	text71
 18092  01877E                     __ptext71:
 18093                           	opt callstack 0
 18094  01877E                     _set_temp_display_help:
 18095                           	opt callstack 23
 18096                           
 18097                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 18098                           
 18099                           ; BSR set to: 5
 18100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18101                           ;incstack = 0
 18102  01877E  0102               	movlb	2	; () banked
 18103  018780  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 18104                           
 18105                           ; BSR set to: 2
 18106                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 18107                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18108  018782  0EFF               	movlw	-1
 18109  018784  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 18110                           
 18111                           ; BSR set to: 2
 18112                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 18113  01878A  52E5               	movf	postdec1,f,c
 18114  01878C  0012               	return		;funcret
 18115  01878E                     __end_of_set_temp_display_help:
 18116                           	opt callstack 0
 18117                           
 18118 ;; *************** function _set_display_info *****************
 18119 ;; Defined at:
 18120 ;;		line 200 in file "mconfig.c"
 18121 ;; Parameters:    Size  Location     Type
 18122 ;;  new_response    1  [STACK] const enum E16501
 18123 ;; Auto vars:     Size  Location     Type
 18124 ;;		None
 18125 ;; Return value:  Size  Location     Type
 18126 ;;                  1  [STACK] enum E16986
 18127 ;; Registers used:
 18128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18129 ;; Tracked objects:
 18130 ;;		On entry : 0/39
 18131 ;;		On exit  : 0/0
 18132 ;;		Unchanged: 0/0
 18133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18138 ;;Total ram usage:        0 bytes
 18139 ;; Hardware stack levels used:    1
 18140 ;; Hardware stack levels required when called:    7
 18141 ;; This function calls:
 18142 ;;		_TimerDone
 18143 ;; This function is called by:
 18144 ;;		_main
 18145 ;;		_check_help
 18146 ;; This function uses a reentrant model
 18147 ;;
 18148                           
 18149                           	psect	text72
 18150  01860E                     __ptext72:
 18151                           	opt callstack 0
 18152  01860E                     _set_display_info:
 18153                           	opt callstack 23
 18154                           
 18155                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 18156                           
 18157                           ; BSR set to: 2
 18158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18159                           ;incstack = 0
 18160  01860E  0E07               	movlw	7
 18161  018610  6EE6               	movwf	postinc1,c
 18162  018612  EC81  F0C2         	call	_TimerDone	;wreg free
 18163  018616  5032               	movf	btemp^0,w,c
 18164  018618  B4D8               	btfsc	status,2,c
 18165  01861A  D006               	goto	l1609
 18166                           
 18167                           ;mconfig.c: 205:   old_info = V.response.info;
 18168  01861C  0102               	movlb	2	; () banked
 18169  01861E  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 18170                           
 18171                           ; BSR set to: 2
 18172                           ;mconfig.c: 206:   V.response.info = new_response_info;
 18173                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18174  018620  0EFF               	movlw	-1
 18175  018622  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 18176  018628                     l1609:
 18177                           
 18178                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 18179  018628  52E5               	movf	postdec1,f,c
 18180  01862A  0012               	return		;funcret
 18181  01862C                     __end_of_set_display_info:
 18182                           	opt callstack 0
 18183                           
 18184 ;; *************** function _mode_lamp_dim *****************
 18185 ;; Defined at:
 18186 ;;		line 13 in file "mconfig.c"
 18187 ;; Parameters:    Size  Location     Type
 18188 ;;  level           2  [STACK] const unsigned short 
 18189 ;; Auto vars:     Size  Location     Type
 18190 ;;		None
 18191 ;; Return value:  Size  Location     Type
 18192 ;;                  1  [STACK] void 
 18193 ;; Registers used:
 18194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18195 ;; Tracked objects:
 18196 ;;		On entry : 0/2
 18197 ;;		On exit  : 0/0
 18198 ;;		Unchanged: 0/0
 18199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18204 ;;Total ram usage:        0 bytes
 18205 ;; Hardware stack levels used:    1
 18206 ;; Hardware stack levels required when called:    7
 18207 ;; This function calls:
 18208 ;;		_PWM8_LoadDutyValue
 18209 ;; This function is called by:
 18210 ;;		_main
 18211 ;;		_check_help
 18212 ;; This function uses a reentrant model
 18213 ;;
 18214                           
 18215                           	psect	text73
 18216  0186D6                     __ptext73:
 18217                           	opt callstack 0
 18218  0186D6                     _mode_lamp_dim:
 18219                           	opt callstack 23
 18220                           
 18221                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 18222                           ;stkvar	_level @ sp[(0)+-2]
 18223                           
 18224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18225                           ;incstack = 0
 18226  0186D6  0EFE               	movlw	-2
 18227  0186D8  006F FF8F FFE6     	movff	plusw1,postinc1
 18228  0186DE  006F FF8F FFE6     	movff	plusw1,postinc1
 18229  0186E4  EC33  F0BF         	call	_PWM8_LoadDutyValue	;wreg free
 18230                           
 18231                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 18232  0186E8  52E5               	movf	postdec1,f,c
 18233  0186EA  52E5               	movf	postdec1,f,c
 18234  0186EC  0012               	return		;funcret
 18235  0186EE                     __end_of_mode_lamp_dim:
 18236                           	opt callstack 0
 18237                           
 18238 ;; *************** function _mode_lamp_bright *****************
 18239 ;; Defined at:
 18240 ;;		line 18 in file "mconfig.c"
 18241 ;; Parameters:    Size  Location     Type
 18242 ;;		None
 18243 ;; Auto vars:     Size  Location     Type
 18244 ;;		None
 18245 ;; Return value:  Size  Location     Type
 18246 ;;                  1  [STACK] void 
 18247 ;; Registers used:
 18248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18249 ;; Tracked objects:
 18250 ;;		On entry : 0/2
 18251 ;;		On exit  : 0/0
 18252 ;;		Unchanged: 0/0
 18253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18258 ;;Total ram usage:        0 bytes
 18259 ;; Hardware stack levels used:    1
 18260 ;; Hardware stack levels required when called:    7
 18261 ;; This function calls:
 18262 ;;		_PWM8_LoadDutyValue
 18263 ;; This function is called by:
 18264 ;;		_check_help
 18265 ;; This function uses a reentrant model
 18266 ;;
 18267                           
 18268                           	psect	text74
 18269  01879C                     __ptext74:
 18270                           	opt callstack 0
 18271  01879C                     _mode_lamp_bright:
 18272                           	opt callstack 22
 18273                           
 18274                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 18275                           
 18276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18277                           ;incstack = 0
 18278  01879C  0E2C               	movlw	44
 18279  01879E  6EE6               	movwf	postinc1,c
 18280  0187A0  0E01               	movlw	1
 18281  0187A2  6EE6               	movwf	postinc1,c
 18282  0187A4  EC33  F0BF         	call	_PWM8_LoadDutyValue	;wreg free
 18283                           
 18284                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 18285  0187A8  0012               	return		;funcret
 18286  0187AA                     __end_of_mode_lamp_bright:
 18287                           	opt callstack 0
 18288                           
 18289 ;; *************** function _PWM8_LoadDutyValue *****************
 18290 ;; Defined at:
 18291 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 18292 ;; Parameters:    Size  Location     Type
 18293 ;;  dutyValue       2  [STACK] unsigned short 
 18294 ;; Auto vars:     Size  Location     Type
 18295 ;;		None
 18296 ;; Return value:  Size  Location     Type
 18297 ;;                  1  [STACK] void 
 18298 ;; Registers used:
 18299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18300 ;; Tracked objects:
 18301 ;;		On entry : 0/2
 18302 ;;		On exit  : 0/0
 18303 ;;		Unchanged: 0/0
 18304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18309 ;;Total ram usage:        0 bytes
 18310 ;; Hardware stack levels used:    1
 18311 ;; Hardware stack levels required when called:    6
 18312 ;; This function calls:
 18313 ;;		Nothing
 18314 ;; This function is called by:
 18315 ;;		_mode_lamp_dim
 18316 ;;		_mode_lamp_bright
 18317 ;; This function uses a reentrant model
 18318 ;;
 18319                           
 18320                           	psect	text75
 18321  017E66                     __ptext75:
 18322                           	opt callstack 0
 18323  017E66                     _PWM8_LoadDutyValue:
 18324                           	opt callstack 23
 18325                           
 18326                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18327                           ;stkvar	_dutyValue @ sp[(0)+-2]
 18328                           
 18329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18330                           ;incstack = 0
 18331  017E66  0EFE               	movlw	-2
 18332  017E68  006F FF8C  F03C    	movff	plusw1,btemp+10
 18333  017E6E  0EFF               	movlw	-1
 18334  017E70  006F FF8C  F03D    	movff	plusw1,btemp+11
 18335  017E76  90D8               	bcf	status,0,c
 18336  017E78  323D               	rrcf	(btemp+11)^0,f,c
 18337  017E7A  323C               	rrcf	(btemp+10)^0,f,c
 18338  017E7C  90D8               	bcf	status,0,c
 18339  017E7E  323D               	rrcf	(btemp+11)^0,f,c
 18340  017E80  323C               	rrcf	(btemp+10)^0,f,c
 18341  017E82  503C               	movf	(btemp+10)^0,w,c
 18342  017E84  6E61               	movwf	97,c	;volatile
 18343                           
 18344                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 18345                           ;stkvar	_dutyValue @ sp[(0)+-2]
 18346  017E86  0EFE               	movlw	-2
 18347  017E88  006F FF8C  F03D    	movff	plusw1,btemp+11
 18348  017E8E  0E03               	movlw	3
 18349  017E90  163D               	andwf	(btemp+11)^0,f,c
 18350  017E92  0E06               	movlw	6
 18351  017E94  6E32               	movwf	btemp^0,c
 18352  017E96                     u7805:
 18353  017E96  90D8               	bcf	status,0,c
 18354  017E98  363D               	rlcf	(btemp+11)^0,f,c
 18355  017E9A  2E32               	decfsz	btemp^0,f,c
 18356  017E9C  D7FC               	goto	u7805
 18357  017E9E  503D               	movf	(btemp+11)^0,w,c
 18358  017EA0  6E60               	movwf	96,c	;volatile
 18359                           
 18360                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 18361  017EA2  52E5               	movf	postdec1,f,c
 18362  017EA4  52E5               	movf	postdec1,f,c
 18363  017EA6  0012               	return		;funcret
 18364  017EA8                     __end_of_PWM8_LoadDutyValue:
 18365                           	opt callstack 0
 18366                           
 18367 ;; *************** function _help_button *****************
 18368 ;; Defined at:
 18369 ;;		line 26 in file "mconfig.c"
 18370 ;; Parameters:    Size  Location     Type
 18371 ;;		None
 18372 ;; Auto vars:     Size  Location     Type
 18373 ;;		None
 18374 ;; Return value:  Size  Location     Type
 18375 ;;                  1  [STACK] _Bool 
 18376 ;; Registers used:
 18377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18378 ;; Tracked objects:
 18379 ;;		On entry : 0/2
 18380 ;;		On exit  : 0/0
 18381 ;;		Unchanged: 0/0
 18382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18387 ;;Total ram usage:        0 bytes
 18388 ;; Hardware stack levels used:    1
 18389 ;; Hardware stack levels required when called:    7
 18390 ;; This function calls:
 18391 ;;		_StartTimer
 18392 ;;		_TimerDone
 18393 ;; This function is called by:
 18394 ;;		_check_help
 18395 ;; This function uses a reentrant model
 18396 ;;
 18397                           
 18398                           	psect	text76
 18399  017F62                     __ptext76:
 18400                           	opt callstack 0
 18401  017F62                     _help_button:
 18402                           	opt callstack 22
 18403                           
 18404                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 18405                           
 18406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18407                           ;incstack = 0
 18408  017F62  B0CB               	btfsc	203,0,c	;volatile
 18409  017F64  D00C               	goto	l1552
 18410                           
 18411                           ;mconfig.c: 29:   V.help = 1;
 18412  017F66  0102               	movlb	2	; () banked
 18413  017F68  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 18414                           
 18415                           ; BSR set to: 2
 18416                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 18417  017F6A  0E08               	movlw	8
 18418  017F6C  6EE6               	movwf	postinc1,c
 18419  017F6E  EC81  F0C2         	call	_TimerDone	;wreg free
 18420  017F72  5032               	movf	btemp^0,w,c
 18421  017F74  B4D8               	btfsc	status,2,c
 18422  017F76  D003               	goto	l1552
 18423                           
 18424                           ;mconfig.c: 31:    return 1;
 18425  017F78  0E01               	movlw	1
 18426  017F7A  6E32               	movwf	btemp^0,c
 18427  017F7C  0012               	return	
 18428  017F7E                     l1552:
 18429                           
 18430                           ;mconfig.c: 34:  if (!V.help)
 18431  017F7E  0102               	movlb	2	; () banked
 18432  017F80  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 18433  017F82  D008               	goto	l8513
 18434                           
 18435                           ; BSR set to: 2
 18436                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 18437  017F84  0E2C               	movlw	44
 18438  017F86  6EE6               	movwf	postinc1,c
 18439  017F88  0E01               	movlw	1
 18440  017F8A  6EE6               	movwf	postinc1,c
 18441  017F8C  0E08               	movlw	8
 18442  017F8E  6EE6               	movwf	postinc1,c
 18443  017F90  EC93  F0BF         	call	_StartTimer	;wreg free
 18444  017F94                     l8513:
 18445                           
 18446                           ;mconfig.c: 37:  return 0;
 18447  017F94  0E00               	movlw	0
 18448  017F96  6E32               	movwf	btemp^0,c
 18449                           
 18450                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 18451  017F98  0012               	return		;funcret
 18452  017F9A                     __end_of_help_button:
 18453                           	opt callstack 0
 18454                           
 18455 ;; *************** function _TimerDone *****************
 18456 ;; Defined at:
 18457 ;;		line 20 in file "timers.c"
 18458 ;; Parameters:    Size  Location     Type
 18459 ;;  timer           1  [STACK] const unsigned char 
 18460 ;; Auto vars:     Size  Location     Type
 18461 ;;		None
 18462 ;; Return value:  Size  Location     Type
 18463 ;;                  1  [STACK] _Bool 
 18464 ;; Registers used:
 18465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18466 ;; Tracked objects:
 18467 ;;		On entry : 0/39
 18468 ;;		On exit  : 0/0
 18469 ;;		Unchanged: 0/0
 18470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18475 ;;Total ram usage:        0 bytes
 18476 ;; Hardware stack levels used:    1
 18477 ;; Hardware stack levels required when called:    6
 18478 ;; This function calls:
 18479 ;;		Nothing
 18480 ;; This function is called by:
 18481 ;;		_main
 18482 ;;		_WaitMs
 18483 ;;		_help_button
 18484 ;;		_check_help
 18485 ;;		_set_display_info
 18486 ;; This function uses a reentrant model
 18487 ;;
 18488                           
 18489                           	psect	text77
 18490  018502                     __ptext77:
 18491                           	opt callstack 0
 18492  018502                     _TimerDone:
 18493                           	opt callstack 23
 18494                           
 18495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18496                           ;incstack = 0
 18497  018502  0004               	clrwdt		;# 
 18498                           
 18499                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 18500                           ;stkvar	_timer @ sp[(0)+-1]
 18501  018504  0EFF               	movlw	-1
 18502  018506  50E3               	movf	plusw1,w,c
 18503  018508  0D02               	mullw	2
 18504  01850A  50F3               	movf	243,w,c
 18505  01850C  0F89               	addlw	low _tickCount
 18506  01850E  6ED9               	movwf	fsr2l,c
 18507  018510  6ADA               	clrf	fsr2h,c
 18508  018512  50DE               	movf	postinc2,w,c
 18509  018514  10DE               	iorwf	postinc2,w,c
 18510  018516  A4D8               	btfss	status,2,c
 18511  018518  D002               	goto	l7909
 18512                           
 18513                           ;timers.c: 24:   return 1;
 18514  01851A  0E01               	movlw	1
 18515  01851C  D001               	goto	L18
 18516  01851E                     l7909:
 18517                           
 18518                           ;timers.c: 26:  return 0;
 18519  01851E  0E00               	movlw	0
 18520  018520                     L18:
 18521  018520  6E32               	movwf	btemp^0,c
 18522                           
 18523                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 18524  018522  52E5               	movf	postdec1,f,c
 18525  018524  0012               	return		;funcret
 18526  018526                     __end_of_TimerDone:
 18527                           	opt callstack 0
 18528                           
 18529 ;; *************** function _StartTimer *****************
 18530 ;; Defined at:
 18531 ;;		line 12 in file "timers.c"
 18532 ;; Parameters:    Size  Location     Type
 18533 ;;  timer           1  [STACK] const unsigned char 
 18534 ;;  count           2  [STACK] const unsigned short 
 18535 ;; Auto vars:     Size  Location     Type
 18536 ;;		None
 18537 ;; Return value:  Size  Location     Type
 18538 ;;                  1  [STACK] void 
 18539 ;; Registers used:
 18540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18541 ;; Tracked objects:
 18542 ;;		On entry : 0/5
 18543 ;;		On exit  : 0/0
 18544 ;;		Unchanged: 0/0
 18545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18550 ;;Total ram usage:        0 bytes
 18551 ;; Hardware stack levels used:    1
 18552 ;; Hardware stack levels required when called:    6
 18553 ;; This function calls:
 18554 ;;		Nothing
 18555 ;; This function is called by:
 18556 ;;		_main
 18557 ;;		_WaitMs
 18558 ;;		_help_button
 18559 ;;		_check_help
 18560 ;; This function uses a reentrant model
 18561 ;;
 18562                           
 18563                           	psect	text78
 18564  017F26                     __ptext78:
 18565                           	opt callstack 0
 18566  017F26                     _StartTimer:
 18567                           	opt callstack 21
 18568                           
 18569                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 18570                           ;stkvar	_count @ sp[(0)+-3]
 18571                           
 18572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18573                           ;incstack = 0
 18574  017F26  0EFD               	movlw	-3
 18575  017F28  006F FF8C  F03C    	movff	plusw1,btemp+10
 18576  017F2E  0EFE               	movlw	-2
 18577  017F30  006F FF8C  F03D    	movff	plusw1,btemp+11
 18578  017F36  90D8               	bcf	status,0,c
 18579  017F38  343C               	rlcf	(btemp+10)^0,w,c
 18580  017F3A  6E3A               	movwf	(btemp+8)^0,c
 18581  017F3C  343D               	rlcf	(btemp+11)^0,w,c
 18582  017F3E  6E3B               	movwf	(btemp+9)^0,c
 18583                           
 18584                           ;stkvar	_timer @ sp[(0)+-1]
 18585  017F40  0EFF               	movlw	-1
 18586  017F42  50E3               	movf	plusw1,w,c
 18587  017F44  0D02               	mullw	2
 18588  017F46  50F3               	movf	243,w,c
 18589  017F48  0F89               	addlw	low _tickCount
 18590  017F4A  6ED9               	movwf	fsr2l,c
 18591  017F4C  6ADA               	clrf	fsr2h,c
 18592  017F4E  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 18593  017F54  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 18594                           
 18595                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 18596  017F5A  52E5               	movf	postdec1,f,c
 18597  017F5C  52E5               	movf	postdec1,f,c
 18598  017F5E  52E5               	movf	postdec1,f,c
 18599  017F60  0012               	return		;funcret
 18600  017F62                     __end_of_StartTimer:
 18601                           	opt callstack 0
 18602                           
 18603 ;; *************** function _display_info *****************
 18604 ;; Defined at:
 18605 ;;		line 190 in file "mconfig.c"
 18606 ;; Parameters:    Size  Location     Type
 18607 ;;		None
 18608 ;; Auto vars:     Size  Location     Type
 18609 ;;		None
 18610 ;; Return value:  Size  Location     Type
 18611 ;;                  1  [STACK] enum E16501
 18612 ;; Registers used:
 18613 ;;		btemp
 18614 ;; Tracked objects:
 18615 ;;		On entry : 0/2
 18616 ;;		On exit  : 0/0
 18617 ;;		Unchanged: 0/0
 18618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18623 ;;Total ram usage:        0 bytes
 18624 ;; Hardware stack levels used:    1
 18625 ;; Hardware stack levels required when called:    6
 18626 ;; This function calls:
 18627 ;;		Nothing
 18628 ;; This function is called by:
 18629 ;;		_check_help
 18630 ;; This function uses a reentrant model
 18631 ;;
 18632                           
 18633                           	psect	text79
 18634  0187FE                     __ptext79:
 18635                           	opt callstack 0
 18636  0187FE                     _display_info:
 18637                           	opt callstack 23
 18638                           
 18639                           ;mconfig.c: 192:  return V.response.info;
 18640                           
 18641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18642                           ;incstack = 0
 18643  0187FE  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 18644                           
 18645                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 18646  018804  0012               	return		;funcret
 18647  018806                     __end_of_display_info:
 18648                           	opt callstack 0
 18649                           
 18650 ;; *************** function _display_help *****************
 18651 ;; Defined at:
 18652 ;;		line 195 in file "mconfig.c"
 18653 ;; Parameters:    Size  Location     Type
 18654 ;;		None
 18655 ;; Auto vars:     Size  Location     Type
 18656 ;;		None
 18657 ;; Return value:  Size  Location     Type
 18658 ;;                  1  [STACK] enum E16501
 18659 ;; Registers used:
 18660 ;;		btemp
 18661 ;; Tracked objects:
 18662 ;;		On entry : 3F/2
 18663 ;;		On exit  : 0/0
 18664 ;;		Unchanged: 0/0
 18665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18670 ;;Total ram usage:        0 bytes
 18671 ;; Hardware stack levels used:    1
 18672 ;; Hardware stack levels required when called:    6
 18673 ;; This function calls:
 18674 ;;		Nothing
 18675 ;; This function is called by:
 18676 ;;		_check_help
 18677 ;; This function uses a reentrant model
 18678 ;;
 18679                           
 18680                           	psect	text80
 18681  018806                     __ptext80:
 18682                           	opt callstack 0
 18683  018806                     _display_help:
 18684                           	opt callstack 23
 18685                           
 18686                           ;mconfig.c: 197:  return V.response.help_temp;
 18687                           
 18688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18689                           ;incstack = 0
 18690  018806  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 18691                           
 18692                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 18693  01880C  0012               	return		;funcret
 18694  01880E                     __end_of_display_help:
 18695                           	opt callstack 0
 18696                           
 18697 ;; *************** function _check_adc_scan *****************
 18698 ;; Defined at:
 18699 ;;		line 56 in file "daq.c"
 18700 ;; Parameters:    Size  Location     Type
 18701 ;;		None
 18702 ;; Auto vars:     Size  Location     Type
 18703 ;;		None
 18704 ;; Return value:  Size  Location     Type
 18705 ;;                  1  [STACK] _Bool 
 18706 ;; Registers used:
 18707 ;;		btemp
 18708 ;; Tracked objects:
 18709 ;;		On entry : 0/39
 18710 ;;		On exit  : 0/0
 18711 ;;		Unchanged: 0/0
 18712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18717 ;;Total ram usage:        0 bytes
 18718 ;; Hardware stack levels used:    1
 18719 ;; Hardware stack levels required when called:    6
 18720 ;; This function calls:
 18721 ;;		Nothing
 18722 ;; This function is called by:
 18723 ;;		_main
 18724 ;; This function uses a reentrant model
 18725 ;;
 18726                           
 18727                           	psect	text81
 18728  01880E                     __ptext81:
 18729                           	opt callstack 0
 18730  01880E                     _check_adc_scan:
 18731                           	opt callstack 24
 18732                           
 18733                           ;daq.c: 58:  return R.done;
 18734                           
 18735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18736                           ;incstack = 0
 18737  01880E  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 18738                           
 18739                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 18740  018814  0012               	return		;funcret
 18741  018816                     __end_of_check_adc_scan:
 18742                           	opt callstack 0
 18743                           
 18744 ;; *************** function _calc_model_data *****************
 18745 ;; Defined at:
 18746 ;;		line 54 in file "mbmc.c"
 18747 ;; Parameters:    Size  Location     Type
 18748 ;;		None
 18749 ;; Auto vars:     Size  Location     Type
 18750 ;;		None
 18751 ;; Return value:  Size  Location     Type
 18752 ;;                  1  [STACK] void 
 18753 ;; Registers used:
 18754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18755 ;; Tracked objects:
 18756 ;;		On entry : 0/39
 18757 ;;		On exit  : 0/0
 18758 ;;		Unchanged: 0/0
 18759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18764 ;;Total ram usage:        0 bytes
 18765 ;; Hardware stack levels used:    1
 18766 ;; Hardware stack levels required when called:    9
 18767 ;; This function calls:
 18768 ;;		___flmul
 18769 ;;		___flsub
 18770 ;;		_lp_filter
 18771 ;; This function is called by:
 18772 ;;		_main
 18773 ;; This function uses a reentrant model
 18774 ;;
 18775                           
 18776                           	psect	text82
 18777  0156F8                     __ptext82:
 18778                           	opt callstack 0
 18779  0156F8                     _calc_model_data:
 18780                           	opt callstack 21
 18781                           
 18782                           ;mbmc.c: 56:  C.c_bat = C.calc[C_BATT];
 18783                           
 18784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18785                           ;incstack = 0
 18786  0156F8  C100  F144         	movff	_C,_C+68
 18787  0156FC  C101  F145         	movff	_C+1,_C+69
 18788  015700  C102  F146         	movff	_C+2,_C+70
 18789  015704  C103  F147         	movff	_C+3,_C+71
 18790                           
 18791                           ;mbmc.c: 57:  C.c_pv = C.calc[C_PV];
 18792  015708  C104  F148         	movff	_C+4,_C+72
 18793  01570C  C105  F149         	movff	_C+5,_C+73
 18794  015710  C106  F14A         	movff	_C+6,_C+74
 18795  015714  C107  F14B         	movff	_C+7,_C+75
 18796                           
 18797                           ;mbmc.c: 58:  C.v_bat = C.calc[V_BAT];
 18798  015718  C110  F154         	movff	_C+16,_C+84
 18799  01571C  C111  F155         	movff	_C+17,_C+85
 18800  015720  C112  F156         	movff	_C+18,_C+86
 18801  015724  C113  F157         	movff	_C+19,_C+87
 18802                           
 18803                           ;mbmc.c: 59:  C.v_pv = C.calc[V_PV];
 18804  015728  C114  F150         	movff	_C+20,_C+80
 18805  01572C  C115  F151         	movff	_C+21,_C+81
 18806  015730  C116  F152         	movff	_C+22,_C+82
 18807  015734  C117  F153         	movff	_C+23,_C+83
 18808                           
 18809                           ;mbmc.c: 60:  C.v_inverter = C.calc[V_INVERTER];
 18810  015738  C130  F164         	movff	_C+48,_C+100
 18811  01573C  C131  F165         	movff	_C+49,_C+101
 18812  015740  C132  F166         	movff	_C+50,_C+102
 18813  015744  C133  F167         	movff	_C+51,_C+103
 18814                           
 18815                           ;mbmc.c: 61:  C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 18816  015748  0E01               	movlw	1
 18817  01574A  6EE6               	movwf	postinc1,c
 18818  01574C  0E10               	movlw	16
 18819  01574E  6EE6               	movwf	postinc1,c
 18820  015750  0060  F403  FFE6   	movff	_C,postinc1
 18821  015756  0060  F407  FFE6   	movff	_C+1,postinc1
 18822  01575C  0060  F40B  FFE6   	movff	_C+2,postinc1
 18823  015762  0060  F40F  FFE6   	movff	_C+3,postinc1
 18824  015768  0060  F413  FFE6   	movff	_C+4,postinc1
 18825  01576E  0060  F417  FFE6   	movff	_C+5,postinc1
 18826  015774  0060  F41B  FFE6   	movff	_C+6,postinc1
 18827  01577A  0060  F41F  FFE6   	movff	_C+7,postinc1
 18828  015780  EC85  F0BE         	call	___flsub	;wreg free
 18829  015784  0060  F0CB  FFE6   	movff	btemp,postinc1
 18830  01578A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 18831  015790  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 18832  015796  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 18833  01579C  EC6B  F0AE         	call	_lp_filter	;wreg free
 18834  0157A0  0060  F0C8  F140   	movff	btemp,_C+64
 18835  0157A6  0060  F0CC  F141   	movff	btemp+1,_C+65
 18836  0157AC  0060  F0D0  F142   	movff	btemp+2,_C+66
 18837  0157B2  0060  F0D4  F143   	movff	btemp+3,_C+67
 18838                           
 18839                           ;mbmc.c: 62:  C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 18840  0157B8  0E01               	movlw	1
 18841  0157BA  6EE6               	movwf	postinc1,c
 18842  0157BC  0E11               	movlw	17
 18843  0157BE  6EE6               	movwf	postinc1,c
 18844  0157C0  0060  F553  FFE6   	movff	_C+84,postinc1
 18845  0157C6  0060  F557  FFE6   	movff	_C+85,postinc1
 18846  0157CC  0060  F55B  FFE6   	movff	_C+86,postinc1
 18847  0157D2  0060  F55F  FFE6   	movff	_C+87,postinc1
 18848  0157D8  0060  F503  FFE6   	movff	_C+64,postinc1
 18849  0157DE  0060  F507  FFE6   	movff	_C+65,postinc1
 18850  0157E4  0060  F50B  FFE6   	movff	_C+66,postinc1
 18851  0157EA  0060  F50F  FFE6   	movff	_C+67,postinc1
 18852  0157F0  ECC1  F08E         	call	___flmul	;wreg free
 18853  0157F4  0060  F0CB  FFE6   	movff	btemp,postinc1
 18854  0157FA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 18855  015800  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 18856  015806  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 18857  01580C  EC6B  F0AE         	call	_lp_filter	;wreg free
 18858  015810  0060  F0C8  F168   	movff	btemp,_C+104
 18859  015816  0060  F0CC  F169   	movff	btemp+1,_C+105
 18860  01581C  0060  F0D0  F16A   	movff	btemp+2,_C+106
 18861  015822  0060  F0D4  F16B   	movff	btemp+3,_C+107
 18862                           
 18863                           ;mbmc.c: 63:  C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 18864  015828  0E01               	movlw	1
 18865  01582A  6EE6               	movwf	postinc1,c
 18866  01582C  0E12               	movlw	18
 18867  01582E  6EE6               	movwf	postinc1,c
 18868  015830  0060  F543  FFE6   	movff	_C+80,postinc1
 18869  015836  0060  F547  FFE6   	movff	_C+81,postinc1
 18870  01583C  0060  F54B  FFE6   	movff	_C+82,postinc1
 18871  015842  0060  F54F  FFE6   	movff	_C+83,postinc1
 18872  015848  0060  F523  FFE6   	movff	_C+72,postinc1
 18873  01584E  0060  F527  FFE6   	movff	_C+73,postinc1
 18874  015854  0060  F52B  FFE6   	movff	_C+74,postinc1
 18875  01585A  0060  F52F  FFE6   	movff	_C+75,postinc1
 18876  015860  ECC1  F08E         	call	___flmul	;wreg free
 18877  015864  0060  F0CB  FFE6   	movff	btemp,postinc1
 18878  01586A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 18879  015870  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 18880  015876  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 18881  01587C  EC6B  F0AE         	call	_lp_filter	;wreg free
 18882  015880  0060  F0C8  F170   	movff	btemp,_C+112
 18883  015886  0060  F0CC  F171   	movff	btemp+1,_C+113
 18884  01588C  0060  F0D0  F172   	movff	btemp+2,_C+114
 18885  015892  0060  F0D4  F173   	movff	btemp+3,_C+115
 18886                           
 18887                           ;mbmc.c: 64:  C.p_inverter = lp_filter(C.c_load * C.v_inverter, 19, 1);
 18888  015898  0E01               	movlw	1
 18889  01589A  6EE6               	movwf	postinc1,c
 18890  01589C  0E13               	movlw	19
 18891  01589E  6EE6               	movwf	postinc1,c
 18892  0158A0  0060  F593  FFE6   	movff	_C+100,postinc1
 18893  0158A6  0060  F597  FFE6   	movff	_C+101,postinc1
 18894  0158AC  0060  F59B  FFE6   	movff	_C+102,postinc1
 18895  0158B2  0060  F59F  FFE6   	movff	_C+103,postinc1
 18896  0158B8  0060  F503  FFE6   	movff	_C+64,postinc1
 18897  0158BE  0060  F507  FFE6   	movff	_C+65,postinc1
 18898  0158C4  0060  F50B  FFE6   	movff	_C+66,postinc1
 18899  0158CA  0060  F50F  FFE6   	movff	_C+67,postinc1
 18900  0158D0  ECC1  F08E         	call	___flmul	;wreg free
 18901  0158D4  0060  F0CB  FFE6   	movff	btemp,postinc1
 18902  0158DA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 18903  0158E0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 18904  0158E6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 18905  0158EC  EC6B  F0AE         	call	_lp_filter	;wreg free
 18906  0158F0  0060  F0C8  F16C   	movff	btemp,_C+108
 18907  0158F6  0060  F0CC  F16D   	movff	btemp+1,_C+109
 18908  0158FC  0060  F0D0  F16E   	movff	btemp+2,_C+110
 18909  015902  0060  F0D4  F16F   	movff	btemp+3,_C+111
 18910                           
 18911                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 18912  015908  0012               	return		;funcret
 18913  01590A                     __end_of_calc_model_data:
 18914                           	opt callstack 0
 18915                           
 18916 ;; *************** function _lp_filter *****************
 18917 ;; Defined at:
 18918 ;;		line 16 in file "mbmc.c"
 18919 ;; Parameters:    Size  Location     Type
 18920 ;;  new             4  [STACK] const float 
 18921 ;;  bn              1  [STACK] const unsigned char 
 18922 ;;  slow            1  [STACK] const char 
 18923 ;; Auto vars:     Size  Location     Type
 18924 ;;  lp_speed        4  [STACK] float 
 18925 ;; Return value:  Size  Location     Type
 18926 ;;                  4  [STACK] float 
 18927 ;; Registers used:
 18928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18929 ;; Tracked objects:
 18930 ;;		On entry : 0/39
 18931 ;;		On exit  : 0/0
 18932 ;;		Unchanged: 0/0
 18933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18938 ;;Total ram usage:        0 bytes
 18939 ;; Hardware stack levels used:    1
 18940 ;; Hardware stack levels required when called:    8
 18941 ;; This function calls:
 18942 ;;		___fladd
 18943 ;;		___flmul
 18944 ;;		___flsub
 18945 ;; This function is called by:
 18946 ;;		_convert_adc_data
 18947 ;;		_calc_model_data
 18948 ;; This function uses a reentrant model
 18949 ;;
 18950                           
 18951                           	psect	text83
 18952  015CD6                     __ptext83:
 18953                           	opt callstack 0
 18954  015CD6                     _lp_filter:
 18955                           	opt callstack 0
 18956                           
 18957                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18958  015CD6  52E6               	movf	postinc1,f,c
 18959  015CD8  52E6               	movf	postinc1,f,c
 18960  015CDA  52E6               	movf	postinc1,f,c
 18961  015CDC  52E6               	movf	postinc1,f,c
 18962                           
 18963                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16 +4];;mbmc.c: 19:  float lp_speed;;mbmc.c: 2
      +                          1:  if (bn >= 16 +4)
 18964                           ;stkvar	_bn @ sp[(-4)+-5]
 18965                           
 18966                           ;incstack = 0
 18967  015CDE  0EF7               	movlw	-9
 18968  015CE0  006F FF8C  F032    	movff	plusw1,btemp
 18969  015CE6  0E13               	movlw	19
 18970  015CE8  6432               	cpfsgt	btemp^0,c
 18971  015CEA  D011               	goto	l8619
 18972  015CEC                     u8170:
 18973                           
 18974                           ;mbmc.c: 22:   return new;
 18975                           ;stkvar	_new @ sp[(-4)+-4]
 18976  015CEC  0EF8               	movlw	-8
 18977  015CEE  006F FF8C  F032    	movff	plusw1,btemp
 18978  015CF4  0EF9               	movlw	-7
 18979  015CF6  006F FF8C  F033    	movff	plusw1,btemp+1
 18980  015CFC  0EFA               	movlw	-6
 18981  015CFE  006F FF8C  F034    	movff	plusw1,btemp+2
 18982  015D04  0EFB               	movlw	-5
 18983  015D06  006F FF8C  F035    	movff	plusw1,btemp+3
 18984  015D0C  D0BF               	goto	l1694
 18985  015D0E                     l8619:
 18986                           
 18987                           ;mbmc.c: 24:  if (slow == (-1)) {
 18988                           ;stkvar	_slow @ sp[(-4)+-6]
 18989  015D0E  0EF6               	movlw	-10
 18990  015D10  28E3               	incf	plusw1,w,c
 18991  015D12  A4D8               	btfss	status,2,c
 18992  015D14  D012               	goto	l8627
 18993                           
 18994                           ;mbmc.c: 25:   smooth[bn] = 0.0;
 18995                           ;stkvar	_bn @ sp[(-4)+-5]
 18996  015D16  0EF7               	movlw	-9
 18997  015D18  50E3               	movf	plusw1,w,c
 18998  015D1A  0D04               	mullw	4
 18999  015D1C  0E00               	movlw	low lp_filter@smooth
 19000  015D1E  24F3               	addwf	243,w,c
 19001  015D20  6ED9               	movwf	fsr2l,c
 19002  015D22  0E03               	movlw	high lp_filter@smooth
 19003  015D24  20F4               	addwfc	prodh,w,c
 19004  015D26  6EDA               	movwf	fsr2h,c
 19005  015D28  0E00               	movlw	0
 19006  015D2A  6EDE               	movwf	postinc2,c
 19007  015D2C  0E00               	movlw	0
 19008  015D2E  6EDE               	movwf	postinc2,c
 19009  015D30  0E00               	movlw	0
 19010  015D32  6EDE               	movwf	postinc2,c
 19011  015D34  0E00               	movlw	0
 19012  015D36  6EDD               	movwf	postdec2,c
 19013  015D38  D7D9               	goto	u8170
 19014  015D3A                     l8627:
 19015                           
 19016                           ;mbmc.c: 29:  if (slow) {
 19017                           ;stkvar	_slow @ sp[(-4)+-6]
 19018  015D3A  0EF6               	movlw	-10
 19019  015D3C  50E3               	movf	plusw1,w,c
 19020  015D3E  B4D8               	btfsc	status,2,c
 19021  015D40  D008               	goto	l8631
 19022                           
 19023                           ;mbmc.c: 30:   lp_speed = 0.033;
 19024  015D42  0E02               	movlw	2
 19025  015D44  6E3A               	movwf	(btemp+8)^0,c
 19026  015D46  0E2B               	movlw	43
 19027  015D48  6E3B               	movwf	(btemp+9)^0,c
 19028  015D4A  0E07               	movlw	7
 19029  015D4C  6E3C               	movwf	(btemp+10)^0,c
 19030  015D4E  0E3D               	movlw	61
 19031  015D50  D007               	goto	L19
 19032  015D52                     l8631:
 19033                           
 19034                           ;mbmc.c: 32:   lp_speed = 0.125;
 19035  015D52  0E00               	movlw	0
 19036  015D54  6E3A               	movwf	(btemp+8)^0,c
 19037  015D56  0E00               	movlw	0
 19038  015D58  6E3B               	movwf	(btemp+9)^0,c
 19039  015D5A  0E00               	movlw	0
 19040  015D5C  6E3C               	movwf	(btemp+10)^0,c
 19041  015D5E  0E3E               	movlw	62
 19042  015D60                     L19:
 19043  015D60  6E3D               	movwf	(btemp+11)^0,c
 19044                           
 19045                           ;stkvar	_lp_speed @ sp[(-4)+0]
 19046  015D62  0EFC               	movlw	-4
 19047  015D64  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19048  015D6A  0EFD               	movlw	-3
 19049  015D6C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19050  015D72  0EFE               	movlw	-2
 19051  015D74  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19052  015D7A  0EFF               	movlw	-1
 19053  015D7C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19054                           
 19055                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 19056                           ;stkvar	_bn @ sp[(-4)+-5]
 19057  015D82  0EF7               	movlw	-9
 19058  015D84  50E3               	movf	plusw1,w,c
 19059  015D86  0D04               	mullw	4
 19060  015D88  0E00               	movlw	low lp_filter@smooth
 19061  015D8A  24F3               	addwf	243,w,c
 19062  015D8C  6ED9               	movwf	fsr2l,c
 19063  015D8E  0E03               	movlw	high lp_filter@smooth
 19064  015D90  20F4               	addwfc	prodh,w,c
 19065  015D92  6EDA               	movwf	fsr2h,c
 19066  015D94  006F FF7B FFE6     	movff	postinc2,postinc1
 19067  015D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 19068  015DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 19069  015DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 19070                           
 19071                           ;stkvar	_lp_speed @ sp[(-8)+0]
 19072  015DAC  0EF8               	movlw	-8
 19073  015DAE  006F FF8F FFE6     	movff	plusw1,postinc1
 19074  015DB4  006F FF8F FFE6     	movff	plusw1,postinc1
 19075  015DBA  006F FF8F FFE6     	movff	plusw1,postinc1
 19076  015DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 19077                           
 19078                           ;stkvar	_bn @ sp[(-12)+-5]
 19079  015DC6  0EEF               	movlw	-17
 19080  015DC8  50E3               	movf	plusw1,w,c
 19081  015DCA  0D04               	mullw	4
 19082  015DCC  0E00               	movlw	low lp_filter@smooth
 19083  015DCE  24F3               	addwf	243,w,c
 19084  015DD0  6ED9               	movwf	fsr2l,c
 19085  015DD2  0E03               	movlw	high lp_filter@smooth
 19086  015DD4  20F4               	addwfc	prodh,w,c
 19087  015DD6  6EDA               	movwf	fsr2h,c
 19088  015DD8  006F FF7B FFE6     	movff	postinc2,postinc1
 19089  015DDE  006F FF7B FFE6     	movff	postinc2,postinc1
 19090  015DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 19091  015DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 19092                           
 19093                           ;stkvar	_new @ sp[(-16)+-4]
 19094  015DF0  0EEC               	movlw	-20
 19095  015DF2  006F FF8F FFE6     	movff	plusw1,postinc1
 19096  015DF8  006F FF8F FFE6     	movff	plusw1,postinc1
 19097  015DFE  006F FF8F FFE6     	movff	plusw1,postinc1
 19098  015E04  006F FF8F FFE6     	movff	plusw1,postinc1
 19099  015E0A  EC85  F0BE         	call	___flsub	;wreg free
 19100  015E0E  0060  F0CB  FFE6   	movff	btemp,postinc1
 19101  015E14  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19102  015E1A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19103  015E20  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19104  015E26  ECC1  F08E         	call	___flmul	;wreg free
 19105  015E2A  0060  F0CB  FFE6   	movff	btemp,postinc1
 19106  015E30  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19107  015E36  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19108  015E3C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19109  015E42  ECD6  F092         	call	___fladd	;wreg free
 19110                           
 19111                           ;stkvar	_bn @ sp[(-4)+-5]
 19112  015E46  0EF7               	movlw	-9
 19113  015E48  50E3               	movf	plusw1,w,c
 19114  015E4A  0D04               	mullw	4
 19115  015E4C  0E00               	movlw	low lp_filter@smooth
 19116  015E4E  24F3               	addwf	243,w,c
 19117  015E50  6ED9               	movwf	fsr2l,c
 19118  015E52  0E03               	movlw	high lp_filter@smooth
 19119  015E54  20F4               	addwfc	prodh,w,c
 19120  015E56  6EDA               	movwf	fsr2h,c
 19121  015E58  0060  F0CB  FFDE   	movff	btemp,postinc2
 19122  015E5E  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 19123  015E64  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 19124  015E6A  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 19125  015E70  52DD               	movf	postdec2,f,c
 19126  015E72  52DD               	movf	postdec2,f,c
 19127  015E74  006F FF78  F032    	movff	postinc2,btemp
 19128  015E7A  006F FF78  F033    	movff	postinc2,btemp+1
 19129  015E80  006F FF78  F034    	movff	postinc2,btemp+2
 19130  015E86  006F FF78  F035    	movff	postinc2,btemp+3
 19131  015E8C                     l1694:
 19132                           
 19133                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 19134  015E8C  0EF6               	movlw	246
 19135  015E8E  26E1               	addwf	fsr1l,f,c
 19136  015E90  0EFF               	movlw	255
 19137  015E92  22E2               	addwfc	fsr1h,f,c
 19138  015E94  0012               	return		;funcret
 19139  015E96                     __end_of_lp_filter:
 19140                           	opt callstack 0
 19141                           
 19142 ;; *************** function ___flsub *****************
 19143 ;; Defined at:
 19144 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19145 ;; Parameters:    Size  Location     Type
 19146 ;;  b               4  [STACK] float 
 19147 ;;  a               4  [STACK] float 
 19148 ;; Auto vars:     Size  Location     Type
 19149 ;;		None
 19150 ;; Return value:  Size  Location     Type
 19151 ;;                  4  [STACK] float 
 19152 ;; Registers used:
 19153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19154 ;; Tracked objects:
 19155 ;;		On entry : 0/39
 19156 ;;		On exit  : 0/0
 19157 ;;		Unchanged: 0/0
 19158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19163 ;;Total ram usage:        0 bytes
 19164 ;; Hardware stack levels used:    1
 19165 ;; Hardware stack levels required when called:    7
 19166 ;; This function calls:
 19167 ;;		___fladd
 19168 ;; This function is called by:
 19169 ;;		_conv_raw_result
 19170 ;;		_lp_filter
 19171 ;;		_calc_model_data
 19172 ;;		_efgtoa
 19173 ;; This function uses a reentrant model
 19174 ;;
 19175                           
 19176                           	psect	text84
 19177  017D0A                     __ptext84:
 19178                           	opt callstack 0
 19179  017D0A                     ___flsub:
 19180                           	opt callstack 16
 19181                           
 19182                           ;stkvar	_a @ sp[(0)+-8]
 19183                           
 19184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19185                           ;incstack = 0
 19186  017D0A  0EFB               	movlw	-5
 19187  017D0C  7EE3               	btg	plusw1,7,c
 19188                           
 19189                           ;stkvar	_a @ sp[(0)+-8]
 19190  017D0E  0EF8               	movlw	-8
 19191  017D10  006F FF8F FFE6     	movff	plusw1,postinc1
 19192  017D16  006F FF8F FFE6     	movff	plusw1,postinc1
 19193  017D1C  006F FF8F FFE6     	movff	plusw1,postinc1
 19194  017D22  006F FF8F FFE6     	movff	plusw1,postinc1
 19195                           
 19196                           ;stkvar	_b @ sp[(-4)+-4]
 19197  017D28  0EF8               	movlw	-8
 19198  017D2A  006F FF8F FFE6     	movff	plusw1,postinc1
 19199  017D30  006F FF8F FFE6     	movff	plusw1,postinc1
 19200  017D36  006F FF8F FFE6     	movff	plusw1,postinc1
 19201  017D3C  006F FF8F FFE6     	movff	plusw1,postinc1
 19202  017D42  ECD6  F092         	call	___fladd	;wreg free
 19203                           
 19204                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19205  017D46  0EF8               	movlw	248
 19206  017D48  26E1               	addwf	fsr1l,f,c
 19207  017D4A  0EFF               	movlw	255
 19208  017D4C  22E2               	addwfc	fsr1h,f,c
 19209  017D4E  0012               	return		;funcret
 19210  017D50                     __end_of___flsub:
 19211                           	opt callstack 0
 19212                           
 19213 ;; *************** function ___fladd *****************
 19214 ;; Defined at:
 19215 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19216 ;; Parameters:    Size  Location     Type
 19217 ;;  b               4  [STACK] float 
 19218 ;;  a               4  [STACK] float 
 19219 ;; Auto vars:     Size  Location     Type
 19220 ;;  grs             1  [STACK] unsigned char 
 19221 ;;  bexp            1  [STACK] unsigned char 
 19222 ;;  aexp            1  [STACK] unsigned char 
 19223 ;;  signs           1  [STACK] unsigned char 
 19224 ;; Return value:  Size  Location     Type
 19225 ;;                  4  [STACK] unsigned char 
 19226 ;; Registers used:
 19227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19228 ;; Tracked objects:
 19229 ;;		On entry : 0/5
 19230 ;;		On exit  : 0/0
 19231 ;;		Unchanged: 0/0
 19232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19237 ;;Total ram usage:        0 bytes
 19238 ;; Hardware stack levels used:    1
 19239 ;; Hardware stack levels required when called:    6
 19240 ;; This function calls:
 19241 ;;		Nothing
 19242 ;; This function is called by:
 19243 ;;		_lp_filter
 19244 ;;		_efgtoa
 19245 ;;		___flsub
 19246 ;; This function uses a reentrant model
 19247 ;;
 19248                           
 19249                           	psect	text85
 19250  0125AC                     __ptext85:
 19251                           	opt callstack 0
 19252  0125AC                     ___fladd:
 19253                           	opt callstack 0
 19254                           
 19255                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19256  0125AC  52E6               	movf	postinc1,f,c
 19257  0125AE  52E6               	movf	postinc1,f,c
 19258  0125B0  52E6               	movf	postinc1,f,c
 19259  0125B2  52E6               	movf	postinc1,f,c
 19260                           
 19261                           ;stkvar	_b @ sp[(-4)+-4]
 19262                           
 19263                           ;incstack = 0
 19264  0125B4  0EFB               	movlw	251
 19265  0125B6  24E1               	addwf	fsr1l,w,c
 19266  0125B8  6ED9               	movwf	fsr2l,c
 19267  0125BA  0EFF               	movlw	255
 19268  0125BC  20E2               	addwfc	fsr1h,w,c
 19269  0125BE  6EDA               	movwf	fsr2h,c
 19270  0125C0  50DF               	movf	indf2,w,c
 19271  0125C2  6E3D               	movwf	(btemp+11)^0,c
 19272  0125C4  0E80               	movlw	128
 19273  0125C6  163D               	andwf	(btemp+11)^0,f,c
 19274                           
 19275                           ;stkvar	_signs @ sp[(-4)+3]
 19276  0125C8  0EFF               	movlw	-1
 19277  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19278                           
 19279                           ;stkvar	_b @ sp[(-4)+-4]
 19280  0125D0  0EFB               	movlw	251
 19281  0125D2  24E1               	addwf	fsr1l,w,c
 19282  0125D4  6ED9               	movwf	fsr2l,c
 19283  0125D6  0EFF               	movlw	255
 19284  0125D8  20E2               	addwfc	fsr1h,w,c
 19285  0125DA  6EDA               	movwf	fsr2h,c
 19286  0125DC  50DF               	movf	indf2,w,c
 19287  0125DE  6E3D               	movwf	(btemp+11)^0,c
 19288  0125E0  90D8               	bcf	status,0,c
 19289  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 19290  0125E4  6E3C               	movwf	(btemp+10)^0,c
 19291                           
 19292                           ;stkvar	_bexp @ sp[(-4)+1]
 19293  0125E6  0EFD               	movlw	-3
 19294  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19295                           
 19296                           ;stkvar	_b @ sp[(-4)+-4]
 19297  0125EE  0EFA               	movlw	250
 19298  0125F0  24E1               	addwf	fsr1l,w,c
 19299  0125F2  6ED9               	movwf	fsr2l,c
 19300  0125F4  0EFF               	movlw	255
 19301  0125F6  20E2               	addwfc	fsr1h,w,c
 19302  0125F8  6EDA               	movwf	fsr2h,c
 19303  0125FA  AEDF               	btfss	indf2,7,c
 19304  0125FC  D002               	goto	l6143
 19305                           
 19306                           ;stkvar	_bexp @ sp[(-4)+1]
 19307  0125FE  0EFD               	movlw	-3
 19308  012600  80E3               	bsf	plusw1,0,c
 19309  012602                     l6143:
 19310                           
 19311                           ;stkvar	_bexp @ sp[(-4)+1]
 19312  012602  0EFD               	movlw	-3
 19313  012604  50E3               	movf	plusw1,w,c
 19314  012606  B4D8               	btfsc	status,2,c
 19315  012608  D027               	goto	l6153
 19316                           
 19317                           ;stkvar	_bexp @ sp[(-4)+1]
 19318  01260A  0EFD               	movlw	-3
 19319  01260C  28E3               	incf	plusw1,w,c
 19320  01260E  A4D8               	btfss	status,2,c
 19321  012610  D018               	goto	l6149
 19322  012612  0E00               	movlw	0
 19323  012614  6E3A               	movwf	(btemp+8)^0,c
 19324  012616  0E00               	movlw	0
 19325  012618  6E3B               	movwf	(btemp+9)^0,c
 19326  01261A  0E00               	movlw	0
 19327  01261C  6E3C               	movwf	(btemp+10)^0,c
 19328  01261E  0E00               	movlw	0
 19329  012620  6E3D               	movwf	(btemp+11)^0,c
 19330                           
 19331                           ;stkvar	_b @ sp[(-4)+-4]
 19332  012622  0EF8               	movlw	-8
 19333  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19334  01262A  0EF9               	movlw	-7
 19335  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19336  012632  0EFA               	movlw	-6
 19337  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19338  01263A  0EFB               	movlw	-5
 19339  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19340  012642                     l6149:
 19341                           
 19342                           ;stkvar	_b @ sp[(-4)+-4]
 19343  012642  0EFA               	movlw	-6
 19344  012644  8EE3               	bsf	plusw1,7,c
 19345                           
 19346                           ;stkvar	_b @ sp[(-4)+-4]
 19347  012646  0EFB               	movlw	251
 19348  012648  24E1               	addwf	fsr1l,w,c
 19349  01264A  6ED9               	movwf	fsr2l,c
 19350  01264C  0EFF               	movlw	255
 19351  01264E  20E2               	addwfc	fsr1h,w,c
 19352  012650  6EDA               	movwf	fsr2h,c
 19353  012652  0E00               	movlw	0
 19354  012654  6EDF               	movwf	indf2,c
 19355  012656  D018               	goto	l6155
 19356  012658                     l6153:
 19357  012658  0E00               	movlw	0
 19358  01265A  6E3A               	movwf	(btemp+8)^0,c
 19359  01265C  0E00               	movlw	0
 19360  01265E  6E3B               	movwf	(btemp+9)^0,c
 19361  012660  0E00               	movlw	0
 19362  012662  6E3C               	movwf	(btemp+10)^0,c
 19363  012664  0E00               	movlw	0
 19364  012666  6E3D               	movwf	(btemp+11)^0,c
 19365                           
 19366                           ;stkvar	_b @ sp[(-4)+-4]
 19367  012668  0EF8               	movlw	-8
 19368  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19369  012670  0EF9               	movlw	-7
 19370  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19371  012678  0EFA               	movlw	-6
 19372  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19373  012680  0EFB               	movlw	-5
 19374  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19375  012688                     l6155:
 19376                           
 19377                           ;stkvar	_a @ sp[(-4)+-8]
 19378  012688  0EF7               	movlw	247
 19379  01268A  24E1               	addwf	fsr1l,w,c
 19380  01268C  6ED9               	movwf	fsr2l,c
 19381  01268E  0EFF               	movlw	255
 19382  012690  20E2               	addwfc	fsr1h,w,c
 19383  012692  6EDA               	movwf	fsr2h,c
 19384  012694  50DF               	movf	indf2,w,c
 19385  012696  6E3D               	movwf	(btemp+11)^0,c
 19386  012698  0E80               	movlw	128
 19387  01269A  163D               	andwf	(btemp+11)^0,f,c
 19388                           
 19389                           ;stkvar	_aexp @ sp[(-4)+2]
 19390  01269C  0EFE               	movlw	-2
 19391  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19392                           
 19393                           ;stkvar	_signs @ sp[(-4)+3]
 19394                           ;stkvar	_aexp @ sp[(-4)+2]
 19395  0126A4  50E1               	movf	fsr1l,w,c
 19396  0126A6  0FFE               	addlw	-2
 19397  0126A8  6ED9               	movwf	fsr2l,c
 19398  0126AA  50E2               	movf	fsr1h,w,c
 19399  0126AC  6EDA               	movwf	fsr2h,c
 19400  0126AE  0EFF               	movlw	255
 19401  0126B0  22DA               	addwfc	fsr2h,f,c
 19402  0126B2  0EFF               	movlw	-1
 19403  0126B4  50E3               	movf	plusw1,w,c
 19404  0126B6  18DE               	xorwf	postinc2,w,c
 19405  0126B8  B4D8               	btfsc	status,2,c
 19406  0126BA  D002               	goto	l6161
 19407                           
 19408                           ;stkvar	_signs @ sp[(-4)+3]
 19409  0126BC  0EFF               	movlw	-1
 19410  0126BE  8CE3               	bsf	plusw1,6,c
 19411  0126C0                     l6161:
 19412                           
 19413                           ;stkvar	_a @ sp[(-4)+-8]
 19414  0126C0  0EF7               	movlw	247
 19415  0126C2  24E1               	addwf	fsr1l,w,c
 19416  0126C4  6ED9               	movwf	fsr2l,c
 19417  0126C6  0EFF               	movlw	255
 19418  0126C8  20E2               	addwfc	fsr1h,w,c
 19419  0126CA  6EDA               	movwf	fsr2h,c
 19420  0126CC  50DF               	movf	indf2,w,c
 19421  0126CE  6E3D               	movwf	(btemp+11)^0,c
 19422  0126D0  90D8               	bcf	status,0,c
 19423  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 19424  0126D4  6E3C               	movwf	(btemp+10)^0,c
 19425                           
 19426                           ;stkvar	_aexp @ sp[(-4)+2]
 19427  0126D6  0EFE               	movlw	-2
 19428  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19429                           
 19430                           ;stkvar	_a @ sp[(-4)+-8]
 19431  0126DE  0EF6               	movlw	246
 19432  0126E0  24E1               	addwf	fsr1l,w,c
 19433  0126E2  6ED9               	movwf	fsr2l,c
 19434  0126E4  0EFF               	movlw	255
 19435  0126E6  20E2               	addwfc	fsr1h,w,c
 19436  0126E8  6EDA               	movwf	fsr2h,c
 19437  0126EA  AEDF               	btfss	indf2,7,c
 19438  0126EC  D002               	goto	l6167
 19439                           
 19440                           ;stkvar	_aexp @ sp[(-4)+2]
 19441  0126EE  0EFE               	movlw	-2
 19442  0126F0  80E3               	bsf	plusw1,0,c
 19443  0126F2                     l6167:
 19444                           
 19445                           ;stkvar	_aexp @ sp[(-4)+2]
 19446  0126F2  0EFE               	movlw	-2
 19447  0126F4  50E3               	movf	plusw1,w,c
 19448  0126F6  B4D8               	btfsc	status,2,c
 19449  0126F8  D027               	goto	l6177
 19450                           
 19451                           ;stkvar	_aexp @ sp[(-4)+2]
 19452  0126FA  0EFE               	movlw	-2
 19453  0126FC  28E3               	incf	plusw1,w,c
 19454  0126FE  A4D8               	btfss	status,2,c
 19455  012700  D018               	goto	l6173
 19456  012702  0E00               	movlw	0
 19457  012704  6E3A               	movwf	(btemp+8)^0,c
 19458  012706  0E00               	movlw	0
 19459  012708  6E3B               	movwf	(btemp+9)^0,c
 19460  01270A  0E00               	movlw	0
 19461  01270C  6E3C               	movwf	(btemp+10)^0,c
 19462  01270E  0E00               	movlw	0
 19463  012710  6E3D               	movwf	(btemp+11)^0,c
 19464                           
 19465                           ;stkvar	_a @ sp[(-4)+-8]
 19466  012712  0EF4               	movlw	-12
 19467  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19468  01271A  0EF5               	movlw	-11
 19469  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19470  012722  0EF6               	movlw	-10
 19471  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19472  01272A  0EF7               	movlw	-9
 19473  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19474  012732                     l6173:
 19475                           
 19476                           ;stkvar	_a @ sp[(-4)+-8]
 19477  012732  0EF6               	movlw	-10
 19478  012734  8EE3               	bsf	plusw1,7,c
 19479                           
 19480                           ;stkvar	_a @ sp[(-4)+-8]
 19481  012736  0EF7               	movlw	247
 19482  012738  24E1               	addwf	fsr1l,w,c
 19483  01273A  6ED9               	movwf	fsr2l,c
 19484  01273C  0EFF               	movlw	255
 19485  01273E  20E2               	addwfc	fsr1h,w,c
 19486  012740  6EDA               	movwf	fsr2h,c
 19487  012742  0E00               	movlw	0
 19488  012744  6EDF               	movwf	indf2,c
 19489  012746  D018               	goto	l6179
 19490  012748                     l6177:
 19491  012748  0E00               	movlw	0
 19492  01274A  6E3A               	movwf	(btemp+8)^0,c
 19493  01274C  0E00               	movlw	0
 19494  01274E  6E3B               	movwf	(btemp+9)^0,c
 19495  012750  0E00               	movlw	0
 19496  012752  6E3C               	movwf	(btemp+10)^0,c
 19497  012754  0E00               	movlw	0
 19498  012756  6E3D               	movwf	(btemp+11)^0,c
 19499                           
 19500                           ;stkvar	_a @ sp[(-4)+-8]
 19501  012758  0EF4               	movlw	-12
 19502  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19503  012760  0EF5               	movlw	-11
 19504  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19505  012768  0EF6               	movlw	-10
 19506  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19507  012770  0EF7               	movlw	-9
 19508  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19509  012778                     l6179:
 19510                           
 19511                           ;stkvar	_bexp @ sp[(-4)+1]
 19512                           ;stkvar	_aexp @ sp[(-4)+2]
 19513  012778  50E1               	movf	fsr1l,w,c
 19514  01277A  0FFE               	addlw	-2
 19515  01277C  6ED9               	movwf	fsr2l,c
 19516  01277E  50E2               	movf	fsr1h,w,c
 19517  012780  6EDA               	movwf	fsr2h,c
 19518  012782  0EFF               	movlw	255
 19519  012784  22DA               	addwfc	fsr2h,f,c
 19520  012786  0EFD               	movlw	-3
 19521  012788  50E3               	movf	plusw1,w,c
 19522  01278A  5CDE               	subwf	postinc2,w,c
 19523  01278C  B0D8               	btfsc	status,0,c
 19524  01278E  D0A4               	goto	l6215
 19525                           
 19526                           ;stkvar	_signs @ sp[(-4)+3]
 19527  012790  0EFF               	movlw	-1
 19528  012792  ACE3               	btfss	plusw1,6,c
 19529  012794  D002               	goto	l6185
 19530                           
 19531                           ;stkvar	_signs @ sp[(-4)+3]
 19532  012796  0EFF               	movlw	-1
 19533  012798  7EE3               	btg	plusw1,7,c
 19534  01279A                     l6185:
 19535                           
 19536                           ;stkvar	_bexp @ sp[(-4)+1]
 19537                           ;stkvar	_grs @ sp[(-4)+0]
 19538  01279A  0EFD               	movlw	-3
 19539  01279C  006F FF8C  F032    	movff	plusw1,btemp
 19540  0127A2  0EFC               	movlw	-4
 19541  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19542                           
 19543                           ;stkvar	_aexp @ sp[(-4)+2]
 19544                           ;stkvar	_bexp @ sp[(-4)+1]
 19545  0127AA  0EFE               	movlw	-2
 19546  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 19547  0127B2  0EFD               	movlw	-3
 19548  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19549                           
 19550                           ;stkvar	_grs @ sp[(-4)+0]
 19551                           ;stkvar	_aexp @ sp[(-4)+2]
 19552  0127BA  0EFC               	movlw	-4
 19553  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 19554  0127C2  0EFE               	movlw	-2
 19555  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19556                           
 19557                           ;stkvar	_b @ sp[(-4)+-4]
 19558                           ;stkvar	_grs @ sp[(-4)+0]
 19559  0127CA  0EF8               	movlw	-8
 19560  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 19561  0127D2  0EFC               	movlw	-4
 19562  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19563                           
 19564                           ;stkvar	_a @ sp[(-4)+-8]
 19565                           ;stkvar	_b @ sp[(-4)+-4]
 19566  0127DA  0EF4               	movlw	-12
 19567  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 19568  0127E2  0EF8               	movlw	-8
 19569  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19570                           
 19571                           ;stkvar	_grs @ sp[(-4)+0]
 19572                           ;stkvar	_a @ sp[(-4)+-8]
 19573  0127EA  0EFC               	movlw	-4
 19574  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 19575  0127F2  0EF4               	movlw	-12
 19576  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19577                           
 19578                           ;stkvar	_b @ sp[(-4)+-4]
 19579  0127FA  0EF9               	movlw	249
 19580  0127FC  24E1               	addwf	fsr1l,w,c
 19581  0127FE  6ED9               	movwf	fsr2l,c
 19582  012800  0EFF               	movlw	255
 19583  012802  20E2               	addwfc	fsr1h,w,c
 19584  012804  6EDA               	movwf	fsr2h,c
 19585  012806  50DF               	movf	indf2,w,c
 19586  012808  6E3D               	movwf	(btemp+11)^0,c
 19587                           
 19588                           ;stkvar	_grs @ sp[(-4)+0]
 19589  01280A  0EFC               	movlw	-4
 19590  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19591                           
 19592                           ;stkvar	_a @ sp[(-4)+-8]
 19593  012812  0EF5               	movlw	245
 19594  012814  24E1               	addwf	fsr1l,w,c
 19595  012816  6ED9               	movwf	fsr2l,c
 19596  012818  0EFF               	movlw	255
 19597  01281A  20E2               	addwfc	fsr1h,w,c
 19598  01281C  6EDA               	movwf	fsr2h,c
 19599                           
 19600                           ;stkvar	_b @ sp[(-4)+-4]
 19601  01281E  0EF9               	movlw	249
 19602  012820  24E1               	addwf	fsr1l,w,c
 19603  012822  6EE9               	movwf	fsr0l,c
 19604  012824  0EFF               	movlw	255
 19605  012826  20E2               	addwfc	fsr1h,w,c
 19606  012828  6EEA               	movwf	fsr0h,c
 19607  01282A  006F FF7F FFEF     	movff	indf2,indf0
 19608                           
 19609                           ;stkvar	_grs @ sp[(-4)+0]
 19610                           ;stkvar	_a @ sp[(-4)+-8]
 19611  012830  0EF5               	movlw	245
 19612  012832  24E1               	addwf	fsr1l,w,c
 19613  012834  6ED9               	movwf	fsr2l,c
 19614  012836  0EFF               	movlw	255
 19615  012838  20E2               	addwfc	fsr1h,w,c
 19616  01283A  6EDA               	movwf	fsr2h,c
 19617  01283C  0EFC               	movlw	-4
 19618  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 19619                           
 19620                           ;stkvar	_b @ sp[(-4)+-4]
 19621  012844  0EFA               	movlw	250
 19622  012846  24E1               	addwf	fsr1l,w,c
 19623  012848  6ED9               	movwf	fsr2l,c
 19624  01284A  0EFF               	movlw	255
 19625  01284C  20E2               	addwfc	fsr1h,w,c
 19626  01284E  6EDA               	movwf	fsr2h,c
 19627  012850  50DF               	movf	indf2,w,c
 19628  012852  6E3D               	movwf	(btemp+11)^0,c
 19629                           
 19630                           ;stkvar	_grs @ sp[(-4)+0]
 19631  012854  0EFC               	movlw	-4
 19632  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19633                           
 19634                           ;stkvar	_a @ sp[(-4)+-8]
 19635  01285C  0EF6               	movlw	246
 19636  01285E  24E1               	addwf	fsr1l,w,c
 19637  012860  6ED9               	movwf	fsr2l,c
 19638  012862  0EFF               	movlw	255
 19639  012864  20E2               	addwfc	fsr1h,w,c
 19640  012866  6EDA               	movwf	fsr2h,c
 19641                           
 19642                           ;stkvar	_b @ sp[(-4)+-4]
 19643  012868  0EFA               	movlw	250
 19644  01286A  24E1               	addwf	fsr1l,w,c
 19645  01286C  6EE9               	movwf	fsr0l,c
 19646  01286E  0EFF               	movlw	255
 19647  012870  20E2               	addwfc	fsr1h,w,c
 19648  012872  6EEA               	movwf	fsr0h,c
 19649  012874  006F FF7F FFEF     	movff	indf2,indf0
 19650                           
 19651                           ;stkvar	_grs @ sp[(-4)+0]
 19652                           ;stkvar	_a @ sp[(-4)+-8]
 19653  01287A  0EF6               	movlw	246
 19654  01287C  24E1               	addwf	fsr1l,w,c
 19655  01287E  6ED9               	movwf	fsr2l,c
 19656  012880  0EFF               	movlw	255
 19657  012882  20E2               	addwfc	fsr1h,w,c
 19658  012884  6EDA               	movwf	fsr2h,c
 19659  012886  0EFC               	movlw	-4
 19660  012888  006F FF8F FFDF     	movff	plusw1,indf2
 19661                           
 19662                           ;stkvar	_b @ sp[(-4)+-4]
 19663  01288E  0EFB               	movlw	251
 19664  012890  24E1               	addwf	fsr1l,w,c
 19665  012892  6ED9               	movwf	fsr2l,c
 19666  012894  0EFF               	movlw	255
 19667  012896  20E2               	addwfc	fsr1h,w,c
 19668  012898  6EDA               	movwf	fsr2h,c
 19669  01289A  50DF               	movf	indf2,w,c
 19670  01289C  6E3D               	movwf	(btemp+11)^0,c
 19671                           
 19672                           ;stkvar	_grs @ sp[(-4)+0]
 19673  01289E  0EFC               	movlw	-4
 19674  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19675                           
 19676                           ;stkvar	_a @ sp[(-4)+-8]
 19677  0128A6  0EF7               	movlw	247
 19678  0128A8  24E1               	addwf	fsr1l,w,c
 19679  0128AA  6ED9               	movwf	fsr2l,c
 19680  0128AC  0EFF               	movlw	255
 19681  0128AE  20E2               	addwfc	fsr1h,w,c
 19682  0128B0  6EDA               	movwf	fsr2h,c
 19683                           
 19684                           ;stkvar	_b @ sp[(-4)+-4]
 19685  0128B2  0EFB               	movlw	251
 19686  0128B4  24E1               	addwf	fsr1l,w,c
 19687  0128B6  6EE9               	movwf	fsr0l,c
 19688  0128B8  0EFF               	movlw	255
 19689  0128BA  20E2               	addwfc	fsr1h,w,c
 19690  0128BC  6EEA               	movwf	fsr0h,c
 19691  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 19692                           
 19693                           ;stkvar	_grs @ sp[(-4)+0]
 19694                           ;stkvar	_a @ sp[(-4)+-8]
 19695  0128C4  0EF7               	movlw	247
 19696  0128C6  24E1               	addwf	fsr1l,w,c
 19697  0128C8  6ED9               	movwf	fsr2l,c
 19698  0128CA  0EFF               	movlw	255
 19699  0128CC  20E2               	addwfc	fsr1h,w,c
 19700  0128CE  6EDA               	movwf	fsr2h,c
 19701  0128D0  0EFC               	movlw	-4
 19702  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 19703  0128D8                     l6215:
 19704                           
 19705                           ;stkvar	_grs @ sp[(-4)+0]
 19706  0128D8  0EFC               	movlw	-4
 19707  0128DA  6AE3               	clrf	plusw1,c
 19708                           
 19709                           ;stkvar	_aexp @ sp[(-4)+2]
 19710  0128DC  0EFE               	movlw	-2
 19711  0128DE  50E3               	movf	plusw1,w,c
 19712  0128E0  6E3C               	movwf	(btemp+10)^0,c
 19713  0128E2  6A3D               	clrf	(btemp+11)^0,c
 19714                           
 19715                           ;stkvar	_bexp @ sp[(-4)+1]
 19716  0128E4  0EFD               	movlw	-3
 19717  0128E6  50E3               	movf	plusw1,w,c
 19718  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 19719  0128EA  0E00               	movlw	0
 19720  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 19721  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 19722  0128F0  D062               	goto	l6239
 19723  0128F2  503D               	movf	(btemp+11)^0,w,c
 19724  0128F4  E104               	bnz	u4600
 19725  0128F6  0E1A               	movlw	26
 19726  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 19727  0128FA  A0D8               	btfss	status,0,c
 19728  0128FC  D05C               	goto	l6239
 19729  0128FE                     u4600:
 19730                           
 19731                           ;stkvar	_b @ sp[(-4)+-4]
 19732  0128FE  0EF8               	movlw	-8
 19733  012900  50E3               	movf	plusw1,w,c
 19734  012902  E10A               	bnz	u4611
 19735  012904  0EF9               	movlw	-7
 19736  012906  50E3               	movf	plusw1,w,c
 19737  012908  E107               	bnz	u4611
 19738  01290A  0EFA               	movlw	-6
 19739  01290C  50E3               	movf	plusw1,w,c
 19740  01290E  E104               	bnz	u4611
 19741  012910  0EFB               	movlw	-5
 19742  012912  50E3               	movf	plusw1,w,c
 19743  012914  B4D8               	btfsc	status,2,c
 19744  012916  D003               	goto	u4610
 19745  012918                     u4611:
 19746  012918  6A3D               	clrf	(btemp+11)^0,c
 19747  01291A  2A3D               	incf	(btemp+11)^0,f,c
 19748  01291C  D001               	goto	u4628
 19749  01291E                     u4610:
 19750  01291E  6A3D               	clrf	(btemp+11)^0,c
 19751  012920                     u4628:
 19752                           
 19753                           ;stkvar	_grs @ sp[(-4)+0]
 19754  012920  0EFC               	movlw	-4
 19755  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19756                           
 19757                           ;stkvar	_b @ sp[(-4)+-4]
 19758  012928  0EF8               	movlw	-8
 19759  01292A  6AE3               	clrf	plusw1,c
 19760  01292C  0EF9               	movlw	-7
 19761  01292E  6AE3               	clrf	plusw1,c
 19762  012930  0EFA               	movlw	-6
 19763  012932  6AE3               	clrf	plusw1,c
 19764  012934  0EFB               	movlw	-5
 19765  012936  6AE3               	clrf	plusw1,c
 19766                           
 19767                           ;stkvar	_aexp @ sp[(-4)+2]
 19768                           ;stkvar	_bexp @ sp[(-4)+1]
 19769  012938  0EFE               	movlw	-2
 19770  01293A  006F FF8C  F032    	movff	plusw1,btemp
 19771  012940  0EFD               	movlw	-3
 19772  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 19773  012948  D042               	goto	u4660
 19774  01294A                     l6225:
 19775                           
 19776                           ;stkvar	_grs @ sp[(-4)+0]
 19777  01294A  0EFC               	movlw	-4
 19778  01294C  A0E3               	btfss	plusw1,0,c
 19779  01294E  D00D               	goto	l6229
 19780                           
 19781                           ;stkvar	_grs @ sp[(-4)+0]
 19782  012950  0EFC               	movlw	-4
 19783  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 19784  012958  90D8               	bcf	status,0,c
 19785  01295A  323D               	rrcf	(btemp+11)^0,f,c
 19786  01295C  0E01               	movlw	1
 19787  01295E  123D               	iorwf	(btemp+11)^0,f,c
 19788                           
 19789                           ;stkvar	_grs @ sp[(-4)+0]
 19790  012960  0EFC               	movlw	-4
 19791  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19792  012968  D009               	goto	l6231
 19793  01296A                     l6229:
 19794                           
 19795                           ;stkvar	_grs @ sp[(-4)+0]
 19796  01296A  50E1               	movf	fsr1l,w,c
 19797  01296C  0FFC               	addlw	-4
 19798  01296E  6ED9               	movwf	fsr2l,c
 19799  012970  50E2               	movf	fsr1h,w,c
 19800  012972  6EDA               	movwf	fsr2h,c
 19801  012974  0EFF               	movlw	255
 19802  012976  22DA               	addwfc	fsr2h,f,c
 19803  012978  90D8               	bcf	status,0,c
 19804  01297A  32DF               	rrcf	indf2,f,c
 19805  01297C                     l6231:
 19806                           
 19807                           ;stkvar	_b @ sp[(-4)+-4]
 19808  01297C  0EF8               	movlw	-8
 19809  01297E  A0E3               	btfss	plusw1,0,c
 19810  012980  D002               	goto	l6235
 19811                           
 19812                           ;stkvar	_grs @ sp[(-4)+0]
 19813  012982  0EFC               	movlw	-4
 19814  012984  8EE3               	bsf	plusw1,7,c
 19815  012986                     l6235:
 19816  012986  0E01               	movlw	1
 19817  012988  6E3D               	movwf	(btemp+11)^0,c
 19818                           
 19819                           ;stkvar	_b @ sp[(-4)+-4]
 19820  01298A  50E1               	movf	fsr1l,w,c
 19821  01298C  0FF8               	addlw	-8
 19822  01298E  6ED9               	movwf	fsr2l,c
 19823  012990  50E2               	movf	fsr1h,w,c
 19824  012992  6EDA               	movwf	fsr2h,c
 19825  012994  0EFF               	movlw	255
 19826  012996  22DA               	addwfc	fsr2h,f,c
 19827  012998  283D               	incf	(btemp+11)^0,w,c
 19828  01299A  52DE               	movf	postinc2,f,c
 19829  01299C  D008               	goto	u4650
 19830  01299E                     u4655:
 19831  01299E  52DE               	movf	postinc2,f,c
 19832  0129A0  90D8               	bcf	status,0,c
 19833  0129A2  BEDC               	btfsc	preinc2,7,c
 19834  0129A4  80D8               	bsf	status,0,c
 19835  0129A6  32DD               	rrcf	postdec2,f,c
 19836  0129A8  32DD               	rrcf	postdec2,f,c
 19837  0129AA  32DD               	rrcf	postdec2,f,c
 19838  0129AC  32DE               	rrcf	postinc2,f,c
 19839  0129AE                     u4650:
 19840  0129AE  2EE8               	decfsz	wreg,f,c
 19841  0129B0  D7F6               	goto	u4655
 19842                           
 19843                           ;stkvar	_bexp @ sp[(-4)+1]
 19844  0129B2  0EFD               	movlw	-3
 19845  0129B4  2AE3               	incf	plusw1,f,c
 19846  0129B6                     l6239:
 19847                           
 19848                           ;stkvar	_aexp @ sp[(-4)+2]
 19849                           ;stkvar	_bexp @ sp[(-4)+1]
 19850  0129B6  50E1               	movf	fsr1l,w,c
 19851  0129B8  0FFD               	addlw	-3
 19852  0129BA  6ED9               	movwf	fsr2l,c
 19853  0129BC  50E2               	movf	fsr1h,w,c
 19854  0129BE  6EDA               	movwf	fsr2h,c
 19855  0129C0  0EFF               	movlw	255
 19856  0129C2  22DA               	addwfc	fsr2h,f,c
 19857  0129C4  0EFE               	movlw	-2
 19858  0129C6  50E3               	movf	plusw1,w,c
 19859  0129C8  5CDE               	subwf	postinc2,w,c
 19860  0129CA  A0D8               	btfss	status,0,c
 19861  0129CC  D7BE               	goto	l6225
 19862  0129CE                     u4660:
 19863                           
 19864                           ;stkvar	_signs @ sp[(-4)+3]
 19865  0129CE  0EFF               	movlw	-1
 19866  0129D0  BCE3               	btfsc	plusw1,6,c
 19867  0129D2  D066               	goto	l6267
 19868                           
 19869                           ;stkvar	_bexp @ sp[(-4)+1]
 19870  0129D4  0EFD               	movlw	-3
 19871  0129D6  50E3               	movf	plusw1,w,c
 19872  0129D8  B4D8               	btfsc	status,2,c
 19873  0129DA  D0F2               	goto	u4760
 19874                           
 19875                           ;stkvar	_a @ sp[(-4)+-8]
 19876                           ;stkvar	_b @ sp[(-4)+-4]
 19877  0129DC  0EF8               	movlw	-8
 19878  0129DE  50E3               	movf	plusw1,w,c
 19879  0129E0  6E32               	movwf	btemp^0,c
 19880  0129E2  0EF4               	movlw	-12
 19881  0129E4  50E3               	movf	plusw1,w,c
 19882  0129E6  2632               	addwf	btemp^0,f,c
 19883  0129E8  0EF8               	movlw	-8
 19884  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 19885  0129F0  0EF9               	movlw	-7
 19886  0129F2  50E3               	movf	plusw1,w,c
 19887  0129F4  6E32               	movwf	btemp^0,c
 19888  0129F6  0EF5               	movlw	-11
 19889  0129F8  50E3               	movf	plusw1,w,c
 19890  0129FA  2232               	addwfc	btemp^0,f,c
 19891  0129FC  0EF9               	movlw	-7
 19892  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19893  012A04  0EFA               	movlw	-6
 19894  012A06  50E3               	movf	plusw1,w,c
 19895  012A08  6E32               	movwf	btemp^0,c
 19896  012A0A  0EF6               	movlw	-10
 19897  012A0C  50E3               	movf	plusw1,w,c
 19898  012A0E  2232               	addwfc	btemp^0,f,c
 19899  012A10  0EFA               	movlw	-6
 19900  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 19901  012A18  0EFB               	movlw	-5
 19902  012A1A  50E3               	movf	plusw1,w,c
 19903  012A1C  6E32               	movwf	btemp^0,c
 19904  012A1E  0EF7               	movlw	-9
 19905  012A20  50E3               	movf	plusw1,w,c
 19906  012A22  2232               	addwfc	btemp^0,f,c
 19907  012A24  0EFB               	movlw	-5
 19908  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 19909                           
 19910                           ;stkvar	_b @ sp[(-4)+-4]
 19911  012A2C  0EFB               	movlw	-5
 19912  012A2E  A0E3               	btfss	plusw1,0,c
 19913  012A30  D101               	goto	u4800
 19914                           
 19915                           ;stkvar	_grs @ sp[(-4)+0]
 19916  012A32  0EFC               	movlw	-4
 19917  012A34  A0E3               	btfss	plusw1,0,c
 19918  012A36  D00D               	goto	l6257
 19919                           
 19920                           ;stkvar	_grs @ sp[(-4)+0]
 19921  012A38  0EFC               	movlw	-4
 19922  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 19923  012A40  90D8               	bcf	status,0,c
 19924  012A42  323D               	rrcf	(btemp+11)^0,f,c
 19925  012A44  0E01               	movlw	1
 19926  012A46  123D               	iorwf	(btemp+11)^0,f,c
 19927                           
 19928                           ;stkvar	_grs @ sp[(-4)+0]
 19929  012A48  0EFC               	movlw	-4
 19930  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19931  012A50  D009               	goto	l6259
 19932  012A52                     l6257:
 19933                           
 19934                           ;stkvar	_grs @ sp[(-4)+0]
 19935  012A52  50E1               	movf	fsr1l,w,c
 19936  012A54  0FFC               	addlw	-4
 19937  012A56  6ED9               	movwf	fsr2l,c
 19938  012A58  50E2               	movf	fsr1h,w,c
 19939  012A5A  6EDA               	movwf	fsr2h,c
 19940  012A5C  0EFF               	movlw	255
 19941  012A5E  22DA               	addwfc	fsr2h,f,c
 19942  012A60  90D8               	bcf	status,0,c
 19943  012A62  32DF               	rrcf	indf2,f,c
 19944  012A64                     l6259:
 19945                           
 19946                           ;stkvar	_b @ sp[(-4)+-4]
 19947  012A64  0EF8               	movlw	-8
 19948  012A66  A0E3               	btfss	plusw1,0,c
 19949  012A68  D002               	goto	l6263
 19950                           
 19951                           ;stkvar	_grs @ sp[(-4)+0]
 19952  012A6A  0EFC               	movlw	-4
 19953  012A6C  8EE3               	bsf	plusw1,7,c
 19954  012A6E                     l6263:
 19955  012A6E  0E01               	movlw	1
 19956  012A70  6E3D               	movwf	(btemp+11)^0,c
 19957                           
 19958                           ;stkvar	_b @ sp[(-4)+-4]
 19959  012A72  50E1               	movf	fsr1l,w,c
 19960  012A74  0FF8               	addlw	-8
 19961  012A76  6ED9               	movwf	fsr2l,c
 19962  012A78  50E2               	movf	fsr1h,w,c
 19963  012A7A  6EDA               	movwf	fsr2h,c
 19964  012A7C  0EFF               	movlw	255
 19965  012A7E  22DA               	addwfc	fsr2h,f,c
 19966  012A80  283D               	incf	(btemp+11)^0,w,c
 19967  012A82  52DE               	movf	postinc2,f,c
 19968  012A84  D008               	goto	u4720
 19969  012A86                     u4725:
 19970  012A86  52DE               	movf	postinc2,f,c
 19971  012A88  90D8               	bcf	status,0,c
 19972  012A8A  BEDC               	btfsc	preinc2,7,c
 19973  012A8C  80D8               	bsf	status,0,c
 19974  012A8E  32DD               	rrcf	postdec2,f,c
 19975  012A90  32DD               	rrcf	postdec2,f,c
 19976  012A92  32DD               	rrcf	postdec2,f,c
 19977  012A94  32DE               	rrcf	postinc2,f,c
 19978  012A96                     u4720:
 19979  012A96  2EE8               	decfsz	wreg,f,c
 19980  012A98  D7F6               	goto	u4725
 19981                           
 19982                           ;stkvar	_bexp @ sp[(-4)+1]
 19983  012A9A  0EFD               	movlw	-3
 19984  012A9C  2AE3               	incf	plusw1,f,c
 19985  012A9E  D0CA               	goto	u4800
 19986  012AA0                     l6267:
 19987                           
 19988                           ;stkvar	_a @ sp[(-4)+-8]
 19989                           ;stkvar	_b @ sp[(-4)+-4]
 19990  012AA0  50E1               	movf	fsr1l,w,c
 19991  012AA2  0FF8               	addlw	-8
 19992  012AA4  6ED9               	movwf	fsr2l,c
 19993  012AA6  50E2               	movf	fsr1h,w,c
 19994  012AA8  6EDA               	movwf	fsr2h,c
 19995  012AAA  0EFF               	movlw	255
 19996  012AAC  22DA               	addwfc	fsr2h,f,c
 19997  012AAE  0EF4               	movlw	-12
 19998  012AB0  50E3               	movf	plusw1,w,c
 19999  012AB2  5CDE               	subwf	postinc2,w,c
 20000  012AB4  0EF5               	movlw	-11
 20001  012AB6  50E3               	movf	plusw1,w,c
 20002  012AB8  58DE               	subwfb	postinc2,w,c
 20003  012ABA  0EF6               	movlw	-10
 20004  012ABC  50E3               	movf	plusw1,w,c
 20005  012ABE  58DE               	subwfb	postinc2,w,c
 20006  012AC0  50DE               	movf	postinc2,w,c
 20007  012AC2  0A80               	xorlw	128
 20008  012AC4  6E32               	movwf	btemp^0,c
 20009  012AC6  0EF7               	movlw	-9
 20010  012AC8  50E3               	movf	plusw1,w,c
 20011  012ACA  0A80               	xorlw	128
 20012  012ACC  5832               	subwfb	btemp^0,w,c
 20013  012ACE  B0D8               	btfsc	status,0,c
 20014  012AD0  D053               	goto	l6279
 20015                           
 20016                           ;stkvar	_b @ sp[(-4)+-4]
 20017                           ;stkvar	_a @ sp[(-4)+-8]
 20018  012AD2  0EF4               	movlw	-12
 20019  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 20020  012ADA  0EF5               	movlw	-11
 20021  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 20022  012AE2  0EF6               	movlw	-10
 20023  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 20024  012AEA  0EF7               	movlw	-9
 20025  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20026  012AF2  0EF8               	movlw	-8
 20027  012AF4  50E3               	movf	plusw1,w,c
 20028  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 20029  012AF8  0EF9               	movlw	-7
 20030  012AFA  50E3               	movf	plusw1,w,c
 20031  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 20032  012AFE  0EFA               	movlw	-6
 20033  012B00  50E3               	movf	plusw1,w,c
 20034  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 20035  012B04  0EFB               	movlw	-5
 20036  012B06  50E3               	movf	plusw1,w,c
 20037  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 20038  012B0A  0EFF               	movlw	255
 20039  012B0C  243A               	addwf	(btemp+8)^0,w,c
 20040  012B0E  6E36               	movwf	(btemp+4)^0,c
 20041  012B10  0EFF               	movlw	255
 20042  012B12  203B               	addwfc	(btemp+9)^0,w,c
 20043  012B14  6E37               	movwf	(btemp+5)^0,c
 20044  012B16  0EFF               	movlw	255
 20045  012B18  203C               	addwfc	(btemp+10)^0,w,c
 20046  012B1A  6E38               	movwf	(btemp+6)^0,c
 20047  012B1C  0EFF               	movlw	255
 20048  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 20049  012B20  6E39               	movwf	(btemp+7)^0,c
 20050                           
 20051                           ;stkvar	_b @ sp[(-4)+-4]
 20052  012B22  0EF8               	movlw	-8
 20053  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 20054  012B2A  0EF9               	movlw	-7
 20055  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 20056  012B32  0EFA               	movlw	-6
 20057  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 20058  012B3A  0EFB               	movlw	-5
 20059  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 20060                           
 20061                           ;stkvar	_signs @ sp[(-4)+3]
 20062  012B42  0EFF               	movlw	-1
 20063  012B44  7EE3               	btg	plusw1,7,c
 20064                           
 20065                           ;stkvar	_grs @ sp[(-4)+0]
 20066  012B46  0EFC               	movlw	-4
 20067  012B48  50E3               	movf	plusw1,w,c
 20068  012B4A  0800               	sublw	0
 20069  012B4C  6E3D               	movwf	(btemp+11)^0,c
 20070                           
 20071                           ;stkvar	_grs @ sp[(-4)+0]
 20072  012B4E  0EFC               	movlw	-4
 20073  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20074                           
 20075                           ;stkvar	_grs @ sp[(-4)+0]
 20076  012B56  0EFC               	movlw	-4
 20077  012B58  50E3               	movf	plusw1,w,c
 20078  012B5A  A4D8               	btfss	status,2,c
 20079  012B5C  D020               	goto	l6281
 20080                           
 20081                           ;stkvar	_b @ sp[(-4)+-4]
 20082  012B5E  50E1               	movf	fsr1l,w,c
 20083  012B60  0FF8               	addlw	-8
 20084  012B62  6ED9               	movwf	fsr2l,c
 20085  012B64  50E2               	movf	fsr1h,w,c
 20086  012B66  6EDA               	movwf	fsr2h,c
 20087  012B68  0EFF               	movlw	255
 20088  012B6A  22DA               	addwfc	fsr2h,f,c
 20089  012B6C  2ADE               	incf	postinc2,f,c
 20090  012B6E  0E00               	movlw	0
 20091  012B70  22DE               	addwfc	postinc2,f,c
 20092  012B72  22DE               	addwfc	postinc2,f,c
 20093  012B74  22DE               	addwfc	postinc2,f,c
 20094  012B76  D013               	goto	l6281
 20095  012B78                     l6279:
 20096                           
 20097                           ;stkvar	_a @ sp[(-4)+-8]
 20098                           ;stkvar	_b @ sp[(-4)+-4]
 20099  012B78  50E1               	movf	fsr1l,w,c
 20100  012B7A  0FF8               	addlw	-8
 20101  012B7C  6ED9               	movwf	fsr2l,c
 20102  012B7E  50E2               	movf	fsr1h,w,c
 20103  012B80  6EDA               	movwf	fsr2h,c
 20104  012B82  0EFF               	movlw	255
 20105  012B84  22DA               	addwfc	fsr2h,f,c
 20106  012B86  0EF4               	movlw	-12
 20107  012B88  50E3               	movf	plusw1,w,c
 20108  012B8A  5EDE               	subwf	postinc2,f,c
 20109  012B8C  0EF5               	movlw	-11
 20110  012B8E  50E3               	movf	plusw1,w,c
 20111  012B90  5ADE               	subwfb	postinc2,f,c
 20112  012B92  0EF6               	movlw	-10
 20113  012B94  50E3               	movf	plusw1,w,c
 20114  012B96  5ADE               	subwfb	postinc2,f,c
 20115  012B98  0EF7               	movlw	-9
 20116  012B9A  50E3               	movf	plusw1,w,c
 20117  012B9C  5ADE               	subwfb	postinc2,f,c
 20118  012B9E                     l6281:
 20119                           
 20120                           ;stkvar	_b @ sp[(-4)+-4]
 20121  012B9E  0EF8               	movlw	-8
 20122  012BA0  50E3               	movf	plusw1,w,c
 20123  012BA2  E145               	bnz	l6303
 20124  012BA4  0EF9               	movlw	-7
 20125  012BA6  50E3               	movf	plusw1,w,c
 20126  012BA8  E142               	bnz	l6303
 20127  012BAA  0EFA               	movlw	-6
 20128  012BAC  50E3               	movf	plusw1,w,c
 20129  012BAE  E13F               	bnz	l6303
 20130  012BB0  0EFB               	movlw	-5
 20131  012BB2  50E3               	movf	plusw1,w,c
 20132  012BB4  A4D8               	btfss	status,2,c
 20133  012BB6  D03B               	goto	l6303
 20134                           
 20135                           ;stkvar	_grs @ sp[(-4)+0]
 20136  012BB8  0EFC               	movlw	-4
 20137  012BBA  50E3               	movf	plusw1,w,c
 20138  012BBC  A4D8               	btfss	status,2,c
 20139  012BBE  D037               	goto	l6303
 20140  012BC0                     u4760:
 20141  012BC0  0E00               	movlw	0
 20142  012BC2  6E32               	movwf	btemp^0,c
 20143  012BC4  0E00               	movlw	0
 20144  012BC6  6E33               	movwf	(btemp+1)^0,c
 20145  012BC8  0E00               	movlw	0
 20146  012BCA  6E34               	movwf	(btemp+2)^0,c
 20147  012BCC  0E00               	movlw	0
 20148  012BCE  6E35               	movwf	(btemp+3)^0,c
 20149  012BD0  D0C6               	goto	l2583
 20150  012BD2                     l6289:
 20151                           
 20152                           ;stkvar	_b @ sp[(-4)+-4]
 20153  012BD2  90D8               	bcf	status,0,c
 20154  012BD4  0EF8               	movlw	-8
 20155  012BD6  36E3               	rlcf	plusw1,f,c
 20156  012BD8  0EF9               	movlw	-7
 20157  012BDA  36E3               	rlcf	plusw1,f,c
 20158  012BDC  0EFA               	movlw	-6
 20159  012BDE  36E3               	rlcf	plusw1,f,c
 20160  012BE0  0EFB               	movlw	-5
 20161  012BE2  36E3               	rlcf	plusw1,f,c
 20162                           
 20163                           ;stkvar	_grs @ sp[(-4)+0]
 20164  012BE4  0EFC               	movlw	-4
 20165  012BE6  AEE3               	btfss	plusw1,7,c
 20166  012BE8  D002               	goto	l2595
 20167                           
 20168                           ;stkvar	_b @ sp[(-4)+-4]
 20169  012BEA  0EF8               	movlw	-8
 20170  012BEC  80E3               	bsf	plusw1,0,c
 20171  012BEE                     l2595:
 20172                           
 20173                           ;stkvar	_grs @ sp[(-4)+0]
 20174  012BEE  0EFC               	movlw	-4
 20175  012BF0  A0E3               	btfss	plusw1,0,c
 20176  012BF2  D00E               	goto	l6297
 20177                           
 20178                           ;stkvar	_grs @ sp[(-4)+0]
 20179  012BF4  0EFC               	movlw	-4
 20180  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 20181  012BFC  90D8               	bcf	status,0,c
 20182  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 20183  012C00  6E3C               	movwf	(btemp+10)^0,c
 20184  012C02  0E01               	movlw	1
 20185  012C04  123C               	iorwf	(btemp+10)^0,f,c
 20186                           
 20187                           ;stkvar	_grs @ sp[(-4)+0]
 20188  012C06  0EFC               	movlw	-4
 20189  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20190  012C0E  D009               	goto	l6299
 20191  012C10                     l6297:
 20192                           
 20193                           ;stkvar	_grs @ sp[(-4)+0]
 20194  012C10  50E1               	movf	fsr1l,w,c
 20195  012C12  0FFC               	addlw	-4
 20196  012C14  6ED9               	movwf	fsr2l,c
 20197  012C16  50E2               	movf	fsr1h,w,c
 20198  012C18  6EDA               	movwf	fsr2h,c
 20199  012C1A  0EFF               	movlw	255
 20200  012C1C  22DA               	addwfc	fsr2h,f,c
 20201  012C1E  90D8               	bcf	status,0,c
 20202  012C20  36DF               	rlcf	indf2,f,c
 20203  012C22                     l6299:
 20204                           
 20205                           ;stkvar	_bexp @ sp[(-4)+1]
 20206  012C22  0EFD               	movlw	-3
 20207  012C24  50E3               	movf	plusw1,w,c
 20208  012C26  B4D8               	btfsc	status,2,c
 20209  012C28  D002               	goto	l6303
 20210                           
 20211                           ;stkvar	_bexp @ sp[(-4)+1]
 20212  012C2A  0EFD               	movlw	-3
 20213  012C2C  06E3               	decf	plusw1,f,c
 20214  012C2E                     l6303:
 20215                           
 20216                           ;stkvar	_b @ sp[(-4)+-4]
 20217  012C2E  0EFA               	movlw	-6
 20218  012C30  AEE3               	btfss	plusw1,7,c
 20219  012C32  D7CF               	goto	l6289
 20220  012C34                     u4800:
 20221                           
 20222                           ;stkvar	_aexp @ sp[(-4)+2]
 20223  012C34  0EFE               	movlw	-2
 20224  012C36  6AE3               	clrf	plusw1,c
 20225                           
 20226                           ;stkvar	_grs @ sp[(-4)+0]
 20227  012C38  0EFC               	movlw	-4
 20228  012C3A  AEE3               	btfss	plusw1,7,c
 20229  012C3C  D00F               	goto	l6317
 20230                           
 20231                           ;stkvar	_grs @ sp[(-4)+0]
 20232  012C3E  0EFC               	movlw	-4
 20233  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 20234  012C46  0E7F               	movlw	127
 20235  012C48  163D               	andwf	(btemp+11)^0,f,c
 20236  012C4A  B4D8               	btfsc	status,2,c
 20237  012C4C  D004               	goto	l6313
 20238  012C4E                     u4820:
 20239                           
 20240                           ;stkvar	_aexp @ sp[(-4)+2]
 20241  012C4E  0EFE               	movlw	-2
 20242  012C50  6AE3               	clrf	plusw1,c
 20243  012C52  2AE3               	incf	plusw1,f,c
 20244  012C54  D003               	goto	l6317
 20245  012C56                     l6313:
 20246                           
 20247                           ;stkvar	_b @ sp[(-4)+-4]
 20248  012C56  0EF8               	movlw	-8
 20249  012C58  B0E3               	btfsc	plusw1,0,c
 20250  012C5A  D7F9               	goto	u4820
 20251  012C5C                     l6317:
 20252                           
 20253                           ;stkvar	_aexp @ sp[(-4)+2]
 20254  012C5C  0EFE               	movlw	-2
 20255  012C5E  50E3               	movf	plusw1,w,c
 20256  012C60  B4D8               	btfsc	status,2,c
 20257  012C62  D02B               	goto	l6329
 20258                           
 20259                           ;stkvar	_b @ sp[(-4)+-4]
 20260  012C64  50E1               	movf	fsr1l,w,c
 20261  012C66  0FF8               	addlw	-8
 20262  012C68  6ED9               	movwf	fsr2l,c
 20263  012C6A  50E2               	movf	fsr1h,w,c
 20264  012C6C  6EDA               	movwf	fsr2h,c
 20265  012C6E  0EFF               	movlw	255
 20266  012C70  22DA               	addwfc	fsr2h,f,c
 20267  012C72  2ADE               	incf	postinc2,f,c
 20268  012C74  0E00               	movlw	0
 20269  012C76  22DE               	addwfc	postinc2,f,c
 20270  012C78  22DE               	addwfc	postinc2,f,c
 20271  012C7A  22DE               	addwfc	postinc2,f,c
 20272                           
 20273                           ;stkvar	_b @ sp[(-4)+-4]
 20274  012C7C  0EFB               	movlw	-5
 20275  012C7E  A0E3               	btfss	plusw1,0,c
 20276  012C80  D01C               	goto	l6329
 20277  012C82  0E01               	movlw	1
 20278  012C84  6E3D               	movwf	(btemp+11)^0,c
 20279                           
 20280                           ;stkvar	_b @ sp[(-4)+-4]
 20281  012C86  50E1               	movf	fsr1l,w,c
 20282  012C88  0FF8               	addlw	-8
 20283  012C8A  6ED9               	movwf	fsr2l,c
 20284  012C8C  50E2               	movf	fsr1h,w,c
 20285  012C8E  6EDA               	movwf	fsr2h,c
 20286  012C90  0EFF               	movlw	255
 20287  012C92  22DA               	addwfc	fsr2h,f,c
 20288  012C94  283D               	incf	(btemp+11)^0,w,c
 20289  012C96  52DE               	movf	postinc2,f,c
 20290  012C98  D008               	goto	u4860
 20291  012C9A                     u4865:
 20292  012C9A  52DE               	movf	postinc2,f,c
 20293  012C9C  90D8               	bcf	status,0,c
 20294  012C9E  BEDC               	btfsc	preinc2,7,c
 20295  012CA0  80D8               	bsf	status,0,c
 20296  012CA2  32DD               	rrcf	postdec2,f,c
 20297  012CA4  32DD               	rrcf	postdec2,f,c
 20298  012CA6  32DD               	rrcf	postdec2,f,c
 20299  012CA8  32DE               	rrcf	postinc2,f,c
 20300  012CAA                     u4860:
 20301  012CAA  2EE8               	decfsz	wreg,f,c
 20302  012CAC  D7F6               	goto	u4865
 20303                           
 20304                           ;stkvar	_bexp @ sp[(-4)+1]
 20305  012CAE  0EFD               	movlw	-3
 20306  012CB0  28E3               	incf	plusw1,w,c
 20307  012CB2  B4D8               	btfsc	status,2,c
 20308  012CB4  D002               	goto	l6329
 20309                           
 20310                           ;stkvar	_bexp @ sp[(-4)+1]
 20311  012CB6  0EFD               	movlw	-3
 20312  012CB8  2AE3               	incf	plusw1,f,c
 20313  012CBA                     l6329:
 20314                           
 20315                           ;stkvar	_bexp @ sp[(-4)+1]
 20316  012CBA  0EFD               	movlw	-3
 20317  012CBC  28E3               	incf	plusw1,w,c
 20318  012CBE  B4D8               	btfsc	status,2,c
 20319  012CC0  D004               	goto	u4890
 20320                           
 20321                           ;stkvar	_bexp @ sp[(-4)+1]
 20322  012CC2  0EFD               	movlw	-3
 20323  012CC4  50E3               	movf	plusw1,w,c
 20324  012CC6  A4D8               	btfss	status,2,c
 20325  012CC8  D00E               	goto	l6339
 20326  012CCA                     u4890:
 20327                           
 20328                           ;stkvar	_b @ sp[(-4)+-4]
 20329  012CCA  0EF8               	movlw	-8
 20330  012CCC  6AE3               	clrf	plusw1,c
 20331  012CCE  0EF9               	movlw	-7
 20332  012CD0  6AE3               	clrf	plusw1,c
 20333  012CD2  0EFA               	movlw	-6
 20334  012CD4  6AE3               	clrf	plusw1,c
 20335  012CD6  0EFB               	movlw	-5
 20336  012CD8  6AE3               	clrf	plusw1,c
 20337                           
 20338                           ;stkvar	_bexp @ sp[(-4)+1]
 20339  012CDA  0EFD               	movlw	-3
 20340  012CDC  50E3               	movf	plusw1,w,c
 20341  012CDE  A4D8               	btfss	status,2,c
 20342  012CE0  D002               	goto	l6339
 20343                           
 20344                           ;stkvar	_signs @ sp[(-4)+3]
 20345  012CE2  0EFF               	movlw	-1
 20346  012CE4  6AE3               	clrf	plusw1,c
 20347  012CE6                     l6339:
 20348                           
 20349                           ;stkvar	_bexp @ sp[(-4)+1]
 20350  012CE6  0EFD               	movlw	-3
 20351  012CE8  A0E3               	btfss	plusw1,0,c
 20352  012CEA  D009               	goto	l6343
 20353                           
 20354                           ;stkvar	_b @ sp[(-4)+-4]
 20355  012CEC  0EFA               	movlw	250
 20356  012CEE  24E1               	addwf	fsr1l,w,c
 20357  012CF0  6ED9               	movwf	fsr2l,c
 20358  012CF2  0EFF               	movlw	255
 20359  012CF4  20E2               	addwfc	fsr1h,w,c
 20360  012CF6  6EDA               	movwf	fsr2h,c
 20361  012CF8  0E00               	movlw	0
 20362  012CFA  8EDB               	bsf	plusw2,7,c
 20363  012CFC  D008               	goto	l6345
 20364  012CFE                     l6343:
 20365                           
 20366                           ;stkvar	_b @ sp[(-4)+-4]
 20367  012CFE  0EFA               	movlw	250
 20368  012D00  24E1               	addwf	fsr1l,w,c
 20369  012D02  6ED9               	movwf	fsr2l,c
 20370  012D04  0EFF               	movlw	255
 20371  012D06  20E2               	addwfc	fsr1h,w,c
 20372  012D08  6EDA               	movwf	fsr2h,c
 20373  012D0A  0E7F               	movlw	127
 20374  012D0C  16DF               	andwf	indf2,f,c
 20375  012D0E                     l6345:
 20376                           
 20377                           ;stkvar	_b @ sp[(-4)+-4]
 20378  012D0E  0EFB               	movlw	251
 20379  012D10  24E1               	addwf	fsr1l,w,c
 20380  012D12  6ED9               	movwf	fsr2l,c
 20381  012D14  0EFF               	movlw	255
 20382  012D16  20E2               	addwfc	fsr1h,w,c
 20383  012D18  6EDA               	movwf	fsr2h,c
 20384                           
 20385                           ;stkvar	_bexp @ sp[(-4)+1]
 20386  012D1A  0EFD               	movlw	-3
 20387  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 20388  012D22  90D8               	bcf	status,0,c
 20389  012D24  303D               	rrcf	(btemp+11)^0,w,c
 20390  012D26  6EDF               	movwf	indf2,c
 20391                           
 20392                           ;stkvar	_signs @ sp[(-4)+3]
 20393  012D28  0EFF               	movlw	-1
 20394  012D2A  AEE3               	btfss	plusw1,7,c
 20395  012D2C  D008               	goto	l6351
 20396                           
 20397                           ;stkvar	_b @ sp[(-4)+-4]
 20398  012D2E  0EFB               	movlw	251
 20399  012D30  24E1               	addwf	fsr1l,w,c
 20400  012D32  6ED9               	movwf	fsr2l,c
 20401  012D34  0EFF               	movlw	255
 20402  012D36  20E2               	addwfc	fsr1h,w,c
 20403  012D38  6EDA               	movwf	fsr2h,c
 20404  012D3A  0E00               	movlw	0
 20405  012D3C  8EDB               	bsf	plusw2,7,c
 20406  012D3E                     l6351:
 20407                           
 20408                           ;stkvar	_b @ sp[(-4)+-4]
 20409  012D3E  0EF8               	movlw	-8
 20410  012D40  006F FF8C  F032    	movff	plusw1,btemp
 20411  012D46  0EF9               	movlw	-7
 20412  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 20413  012D4E  0EFA               	movlw	-6
 20414  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 20415  012D56  0EFB               	movlw	-5
 20416  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 20417  012D5E                     l2583:
 20418                           
 20419                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20420  012D5E  0EF4               	movlw	244
 20421  012D60  26E1               	addwf	fsr1l,f,c
 20422  012D62  0EFF               	movlw	255
 20423  012D64  22E2               	addwfc	fsr1h,f,c
 20424  012D66  0012               	return		;funcret
 20425  012D68                     __end_of___fladd:
 20426                           	opt callstack 0
 20427                           
 20428 ;; *************** function ___flmul *****************
 20429 ;; Defined at:
 20430 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 20431 ;; Parameters:    Size  Location     Type
 20432 ;;  b               4  [STACK] unsigned char 
 20433 ;;  a               4  [STACK] unsigned char 
 20434 ;; Auto vars:     Size  Location     Type
 20435 ;;  prod            4  [STACK] struct .
 20436 ;;  grs             4  [STACK] unsigned long 
 20437 ;;  temp            2  [STACK] struct .
 20438 ;;  bexp            1  [STACK] unsigned char 
 20439 ;;  aexp            1  [STACK] unsigned char 
 20440 ;;  sign            1  [STACK] unsigned char 
 20441 ;; Return value:  Size  Location     Type
 20442 ;;                  4  [STACK] unsigned char 
 20443 ;; Registers used:
 20444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20445 ;; Tracked objects:
 20446 ;;		On entry : 0/39
 20447 ;;		On exit  : 0/0
 20448 ;;		Unchanged: 0/0
 20449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20454 ;;Total ram usage:        0 bytes
 20455 ;; Hardware stack levels used:    1
 20456 ;; Hardware stack levels required when called:    6
 20457 ;; This function calls:
 20458 ;;		Nothing
 20459 ;; This function is called by:
 20460 ;;		_conv_raw_result
 20461 ;;		_lp_filter
 20462 ;;		_calc_model_data
 20463 ;;		_efgtoa
 20464 ;; This function uses a reentrant model
 20465 ;;
 20466                           
 20467                           	psect	text86
 20468  011D82                     __ptext86:
 20469                           	opt callstack 0
 20470  011D82                     ___flmul:
 20471                           	opt callstack 0
 20472                           
 20473                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20474  011D82  0E0D               	movlw	13
 20475  011D84  26E1               	addwf	fsr1l,f,c
 20476  011D86  0E00               	movlw	0
 20477  011D88  22E2               	addwfc	fsr1h,f,c
 20478                           
 20479                           ;stkvar	_b @ sp[(-13)+-4]
 20480                           
 20481                           ;incstack = 0
 20482  011D8A  0EF2               	movlw	242
 20483  011D8C  24E1               	addwf	fsr1l,w,c
 20484  011D8E  6ED9               	movwf	fsr2l,c
 20485  011D90  0EFF               	movlw	255
 20486  011D92  20E2               	addwfc	fsr1h,w,c
 20487  011D94  6EDA               	movwf	fsr2h,c
 20488  011D96  50DF               	movf	indf2,w,c
 20489  011D98  6E3D               	movwf	(btemp+11)^0,c
 20490  011D9A  0E80               	movlw	128
 20491  011D9C  163D               	andwf	(btemp+11)^0,f,c
 20492                           
 20493                           ;stkvar	_sign @ sp[(-13)+12]
 20494  011D9E  0EFF               	movlw	-1
 20495  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20496                           
 20497                           ;stkvar	_b @ sp[(-13)+-4]
 20498  011DA6  0EF2               	movlw	242
 20499  011DA8  24E1               	addwf	fsr1l,w,c
 20500  011DAA  6ED9               	movwf	fsr2l,c
 20501  011DAC  0EFF               	movlw	255
 20502  011DAE  20E2               	addwfc	fsr1h,w,c
 20503  011DB0  6EDA               	movwf	fsr2h,c
 20504  011DB2  50DF               	movf	indf2,w,c
 20505  011DB4  6E3D               	movwf	(btemp+11)^0,c
 20506  011DB6  90D8               	bcf	status,0,c
 20507  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 20508  011DBA  6E3C               	movwf	(btemp+10)^0,c
 20509                           
 20510                           ;stkvar	_bexp @ sp[(-13)+10]
 20511  011DBC  0EFD               	movlw	-3
 20512  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20513                           
 20514                           ;stkvar	_b @ sp[(-13)+-4]
 20515  011DC4  0EF1               	movlw	241
 20516  011DC6  24E1               	addwf	fsr1l,w,c
 20517  011DC8  6ED9               	movwf	fsr2l,c
 20518  011DCA  0EFF               	movlw	255
 20519  011DCC  20E2               	addwfc	fsr1h,w,c
 20520  011DCE  6EDA               	movwf	fsr2h,c
 20521  011DD0  AEDF               	btfss	indf2,7,c
 20522  011DD2  D002               	goto	l6735
 20523                           
 20524                           ;stkvar	_bexp @ sp[(-13)+10]
 20525  011DD4  0EFD               	movlw	-3
 20526  011DD6  80E3               	bsf	plusw1,0,c
 20527  011DD8                     l6735:
 20528                           
 20529                           ;stkvar	_bexp @ sp[(-13)+10]
 20530  011DD8  0EFD               	movlw	-3
 20531  011DDA  50E3               	movf	plusw1,w,c
 20532  011DDC  B4D8               	btfsc	status,2,c
 20533  011DDE  D01F               	goto	l6743
 20534                           
 20535                           ;stkvar	_bexp @ sp[(-13)+10]
 20536  011DE0  0EFD               	movlw	-3
 20537  011DE2  28E3               	incf	plusw1,w,c
 20538  011DE4  A4D8               	btfss	status,2,c
 20539  011DE6  D018               	goto	l6741
 20540  011DE8  0E00               	movlw	0
 20541  011DEA  6E3A               	movwf	(btemp+8)^0,c
 20542  011DEC  0E00               	movlw	0
 20543  011DEE  6E3B               	movwf	(btemp+9)^0,c
 20544  011DF0  0E00               	movlw	0
 20545  011DF2  6E3C               	movwf	(btemp+10)^0,c
 20546  011DF4  0E00               	movlw	0
 20547  011DF6  6E3D               	movwf	(btemp+11)^0,c
 20548                           
 20549                           ;stkvar	_b @ sp[(-13)+-4]
 20550  011DF8  0EEF               	movlw	-17
 20551  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20552  011E00  0EF0               	movlw	-16
 20553  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20554  011E08  0EF1               	movlw	-15
 20555  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20556  011E10  0EF2               	movlw	-14
 20557  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20558  011E18                     l6741:
 20559                           
 20560                           ;stkvar	_b @ sp[(-13)+-4]
 20561  011E18  0EF1               	movlw	-15
 20562  011E1A  8EE3               	bsf	plusw1,7,c
 20563  011E1C  D018               	goto	l6745
 20564  011E1E                     l6743:
 20565  011E1E  0E00               	movlw	0
 20566  011E20  6E3A               	movwf	(btemp+8)^0,c
 20567  011E22  0E00               	movlw	0
 20568  011E24  6E3B               	movwf	(btemp+9)^0,c
 20569  011E26  0E00               	movlw	0
 20570  011E28  6E3C               	movwf	(btemp+10)^0,c
 20571  011E2A  0E00               	movlw	0
 20572  011E2C  6E3D               	movwf	(btemp+11)^0,c
 20573                           
 20574                           ;stkvar	_b @ sp[(-13)+-4]
 20575  011E2E  0EEF               	movlw	-17
 20576  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20577  011E36  0EF0               	movlw	-16
 20578  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20579  011E3E  0EF1               	movlw	-15
 20580  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20581  011E46  0EF2               	movlw	-14
 20582  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20583  011E4E                     l6745:
 20584                           
 20585                           ;stkvar	_a @ sp[(-13)+-8]
 20586  011E4E  0EEE               	movlw	238
 20587  011E50  24E1               	addwf	fsr1l,w,c
 20588  011E52  6ED9               	movwf	fsr2l,c
 20589  011E54  0EFF               	movlw	255
 20590  011E56  20E2               	addwfc	fsr1h,w,c
 20591  011E58  6EDA               	movwf	fsr2h,c
 20592  011E5A  50DF               	movf	indf2,w,c
 20593  011E5C  6E3D               	movwf	(btemp+11)^0,c
 20594  011E5E  0E80               	movlw	128
 20595  011E60  163D               	andwf	(btemp+11)^0,f,c
 20596                           
 20597                           ;stkvar	_sign @ sp[(-13)+12]
 20598  011E62  50E1               	movf	fsr1l,w,c
 20599  011E64  0FFF               	addlw	-1
 20600  011E66  6ED9               	movwf	fsr2l,c
 20601  011E68  50E2               	movf	fsr1h,w,c
 20602  011E6A  6EDA               	movwf	fsr2h,c
 20603  011E6C  0EFF               	movlw	255
 20604  011E6E  22DA               	addwfc	fsr2h,f,c
 20605  011E70  503D               	movf	(btemp+11)^0,w,c
 20606  011E72  1ADF               	xorwf	indf2,f,c
 20607                           
 20608                           ;stkvar	_a @ sp[(-13)+-8]
 20609  011E74  0EEE               	movlw	238
 20610  011E76  24E1               	addwf	fsr1l,w,c
 20611  011E78  6ED9               	movwf	fsr2l,c
 20612  011E7A  0EFF               	movlw	255
 20613  011E7C  20E2               	addwfc	fsr1h,w,c
 20614  011E7E  6EDA               	movwf	fsr2h,c
 20615  011E80  50DF               	movf	indf2,w,c
 20616  011E82  6E3D               	movwf	(btemp+11)^0,c
 20617  011E84  90D8               	bcf	status,0,c
 20618  011E86  343D               	rlcf	(btemp+11)^0,w,c
 20619  011E88  6E3C               	movwf	(btemp+10)^0,c
 20620                           
 20621                           ;stkvar	_aexp @ sp[(-13)+11]
 20622  011E8A  0EFE               	movlw	-2
 20623  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20624                           
 20625                           ;stkvar	_a @ sp[(-13)+-8]
 20626  011E92  0EED               	movlw	237
 20627  011E94  24E1               	addwf	fsr1l,w,c
 20628  011E96  6ED9               	movwf	fsr2l,c
 20629  011E98  0EFF               	movlw	255
 20630  011E9A  20E2               	addwfc	fsr1h,w,c
 20631  011E9C  6EDA               	movwf	fsr2h,c
 20632  011E9E  AEDF               	btfss	indf2,7,c
 20633  011EA0  D002               	goto	l6753
 20634                           
 20635                           ;stkvar	_aexp @ sp[(-13)+11]
 20636  011EA2  0EFE               	movlw	-2
 20637  011EA4  80E3               	bsf	plusw1,0,c
 20638  011EA6                     l6753:
 20639                           
 20640                           ;stkvar	_aexp @ sp[(-13)+11]
 20641  011EA6  0EFE               	movlw	-2
 20642  011EA8  50E3               	movf	plusw1,w,c
 20643  011EAA  B4D8               	btfsc	status,2,c
 20644  011EAC  D01F               	goto	l6761
 20645                           
 20646                           ;stkvar	_aexp @ sp[(-13)+11]
 20647  011EAE  0EFE               	movlw	-2
 20648  011EB0  28E3               	incf	plusw1,w,c
 20649  011EB2  A4D8               	btfss	status,2,c
 20650  011EB4  D018               	goto	l6759
 20651  011EB6  0E00               	movlw	0
 20652  011EB8  6E3A               	movwf	(btemp+8)^0,c
 20653  011EBA  0E00               	movlw	0
 20654  011EBC  6E3B               	movwf	(btemp+9)^0,c
 20655  011EBE  0E00               	movlw	0
 20656  011EC0  6E3C               	movwf	(btemp+10)^0,c
 20657  011EC2  0E00               	movlw	0
 20658  011EC4  6E3D               	movwf	(btemp+11)^0,c
 20659                           
 20660                           ;stkvar	_a @ sp[(-13)+-8]
 20661  011EC6  0EEB               	movlw	-21
 20662  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20663  011ECE  0EEC               	movlw	-20
 20664  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20665  011ED6  0EED               	movlw	-19
 20666  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20667  011EDE  0EEE               	movlw	-18
 20668  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20669  011EE6                     l6759:
 20670                           
 20671                           ;stkvar	_a @ sp[(-13)+-8]
 20672  011EE6  0EED               	movlw	-19
 20673  011EE8  8EE3               	bsf	plusw1,7,c
 20674  011EEA  D018               	goto	l6763
 20675  011EEC                     l6761:
 20676  011EEC  0E00               	movlw	0
 20677  011EEE  6E3A               	movwf	(btemp+8)^0,c
 20678  011EF0  0E00               	movlw	0
 20679  011EF2  6E3B               	movwf	(btemp+9)^0,c
 20680  011EF4  0E00               	movlw	0
 20681  011EF6  6E3C               	movwf	(btemp+10)^0,c
 20682  011EF8  0E00               	movlw	0
 20683  011EFA  6E3D               	movwf	(btemp+11)^0,c
 20684                           
 20685                           ;stkvar	_a @ sp[(-13)+-8]
 20686  011EFC  0EEB               	movlw	-21
 20687  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20688  011F04  0EEC               	movlw	-20
 20689  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20690  011F0C  0EED               	movlw	-19
 20691  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20692  011F14  0EEE               	movlw	-18
 20693  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20694  011F1C                     l6763:
 20695                           
 20696                           ;stkvar	_aexp @ sp[(-13)+11]
 20697  011F1C  0EFE               	movlw	-2
 20698  011F1E  50E3               	movf	plusw1,w,c
 20699  011F20  B4D8               	btfsc	status,2,c
 20700  011F22  D004               	goto	u5830
 20701                           
 20702                           ;stkvar	_bexp @ sp[(-13)+10]
 20703  011F24  0EFD               	movlw	-3
 20704  011F26  50E3               	movf	plusw1,w,c
 20705  011F28  A4D8               	btfss	status,2,c
 20706  011F2A  D009               	goto	l6771
 20707  011F2C                     u5830:
 20708  011F2C  0E00               	movlw	0
 20709  011F2E  6E32               	movwf	btemp^0,c
 20710  011F30  0E00               	movlw	0
 20711  011F32  6E33               	movwf	(btemp+1)^0,c
 20712  011F34  0E00               	movlw	0
 20713  011F36  6E34               	movwf	(btemp+2)^0,c
 20714  011F38  0E00               	movlw	0
 20715  011F3A  6E35               	movwf	(btemp+3)^0,c
 20716  011F3C  D332               	goto	l2664
 20717  011F3E                     l6771:
 20718                           
 20719                           ;stkvar	_b @ sp[(-13)+-4]
 20720  011F3E  0EEF               	movlw	-17
 20721  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 20722                           
 20723                           ;stkvar	_a @ sp[(-13)+-8]
 20724  011F46  0EED               	movlw	237
 20725  011F48  24E1               	addwf	fsr1l,w,c
 20726  011F4A  6ED9               	movwf	fsr2l,c
 20727  011F4C  0EFF               	movlw	255
 20728  011F4E  20E2               	addwfc	fsr1h,w,c
 20729  011F50  6EDA               	movwf	fsr2h,c
 20730  011F52  50DF               	movf	indf2,w,c
 20731  011F54  023D               	mulwf	(btemp+11)^0,c
 20732                           
 20733                           ;stkvar	_temp @ sp[(-13)+8]
 20734  011F56  0EFB               	movlw	-5
 20735  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 20736  011F5E  0EFC               	movlw	-4
 20737  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 20738                           
 20739                           ;stkvar	_temp @ sp[(-13)+8]
 20740  011F66  0EFB               	movlw	-5
 20741  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 20742  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 20743  011F74  6A37               	clrf	(btemp+5)^0,c
 20744  011F76  6A38               	clrf	(btemp+6)^0,c
 20745  011F78  6A39               	clrf	(btemp+7)^0,c
 20746                           
 20747                           ;stkvar	_grs @ sp[(-13)+4]
 20748  011F7A  0EF7               	movlw	-9
 20749  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 20750  011F82  0EF8               	movlw	-8
 20751  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 20752  011F8A  0EF9               	movlw	-7
 20753  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 20754  011F92  0EFA               	movlw	-6
 20755  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 20756                           
 20757                           ;stkvar	_temp @ sp[(-13)+8]
 20758  011F9A  0EFC               	movlw	252
 20759  011F9C  24E1               	addwf	fsr1l,w,c
 20760  011F9E  6ED9               	movwf	fsr2l,c
 20761  011FA0  0EFF               	movlw	255
 20762  011FA2  20E2               	addwfc	fsr1h,w,c
 20763  011FA4  6EDA               	movwf	fsr2h,c
 20764  011FA6  50DF               	movf	indf2,w,c
 20765  011FA8  6E3D               	movwf	(btemp+11)^0,c
 20766  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 20767  011FB0  6A37               	clrf	(btemp+5)^0,c
 20768  011FB2  6A38               	clrf	(btemp+6)^0,c
 20769  011FB4  6A39               	clrf	(btemp+7)^0,c
 20770                           
 20771                           ;stkvar	_prod @ sp[(-13)+0]
 20772  011FB6  0EF3               	movlw	-13
 20773  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 20774  011FBE  0EF4               	movlw	-12
 20775  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 20776  011FC6  0EF5               	movlw	-11
 20777  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 20778  011FCE  0EF6               	movlw	-10
 20779  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 20780                           
 20781                           ;stkvar	_b @ sp[(-13)+-4]
 20782  011FD6  0EF0               	movlw	240
 20783  011FD8  24E1               	addwf	fsr1l,w,c
 20784  011FDA  6ED9               	movwf	fsr2l,c
 20785  011FDC  0EFF               	movlw	255
 20786  011FDE  20E2               	addwfc	fsr1h,w,c
 20787  011FE0  6EDA               	movwf	fsr2h,c
 20788  011FE2  50DF               	movf	indf2,w,c
 20789  011FE4  6E3D               	movwf	(btemp+11)^0,c
 20790                           
 20791                           ;stkvar	_a @ sp[(-13)+-8]
 20792  011FE6  0EEC               	movlw	236
 20793  011FE8  24E1               	addwf	fsr1l,w,c
 20794  011FEA  6ED9               	movwf	fsr2l,c
 20795  011FEC  0EFF               	movlw	255
 20796  011FEE  20E2               	addwfc	fsr1h,w,c
 20797  011FF0  6EDA               	movwf	fsr2h,c
 20798  011FF2  50DF               	movf	indf2,w,c
 20799  011FF4  023D               	mulwf	(btemp+11)^0,c
 20800                           
 20801                           ;stkvar	_temp @ sp[(-13)+8]
 20802  011FF6  0EFB               	movlw	-5
 20803  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 20804  011FFE  0EFC               	movlw	-4
 20805  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 20806                           
 20807                           ;stkvar	_grs @ sp[(-13)+4]
 20808  012006  50E1               	movf	fsr1l,w,c
 20809  012008  0FF7               	addlw	-9
 20810  01200A  6ED9               	movwf	fsr2l,c
 20811  01200C  50E2               	movf	fsr1h,w,c
 20812  01200E  6EDA               	movwf	fsr2h,c
 20813  012010  0EFF               	movlw	255
 20814  012012  22DA               	addwfc	fsr2h,f,c
 20815                           
 20816                           ;stkvar	_temp @ sp[(-13)+8]
 20817  012014  0EFB               	movlw	-5
 20818  012016  50E3               	movf	plusw1,w,c
 20819  012018  26DE               	addwf	postinc2,f,c
 20820  01201A  0E00               	movlw	0
 20821  01201C  22DE               	addwfc	postinc2,f,c
 20822  01201E  22DE               	addwfc	postinc2,f,c
 20823  012020  22DE               	addwfc	postinc2,f,c
 20824                           
 20825                           ;stkvar	_prod @ sp[(-13)+0]
 20826  012022  50E1               	movf	fsr1l,w,c
 20827  012024  0FF3               	addlw	-13
 20828  012026  6ED9               	movwf	fsr2l,c
 20829  012028  50E2               	movf	fsr1h,w,c
 20830  01202A  6EDA               	movwf	fsr2h,c
 20831  01202C  0EFF               	movlw	255
 20832  01202E  22DA               	addwfc	fsr2h,f,c
 20833                           
 20834                           ;stkvar	_temp @ sp[(-13)+8]
 20835  012030  0EFC               	movlw	252
 20836  012032  24E1               	addwf	fsr1l,w,c
 20837  012034  6EE9               	movwf	fsr0l,c
 20838  012036  0EFF               	movlw	255
 20839  012038  20E2               	addwfc	fsr1h,w,c
 20840  01203A  6EEA               	movwf	fsr0h,c
 20841  01203C  50EF               	movf	indf0,w,c
 20842  01203E  26DE               	addwf	postinc2,f,c
 20843  012040  0E00               	movlw	0
 20844  012042  22DE               	addwfc	postinc2,f,c
 20845  012044  22DE               	addwfc	postinc2,f,c
 20846  012046  22DE               	addwfc	postinc2,f,c
 20847                           
 20848                           ;stkvar	_b @ sp[(-13)+-4]
 20849  012048  0EF1               	movlw	241
 20850  01204A  24E1               	addwf	fsr1l,w,c
 20851  01204C  6ED9               	movwf	fsr2l,c
 20852  01204E  0EFF               	movlw	255
 20853  012050  20E2               	addwfc	fsr1h,w,c
 20854  012052  6EDA               	movwf	fsr2h,c
 20855  012054  50DF               	movf	indf2,w,c
 20856  012056  6E3D               	movwf	(btemp+11)^0,c
 20857                           
 20858                           ;stkvar	_a @ sp[(-13)+-8]
 20859  012058  0EEB               	movlw	-21
 20860  01205A  50E3               	movf	plusw1,w,c
 20861  01205C  023D               	mulwf	(btemp+11)^0,c
 20862                           
 20863                           ;stkvar	_temp @ sp[(-13)+8]
 20864  01205E  0EFB               	movlw	-5
 20865  012060  006F FFCF FFE3     	movff	prodl,plusw1
 20866  012066  0EFC               	movlw	-4
 20867  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 20868                           
 20869                           ;stkvar	_grs @ sp[(-13)+4]
 20870  01206E  50E1               	movf	fsr1l,w,c
 20871  012070  0FF7               	addlw	-9
 20872  012072  6ED9               	movwf	fsr2l,c
 20873  012074  50E2               	movf	fsr1h,w,c
 20874  012076  6EDA               	movwf	fsr2h,c
 20875  012078  0EFF               	movlw	255
 20876  01207A  22DA               	addwfc	fsr2h,f,c
 20877                           
 20878                           ;stkvar	_temp @ sp[(-13)+8]
 20879  01207C  0EFB               	movlw	-5
 20880  01207E  50E3               	movf	plusw1,w,c
 20881  012080  26DE               	addwf	postinc2,f,c
 20882  012082  0E00               	movlw	0
 20883  012084  22DE               	addwfc	postinc2,f,c
 20884  012086  22DE               	addwfc	postinc2,f,c
 20885  012088  22DE               	addwfc	postinc2,f,c
 20886                           
 20887                           ;stkvar	_prod @ sp[(-13)+0]
 20888  01208A  50E1               	movf	fsr1l,w,c
 20889  01208C  0FF3               	addlw	-13
 20890  01208E  6ED9               	movwf	fsr2l,c
 20891  012090  50E2               	movf	fsr1h,w,c
 20892  012092  6EDA               	movwf	fsr2h,c
 20893  012094  0EFF               	movlw	255
 20894  012096  22DA               	addwfc	fsr2h,f,c
 20895                           
 20896                           ;stkvar	_temp @ sp[(-13)+8]
 20897  012098  0EFC               	movlw	252
 20898  01209A  24E1               	addwf	fsr1l,w,c
 20899  01209C  6EE9               	movwf	fsr0l,c
 20900  01209E  0EFF               	movlw	255
 20901  0120A0  20E2               	addwfc	fsr1h,w,c
 20902  0120A2  6EEA               	movwf	fsr0h,c
 20903  0120A4  50EF               	movf	indf0,w,c
 20904  0120A6  26DE               	addwf	postinc2,f,c
 20905  0120A8  0E00               	movlw	0
 20906  0120AA  22DE               	addwfc	postinc2,f,c
 20907  0120AC  22DE               	addwfc	postinc2,f,c
 20908  0120AE  22DE               	addwfc	postinc2,f,c
 20909                           
 20910                           ;stkvar	_grs @ sp[(-13)+4]
 20911  0120B0  50E1               	movf	fsr1l,w,c
 20912  0120B2  0FF7               	addlw	-9
 20913  0120B4  6ED9               	movwf	fsr2l,c
 20914  0120B6  50E2               	movf	fsr1h,w,c
 20915  0120B8  6EDA               	movwf	fsr2h,c
 20916  0120BA  0EFF               	movlw	255
 20917  0120BC  22DA               	addwfc	fsr2h,f,c
 20918  0120BE  0E08               	movlw	8
 20919  0120C0                     u5845:
 20920  0120C0  90D8               	bcf	status,0,c
 20921  0120C2  36DE               	rlcf	postinc2,f,c
 20922  0120C4  36DE               	rlcf	postinc2,f,c
 20923  0120C6  36DE               	rlcf	postinc2,f,c
 20924  0120C8  36DD               	rlcf	postdec2,f,c
 20925  0120CA  52DD               	movf	postdec2,f,c
 20926  0120CC  52DD               	movf	postdec2,f,c
 20927  0120CE  2EE8               	decfsz	wreg,f,c
 20928  0120D0  D7F7               	goto	u5845
 20929                           
 20930                           ;stkvar	_b @ sp[(-13)+-4]
 20931  0120D2  0EF0               	movlw	240
 20932  0120D4  24E1               	addwf	fsr1l,w,c
 20933  0120D6  6ED9               	movwf	fsr2l,c
 20934  0120D8  0EFF               	movlw	255
 20935  0120DA  20E2               	addwfc	fsr1h,w,c
 20936  0120DC  6EDA               	movwf	fsr2h,c
 20937  0120DE  50DF               	movf	indf2,w,c
 20938  0120E0  6E3D               	movwf	(btemp+11)^0,c
 20939                           
 20940                           ;stkvar	_a @ sp[(-13)+-8]
 20941  0120E2  0EEB               	movlw	-21
 20942  0120E4  50E3               	movf	plusw1,w,c
 20943  0120E6  023D               	mulwf	(btemp+11)^0,c
 20944                           
 20945                           ;stkvar	_temp @ sp[(-13)+8]
 20946  0120E8  0EFB               	movlw	-5
 20947  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 20948  0120F0  0EFC               	movlw	-4
 20949  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 20950                           
 20951                           ;stkvar	_temp @ sp[(-13)+8]
 20952  0120F8  0EFB               	movlw	-5
 20953  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 20954  012100  0EFC               	movlw	-4
 20955  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 20956                           
 20957                           ;stkvar	_grs @ sp[(-13)+4]
 20958  012108  50E1               	movf	fsr1l,w,c
 20959  01210A  0FF7               	addlw	-9
 20960  01210C  6ED9               	movwf	fsr2l,c
 20961  01210E  50E2               	movf	fsr1h,w,c
 20962  012110  6EDA               	movwf	fsr2h,c
 20963  012112  0EFF               	movlw	255
 20964  012114  22DA               	addwfc	fsr2h,f,c
 20965  012116  503C               	movf	(btemp+10)^0,w,c
 20966  012118  26DE               	addwf	postinc2,f,c
 20967  01211A  503D               	movf	(btemp+11)^0,w,c
 20968  01211C  22DE               	addwfc	postinc2,f,c
 20969  01211E  0E00               	movlw	0
 20970  012120  22DE               	addwfc	postinc2,f,c
 20971  012122  22DE               	addwfc	postinc2,f,c
 20972                           
 20973                           ;stkvar	_b @ sp[(-13)+-4]
 20974  012124  0EEF               	movlw	-17
 20975  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 20976                           
 20977                           ;stkvar	_a @ sp[(-13)+-8]
 20978  01212C  0EEC               	movlw	236
 20979  01212E  24E1               	addwf	fsr1l,w,c
 20980  012130  6ED9               	movwf	fsr2l,c
 20981  012132  0EFF               	movlw	255
 20982  012134  20E2               	addwfc	fsr1h,w,c
 20983  012136  6EDA               	movwf	fsr2h,c
 20984  012138  50DF               	movf	indf2,w,c
 20985  01213A  023D               	mulwf	(btemp+11)^0,c
 20986                           
 20987                           ;stkvar	_temp @ sp[(-13)+8]
 20988  01213C  0EFB               	movlw	-5
 20989  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 20990  012144  0EFC               	movlw	-4
 20991  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 20992                           
 20993                           ;stkvar	_temp @ sp[(-13)+8]
 20994  01214C  0EFB               	movlw	-5
 20995  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 20996  012154  0EFC               	movlw	-4
 20997  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 20998                           
 20999                           ;stkvar	_grs @ sp[(-13)+4]
 21000  01215C  50E1               	movf	fsr1l,w,c
 21001  01215E  0FF7               	addlw	-9
 21002  012160  6ED9               	movwf	fsr2l,c
 21003  012162  50E2               	movf	fsr1h,w,c
 21004  012164  6EDA               	movwf	fsr2h,c
 21005  012166  0EFF               	movlw	255
 21006  012168  22DA               	addwfc	fsr2h,f,c
 21007  01216A  503C               	movf	(btemp+10)^0,w,c
 21008  01216C  26DE               	addwf	postinc2,f,c
 21009  01216E  503D               	movf	(btemp+11)^0,w,c
 21010  012170  22DE               	addwfc	postinc2,f,c
 21011  012172  0E00               	movlw	0
 21012  012174  22DE               	addwfc	postinc2,f,c
 21013  012176  22DE               	addwfc	postinc2,f,c
 21014                           
 21015                           ;stkvar	_grs @ sp[(-13)+4]
 21016  012178  50E1               	movf	fsr1l,w,c
 21017  01217A  0FF7               	addlw	-9
 21018  01217C  6ED9               	movwf	fsr2l,c
 21019  01217E  50E2               	movf	fsr1h,w,c
 21020  012180  6EDA               	movwf	fsr2h,c
 21021  012182  0EFF               	movlw	255
 21022  012184  22DA               	addwfc	fsr2h,f,c
 21023  012186  0E08               	movlw	8
 21024  012188                     u5855:
 21025  012188  90D8               	bcf	status,0,c
 21026  01218A  36DE               	rlcf	postinc2,f,c
 21027  01218C  36DE               	rlcf	postinc2,f,c
 21028  01218E  36DE               	rlcf	postinc2,f,c
 21029  012190  36DD               	rlcf	postdec2,f,c
 21030  012192  52DD               	movf	postdec2,f,c
 21031  012194  52DD               	movf	postdec2,f,c
 21032  012196  2EE8               	decfsz	wreg,f,c
 21033  012198  D7F7               	goto	u5855
 21034                           
 21035                           ;stkvar	_b @ sp[(-13)+-4]
 21036  01219A  0EEF               	movlw	-17
 21037  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21038                           
 21039                           ;stkvar	_a @ sp[(-13)+-8]
 21040  0121A2  0EEB               	movlw	-21
 21041  0121A4  50E3               	movf	plusw1,w,c
 21042  0121A6  023D               	mulwf	(btemp+11)^0,c
 21043                           
 21044                           ;stkvar	_temp @ sp[(-13)+8]
 21045  0121A8  0EFB               	movlw	-5
 21046  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 21047  0121B0  0EFC               	movlw	-4
 21048  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 21049                           
 21050                           ;stkvar	_temp @ sp[(-13)+8]
 21051  0121B8  0EFB               	movlw	-5
 21052  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21053  0121C0  0EFC               	movlw	-4
 21054  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 21055                           
 21056                           ;stkvar	_grs @ sp[(-13)+4]
 21057  0121C8  50E1               	movf	fsr1l,w,c
 21058  0121CA  0FF7               	addlw	-9
 21059  0121CC  6ED9               	movwf	fsr2l,c
 21060  0121CE  50E2               	movf	fsr1h,w,c
 21061  0121D0  6EDA               	movwf	fsr2h,c
 21062  0121D2  0EFF               	movlw	255
 21063  0121D4  22DA               	addwfc	fsr2h,f,c
 21064  0121D6  503C               	movf	(btemp+10)^0,w,c
 21065  0121D8  26DE               	addwf	postinc2,f,c
 21066  0121DA  503D               	movf	(btemp+11)^0,w,c
 21067  0121DC  22DE               	addwfc	postinc2,f,c
 21068  0121DE  0E00               	movlw	0
 21069  0121E0  22DE               	addwfc	postinc2,f,c
 21070  0121E2  22DE               	addwfc	postinc2,f,c
 21071                           
 21072                           ;stkvar	_b @ sp[(-13)+-4]
 21073  0121E4  0EF0               	movlw	240
 21074  0121E6  24E1               	addwf	fsr1l,w,c
 21075  0121E8  6ED9               	movwf	fsr2l,c
 21076  0121EA  0EFF               	movlw	255
 21077  0121EC  20E2               	addwfc	fsr1h,w,c
 21078  0121EE  6EDA               	movwf	fsr2h,c
 21079  0121F0  50DF               	movf	indf2,w,c
 21080  0121F2  6E3D               	movwf	(btemp+11)^0,c
 21081                           
 21082                           ;stkvar	_a @ sp[(-13)+-8]
 21083  0121F4  0EED               	movlw	237
 21084  0121F6  24E1               	addwf	fsr1l,w,c
 21085  0121F8  6ED9               	movwf	fsr2l,c
 21086  0121FA  0EFF               	movlw	255
 21087  0121FC  20E2               	addwfc	fsr1h,w,c
 21088  0121FE  6EDA               	movwf	fsr2h,c
 21089  012200  50DF               	movf	indf2,w,c
 21090  012202  023D               	mulwf	(btemp+11)^0,c
 21091                           
 21092                           ;stkvar	_temp @ sp[(-13)+8]
 21093  012204  0EFB               	movlw	-5
 21094  012206  006F FFCF FFE3     	movff	prodl,plusw1
 21095  01220C  0EFC               	movlw	-4
 21096  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 21097                           
 21098                           ;stkvar	_temp @ sp[(-13)+8]
 21099  012214  0EFB               	movlw	-5
 21100  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 21101  01221C  0EFC               	movlw	-4
 21102  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21103                           
 21104                           ;stkvar	_prod @ sp[(-13)+0]
 21105  012224  50E1               	movf	fsr1l,w,c
 21106  012226  0FF3               	addlw	-13
 21107  012228  6ED9               	movwf	fsr2l,c
 21108  01222A  50E2               	movf	fsr1h,w,c
 21109  01222C  6EDA               	movwf	fsr2h,c
 21110  01222E  0EFF               	movlw	255
 21111  012230  22DA               	addwfc	fsr2h,f,c
 21112  012232  503C               	movf	(btemp+10)^0,w,c
 21113  012234  26DE               	addwf	postinc2,f,c
 21114  012236  503D               	movf	(btemp+11)^0,w,c
 21115  012238  22DE               	addwfc	postinc2,f,c
 21116  01223A  0E00               	movlw	0
 21117  01223C  22DE               	addwfc	postinc2,f,c
 21118  01223E  22DE               	addwfc	postinc2,f,c
 21119                           
 21120                           ;stkvar	_b @ sp[(-13)+-4]
 21121  012240  0EF1               	movlw	241
 21122  012242  24E1               	addwf	fsr1l,w,c
 21123  012244  6ED9               	movwf	fsr2l,c
 21124  012246  0EFF               	movlw	255
 21125  012248  20E2               	addwfc	fsr1h,w,c
 21126  01224A  6EDA               	movwf	fsr2h,c
 21127  01224C  50DF               	movf	indf2,w,c
 21128  01224E  6E3D               	movwf	(btemp+11)^0,c
 21129                           
 21130                           ;stkvar	_a @ sp[(-13)+-8]
 21131  012250  0EEC               	movlw	236
 21132  012252  24E1               	addwf	fsr1l,w,c
 21133  012254  6ED9               	movwf	fsr2l,c
 21134  012256  0EFF               	movlw	255
 21135  012258  20E2               	addwfc	fsr1h,w,c
 21136  01225A  6EDA               	movwf	fsr2h,c
 21137  01225C  50DF               	movf	indf2,w,c
 21138  01225E  023D               	mulwf	(btemp+11)^0,c
 21139                           
 21140                           ;stkvar	_temp @ sp[(-13)+8]
 21141  012260  0EFB               	movlw	-5
 21142  012262  006F FFCF FFE3     	movff	prodl,plusw1
 21143  012268  0EFC               	movlw	-4
 21144  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 21145                           
 21146                           ;stkvar	_temp @ sp[(-13)+8]
 21147  012270  0EFB               	movlw	-5
 21148  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 21149  012278  0EFC               	movlw	-4
 21150  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 21151                           
 21152                           ;stkvar	_prod @ sp[(-13)+0]
 21153  012280  50E1               	movf	fsr1l,w,c
 21154  012282  0FF3               	addlw	-13
 21155  012284  6ED9               	movwf	fsr2l,c
 21156  012286  50E2               	movf	fsr1h,w,c
 21157  012288  6EDA               	movwf	fsr2h,c
 21158  01228A  0EFF               	movlw	255
 21159  01228C  22DA               	addwfc	fsr2h,f,c
 21160  01228E  503C               	movf	(btemp+10)^0,w,c
 21161  012290  26DE               	addwf	postinc2,f,c
 21162  012292  503D               	movf	(btemp+11)^0,w,c
 21163  012294  22DE               	addwfc	postinc2,f,c
 21164  012296  0E00               	movlw	0
 21165  012298  22DE               	addwfc	postinc2,f,c
 21166  01229A  22DE               	addwfc	postinc2,f,c
 21167                           
 21168                           ;stkvar	_b @ sp[(-13)+-4]
 21169  01229C  0EF1               	movlw	241
 21170  01229E  24E1               	addwf	fsr1l,w,c
 21171  0122A0  6ED9               	movwf	fsr2l,c
 21172  0122A2  0EFF               	movlw	255
 21173  0122A4  20E2               	addwfc	fsr1h,w,c
 21174  0122A6  6EDA               	movwf	fsr2h,c
 21175  0122A8  50DF               	movf	indf2,w,c
 21176  0122AA  6E3D               	movwf	(btemp+11)^0,c
 21177                           
 21178                           ;stkvar	_a @ sp[(-13)+-8]
 21179  0122AC  0EED               	movlw	237
 21180  0122AE  24E1               	addwf	fsr1l,w,c
 21181  0122B0  6ED9               	movwf	fsr2l,c
 21182  0122B2  0EFF               	movlw	255
 21183  0122B4  20E2               	addwfc	fsr1h,w,c
 21184  0122B6  6EDA               	movwf	fsr2h,c
 21185  0122B8  50DF               	movf	indf2,w,c
 21186  0122BA  023D               	mulwf	(btemp+11)^0,c
 21187                           
 21188                           ;stkvar	_temp @ sp[(-13)+8]
 21189  0122BC  0EFB               	movlw	-5
 21190  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 21191  0122C4  0EFC               	movlw	-4
 21192  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 21193                           
 21194                           ;stkvar	_temp @ sp[(-13)+8]
 21195  0122CC  0EFB               	movlw	-5
 21196  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 21197  0122D4  0EFC               	movlw	-4
 21198  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 21199  0122DC  503C               	movf	(btemp+10)^0,w,c
 21200  0122DE  6E36               	movwf	(btemp+4)^0,c
 21201  0122E0  503D               	movf	(btemp+11)^0,w,c
 21202  0122E2  6E37               	movwf	(btemp+5)^0,c
 21203  0122E4  6A38               	clrf	(btemp+6)^0,c
 21204  0122E6  6A39               	clrf	(btemp+7)^0,c
 21205  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 21206  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 21207  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 21208  0122FA  6A36               	clrf	(btemp+4)^0,c
 21209                           
 21210                           ;stkvar	_prod @ sp[(-13)+0]
 21211  0122FC  50E1               	movf	fsr1l,w,c
 21212  0122FE  0FF3               	addlw	-13
 21213  012300  6ED9               	movwf	fsr2l,c
 21214  012302  50E2               	movf	fsr1h,w,c
 21215  012304  6EDA               	movwf	fsr2h,c
 21216  012306  0EFF               	movlw	255
 21217  012308  22DA               	addwfc	fsr2h,f,c
 21218  01230A  5036               	movf	(btemp+4)^0,w,c
 21219  01230C  26DE               	addwf	postinc2,f,c
 21220  01230E  5037               	movf	(btemp+5)^0,w,c
 21221  012310  22DE               	addwfc	postinc2,f,c
 21222  012312  5038               	movf	(btemp+6)^0,w,c
 21223  012314  22DE               	addwfc	postinc2,f,c
 21224  012316  5039               	movf	(btemp+7)^0,w,c
 21225  012318  22DE               	addwfc	postinc2,f,c
 21226                           
 21227                           ;stkvar	_prod @ sp[(-13)+0]
 21228  01231A  50E1               	movf	fsr1l,w,c
 21229  01231C  0FF3               	addlw	-13
 21230  01231E  6ED9               	movwf	fsr2l,c
 21231  012320  50E2               	movf	fsr1h,w,c
 21232  012322  6EDA               	movwf	fsr2h,c
 21233  012324  0EFF               	movlw	255
 21234  012326  22DA               	addwfc	fsr2h,f,c
 21235                           
 21236                           ;stkvar	_grs @ sp[(-13)+4]
 21237  012328  0EFA               	movlw	250
 21238  01232A  24E1               	addwf	fsr1l,w,c
 21239  01232C  6EE9               	movwf	fsr0l,c
 21240  01232E  0EFF               	movlw	255
 21241  012330  20E2               	addwfc	fsr1h,w,c
 21242  012332  6EEA               	movwf	fsr0h,c
 21243  012334  50EF               	movf	indf0,w,c
 21244  012336  26DE               	addwf	postinc2,f,c
 21245  012338  0E00               	movlw	0
 21246  01233A  22DE               	addwfc	postinc2,f,c
 21247  01233C  22DE               	addwfc	postinc2,f,c
 21248  01233E  22DE               	addwfc	postinc2,f,c
 21249                           
 21250                           ;stkvar	_grs @ sp[(-13)+4]
 21251  012340  50E1               	movf	fsr1l,w,c
 21252  012342  0FF7               	addlw	-9
 21253  012344  6ED9               	movwf	fsr2l,c
 21254  012346  50E2               	movf	fsr1h,w,c
 21255  012348  6EDA               	movwf	fsr2h,c
 21256  01234A  0EFF               	movlw	255
 21257  01234C  22DA               	addwfc	fsr2h,f,c
 21258  01234E  0E08               	movlw	8
 21259  012350                     u5865:
 21260  012350  90D8               	bcf	status,0,c
 21261  012352  36DE               	rlcf	postinc2,f,c
 21262  012354  36DE               	rlcf	postinc2,f,c
 21263  012356  36DE               	rlcf	postinc2,f,c
 21264  012358  36DD               	rlcf	postdec2,f,c
 21265  01235A  52DD               	movf	postdec2,f,c
 21266  01235C  52DD               	movf	postdec2,f,c
 21267  01235E  2EE8               	decfsz	wreg,f,c
 21268  012360  D7F7               	goto	u5865
 21269  012362  0E82               	movlw	130
 21270  012364  6E3C               	movwf	(btemp+10)^0,c
 21271  012366  0EFF               	movlw	255
 21272  012368  6E3D               	movwf	(btemp+11)^0,c
 21273                           
 21274                           ;stkvar	_bexp @ sp[(-13)+10]
 21275  01236A  0EFD               	movlw	-3
 21276  01236C  50E3               	movf	plusw1,w,c
 21277  01236E  6E3A               	movwf	(btemp+8)^0,c
 21278  012370  6A3B               	clrf	(btemp+9)^0,c
 21279                           
 21280                           ;stkvar	_aexp @ sp[(-13)+11]
 21281  012372  0EFE               	movlw	-2
 21282  012374  50E3               	movf	plusw1,w,c
 21283  012376  263A               	addwf	(btemp+8)^0,f,c
 21284  012378  0E00               	movlw	0
 21285  01237A  223B               	addwfc	(btemp+9)^0,f,c
 21286  01237C  503C               	movf	(btemp+10)^0,w,c
 21287  01237E  263A               	addwf	(btemp+8)^0,f,c
 21288  012380  503D               	movf	(btemp+11)^0,w,c
 21289  012382  223B               	addwfc	(btemp+9)^0,f,c
 21290                           
 21291                           ;stkvar	_temp @ sp[(-13)+8]
 21292  012384  0EFB               	movlw	-5
 21293  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21294  01238C  0EFC               	movlw	-4
 21295  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21296  012394  D021               	goto	l6833
 21297  012396                     l6823:
 21298                           
 21299                           ;stkvar	_prod @ sp[(-13)+0]
 21300  012396  90D8               	bcf	status,0,c
 21301  012398  0EF3               	movlw	-13
 21302  01239A  36E3               	rlcf	plusw1,f,c
 21303  01239C  0EF4               	movlw	-12
 21304  01239E  36E3               	rlcf	plusw1,f,c
 21305  0123A0  0EF5               	movlw	-11
 21306  0123A2  36E3               	rlcf	plusw1,f,c
 21307  0123A4  0EF6               	movlw	-10
 21308  0123A6  36E3               	rlcf	plusw1,f,c
 21309                           
 21310                           ;stkvar	_grs @ sp[(-13)+4]
 21311  0123A8  0EFA               	movlw	-6
 21312  0123AA  AEE3               	btfss	plusw1,7,c
 21313  0123AC  D002               	goto	l6829
 21314                           
 21315                           ;stkvar	_prod @ sp[(-13)+0]
 21316  0123AE  0EF3               	movlw	-13
 21317  0123B0  80E3               	bsf	plusw1,0,c
 21318  0123B2                     l6829:
 21319                           
 21320                           ;stkvar	_grs @ sp[(-13)+4]
 21321  0123B2  90D8               	bcf	status,0,c
 21322  0123B4  0EF7               	movlw	-9
 21323  0123B6  36E3               	rlcf	plusw1,f,c
 21324  0123B8  0EF8               	movlw	-8
 21325  0123BA  36E3               	rlcf	plusw1,f,c
 21326  0123BC  0EF9               	movlw	-7
 21327  0123BE  36E3               	rlcf	plusw1,f,c
 21328  0123C0  0EFA               	movlw	-6
 21329  0123C2  36E3               	rlcf	plusw1,f,c
 21330                           
 21331                           ;stkvar	_temp @ sp[(-13)+8]
 21332  0123C4  50E1               	movf	fsr1l,w,c
 21333  0123C6  0FFB               	addlw	-5
 21334  0123C8  6ED9               	movwf	fsr2l,c
 21335  0123CA  50E2               	movf	fsr1h,w,c
 21336  0123CC  6EDA               	movwf	fsr2h,c
 21337  0123CE  0EFF               	movlw	255
 21338  0123D0  22DA               	addwfc	fsr2h,f,c
 21339  0123D2  06DE               	decf	postinc2,f,c
 21340  0123D4  0E00               	movlw	0
 21341  0123D6  5ADD               	subwfb	postdec2,f,c
 21342  0123D8                     l6833:
 21343                           
 21344                           ;stkvar	_prod @ sp[(-13)+0]
 21345  0123D8  0EF5               	movlw	-11
 21346  0123DA  AEE3               	btfss	plusw1,7,c
 21347  0123DC  D7DC               	goto	l6823
 21348                           
 21349                           ;stkvar	_aexp @ sp[(-13)+11]
 21350  0123DE  0EFE               	movlw	-2
 21351  0123E0  6AE3               	clrf	plusw1,c
 21352                           
 21353                           ;stkvar	_grs @ sp[(-13)+4]
 21354  0123E2  0EFA               	movlw	-6
 21355  0123E4  AEE3               	btfss	plusw1,7,c
 21356  0123E6  D020               	goto	l6847
 21357                           
 21358                           ;stkvar	_grs @ sp[(-13)+4]
 21359  0123E8  50E1               	movf	fsr1l,w,c
 21360  0123EA  0FF7               	addlw	-9
 21361  0123EC  6ED9               	movwf	fsr2l,c
 21362  0123EE  50E2               	movf	fsr1h,w,c
 21363  0123F0  6EDA               	movwf	fsr2h,c
 21364  0123F2  0EFF               	movlw	255
 21365  0123F4  22DA               	addwfc	fsr2h,f,c
 21366  0123F6  0EFF               	movlw	255
 21367  0123F8  14DE               	andwf	postinc2,w,c
 21368  0123FA  6E3A               	movwf	(btemp+8)^0,c
 21369  0123FC  0EFF               	movlw	255
 21370  0123FE  14DE               	andwf	postinc2,w,c
 21371  012400  6E3B               	movwf	(btemp+9)^0,c
 21372  012402  0EFF               	movlw	255
 21373  012404  14DE               	andwf	postinc2,w,c
 21374  012406  6E3C               	movwf	(btemp+10)^0,c
 21375  012408  0E7F               	movlw	127
 21376  01240A  14DE               	andwf	postinc2,w,c
 21377  01240C  6E3D               	movwf	(btemp+11)^0,c
 21378  01240E  503A               	movf	(btemp+8)^0,w,c
 21379  012410  103B               	iorwf	(btemp+9)^0,w,c
 21380  012412  103C               	iorwf	(btemp+10)^0,w,c
 21381  012414  103D               	iorwf	(btemp+11)^0,w,c
 21382  012416  B4D8               	btfsc	status,2,c
 21383  012418  D004               	goto	l6843
 21384  01241A                     u5900:
 21385                           
 21386                           ;stkvar	_aexp @ sp[(-13)+11]
 21387  01241A  0EFE               	movlw	-2
 21388  01241C  6AE3               	clrf	plusw1,c
 21389  01241E  2AE3               	incf	plusw1,f,c
 21390  012420  D003               	goto	l6847
 21391  012422                     l6843:
 21392                           
 21393                           ;stkvar	_prod @ sp[(-13)+0]
 21394  012422  0EF3               	movlw	-13
 21395  012424  B0E3               	btfsc	plusw1,0,c
 21396  012426  D7F9               	goto	u5900
 21397  012428                     l6847:
 21398                           
 21399                           ;stkvar	_aexp @ sp[(-13)+11]
 21400  012428  0EFE               	movlw	-2
 21401  01242A  50E3               	movf	plusw1,w,c
 21402  01242C  B4D8               	btfsc	status,2,c
 21403  01242E  D036               	goto	l6857
 21404                           
 21405                           ;stkvar	_prod @ sp[(-13)+0]
 21406  012430  50E1               	movf	fsr1l,w,c
 21407  012432  0FF3               	addlw	-13
 21408  012434  6ED9               	movwf	fsr2l,c
 21409  012436  50E2               	movf	fsr1h,w,c
 21410  012438  6EDA               	movwf	fsr2h,c
 21411  01243A  0EFF               	movlw	255
 21412  01243C  22DA               	addwfc	fsr2h,f,c
 21413  01243E  2ADE               	incf	postinc2,f,c
 21414  012440  0E00               	movlw	0
 21415  012442  22DE               	addwfc	postinc2,f,c
 21416  012444  22DE               	addwfc	postinc2,f,c
 21417  012446  22DE               	addwfc	postinc2,f,c
 21418                           
 21419                           ;stkvar	_prod @ sp[(-13)+0]
 21420  012448  0EF6               	movlw	-10
 21421  01244A  A0E3               	btfss	plusw1,0,c
 21422  01244C  D027               	goto	l6857
 21423  01244E  0E01               	movlw	1
 21424  012450  6E3D               	movwf	(btemp+11)^0,c
 21425                           
 21426                           ;stkvar	_prod @ sp[(-13)+0]
 21427  012452  50E1               	movf	fsr1l,w,c
 21428  012454  0FF3               	addlw	-13
 21429  012456  6ED9               	movwf	fsr2l,c
 21430  012458  50E2               	movf	fsr1h,w,c
 21431  01245A  6EDA               	movwf	fsr2h,c
 21432  01245C  0EFF               	movlw	255
 21433  01245E  22DA               	addwfc	fsr2h,f,c
 21434  012460  283D               	incf	(btemp+11)^0,w,c
 21435  012462  52DE               	movf	postinc2,f,c
 21436  012464  D008               	goto	u5940
 21437  012466                     u5945:
 21438  012466  52DE               	movf	postinc2,f,c
 21439  012468  90D8               	bcf	status,0,c
 21440  01246A  BEDC               	btfsc	preinc2,7,c
 21441  01246C  80D8               	bsf	status,0,c
 21442  01246E  32DD               	rrcf	postdec2,f,c
 21443  012470  32DD               	rrcf	postdec2,f,c
 21444  012472  32DD               	rrcf	postdec2,f,c
 21445  012474  32DE               	rrcf	postinc2,f,c
 21446  012476                     u5940:
 21447  012476  2EE8               	decfsz	wreg,f,c
 21448  012478  D7F6               	goto	u5945
 21449                           
 21450                           ;stkvar	_temp @ sp[(-13)+8]
 21451  01247A  0EFB               	movlw	-5
 21452  01247C  50E3               	movf	plusw1,w,c
 21453  01247E  0F01               	addlw	1
 21454  012480  6E32               	movwf	btemp^0,c
 21455  012482  0EFB               	movlw	-5
 21456  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 21457  01248A  6A32               	clrf	btemp^0,c
 21458  01248C  0EFC               	movlw	-4
 21459  01248E  50E3               	movf	plusw1,w,c
 21460  012490  2032               	addwfc	btemp^0,w,c
 21461  012492  6E32               	movwf	btemp^0,c
 21462  012494  0EFC               	movlw	-4
 21463  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 21464  01249C                     l6857:
 21465                           
 21466                           ;stkvar	_temp @ sp[(-13)+8]
 21467  01249C  0EFC               	movlw	-4
 21468  01249E  BEE3               	btfsc	plusw1,7,c
 21469  0124A0  D020               	goto	l6861
 21470  0124A2  0EFC               	movlw	-4
 21471  0124A4  50E3               	movf	plusw1,w,c
 21472  0124A6  E104               	bnz	u5950
 21473  0124A8  0EFB               	movlw	-5
 21474  0124AA  28E3               	incf	plusw1,w,c
 21475  0124AC  A0D8               	btfss	status,0,c
 21476  0124AE  D019               	goto	l6861
 21477  0124B0                     u5950:
 21478  0124B0  0E00               	movlw	0
 21479  0124B2  6E3A               	movwf	(btemp+8)^0,c
 21480  0124B4  0E00               	movlw	0
 21481  0124B6  6E3B               	movwf	(btemp+9)^0,c
 21482  0124B8  0E80               	movlw	128
 21483  0124BA  6E3C               	movwf	(btemp+10)^0,c
 21484  0124BC  0E7F               	movlw	127
 21485  0124BE  6E3D               	movwf	(btemp+11)^0,c
 21486                           
 21487                           ;stkvar	_prod @ sp[(-13)+0]
 21488  0124C0  0EF3               	movlw	-13
 21489  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21490  0124C8  0EF4               	movlw	-12
 21491  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21492  0124D0  0EF5               	movlw	-11
 21493  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21494  0124D8  0EF6               	movlw	-10
 21495  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21496  0124E0  D044               	goto	l6877
 21497  0124E2                     l6861:
 21498                           
 21499                           ;stkvar	_temp @ sp[(-13)+8]
 21500  0124E2  0EFC               	movlw	-4
 21501  0124E4  BEE3               	btfsc	plusw1,7,c
 21502  0124E6  D007               	goto	u5960
 21503  0124E8  0EFC               	movlw	-4
 21504  0124EA  50E3               	movf	plusw1,w,c
 21505  0124EC  E10F               	bnz	l6867
 21506  0124EE  0EFB               	movlw	-5
 21507  0124F0  04E3               	decf	plusw1,w,c
 21508  0124F2  B0D8               	btfsc	status,0,c
 21509  0124F4  D00B               	goto	l6867
 21510  0124F6                     u5960:
 21511                           
 21512                           ;stkvar	_prod @ sp[(-13)+0]
 21513  0124F6  0EF3               	movlw	-13
 21514  0124F8  6AE3               	clrf	plusw1,c
 21515  0124FA  0EF4               	movlw	-12
 21516  0124FC  6AE3               	clrf	plusw1,c
 21517  0124FE  0EF5               	movlw	-11
 21518  012500  6AE3               	clrf	plusw1,c
 21519  012502  0EF6               	movlw	-10
 21520  012504  6AE3               	clrf	plusw1,c
 21521                           
 21522                           ;stkvar	_sign @ sp[(-13)+12]
 21523  012506  0EFF               	movlw	-1
 21524  012508  6AE3               	clrf	plusw1,c
 21525  01250A  D02F               	goto	l6877
 21526  01250C                     l6867:
 21527                           
 21528                           ;stkvar	_temp @ sp[(-13)+8]
 21529                           ;stkvar	_bexp @ sp[(-13)+10]
 21530  01250C  0EFB               	movlw	-5
 21531  01250E  006F FF8C  F032    	movff	plusw1,btemp
 21532  012514  0EFD               	movlw	-3
 21533  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 21534                           
 21535                           ;stkvar	_prod @ sp[(-13)+0]
 21536  01251C  50E1               	movf	fsr1l,w,c
 21537  01251E  0FF3               	addlw	-13
 21538  012520  6ED9               	movwf	fsr2l,c
 21539  012522  50E2               	movf	fsr1h,w,c
 21540  012524  6EDA               	movwf	fsr2h,c
 21541  012526  0EFF               	movlw	255
 21542  012528  22DA               	addwfc	fsr2h,f,c
 21543  01252A  0EFF               	movlw	255
 21544  01252C  16DE               	andwf	postinc2,f,c
 21545  01252E  0EFF               	movlw	255
 21546  012530  16DE               	andwf	postinc2,f,c
 21547  012532  0E7F               	movlw	127
 21548  012534  16DE               	andwf	postinc2,f,c
 21549  012536  0E00               	movlw	0
 21550  012538  16DE               	andwf	postinc2,f,c
 21551                           
 21552                           ;stkvar	_bexp @ sp[(-13)+10]
 21553  01253A  0EFD               	movlw	-3
 21554  01253C  A0E3               	btfss	plusw1,0,c
 21555  01253E  D008               	goto	l6875
 21556                           
 21557                           ;stkvar	_prod @ sp[(-13)+0]
 21558  012540  0EF5               	movlw	245
 21559  012542  24E1               	addwf	fsr1l,w,c
 21560  012544  6ED9               	movwf	fsr2l,c
 21561  012546  0EFF               	movlw	255
 21562  012548  20E2               	addwfc	fsr1h,w,c
 21563  01254A  6EDA               	movwf	fsr2h,c
 21564  01254C  0E00               	movlw	0
 21565  01254E  8EDB               	bsf	plusw2,7,c
 21566  012550                     l6875:
 21567                           
 21568                           ;stkvar	_prod @ sp[(-13)+0]
 21569  012550  0EF6               	movlw	246
 21570  012552  24E1               	addwf	fsr1l,w,c
 21571  012554  6ED9               	movwf	fsr2l,c
 21572  012556  0EFF               	movlw	255
 21573  012558  20E2               	addwfc	fsr1h,w,c
 21574  01255A  6EDA               	movwf	fsr2h,c
 21575                           
 21576                           ;stkvar	_bexp @ sp[(-13)+10]
 21577  01255C  0EFD               	movlw	-3
 21578  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21579  012564  90D8               	bcf	status,0,c
 21580  012566  303D               	rrcf	(btemp+11)^0,w,c
 21581  012568  6EDF               	movwf	indf2,c
 21582  01256A                     l6877:
 21583                           
 21584                           ;stkvar	_sign @ sp[(-13)+12]
 21585  01256A  0EFF               	movlw	-1
 21586  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21587                           
 21588                           ;stkvar	_prod @ sp[(-13)+0]
 21589  012572  0EF6               	movlw	246
 21590  012574  24E1               	addwf	fsr1l,w,c
 21591  012576  6ED9               	movwf	fsr2l,c
 21592  012578  0EFF               	movlw	255
 21593  01257A  20E2               	addwfc	fsr1h,w,c
 21594  01257C  6EDA               	movwf	fsr2h,c
 21595  01257E  503D               	movf	(btemp+11)^0,w,c
 21596  012580  12DF               	iorwf	indf2,f,c
 21597                           
 21598                           ;stkvar	_prod @ sp[(-13)+0]
 21599  012582  0EF3               	movlw	-13
 21600  012584  006F FF8C  F032    	movff	plusw1,btemp
 21601  01258A  0EF4               	movlw	-12
 21602  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 21603  012592  0EF5               	movlw	-11
 21604  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 21605  01259A  0EF6               	movlw	-10
 21606  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 21607  0125A2                     l2664:
 21608                           
 21609                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 21610  0125A2  0EEB               	movlw	235
 21611  0125A4  26E1               	addwf	fsr1l,f,c
 21612  0125A6  0EFF               	movlw	255
 21613  0125A8  22E2               	addwfc	fsr1h,f,c
 21614  0125AA  0012               	return		;funcret
 21615  0125AC                     __end_of___flmul:
 21616                           	opt callstack 0
 21617                           
 21618 ;; *************** function _SYSTEM_Initialize *****************
 21619 ;; Defined at:
 21620 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21621 ;; Parameters:    Size  Location     Type
 21622 ;;		None
 21623 ;; Auto vars:     Size  Location     Type
 21624 ;;		None
 21625 ;; Return value:  Size  Location     Type
 21626 ;;                  1  [STACK] void 
 21627 ;; Registers used:
 21628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 21629 ;; Tracked objects:
 21630 ;;		On entry : 0/0
 21631 ;;		On exit  : 3F/3C
 21632 ;;		Unchanged: 0/0
 21633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21638 ;;Total ram usage:        0 bytes
 21639 ;; Hardware stack levels used:    1
 21640 ;; Hardware stack levels required when called:    8
 21641 ;; This function calls:
 21642 ;;		_ADCC_Initialize
 21643 ;;		_CLKREF_Initialize
 21644 ;;		_DMA1_Initialize
 21645 ;;		_DMA2_Initialize
 21646 ;;		_EXT_INT_Initialize
 21647 ;;		_FVR_Initialize
 21648 ;;		_INTERRUPT_Initialize
 21649 ;;		_OSCILLATOR_Initialize
 21650 ;;		_PIN_MANAGER_Initialize
 21651 ;;		_PMD_Initialize
 21652 ;;		_PWM8_Initialize
 21653 ;;		_SPI1_Initialize
 21654 ;;		_TMR2_Initialize
 21655 ;;		_TMR5_Initialize
 21656 ;;		_TMR6_Initialize
 21657 ;;		_UART1_Initialize
 21658 ;;		_UART2_Initialize
 21659 ;; This function is called by:
 21660 ;;		_main
 21661 ;; This function uses a reentrant model
 21662 ;;
 21663                           
 21664                           	psect	text87
 21665  017D50                     __ptext87:
 21666                           	opt callstack 0
 21667  017D50                     _SYSTEM_Initialize:
 21668                           	opt callstack 22
 21669                           
 21670                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 21671                           
 21672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21673                           ;incstack = 0
 21674  017D50  EC3C  F0BC         	call	_INTERRUPT_Initialize	;wreg free
 21675                           
 21676                           ; BSR set to: 57
 21677                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 21678  017D54  ECA4  F0C3         	call	_PMD_Initialize	;wreg free
 21679                           
 21680                           ; BSR set to: 57
 21681                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 21682  017D58  EC11  F0BA         	call	_PIN_MANAGER_Initialize	;wreg free
 21683                           
 21684                           ; BSR set to: 58
 21685                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 21686  017D5C  EC99  F0C3         	call	_OSCILLATOR_Initialize	;wreg free
 21687                           
 21688                           ; BSR set to: 57
 21689                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 21690  017D60  EC0B  F0C4         	call	_FVR_Initialize	;wreg free
 21691                           
 21692                           ; BSR set to: 62
 21693                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 21694  017D64  ECD3  F0BB         	call	_ADCC_Initialize	;wreg free
 21695                           
 21696                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 21697  017D68  EC77  F0C3         	call	_TMR2_Initialize	;wreg free
 21698                           
 21699                           ; BSR set to: 57
 21700                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 21701  017D6C  EC8E  F0C3         	call	_PWM8_Initialize	;wreg free
 21702                           
 21703                           ; BSR set to: 63
 21704                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 21705  017D70  EC1D  F0C0         	call	_EXT_INT_Initialize	;wreg free
 21706                           
 21707                           ; BSR set to: 57
 21708                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 21709  017D74  ECDA  F0C0         	call	_TMR6_Initialize	;wreg free
 21710                           
 21711                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 21712  017D78  ECCB  F0BE         	call	_TMR5_Initialize	;wreg free
 21713                           
 21714                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 21715  017D7C  ECA1  F0BC         	call	_UART1_Initialize	;wreg free
 21716                           
 21717                           ; BSR set to: 57
 21718                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 21719  017D80  EC35  F0BD         	call	_UART2_Initialize	;wreg free
 21720                           
 21721                           ; BSR set to: 57
 21722                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 21723  017D84  EC83  F0C3         	call	_SPI1_Initialize	;wreg free
 21724                           
 21725                           ; BSR set to: 61
 21726                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 21727  017D88  ECBF  F0BD         	call	_DMA2_Initialize	;wreg free
 21728                           
 21729                           ; BSR set to: 59
 21730                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 21731  017D8C  EC9E  F0BB         	call	_DMA1_Initialize	;wreg free
 21732                           
 21733                           ; BSR set to: 59
 21734                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 21735  017D90  ECE5  F0C3         	call	_CLKREF_Initialize	;wreg free
 21736                           
 21737                           ; BSR set to: 60
 21738                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 21739  017D94  0012               	return		;funcret
 21740  017D96                     __end_of_SYSTEM_Initialize:
 21741                           	opt callstack 0
 21742                           
 21743 ;; *************** function _UART2_Initialize *****************
 21744 ;; Defined at:
 21745 ;;		line 78 in file "mcc_generated_files/uart2.c"
 21746 ;; Parameters:    Size  Location     Type
 21747 ;;		None
 21748 ;; Auto vars:     Size  Location     Type
 21749 ;;		None
 21750 ;; Return value:  Size  Location     Type
 21751 ;;                  1  [STACK] void 
 21752 ;; Registers used:
 21753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21754 ;; Tracked objects:
 21755 ;;		On entry : 3F/39
 21756 ;;		On exit  : 3F/39
 21757 ;;		Unchanged: 0/0
 21758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21763 ;;Total ram usage:        0 bytes
 21764 ;; Hardware stack levels used:    1
 21765 ;; Hardware stack levels required when called:    7
 21766 ;; This function calls:
 21767 ;;		_UART2_SetRxInterruptHandler
 21768 ;;		_UART2_SetTxInterruptHandler
 21769 ;; This function is called by:
 21770 ;;		_SYSTEM_Initialize
 21771 ;; This function uses a reentrant model
 21772 ;;
 21773                           
 21774                           	psect	text88
 21775  017A6A                     __ptext88:
 21776                           	opt callstack 0
 21777  017A6A                     _UART2_Initialize:
 21778                           	opt callstack 22
 21779                           
 21780                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21781                           
 21782                           ; BSR set to: 60
 21783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21784                           ;incstack = 0
 21785  017A6A  0139               	movlb	57	; () banked
 21786  017A6C  9596               	bcf	150,2,b	;volatile
 21787                           
 21788                           ; BSR set to: 57
 21789                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21790  017A6E  0E4A               	movlw	low _UART2_Receive_ISR
 21791  017A70  6EE6               	movwf	postinc1,c
 21792  017A72  0E86               	movlw	high _UART2_Receive_ISR
 21793  017A74  6EE6               	movwf	postinc1,c
 21794  017A76  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21795  017A78  6EE6               	movwf	postinc1,c
 21796  017A7A  EC69  F0C1         	call	_UART2_SetRxInterruptHandler	;wreg free
 21797                           
 21798                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21799  017A7E  0139               	movlb	57	; () banked
 21800  017A80  9796               	bcf	150,3,b	;volatile
 21801                           
 21802                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21803  017A82  0E88               	movlw	low _UART2_Transmit_ISR
 21804  017A84  6EE6               	movwf	postinc1,c
 21805  017A86  0E81               	movlw	high _UART2_Transmit_ISR
 21806  017A88  6EE6               	movwf	postinc1,c
 21807  017A8A  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21808  017A8C  6EE6               	movwf	postinc1,c
 21809  017A8E  EC55  F0C1         	call	_UART2_SetTxInterruptHandler	;wreg free
 21810                           
 21811                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21812  017A92  013D               	movlb	61	; () banked
 21813  017A94  6BD4               	clrf	212,b	;volatile
 21814                           
 21815                           ; BSR set to: 61
 21816                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21817  017A96  6BD6               	clrf	214,b	;volatile
 21818                           
 21819                           ; BSR set to: 61
 21820                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21821  017A98  6BD8               	clrf	216,b	;volatile
 21822                           
 21823                           ; BSR set to: 61
 21824                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21825  017A9A  0EB0               	movlw	176
 21826  017A9C  6FDA               	movwf	218,b	;volatile
 21827                           
 21828                           ; BSR set to: 61
 21829                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21830  017A9E  0E80               	movlw	128
 21831  017AA0  6FDB               	movwf	219,b	;volatile
 21832                           
 21833                           ; BSR set to: 61
 21834                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21835  017AA2  6BDC               	clrf	220,b	;volatile
 21836                           
 21837                           ; BSR set to: 61
 21838                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21839  017AA4  0E82               	movlw	130
 21840  017AA6  6FDD               	movwf	221,b	;volatile
 21841                           
 21842                           ; BSR set to: 61
 21843                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21844  017AA8  0E06               	movlw	6
 21845  017AAA  6FDE               	movwf	222,b	;volatile
 21846                           
 21847                           ; BSR set to: 61
 21848                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21849  017AAC  6BDF               	clrf	223,b	;volatile
 21850                           
 21851                           ; BSR set to: 61
 21852                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21853  017AAE  6BE0               	clrf	224,b	;volatile
 21854                           
 21855                           ; BSR set to: 61
 21856                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21857  017AB0  6BE1               	clrf	225,b	;volatile
 21858                           
 21859                           ; BSR set to: 61
 21860                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21861  017AB2  6BE2               	clrf	226,b	;volatile
 21862                           
 21863                           ; BSR set to: 61
 21864                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21865  017AB4  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 21866                           
 21867                           ; BSR set to: 61
 21868                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21869  017AB6  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 21870                           
 21871                           ; BSR set to: 61
 21872                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21873  017AB8  0E40               	movlw	64
 21874  017ABA  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21875                           
 21876                           ; BSR set to: 61
 21877                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21878  017ABC  6A28               	clrf	_uart2RxHead^0,c	;volatile
 21879                           
 21880                           ; BSR set to: 61
 21881                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21882  017ABE  6A27               	clrf	_uart2RxTail^0,c	;volatile
 21883                           
 21884                           ; BSR set to: 61
 21885                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21886  017AC0  6A26               	clrf	_uart2RxCount^0,c	;volatile
 21887                           
 21888                           ; BSR set to: 61
 21889                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21890  017AC2  0139               	movlb	57	; () banked
 21891  017AC4  8596               	bsf	150,2,b	;volatile
 21892                           
 21893                           ; BSR set to: 57
 21894                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21895  017AC6  0012               	return		;funcret
 21896  017AC8                     __end_of_UART2_Initialize:
 21897                           	opt callstack 0
 21898                           
 21899 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21900 ;; Defined at:
 21901 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21902 ;; Parameters:    Size  Location     Type
 21903 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21904 ;;		 -> UART2_Transmit_ISR(1), 
 21905 ;; Auto vars:     Size  Location     Type
 21906 ;;		None
 21907 ;; Return value:  Size  Location     Type
 21908 ;;                  1  [STACK] void 
 21909 ;; Registers used:
 21910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21911 ;; Tracked objects:
 21912 ;;		On entry : 3F/39
 21913 ;;		On exit  : 0/0
 21914 ;;		Unchanged: 0/0
 21915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21920 ;;Total ram usage:        0 bytes
 21921 ;; Hardware stack levels used:    1
 21922 ;; Hardware stack levels required when called:    6
 21923 ;; This function calls:
 21924 ;;		Nothing
 21925 ;; This function is called by:
 21926 ;;		_UART2_Initialize
 21927 ;; This function uses a reentrant model
 21928 ;;
 21929                           
 21930                           	psect	text89
 21931  0182AA                     __ptext89:
 21932                           	opt callstack 0
 21933  0182AA                     _UART2_SetTxInterruptHandler:
 21934                           	opt callstack 22
 21935                           
 21936                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21937                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21938                           
 21939                           ; BSR set to: 57
 21940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21941                           ;incstack = 0
 21942  0182AA  50E1               	movf	fsr1l,w,c
 21943  0182AC  0FFD               	addlw	-3
 21944  0182AE  6ED9               	movwf	fsr2l,c
 21945  0182B0  50E2               	movf	fsr1h,w,c
 21946  0182B2  6EDA               	movwf	fsr2h,c
 21947  0182B4  0EFF               	movlw	255
 21948  0182B6  22DA               	addwfc	fsr2h,f,c
 21949  0182B8  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 21950  0182BE  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 21951  0182C4  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 21952                           
 21953                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21954  0182CA  52E5               	movf	postdec1,f,c
 21955  0182CC  52E5               	movf	postdec1,f,c
 21956  0182CE  52E5               	movf	postdec1,f,c
 21957  0182D0  0012               	return		;funcret
 21958  0182D2                     __end_of_UART2_SetTxInterruptHandler:
 21959                           	opt callstack 0
 21960                           
 21961 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21962 ;; Defined at:
 21963 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21964 ;; Parameters:    Size  Location     Type
 21965 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21966 ;;		 -> UART2_Receive_ISR(1), 
 21967 ;; Auto vars:     Size  Location     Type
 21968 ;;		None
 21969 ;; Return value:  Size  Location     Type
 21970 ;;                  1  [STACK] void 
 21971 ;; Registers used:
 21972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21973 ;; Tracked objects:
 21974 ;;		On entry : 3F/39
 21975 ;;		On exit  : 0/0
 21976 ;;		Unchanged: 0/0
 21977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21982 ;;Total ram usage:        0 bytes
 21983 ;; Hardware stack levels used:    1
 21984 ;; Hardware stack levels required when called:    6
 21985 ;; This function calls:
 21986 ;;		Nothing
 21987 ;; This function is called by:
 21988 ;;		_UART2_Initialize
 21989 ;; This function uses a reentrant model
 21990 ;;
 21991                           
 21992                           	psect	text90
 21993  0182D2                     __ptext90:
 21994                           	opt callstack 0
 21995  0182D2                     _UART2_SetRxInterruptHandler:
 21996                           	opt callstack 22
 21997                           
 21998                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21999                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22000                           
 22001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22002                           ;incstack = 0
 22003  0182D2  50E1               	movf	fsr1l,w,c
 22004  0182D4  0FFD               	addlw	-3
 22005  0182D6  6ED9               	movwf	fsr2l,c
 22006  0182D8  50E2               	movf	fsr1h,w,c
 22007  0182DA  6EDA               	movwf	fsr2h,c
 22008  0182DC  0EFF               	movlw	255
 22009  0182DE  22DA               	addwfc	fsr2h,f,c
 22010  0182E0  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 22011  0182E6  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 22012  0182EC  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 22013                           
 22014                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22015  0182F2  52E5               	movf	postdec1,f,c
 22016  0182F4  52E5               	movf	postdec1,f,c
 22017  0182F6  52E5               	movf	postdec1,f,c
 22018  0182F8  0012               	return		;funcret
 22019  0182FA                     __end_of_UART2_SetRxInterruptHandler:
 22020                           	opt callstack 0
 22021                           
 22022 ;; *************** function _UART1_Initialize *****************
 22023 ;; Defined at:
 22024 ;;		line 79 in file "mcc_generated_files/uart1.c"
 22025 ;; Parameters:    Size  Location     Type
 22026 ;;		None
 22027 ;; Auto vars:     Size  Location     Type
 22028 ;;		None
 22029 ;; Return value:  Size  Location     Type
 22030 ;;                  1  [STACK] void 
 22031 ;; Registers used:
 22032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22033 ;; Tracked objects:
 22034 ;;		On entry : 0/39
 22035 ;;		On exit  : 3F/39
 22036 ;;		Unchanged: 0/0
 22037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22042 ;;Total ram usage:        0 bytes
 22043 ;; Hardware stack levels used:    1
 22044 ;; Hardware stack levels required when called:    7
 22045 ;; This function calls:
 22046 ;;		_UART1_SetRxInterruptHandler
 22047 ;;		_UART1_SetTxInterruptHandler
 22048 ;; This function is called by:
 22049 ;;		_SYSTEM_Initialize
 22050 ;; This function uses a reentrant model
 22051 ;;
 22052                           
 22053                           	psect	text91
 22054  017942                     __ptext91:
 22055                           	opt callstack 0
 22056  017942                     _UART1_Initialize:
 22057                           	opt callstack 22
 22058                           
 22059                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 22060                           
 22061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22062                           ;incstack = 0
 22063  017942  0139               	movlb	57	; () banked
 22064  017944  9793               	bcf	147,3,b	;volatile
 22065                           
 22066                           ; BSR set to: 57
 22067                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 22068  017946  0E2C               	movlw	low _UART1_Receive_ISR
 22069  017948  6EE6               	movwf	postinc1,c
 22070  01794A  0E86               	movlw	high _UART1_Receive_ISR
 22071  01794C  6EE6               	movwf	postinc1,c
 22072  01794E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 22073  017950  6EE6               	movwf	postinc1,c
 22074  017952  EC91  F0C1         	call	_UART1_SetRxInterruptHandler	;wreg free
 22075                           
 22076                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 22077  017956  0139               	movlb	57	; () banked
 22078  017958  9993               	bcf	147,4,b	;volatile
 22079                           
 22080                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 22081  01795A  0E5C               	movlw	low _UART1_Transmit_ISR
 22082  01795C  6EE6               	movwf	postinc1,c
 22083  01795E  0E81               	movlw	high _UART1_Transmit_ISR
 22084  017960  6EE6               	movwf	postinc1,c
 22085  017962  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 22086  017964  6EE6               	movwf	postinc1,c
 22087  017966  EC7D  F0C1         	call	_UART1_SetTxInterruptHandler	;wreg free
 22088                           
 22089                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 22090  01796A  013D               	movlb	61	; () banked
 22091  01796C  6BEC               	clrf	236,b	;volatile
 22092                           
 22093                           ; BSR set to: 61
 22094                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 22095  01796E  6BED               	clrf	237,b	;volatile
 22096                           
 22097                           ; BSR set to: 61
 22098                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 22099  017970  6BEE               	clrf	238,b	;volatile
 22100                           
 22101                           ; BSR set to: 61
 22102                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 22103  017972  6BEF               	clrf	239,b	;volatile
 22104                           
 22105                           ; BSR set to: 61
 22106                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 22107  017974  6BF0               	clrf	240,b	;volatile
 22108                           
 22109                           ; BSR set to: 61
 22110                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 22111  017976  6BF1               	clrf	241,b	;volatile
 22112                           
 22113                           ; BSR set to: 61
 22114                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 22115  017978  0EB0               	movlw	176
 22116  01797A  6FF2               	movwf	242,b	;volatile
 22117                           
 22118                           ; BSR set to: 61
 22119                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 22120  01797C  0E80               	movlw	128
 22121  01797E  6FF3               	movwf	243,b	;volatile
 22122                           
 22123                           ; BSR set to: 61
 22124                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 22125  017980  6BF4               	clrf	244,b	;volatile
 22126                           
 22127                           ; BSR set to: 61
 22128                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 22129  017982  0E82               	movlw	130
 22130  017984  6FF5               	movwf	245,b	;volatile
 22131                           
 22132                           ; BSR set to: 61
 22133                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 22134  017986  0E06               	movlw	6
 22135  017988  6FF6               	movwf	246,b	;volatile
 22136                           
 22137                           ; BSR set to: 61
 22138                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 22139  01798A  6BF7               	clrf	247,b	;volatile
 22140                           
 22141                           ; BSR set to: 61
 22142                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 22143  01798C  6BF8               	clrf	248,b	;volatile
 22144                           
 22145                           ; BSR set to: 61
 22146                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 22147  01798E  6BF9               	clrf	249,b	;volatile
 22148                           
 22149                           ; BSR set to: 61
 22150                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 22151  017990  6BFA               	clrf	250,b	;volatile
 22152                           
 22153                           ; BSR set to: 61
 22154                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 22155  017992  6A31               	clrf	_uart1TxHead^0,c	;volatile
 22156                           
 22157                           ; BSR set to: 61
 22158                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 22159  017994  6A30               	clrf	_uart1TxTail^0,c	;volatile
 22160                           
 22161                           ; BSR set to: 61
 22162                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 22163  017996  0E40               	movlw	64
 22164  017998  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 22165                           
 22166                           ; BSR set to: 61
 22167                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 22168  01799A  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 22169                           
 22170                           ; BSR set to: 61
 22171                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 22172  01799C  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 22173                           
 22174                           ; BSR set to: 61
 22175                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 22176  01799E  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 22177                           
 22178                           ; BSR set to: 61
 22179                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 22180  0179A0  0139               	movlb	57	; () banked
 22181  0179A2  8793               	bsf	147,3,b	;volatile
 22182                           
 22183                           ; BSR set to: 57
 22184                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22185  0179A4  0012               	return		;funcret
 22186  0179A6                     __end_of_UART1_Initialize:
 22187                           	opt callstack 0
 22188                           
 22189 ;; *************** function _UART1_SetTxInterruptHandler *****************
 22190 ;; Defined at:
 22191 ;;		line 246 in file "mcc_generated_files/uart1.c"
 22192 ;; Parameters:    Size  Location     Type
 22193 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22194 ;;		 -> UART1_Transmit_ISR(1), 
 22195 ;; Auto vars:     Size  Location     Type
 22196 ;;		None
 22197 ;; Return value:  Size  Location     Type
 22198 ;;                  1  [STACK] void 
 22199 ;; Registers used:
 22200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22201 ;; Tracked objects:
 22202 ;;		On entry : 3F/39
 22203 ;;		On exit  : 0/0
 22204 ;;		Unchanged: 0/0
 22205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22210 ;;Total ram usage:        0 bytes
 22211 ;; Hardware stack levels used:    1
 22212 ;; Hardware stack levels required when called:    6
 22213 ;; This function calls:
 22214 ;;		Nothing
 22215 ;; This function is called by:
 22216 ;;		_UART1_Initialize
 22217 ;; This function uses a reentrant model
 22218 ;;
 22219                           
 22220                           	psect	text92
 22221  0182FA                     __ptext92:
 22222                           	opt callstack 0
 22223  0182FA                     _UART1_SetTxInterruptHandler:
 22224                           	opt callstack 22
 22225                           
 22226                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 22227                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22228                           
 22229                           ; BSR set to: 57
 22230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22231                           ;incstack = 0
 22232  0182FA  50E1               	movf	fsr1l,w,c
 22233  0182FC  0FFD               	addlw	-3
 22234  0182FE  6ED9               	movwf	fsr2l,c
 22235  018300  50E2               	movf	fsr1h,w,c
 22236  018302  6EDA               	movwf	fsr2h,c
 22237  018304  0EFF               	movlw	255
 22238  018306  22DA               	addwfc	fsr2h,f,c
 22239  018308  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 22240  01830E  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 22241  018314  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 22242                           
 22243                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22244  01831A  52E5               	movf	postdec1,f,c
 22245  01831C  52E5               	movf	postdec1,f,c
 22246  01831E  52E5               	movf	postdec1,f,c
 22247  018320  0012               	return		;funcret
 22248  018322                     __end_of_UART1_SetTxInterruptHandler:
 22249                           	opt callstack 0
 22250                           
 22251 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22252 ;; Defined at:
 22253 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22254 ;; Parameters:    Size  Location     Type
 22255 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22256 ;;		 -> UART1_Receive_ISR(1), 
 22257 ;; Auto vars:     Size  Location     Type
 22258 ;;		None
 22259 ;; Return value:  Size  Location     Type
 22260 ;;                  1  [STACK] void 
 22261 ;; Registers used:
 22262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22263 ;; Tracked objects:
 22264 ;;		On entry : 3F/39
 22265 ;;		On exit  : 0/0
 22266 ;;		Unchanged: 0/0
 22267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22272 ;;Total ram usage:        0 bytes
 22273 ;; Hardware stack levels used:    1
 22274 ;; Hardware stack levels required when called:    6
 22275 ;; This function calls:
 22276 ;;		Nothing
 22277 ;; This function is called by:
 22278 ;;		_UART1_Initialize
 22279 ;; This function uses a reentrant model
 22280 ;;
 22281                           
 22282                           	psect	text93
 22283  018322                     __ptext93:
 22284                           	opt callstack 0
 22285  018322                     _UART1_SetRxInterruptHandler:
 22286                           	opt callstack 22
 22287                           
 22288                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 22289                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22290                           
 22291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22292                           ;incstack = 0
 22293  018322  50E1               	movf	fsr1l,w,c
 22294  018324  0FFD               	addlw	-3
 22295  018326  6ED9               	movwf	fsr2l,c
 22296  018328  50E2               	movf	fsr1h,w,c
 22297  01832A  6EDA               	movwf	fsr2h,c
 22298  01832C  0EFF               	movlw	255
 22299  01832E  22DA               	addwfc	fsr2h,f,c
 22300  018330  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 22301  018336  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 22302  01833C  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 22303                           
 22304                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22305  018342  52E5               	movf	postdec1,f,c
 22306  018344  52E5               	movf	postdec1,f,c
 22307  018346  52E5               	movf	postdec1,f,c
 22308  018348  0012               	return		;funcret
 22309  01834A                     __end_of_UART1_SetRxInterruptHandler:
 22310                           	opt callstack 0
 22311                           
 22312 ;; *************** function _TMR6_Initialize *****************
 22313 ;; Defined at:
 22314 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 22315 ;; Parameters:    Size  Location     Type
 22316 ;;		None
 22317 ;; Auto vars:     Size  Location     Type
 22318 ;;		None
 22319 ;; Return value:  Size  Location     Type
 22320 ;;                  1  [STACK] void 
 22321 ;; Registers used:
 22322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22323 ;; Tracked objects:
 22324 ;;		On entry : 3F/39
 22325 ;;		On exit  : 0/0
 22326 ;;		Unchanged: 0/0
 22327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22332 ;;Total ram usage:        0 bytes
 22333 ;; Hardware stack levels used:    1
 22334 ;; Hardware stack levels required when called:    7
 22335 ;; This function calls:
 22336 ;;		_TMR6_SetInterruptHandler
 22337 ;; This function is called by:
 22338 ;;		_SYSTEM_Initialize
 22339 ;; This function uses a reentrant model
 22340 ;;
 22341                           
 22342                           	psect	text94
 22343  0181B4                     __ptext94:
 22344                           	opt callstack 0
 22345  0181B4                     _TMR6_Initialize:
 22346                           	opt callstack 22
 22347                           
 22348                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 22349                           
 22350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22351                           ;incstack = 0
 22352  0181B4  0E01               	movlw	1
 22353  0181B6  6E96               	movwf	150,c	;volatile
 22354                           
 22355                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 22356  0181B8  6A95               	clrf	149,c	;volatile
 22357                           
 22358                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 22359  0181BA  6A97               	clrf	151,c	;volatile
 22360                           
 22361                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 22362  0181BC  0E7C               	movlw	124
 22363  0181BE  6E93               	movwf	147,c	;volatile
 22364                           
 22365                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 22366  0181C0  6A92               	clrf	146,c	;volatile
 22367                           
 22368                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 22369  0181C2  0139               	movlb	57	; () banked
 22370  0181C4  91A9               	bcf	169,0,b	;volatile
 22371                           
 22372                           ; BSR set to: 57
 22373                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 22374  0181C6  8199               	bsf	153,0,b	;volatile
 22375                           
 22376                           ; BSR set to: 57
 22377                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 22378  0181C8  0EDC               	movlw	low _TMR6_DefaultInterruptHandler
 22379  0181CA  6EE6               	movwf	postinc1,c
 22380  0181CC  0E7D               	movlw	high _TMR6_DefaultInterruptHandler
 22381  0181CE  6EE6               	movwf	postinc1,c
 22382  0181D0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22383  0181D2  6EE6               	movwf	postinc1,c
 22384  0181D4  ECA5  F0C1         	call	_TMR6_SetInterruptHandler	;wreg free
 22385                           
 22386                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 22387  0181D8  0EE0               	movlw	224
 22388  0181DA  6E94               	movwf	148,c	;volatile
 22389                           
 22390                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22391  0181DC  0012               	return		;funcret
 22392  0181DE                     __end_of_TMR6_Initialize:
 22393                           	opt callstack 0
 22394                           
 22395 ;; *************** function _TMR6_SetInterruptHandler *****************
 22396 ;; Defined at:
 22397 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22398 ;; Parameters:    Size  Location     Type
 22399 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22400 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22401 ;; Auto vars:     Size  Location     Type
 22402 ;;		None
 22403 ;; Return value:  Size  Location     Type
 22404 ;;                  1  [STACK] void 
 22405 ;; Registers used:
 22406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22407 ;; Tracked objects:
 22408 ;;		On entry : 3F/39
 22409 ;;		On exit  : 0/0
 22410 ;;		Unchanged: 0/0
 22411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22416 ;;Total ram usage:        0 bytes
 22417 ;; Hardware stack levels used:    1
 22418 ;; Hardware stack levels required when called:    6
 22419 ;; This function calls:
 22420 ;;		Nothing
 22421 ;; This function is called by:
 22422 ;;		_TMR6_Initialize
 22423 ;; This function uses a reentrant model
 22424 ;;
 22425                           
 22426                           	psect	text95
 22427  01834A                     __ptext95:
 22428                           	opt callstack 0
 22429  01834A                     _TMR6_SetInterruptHandler:
 22430                           	opt callstack 22
 22431                           
 22432                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22433                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22434                           
 22435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22436                           ;incstack = 0
 22437  01834A  50E1               	movf	fsr1l,w,c
 22438  01834C  0FFD               	addlw	-3
 22439  01834E  6ED9               	movwf	fsr2l,c
 22440  018350  50E2               	movf	fsr1h,w,c
 22441  018352  6EDA               	movwf	fsr2h,c
 22442  018354  0EFF               	movlw	255
 22443  018356  22DA               	addwfc	fsr2h,f,c
 22444  018358  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 22445  01835E  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 22446  018364  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 22447                           
 22448                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22449  01836A  52E5               	movf	postdec1,f,c
 22450  01836C  52E5               	movf	postdec1,f,c
 22451  01836E  52E5               	movf	postdec1,f,c
 22452  018370  0012               	return		;funcret
 22453  018372                     __end_of_TMR6_SetInterruptHandler:
 22454                           	opt callstack 0
 22455                           
 22456 ;; *************** function _TMR5_Initialize *****************
 22457 ;; Defined at:
 22458 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22459 ;; Parameters:    Size  Location     Type
 22460 ;;		None
 22461 ;; Auto vars:     Size  Location     Type
 22462 ;;		None
 22463 ;; Return value:  Size  Location     Type
 22464 ;;                  1  [STACK] void 
 22465 ;; Registers used:
 22466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22467 ;; Tracked objects:
 22468 ;;		On entry : 0/39
 22469 ;;		On exit  : 0/0
 22470 ;;		Unchanged: 0/0
 22471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22476 ;;Total ram usage:        0 bytes
 22477 ;; Hardware stack levels used:    1
 22478 ;; Hardware stack levels required when called:    7
 22479 ;; This function calls:
 22480 ;;		_TMR5_SetInterruptHandler
 22481 ;; This function is called by:
 22482 ;;		_SYSTEM_Initialize
 22483 ;; This function uses a reentrant model
 22484 ;;
 22485                           
 22486                           	psect	text96
 22487  017D96                     __ptext96:
 22488                           	opt callstack 0
 22489  017D96                     _TMR5_Initialize:
 22490                           	opt callstack 22
 22491                           
 22492                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22493                           
 22494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22495                           ;incstack = 0
 22496  017D96  6A9B               	clrf	155,c	;volatile
 22497                           
 22498                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22499  017D98  6A9C               	clrf	156,c	;volatile
 22500                           
 22501                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22502  017D9A  0E01               	movlw	1
 22503  017D9C  6E9D               	movwf	157,c	;volatile
 22504                           
 22505                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22506  017D9E  0E63               	movlw	99
 22507  017DA0  6E99               	movwf	153,c	;volatile
 22508                           
 22509                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22510  017DA2  0EC0               	movlw	192
 22511  017DA4  6E98               	movwf	152,c	;volatile
 22512                           
 22513                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22514  017DA6  5098               	movf	152,w,c	;volatile
 22515  017DA8  006F FE64  F032    	movff	16281,btemp	;volatile
 22516  017DAE  6A33               	clrf	(btemp+1)^0,c
 22517  017DB0  0060  F0C8  F033   	movff	btemp,btemp+1
 22518  017DB6  6A32               	clrf	btemp^0,c
 22519  017DB8  1032               	iorwf	btemp^0,w,c
 22520  017DBA  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22521  017DBC  5033               	movf	(btemp+1)^0,w,c
 22522  017DBE  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22523                           
 22524                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22525  017DC0  0139               	movlb	57	; () banked
 22526  017DC2  9DA8               	bcf	168,6,b	;volatile
 22527                           
 22528                           ; BSR set to: 57
 22529                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22530  017DC4  8D98               	bsf	152,6,b	;volatile
 22531                           
 22532                           ; BSR set to: 57
 22533                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22534  017DC6  0E3A               	movlw	low _TMR5_DefaultInterruptHandler
 22535  017DC8  6EE6               	movwf	postinc1,c
 22536  017DCA  0E84               	movlw	high _TMR5_DefaultInterruptHandler
 22537  017DCC  6EE6               	movwf	postinc1,c
 22538  017DCE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22539  017DD0  6EE6               	movwf	postinc1,c
 22540  017DD2  ECB9  F0C1         	call	_TMR5_SetInterruptHandler	;wreg free
 22541                           
 22542                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 22543  017DD6  0E31               	movlw	49
 22544  017DD8  6E9A               	movwf	154,c	;volatile
 22545                           
 22546                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22547  017DDA  0012               	return		;funcret
 22548  017DDC                     __end_of_TMR5_Initialize:
 22549                           	opt callstack 0
 22550                           
 22551 ;; *************** function _TMR5_SetInterruptHandler *****************
 22552 ;; Defined at:
 22553 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 22554 ;; Parameters:    Size  Location     Type
 22555 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22556 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22557 ;; Auto vars:     Size  Location     Type
 22558 ;;		None
 22559 ;; Return value:  Size  Location     Type
 22560 ;;                  1  [STACK] void 
 22561 ;; Registers used:
 22562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22563 ;; Tracked objects:
 22564 ;;		On entry : 3F/39
 22565 ;;		On exit  : 0/0
 22566 ;;		Unchanged: 0/0
 22567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22572 ;;Total ram usage:        0 bytes
 22573 ;; Hardware stack levels used:    1
 22574 ;; Hardware stack levels required when called:    6
 22575 ;; This function calls:
 22576 ;;		Nothing
 22577 ;; This function is called by:
 22578 ;;		_TMR5_Initialize
 22579 ;; This function uses a reentrant model
 22580 ;;
 22581                           
 22582                           	psect	text97
 22583  018372                     __ptext97:
 22584                           	opt callstack 0
 22585  018372                     _TMR5_SetInterruptHandler:
 22586                           	opt callstack 22
 22587                           
 22588                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 22589                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22590                           
 22591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22592                           ;incstack = 0
 22593  018372  50E1               	movf	fsr1l,w,c
 22594  018374  0FFD               	addlw	-3
 22595  018376  6ED9               	movwf	fsr2l,c
 22596  018378  50E2               	movf	fsr1h,w,c
 22597  01837A  6EDA               	movwf	fsr2h,c
 22598  01837C  0EFF               	movlw	255
 22599  01837E  22DA               	addwfc	fsr2h,f,c
 22600  018380  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 22601  018386  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 22602  01838C  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 22603                           
 22604                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22605  018392  52E5               	movf	postdec1,f,c
 22606  018394  52E5               	movf	postdec1,f,c
 22607  018396  52E5               	movf	postdec1,f,c
 22608  018398  0012               	return		;funcret
 22609  01839A                     __end_of_TMR5_SetInterruptHandler:
 22610                           	opt callstack 0
 22611                           
 22612 ;; *************** function _TMR2_Initialize *****************
 22613 ;; Defined at:
 22614 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22615 ;; Parameters:    Size  Location     Type
 22616 ;;		None
 22617 ;; Auto vars:     Size  Location     Type
 22618 ;;		None
 22619 ;; Return value:  Size  Location     Type
 22620 ;;                  1  [STACK] void 
 22621 ;; Registers used:
 22622 ;;		wreg, status,2
 22623 ;; Tracked objects:
 22624 ;;		On entry : 0/3E
 22625 ;;		On exit  : 3F/39
 22626 ;;		Unchanged: 0/0
 22627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22632 ;;Total ram usage:        0 bytes
 22633 ;; Hardware stack levels used:    1
 22634 ;; Hardware stack levels required when called:    6
 22635 ;; This function calls:
 22636 ;;		Nothing
 22637 ;; This function is called by:
 22638 ;;		_SYSTEM_Initialize
 22639 ;; This function uses a reentrant model
 22640 ;;
 22641                           
 22642                           	psect	text98
 22643  0186EE                     __ptext98:
 22644                           	opt callstack 0
 22645  0186EE                     _TMR2_Initialize:
 22646                           	opt callstack 23
 22647                           
 22648                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 22649                           
 22650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22651                           ;incstack = 0
 22652  0186EE  0E01               	movlw	1
 22653  0186F0  6EAE               	movwf	174,c	;volatile
 22654                           
 22655                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 22656  0186F2  6AAD               	clrf	173,c	;volatile
 22657                           
 22658                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 22659  0186F4  6AAF               	clrf	175,c	;volatile
 22660                           
 22661                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 22662  0186F6  0E63               	movlw	99
 22663  0186F8  6EAB               	movwf	171,c	;volatile
 22664                           
 22665                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 22666  0186FA  6AAA               	clrf	170,c	;volatile
 22667                           
 22668                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 22669  0186FC  0139               	movlb	57	; () banked
 22670  0186FE  95A4               	bcf	164,2,b	;volatile
 22671                           
 22672                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 22673  018700  0EC0               	movlw	192
 22674  018702  6EAC               	movwf	172,c	;volatile
 22675                           
 22676                           ; BSR set to: 57
 22677                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22678  018704  0012               	return		;funcret
 22679  018706                     __end_of_TMR2_Initialize:
 22680                           	opt callstack 0
 22681                           
 22682 ;; *************** function _SPI1_Initialize *****************
 22683 ;; Defined at:
 22684 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22685 ;; Parameters:    Size  Location     Type
 22686 ;;		None
 22687 ;; Auto vars:     Size  Location     Type
 22688 ;;		None
 22689 ;; Return value:  Size  Location     Type
 22690 ;;                  1  [STACK] void 
 22691 ;; Registers used:
 22692 ;;		wreg, status,2
 22693 ;; Tracked objects:
 22694 ;;		On entry : 3F/39
 22695 ;;		On exit  : 3F/3D
 22696 ;;		Unchanged: 0/0
 22697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22702 ;;Total ram usage:        0 bytes
 22703 ;; Hardware stack levels used:    1
 22704 ;; Hardware stack levels required when called:    6
 22705 ;; This function calls:
 22706 ;;		Nothing
 22707 ;; This function is called by:
 22708 ;;		_SYSTEM_Initialize
 22709 ;; This function uses a reentrant model
 22710 ;;
 22711                           
 22712                           	psect	text99
 22713  018706                     __ptext99:
 22714                           	opt callstack 0
 22715  018706                     _SPI1_Initialize:
 22716                           	opt callstack 23
 22717                           
 22718                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 22719                           
 22720                           ; BSR set to: 57
 22721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22722                           ;incstack = 0
 22723  018706  0E40               	movlw	64
 22724  018708  013D               	movlb	61	; () banked
 22725  01870A  6F15               	movwf	21,b	;volatile
 22726                           
 22727                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 22728  01870C  0E03               	movlw	3
 22729  01870E  6F16               	movwf	22,b	;volatile
 22730                           
 22731                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 22732  018710  0E4F               	movlw	79
 22733  018712  6F19               	movwf	25,b	;volatile
 22734                           
 22735                           ; BSR set to: 61
 22736                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 22737  018714  6B1C               	clrf	28,b	;volatile
 22738                           
 22739                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 22740  018716  0E83               	movlw	131
 22741  018718  6F14               	movwf	20,b	;volatile
 22742                           
 22743                           ; BSR set to: 61
 22744                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22745  01871A  0012               	return		;funcret
 22746  01871C                     __end_of_SPI1_Initialize:
 22747                           	opt callstack 0
 22748                           
 22749 ;; *************** function _PWM8_Initialize *****************
 22750 ;; Defined at:
 22751 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 22752 ;; Parameters:    Size  Location     Type
 22753 ;;		None
 22754 ;; Auto vars:     Size  Location     Type
 22755 ;;		None
 22756 ;; Return value:  Size  Location     Type
 22757 ;;                  1  [STACK] void 
 22758 ;; Registers used:
 22759 ;;		wreg, status,2
 22760 ;; Tracked objects:
 22761 ;;		On entry : 3F/39
 22762 ;;		On exit  : 3F/3F
 22763 ;;		Unchanged: 0/0
 22764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22769 ;;Total ram usage:        0 bytes
 22770 ;; Hardware stack levels used:    1
 22771 ;; Hardware stack levels required when called:    6
 22772 ;; This function calls:
 22773 ;;		Nothing
 22774 ;; This function is called by:
 22775 ;;		_SYSTEM_Initialize
 22776 ;; This function uses a reentrant model
 22777 ;;
 22778                           
 22779                           	psect	text100
 22780  01871C                     __ptext100:
 22781                           	opt callstack 0
 22782  01871C                     _PWM8_Initialize:
 22783                           	opt callstack 23
 22784                           
 22785                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22786                           
 22787                           ; BSR set to: 61
 22788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22789                           ;incstack = 0
 22790  01871C  0E80               	movlw	128
 22791  01871E  6E62               	movwf	98,c	;volatile
 22792                           
 22793                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22794  018720  6A61               	clrf	97,c	;volatile
 22795                           
 22796                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22797  018722  0E40               	movlw	64
 22798  018724  6E60               	movwf	96,c	;volatile
 22799                           
 22800                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22801  018726  013F               	movlb	63	; () banked
 22802  018728  515F               	movf	95,w,b	;volatile
 22803  01872A  0B3F               	andlw	-193
 22804  01872C  0940               	iorlw	64
 22805  01872E  6F5F               	movwf	95,b	;volatile
 22806                           
 22807                           ; BSR set to: 63
 22808                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22809  018730  0012               	return		;funcret
 22810  018732                     __end_of_PWM8_Initialize:
 22811                           	opt callstack 0
 22812                           
 22813 ;; *************** function _PMD_Initialize *****************
 22814 ;; Defined at:
 22815 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22816 ;; Parameters:    Size  Location     Type
 22817 ;;		None
 22818 ;; Auto vars:     Size  Location     Type
 22819 ;;		None
 22820 ;; Return value:  Size  Location     Type
 22821 ;;                  1  [STACK] void 
 22822 ;; Registers used:
 22823 ;;		None
 22824 ;; Tracked objects:
 22825 ;;		On entry : 3F/39
 22826 ;;		On exit  : 3F/39
 22827 ;;		Unchanged: 0/0
 22828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22833 ;;Total ram usage:        0 bytes
 22834 ;; Hardware stack levels used:    1
 22835 ;; Hardware stack levels required when called:    6
 22836 ;; This function calls:
 22837 ;;		Nothing
 22838 ;; This function is called by:
 22839 ;;		_SYSTEM_Initialize
 22840 ;; This function uses a reentrant model
 22841 ;;
 22842                           
 22843                           	psect	text101
 22844  018748                     __ptext101:
 22845                           	opt callstack 0
 22846  018748                     _PMD_Initialize:
 22847                           	opt callstack 23
 22848                           
 22849                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22850                           
 22851                           ; BSR set to: 63
 22852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22853                           ;incstack = 0
 22854  018748  0139               	movlb	57	; () banked
 22855  01874A  6BC0               	clrf	192,b	;volatile
 22856                           
 22857                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22858  01874C  6BC1               	clrf	193,b	;volatile
 22859                           
 22860                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22861  01874E  6BC2               	clrf	194,b	;volatile
 22862                           
 22863                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22864  018750  6BC3               	clrf	195,b	;volatile
 22865                           
 22866                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22867  018752  6BC4               	clrf	196,b	;volatile
 22868                           
 22869                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22870  018754  6BC5               	clrf	197,b	;volatile
 22871                           
 22872                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22873  018756  6BC6               	clrf	198,b	;volatile
 22874                           
 22875                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22876  018758  6BC7               	clrf	199,b	;volatile
 22877                           
 22878                           ; BSR set to: 57
 22879                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22880  01875A  0012               	return		;funcret
 22881  01875C                     __end_of_PMD_Initialize:
 22882                           	opt callstack 0
 22883                           
 22884 ;; *************** function _PIN_MANAGER_Initialize *****************
 22885 ;; Defined at:
 22886 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22887 ;; Parameters:    Size  Location     Type
 22888 ;;		None
 22889 ;; Auto vars:     Size  Location     Type
 22890 ;;		None
 22891 ;; Return value:  Size  Location     Type
 22892 ;;                  1  [STACK] void 
 22893 ;; Registers used:
 22894 ;;		wreg, status,2
 22895 ;; Tracked objects:
 22896 ;;		On entry : 3F/39
 22897 ;;		On exit  : 3F/3A
 22898 ;;		Unchanged: 0/0
 22899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22904 ;;Total ram usage:        0 bytes
 22905 ;; Hardware stack levels used:    1
 22906 ;; Hardware stack levels required when called:    6
 22907 ;; This function calls:
 22908 ;;		Nothing
 22909 ;; This function is called by:
 22910 ;;		_SYSTEM_Initialize
 22911 ;; This function uses a reentrant model
 22912 ;;
 22913                           
 22914                           	psect	text102
 22915  017422                     __ptext102:
 22916                           	opt callstack 0
 22917  017422                     _PIN_MANAGER_Initialize:
 22918                           	opt callstack 23
 22919                           
 22920                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22921                           
 22922                           ; BSR set to: 57
 22923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22924                           ;incstack = 0
 22925  017422  0E07               	movlw	7
 22926  017424  6EBE               	movwf	190,c	;volatile
 22927                           
 22928                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 22929  017426  0E80               	movlw	128
 22930  017428  6EBD               	movwf	189,c	;volatile
 22931                           
 22932                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22933  01742A  6ABA               	clrf	186,c	;volatile
 22934                           
 22935                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22936  01742C  6ABF               	clrf	191,c	;volatile
 22937                           
 22938                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22939  01742E  6ABB               	clrf	187,c	;volatile
 22940                           
 22941                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22942  017430  0E07               	movlw	7
 22943  017432  6EBC               	movwf	188,c	;volatile
 22944                           
 22945                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22946  017434  6AC6               	clrf	198,c	;volatile
 22947                           
 22948                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22949  017436  0E0F               	movlw	15
 22950  017438  6EC7               	movwf	199,c	;volatile
 22951                           
 22952                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22953  01743A  68C2               	setf	194,c	;volatile
 22954                           
 22955                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22956  01743C  0EBF               	movlw	191
 22957  01743E  6EC3               	movwf	195,c	;volatile
 22958                           
 22959                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22960  017440  0E90               	movlw	144
 22961  017442  6EC4               	movwf	196,c	;volatile
 22962                           
 22963                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22964  017444  0E0C               	movlw	12
 22965  017446  6EC5               	movwf	197,c	;volatile
 22966                           
 22967                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22968  017448  013A               	movlb	58	; () banked
 22969  01744A  6B70               	clrf	112,b	;volatile
 22970                           
 22971                           ; BSR set to: 58
 22972                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22973  01744C  6B60               	clrf	96,b	;volatile
 22974                           
 22975                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22976  01744E  0E3C               	movlw	60
 22977  017450  6F50               	movwf	80,b	;volatile
 22978                           
 22979                           ; BSR set to: 58
 22980                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22981  017452  6B80               	clrf	128,b	;volatile
 22982                           
 22983                           ; BSR set to: 58
 22984                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22985  017454  6B90               	clrf	144,b	;volatile
 22986                           
 22987                           ; BSR set to: 58
 22988                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22989  017456  6940               	setf	64,b	;volatile
 22990                           
 22991                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22992  017458  0E0C               	movlw	12
 22993  01745A  6F71               	movwf	113,b	;volatile
 22994                           
 22995                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22996  01745C  0E0F               	movlw	15
 22997  01745E  6F91               	movwf	145,b	;volatile
 22998                           
 22999                           ; BSR set to: 58
 23000                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23001  017460  6B81               	clrf	129,b	;volatile
 23002                           
 23003                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 23004  017462  0E83               	movlw	131
 23005  017464  6F51               	movwf	81,b	;volatile
 23006                           
 23007                           ; BSR set to: 58
 23008                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23009  017466  6B41               	clrf	65,b	;volatile
 23010                           
 23011                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 23012  017468  0E97               	movlw	151
 23013  01746A  6F61               	movwf	97,b	;volatile
 23014                           
 23015                           ; BSR set to: 58
 23016                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 23017  01746C  6B82               	clrf	130,b	;volatile
 23018                           
 23019                           ; BSR set to: 58
 23020                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 23021  01746E  6B92               	clrf	146,b	;volatile
 23022                           
 23023                           ; BSR set to: 58
 23024                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 23025  017470  6B42               	clrf	66,b	;volatile
 23026                           
 23027                           ; BSR set to: 58
 23028                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 23029  017472  6B52               	clrf	82,b	;volatile
 23030                           
 23031                           ; BSR set to: 58
 23032                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 23033  017474  6B62               	clrf	98,b	;volatile
 23034                           
 23035                           ; BSR set to: 58
 23036                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 23037  017476  6B72               	clrf	114,b	;volatile
 23038                           
 23039                           ; BSR set to: 58
 23040                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 23041  017478  6943               	setf	67,b	;volatile
 23042                           
 23043                           ; BSR set to: 58
 23044                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 23045  01747A  6953               	setf	83,b	;volatile
 23046                           
 23047                           ; BSR set to: 58
 23048                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 23049  01747C  6963               	setf	99,b	;volatile
 23050                           
 23051                           ; BSR set to: 58
 23052                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 23053  01747E  6973               	setf	115,b	;volatile
 23054                           
 23055                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 23056  017480  0E07               	movlw	7
 23057  017482  6F83               	movwf	131,b	;volatile
 23058                           
 23059                           ; BSR set to: 58
 23060                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 23061  017484  6993               	setf	147,b	;volatile
 23062                           
 23063                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 23064  017486  0E0F               	movlw	15
 23065  017488  6FE8               	movwf	232,b	;volatile
 23066                           
 23067                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 23068  01748A  0E13               	movlw	19
 23069  01748C  6FDE               	movwf	222,b	;volatile
 23070                           
 23071                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 23072  01748E  0E16               	movlw	22
 23073  017490  6F0E               	movwf	14,b	;volatile
 23074                           
 23075                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 23076  017492  0E1E               	movlw	30
 23077  017494  6F13               	movwf	19,b	;volatile
 23078                           
 23079                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 23080  017496  0E08               	movlw	8
 23081  017498  6FC0               	movwf	192,b	;volatile
 23082                           
 23083                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 23084  01749A  0E10               	movlw	16
 23085  01749C  6F19               	movwf	25,b	;volatile
 23086                           
 23087                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 23088  01749E  0E09               	movlw	9
 23089  0174A0  6FC1               	movwf	193,b	;volatile
 23090                           
 23091                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 23092  0174A2  0E1F               	movlw	31
 23093  0174A4  6F15               	movwf	21,b	;volatile
 23094                           
 23095                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 23096  0174A6  0E13               	movlw	19
 23097  0174A8  6F16               	movwf	22,b	;volatile
 23098                           
 23099                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 23100  0174AA  0E17               	movlw	23
 23101  0174AC  6FE5               	movwf	229,b	;volatile
 23102                           
 23103                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 23104  0174AE  0E14               	movlw	20
 23105  0174B0  6FDF               	movwf	223,b	;volatile
 23106                           
 23107                           ; BSR set to: 58
 23108                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 23109  0174B2  0012               	return		;funcret
 23110  0174B4                     __end_of_PIN_MANAGER_Initialize:
 23111                           	opt callstack 0
 23112                           
 23113 ;; *************** function _OSCILLATOR_Initialize *****************
 23114 ;; Defined at:
 23115 ;;		line 71 in file "mcc_generated_files/mcc.c"
 23116 ;; Parameters:    Size  Location     Type
 23117 ;;		None
 23118 ;; Auto vars:     Size  Location     Type
 23119 ;;		None
 23120 ;; Return value:  Size  Location     Type
 23121 ;;                  1  [STACK] void 
 23122 ;; Registers used:
 23123 ;;		wreg, status,2
 23124 ;; Tracked objects:
 23125 ;;		On entry : 3F/3A
 23126 ;;		On exit  : 3F/39
 23127 ;;		Unchanged: 0/0
 23128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23133 ;;Total ram usage:        0 bytes
 23134 ;; Hardware stack levels used:    1
 23135 ;; Hardware stack levels required when called:    6
 23136 ;; This function calls:
 23137 ;;		Nothing
 23138 ;; This function is called by:
 23139 ;;		_SYSTEM_Initialize
 23140 ;; This function uses a reentrant model
 23141 ;;
 23142                           
 23143                           	psect	text103
 23144  018732                     __ptext103:
 23145                           	opt callstack 0
 23146  018732                     _OSCILLATOR_Initialize:
 23147                           	opt callstack 23
 23148                           
 23149                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 23150                           
 23151                           ; BSR set to: 58
 23152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23153                           ;incstack = 0
 23154  018732  0E20               	movlw	32
 23155  018734  0139               	movlb	57	; () banked
 23156  018736  6FD9               	movwf	217,b	;volatile
 23157                           
 23158                           ; BSR set to: 57
 23159                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 23160  018738  6BDB               	clrf	219,b	;volatile
 23161                           
 23162                           ; BSR set to: 57
 23163                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 23164  01873A  6BDD               	clrf	221,b	;volatile
 23165                           
 23166                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 23167  01873C  0E02               	movlw	2
 23168  01873E  6FDF               	movwf	223,b	;volatile
 23169                           
 23170                           ; BSR set to: 57
 23171                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 23172  018740  6BDE               	clrf	222,b	;volatile
 23173  018742                     l171:
 23174                           
 23175                           ; BSR set to: 57
 23176                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 23177  018742  B1DC               	btfsc	220,0,b	;volatile
 23178  018744  0012               	return	
 23179  018746  D7FD               	goto	l171
 23180  018748                     __end_of_OSCILLATOR_Initialize:
 23181                           	opt callstack 0
 23182                           
 23183 ;; *************** function _INTERRUPT_Initialize *****************
 23184 ;; Defined at:
 23185 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23186 ;; Parameters:    Size  Location     Type
 23187 ;;		None
 23188 ;; Auto vars:     Size  Location     Type
 23189 ;;  state           1  [STACK] _Bool 
 23190 ;; Return value:  Size  Location     Type
 23191 ;;                  1  [STACK] void 
 23192 ;; Registers used:
 23193 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 23194 ;; Tracked objects:
 23195 ;;		On entry : 0/0
 23196 ;;		On exit  : 3F/39
 23197 ;;		Unchanged: 0/0
 23198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23203 ;;Total ram usage:        0 bytes
 23204 ;; Hardware stack levels used:    1
 23205 ;; Hardware stack levels required when called:    6
 23206 ;; This function calls:
 23207 ;;		Nothing
 23208 ;; This function is called by:
 23209 ;;		_SYSTEM_Initialize
 23210 ;; This function uses a reentrant model
 23211 ;;
 23212                           
 23213                           	psect	text104
 23214  017878                     __ptext104:
 23215                           	opt callstack 0
 23216  017878                     _INTERRUPT_Initialize:
 23217                           	opt callstack 0
 23218                           
 23219                           ; BSR set to: 57
 23220                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23221  017878  52E6               	movf	postinc1,f,c
 23222                           
 23223                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 23224                           
 23225                           ;incstack = 0
 23226  01787A  8AD2               	bsf	210,5,c	;volatile
 23227                           
 23228                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 23229  01787C  AED2               	btfss	16338,7,c	;volatile
 23230  01787E  D003               	goto	u7920
 23231  017880  6A3D               	clrf	(btemp+11)^0,c
 23232  017882  2A3D               	incf	(btemp+11)^0,f,c
 23233  017884  D001               	goto	u7938
 23234  017886                     u7920:
 23235  017886  6A3D               	clrf	(btemp+11)^0,c
 23236  017888                     u7938:
 23237                           
 23238                           ;stkvar	_state @ sp[(-1)+0]
 23239  017888  0EFF               	movlw	-1
 23240  01788A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 23241                           
 23242                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23243  017890  9ED2               	bcf	16338,7,c	;volatile
 23244                           
 23245                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23246  017892  0E55               	movlw	85
 23247  017894  6ED4               	movwf	212,c	;volatile
 23248                           
 23249                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23250  017896  0EAA               	movlw	170
 23251  017898  6ED4               	movwf	212,c	;volatile
 23252                           
 23253                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23254  01789A  90D4               	bcf	212,0,c	;volatile
 23255                           
 23256                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23257  01789C  0138               	movlb	56	; () banked
 23258  01789E  6B9F               	clrf	159,b	;volatile
 23259                           
 23260                           ; BSR set to: 56
 23261                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23262  0178A0  6B9E               	clrf	158,b	;volatile
 23263                           
 23264                           ; BSR set to: 56
 23265                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23266  0178A2  0E08               	movlw	8
 23267  0178A4  6F9D               	movwf	157,b	;volatile
 23268                           
 23269                           ; BSR set to: 56
 23270                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23271  0178A6  0E55               	movlw	85
 23272  0178A8  6ED4               	movwf	212,c	;volatile
 23273                           
 23274                           ; BSR set to: 56
 23275                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 23276  0178AA  0EAA               	movlw	170
 23277  0178AC  6ED4               	movwf	212,c	;volatile
 23278                           
 23279                           ; BSR set to: 56
 23280                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 23281  0178AE  80D4               	bsf	212,0,c	;volatile
 23282                           
 23283                           ; BSR set to: 56
 23284                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 23285                           ;stkvar	_state @ sp[(-1)+0]
 23286  0178B0  0EFF               	movlw	-1
 23287  0178B2  B0E3               	btfsc	plusw1,0,c
 23288  0178B4  D002               	bra	u7945
 23289  0178B6  9ED2               	bcf	16338,7,c	;volatile
 23290  0178B8  D001               	bra	u7946
 23291  0178BA                     u7945:
 23292  0178BA  8ED2               	bsf	16338,7,c	;volatile
 23293  0178BC                     u7946:
 23294                           
 23295                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 23296  0178BC  0139               	movlb	57	; () banked
 23297  0178BE  8782               	bsf	130,3,b	;volatile
 23298                           
 23299                           ; BSR set to: 57
 23300                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 23301  0178C0  8382               	bsf	130,1,b	;volatile
 23302                           
 23303                           ; BSR set to: 57
 23304                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 23305  0178C2  8182               	bsf	130,0,b	;volatile
 23306                           
 23307                           ; BSR set to: 57
 23308                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 23309  0178C4  8582               	bsf	130,2,b	;volatile
 23310                           
 23311                           ; BSR set to: 57
 23312                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 23313  0178C6  8786               	bsf	134,3,b	;volatile
 23314                           
 23315                           ; BSR set to: 57
 23316                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 23317  0178C8  8586               	bsf	134,2,b	;volatile
 23318                           
 23319                           ; BSR set to: 57
 23320                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 23321  0178CA  8983               	bsf	131,4,b	;volatile
 23322                           
 23323                           ; BSR set to: 57
 23324                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 23325  0178CC  8783               	bsf	131,3,b	;volatile
 23326                           
 23327                           ; BSR set to: 57
 23328                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 23329  0178CE  8181               	bsf	129,0,b	;volatile
 23330                           
 23331                           ; BSR set to: 57
 23332                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 23333  0178D0  9185               	bcf	133,0,b	;volatile
 23334                           
 23335                           ; BSR set to: 57
 23336                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 23337  0178D2  8189               	bsf	137,0,b	;volatile
 23338                           
 23339                           ; BSR set to: 57
 23340                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 23341  0178D4  9D88               	bcf	136,6,b	;volatile
 23342                           
 23343                           ; BSR set to: 57
 23344                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 23345  0178D6  8581               	bsf	129,2,b	;volatile
 23346                           
 23347                           ; BSR set to: 57
 23348                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 23349  0178D8  8781               	bsf	129,3,b	;volatile
 23350                           
 23351                           ; BSR set to: 57
 23352                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 23353  0178DA  52E5               	movf	postdec1,f,c
 23354  0178DC  0012               	return		;funcret
 23355  0178DE                     __end_of_INTERRUPT_Initialize:
 23356                           	opt callstack 0
 23357                           
 23358 ;; *************** function _FVR_Initialize *****************
 23359 ;; Defined at:
 23360 ;;		line 58 in file "mcc_generated_files/fvr.c"
 23361 ;; Parameters:    Size  Location     Type
 23362 ;;		None
 23363 ;; Auto vars:     Size  Location     Type
 23364 ;;		None
 23365 ;; Return value:  Size  Location     Type
 23366 ;;                  1  [STACK] void 
 23367 ;; Registers used:
 23368 ;;		wreg, status,2
 23369 ;; Tracked objects:
 23370 ;;		On entry : 3F/39
 23371 ;;		On exit  : 3F/3E
 23372 ;;		Unchanged: 0/0
 23373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23378 ;;Total ram usage:        0 bytes
 23379 ;; Hardware stack levels used:    1
 23380 ;; Hardware stack levels required when called:    6
 23381 ;; This function calls:
 23382 ;;		Nothing
 23383 ;; This function is called by:
 23384 ;;		_SYSTEM_Initialize
 23385 ;; This function uses a reentrant model
 23386 ;;
 23387                           
 23388                           	psect	text105
 23389  018816                     __ptext105:
 23390                           	opt callstack 0
 23391  018816                     _FVR_Initialize:
 23392                           	opt callstack 23
 23393                           
 23394                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 23395                           
 23396                           ; BSR set to: 57
 23397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23398                           ;incstack = 0
 23399  018816  0EAF               	movlw	175
 23400  018818  013E               	movlb	62	; () banked
 23401  01881A  6FC1               	movwf	193,b	;volatile
 23402                           
 23403                           ; BSR set to: 62
 23404                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23405  01881C  0012               	return		;funcret
 23406  01881E                     __end_of_FVR_Initialize:
 23407                           	opt callstack 0
 23408                           
 23409 ;; *************** function _EXT_INT_Initialize *****************
 23410 ;; Defined at:
 23411 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23412 ;; Parameters:    Size  Location     Type
 23413 ;;		None
 23414 ;; Auto vars:     Size  Location     Type
 23415 ;;		None
 23416 ;; Return value:  Size  Location     Type
 23417 ;;                  1  [STACK] void 
 23418 ;; Registers used:
 23419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23420 ;; Tracked objects:
 23421 ;;		On entry : 3F/3F
 23422 ;;		On exit  : 3F/39
 23423 ;;		Unchanged: 0/0
 23424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23429 ;;Total ram usage:        0 bytes
 23430 ;; Hardware stack levels used:    1
 23431 ;; Hardware stack levels required when called:    7
 23432 ;; This function calls:
 23433 ;;		_INT0_SetInterruptHandler
 23434 ;;		_INT1_SetInterruptHandler
 23435 ;; This function is called by:
 23436 ;;		_SYSTEM_Initialize
 23437 ;; This function uses a reentrant model
 23438 ;;
 23439                           
 23440                           	psect	text106
 23441  01803A                     __ptext106:
 23442                           	opt callstack 0
 23443  01803A                     _EXT_INT_Initialize:
 23444                           	opt callstack 22
 23445                           
 23446                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23447                           
 23448                           ; BSR set to: 62
 23449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23450                           ;incstack = 0
 23451  01803A  0139               	movlb	57	; () banked
 23452  01803C  91A1               	bcf	161,0,b	;volatile
 23453                           
 23454                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23455  01803E  90D2               	bcf	210,0,c	;volatile
 23456                           
 23457                           ; BSR set to: 57
 23458                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23459  018040  0E38               	movlw	low _INT0_DefaultInterruptHandler
 23460  018042  6EE6               	movwf	postinc1,c
 23461  018044  0E88               	movlw	high _INT0_DefaultInterruptHandler
 23462  018046  6EE6               	movwf	postinc1,c
 23463  018048  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23464  01804A  6EE6               	movwf	postinc1,c
 23465  01804C  ECE1  F0C1         	call	_INT0_SetInterruptHandler	;wreg free
 23466                           
 23467                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23468  018050  0139               	movlb	57	; () banked
 23469  018052  8191               	bsf	145,0,b	;volatile
 23470                           
 23471                           ; BSR set to: 57
 23472                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23473  018054  91A5               	bcf	165,0,b	;volatile
 23474                           
 23475                           ; BSR set to: 57
 23476                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23477  018056  92D2               	bcf	210,1,c	;volatile
 23478                           
 23479                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23480  018058  0E36               	movlw	low _INT1_DefaultInterruptHandler
 23481  01805A  6EE6               	movwf	postinc1,c
 23482  01805C  0E88               	movlw	high _INT1_DefaultInterruptHandler
 23483  01805E  6EE6               	movwf	postinc1,c
 23484  018060  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23485  018062  6EE6               	movwf	postinc1,c
 23486  018064  ECCD  F0C1         	call	_INT1_SetInterruptHandler	;wreg free
 23487                           
 23488                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23489  018068  0139               	movlb	57	; () banked
 23490  01806A  8195               	bsf	149,0,b	;volatile
 23491                           
 23492                           ; BSR set to: 57
 23493                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23494  01806C  0012               	return		;funcret
 23495  01806E                     __end_of_EXT_INT_Initialize:
 23496                           	opt callstack 0
 23497                           
 23498 ;; *************** function _INT1_SetInterruptHandler *****************
 23499 ;; Defined at:
 23500 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23501 ;; Parameters:    Size  Location     Type
 23502 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23503 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23504 ;; Auto vars:     Size  Location     Type
 23505 ;;		None
 23506 ;; Return value:  Size  Location     Type
 23507 ;;                  1  [STACK] void 
 23508 ;; Registers used:
 23509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23510 ;; Tracked objects:
 23511 ;;		On entry : 3F/39
 23512 ;;		On exit  : 0/0
 23513 ;;		Unchanged: 0/0
 23514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23519 ;;Total ram usage:        0 bytes
 23520 ;; Hardware stack levels used:    1
 23521 ;; Hardware stack levels required when called:    6
 23522 ;; This function calls:
 23523 ;;		Nothing
 23524 ;; This function is called by:
 23525 ;;		_EXT_INT_Initialize
 23526 ;;		_start_switch_handler
 23527 ;; This function uses a reentrant model
 23528 ;;
 23529                           
 23530                           	psect	text107
 23531  01839A                     __ptext107:
 23532                           	opt callstack 0
 23533  01839A                     _INT1_SetInterruptHandler:
 23534                           	opt callstack 23
 23535                           
 23536                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 23537                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23538                           
 23539                           ; BSR set to: 57
 23540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23541                           ;incstack = 0
 23542  01839A  50E1               	movf	fsr1l,w,c
 23543  01839C  0FFD               	addlw	-3
 23544  01839E  6ED9               	movwf	fsr2l,c
 23545  0183A0  50E2               	movf	fsr1h,w,c
 23546  0183A2  6EDA               	movwf	fsr2h,c
 23547  0183A4  0EFF               	movlw	255
 23548  0183A6  22DA               	addwfc	fsr2h,f,c
 23549  0183A8  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 23550  0183AE  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 23551  0183B4  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 23552                           
 23553                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23554  0183BA  52E5               	movf	postdec1,f,c
 23555  0183BC  52E5               	movf	postdec1,f,c
 23556  0183BE  52E5               	movf	postdec1,f,c
 23557  0183C0  0012               	return		;funcret
 23558  0183C2                     __end_of_INT1_SetInterruptHandler:
 23559                           	opt callstack 0
 23560                           
 23561 ;; *************** function _INT0_SetInterruptHandler *****************
 23562 ;; Defined at:
 23563 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 23564 ;; Parameters:    Size  Location     Type
 23565 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23566 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23567 ;; Auto vars:     Size  Location     Type
 23568 ;;		None
 23569 ;; Return value:  Size  Location     Type
 23570 ;;                  1  [STACK] void 
 23571 ;; Registers used:
 23572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23573 ;; Tracked objects:
 23574 ;;		On entry : 3F/39
 23575 ;;		On exit  : 0/0
 23576 ;;		Unchanged: 0/0
 23577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23582 ;;Total ram usage:        0 bytes
 23583 ;; Hardware stack levels used:    1
 23584 ;; Hardware stack levels required when called:    6
 23585 ;; This function calls:
 23586 ;;		Nothing
 23587 ;; This function is called by:
 23588 ;;		_EXT_INT_Initialize
 23589 ;; This function uses a reentrant model
 23590 ;;
 23591                           
 23592                           	psect	text108
 23593  0183C2                     __ptext108:
 23594                           	opt callstack 0
 23595  0183C2                     _INT0_SetInterruptHandler:
 23596                           	opt callstack 22
 23597                           
 23598                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 23599                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23600                           
 23601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23602                           ;incstack = 0
 23603  0183C2  50E1               	movf	fsr1l,w,c
 23604  0183C4  0FFD               	addlw	-3
 23605  0183C6  6ED9               	movwf	fsr2l,c
 23606  0183C8  50E2               	movf	fsr1h,w,c
 23607  0183CA  6EDA               	movwf	fsr2h,c
 23608  0183CC  0EFF               	movlw	255
 23609  0183CE  22DA               	addwfc	fsr2h,f,c
 23610  0183D0  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 23611  0183D6  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 23612  0183DC  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 23613                           
 23614                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23615  0183E2  52E5               	movf	postdec1,f,c
 23616  0183E4  52E5               	movf	postdec1,f,c
 23617  0183E6  52E5               	movf	postdec1,f,c
 23618  0183E8  0012               	return		;funcret
 23619  0183EA                     __end_of_INT0_SetInterruptHandler:
 23620                           	opt callstack 0
 23621                           
 23622 ;; *************** function _DMA2_Initialize *****************
 23623 ;; Defined at:
 23624 ;;		line 61 in file "mcc_generated_files/dma2.c"
 23625 ;; Parameters:    Size  Location     Type
 23626 ;;		None
 23627 ;; Auto vars:     Size  Location     Type
 23628 ;;		None
 23629 ;; Return value:  Size  Location     Type
 23630 ;;                  1  [STACK] void 
 23631 ;; Registers used:
 23632 ;;		wreg, status,2
 23633 ;; Tracked objects:
 23634 ;;		On entry : 3F/3D
 23635 ;;		On exit  : 3F/3B
 23636 ;;		Unchanged: 0/0
 23637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23642 ;;Total ram usage:        0 bytes
 23643 ;; Hardware stack levels used:    1
 23644 ;; Hardware stack levels required when called:    6
 23645 ;; This function calls:
 23646 ;;		Nothing
 23647 ;; This function is called by:
 23648 ;;		_SYSTEM_Initialize
 23649 ;; This function uses a reentrant model
 23650 ;;
 23651                           
 23652                           	psect	text109
 23653  017B7E                     __ptext109:
 23654                           	opt callstack 0
 23655  017B7E                     _DMA2_Initialize:
 23656                           	opt callstack 23
 23657                           
 23658                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 23659                           
 23660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23661                           ;incstack = 0
 23662  017B7E  0E00               	movlw	0
 23663  017B80  013B               	movlb	59	; () banked
 23664  017B82  6FD9               	movwf	217,b	;volatile
 23665  017B84  0E10               	movlw	16
 23666  017B86  6FDA               	movwf	218,b	;volatile
 23667  017B88  0E00               	movlw	0
 23668  017B8A  6FDB               	movwf	219,b	;volatile
 23669                           
 23670                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 23671  017B8C  0E3F               	movlw	63
 23672  017B8E  6FD1               	movwf	209,b	;volatile
 23673  017B90  0EBB               	movlw	187
 23674  017B92  6FD0               	movwf	208,b	;volatile
 23675                           
 23676                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 23677  017B94  0E03               	movlw	3
 23678  017B96  6FDD               	movwf	221,b	;volatile
 23679                           
 23680                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 23681  017B98  0E00               	movlw	0
 23682  017B9A  6FD8               	movwf	216,b	;volatile
 23683  017B9C  0E01               	movlw	1
 23684  017B9E  6FD7               	movwf	215,b	;volatile
 23685                           
 23686                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 23687  017BA0  0E00               	movlw	0
 23688  017BA2  6FCF               	movwf	207,b	;volatile
 23689  017BA4  0E01               	movlw	1
 23690  017BA6  6FCE               	movwf	206,b	;volatile
 23691                           
 23692                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 23693  017BA8  0E46               	movlw	70
 23694  017BAA  6FDF               	movwf	223,b	;volatile
 23695                           
 23696                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 23697  017BAC  0E3D               	movlw	61
 23698  017BAE  6FDE               	movwf	222,b	;volatile
 23699                           
 23700                           ; BSR set to: 59
 23701                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 23702  017BB0  0139               	movlb	57	; () banked
 23703  017BB2  97A5               	bcf	165,3,b	;volatile
 23704                           
 23705                           ; BSR set to: 57
 23706                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 23707  017BB4  95A5               	bcf	165,2,b	;volatile
 23708                           
 23709                           ; BSR set to: 57
 23710                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 23711  017BB6  9BA5               	bcf	165,5,b	;volatile
 23712                           
 23713                           ; BSR set to: 57
 23714                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 23715  017BB8  99A5               	bcf	165,4,b	;volatile
 23716                           
 23717                           ; BSR set to: 57
 23718                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 23719  017BBA  9795               	bcf	149,3,b	;volatile
 23720                           
 23721                           ; BSR set to: 57
 23722                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 23723  017BBC  9595               	bcf	149,2,b	;volatile
 23724                           
 23725                           ; BSR set to: 57
 23726                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 23727  017BBE  9B95               	bcf	149,5,b	;volatile
 23728                           
 23729                           ; BSR set to: 57
 23730                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 23731  017BC0  9995               	bcf	149,4,b	;volatile
 23732  017BC2  9ED2               	bcf	16338,7,c	;# 
 23733  017BC4  0139               	banksel	14831	;# 
 23734  017BC6  0E55               	movlw	85	;# 
 23735  017BC8  6FEF               	movwf	14831,b	;# 
 23736  017BCA  0EAA               	movlw	170	;# 
 23737  017BCC  6FEF               	movwf	14831,b	;# 
 23738  017BCE  81EF               	bsf	14831,0,b	;# 
 23739  017BD0  8ED2               	bsf	16338,7,c	;# 
 23740                           
 23741                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 23742  017BD2  013B               	movlb	59	; () banked
 23743  017BD4  6BDC               	clrf	220,b	;volatile
 23744                           
 23745                           ; BSR set to: 59
 23746                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23747  017BD6  0012               	return		;funcret
 23748  017BD8                     __end_of_DMA2_Initialize:
 23749                           	opt callstack 0
 23750                           
 23751 ;; *************** function _DMA1_Initialize *****************
 23752 ;; Defined at:
 23753 ;;		line 86 in file "mcc_generated_files/dma1.c"
 23754 ;; Parameters:    Size  Location     Type
 23755 ;;		None
 23756 ;; Auto vars:     Size  Location     Type
 23757 ;;		None
 23758 ;; Return value:  Size  Location     Type
 23759 ;;                  1  [STACK] void 
 23760 ;; Registers used:
 23761 ;;		wreg, status,2
 23762 ;; Tracked objects:
 23763 ;;		On entry : 3F/3B
 23764 ;;		On exit  : 3F/3B
 23765 ;;		Unchanged: 0/0
 23766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23771 ;;Total ram usage:        0 bytes
 23772 ;; Hardware stack levels used:    1
 23773 ;; Hardware stack levels required when called:    6
 23774 ;; This function calls:
 23775 ;;		Nothing
 23776 ;; This function is called by:
 23777 ;;		_SYSTEM_Initialize
 23778 ;; This function uses a reentrant model
 23779 ;;
 23780                           
 23781                           	psect	text110
 23782  01773C                     __ptext110:
 23783                           	opt callstack 0
 23784  01773C                     _DMA1_Initialize:
 23785                           	opt callstack 23
 23786                           
 23787                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23788                           
 23789                           ; BSR set to: 59
 23790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23791                           ;incstack = 0
 23792  01773C  0E00               	movlw	0
 23793  01773E  013B               	movlb	59	; () banked
 23794  017740  6FF9               	movwf	249,b	;volatile
 23795  017742  0E10               	movlw	16
 23796  017744  6FFA               	movwf	250,b	;volatile
 23797  017746  0E00               	movlw	0
 23798  017748  6FFB               	movwf	251,b	;volatile
 23799                           
 23800                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23801  01774A  0E3D               	movlw	61
 23802  01774C  6FF1               	movwf	241,b	;volatile
 23803  01774E  0E11               	movlw	17
 23804  017750  6FF0               	movwf	240,b	;volatile
 23805                           
 23806                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23807  017752  0E03               	movlw	3
 23808  017754  6FFD               	movwf	253,b	;volatile
 23809                           
 23810                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23811  017756  0E00               	movlw	0
 23812  017758  6FF8               	movwf	248,b	;volatile
 23813  01775A  0E01               	movlw	1
 23814  01775C  6FF7               	movwf	247,b	;volatile
 23815                           
 23816                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23817  01775E  0E00               	movlw	0
 23818  017760  6FEF               	movwf	239,b	;volatile
 23819  017762  0E01               	movlw	1
 23820  017764  6FEE               	movwf	238,b	;volatile
 23821                           
 23822                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23823  017766  0E15               	movlw	21
 23824  017768  6FFF               	movwf	255,b	;volatile
 23825                           
 23826                           ; BSR set to: 59
 23827                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23828  01776A  6BFE               	clrf	254,b	;volatile
 23829                           
 23830                           ; BSR set to: 59
 23831                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23832  01776C  0139               	movlb	57	; () banked
 23833  01776E  93A2               	bcf	162,1,b	;volatile
 23834                           
 23835                           ; BSR set to: 57
 23836                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23837  017770  91A2               	bcf	162,0,b	;volatile
 23838                           
 23839                           ; BSR set to: 57
 23840                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23841  017772  97A2               	bcf	162,3,b	;volatile
 23842                           
 23843                           ; BSR set to: 57
 23844                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23845  017774  95A2               	bcf	162,2,b	;volatile
 23846                           
 23847                           ; BSR set to: 57
 23848                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23849  017776  8392               	bsf	146,1,b	;volatile
 23850                           
 23851                           ; BSR set to: 57
 23852                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23853  017778  8192               	bsf	146,0,b	;volatile
 23854                           
 23855                           ; BSR set to: 57
 23856                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23857  01777A  8792               	bsf	146,3,b	;volatile
 23858                           
 23859                           ; BSR set to: 57
 23860                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23861  01777C  8592               	bsf	146,2,b	;volatile
 23862                           
 23863                           ; BSR set to: 57
 23864                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23865  01777E  6BF1               	clrf	241,b	;volatile
 23866                           
 23867                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23868  017780  0E01               	movlw	1
 23869  017782  6FF2               	movwf	242,b	;volatile
 23870                           
 23871                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23872  017784  0E04               	movlw	4
 23873  017786  6FF3               	movwf	243,b	;volatile
 23874                           
 23875                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23876  017788  0E02               	movlw	2
 23877  01778A  6FF4               	movwf	244,b	;volatile
 23878                           
 23879                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23880  01778C  0E03               	movlw	3
 23881  01778E  6FF7               	movwf	247,b	;volatile
 23882  017790  9ED2               	bcf	16338,7,c	;# 
 23883  017792  0139               	banksel	14831	;# 
 23884  017794  0E55               	movlw	85	;# 
 23885  017796  6FEF               	movwf	14831,b	;# 
 23886  017798  0EAA               	movlw	170	;# 
 23887  01779A  6FEF               	movwf	14831,b	;# 
 23888  01779C  81EF               	bsf	14831,0,b	;# 
 23889  01779E  8ED2               	bsf	16338,7,c	;# 
 23890                           
 23891                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23892  0177A0  013B               	movlb	59	; () banked
 23893  0177A2  6BFC               	clrf	252,b	;volatile
 23894                           
 23895                           ; BSR set to: 59
 23896                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23897  0177A4  0012               	return		;funcret
 23898  0177A6                     __end_of_DMA1_Initialize:
 23899                           	opt callstack 0
 23900                           
 23901 ;; *************** function _CLKREF_Initialize *****************
 23902 ;; Defined at:
 23903 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23904 ;; Parameters:    Size  Location     Type
 23905 ;;		None
 23906 ;; Auto vars:     Size  Location     Type
 23907 ;;		None
 23908 ;; Return value:  Size  Location     Type
 23909 ;;                  1  [STACK] void 
 23910 ;; Registers used:
 23911 ;;		wreg, status,2
 23912 ;; Tracked objects:
 23913 ;;		On entry : 3F/3B
 23914 ;;		On exit  : 3F/3C
 23915 ;;		Unchanged: 0/0
 23916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23921 ;;Total ram usage:        0 bytes
 23922 ;; Hardware stack levels used:    1
 23923 ;; Hardware stack levels required when called:    6
 23924 ;; This function calls:
 23925 ;;		Nothing
 23926 ;; This function is called by:
 23927 ;;		_SYSTEM_Initialize
 23928 ;; This function uses a reentrant model
 23929 ;;
 23930                           
 23931                           	psect	text111
 23932  0187CA                     __ptext111:
 23933                           	opt callstack 0
 23934  0187CA                     _CLKREF_Initialize:
 23935                           	opt callstack 23
 23936                           
 23937                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23938                           
 23939                           ; BSR set to: 59
 23940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23941                           ;incstack = 0
 23942  0187CA  013C               	movlb	60	; () banked
 23943  0187CC  6BE6               	clrf	230,b	;volatile
 23944                           
 23945                           ; BSR set to: 60
 23946                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23947  0187CE  0E94               	movlw	148
 23948  0187D0  6FE5               	movwf	229,b	;volatile
 23949                           
 23950                           ; BSR set to: 60
 23951                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23952  0187D2  0012               	return		;funcret
 23953  0187D4                     __end_of_CLKREF_Initialize:
 23954                           	opt callstack 0
 23955                           
 23956 ;; *************** function _ADCC_Initialize *****************
 23957 ;; Defined at:
 23958 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23959 ;; Parameters:    Size  Location     Type
 23960 ;;		None
 23961 ;; Auto vars:     Size  Location     Type
 23962 ;;		None
 23963 ;; Return value:  Size  Location     Type
 23964 ;;                  1  [STACK] void 
 23965 ;; Registers used:
 23966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23967 ;; Tracked objects:
 23968 ;;		On entry : 3F/3E
 23969 ;;		On exit  : 0/0
 23970 ;;		Unchanged: 0/0
 23971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23976 ;;Total ram usage:        0 bytes
 23977 ;; Hardware stack levels used:    1
 23978 ;; Hardware stack levels required when called:    7
 23979 ;; This function calls:
 23980 ;;		_ADCC_SetADIInterruptHandler
 23981 ;;		_ADCC_SetADTIInterruptHandler
 23982 ;; This function is called by:
 23983 ;;		_SYSTEM_Initialize
 23984 ;; This function uses a reentrant model
 23985 ;;
 23986                           
 23987                           	psect	text112
 23988  0177A6                     __ptext112:
 23989                           	opt callstack 0
 23990  0177A6                     _ADCC_Initialize:
 23991                           	opt callstack 22
 23992                           
 23993                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23994                           
 23995                           ; BSR set to: 60
 23996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23997                           ;incstack = 0
 23998  0177A6  013E               	movlb	62	; () banked
 23999  0177A8  6BDE               	clrf	222,b	;volatile
 24000                           
 24001                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24002  0177AA  6BDF               	clrf	223,b	;volatile
 24003                           
 24004                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24005  0177AC  6BE0               	clrf	224,b	;volatile
 24006                           
 24007                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24008  0177AE  6BE1               	clrf	225,b	;volatile
 24009                           
 24010                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 24011  0177B0  6BE4               	clrf	228,b	;volatile
 24012                           
 24013                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 24014  0177B2  6BE5               	clrf	229,b	;volatile
 24015                           
 24016                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 24017  0177B4  6BEA               	clrf	234,b	;volatile
 24018                           
 24019                           ; BSR set to: 62
 24020                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 24021  0177B6  0E40               	movlw	64
 24022  0177B8  6FEC               	movwf	236,b	;volatile
 24023                           
 24024                           ; BSR set to: 62
 24025                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 24026  0177BA  6BF1               	clrf	241,b	;volatile
 24027                           
 24028                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 24029  0177BC  0E20               	movlw	32
 24030  0177BE  6FF3               	movwf	243,b	;volatile
 24031                           
 24032                           ; BSR set to: 62
 24033                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 24034  0177C0  6BF4               	clrf	244,b	;volatile
 24035                           
 24036                           ; BSR set to: 62
 24037                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 24038  0177C2  6BF5               	clrf	245,b	;volatile
 24039                           
 24040                           ; BSR set to: 62
 24041                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 24042  0177C4  6BF6               	clrf	246,b	;volatile
 24043                           
 24044                           ; BSR set to: 62
 24045                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 24046  0177C6  6BF7               	clrf	247,b	;volatile
 24047                           
 24048                           ; BSR set to: 62
 24049                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 24050  0177C8  6BF9               	clrf	249,b	;volatile
 24051                           
 24052                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 24053  0177CA  0E5B               	movlw	91
 24054  0177CC  6FFA               	movwf	250,b	;volatile
 24055                           
 24056                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 24057  0177CE  0E27               	movlw	39
 24058  0177D0  6FFB               	movwf	251,b	;volatile
 24059                           
 24060                           ; BSR set to: 62
 24061                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 24062  0177D2  6BFC               	clrf	252,b	;volatile
 24063                           
 24064                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 24065  0177D4  0E02               	movlw	2
 24066  0177D6  6FFD               	movwf	253,b	;volatile
 24067                           
 24068                           ; BSR set to: 62
 24069                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 24070  0177D8  6BFE               	clrf	254,b	;volatile
 24071                           
 24072                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 24073  0177DA  0E07               	movlw	7
 24074  0177DC  6FFF               	movwf	255,b	;volatile
 24075                           
 24076                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 24077  0177DE  0E84               	movlw	132
 24078  0177E0  6FF8               	movwf	248,b	;volatile
 24079                           
 24080                           ; BSR set to: 62
 24081                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 24082  0177E2  0139               	movlb	57	; () banked
 24083  0177E4  95A1               	bcf	161,2,b	;volatile
 24084                           
 24085                           ; BSR set to: 57
 24086                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 24087  0177E6  8591               	bsf	145,2,b	;volatile
 24088                           
 24089                           ; BSR set to: 57
 24090                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 24091  0177E8  0E3A               	movlw	low _ADCC_DefaultInterruptHandler
 24092  0177EA  6EE6               	movwf	postinc1,c
 24093  0177EC  0E88               	movlw	high _ADCC_DefaultInterruptHandler
 24094  0177EE  6EE6               	movwf	postinc1,c
 24095  0177F0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24096  0177F2  6EE6               	movwf	postinc1,c
 24097  0177F4  EC09  F0C2         	call	_ADCC_SetADIInterruptHandler	;wreg free
 24098                           
 24099                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 24100  0177F8  0139               	movlb	57	; () banked
 24101  0177FA  97A1               	bcf	161,3,b	;volatile
 24102                           
 24103                           ; BSR set to: 57
 24104                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 24105  0177FC  8791               	bsf	145,3,b	;volatile
 24106                           
 24107                           ; BSR set to: 57
 24108                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 24109  0177FE  0E3A               	movlw	low _ADCC_DefaultInterruptHandler
 24110  017800  6EE6               	movwf	postinc1,c
 24111  017802  0E88               	movlw	high _ADCC_DefaultInterruptHandler
 24112  017804  6EE6               	movwf	postinc1,c
 24113  017806  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24114  017808  6EE6               	movwf	postinc1,c
 24115  01780A  ECF5  F0C1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24116                           
 24117                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24118  01780E  0012               	return		;funcret
 24119  017810                     __end_of_ADCC_Initialize:
 24120                           	opt callstack 0
 24121                           
 24122 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24123 ;; Defined at:
 24124 ;;		line 336 in file "mcc_generated_files/adcc.c"
 24125 ;; Parameters:    Size  Location     Type
 24126 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24127 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 24128 ;; Auto vars:     Size  Location     Type
 24129 ;;		None
 24130 ;; Return value:  Size  Location     Type
 24131 ;;                  1  [STACK] void 
 24132 ;; Registers used:
 24133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24134 ;; Tracked objects:
 24135 ;;		On entry : 0/0
 24136 ;;		On exit  : 0/0
 24137 ;;		Unchanged: 0/0
 24138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24143 ;;Total ram usage:        0 bytes
 24144 ;; Hardware stack levels used:    1
 24145 ;; Hardware stack levels required when called:    6
 24146 ;; This function calls:
 24147 ;;		Nothing
 24148 ;; This function is called by:
 24149 ;;		_ADCC_Initialize
 24150 ;;		_start_adc_scan
 24151 ;; This function uses a reentrant model
 24152 ;;
 24153                           
 24154                           	psect	text113
 24155  0183EA                     __ptext113:
 24156                           	opt callstack 0
 24157  0183EA                     _ADCC_SetADTIInterruptHandler:
 24158                           	opt callstack 23
 24159                           
 24160                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 24161                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24162                           
 24163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24164                           ;incstack = 0
 24165  0183EA  50E1               	movf	fsr1l,w,c
 24166  0183EC  0FFD               	addlw	-3
 24167  0183EE  6ED9               	movwf	fsr2l,c
 24168  0183F0  50E2               	movf	fsr1h,w,c
 24169  0183F2  6EDA               	movwf	fsr2h,c
 24170  0183F4  0EFF               	movlw	255
 24171  0183F6  22DA               	addwfc	fsr2h,f,c
 24172  0183F8  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 24173  0183FE  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 24174  018404  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 24175                           
 24176                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 24177  01840A  52E5               	movf	postdec1,f,c
 24178  01840C  52E5               	movf	postdec1,f,c
 24179  01840E  52E5               	movf	postdec1,f,c
 24180  018410  0012               	return		;funcret
 24181  018412                     __end_of_ADCC_SetADTIInterruptHandler:
 24182                           	opt callstack 0
 24183                           
 24184 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 24185 ;; Defined at:
 24186 ;;		line 323 in file "mcc_generated_files/adcc.c"
 24187 ;; Parameters:    Size  Location     Type
 24188 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24189 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 24190 ;; Auto vars:     Size  Location     Type
 24191 ;;		None
 24192 ;; Return value:  Size  Location     Type
 24193 ;;                  1  [STACK] void 
 24194 ;; Registers used:
 24195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24196 ;; Tracked objects:
 24197 ;;		On entry : 6/0
 24198 ;;		On exit  : 0/0
 24199 ;;		Unchanged: 0/0
 24200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24205 ;;Total ram usage:        0 bytes
 24206 ;; Hardware stack levels used:    1
 24207 ;; Hardware stack levels required when called:    6
 24208 ;; This function calls:
 24209 ;;		Nothing
 24210 ;; This function is called by:
 24211 ;;		_ADCC_Initialize
 24212 ;;		_start_adc_scan
 24213 ;; This function uses a reentrant model
 24214 ;;
 24215                           
 24216                           	psect	text114
 24217  018412                     __ptext114:
 24218                           	opt callstack 0
 24219  018412                     _ADCC_SetADIInterruptHandler:
 24220                           	opt callstack 23
 24221                           
 24222                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 24223                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24224                           
 24225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24226                           ;incstack = 0
 24227  018412  50E1               	movf	fsr1l,w,c
 24228  018414  0FFD               	addlw	-3
 24229  018416  6ED9               	movwf	fsr2l,c
 24230  018418  50E2               	movf	fsr1h,w,c
 24231  01841A  6EDA               	movwf	fsr2h,c
 24232  01841C  0EFF               	movlw	255
 24233  01841E  22DA               	addwfc	fsr2h,f,c
 24234  018420  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 24235  018426  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 24236  01842C  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 24237                           
 24238                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24239  018432  52E5               	movf	postdec1,f,c
 24240  018434  52E5               	movf	postdec1,f,c
 24241  018436  52E5               	movf	postdec1,f,c
 24242  018438  0012               	return		;funcret
 24243  01843A                     __end_of_ADCC_SetADIInterruptHandler:
 24244                           	opt callstack 0
 24245                           
 24246 ;; *************** function _INT1_ISR *****************
 24247 ;; Defined at:
 24248 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24249 ;; Parameters:    Size  Location     Type
 24250 ;;		None
 24251 ;; Auto vars:     Size  Location     Type
 24252 ;;		None
 24253 ;; Return value:  Size  Location     Type
 24254 ;;                  1    wreg      void 
 24255 ;; Registers used:
 24256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24257 ;; Tracked objects:
 24258 ;;		On entry : 0/0
 24259 ;;		On exit  : 0/0
 24260 ;;		Unchanged: 0/0
 24261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24264 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24265 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24266 ;;Total ram usage:        4 bytes
 24267 ;; Hardware stack levels used:    1
 24268 ;; Hardware stack levels required when called:    5
 24269 ;; This function calls:
 24270 ;;		_INT1_CallBack
 24271 ;; This function is called by:
 24272 ;;		Interrupt level 1
 24273 ;; This function uses a non-reentrant model
 24274 ;;
 24275                           
 24276                           	psect	text115
 24277  017EE8                     __ptext115:
 24278                           	opt callstack 0
 24279  017EE8                     _INT1_ISR:
 24280                           	opt callstack 12
 24281                           
 24282                           ;incstack = 0
 24283  017EE8  006F FF60  F0F6    	movff	status,??_INT1_ISR
 24284  017EEE  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 24285  017EF4  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 24286  017EFA  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 24287  017F00  EE16  F000         	lfsr	1,___intlo_sp
 24288                           
 24289                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 24290  017F04  0139               	movlb	57	; () banked
 24291  017F06  91A5               	bcf	165,0,b	;volatile
 24292                           
 24293                           ; BSR set to: 57
 24294                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 24295  017F08  ECB7  F0C2         	call	_INT1_CallBack	;wreg free
 24296  017F0C  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 24297  017F12  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 24298  017F18  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 24299  017F1E  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 24300  017F24  0011               	retfie		f
 24301  017F26                     __end_of_INT1_ISR:
 24302                           	opt callstack 0
 24303                           
 24304 ;; *************** function _INT1_CallBack *****************
 24305 ;; Defined at:
 24306 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 24307 ;; Parameters:    Size  Location     Type
 24308 ;;		None
 24309 ;; Auto vars:     Size  Location     Type
 24310 ;;		None
 24311 ;; Return value:  Size  Location     Type
 24312 ;;                  1  [STACK] void 
 24313 ;; Registers used:
 24314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24315 ;; Tracked objects:
 24316 ;;		On entry : 3F/39
 24317 ;;		On exit  : 0/0
 24318 ;;		Unchanged: 0/0
 24319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24324 ;;Total ram usage:        0 bytes
 24325 ;; Hardware stack levels used:    1
 24326 ;; Hardware stack levels required when called:    4
 24327 ;; This function calls:
 24328 ;;		Absolute function
 24329 ;;		_INT1_DefaultInterruptHandler
 24330 ;;		_switch_handler
 24331 ;; This function is called by:
 24332 ;;		_INT1_ISR
 24333 ;; This function uses a reentrant model
 24334 ;;
 24335                           
 24336                           	psect	text116
 24337  01856E                     __ptext116:
 24338                           	opt callstack 0
 24339  01856E                     _INT1_CallBack:
 24340                           	opt callstack 12
 24341                           
 24342                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 24343                           
 24344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24345                           ;incstack = 0
 24346  01856E  5013               	movf	_INT1_InterruptHandler^0,w,c
 24347  018570  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24348  018572  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24349  018574  B4D8               	btfsc	status,2,c
 24350  018576  0012               	return	
 24351                           
 24352                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 24353  018578  D801               	call	u831_28
 24354  01857A  0012               	return	
 24355  01857C                     u831_28:
 24356  01857C  0005               	push	
 24357  01857E  6EFA               	movwf	pclath,c
 24358  018580  5013               	movf	_INT1_InterruptHandler^0,w,c
 24359  018582  6EFD               	movwf	tosl,c
 24360  018584  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24361  018586  6EFE               	movwf	tosh,c
 24362  018588  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24363  01858A  6EFF               	movwf	tosu,c
 24364  01858C  50FA               	movf	pclath,w,c
 24365  01858E  0012               	return		;indir
 24366  018590                     __end_of_INT1_CallBack:
 24367                           	opt callstack 0
 24368                           
 24369 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24370 ;; Defined at:
 24371 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 24372 ;; Parameters:    Size  Location     Type
 24373 ;;		None
 24374 ;; Auto vars:     Size  Location     Type
 24375 ;;		None
 24376 ;; Return value:  Size  Location     Type
 24377 ;;                  1  [STACK] void 
 24378 ;; Registers used:
 24379 ;;		None
 24380 ;; Tracked objects:
 24381 ;;		On entry : 0/39
 24382 ;;		On exit  : 0/0
 24383 ;;		Unchanged: 0/0
 24384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24389 ;;Total ram usage:        0 bytes
 24390 ;; Hardware stack levels used:    1
 24391 ;; Hardware stack levels required when called:    3
 24392 ;; This function calls:
 24393 ;;		Nothing
 24394 ;; This function is called by:
 24395 ;;		_EXT_INT_Initialize
 24396 ;;		_INT1_CallBack
 24397 ;; This function uses a reentrant model
 24398 ;;
 24399                           
 24400                           	psect	text117
 24401  018836                     __ptext117:
 24402                           	opt callstack 0
 24403  018836                     _INT1_DefaultInterruptHandler:
 24404                           	opt callstack 12
 24405                           
 24406                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24407                           
 24408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24409                           ;incstack = 0
 24410  018836  0012               	return		;funcret
 24411  018838                     __end_of_INT1_DefaultInterruptHandler:
 24412                           	opt callstack 0
 24413                           
 24414 ;; *************** function _switch_handler *****************
 24415 ;; Defined at:
 24416 ;;		line 58 in file "dio.c"
 24417 ;; Parameters:    Size  Location     Type
 24418 ;;		None
 24419 ;; Auto vars:     Size  Location     Type
 24420 ;;  i               1  [STACK] unsigned char 
 24421 ;;  sw_value        1  [STACK] unsigned char 
 24422 ;; Return value:  Size  Location     Type
 24423 ;;                  1  [STACK] void 
 24424 ;; Registers used:
 24425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24426 ;; Tracked objects:
 24427 ;;		On entry : 0/39
 24428 ;;		On exit  : 0/0
 24429 ;;		Unchanged: 0/0
 24430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24435 ;;Total ram usage:        0 bytes
 24436 ;; Hardware stack levels used:    1
 24437 ;; Hardware stack levels required when called:    3
 24438 ;; This function calls:
 24439 ;;		Nothing
 24440 ;; This function is called by:
 24441 ;;		_start_switch_handler
 24442 ;;		_INT1_CallBack
 24443 ;; This function uses a reentrant model
 24444 ;;
 24445                           
 24446                           	psect	text118
 24447  01644E                     __ptext118:
 24448                           	opt callstack 0
 24449  01644E                     _switch_handler:
 24450                           	opt callstack 0
 24451                           
 24452                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24453  01644E  52E6               	movf	postinc1,f,c
 24454  016450  52E6               	movf	postinc1,f,c
 24455                           
 24456                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 24457                           ;stkvar	_i @ sp[(-2)+0]
 24458                           
 24459                           ;incstack = 0
 24460  016452  0EFE               	movlw	-2
 24461  016454  6AE3               	clrf	plusw1,c
 24462  016456  9EBD               	bcf	189,7,c	;volatile
 24463  016458  82BE               	bsf	190,1,c	;volatile
 24464                           
 24465                           ;dio.c: 72:  __nop();
 24466  01645A  F000               	nop	
 24467                           
 24468                           ;dio.c: 73:  __nop();
 24469  01645C  F000               	nop	
 24470                           
 24471                           ;dio.c: 74:  __nop();
 24472  01645E  F000               	nop	
 24473  016460  D019               	goto	l8661
 24474  016462                     l8649:
 24475                           
 24476                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 24477  016462  A6CF               	btfss	207,3,c	;volatile
 24478  016464  D011               	goto	u823_20
 24479  016466  D00D               	goto	u823_21
 24480  016468                     u820_28:
 24481                           
 24482                           ;stkvar	_sw_value @ sp[(-2)+1]
 24483  016468  0EFF               	movlw	-1
 24484  01646A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24485                           
 24486                           ;dio.c: 80:    break;
 24487  016470  D027               	goto	l8663
 24488  016472                     l8651:
 24489                           
 24490                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 24491  016472  A4CF               	btfss	207,2,c	;volatile
 24492  016474  D009               	goto	u823_20
 24493  016476  D005               	goto	u823_21
 24494  016478                     l8653:
 24495                           
 24496                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 24497  016478  A2CF               	btfss	207,1,c	;volatile
 24498  01647A  D006               	goto	u823_20
 24499  01647C  D002               	goto	u823_21
 24500  01647E                     l8655:
 24501                           
 24502                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 24503  01647E  A0CF               	btfss	207,0,c	;volatile
 24504  016480  D003               	goto	u823_20
 24505  016482                     u823_21:
 24506  016482  6A3D               	clrf	(btemp+11)^0,c
 24507  016484  2A3D               	incf	(btemp+11)^0,f,c
 24508  016486  D7F0               	goto	u820_28
 24509  016488                     u823_20:
 24510  016488  6A3D               	clrf	(btemp+11)^0,c
 24511  01648A  D7EE               	goto	u820_28
 24512  01648C                     l8657:
 24513                           
 24514                           ;dio.c: 91:    sw_value = 1;
 24515                           ;stkvar	_sw_value @ sp[(-2)+1]
 24516  01648C  0EFF               	movlw	-1
 24517  01648E  6AE3               	clrf	plusw1,c
 24518  016490  2AE3               	incf	plusw1,f,c
 24519                           
 24520                           ;dio.c: 92:    break;
 24521  016492  D016               	goto	l8663
 24522  016494                     l8661:
 24523                           
 24524                           ;stkvar	_i @ sp[(-2)+0]
 24525  016494  0EFE               	movlw	-2
 24526  016496  50E3               	movf	plusw1,w,c
 24527  016498  6E3C               	movwf	(btemp+10)^0,c
 24528  01649A  6A3D               	clrf	(btemp+11)^0,c
 24529                           
 24530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24531                           ; Switch size 1, requested type "simple"
 24532                           ; Number of cases is 1, Range of values is 0 to 0
 24533                           ; switch strategies available:
 24534                           ; Name         Instructions Cycles
 24535                           ; simple_byte            4     3 (average)
 24536                           ;	Chosen strategy is simple_byte
 24537  01649C  503D               	movf	(btemp+11)^0,w,c
 24538  01649E  0A00               	xorlw	0	; case 0
 24539  0164A0  A4D8               	btfss	status,2,c
 24540  0164A2  D7F4               	goto	l8657
 24541                           
 24542                           ; Switch size 1, requested type "simple"
 24543                           ; Number of cases is 4, Range of values is 0 to 3
 24544                           ; switch strategies available:
 24545                           ; Name         Instructions Cycles
 24546                           ; simple_byte           13     7 (average)
 24547                           ;	Chosen strategy is simple_byte
 24548  0164A4  503C               	movf	(btemp+10)^0,w,c
 24549  0164A6  0A00               	xorlw	0	; case 0
 24550  0164A8  B4D8               	btfsc	status,2,c
 24551  0164AA  D7E9               	goto	l8655
 24552  0164AC  0A01               	xorlw	1	; case 1
 24553  0164AE  B4D8               	btfsc	status,2,c
 24554  0164B0  D7E3               	goto	l8653
 24555  0164B2  0A03               	xorlw	3	; case 2
 24556  0164B4  B4D8               	btfsc	status,2,c
 24557  0164B6  D7DD               	goto	l8651
 24558  0164B8  0A01               	xorlw	1	; case 3
 24559  0164BA  B4D8               	btfsc	status,2,c
 24560  0164BC  D7D2               	goto	l8649
 24561  0164BE  D7E6               	goto	l8657
 24562  0164C0                     l8663:
 24563                           
 24564                           ;dio.c: 96:   if (sw_value) {
 24565                           ;stkvar	_sw_value @ sp[(-2)+1]
 24566  0164C0  0EFF               	movlw	-1
 24567  0164C2  50E3               	movf	plusw1,w,c
 24568  0164C4  B4D8               	btfsc	status,2,c
 24569  0164C6  D014               	goto	l8669
 24570                           
 24571                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 24572                           ;stkvar	_i @ sp[(-2)+0]
 24573  0164C8  0EFE               	movlw	-2
 24574  0164CA  50E3               	movf	plusw1,w,c
 24575  0164CC  0D05               	mullw	5
 24576  0164CE  50F3               	movf	243,w,c
 24577  0164D0  0F60               	addlw	low _S
 24578  0164D2  6ED9               	movwf	fsr2l,c
 24579  0164D4  6ADA               	clrf	fsr2h,c
 24580  0164D6  04DE               	decf	postinc2,w,c
 24581  0164D8  A4D8               	btfss	status,2,c
 24582  0164DA  D041               	goto	l8677
 24583                           
 24584                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 24585                           ;stkvar	_i @ sp[(-2)+0]
 24586  0164DC  0EFE               	movlw	-2
 24587  0164DE  50E3               	movf	plusw1,w,c
 24588  0164E0  0D05               	mullw	5
 24589  0164E2  50F3               	movf	243,w,c
 24590  0164E4  0F60               	addlw	low _S
 24591  0164E6  6ED9               	movwf	fsr2l,c
 24592  0164E8  6ADA               	clrf	fsr2h,c
 24593  0164EA  0E00               	movlw	0
 24594  0164EC  6EDF               	movwf	indf2,c
 24595  0164EE  D037               	goto	l8677
 24596  0164F0                     l8669:
 24597                           
 24598                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 24599                           ;stkvar	_i @ sp[(-2)+0]
 24600  0164F0  0EFE               	movlw	-2
 24601  0164F2  50E3               	movf	plusw1,w,c
 24602  0164F4  0D05               	mullw	5
 24603  0164F6  50F3               	movf	243,w,c
 24604  0164F8  0F60               	addlw	low _S
 24605  0164FA  6ED9               	movwf	fsr2l,c
 24606  0164FC  6ADA               	clrf	fsr2h,c
 24607  0164FE  50DF               	movf	indf2,w,c
 24608  016500  A4D8               	btfss	status,2,c
 24609  016502  D02D               	goto	l8677
 24610                           
 24611                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 24612                           ;stkvar	_i @ sp[(-2)+0]
 24613  016504  0EFE               	movlw	-2
 24614  016506  50E3               	movf	plusw1,w,c
 24615  016508  0D05               	mullw	5
 24616  01650A  50F3               	movf	243,w,c
 24617  01650C  0F60               	addlw	low _S
 24618  01650E  6ED9               	movwf	fsr2l,c
 24619  016510  6ADA               	clrf	fsr2h,c
 24620  016512  0E01               	movlw	1
 24621  016514  6EDF               	movwf	indf2,c
 24622                           
 24623                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 24624  016516  EE20  F2B7         	lfsr	2,_V+183	;volatile
 24625                           
 24626                           ;stkvar	_i @ sp[(-2)+0]
 24627  01651A  0EFE               	movlw	-2
 24628  01651C  50E3               	movf	plusw1,w,c
 24629  01651E  0D05               	mullw	5
 24630  016520  50F3               	movf	243,w,c
 24631  016522  0F61               	addlw	low (_S+1)
 24632  016524  6EE9               	movwf	fsr0l,c
 24633  016526  6AEA               	clrf	fsr0h,c
 24634  016528  006F FF7B FFEE     	movff	postinc2,postinc0
 24635  01652E  006F FF7B FFEE     	movff	postinc2,postinc0
 24636  016534  006F FF7B FFEE     	movff	postinc2,postinc0
 24637  01653A  006F FF7B FFEE     	movff	postinc2,postinc0
 24638                           
 24639                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 24640                           ;stkvar	_i @ sp[(-2)+0]
 24641  016540  0EFE               	movlw	-2
 24642  016542  006F FF8C  F03D    	movff	plusw1,btemp+11
 24643  016548  0E01               	movlw	1
 24644  01654A  6E3C               	movwf	(btemp+10)^0,c
 24645  01654C  2A3D               	incf	(btemp+11)^0,f,c
 24646  01654E  D002               	goto	u827_24
 24647  016550                     u827_25:
 24648  016550  90D8               	bcf	status,0,c
 24649  016552  363C               	rlcf	(btemp+10)^0,f,c
 24650  016554                     u827_24:
 24651  016554  2E3D               	decfsz	(btemp+11)^0,f,c
 24652  016556  D7FC               	goto	u827_25
 24653  016558  503C               	movf	(btemp+10)^0,w,c
 24654  01655A  0100               	movlb	0	; () banked
 24655  01655C  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 24656  01655E                     l8677:
 24657                           
 24658                           ;dio.c: 107:  } while (++i < 4);
 24659                           ;stkvar	_i @ sp[(-2)+0]
 24660  01655E  0EFE               	movlw	-2
 24661  016560  2AE3               	incf	plusw1,f,c
 24662  016562  0EFE               	movlw	-2
 24663  016564  006F FF8C  F032    	movff	plusw1,btemp
 24664  01656A  0E03               	movlw	3
 24665  01656C  6432               	cpfsgt	btemp^0,c
 24666  01656E  D792               	goto	l8661
 24667                           
 24668                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 24669  016570  92BE               	bcf	190,1,c	;volatile
 24670  016572  A4BE               	btfss	190,2,c	;volatile
 24671  016574  D002               	goto	u829_20
 24672  016576  0E01               	movlw	1
 24673  016578  D001               	goto	u829_26
 24674  01657A                     u829_20:
 24675  01657A  0E00               	movlw	0
 24676  01657C                     u829_26:
 24677  01657C  0AFF               	xorlw	255
 24678  01657E  6E3D               	movwf	(btemp+11)^0,c
 24679  016580  463D               	rlncf	(btemp+11)^0,f,c
 24680  016582  463D               	rlncf	(btemp+11)^0,f,c
 24681  016584  50BE               	movf	190,w,c	;volatile
 24682  016586  183D               	xorwf	(btemp+11)^0,w,c
 24683  016588  0BFB               	andlw	-5
 24684  01658A  183D               	xorwf	(btemp+11)^0,w,c
 24685  01658C  6EBE               	movwf	190,c	;volatile
 24686  01658E  8EBD               	bsf	189,7,c	;volatile
 24687                           
 24688                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24689  016590  52E5               	movf	postdec1,f,c
 24690  016592  52E5               	movf	postdec1,f,c
 24691  016594  0012               	return		;funcret
 24692  016596                     __end_of_switch_handler:
 24693                           	opt callstack 0
 24694                           
 24695 ;; *************** function _TMR5_ISR *****************
 24696 ;; Defined at:
 24697 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24698 ;; Parameters:    Size  Location     Type
 24699 ;;		None
 24700 ;; Auto vars:     Size  Location     Type
 24701 ;;		None
 24702 ;; Return value:  Size  Location     Type
 24703 ;;                  1    wreg      void 
 24704 ;; Registers used:
 24705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 24706 ;; Tracked objects:
 24707 ;;		On entry : 0/0
 24708 ;;		On exit  : 0/0
 24709 ;;		Unchanged: 0/0
 24710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24713 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24714 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24715 ;;Total ram usage:        4 bytes
 24716 ;; Hardware stack levels used:    1
 24717 ;; Hardware stack levels required when called:    5
 24718 ;; This function calls:
 24719 ;;		_TMR5_CallBack
 24720 ;;		_TMR5_WriteTimer
 24721 ;; This function is called by:
 24722 ;;		Interrupt level 1
 24723 ;; This function uses a non-reentrant model
 24724 ;;
 24725                           
 24726                           	psect	text119
 24727  017AC8                     __ptext119:
 24728                           	opt callstack 0
 24729  017AC8                     _TMR5_ISR:
 24730                           	opt callstack 12
 24731                           
 24732                           ;incstack = 0
 24733  017AC8  006F FF60  F1E2    	movff	status,??_TMR5_ISR+2
 24734  017ACE  0060  F0F4  F1E3   	movff	btemp+11,??_TMR5_ISR+3
 24735  017AD4  EE16  F000         	lfsr	1,___intlo_sp
 24736                           
 24737                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 24738  017AD8  0139               	movlb	57	; () banked
 24739  017ADA  9DA8               	bcf	168,6,b	;volatile
 24740                           
 24741                           ; BSR set to: 57
 24742                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 24743  017ADC  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 24744  017AE2  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 24745  017AE8  EC54  F0BF         	call	_TMR5_WriteTimer	;wreg free
 24746                           
 24747                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 24748  017AEC  0102               	movlb	2	; () banked
 24749  017AEE  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 24750  017AF0  0101               	movlb	1	; () banked
 24751  017AF2  6FE0               	movwf	??_TMR5_ISR& (0+255),b
 24752  017AF4  6BE1               	clrf	(??_TMR5_ISR+1)& (0+255),b
 24753  017AF6  0E05               	movlw	5
 24754  017AF8  27E0               	addwf	??_TMR5_ISR& (0+255),f,b
 24755  017AFA  0E00               	movlw	0
 24756  017AFC  23E1               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 24757  017AFE  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 24758  017B00  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 24759  017B02  51E0               	movf	??_TMR5_ISR& (0+255),w,b
 24760  017B04  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 24761  017B06  51E1               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 24762  017B08  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 24763  017B0A  A0D8               	btfss	status,0,c
 24764  017B0C  D004               	goto	i1l1045
 24765                           
 24766                           ; BSR set to: 1
 24767                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 24768  017B0E  EC93  F0C2         	call	_TMR5_CallBack	;wreg free
 24769                           
 24770                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 24771  017B12  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 24772  017B14  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 24773  017B16                     i1l1045:
 24774  017B16  0060  F78C  F03D   	movff	??_TMR5_ISR+3,btemp+11
 24775  017B1C  0060  F78B  FFD8   	movff	??_TMR5_ISR+2,status
 24776  017B22  0011               	retfie		f
 24777  017B24                     __end_of_TMR5_ISR:
 24778                           	opt callstack 0
 24779                           
 24780 ;; *************** function _TMR5_WriteTimer *****************
 24781 ;; Defined at:
 24782 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 24783 ;; Parameters:    Size  Location     Type
 24784 ;;  timerVal        2  [STACK] unsigned short 
 24785 ;; Auto vars:     Size  Location     Type
 24786 ;;		None
 24787 ;; Return value:  Size  Location     Type
 24788 ;;                  1  [STACK] void 
 24789 ;; Registers used:
 24790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24791 ;; Tracked objects:
 24792 ;;		On entry : 3F/39
 24793 ;;		On exit  : 0/0
 24794 ;;		Unchanged: 0/0
 24795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24800 ;;Total ram usage:        0 bytes
 24801 ;; Hardware stack levels used:    1
 24802 ;; Hardware stack levels required when called:    3
 24803 ;; This function calls:
 24804 ;;		Nothing
 24805 ;; This function is called by:
 24806 ;;		_TMR5_ISR
 24807 ;; This function uses a reentrant model
 24808 ;;
 24809                           
 24810                           	psect	text120
 24811  017EA8                     __ptext120:
 24812                           	opt callstack 0
 24813  017EA8                     _TMR5_WriteTimer:
 24814                           	opt callstack 13
 24815                           
 24816                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 24817                           
 24818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24819                           ;incstack = 0
 24820  017EA8  A49A               	btfss	154,2,c	;volatile
 24821  017EAA  D00F               	goto	l8783
 24822                           
 24823                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 24824  017EAC  909A               	bcf	154,0,c	;volatile
 24825                           
 24826                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 24827                           ;stkvar	_timerVal @ sp[(0)+-2]
 24828  017EAE  0EFF               	movlw	255
 24829  017EB0  24E1               	addwf	fsr1l,w,c
 24830  017EB2  6ED9               	movwf	fsr2l,c
 24831  017EB4  0EFF               	movlw	255
 24832  017EB6  20E2               	addwfc	fsr1h,w,c
 24833  017EB8  6EDA               	movwf	fsr2h,c
 24834  017EBA  50DF               	movf	indf2,w,c
 24835  017EBC  6E99               	movwf	153,c	;volatile
 24836                           
 24837                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 24838                           ;stkvar	_timerVal @ sp[(0)+-2]
 24839  017EBE  0EFE               	movlw	-2
 24840  017EC0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24841                           
 24842                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 24843  017EC6  809A               	bsf	154,0,c	;volatile
 24844                           
 24845                           ;mcc_generated_files/tmr5.c: 142:  } else {
 24846  017EC8  D00C               	goto	l1028
 24847  017ECA                     l8783:
 24848                           
 24849                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 24850                           ;stkvar	_timerVal @ sp[(0)+-2]
 24851  017ECA  0EFF               	movlw	255
 24852  017ECC  24E1               	addwf	fsr1l,w,c
 24853  017ECE  6ED9               	movwf	fsr2l,c
 24854  017ED0  0EFF               	movlw	255
 24855  017ED2  20E2               	addwfc	fsr1h,w,c
 24856  017ED4  6EDA               	movwf	fsr2h,c
 24857  017ED6  50DF               	movf	indf2,w,c
 24858  017ED8  6E99               	movwf	153,c	;volatile
 24859                           
 24860                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 24861                           ;stkvar	_timerVal @ sp[(0)+-2]
 24862  017EDA  0EFE               	movlw	-2
 24863  017EDC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24864  017EE2                     l1028:
 24865                           
 24866                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24867  017EE2  52E5               	movf	postdec1,f,c
 24868  017EE4  52E5               	movf	postdec1,f,c
 24869  017EE6  0012               	return		;funcret
 24870  017EE8                     __end_of_TMR5_WriteTimer:
 24871                           	opt callstack 0
 24872                           
 24873 ;; *************** function _TMR5_CallBack *****************
 24874 ;; Defined at:
 24875 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24876 ;; Parameters:    Size  Location     Type
 24877 ;;		None
 24878 ;; Auto vars:     Size  Location     Type
 24879 ;;		None
 24880 ;; Return value:  Size  Location     Type
 24881 ;;                  1  [STACK] void 
 24882 ;; Registers used:
 24883 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24884 ;; Tracked objects:
 24885 ;;		On entry : 3F/1
 24886 ;;		On exit  : 0/0
 24887 ;;		Unchanged: 0/0
 24888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24893 ;;Total ram usage:        0 bytes
 24894 ;; Hardware stack levels used:    1
 24895 ;; Hardware stack levels required when called:    4
 24896 ;; This function calls:
 24897 ;;		Absolute function
 24898 ;;		_TMR5_DefaultInterruptHandler
 24899 ;; This function is called by:
 24900 ;;		_TMR5_ISR
 24901 ;; This function uses a reentrant model
 24902 ;;
 24903                           
 24904                           	psect	text121
 24905  018526                     __ptext121:
 24906                           	opt callstack 0
 24907  018526                     _TMR5_CallBack:
 24908                           	opt callstack 12
 24909                           
 24910                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 24911                           
 24912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24913                           ;incstack = 0
 24914  018526  0100               	movlb	0	; () banked
 24915  018528  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24916  01852A  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24917  01852C  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24918  01852E  B4D8               	btfsc	status,2,c
 24919  018530  0012               	return	
 24920                           
 24921                           ; BSR set to: 0
 24922                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 24923  018532  D801               	call	u842_28
 24924  018534  0012               	return	
 24925  018536                     u842_28:
 24926  018536  0005               	push	
 24927  018538  6EFA               	movwf	pclath,c
 24928  01853A  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24929  01853C  6EFD               	movwf	tosl,c
 24930  01853E  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24931  018540  6EFE               	movwf	tosh,c
 24932  018542  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24933  018544  6EFF               	movwf	tosu,c
 24934  018546  50FA               	movf	pclath,w,c
 24935  018548  0012               	return		;indir
 24936  01854A                     __end_of_TMR5_CallBack:
 24937                           	opt callstack 0
 24938                           
 24939 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24940 ;; Defined at:
 24941 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 24942 ;; Parameters:    Size  Location     Type
 24943 ;;		None
 24944 ;; Auto vars:     Size  Location     Type
 24945 ;;		None
 24946 ;; Return value:  Size  Location     Type
 24947 ;;                  1  [STACK] void 
 24948 ;; Registers used:
 24949 ;;		wreg, status,2, status,0, btemp+11
 24950 ;; Tracked objects:
 24951 ;;		On entry : 3F/0
 24952 ;;		On exit  : 3F/2
 24953 ;;		Unchanged: 0/0
 24954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24959 ;;Total ram usage:        0 bytes
 24960 ;; Hardware stack levels used:    1
 24961 ;; Hardware stack levels required when called:    3
 24962 ;; This function calls:
 24963 ;;		Nothing
 24964 ;; This function is called by:
 24965 ;;		_TMR5_Initialize
 24966 ;;		_TMR5_CallBack
 24967 ;; This function uses a reentrant model
 24968 ;;
 24969                           
 24970                           	psect	text122
 24971  01843A                     __ptext122:
 24972                           	opt callstack 0
 24973  01843A                     _TMR5_DefaultInterruptHandler:
 24974                           	opt callstack 12
 24975                           
 24976                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 24977                           
 24978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24979                           ;incstack = 0
 24980  01843A  A0BE               	btfss	190,0,c	;volatile
 24981  01843C  D002               	goto	u798_20
 24982  01843E  0E01               	movlw	1
 24983  018440  D001               	goto	u798_26
 24984  018442                     u798_20:
 24985  018442  0E00               	movlw	0
 24986  018444                     u798_26:
 24987  018444  0AFF               	xorlw	255
 24988  018446  6E3D               	movwf	(btemp+11)^0,c
 24989  018448  50BE               	movf	190,w,c	;volatile
 24990  01844A  183D               	xorwf	(btemp+11)^0,w,c
 24991  01844C  0BFE               	andlw	-2
 24992  01844E  183D               	xorwf	(btemp+11)^0,w,c
 24993  018450  6EBE               	movwf	190,c	;volatile
 24994                           
 24995                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 24996  018452  0E01               	movlw	1
 24997  018454  0102               	movlb	2	; () banked
 24998  018456  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 24999  018458  0E00               	movlw	0
 25000  01845A  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25001  01845C  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25002  01845E  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25003                           
 25004                           ; BSR set to: 2
 25005                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25006  018460  0012               	return		;funcret
 25007  018462                     __end_of_TMR5_DefaultInterruptHandler:
 25008                           	opt callstack 0
 25009                           
 25010 ;; *************** function _INT0_ISR *****************
 25011 ;; Defined at:
 25012 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25013 ;; Parameters:    Size  Location     Type
 25014 ;;		None
 25015 ;; Auto vars:     Size  Location     Type
 25016 ;;		None
 25017 ;; Return value:  Size  Location     Type
 25018 ;;                  1    wreg      void 
 25019 ;; Registers used:
 25020 ;;		wreg, status,2, status,0, pclath, tosl
 25021 ;; Tracked objects:
 25022 ;;		On entry : 0/0
 25023 ;;		On exit  : 0/0
 25024 ;;		Unchanged: 0/0
 25025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25030 ;;Total ram usage:        0 bytes
 25031 ;; Hardware stack levels used:    1
 25032 ;; Hardware stack levels required when called:    2
 25033 ;; This function calls:
 25034 ;;		_INT0_CallBack
 25035 ;; This function is called by:
 25036 ;;		Interrupt level 2
 25037 ;; This function uses a non-reentrant model
 25038 ;;
 25039                           
 25040                           	psect	text123
 25041  0187AC                     __ptext123:
 25042                           	opt callstack 0
 25043  0187AC                     _INT0_ISR:
 25044                           	opt callstack 12
 25045                           
 25046                           ; BSR set to: 2
 25047                           ;incstack = 0
 25048  0187AC  EE14  F000         	lfsr	1,___inthi_sp
 25049                           
 25050                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25051  0187B0  0139               	movlb	57	; () banked
 25052  0187B2  91A1               	bcf	161,0,b	;volatile
 25053                           
 25054                           ; BSR set to: 57
 25055                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25056  0187B4  ECC8  F0C2         	call	_INT0_CallBack	;wreg free
 25057  0187B8  0011               	retfie		f
 25058  0187BA                     __end_of_INT0_ISR:
 25059                           	opt callstack 0
 25060                           
 25061 ;; *************** function _INT0_CallBack *****************
 25062 ;; Defined at:
 25063 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25064 ;; Parameters:    Size  Location     Type
 25065 ;;		None
 25066 ;; Auto vars:     Size  Location     Type
 25067 ;;		None
 25068 ;; Return value:  Size  Location     Type
 25069 ;;                  1  [STACK] void 
 25070 ;; Registers used:
 25071 ;;		wreg, status,2, status,0, pclath, tosl
 25072 ;; Tracked objects:
 25073 ;;		On entry : 3F/39
 25074 ;;		On exit  : 0/0
 25075 ;;		Unchanged: 0/0
 25076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25081 ;;Total ram usage:        0 bytes
 25082 ;; Hardware stack levels used:    1
 25083 ;; Hardware stack levels required when called:    1
 25084 ;; This function calls:
 25085 ;;		Absolute function
 25086 ;;		_INT0_DefaultInterruptHandler
 25087 ;; This function is called by:
 25088 ;;		_INT0_ISR
 25089 ;; This function uses a reentrant model
 25090 ;;
 25091                           
 25092                           	psect	text124
 25093  018590                     __ptext124:
 25094                           	opt callstack 0
 25095  018590                     _INT0_CallBack:
 25096                           	opt callstack 12
 25097                           
 25098                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25099                           
 25100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25101                           ;incstack = 0
 25102  018590  5016               	movf	_INT0_InterruptHandler^0,w,c
 25103  018592  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25104  018594  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25105  018596  B4D8               	btfsc	status,2,c
 25106  018598  0012               	return	
 25107                           
 25108                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25109  01859A  D801               	call	u391_48
 25110  01859C  0012               	return	
 25111  01859E                     u391_48:
 25112  01859E  0005               	push	
 25113  0185A0  6EFA               	movwf	pclath,c
 25114  0185A2  5016               	movf	_INT0_InterruptHandler^0,w,c
 25115  0185A4  6EFD               	movwf	tosl,c
 25116  0185A6  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25117  0185A8  6EFE               	movwf	tosh,c
 25118  0185AA  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25119  0185AC  6EFF               	movwf	tosu,c
 25120  0185AE  50FA               	movf	pclath,w,c
 25121  0185B0  0012               	return		;indir
 25122  0185B2                     __end_of_INT0_CallBack:
 25123                           	opt callstack 0
 25124                           
 25125 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25126 ;; Defined at:
 25127 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25128 ;; Parameters:    Size  Location     Type
 25129 ;;		None
 25130 ;; Auto vars:     Size  Location     Type
 25131 ;;		None
 25132 ;; Return value:  Size  Location     Type
 25133 ;;                  1  [STACK] void 
 25134 ;; Registers used:
 25135 ;;		None
 25136 ;; Tracked objects:
 25137 ;;		On entry : 0/39
 25138 ;;		On exit  : 0/0
 25139 ;;		Unchanged: 0/0
 25140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25145 ;;Total ram usage:        0 bytes
 25146 ;; Hardware stack levels used:    1
 25147 ;; This function calls:
 25148 ;;		Nothing
 25149 ;; This function is called by:
 25150 ;;		_EXT_INT_Initialize
 25151 ;;		_INT0_CallBack
 25152 ;; This function uses a reentrant model
 25153 ;;
 25154                           
 25155                           	psect	text125
 25156  018838                     __ptext125:
 25157                           	opt callstack 0
 25158  018838                     _INT0_DefaultInterruptHandler:
 25159                           	opt callstack 12
 25160                           
 25161                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25162                           
 25163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25164                           ;incstack = 0
 25165  018838  0012               	return		;funcret
 25166  01883A                     __end_of_INT0_DefaultInterruptHandler:
 25167                           	opt callstack 0
 25168                           
 25169 ;; *************** function _Default_ISR *****************
 25170 ;; Defined at:
 25171 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25172 ;; Parameters:    Size  Location     Type
 25173 ;;		None
 25174 ;; Auto vars:     Size  Location     Type
 25175 ;;		None
 25176 ;; Return value:  Size  Location     Type
 25177 ;;                  1    wreg      void 
 25178 ;; Registers used:
 25179 ;;		None
 25180 ;; Tracked objects:
 25181 ;;		On entry : 0/0
 25182 ;;		On exit  : 0/0
 25183 ;;		Unchanged: 0/0
 25184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25189 ;;Total ram usage:        0 bytes
 25190 ;; Hardware stack levels used:    1
 25191 ;; This function calls:
 25192 ;;		Nothing
 25193 ;; This function is called by:
 25194 ;;		Interrupt level 2
 25195 ;; This function uses a non-reentrant model
 25196 ;;
 25197                           
 25198                           	psect	text126
 25199  018830                     __ptext126:
 25200                           	opt callstack 0
 25201  018830                     _Default_ISR:
 25202                           	opt callstack 14
 25203                           
 25204                           ;incstack = 0
 25205  018830  EE14  F000         	lfsr	1,___inthi_sp
 25206  018834  0011               	retfie		f
 25207  018836                     __end_of_Default_ISR:
 25208                           	opt callstack 0
 25209                           
 25210 ;; *************** function _ADCC_ISR *****************
 25211 ;; Defined at:
 25212 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25213 ;; Parameters:    Size  Location     Type
 25214 ;;		None
 25215 ;; Auto vars:     Size  Location     Type
 25216 ;;		None
 25217 ;; Return value:  Size  Location     Type
 25218 ;;                  1    wreg      void 
 25219 ;; Registers used:
 25220 ;;		wreg, status,2, status,0, pclath, tosl
 25221 ;; Tracked objects:
 25222 ;;		On entry : 0/0
 25223 ;;		On exit  : 0/0
 25224 ;;		Unchanged: 0/0
 25225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25230 ;;Total ram usage:        0 bytes
 25231 ;; Hardware stack levels used:    1
 25232 ;; Hardware stack levels required when called:    1
 25233 ;; This function calls:
 25234 ;;		Absolute function
 25235 ;;		_ADCC_DefaultInterruptHandler
 25236 ;;		_adc_int_handler
 25237 ;; This function is called by:
 25238 ;;		Interrupt level 2
 25239 ;; This function uses a non-reentrant model
 25240 ;;
 25241                           
 25242                           	psect	text127
 25243  0181E0                     __ptext127:
 25244                           	opt callstack 0
 25245  0181E0                     _ADCC_ISR:
 25246                           	opt callstack 13
 25247                           
 25248                           ;incstack = 0
 25249  0181E0  EE14  F000         	lfsr	1,___inthi_sp
 25250                           
 25251                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25252  0181E4  0139               	movlb	57	; () banked
 25253  0181E6  95A1               	bcf	161,2,b	;volatile
 25254                           
 25255                           ; BSR set to: 57
 25256                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25257  0181E8  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25258  0181EA  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25259  0181EC  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25260  0181EE  B4D8               	btfsc	status,2,c
 25261  0181F0  0011               	retfie		f
 25262                           
 25263                           ; BSR set to: 57
 25264                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25265  0181F2  D801               	call	i2u420_48
 25266  0181F4  0011               	retfie		f
 25267  0181F6                     i2u420_48:
 25268  0181F6  0005               	push	
 25269  0181F8  6EFA               	movwf	pclath,c
 25270  0181FA  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25271  0181FC  6EFD               	movwf	tosl,c
 25272  0181FE  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25273  018200  6EFE               	movwf	tosh,c
 25274  018202  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25275  018204  6EFF               	movwf	tosu,c
 25276  018206  50FA               	movf	pclath,w,c
 25277  018208  0012               	return		;indir
 25278  01820A                     __end_of_ADCC_ISR:
 25279                           	opt callstack 0
 25280                           
 25281 ;; *************** function _adc_int_t_handler *****************
 25282 ;; Defined at:
 25283 ;;		line 128 in file "daq.c"
 25284 ;; Parameters:    Size  Location     Type
 25285 ;;		None
 25286 ;; Auto vars:     Size  Location     Type
 25287 ;;		None
 25288 ;; Return value:  Size  Location     Type
 25289 ;;                  1  [STACK] void 
 25290 ;; Registers used:
 25291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25292 ;; Tracked objects:
 25293 ;;		On entry : 3F/39
 25294 ;;		On exit  : 1/0
 25295 ;;		Unchanged: 0/0
 25296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25301 ;;Total ram usage:        0 bytes
 25302 ;; Hardware stack levels used:    1
 25303 ;; Hardware stack levels required when called:    1
 25304 ;; This function calls:
 25305 ;;		_ADCC_DischargeSampleCapacitor
 25306 ;;		_ADCC_StartConversion
 25307 ;; This function is called by:
 25308 ;;		_start_adc_scan
 25309 ;;		_ADCC_ThresholdISR
 25310 ;; This function uses a reentrant model
 25311 ;;
 25312                           
 25313                           	psect	text128
 25314  017644                     __ptext128:
 25315                           	opt callstack 0
 25316  017644                     _adc_int_t_handler:
 25317                           	opt callstack 12
 25318                           
 25319                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25320                           
 25321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25322                           ;incstack = 0
 25323  017644  013E               	movlb	62	; () banked
 25324  017646  51E6               	movf	230,w,b	;volatile
 25325  017648  006F FB9C  F032    	movff	16103,btemp	;volatile
 25326  01764E  6A33               	clrf	(btemp+1)^0,c
 25327  017650  0060  F0C8  F033   	movff	btemp,btemp+1
 25328  017656  6A32               	clrf	btemp^0,c
 25329  017658  2632               	addwf	btemp^0,f,c
 25330  01765A  0E00               	movlw	0
 25331  01765C  2233               	addwfc	(btemp+1)^0,f,c
 25332  01765E  0100               	movlb	0	; () banked
 25333  017660  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25334  017662  0D02               	mullw	2
 25335  017664  50F3               	movf	243,w,c
 25336  017666  0FC7               	addlw	low _R
 25337  017668  6ED9               	movwf	fsr2l,c
 25338  01766A  6ADA               	clrf	fsr2h,c
 25339  01766C  0060  F0CB  FFDE   	movff	btemp,postinc2
 25340  017672  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 25341  017678                     l8963:
 25342                           
 25343                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 25344  017678  0100               	movlb	0	; () banked
 25345  01767A  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 25346  01767C  0E0D               	movlw	13
 25347  01767E  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25348  017680  D003               	goto	l8969
 25349                           
 25350                           ; BSR set to: 0
 25351                           ;daq.c: 136:    R.done = 1;
 25352  017682  0E01               	movlw	1
 25353  017684  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 25354  017686  0012               	return	
 25355  017688                     l8969:
 25356                           
 25357                           ; BSR set to: 0
 25358                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25359  017688  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 25360  01768E  EE20  F0EC         	lfsr	2,_R+37	;volatile
 25361  017692  006F FF78  F03A    	movff	postinc2,btemp+8
 25362  017698  006F FF74  F03B    	movff	postdec2,btemp+9
 25363  01769E  2A3D               	incf	(btemp+11)^0,f,c
 25364  0176A0  D003               	goto	u855_44
 25365  0176A2                     u855_45:
 25366  0176A2  90D8               	bcf	status,0,c
 25367  0176A4  323B               	rrcf	(btemp+9)^0,f,c
 25368  0176A6  323A               	rrcf	(btemp+8)^0,f,c
 25369  0176A8                     u855_44:
 25370  0176A8  2E3D               	decfsz	(btemp+11)^0,f,c
 25371  0176AA  D7FB               	goto	u855_45
 25372  0176AC  A03A               	btfss	(btemp+8)^0,0,c
 25373  0176AE  D7E4               	goto	l8963
 25374                           
 25375                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 25376  0176B0  ECFB  F0C3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25377                           
 25378                           ; BSR set to: 62
 25379                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 25380  0176B4  0100               	movlb	0	; () banked
 25381  0176B6  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25382  0176B8  0B0F               	andlw	15
 25383  0176BA  6EE6               	movwf	postinc1,c
 25384  0176BC  ECAE  F0C3         	call	_ADCC_StartConversion	;wreg free
 25385                           
 25386                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25387  0176C0  0012               	return		;funcret
 25388  0176C2                     __end_of_adc_int_t_handler:
 25389                           	opt callstack 0
 25390                           
 25391 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25392 ;; Defined at:
 25393 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25394 ;; Parameters:    Size  Location     Type
 25395 ;;		None
 25396 ;; Auto vars:     Size  Location     Type
 25397 ;;		None
 25398 ;; Return value:  Size  Location     Type
 25399 ;;                  1  [STACK] void 
 25400 ;; Registers used:
 25401 ;;		None
 25402 ;; Tracked objects:
 25403 ;;		On entry : 3F/39
 25404 ;;		On exit  : 0/0
 25405 ;;		Unchanged: 0/0
 25406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25411 ;;Total ram usage:        0 bytes
 25412 ;; Hardware stack levels used:    1
 25413 ;; This function calls:
 25414 ;;		Nothing
 25415 ;; This function is called by:
 25416 ;;		_ADCC_Initialize
 25417 ;;		_ADCC_ISR
 25418 ;;		_ADCC_ThresholdISR
 25419 ;; This function uses a reentrant model
 25420 ;;
 25421                           
 25422                           	psect	text129
 25423  01883A                     __ptext129:
 25424                           	opt callstack 0
 25425  01883A                     _ADCC_DefaultInterruptHandler:
 25426                           	opt callstack 13
 25427                           
 25428                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25429                           
 25430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25431                           ;incstack = 0
 25432  01883A  0012               	return		;funcret
 25433  01883C                     __end_of_ADCC_DefaultInterruptHandler:
 25434                           	opt callstack 0
 25435                           
 25436 ;; *************** function _adc_int_handler *****************
 25437 ;; Defined at:
 25438 ;;		line 118 in file "daq.c"
 25439 ;; Parameters:    Size  Location     Type
 25440 ;;		None
 25441 ;; Auto vars:     Size  Location     Type
 25442 ;;		None
 25443 ;; Return value:  Size  Location     Type
 25444 ;;                  1  [STACK] void 
 25445 ;; Registers used:
 25446 ;;		None
 25447 ;; Tracked objects:
 25448 ;;		On entry : 3F/39
 25449 ;;		On exit  : 0/0
 25450 ;;		Unchanged: 0/0
 25451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25456 ;;Total ram usage:        0 bytes
 25457 ;; Hardware stack levels used:    1
 25458 ;; This function calls:
 25459 ;;		Nothing
 25460 ;; This function is called by:
 25461 ;;		_start_adc_scan
 25462 ;;		_ADCC_ISR
 25463 ;; This function uses a reentrant model
 25464 ;;
 25465                           
 25466                           	psect	text130
 25467  01883C                     __ptext130:
 25468                           	opt callstack 0
 25469  01883C                     _adc_int_handler:
 25470                           	opt callstack 13
 25471                           
 25472                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25473                           
 25474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25475                           ;incstack = 0
 25476  01883C  0012               	return		;funcret
 25477  01883E                     __end_of_adc_int_handler:
 25478                           	opt callstack 0
 25479                           
 25480 ;; *************** function _ADCC_ThresholdISR *****************
 25481 ;; Defined at:
 25482 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25483 ;; Parameters:    Size  Location     Type
 25484 ;;		None
 25485 ;; Auto vars:     Size  Location     Type
 25486 ;;		None
 25487 ;; Return value:  Size  Location     Type
 25488 ;;                  1    wreg      void 
 25489 ;; Registers used:
 25490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25491 ;; Tracked objects:
 25492 ;;		On entry : 0/0
 25493 ;;		On exit  : 0/0
 25494 ;;		Unchanged: 0/0
 25495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25498 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25499 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25500 ;;Total ram usage:        5 bytes
 25501 ;; Hardware stack levels used:    1
 25502 ;; Hardware stack levels required when called:    2
 25503 ;; This function calls:
 25504 ;;		Absolute function
 25505 ;;		_ADCC_DefaultInterruptHandler
 25506 ;;		_adc_int_t_handler
 25507 ;; This function is called by:
 25508 ;;		Interrupt level 2
 25509 ;; This function uses a non-reentrant model
 25510 ;;
 25511                           
 25512                           	psect	text131
 25513  017810                     __ptext131:
 25514                           	opt callstack 0
 25515  017810                     _ADCC_ThresholdISR:
 25516                           	opt callstack 12
 25517                           
 25518                           ;incstack = 0
 25519  017810  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25520  017816  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25521  01781C  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25522  017822  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25523  017828  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25524  01782E  EE14  F000         	lfsr	1,___inthi_sp
 25525                           
 25526                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25527  017832  0139               	movlb	57	; () banked
 25528  017834  97A1               	bcf	161,3,b	;volatile
 25529                           
 25530                           ; BSR set to: 57
 25531                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25532  017836  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25533  017838  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25534  01783A  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25535  01783C  B4D8               	btfsc	status,2,c
 25536  01783E  D00C               	goto	i2u858_49
 25537                           
 25538                           ; BSR set to: 57
 25539                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 25540  017840  D801               	call	i2u858_48
 25541  017842  D00A               	goto	i2u858_49
 25542  017844                     i2u858_48:
 25543  017844  0005               	push	
 25544  017846  6EFA               	movwf	pclath,c
 25545  017848  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25546  01784A  6EFD               	movwf	tosl,c
 25547  01784C  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25548  01784E  6EFE               	movwf	tosh,c
 25549  017850  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25550  017852  6EFF               	movwf	tosu,c
 25551  017854  50FA               	movf	pclath,w,c
 25552  017856  0012               	return		;indir
 25553  017858                     i2u858_49:
 25554  017858  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 25555  01785E  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 25556  017864  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 25557  01786A  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 25558  017870  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 25559  017876  0011               	retfie		f
 25560  017878                     __end_of_ADCC_ThresholdISR:
 25561                           	opt callstack 0
 25562                           
 25563 ;; *************** function _UART1_tx_vect_isr *****************
 25564 ;; Defined at:
 25565 ;;		line 199 in file "mcc_generated_files/uart1.c"
 25566 ;; Parameters:    Size  Location     Type
 25567 ;;		None
 25568 ;; Auto vars:     Size  Location     Type
 25569 ;;		None
 25570 ;; Return value:  Size  Location     Type
 25571 ;;                  1    wreg      void 
 25572 ;; Registers used:
 25573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25574 ;; Tracked objects:
 25575 ;;		On entry : 0/0
 25576 ;;		On exit  : 0/0
 25577 ;;		Unchanged: 0/0
 25578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25583 ;;Total ram usage:        0 bytes
 25584 ;; Hardware stack levels used:    1
 25585 ;; Hardware stack levels required when called:    1
 25586 ;; This function calls:
 25587 ;;		Absolute function
 25588 ;;		_UART1_Transmit_ISR
 25589 ;; This function is called by:
 25590 ;;		Interrupt level 2
 25591 ;; This function uses a non-reentrant model
 25592 ;;
 25593                           
 25594                           	psect	text132
 25595  018464                     __ptext132:
 25596                           	opt callstack 0
 25597  018464                     _UART1_tx_vect_isr:
 25598                           	opt callstack 13
 25599                           
 25600                           ;incstack = 0
 25601  018464  EE14  F000         	lfsr	1,___inthi_sp
 25602                           
 25603                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 25604  018468  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25605  01846A  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 25606  01846C  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 25607  01846E  B4D8               	btfsc	status,2,c
 25608  018470  0011               	retfie		f
 25609                           
 25610                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 25611  018472  D801               	call	i2u860_48
 25612  018474  0011               	retfie		f
 25613  018476                     i2u860_48:
 25614  018476  0005               	push	
 25615  018478  6EFA               	movwf	pclath,c
 25616  01847A  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25617  01847C  6EFD               	movwf	tosl,c
 25618  01847E  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 25619  018480  6EFE               	movwf	tosh,c
 25620  018482  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 25621  018484  6EFF               	movwf	tosu,c
 25622  018486  50FA               	movf	pclath,w,c
 25623  018488  0012               	return		;indir
 25624  01848A                     __end_of_UART1_tx_vect_isr:
 25625                           	opt callstack 0
 25626                           
 25627 ;; *************** function _UART1_Transmit_ISR *****************
 25628 ;; Defined at:
 25629 ;;		line 213 in file "mcc_generated_files/uart1.c"
 25630 ;; Parameters:    Size  Location     Type
 25631 ;;		None
 25632 ;; Auto vars:     Size  Location     Type
 25633 ;;		None
 25634 ;; Return value:  Size  Location     Type
 25635 ;;                  1  [STACK] void 
 25636 ;; Registers used:
 25637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25638 ;; Tracked objects:
 25639 ;;		On entry : 0/0
 25640 ;;		On exit  : 3B/39
 25641 ;;		Unchanged: 0/0
 25642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25647 ;;Total ram usage:        0 bytes
 25648 ;; Hardware stack levels used:    1
 25649 ;; This function calls:
 25650 ;;		Nothing
 25651 ;; This function is called by:
 25652 ;;		_UART1_Initialize
 25653 ;;		_UART1_tx_vect_isr
 25654 ;; This function uses a reentrant model
 25655 ;;
 25656                           
 25657                           	psect	text133
 25658  01815C                     __ptext133:
 25659                           	opt callstack 0
 25660  01815C                     _UART1_Transmit_ISR:
 25661                           	opt callstack 13
 25662                           
 25663                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 25664                           
 25665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25666                           ;incstack = 0
 25667  01815C  0E40               	movlw	64
 25668  01815E  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 25669  018160  D010               	goto	l581
 25670                           
 25671                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 25672  018162  0EBB               	movlw	low _uart1TxBuffer
 25673  018164  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 25674  018166  6ED9               	movwf	fsr2l,c
 25675  018168  6ADA               	clrf	fsr2h,c
 25676  01816A  0E02               	movlw	high _uart1TxBuffer
 25677  01816C  22DA               	addwfc	fsr2h,f,c
 25678  01816E  50DF               	movf	indf2,w,c
 25679  018170  013D               	movlb	61	; () banked
 25680  018172  6FEA               	movwf	234,b	;volatile
 25681                           
 25682                           ; BSR set to: 61
 25683  018174  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 25684                           
 25685                           ; BSR set to: 61
 25686                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 25687  018176  0E3F               	movlw	63
 25688  018178  6430               	cpfsgt	_uart1TxTail^0,c
 25689  01817A  D001               	goto	l8735
 25690                           
 25691                           ; BSR set to: 61
 25692                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 25693  01817C  6A30               	clrf	_uart1TxTail^0,c	;volatile
 25694  01817E                     l8735:
 25695                           
 25696                           ; BSR set to: 61
 25697                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 25698  01817E  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 25699                           
 25700                           ;mcc_generated_files/uart1.c: 222:  } else {
 25701  018180  0012               	return	
 25702  018182                     l581:
 25703                           
 25704                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 25705  018182  0139               	movlb	57	; () banked
 25706  018184  9993               	bcf	147,4,b	;volatile
 25707                           
 25708                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25709  018186  0012               	return		;funcret
 25710  018188                     __end_of_UART1_Transmit_ISR:
 25711                           	opt callstack 0
 25712                           
 25713 ;; *************** function _UART1_rx_vect_isr *****************
 25714 ;; Defined at:
 25715 ;;		line 206 in file "mcc_generated_files/uart1.c"
 25716 ;; Parameters:    Size  Location     Type
 25717 ;;		None
 25718 ;; Auto vars:     Size  Location     Type
 25719 ;;		None
 25720 ;; Return value:  Size  Location     Type
 25721 ;;                  1    wreg      void 
 25722 ;; Registers used:
 25723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25724 ;; Tracked objects:
 25725 ;;		On entry : 0/0
 25726 ;;		On exit  : 0/0
 25727 ;;		Unchanged: 0/0
 25728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25733 ;;Total ram usage:        0 bytes
 25734 ;; Hardware stack levels used:    1
 25735 ;; Hardware stack levels required when called:    1
 25736 ;; This function calls:
 25737 ;;		Absolute function
 25738 ;;		_UART1_Receive_ISR
 25739 ;; This function is called by:
 25740 ;;		Interrupt level 2
 25741 ;; This function uses a non-reentrant model
 25742 ;;
 25743                           
 25744                           	psect	text134
 25745  01848C                     __ptext134:
 25746                           	opt callstack 0
 25747  01848C                     _UART1_rx_vect_isr:
 25748                           	opt callstack 13
 25749                           
 25750                           ;incstack = 0
 25751  01848C  EE14  F000         	lfsr	1,___inthi_sp
 25752                           
 25753                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 25754  018490  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25755  018492  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 25756  018494  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 25757  018496  B4D8               	btfsc	status,2,c
 25758  018498  0011               	retfie		f
 25759                           
 25760                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 25761  01849A  D801               	call	i2u862_48
 25762  01849C  0011               	retfie		f
 25763  01849E                     i2u862_48:
 25764  01849E  0005               	push	
 25765  0184A0  6EFA               	movwf	pclath,c
 25766  0184A2  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25767  0184A4  6EFD               	movwf	tosl,c
 25768  0184A6  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 25769  0184A8  6EFE               	movwf	tosh,c
 25770  0184AA  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 25771  0184AC  6EFF               	movwf	tosu,c
 25772  0184AE  50FA               	movf	pclath,w,c
 25773  0184B0  0012               	return		;indir
 25774  0184B2                     __end_of_UART1_rx_vect_isr:
 25775                           	opt callstack 0
 25776                           
 25777 ;; *************** function _UART1_Receive_ISR *****************
 25778 ;; Defined at:
 25779 ;;		line 229 in file "mcc_generated_files/uart1.c"
 25780 ;; Parameters:    Size  Location     Type
 25781 ;;		None
 25782 ;; Auto vars:     Size  Location     Type
 25783 ;;		None
 25784 ;; Return value:  Size  Location     Type
 25785 ;;                  1  [STACK] void 
 25786 ;; Registers used:
 25787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25788 ;; Tracked objects:
 25789 ;;		On entry : 0/0
 25790 ;;		On exit  : 0/0
 25791 ;;		Unchanged: 0/0
 25792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25797 ;;Total ram usage:        0 bytes
 25798 ;; Hardware stack levels used:    1
 25799 ;; This function calls:
 25800 ;;		Nothing
 25801 ;; This function is called by:
 25802 ;;		_UART1_Initialize
 25803 ;;		_UART1_rx_vect_isr
 25804 ;; This function uses a reentrant model
 25805 ;;
 25806                           
 25807                           	psect	text135
 25808  01862C                     __ptext135:
 25809                           	opt callstack 0
 25810  01862C                     _UART1_Receive_ISR:
 25811                           	opt callstack 13
 25812                           
 25813                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 25814                           
 25815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25816                           ;incstack = 0
 25817  01862C  0E00               	movlw	low _uart1RxBuffer
 25818  01862E  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 25819  018630  6ED9               	movwf	fsr2l,c
 25820  018632  6ADA               	clrf	fsr2h,c
 25821  018634  0E06               	movlw	high _uart1RxBuffer
 25822  018636  22DA               	addwfc	fsr2h,f,c
 25823  018638  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 25824  01863E  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 25825                           
 25826                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 25827  018640  282E               	incf	_uart1RxHead^0,w,c
 25828  018642  B4D8               	btfsc	status,2,c
 25829                           
 25830                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 25831  018644  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 25832                           
 25833                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 25834  018646  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 25835                           
 25836                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25837  018648  0012               	return		;funcret
 25838  01864A                     __end_of_UART1_Receive_ISR:
 25839                           	opt callstack 0
 25840                           
 25841 ;; *************** function _UART2_tx_vect_isr *****************
 25842 ;; Defined at:
 25843 ;;		line 195 in file "mcc_generated_files/uart2.c"
 25844 ;; Parameters:    Size  Location     Type
 25845 ;;		None
 25846 ;; Auto vars:     Size  Location     Type
 25847 ;;		None
 25848 ;; Return value:  Size  Location     Type
 25849 ;;                  1    wreg      void 
 25850 ;; Registers used:
 25851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25852 ;; Tracked objects:
 25853 ;;		On entry : 0/0
 25854 ;;		On exit  : 0/0
 25855 ;;		Unchanged: 0/0
 25856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25861 ;;Total ram usage:        0 bytes
 25862 ;; Hardware stack levels used:    1
 25863 ;; Hardware stack levels required when called:    1
 25864 ;; This function calls:
 25865 ;;		Absolute function
 25866 ;;		_UART2_Transmit_ISR
 25867 ;; This function is called by:
 25868 ;;		Interrupt level 2
 25869 ;; This function uses a non-reentrant model
 25870 ;;
 25871                           
 25872                           	psect	text136
 25873  0184B4                     __ptext136:
 25874                           	opt callstack 0
 25875  0184B4                     _UART2_tx_vect_isr:
 25876                           	opt callstack 13
 25877                           
 25878                           ;incstack = 0
 25879  0184B4  EE14  F000         	lfsr	1,___inthi_sp
 25880                           
 25881                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25882  0184B8  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25883  0184BA  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 25884  0184BC  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 25885  0184BE  B4D8               	btfsc	status,2,c
 25886  0184C0  0011               	retfie		f
 25887                           
 25888                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25889  0184C2  D801               	call	i2u864_48
 25890  0184C4  0011               	retfie		f
 25891  0184C6                     i2u864_48:
 25892  0184C6  0005               	push	
 25893  0184C8  6EFA               	movwf	pclath,c
 25894  0184CA  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25895  0184CC  6EFD               	movwf	tosl,c
 25896  0184CE  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 25897  0184D0  6EFE               	movwf	tosh,c
 25898  0184D2  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 25899  0184D4  6EFF               	movwf	tosu,c
 25900  0184D6  50FA               	movf	pclath,w,c
 25901  0184D8  0012               	return		;indir
 25902  0184DA                     __end_of_UART2_tx_vect_isr:
 25903                           	opt callstack 0
 25904                           
 25905 ;; *************** function _UART2_Transmit_ISR *****************
 25906 ;; Defined at:
 25907 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25908 ;; Parameters:    Size  Location     Type
 25909 ;;		None
 25910 ;; Auto vars:     Size  Location     Type
 25911 ;;		None
 25912 ;; Return value:  Size  Location     Type
 25913 ;;                  1  [STACK] void 
 25914 ;; Registers used:
 25915 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25916 ;; Tracked objects:
 25917 ;;		On entry : 0/0
 25918 ;;		On exit  : 3B/39
 25919 ;;		Unchanged: 0/0
 25920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25925 ;;Total ram usage:        0 bytes
 25926 ;; Hardware stack levels used:    1
 25927 ;; This function calls:
 25928 ;;		Nothing
 25929 ;; This function is called by:
 25930 ;;		_UART2_Initialize
 25931 ;;		_UART2_tx_vect_isr
 25932 ;; This function uses a reentrant model
 25933 ;;
 25934                           
 25935                           	psect	text137
 25936  018188                     __ptext137:
 25937                           	opt callstack 0
 25938  018188                     _UART2_Transmit_ISR:
 25939                           	opt callstack 13
 25940                           
 25941                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25942                           
 25943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25944                           ;incstack = 0
 25945  018188  0E40               	movlw	64
 25946  01818A  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 25947  01818C  D010               	goto	l701
 25948                           
 25949                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25950  01818E  0E50               	movlw	low _uart2TxBuffer
 25951  018190  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 25952  018192  6ED9               	movwf	fsr2l,c
 25953  018194  6ADA               	clrf	fsr2h,c
 25954  018196  0E03               	movlw	high _uart2TxBuffer
 25955  018198  22DA               	addwfc	fsr2h,f,c
 25956  01819A  50DF               	movf	indf2,w,c
 25957  01819C  013D               	movlb	61	; () banked
 25958  01819E  6FD2               	movwf	210,b	;volatile
 25959                           
 25960                           ; BSR set to: 61
 25961  0181A0  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 25962                           
 25963                           ; BSR set to: 61
 25964                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25965  0181A2  0E3F               	movlw	63
 25966  0181A4  642A               	cpfsgt	_uart2TxTail^0,c
 25967  0181A6  D001               	goto	l8757
 25968                           
 25969                           ; BSR set to: 61
 25970                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 25971  0181A8  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 25972  0181AA                     l8757:
 25973                           
 25974                           ; BSR set to: 61
 25975                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 25976  0181AA  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 25977                           
 25978                           ;mcc_generated_files/uart2.c: 224:     }
 25979  0181AC  0012               	return	
 25980  0181AE                     l701:
 25981                           
 25982                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 25983  0181AE  0139               	movlb	57	; () banked
 25984  0181B0  9796               	bcf	150,3,b	;volatile
 25985                           
 25986                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25987  0181B2  0012               	return		;funcret
 25988  0181B4                     __end_of_UART2_Transmit_ISR:
 25989                           	opt callstack 0
 25990                           
 25991 ;; *************** function _UART2_rx_vect_isr *****************
 25992 ;; Defined at:
 25993 ;;		line 203 in file "mcc_generated_files/uart2.c"
 25994 ;; Parameters:    Size  Location     Type
 25995 ;;		None
 25996 ;; Auto vars:     Size  Location     Type
 25997 ;;		None
 25998 ;; Return value:  Size  Location     Type
 25999 ;;                  1    wreg      void 
 26000 ;; Registers used:
 26001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26002 ;; Tracked objects:
 26003 ;;		On entry : 0/0
 26004 ;;		On exit  : 0/0
 26005 ;;		Unchanged: 0/0
 26006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26011 ;;Total ram usage:        0 bytes
 26012 ;; Hardware stack levels used:    1
 26013 ;; Hardware stack levels required when called:    1
 26014 ;; This function calls:
 26015 ;;		Absolute function
 26016 ;;		_UART2_Receive_ISR
 26017 ;; This function is called by:
 26018 ;;		Interrupt level 2
 26019 ;; This function uses a non-reentrant model
 26020 ;;
 26021                           
 26022                           	psect	text138
 26023  0184DC                     __ptext138:
 26024                           	opt callstack 0
 26025  0184DC                     _UART2_rx_vect_isr:
 26026                           	opt callstack 13
 26027                           
 26028                           ;incstack = 0
 26029  0184DC  EE14  F000         	lfsr	1,___inthi_sp
 26030                           
 26031                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26032  0184E0  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26033  0184E2  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26034  0184E4  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26035  0184E6  B4D8               	btfsc	status,2,c
 26036  0184E8  0011               	retfie		f
 26037                           
 26038                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26039  0184EA  D801               	call	i2u866_48
 26040  0184EC  0011               	retfie		f
 26041  0184EE                     i2u866_48:
 26042  0184EE  0005               	push	
 26043  0184F0  6EFA               	movwf	pclath,c
 26044  0184F2  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26045  0184F4  6EFD               	movwf	tosl,c
 26046  0184F6  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26047  0184F8  6EFE               	movwf	tosh,c
 26048  0184FA  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26049  0184FC  6EFF               	movwf	tosu,c
 26050  0184FE  50FA               	movf	pclath,w,c
 26051  018500  0012               	return		;indir
 26052  018502                     __end_of_UART2_rx_vect_isr:
 26053                           	opt callstack 0
 26054                           
 26055 ;; *************** function _UART2_Receive_ISR *****************
 26056 ;; Defined at:
 26057 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26058 ;; Parameters:    Size  Location     Type
 26059 ;;		None
 26060 ;; Auto vars:     Size  Location     Type
 26061 ;;		None
 26062 ;; Return value:  Size  Location     Type
 26063 ;;                  1  [STACK] void 
 26064 ;; Registers used:
 26065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26066 ;; Tracked objects:
 26067 ;;		On entry : 0/0
 26068 ;;		On exit  : 0/0
 26069 ;;		Unchanged: 0/0
 26070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26075 ;;Total ram usage:        0 bytes
 26076 ;; Hardware stack levels used:    1
 26077 ;; This function calls:
 26078 ;;		Nothing
 26079 ;; This function is called by:
 26080 ;;		_UART2_Initialize
 26081 ;;		_UART2_rx_vect_isr
 26082 ;; This function uses a reentrant model
 26083 ;;
 26084                           
 26085                           	psect	text139
 26086  01864A                     __ptext139:
 26087                           	opt callstack 0
 26088  01864A                     _UART2_Receive_ISR:
 26089                           	opt callstack 13
 26090                           
 26091                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26092                           
 26093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26094                           ;incstack = 0
 26095  01864A  0E00               	movlw	low _uart2RxBuffer
 26096  01864C  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 26097  01864E  6ED9               	movwf	fsr2l,c
 26098  018650  6ADA               	clrf	fsr2h,c
 26099  018652  0E07               	movlw	high _uart2RxBuffer
 26100  018654  22DA               	addwfc	fsr2h,f,c
 26101  018656  006F F743 FFDF     	movff	15824,indf2	;volatile
 26102  01865C  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 26103                           
 26104                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26105  01865E  2828               	incf	_uart2RxHead^0,w,c
 26106  018660  B4D8               	btfsc	status,2,c
 26107                           
 26108                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26109  018662  6A28               	clrf	_uart2RxHead^0,c	;volatile
 26110                           
 26111                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26112  018664  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 26113                           
 26114                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26115  018666  0012               	return		;funcret
 26116  018668                     __end_of_UART2_Receive_ISR:
 26117                           	opt callstack 0
 26118                           
 26119 ;; *************** function _TMR6_ISR *****************
 26120 ;; Defined at:
 26121 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26122 ;; Parameters:    Size  Location     Type
 26123 ;;		None
 26124 ;; Auto vars:     Size  Location     Type
 26125 ;;		None
 26126 ;; Return value:  Size  Location     Type
 26127 ;;                  1    wreg      void 
 26128 ;; Registers used:
 26129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26130 ;; Tracked objects:
 26131 ;;		On entry : 0/0
 26132 ;;		On exit  : 0/0
 26133 ;;		Unchanged: 0/0
 26134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26137 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26139 ;;Total ram usage:        1 bytes
 26140 ;; Hardware stack levels used:    1
 26141 ;; Hardware stack levels required when called:    2
 26142 ;; This function calls:
 26143 ;;		_TMR6_CallBack
 26144 ;; This function is called by:
 26145 ;;		Interrupt level 2
 26146 ;; This function uses a non-reentrant model
 26147 ;;
 26148                           
 26149                           	psect	text140
 26150  0186BC                     __ptext140:
 26151                           	opt callstack 0
 26152  0186BC                     _TMR6_ISR:
 26153                           	opt callstack 12
 26154                           
 26155                           ;incstack = 0
 26156  0186BC  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 26157  0186C2  EE14  F000         	lfsr	1,___inthi_sp
 26158                           
 26159                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26160  0186C6  0139               	movlb	57	; () banked
 26161  0186C8  91A9               	bcf	169,0,b	;volatile
 26162                           
 26163                           ; BSR set to: 57
 26164                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26165  0186CA  ECA5  F0C2         	call	_TMR6_CallBack	;wreg free
 26166  0186CE  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 26167  0186D4  0011               	retfie		f
 26168  0186D6                     __end_of_TMR6_ISR:
 26169                           	opt callstack 0
 26170                           
 26171 ;; *************** function _TMR6_CallBack *****************
 26172 ;; Defined at:
 26173 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26174 ;; Parameters:    Size  Location     Type
 26175 ;;		None
 26176 ;; Auto vars:     Size  Location     Type
 26177 ;;		None
 26178 ;; Return value:  Size  Location     Type
 26179 ;;                  1  [STACK] void 
 26180 ;; Registers used:
 26181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26182 ;; Tracked objects:
 26183 ;;		On entry : 3F/39
 26184 ;;		On exit  : 0/0
 26185 ;;		Unchanged: 0/0
 26186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26191 ;;Total ram usage:        0 bytes
 26192 ;; Hardware stack levels used:    1
 26193 ;; Hardware stack levels required when called:    1
 26194 ;; This function calls:
 26195 ;;		Absolute function
 26196 ;;		_TMR6_DefaultInterruptHandler
 26197 ;; This function is called by:
 26198 ;;		_TMR6_ISR
 26199 ;; This function uses a reentrant model
 26200 ;;
 26201                           
 26202                           	psect	text141
 26203  01854A                     __ptext141:
 26204                           	opt callstack 0
 26205  01854A                     _TMR6_CallBack:
 26206                           	opt callstack 12
 26207                           
 26208                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26209                           
 26210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26211                           ;incstack = 0
 26212  01854A  0100               	movlb	0	; () banked
 26213  01854C  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26214  01854E  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26215  018550  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26216  018552  B4D8               	btfsc	status,2,c
 26217  018554  0012               	return	
 26218                           
 26219                           ; BSR set to: 0
 26220                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26221  018556  D801               	call	u839_48
 26222  018558  0012               	return	
 26223  01855A                     u839_48:
 26224  01855A  0005               	push	
 26225  01855C  6EFA               	movwf	pclath,c
 26226  01855E  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26227  018560  6EFD               	movwf	tosl,c
 26228  018562  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26229  018564  6EFE               	movwf	tosh,c
 26230  018566  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26231  018568  6EFF               	movwf	tosu,c
 26232  01856A  50FA               	movf	pclath,w,c
 26233  01856C  0012               	return		;indir
 26234  01856E                     __end_of_TMR6_CallBack:
 26235                           	opt callstack 0
 26236                           
 26237 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26238 ;; Defined at:
 26239 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26240 ;; Parameters:    Size  Location     Type
 26241 ;;		None
 26242 ;; Auto vars:     Size  Location     Type
 26243 ;;  i               1  [STACK] unsigned char 
 26244 ;; Return value:  Size  Location     Type
 26245 ;;                  1  [STACK] void 
 26246 ;; Registers used:
 26247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26248 ;; Tracked objects:
 26249 ;;		On entry : 3F/0
 26250 ;;		On exit  : 0/0
 26251 ;;		Unchanged: 0/0
 26252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26257 ;;Total ram usage:        0 bytes
 26258 ;; Hardware stack levels used:    1
 26259 ;; This function calls:
 26260 ;;		Nothing
 26261 ;; This function is called by:
 26262 ;;		_TMR6_Initialize
 26263 ;;		_TMR6_CallBack
 26264 ;; This function uses a reentrant model
 26265 ;;
 26266                           
 26267                           	psect	text142
 26268  017DDC                     __ptext142:
 26269                           	opt callstack 0
 26270  017DDC                     _TMR6_DefaultInterruptHandler:
 26271                           	opt callstack 0
 26272                           
 26273                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26274  017DDC  52E6               	movf	postinc1,f,c
 26275                           
 26276                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26277                           ;stkvar	_i @ sp[(-1)+0]
 26278                           
 26279                           ;incstack = 0
 26280  017DDE  0EFF               	movlw	-1
 26281  017DE0  6AE3               	clrf	plusw1,c
 26282  017DE2                     l8435:
 26283                           
 26284                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26285                           ;stkvar	_i @ sp[(-1)+0]
 26286  017DE2  0EFF               	movlw	-1
 26287  017DE4  50E3               	movf	plusw1,w,c
 26288  017DE6  0D02               	mullw	2
 26289  017DE8  50F3               	movf	243,w,c
 26290  017DEA  0F89               	addlw	low _tickCount
 26291  017DEC  6ED9               	movwf	fsr2l,c
 26292  017DEE  6ADA               	clrf	fsr2h,c
 26293  017DF0  50DE               	movf	postinc2,w,c
 26294  017DF2  10DE               	iorwf	postinc2,w,c
 26295  017DF4  B4D8               	btfsc	status,2,c
 26296  017DF6  D00A               	goto	l8439
 26297                           
 26298                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26299                           ;stkvar	_i @ sp[(-1)+0]
 26300  017DF8  0EFF               	movlw	-1
 26301  017DFA  50E3               	movf	plusw1,w,c
 26302  017DFC  0D02               	mullw	2
 26303  017DFE  50F3               	movf	243,w,c
 26304  017E00  0F89               	addlw	low _tickCount
 26305  017E02  6ED9               	movwf	fsr2l,c
 26306  017E04  6ADA               	clrf	fsr2h,c
 26307  017E06  06DE               	decf	postinc2,f,c
 26308  017E08  0E00               	movlw	0
 26309  017E0A  5ADD               	subwfb	postdec2,f,c
 26310  017E0C                     l8439:
 26311                           
 26312                           ;mcc_generated_files/tmr6.c: 207:  }
 26313                           ;stkvar	_i @ sp[(-1)+0]
 26314  017E0C  0EFF               	movlw	-1
 26315  017E0E  2AE3               	incf	plusw1,f,c
 26316                           
 26317                           ;stkvar	_i @ sp[(-1)+0]
 26318  017E10  0EFF               	movlw	-1
 26319  017E12  006F FF8C  F032    	movff	plusw1,btemp
 26320  017E18  0E0B               	movlw	11
 26321  017E1A  6432               	cpfsgt	btemp^0,c
 26322  017E1C  D7E2               	goto	l8435
 26323                           
 26324                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26325  017E1E  52E5               	movf	postdec1,f,c
 26326  017E20  0012               	return		;funcret
 26327  017E22                     __end_of_TMR6_DefaultInterruptHandler:
 26328                           	opt callstack 0
 26329                           
 26330 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26331 ;; Defined at:
 26332 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26333 ;; Parameters:    Size  Location     Type
 26334 ;;		None
 26335 ;; Auto vars:     Size  Location     Type
 26336 ;;		None
 26337 ;; Return value:  Size  Location     Type
 26338 ;;                  1    wreg      void 
 26339 ;; Registers used:
 26340 ;;		None
 26341 ;; Tracked objects:
 26342 ;;		On entry : 0/0
 26343 ;;		On exit  : 3F/0
 26344 ;;		Unchanged: 0/0
 26345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26350 ;;Total ram usage:        0 bytes
 26351 ;; Hardware stack levels used:    1
 26352 ;; This function calls:
 26353 ;;		Nothing
 26354 ;; This function is called by:
 26355 ;;		Interrupt level 2
 26356 ;; This function uses a non-reentrant model
 26357 ;;
 26358                           
 26359                           	psect	text143
 26360  0187BC                     __ptext143:
 26361                           	opt callstack 0
 26362  0187BC                     _DMA1_DMASCNT_ISR:
 26363                           	opt callstack 14
 26364                           
 26365                           ;incstack = 0
 26366  0187BC  EE14  F000         	lfsr	1,___inthi_sp
 26367                           
 26368                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26369  0187C0  0139               	movlb	57	; () banked
 26370  0187C2  91A2               	bcf	162,0,b	;volatile
 26371                           
 26372                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26373  0187C4  0100               	movlb	0	; () banked
 26374  0187C6  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 26375                           
 26376                           ; BSR set to: 0
 26377  0187C8  0011               	retfie		f
 26378  0187CA                     __end_of_DMA1_DMASCNT_ISR:
 26379                           	opt callstack 0
 26380                           
 26381 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26382 ;; Defined at:
 26383 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26384 ;; Parameters:    Size  Location     Type
 26385 ;;		None
 26386 ;; Auto vars:     Size  Location     Type
 26387 ;;		None
 26388 ;; Return value:  Size  Location     Type
 26389 ;;                  1    wreg      void 
 26390 ;; Registers used:
 26391 ;;		None
 26392 ;; Tracked objects:
 26393 ;;		On entry : 0/0
 26394 ;;		On exit  : 3F/39
 26395 ;;		Unchanged: 0/0
 26396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26401 ;;Total ram usage:        0 bytes
 26402 ;; Hardware stack levels used:    1
 26403 ;; This function calls:
 26404 ;;		Nothing
 26405 ;; This function is called by:
 26406 ;;		Interrupt level 2
 26407 ;; This function uses a non-reentrant model
 26408 ;;
 26409                           
 26410                           	psect	text144
 26411  0187D4                     __ptext144:
 26412                           	opt callstack 0
 26413  0187D4                     _DMA1_DMADCNT_ISR:
 26414                           	opt callstack 14
 26415                           
 26416                           ; BSR set to: 0
 26417                           ;incstack = 0
 26418  0187D4  EE14  F000         	lfsr	1,___inthi_sp
 26419                           
 26420                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26421  0187D8  0139               	movlb	57	; () banked
 26422  0187DA  93A2               	bcf	162,1,b	;volatile
 26423                           
 26424                           ; BSR set to: 57
 26425  0187DC  0011               	retfie		f
 26426  0187DE                     __end_of_DMA1_DMADCNT_ISR:
 26427                           	opt callstack 0
 26428                           
 26429 ;; *************** function _DMA1_DMAA_ISR *****************
 26430 ;; Defined at:
 26431 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26432 ;; Parameters:    Size  Location     Type
 26433 ;;		None
 26434 ;; Auto vars:     Size  Location     Type
 26435 ;;		None
 26436 ;; Return value:  Size  Location     Type
 26437 ;;                  1    wreg      void 
 26438 ;; Registers used:
 26439 ;;		None
 26440 ;; Tracked objects:
 26441 ;;		On entry : 0/0
 26442 ;;		On exit  : 3F/39
 26443 ;;		Unchanged: 0/0
 26444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26449 ;;Total ram usage:        0 bytes
 26450 ;; Hardware stack levels used:    1
 26451 ;; This function calls:
 26452 ;;		Nothing
 26453 ;; This function is called by:
 26454 ;;		Interrupt level 2
 26455 ;; This function uses a non-reentrant model
 26456 ;;
 26457                           
 26458                           	psect	text145
 26459  0187E0                     __ptext145:
 26460                           	opt callstack 0
 26461  0187E0                     _DMA1_DMAA_ISR:
 26462                           	opt callstack 14
 26463                           
 26464                           ; BSR set to: 57
 26465                           ;incstack = 0
 26466  0187E0  EE14  F000         	lfsr	1,___inthi_sp
 26467                           
 26468                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26469  0187E4  0139               	movlb	57	; () banked
 26470  0187E6  97A2               	bcf	162,3,b	;volatile
 26471                           
 26472                           ; BSR set to: 57
 26473  0187E8  0011               	retfie		f
 26474  0187EA                     __end_of_DMA1_DMAA_ISR:
 26475                           	opt callstack 0
 26476                           
 26477 ;; *************** function _DMA1_DMAOR_ISR *****************
 26478 ;; Defined at:
 26479 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26480 ;; Parameters:    Size  Location     Type
 26481 ;;		None
 26482 ;; Auto vars:     Size  Location     Type
 26483 ;;		None
 26484 ;; Return value:  Size  Location     Type
 26485 ;;                  1    wreg      void 
 26486 ;; Registers used:
 26487 ;;		None
 26488 ;; Tracked objects:
 26489 ;;		On entry : 0/0
 26490 ;;		On exit  : 3F/39
 26491 ;;		Unchanged: 0/0
 26492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26497 ;;Total ram usage:        0 bytes
 26498 ;; Hardware stack levels used:    1
 26499 ;; This function calls:
 26500 ;;		Nothing
 26501 ;; This function is called by:
 26502 ;;		Interrupt level 2
 26503 ;; This function uses a non-reentrant model
 26504 ;;
 26505                           
 26506                           	psect	text146
 26507  0187EC                     __ptext146:
 26508                           	opt callstack 0
 26509  0187EC                     _DMA1_DMAOR_ISR:
 26510                           	opt callstack 14
 26511                           
 26512                           ; BSR set to: 57
 26513                           ;incstack = 0
 26514  0187EC  EE14  F000         	lfsr	1,___inthi_sp
 26515                           
 26516                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26517  0187F0  0139               	movlb	57	; () banked
 26518  0187F2  95A2               	bcf	162,2,b	;volatile
 26519                           
 26520                           ; BSR set to: 57
 26521  0187F4  0011               	retfie		f
 26522  0187F6                     __end_of_DMA1_DMAOR_ISR:
 26523                           	opt callstack 0
 26524                           
 26525                           ;
 26526                           ; Interrupt Vector Table @ 0x8
 26527                           ;
 26528                           
 26529                           	psect	ivt0x8
 26530  000008                     __pivt0x8:
 26531                           	opt callstack 0
 26532  000008                     ivt0x8_base:
 26533                           	opt callstack 0
 26534                           
 26535                           ; Vector 0 : SWINT
 26536  000008  620C               	dw	_Default_ISR shr (0+2)
 26537                           
 26538                           ; Vector 1 : HLVD
 26539  00000A  620C               	dw	_Default_ISR shr (0+2)
 26540                           
 26541                           ; Vector 2 : OSF
 26542  00000C  620C               	dw	_Default_ISR shr (0+2)
 26543                           
 26544                           ; Vector 3 : CSW
 26545  00000E  620C               	dw	_Default_ISR shr (0+2)
 26546                           
 26547                           ; Vector 4 : NVM
 26548  000010  620C               	dw	_Default_ISR shr (0+2)
 26549                           
 26550                           ; Vector 5 : SCAN
 26551  000012  620C               	dw	_Default_ISR shr (0+2)
 26552                           
 26553                           ; Vector 6 : CRC
 26554  000014  620C               	dw	_Default_ISR shr (0+2)
 26555                           
 26556                           ; Vector 7 : IOC
 26557  000016  620C               	dw	_Default_ISR shr (0+2)
 26558                           
 26559                           ; Vector 8 : INT0
 26560  000018  61EB               	dw	_INT0_ISR shr (0+2)
 26561                           
 26562                           ; Vector 9 : ZCD
 26563  00001A  620C               	dw	_Default_ISR shr (0+2)
 26564                           
 26565                           ; Vector 10 : AD
 26566  00001C  6078               	dw	_ADCC_ISR shr (0+2)
 26567                           
 26568                           ; Vector 11 : ADT
 26569  00001E  5E04               	dw	_ADCC_ThresholdISR shr (0+2)
 26570                           
 26571                           ; Vector 12 : CMP1
 26572  000020  620C               	dw	_Default_ISR shr (0+2)
 26573                           
 26574                           ; Vector 13 : SMT1
 26575  000022  620C               	dw	_Default_ISR shr (0+2)
 26576                           
 26577                           ; Vector 14 : SMT1PRA
 26578  000024  620C               	dw	_Default_ISR shr (0+2)
 26579                           
 26580                           ; Vector 15 : SMT1PRW
 26581  000026  620C               	dw	_Default_ISR shr (0+2)
 26582                           
 26583                           ; Vector 16 : DMA1SCNT
 26584  000028  61EF               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26585                           
 26586                           ; Vector 17 : DMA1DCNT
 26587  00002A  61F5               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26588                           
 26589                           ; Vector 18 : DMA1OR
 26590  00002C  61FB               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26591                           
 26592                           ; Vector 19 : DMA1A
 26593  00002E  61F8               	dw	_DMA1_DMAA_ISR shr (0+2)
 26594                           
 26595                           ; Vector 20 : SPI1RX
 26596  000030  620C               	dw	_Default_ISR shr (0+2)
 26597                           
 26598                           ; Vector 21 : SPI1TX
 26599  000032  620C               	dw	_Default_ISR shr (0+2)
 26600                           
 26601                           ; Vector 22 : SPI1
 26602  000034  620C               	dw	_Default_ISR shr (0+2)
 26603                           
 26604                           ; Vector 23 : I2C1RX
 26605  000036  620C               	dw	_Default_ISR shr (0+2)
 26606                           
 26607                           ; Vector 24 : I2C1TX
 26608  000038  620C               	dw	_Default_ISR shr (0+2)
 26609                           
 26610                           ; Vector 25 : I2C1
 26611  00003A  620C               	dw	_Default_ISR shr (0+2)
 26612                           
 26613                           ; Vector 26 : I2C1E
 26614  00003C  620C               	dw	_Default_ISR shr (0+2)
 26615                           
 26616                           ; Vector 27 : U1RX
 26617  00003E  6123               	dw	_UART1_rx_vect_isr shr (0+2)
 26618                           
 26619                           ; Vector 28 : U1TX
 26620  000040  6119               	dw	_UART1_tx_vect_isr shr (0+2)
 26621                           
 26622                           ; Vector 29 : U1E
 26623  000042  620C               	dw	_Default_ISR shr (0+2)
 26624                           
 26625                           ; Vector 30 : U1
 26626  000044  620C               	dw	_Default_ISR shr (0+2)
 26627                           
 26628                           ; Vector 31 : TMR0
 26629  000046  620C               	dw	_Default_ISR shr (0+2)
 26630                           
 26631                           ; Vector 32 : TMR1
 26632  000048  620C               	dw	_Default_ISR shr (0+2)
 26633                           
 26634                           ; Vector 33 : TMR1G
 26635  00004A  620C               	dw	_Default_ISR shr (0+2)
 26636                           
 26637                           ; Vector 34 : TMR2
 26638  00004C  620C               	dw	_Default_ISR shr (0+2)
 26639                           
 26640                           ; Vector 35 : CCP1
 26641  00004E  620C               	dw	_Default_ISR shr (0+2)
 26642                           
 26643                           ; Vector 36 : Undefined
 26644  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26645                           
 26646                           ; Vector 37 : NCO1
 26647  000052  620C               	dw	_Default_ISR shr (0+2)
 26648                           
 26649                           ; Vector 38 : CWG1
 26650  000054  620C               	dw	_Default_ISR shr (0+2)
 26651                           
 26652                           ; Vector 39 : CLC1
 26653  000056  620C               	dw	_Default_ISR shr (0+2)
 26654                           
 26655                           ; Vector 40 : INT1
 26656  000058  5FBA               	dw	_INT1_ISR shr (0+2)
 26657                           
 26658                           ; Vector 41 : CMP2
 26659  00005A  620C               	dw	_Default_ISR shr (0+2)
 26660                           
 26661                           ; Vector 42 : DMA2SCNT
 26662  00005C  620C               	dw	_Default_ISR shr (0+2)
 26663                           
 26664                           ; Vector 43 : DMA2DCNT
 26665  00005E  620C               	dw	_Default_ISR shr (0+2)
 26666                           
 26667                           ; Vector 44 : DMA2OR
 26668  000060  620C               	dw	_Default_ISR shr (0+2)
 26669                           
 26670                           ; Vector 45 : DMA2A
 26671  000062  620C               	dw	_Default_ISR shr (0+2)
 26672                           
 26673                           ; Vector 46 : I2C2RX
 26674  000064  620C               	dw	_Default_ISR shr (0+2)
 26675                           
 26676                           ; Vector 47 : I2C2TX
 26677  000066  620C               	dw	_Default_ISR shr (0+2)
 26678                           
 26679                           ; Vector 48 : I2C2
 26680  000068  620C               	dw	_Default_ISR shr (0+2)
 26681                           
 26682                           ; Vector 49 : I2C2E
 26683  00006A  620C               	dw	_Default_ISR shr (0+2)
 26684                           
 26685                           ; Vector 50 : U2RX
 26686  00006C  6137               	dw	_UART2_rx_vect_isr shr (0+2)
 26687                           
 26688                           ; Vector 51 : U2TX
 26689  00006E  612D               	dw	_UART2_tx_vect_isr shr (0+2)
 26690                           
 26691                           ; Vector 52 : U2E
 26692  000070  620C               	dw	_Default_ISR shr (0+2)
 26693                           
 26694                           ; Vector 53 : U2
 26695  000072  620C               	dw	_Default_ISR shr (0+2)
 26696                           
 26697                           ; Vector 54 : TMR3
 26698  000074  620C               	dw	_Default_ISR shr (0+2)
 26699                           
 26700                           ; Vector 55 : TMR3G
 26701  000076  620C               	dw	_Default_ISR shr (0+2)
 26702                           
 26703                           ; Vector 56 : TMR4
 26704  000078  620C               	dw	_Default_ISR shr (0+2)
 26705                           
 26706                           ; Vector 57 : CCP2
 26707  00007A  620C               	dw	_Default_ISR shr (0+2)
 26708                           
 26709                           ; Vector 58 : Undefined
 26710  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26711                           
 26712                           ; Vector 59 : CWG2
 26713  00007E  620C               	dw	_Default_ISR shr (0+2)
 26714                           
 26715                           ; Vector 60 : CLC2
 26716  000080  620C               	dw	_Default_ISR shr (0+2)
 26717                           
 26718                           ; Vector 61 : INT2
 26719  000082  620C               	dw	_Default_ISR shr (0+2)
 26720                           
 26721                           ; Vector 62 : Undefined
 26722  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26723                           
 26724                           ; Vector 63 : Undefined
 26725  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26726                           
 26727                           ; Vector 64 : Undefined
 26728  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26729                           
 26730                           ; Vector 65 : Undefined
 26731  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26732                           
 26733                           ; Vector 66 : Undefined
 26734  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26735                           
 26736                           ; Vector 67 : Undefined
 26737  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26738                           
 26739                           ; Vector 68 : Undefined
 26740  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26741                           
 26742                           ; Vector 69 : Undefined
 26743  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26744                           
 26745                           ; Vector 70 : TMR5
 26746  000094  5EB2               	dw	_TMR5_ISR shr (0+2)
 26747                           
 26748                           ; Vector 71 : TMR5G
 26749  000096  620C               	dw	_Default_ISR shr (0+2)
 26750                           
 26751                           ; Vector 72 : TMR6
 26752  000098  61AF               	dw	_TMR6_ISR shr (0+2)
 26753                           
 26754                           ; Vector 73 : CCP3
 26755  00009A  620C               	dw	_Default_ISR shr (0+2)
 26756                           
 26757                           ; Vector 74 : CWG3
 26758  00009C  620C               	dw	_Default_ISR shr (0+2)
 26759                           
 26760                           ; Vector 75 : CLC3
 26761  00009E  620C               	dw	_Default_ISR shr (0+2)
 26762                           
 26763                           ; Vector 76 : Undefined
 26764  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26765                           
 26766                           ; Vector 77 : Undefined
 26767  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26768                           
 26769                           ; Vector 78 : Undefined
 26770  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26771                           
 26772                           ; Vector 79 : Undefined
 26773  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26774                           
 26775                           ; Vector 80 : CCP4
 26776  0000A8  620C               	dw	_Default_ISR shr (0+2)
 26777                           
 26778                           ; Vector 81 : CLC4
 26779  0000AA  620C               	dw	_Default_ISR shr (0+2)
 26780  0000AC                     ivt0x8_undefint:
 26781                           	opt callstack 0
 26782  0000AC  00FF               	reset	
 26783                           
 26784                           	psect	text147
 26785  000000                     __ptext147:
 26786                           	opt callstack 0
 26787                           
 26788                           	psect	rparam
 26789  0000                     
 26790                           	psect	temp
 26791  000032                     btemp:
 26792                           	opt callstack 0
 26793  000032                     	ds	32
 26794  0000                     wtemp0	set	btemp
 26795  0000                     wtemp1	set	btemp+2
 26796  0000                     wtemp2	set	btemp+4
 26797  0000                     wtemp3	set	btemp+6
 26798  0000                     wtemp4	set	btemp+8
 26799  0000                     wtemp5	set	btemp+10
 26800  0000                     wtemp8	set	btemp+1
 26801  0000                     ttemp0	set	btemp
 26802  0000                     ttemp1	set	btemp+3
 26803  0000                     ttemp2	set	btemp+6
 26804  0000                     ttemp3	set	btemp+9
 26805  0000                     ttemp5	set	btemp+1
 26806  0000                     ttemp6	set	btemp+4
 26807  0000                     ttemp7	set	btemp+8
 26808  0000                     ltemp0	set	btemp
 26809  0000                     ltemp1	set	btemp+4
 26810  0000                     ltemp2	set	btemp+8
 26811  0000                     lltemp0	set	btemp
 26812  0000                     lltemp1	set	btemp+8
 26813  0000                     lltemp2	set	btemp+16
 26814  0000                     lltemp3	set	btemp+24
 26815                           tosu	equ	0x3FFF
 26816                           tosh	equ	0x3FFE
 26817                           tosl	equ	0x3FFD
 26818                           stkptr	equ	0x3FFC
 26819                           pclatu	equ	0x3FFB
 26820                           pclath	equ	0x3FFA
 26821                           pcl	equ	0x3FF9
 26822                           tblptru	equ	0x3FF8
 26823                           tblptrh	equ	0x3FF7
 26824                           tblptrl	equ	0x3FF6
 26825                           tablat	equ	0x3FF5
 26826                           prodh	equ	0x3FF4
 26827                           prodl	equ	0x3FF3
 26828                           indf0	equ	0x3FEF
 26829                           postinc0	equ	0x3FEE
 26830                           postdec0	equ	0x3FED
 26831                           preinc0	equ	0x3FEC
 26832                           plusw0	equ	0x3FEB
 26833                           fsr0h	equ	0x3FEA
 26834                           fsr0l	equ	0x3FE9
 26835                           wreg	equ	0x3FE8
 26836                           indf1	equ	0x3FE7
 26837                           postinc1	equ	0x3FE6
 26838                           postdec1	equ	0x3FE5
 26839                           preinc1	equ	0x3FE4
 26840                           plusw1	equ	0x3FE3
 26841                           fsr1h	equ	0x3FE2
 26842                           fsr1l	equ	0x3FE1
 26843                           bsr	equ	0x3FE0
 26844                           indf2	equ	0x3FDF
 26845                           postinc2	equ	0x3FDE
 26846                           postdec2	equ	0x3FDD
 26847                           preinc2	equ	0x3FDC
 26848                           plusw2	equ	0x3FDB
 26849                           fsr2h	equ	0x3FDA
 26850                           fsr2l	equ	0x3FD9
 26851                           status	equ	0x3FD8


Data Sizes:
    Strings     354
    Constant    144
    Data        250
    BSS         1430
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     228
    BANK2           256      0     251
    BANK3           256      0     211
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_36(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_19(CODE[9]), STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK2[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_19(CODE[9]), STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK2[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_42(CODE[4]), STR_41(CODE[4]), STR_38(CODE[4]), STR_37(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_42(CODE[4]), STR_41(CODE[4]), STR_38(CODE[4]), STR_37(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4988_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_19(CODE[9]), STR_18(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_19(CODE[9]), STR_18(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK2[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_19(CODE[9]), 
		 -> STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    S3997tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_19(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_18(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  300368
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                         _get_switch
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166972
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0    9110
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_switch
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D3      11       82.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      E4       7       89.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     69E      58        0.0%
DATA                 0      0     69E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 20:27:57 2019

                     _SPI1_Exchange8bit 85D2                __end_of_set_display_info 862C  
                                     _C 0100                                       _D 0500  
                                     _P 00BD                                       _R 00C7  
                                     _S 0060                                       _T FE0D  
                                     _V 0200        __end_of_TMR5_SetInterruptHandler 839A  
          __end_of_start_switch_handler 85D2                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 881E  
                           __CFG_LVP$ON 000000                                     l171 8742  
                                   l701 81AE                                     l581 8182  
                                   l835 85E0                                     _GIE 01FE97  
                                   _abs 7CC4                                     _pad 6900  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 86EE  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 8590  
                    _UART1_Transmit_ISR 815C                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 856E                            __CFG_ZCD$OFF 000000  
                                  l1028 7EE2                                    l2021 1D78  
                                  l1254 34D6                                    l1246 3326  
                                  l1336 7B2E                                    l1256 34DC  
                                  l2305 6F98                                    l2316 62F6  
                                  l2309 6222                                    l2343 6194  
                                  l1552 7F7E                                    l1472 7100  
                                  l1609 8628                                    l1561 5588  
                                  l1491 7FB2                                    l1812 695C  
                                  l1476 741A                                    l1832 3D2A  
                                  l1912 0B1A                                    l2704 5B04  
                                  l1569 6B1E                                    l1657 3C46  
                                  l2628 32D8                                    l1694 5E8C  
                                  l2830 67DE                                    l1950 4BC8  
                  _ADCC_StartConversion 875C                                    l2583 2D5E  
                                  l2735 7D04                                    l2727 6022  
                                  l2664 25A2                                    l2904 75B6  
                                  l2595 2BEE                                    l6115 727C  
                                  l7011 62F4                                    l7003 62BE  
                                  l1971 4110                                    l1868 123A  
                                  l6117 729E                                    l2766 5286  
                                  l6303 2C2E                                    l6231 297C  
                                  l6215 28D8                                    l6143 2602  
                                  l6313 2C56                                    l6225 294A  
                                  l6161 26C0                                    l6153 2658  
                                  l1897 066A                                    l6235 2986  
                                  l6155 2688                                    l7019 7C9A  
                                  l6403 5FC4                                    l2891 763A  
                                  l2876 5CCC                                    l6317 2C5C  
                                  l6229 296A                                    l6173 2732  
                                  l6149 2642                                    l7053 612C  
                                  l7045 6100                                    l7029 607E  
                                  l6351 2D3E                                    l6343 2CFE  
                                  l6263 2A6E                                    l6239 29B6  
                                  l6167 26F2                                    l6511 4E98  
                                  l7055 6142                                    l7047 611C  
                                  l6345 2D0E                                    l6329 2CBA  
                                  l6281 2B9E                                    l6257 2A52  
                                  l6185 279A                                    l6177 2748  
                                  l7073 7C6C                                    l6505 4E52  
                                  l6409 601A                                    l6441 45A4  
                                  l8041 5A02                                    l6339 2CE6  
                                  l6259 2A64                                    l6267 2AA0  
                                  l6179 2778                                    l6523 4F6A  
                                  l6611 2F22                                    l6427 762A  
                                  l8051 5A64                                    l8035 59C0  
                                  l8027 5954                                    l6605 2EDC  
                                  l6461 475A                                    l8037 59CE  
                                  l6279 2B78                                    l6551 5376  
                                  l6543 52EE                                    l6711 3284  
                                  l6631 2FB4                                    l6623 2F9A  
                                  l6455 46C2                                    l8047 5A30  
                                  l8039 59E4                                    l6297 2C10  
                                  l6289 2BD2                                    l6385 7CF4  
                                  l6705 3254                                    l6641 3044  
                                  l6617 2F60                                    l6609 2EF2  
                                  l6465 47C8                                    l6457 4712  
                                  l8049 5A4E                                    l6299 2C22  
                                  l7603 50F8                                    l6651 308C  
                                  l6483 75A6                                    l8059 5A82  
                                  l6741 1E18                                    l7613 51DA  
                                  l7605 5110                                    l6717 32AC  
                                  l8069 5AE4                                    l6823 2396  
                                  l6743 1E1E                                    l6735 1DD8  
                                  l7623 5276                                    l7607 5134  
                                  l6559 5422                                    l9311 3D64  
                                  l9303 3D1A                                    l6903 633A  
                                  l6719 32BC                                    l6671 312E  
                                  l6591 2E44                                    l6399 5FC0  
                                  l6833 23D8                                    l6761 1EEC  
                                  l6753 1EA6                                    l6745 1E4E  
                                  l8513 7F94                                    l7609 5172  
                                  l9241 7308                                    l6665 3112  
                                  l6657 30E0                                    l6649 307A  
                                  l6585 2DFE                                    l9401 0258  
                                  l7641 5C02                                    l8435 7DE2  
                                  l6843 2422                                    l6771 1F3E  
                                  l6763 1F1C                                    l9251 692C  
                                  l6499 4DFE                                    l9315 3D82  
                                  l6931 6434                                    l6923 6400  
                                  l6675 3154                                    l6659 30E4  
                                  l6579 2DBE                                    l9411 02FC  
                                  l8603 3C26                                    l6861 24E2  
                                  l6829 23B2                                    l9229 66F4  
                                  l9245 7346                                    l9261 69A2  
                                  l9325 3F94                                    l6909 635A  
                                  l6685 319E                                    l6589 2E14  
                                  l8439 7E0C                                    l6847 2428  
                                  l6759 1EE6                                    l8631 5D52  
                                  l9255 6954                                    l6951 6832  
                                  l6943 6808                                    l6599 2E9C  
                                  l9271 6E52                                    l9431 0406  
                                  l7639 5B96                                    l6857 249C  
                                  l9265 69EC                                    l9257 6966  
                                  l9345 4046                                    l6961 68B2  
                                  l6689 31A4                                    l9521 0A48  
                                  l9433 0470                                    l8651 6472  
                                  l6875 2550                                    l6867 250C  
                                  l8627 5D3A                                    l8619 5D0E  
                                  l7587 5036                                    l6947 681A  
                                  l6699 3218                                    l9531 0B34  
                                  l9507 0926                                    l9427 0396  
                                  l9419 032A                                    l9363 00AC  
                                  l8555 37D2                                    l8653 6478  
                                  l8661 6494                                    l6877 256A  
                                  l7909 851E                                    l7597 50CC  
                                  l7589 5058                                    l9277 74D2  
                                  l9349 4082                                    l6981 6F62  
                                  l9461 0594                                    l9453 057C  
                                  l9437 04D2                                    l8581 3A98  
                                  l8565 38F0                                    l8549 37A2  
                                  l8901 8294                                    l8735 817E  
                                  l8655 647E                                    l8663 64C0  
                                  l9279 74FE                                    l9607 0FD6  
                                  l9471 0602                                    l9455 058E  
                                  l9375 00F0                                    l9383 0146  
                                  l9703 4D5C                                    l8657 648C  
                                  l8649 6462                                    l6897 6324  
                                  l6969 68E6                                    l6985 6F96  
                                  l6977 6F20                                    l6993 61E0  
                                  l9609 0FF0                                    l9545 0C32  
                                  l9529 0B12                                    l9449 0554  
                                  l9393 01EA                                    l9801 1360  
                                  l8577 39FC                                    l8569 39CA  
                                  l9619 1092                                    l9491 06F0  
                                  l9395 0216                                    l9723 413A  
                                  l9803 1376                                    l8595 3C14  
                                  l8757 81AA                                    l8677 655E  
                                  l8669 64F0                                    l9645 119A  
                                  l9629 10E2                                    l9557 0CBA  
                                  l9565 0D24                                    l9573 0D90  
                                  l9581 0EA2                                    l9469 05F6  
                                  l9397 022C                                    l9717 4100  
                                  l9821 14A8                                    l8589 3B78  
                                  l8783 7ECA                                    l6999 6270  
                                  l9487 06B8                                    l9823 14E2  
                                  l9593 0F3A                                    l9497 077A  
                                  l9681 4BFE                                    l9665 4B4A  
                                  l9753 42CC                                    l9737 41D6  
                                  l9729 4176                                    l9761 4352  
                                  l9905 1B2A                                    l9841 165C  
                                  l9825 14F8                                    l8963 7678  
                                  l9851 16F2                                    l9685 4C3A  
                                  l9925 1D00                                    l7989 7FBC  
                                  l8885 76C8                                    l9695 4CF4  
                                  l9919 1CA6                                    l9871 18E8  
                                  l9863 1830                                    l9935 1D24  
                                  STR_1 FF82                                    STR_2 FFB3  
                                  l8969 7688                                    l9689 4C6A  
                                  l9777 443C                                    l9929 1D04  
                                  STR_3 FFE1                                    STR_4 FF71  
                                  l9699 4D20                                    l9875 191C  
                                  l9963 4948                                    STR_5 FF93  
                                  STR_6 FFB3                                    l9957 488A  
                                  STR_7 FFE1                                    STR_8 FF60  
                                  l9895 1A7C                                    l9799 1326  
                                  l9991 7172                                    STR_9 FEEE  
                                  l9977 4A60                                    l9969 49B2  
                                  l9989 7132                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5000 5F44  
                                  _T2PR 003FAB                                    u5100 75EA  
                                  u5005 5F3A                                    u5120 453C  
                                  u6010 6386                                    u5050 6012  
                                  u5130 4588                                    u5300 4DF8  
                                  u6100 68D2                                    u5060 6014  
                                  u4500 80C4                                    u5220 7E5A  
                                  u5045 5FF4                                    u5125 4532  
                                  u6030 6420                                    u5230 7E5C  
                                  u4600 28FE                                    u5320 4E4E  
                                  u6200 7C96                                    u5240 7564  
                                  u4610 291E                                    u6210 605E  
                                  u5170 4668                                    u5090 75E8  
                                  u5250 7566                                    _T6PR 003F93  
                                  u4611 2918                                    u5331 4E58  
                                  u5155 45C2                                    u4460 72CC  
                                  u5340 4E92                                    u5500 54AC  
                                  u5420 52E8                                    u6140 6F92  
                                  u6300 6174                                    u6220 6072  
                                  u5156 45C8                                    _PMD0 0039C0  
                                  u5157 45D6                                    _PMD1 0039C1  
                                  u5270 80F2                                    u6310 7C48  
                                  u5350 4EC4                                    u6230 60AC  
                                  u5190 4740                                    _PMD2 0039C2  
                                  u6215 6054                                    u5175 465E  
                                  _PMD3 0039C3                                    u4800 2C34  
                                  u4720 2A96                                    u5280 80F4  
                                  u6320 7C68                                    u5440 533E  
                                  u6080 685E                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u4650 29AE  
                                  u5370 4FA2                                    u5450 5370  
                                  u4490 80C2                                    _PMD6 0039C6  
                                  u4467 72BE                                    u6235 60A2  
                                  u5195 4736                                    _PMD7 0039C7  
                                  u4820 2C4E                                    u4660 29CE  
                                  u4628 2920                                    u5460 53A2  
                                  u4725 2A86                                    u5390 4FF4  
                                  u4655 299E                                    u4760 2BC0  
                                  u7320 50C8                                    u5480 545A  
                                  u5720 31F2                                    u5640 310C  
                                  u6280 614A                                    u9001 3FD8  
                                  u9010 3FEE                                    u5730 322C  
                                  u4930 8092                                    u8114 39E4  
                                  u9011 3FEC                                    u8115 39DE  
                                  u5900 241A                                    u4860 2CAA  
                                  u7340 5220                                    u9020 4002  
                                  u5740 3268                                    u7420 5C8E  
                                  u4940 8094                                    u5725 31E2  
                                  u5830 1F2C                                    u7350 5222  
                                  u9030 4006                                    u8134 3AB2  
                                  u8054 37BC                                    u8135 3AAC  
                                  u8055 37B6                                    u5680 3196  
                                  u9120 0194                                    u8160 3ADC  
                                  u4865 2C9A                                    u4890 2CCA  
                                  u8170 5CEC                                    u9050 401C  
                                  u9210 050E                                    u9130 0196  
                                  u8154 3AD4                                    u8074 37EC  
                                  u8155 3ACE                                    u8075 37E6  
                                  u5940 2476                                    u5845 20C0  
                                  u5950 24B0                                    u4990 7CD8  
                                  u9310 0648                                    u8094 380E  
                                  u5855 2188                                    u8095 3808  
                                  u5960 24F6                                    u9240 0562  
                                  u9160 02A6                                    u5945 2466  
                                  u5865 2350                                    u9170 02A8  
                                  u9090 00DA                                    u7805 7E96  
                                  u9270 05C6                                    u7920 7886  
                                  u8810 6764                                    u9540 10B8  
                                  u9380 0A18                                    u9700 40E6  
                                  u8910 3C7C                                    u8920 3C7E  
                                  u9560 116E                                    u9480 0EE4  
                                  u9640 4C60                                    u9800 434E  
                                  u7880 5A78                                    u7945 78BA  
                                  u7946 78BC                                    u7938 7888  
                                  u9570 1170                                    u9650 4CA6  
                                  u9810 436E                                    u9730 41CE  
                                  _PLLR 01CEE0                                    u8940 3CEE  
                                  u9740 4222                                    u9900 13BE  
                                  u9821 439E                                    u9805 4330  
                                  u8790 66E8                                    u8870 6ECC  
                                  u9830 43B4                                    u9750 4224  
                                  u9910 13C0                                    u9831 43B2  
                                  u8960 3D00                                    u9680 4D82  
                                  u9840 43C8                                    u9920 13E6  
                                  u9657 4C98                                    u9850 43CC  
                                  u9770 4282                                    u8980 3D50  
                                  u9780 4284                                    u8877 6EBE  
                                  u8990 3FA8                                    u9950 1540  
                                  u9960 1542                                    u9970 1568  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 820A                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0178                                    _atoi 501C  
                                  _ctoa 74B4                                    _main 32E2  
                                  _dtoa 3C4C                                    _nanf 79A6  
                                  _seed 01C8                                    _prec 001D  
                                  _nout 0019                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 4ADE                                    btemp 0032  
                                  _xtoa 40CC                  __end_of_check_adc_scan 8816  
                         ___fpclassifyf 5E96                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0023               __end_of_SPI1_Exchange8bit 85F0  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 848C  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0052  
                      __end_of_INT0_ISR 87BA                        __end_of_INT1_ISR 7F26  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 7108  
         __end_of_OSCILLATOR_Initialize 8748                                   l10041 7208  
                                 l10225 56EA                                   l10209 5686  
                                 l10321 3542                                   l10075 6A36  
                                 l10307 34E0                                   l10341 375A  
                                 l10309 350E                                   l10351 378E  
                                 l10335 363A                                   l10263 332E  
                                 l10337 3742                                   l10329 3566  
                                 l10265 3340                                   l10257 3308  
                                 l10195 5558                                   l10259 3310  
                                 PRLOCK 0039EF                         __end_of___aodiv 501C  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 2D68                                   _ADCLK 003EFF  
                       __end_of___aomod 54D0                                   _ADPCH 003EF1  
                       __end_of___fldiv 32E2                                   _ADREF 003EFD  
                       __end_of___awdiv 644E                         __end_of___flneg 7CC4  
                                 STR_10 FF14                                   STR_11 FF01  
                                 STR_12 FF4D                                   STR_20 FEC8  
                                 STR_21 FEC8                                   STR_13 FF27  
                                 STR_22 FFCE                                   STR_14 FF3A  
                                 STR_30 FEB5                                   STR_23 FFCE  
                                 STR_15 FFFC                                   STR_16 FFF9  
                                 STR_24 FFA4                                   STR_25 FFA4  
                                 STR_41 FFEA                           __CFG_WDTE$OFF 000000  
                                 STR_26 FFA4                                   STR_42 FFF2  
                                 STR_18 FFC2                                   STR_19 FFD8  
                                 STR_27 FE9D                                   STR_36 FEC7  
                       __end_of___awmod 6900                                   STR_45 FFF6  
                                 STR_37 FFE6                                   STR_29 FEDB  
                                 STR_38 FFEE                                   STR_47 FFF6  
                                 _ADRPT 003EEC                         __end_of___flmul 25AC  
                       __end_of___flsub 7D50                         __end_of___fltol 619E  
                                 u10100 1B7E                                   u10020 1746  
                                 u10050 19D6                                   u10060 19D8  
                                 u10160 4AD4                                   u10190 71E8  
                                 u10280 56D6                                   u10290 56D8  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8830                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8464  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 7B24  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 86D6  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
              __size_of_calc_model_data 0212                                   _fputc 66C4  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 7E66  
                                 _fputs 72F8                         __end_of_isdigit 80FE  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 8006                                   _width 001B  
                                 _putch 86A0                         __end_of_islower 809E  
                       __end_of_isspace 7C7C                _INT1_SetInterruptHandler 839A  
                       __end_of_isupper 80CE                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 834A  
           _UART1_SetRxInterruptHandler 8322                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 6C2C                         __end_of_tolower 7644  
                       __end_of_strncmp 5CD6                         __end_of_toupper 75C0  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 84B2                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 7D96                   __end_of_ringBufS_init 8282  
                       __initialization 6C2C                       _UART2_rx_vect_isr 84DC  
                          __end_of_atoi 5290                            __end_of_ctoa 753C  
                          __end_of_main 37A0                            __end_of_dtoa 40CC  
                          __end_of_nanf 7A08                            __end_of_stoa 4D9C  
                          __end_of_xtoa 4486                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 8706  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 8372  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0057  
             __end_of_UART1_tx_vect_isr 848A                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 81B4                         _PWM8_Initialize 871C  
                      _UART1_Initialize 7942                       _UART2_tx_vect_isr 84B4  
                    _UART2_Transmit_ISR 8188                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 78DE                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 7E66                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0052  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 7B16                    _start_switch_handler 85B2  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 879C                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F                                  u391_48 859E  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u820_28 6468                                  u823_20 6488  
                                u823_21 6482                                  u831_28 857C  
                                u842_28 8536                                  u827_24 6554  
                                u827_25 6550                                  u829_20 657A  
                                u829_26 657C                                  u855_44 76A8  
                                u855_45 76A2                                  u839_48 855A  
                                u798_20 8442                                  u798_26 8444  
                      __end_of___xxtofl 5B0E   __end_of_ADCC_DischargeSampleCapacitor 87FE  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 87F6  
              __end_of_send_lcd_cmd_dma 7C2A                     ??_UART2_tx_vect_isr 0057  
             __end_of_UART2_rx_vect_isr 8502              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 87CA                        _UART2_Initialize 7A6A  
                                _WaitMs 7F9A                         _conv_raw_result 37A0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 619E                                  ___fleq 6EDE  
                     _ADCC_ThresholdISR 7810                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 7390                                  _efgtoa 0000  
                                _floorf 4486                      ?_ADCC_ThresholdISR 0052  
                                _memset 47F2                    __size_of_help_button 0038  
                                clear_0 6C9A                                  clear_1 6CAE  
                                clear_2 6CC0                                  clear_3 6CCC  
                                clear_4 6CD8                                  clear_5 6CE4  
                                clear_6 6CF0                                  clear_7 6CFC  
                                clear_8 6D08                                  _printf 7A08  
                    _eaDogM_WriteString 71B0                                  _strcpy 6E0A  
                             ?_ADCC_ISR 0052                                  _strlen 7256  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 77A6  
                        _PMD_Initialize 8748               __end_of_UART2_tx_vect_isr 84DA  
                                lltemp0 0032                                  lltemp1 003A  
                                lltemp2 0042                                  lltemp3 004A  
                   ??_ADCC_ThresholdISR 0052                  __end_of_start_adc_scan 7942  
                          __mediumconst FE0C                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 7B7E  
                      __end_of_vfprintf 71B0                              _StartTimer 7F26  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 7DDC  
                     _SYSTEM_Initialize 7D50                              __accesstop 0060  
               __end_of__initialization 6D1A                               ?_INT0_ISR 0052  
                             ?_INT1_ISR 0052                    __end_of_display_help 880E  
                  __end_of_display_info 8806               __end_of_CLKREF_Initialize 87D4  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 7EA8                   _set_temp_display_help 877E  
             __end_of_ADCC_ThresholdISR 7878                  __end_of_ringBufS_flush 7422  
                        __pcstackCOMRAM 0052                              ___inthi_sp 1000  
                            ___intlo_sp 1800                            __pidataBANK0 80FE  
                          __pidataBANK1 876E                            __pidataBANK2 6FA2  
                             ?_TMR5_ISR 0052                               ?_TMR6_ISR 0052  
                        ivt0x8_undefint 00AC                           __end_of_fputc 67E8  
                         __end_of_fputs 7390                           __end_of_srand 803A  
                 __end_of_TMR5_CallBack 854A                           __end_of_putch 86BA  
               __end_of_PWM8_Initialize 8732                 __end_of_TMR6_Initialize 81DE  
                     _adc_int_t_handler 7644                  __end_of_PMD_Initialize 875C  
                            ??_ADCC_ISR 0052                   __end_of_TMR6_CallBack 856E  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0026  
                         _DMA1_DMAA_ISR 87E0                          _clear_adc_scan 881E  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0010  
             __end_of_SYSTEM_Initialize 7D96                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                              __pbssBANK0 0060  
                            __pbssBANK1 0100                              __pbssBANK2 02BB  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              _check_help 54D0  
               __end_of_conv_raw_result 3C4C                   _INT0_InterruptHandler 0016  
                            ??_INT0_ISR 0052                              ??_INT1_ISR 00F6  
                     __end_of_TimerDone 8526                        _DMA1_DMADCNT_ISR 87D4  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8684  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8372  
               __end_of_ADCC_Initialize 7810                              ??_TMR5_ISR 01E0  
             __end_of_adc_int_t_handler 76C2                              ??_TMR6_ISR 0057  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8412   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 83EA                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 862C  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8824                          ?_DMA1_DMAA_ISR 0052  
                      _DMA1_DMASCNT_ISR 87BC                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0052  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 8282                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 7EE8                 __size_of_switch_handler 0148  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 86D6  
                               __Lparam 0000                __end_of_UART1_Initialize 79A6  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 4D9C  
                               ___fladd 25AC                                 ___aomod 5290  
                               ___fldiv 2D68                                 ___awdiv 6300  
                               ___flneg 7C7C                                 ___awmod 67E8  
                               ___flmul 1D82                                 ___flsub 7D0A  
                               ___fltol 602C               __end_of_UART1_Receive_ISR 864A  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 6E0A                                 __pcinit 6C2C  
              __end_of_mode_lamp_bright 87AA                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 878E  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 32E2                                 __ptext1 85B2  
                               __ptext2 78DE                                 __ptext3 875C  
                               __ptext4 87F6                                 __ptext5 8006  
                               __ptext6 6D20                                 __ptext7 820A  
                               __ptext8 8232                                 __ptext9 85D2  
                     _UART2_Receive_ISR 864A                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8732  
                               us540999 5006                                 us551999 54BE  
                          __size_of_abs 0046                            __size_of_pad 0114  
                               _isalpha 7E22                                 _isdigit 80CE  
                               us890999 3C66                                 _mode_sw 0025  
                               us972999 414C                                 us959999 4AF0  
                     __end_of_lp_filter 5E96                                 _islower 806E  
                               _isspace 7C2A                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 7AC8  
                               _isupper 809E              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 6B22                                 _tolower 75C0  
                 __size_of_display_help 0008                                 _utctime 00B5  
                 __size_of_display_info 0008                                 _strncmp 5B0E  
                               _toupper 753C                    end_of_initialization 6D1A  
             __size_of_convert_adc_data 007A     __end_of_UART1_SetTxInterruptHandler 8322  
           _UART1_SetTxInterruptHandler 82FA     __end_of_UART2_SetRxInterruptHandler 82FA  
           _UART2_SetRxInterruptHandler 82D2                       __end_of_set_vterm 86A0  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8830               __end_of_UART2_Receive_ISR 8668  
                        wdtdelay@dcount 00B9                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0058                   _INT1_InterruptHandler 0013  
                             _PORTBbits 003FCB                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 834A                            _display_help 8806  
                 _TMR5_InterruptHandler 00C1                            _display_info 87FE  
  __size_of_UART2_SetTxInterruptHandler 0028                       __size_of_ADCC_ISR 002A  
   __end_of_ADCC_SetADIInterruptHandler 843A             _ADCC_SetADIInterruptHandler 8412  
                            _update_lcd 6A14                         _calc_model_data 56F8  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 773C                         _SPI1_Initialize 8706  
                 __end_of_get_vterm_ptr 815C                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 7FD0  
          __end_of_INTERRUPT_Initialize 78DE                              _vterm_dump 6596  
                        __end_of___flge 6300                          __end_of___fleq 6FA2  
  __end_of_INT0_DefaultInterruptHandler 883A   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 8838              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 7B7E                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005C                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0228                          __end_of_floorf 47F2  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 00AD  
                        __end_of_memset 4ADE                          __end_of_printf 7A6A  
              __end_of_DMA1_DMADCNT_ISR 87DE             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 85B2                          __end_of_strcpy 6EDE  
                        __end_of_strlen 72F8                     start_initialization 6C2C  
  __end_of_TMR5_DefaultInterruptHandler 8462   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 843A         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 7D0A                   __end_of_INT1_CallBack 8590  
             __size_of_set_display_info 001E                             __end_of_pad 6A14  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 825A  
                        _switch_handler 644E           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0600  
                 __end_of___fpclassifyf 602C                           _uart2RxBuffer 0700  
                         _uart1TxBuffer 02BB                __end_of_DMA1_DMASCNT_ISR 87CA  
                         _uart2TxBuffer 0350                          _DMA1_DMAOR_ISR 87EC  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8502  
                         _ringBufS_init 825A                             __pdataBANK0 00C7  
                           __pdataBANK1 01D0                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 806E                 __end_of_calc_model_data 590A  
                   __end_of_help_button 7F9A         __end_of_eaDogM_WriteStringAtPos 8006  
               __end_of_DMA1_Initialize 77A6                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 83EA                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01E0                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 6596                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 871C                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FE9D  
                      _convert_adc_data 76C2               __size_of_ringBufS_put_dma 00AA  
                          _init_display 6D20                  __end_of_DMA1_DMAOR_ISR 87F6  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 7BD8  
                _PIN_MANAGER_Initialize 7422                    __end_of_wait_lcd_set 882A  
                         __pmediumconst FE0C                               __ptext100 871C  
                             __ptext101 8748                               __ptext110 773C  
                             __ptext102 7422                               __ptext111 87CA  
                             __ptext103 8732                               __ptext120 7EA8  
                             __ptext112 77A6                               __ptext104 7878  
                             __ptext121 8526                               __ptext113 83EA  
                             __ptext105 8816                               __ptext130 883C  
                             __ptext122 843A                               __ptext114 8412  
                             __ptext106 803A                               __ptext131 7810  
                             __ptext123 87AC                               __ptext115 7EE8  
                             __ptext107 839A                               __ptext140 86BC  
                             __ptext132 8464                               __ptext124 8590  
                             __ptext116 856E                               __ptext108 83C2  
                             __ptext141 854A                               __ptext133 815C  
                             __ptext125 8838                               __ptext117 8836  
                             __ptext109 7B7E                               __ptext142 7DDC  
                             __ptext134 848C                               __ptext126 8830  
                             __ptext118 644E                               __ptext143 87BC  
                             __ptext135 862C                               __ptext127 81E0  
                             __ptext119 7AC8                               __ptext144 87D4  
                             __ptext136 84B4                               __ptext128 7644  
                             __ptext145 87E0                               __ptext137 8188  
                             __ptext129 883A                               __ptext146 87EC  
                             __ptext138 84DC                               __ptext147 0000  
                             __ptext139 864A                      __end_of_StartTimer 7F62  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 81E0                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 5CD6  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 7878                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 87AC                                _INT1_ISR 7EE8  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0390                               _ring_buf2 0400  
                              i2u420_48 81F6                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u860_48 8476  
                              i2u862_48 849E                                i2u864_48 84C6  
                              i2u866_48 84EE                                i2u858_48 7844  
                              i2u858_49 7858                __size_of_TMR5_Initialize 0046  
                             _set_vterm 8684                     __size_of_update_lcd 010E  
                           _help_button 7F62              __end_of_UART1_Transmit_ISR 8188  
                              _TMR5_ISR 7AC8                                _TMR6_ISR 86BC  
                             _port_data 01D0                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 8526  
                            _ADCON0bits 003EF8                      __end_of_check_help 56F8  
                             _start_lcd 882A                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 854A  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 860E                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 6C40                               copy_data1 6C62  
                             copy_data2 6C84                _INT0_SetInterruptHandler 83C2  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 82D2             _UART2_SetTxInterruptHandler 82AA  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 8668  
                          _send_lcd_cmd 8232                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 883C                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 82AA                   __end_of_DMA1_DMAA_ISR 87EA  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 590A  
                     ?_DMA1_DMADCNT_ISR 0052                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 879C                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0058                                __ptext10 825A  
                              __ptext11 8282                                __ptext20 6596  
                              __ptext12 878E                                __ptext21 6B22  
                              __ptext13 76C2                                __ptext30 8824  
                              __ptext22 812E                                __ptext14 37A0  
                              __ptext31 882A                                __ptext23 7F9A  
                              __ptext15 79A6                                __ptext40 7E22  
                              __ptext32 7390                                __ptext24 6A14  
                              __ptext16 85F0                                __ptext41 5B0E  
                              __ptext33 47F2                                __ptext25 7FD0  
                              __ptext17 590A                                __ptext50 7C7C  
                              __ptext42 4ADE                                __ptext34 7A08  
                              __ptext26 7BD8                                __ptext18 881E  
                              __ptext51 619E                                __ptext43 0000  
                              __ptext35 7108                                __ptext27 8668  
                              __ptext19 54D0                                __ptext60 74B4  
                              __ptext52 6EDE                                __ptext44 75C0  
                              __ptext36 1244                                __ptext28 7B24  
                              __ptext61 6900                                __ptext53 2D68  
                              __ptext45 809E                                __ptext37 40CC  
                              __ptext29 71B0                                __ptext70 8684  
                              __ptext62 7256                                __ptext54 67E8  
                              __ptext46 6E0A                                __ptext38 753C  
                              __ptext71 877E                                __ptext63 72F8  
                              __ptext55 6300                                __ptext47 4486  
                              __ptext39 806E                                __ptext80 8806  
                              __ptext72 860E                                __ptext64 66C4  
                              __ptext56 3C4C                                __ptext48 5E96  
                              __ptext81 880E                                __ptext73 86D6  
                              __ptext65 86A0                                __ptext57 7CC4  
                              __ptext49 602C                                __ptext90 82D2  
                              __ptext82 56F8                                __ptext74 879C  
                              __ptext66 705E                                __ptext58 5290  
                              __ptext91 7942                                __ptext83 5CD6  
                              __ptext75 7E66                                __ptext67 501C  
                              __ptext59 4D9C                                __ptext92 82FA  
                              __ptext84 7D0A                                __ptext76 7F62  
                              __ptext68 7C2A                                __ptext93 8322  
                              __ptext85 25AC                                __ptext77 8502  
                              __ptext69 80CE                                __ptext94 81B4  
                              __ptext86 1D82                                __ptext78 7F26  
                              __ptext95 834A                                __ptext87 7D50  
                              __ptext79 87FE                                __ptext96 7D96  
                              __ptext88 7A6A                                __ptext97 8372  
                              __ptext89 82AA                                __ptext98 86EE  
                              __ptext99 8706                        __size_of_isupper 0030  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 705E                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 04BE  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 00EF                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 876E                                _spi_link 00A1  
                              _wdtdelay 7B24              __end_of_UART2_Transmit_ISR 81B4  
                              _vfprintf 7108                __end_of_convert_adc_data 773C  
            __end_of_PWM8_LoadDutyValue 7EA8    __end_of_INT1_DefaultInterruptHandler 8838  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 8836  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 85F0                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 8824  
                    _EXT_INT_Initialize 803A    __end_of_TMR6_DefaultInterruptHandler 7E22  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 7DDC  
  __end_of_ADCC_DefaultInterruptHandler 883C   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 883A                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 820A  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 878E  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 7256  
                 __end_of_mode_lamp_dim 86EE                 __end_of_adc_int_handler 883E  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6B22                  _uart2TxBufferRemaining 0029  
                        _FVR_Initialize 8816                  __end_of_get_raw_result 860E  
                      _send_lcd_cmd_dma 7BD8                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0021        __end_of_INT1_SetInterruptHandler 83C2  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0058  
              _UART1_TxInterruptHandler 0007               __end_of_send_lcd_cmd_long 8232  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 8836  
        __end_of_PIN_MANAGER_Initialize 74B4               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 66C4                 _eaDogM_WriteStringAtPos 7FD0  
                         _get_vterm_ptr 812E                          _check_adc_scan 880E  
             __size_of_UART2_Initialize 005E  
