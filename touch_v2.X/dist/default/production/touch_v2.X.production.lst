

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 12 05:40:32 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=4,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=4,class=CODE,delta=1
   177                           	psect	text152,global,reloc=4,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=4,class=CODE,delta=1
   182                           	psect	text157,global,reloc=4,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=4,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=4,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=4,class=CODE,delta=1
   192                           	psect	text167,global,reloc=4,class=CODE,delta=1
   193                           	psect	text168,global,reloc=4,class=CODE,delta=1
   194                           	psect	text169,global,reloc=4,class=CODE,delta=1
   195                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   196                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   197                           	psect	text170,global,reloc=4,class=CODE,delta=1
   198                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   199                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   200  0000                     
   201                           ; Version 2.10
   202                           ; Generated 31/07/2019 GMT
   203                           ; 
   204                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   205                           ; All rights reserved.
   206                           ; 
   207                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   208                           ; 
   209                           ; Redistribution and use in source and binary forms, with or without modification, are
   210                           ; permitted provided that the following conditions are met:
   211                           ; 
   212                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   213                           ;        conditions and the following disclaimer.
   214                           ; 
   215                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   216                           ;        of conditions and the following disclaimer in the documentation and/or other
   217                           ;        materials provided with the distribution.
   218                           ; 
   219                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   220                           ;        software without specific prior written permission.
   221                           ; 
   222                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   223                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   224                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   225                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   226                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   227                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   228                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   229                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   230                           ; 
   231                           ; 
   232                           ; Code-generator required, PIC18F57K42 Definitions
   233                           ; 
   234                           ; SFR Addresses
   235  0000                     
   236 ;;_k	offset	0
   237 ;;_j	offset	1
   238 ;;_i	offset	2
   239 ;;_inp_index	offset	3
   240 ;;_mode	offset	4
   241 ;;_i_ror	offset	5
   242 ;;_channel	offset=-1 (param)
   243 ;;_s	offset=-2 (param)
   244 ;;_mode	offset=-1 (param)
   245 ;;_mode	offset=-1 (param)
   246 ;;_cmd	offset=-1 (param)
   247 ;;_cmd	offset=-1 (param)
   248 ;;_data	offset=-1 (param)
   249 ;;__this	offset=-2 (param)
   250 ;;_cvoltage	offset=-4 (param)
   251 ;;_h	offset=-1 (param)
   252 ;;_h	offset=-1 (param)
   253 ;;_i	offset=-1 (param)
   254 ;;_cmd	offset=-1 (param)
   255 ;;_i	offset	0
   256 ;;_h	offset=-1 (param)
   257 ;;_flipper	offset=-1 (param)
   258 ;;_f	offset	0
   259 ;;_ap	offset	6
   260 ;;_s	offset=-3 (param)
   261 ;;_fmt	offset=-5 (param)
   262 ;;_line	offset=-1 (param)
   263 ;;_vterm	offset=-2 (param)
   264 ;;_numMilliseconds	offset=-2 (param)
   265 ;;_vterm	offset=-1 (param)
   266 ;;_r	offset=-1 (param)
   267 ;;_c	offset=-2 (param)
   268 ;;_strPtr	offset=-4 (param)
   269 ;;_strPtr	offset=-1 (param)
   270 ;;_delay	offset=-4 (param)
   271 ;;_strPtr	offset=-2 (param)
   272 ;;__this	offset=-2 (param)
   273 ;;_clearBuffer	offset=-3 (param)
   274 ;;_s	offset	0
   275 ;;_k	offset	2
   276 ;;_dest	offset=-2 (param)
   277 ;;_c	offset=-4 (param)
   278 ;;_n	offset=-6 (param)
   279 ;;_ap	offset	0
   280 ;;_fmt	offset=-3 (param)
   281 ;;_cfmt	offset	0
   282 ;;_fp	offset=-2 (param)
   283 ;;_fmt	offset=-4 (param)
   284 ;;_ap	offset=-6 (param)
   285 ;;_vfpfcnvrt$5282	offset	0
   286 ;;_vfpfcnvrt$5293	offset	2
   287 ;;_vfpfcnvrt$5281	offset	4
   288 ;;_llu	offset	6
   289 ;;_ll	offset	14
   290 ;;_f	offset	22
   291 ;;_ct	offset	26
   292 ;;_cp	offset	29
   293 ;;_c	offset	31
   294 ;;_fp	offset=-2 (param)
   295 ;;_fmt	offset=-4 (param)
   296 ;;_ap	offset=-6 (param)
   297 ;;_xtoa$5267	offset	0
   298 ;;_xtoa$5266	offset	2
   299 ;;_n	offset	4
   300 ;;_c	offset	12
   301 ;;_i	offset	14
   302 ;;_w	offset	16
   303 ;;_p	offset	18
   304 ;;_fp	offset=-2 (param)
   305 ;;_d	offset=-10 (param)
   306 ;;_x	offset=-11 (param)
   307 ;;_toupper$6073	offset	0
   308 ;;_c	offset=-2 (param)
   309 ;;_c	offset=-2 (param)
   310 ;;_c	offset=-2 (param)
   311 ;;_n	offset	0
   312 ;;_i	offset	8
   313 ;;_w	offset	10
   314 ;;_p	offset	12
   315 ;;_fp	offset=-2 (param)
   316 ;;_d	offset=-10 (param)
   317 ;;_counter	offset	0
   318 ;;_dividend	offset=-8 (param)
   319 ;;_divisor	offset=-16 (param)
   320 ;;_quotient	offset	0
   321 ;;_counter	offset	8
   322 ;;_dividend	offset=-8 (param)
   323 ;;_divisor	offset=-16 (param)
   324 ;;_r	offset	0
   325 ;;_l	offset	2
   326 ;;__l	offset=-2 (param)
   327 ;;__r	offset=-4 (param)
   328 ;;_n	offset=-6 (param)
   329 ;;_nuls	offset	0
   330 ;;_l	offset	7
   331 ;;_p	offset	9
   332 ;;_cp	offset	11
   333 ;;_w	offset	13
   334 ;;_i	offset	15
   335 ;;_fp	offset=-2 (param)
   336 ;;_s	offset=-4 (param)
   337 ;;_efgtoa$5239	offset	0
   338 ;;_efgtoa$5238	offset	2
   339 ;;_efgtoa$5237	offset	4
   340 ;;_efgtoa$5233	offset	6
   341 ;;_efgtoa$5229	offset	8
   342 ;;_efgtoa$5228	offset	10
   343 ;;_u	offset	12
   344 ;;_g	offset	16
   345 ;;_l	offset	20
   346 ;;_h	offset	24
   347 ;;_ou	offset	28
   348 ;;_n	offset	32
   349 ;;_e	offset	34
   350 ;;_i	offset	36
   351 ;;_w	offset	38
   352 ;;_p	offset	40
   353 ;;_sign	offset	42
   354 ;;_d	offset	44
   355 ;;_ne	offset	46
   356 ;;_m	offset	48
   357 ;;_pp	offset	50
   358 ;;_t	offset	52
   359 ;;_mode	offset	54
   360 ;;_nmode	offset	55
   361 ;;_fp	offset=-2 (param)
   362 ;;_f	offset=-6 (param)
   363 ;;_c	offset=-7 (param)
   364 ;;_tolower$6058	offset	0
   365 ;;_c	offset=-2 (param)
   366 ;;_c	offset=-2 (param)
   367 ;;_d	offset	0
   368 ;;_s	offset	2
   369 ;;_dest	offset=-2 (param)
   370 ;;_src	offset=-4 (param)
   371 ;;_u	offset	0
   372 ;;_m	offset	4
   373 ;;_e	offset	8
   374 ;;_x	offset=-4 (param)
   375 ;;_u	offset	0
   376 ;;_e	offset	4
   377 ;;_x	offset=-4 (param)
   378 ;;_exp1	offset	0
   379 ;;_sign1	offset	1
   380 ;;_f1	offset=-4 (param)
   381 ;;_f1	offset=-4 (param)
   382 ;;_ff1	offset=-4 (param)
   383 ;;_ff2	offset=-8 (param)
   384 ;;_sign	offset	0
   385 ;;_counter	offset	1
   386 ;;_dividend	offset=-2 (param)
   387 ;;_divisor	offset=-4 (param)
   388 ;;_quotient	offset	0
   389 ;;_sign	offset	2
   390 ;;_counter	offset	3
   391 ;;_dividend	offset=-2 (param)
   392 ;;_divisor	offset=-4 (param)
   393 ;;_dtoa$5205	offset	0
   394 ;;_n	offset	2
   395 ;;_i	offset	10
   396 ;;_s	offset	12
   397 ;;_w	offset	14
   398 ;;_p	offset	16
   399 ;;_fp	offset=-2 (param)
   400 ;;_d	offset=-10 (param)
   401 ;;_a	offset=-2 (param)
   402 ;;_sign	offset	0
   403 ;;_counter	offset	1
   404 ;;_dividend	offset=-8 (param)
   405 ;;_divisor	offset=-16 (param)
   406 ;;_quotient	offset	0
   407 ;;_sign	offset	8
   408 ;;_counter	offset	9
   409 ;;_dividend	offset=-8 (param)
   410 ;;_divisor	offset=-16 (param)
   411 ;;_w	offset	0
   412 ;;_fp	offset=-2 (param)
   413 ;;_c	offset=-3 (param)
   414 ;;_w	offset	0
   415 ;;_i	offset	2
   416 ;;_fp	offset=-2 (param)
   417 ;;_buf	offset=-4 (param)
   418 ;;_p	offset=-6 (param)
   419 ;;_a	offset	0
   420 ;;_s	offset=-2 (param)
   421 ;;_i	offset	0
   422 ;;_c	offset	2
   423 ;;_s	offset=-2 (param)
   424 ;;_fp	offset=-4 (param)
   425 ;;_c	offset=-2 (param)
   426 ;;_fp	offset=-4 (param)
   427 ;;_c	offset=-1 (param)
   428 ;;__this	offset=-2 (param)
   429 ;;_c	offset=-3 (param)
   430 ;;_atoi$5789	offset	0
   431 ;;_atoi$5787	offset	2
   432 ;;_atoi$5788	offset	4
   433 ;;_n	offset	5
   434 ;;_neg	offset	7
   435 ;;_s	offset=-2 (param)
   436 ;;_isspace$5838	offset	0
   437 ;;_c	offset=-2 (param)
   438 ;;_c	offset=-2 (param)
   439 ;;_vterm	offset=-1 (param)
   440 ;;_new_response_info	offset=-1 (param)
   441 ;;_new_response_info	offset=-1 (param)
   442 ;;_level	offset=-2 (param)
   443 ;;_dutyValue	offset=-2 (param)
   444 ;;_timer	offset=-1 (param)
   445 ;;_timer	offset=-1 (param)
   446 ;;_count	offset=-3 (param)
   447 ;;_h	offset=-1 (param)
   448 ;;_u	offset	0
   449 ;;_x	offset=-4 (param)
   450 ;;_chan	offset=-1 (param)
   451 ;;_to_what	offset=-2 (param)
   452 ;;_u	offset	0
   453 ;;_s	offset=-2 (param)
   454 ;;_index	offset=-1 (param)
   455 ;;_arg	offset	0
   456 ;;_exp	offset	4
   457 ;;_sign	offset=-1 (param)
   458 ;;_val	offset=-5 (param)
   459 ;;_grs	offset	0
   460 ;;_rem	offset	4
   461 ;;_new_exp	offset	8
   462 ;;_aexp	offset	10
   463 ;;_bexp	offset	11
   464 ;;_sign	offset	12
   465 ;;_b	offset=-4 (param)
   466 ;;_a	offset=-8 (param)
   467 ;;_ff1	offset=-4 (param)
   468 ;;_ff2	offset=-8 (param)
   469 ;;_lp_speed	offset	0
   470 ;;_new	offset=-4 (param)
   471 ;;_bn	offset=-5 (param)
   472 ;;_slow	offset=-6 (param)
   473 ;;_b	offset=-4 (param)
   474 ;;_a	offset=-8 (param)
   475 ;;_grs	offset	0
   476 ;;_bexp	offset	1
   477 ;;_aexp	offset	2
   478 ;;_signs	offset	3
   479 ;;_b	offset=-4 (param)
   480 ;;_a	offset=-8 (param)
   481 ;;_prod	offset	0
   482 ;;_grs	offset	4
   483 ;;_temp	offset	8
   484 ;;_bexp	offset	10
   485 ;;_aexp	offset	11
   486 ;;_sign	offset	12
   487 ;;_b	offset=-4 (param)
   488 ;;_a	offset=-8 (param)
   489 ;;_InterruptHandler	offset=-3 (param)
   490 ;;_InterruptHandler	offset=-3 (param)
   491 ;;_InterruptHandler	offset=-3 (param)
   492 ;;_InterruptHandler	offset=-3 (param)
   493 ;;_InterruptHandler	offset=-3 (param)
   494 ;;_InterruptHandler	offset=-3 (param)
   495 ;;_state	offset	0
   496 ;;_InterruptHandler	offset=-3 (param)
   497 ;;_InterruptHandler	offset=-3 (param)
   498 ;;_InterruptHandler	offset=-3 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_i	offset	0
   501 ;;_sw_value	offset	1
   502 ;;_timerVal	offset=-2 (param)
   503 ;;_timerVal	offset=-2 (param)
   504 ;;_log_ptr	offset	0
   505 ;;_f	offset	0
   506 ;;_ap	offset	6
   507 ;;_s	offset=-3 (param)
   508 ;;_fmt	offset=-5 (param)
   509 ;;_cfmt	offset	0
   510 ;;_fp	offset=-2 (param)
   511 ;;_fmt	offset=-4 (param)
   512 ;;_ap	offset=-6 (param)
   513 ;;_vfpfcnvrt$5282	offset	0
   514 ;;_vfpfcnvrt$5293	offset	2
   515 ;;_vfpfcnvrt$5281	offset	4
   516 ;;_llu	offset	6
   517 ;;_ll	offset	14
   518 ;;_f	offset	22
   519 ;;_ct	offset	26
   520 ;;_cp	offset	29
   521 ;;_c	offset	31
   522 ;;_fp	offset=-2 (param)
   523 ;;_fmt	offset=-4 (param)
   524 ;;_ap	offset=-6 (param)
   525 ;;_xtoa$5267	offset	0
   526 ;;_xtoa$5266	offset	2
   527 ;;_n	offset	4
   528 ;;_c	offset	12
   529 ;;_i	offset	14
   530 ;;_w	offset	16
   531 ;;_p	offset	18
   532 ;;_fp	offset=-2 (param)
   533 ;;_d	offset=-10 (param)
   534 ;;_x	offset=-11 (param)
   535 ;;_toupper$6073	offset	0
   536 ;;_c	offset=-2 (param)
   537 ;;_c	offset=-2 (param)
   538 ;;_c	offset=-2 (param)
   539 ;;_n	offset	0
   540 ;;_i	offset	8
   541 ;;_w	offset	10
   542 ;;_p	offset	12
   543 ;;_fp	offset=-2 (param)
   544 ;;_d	offset=-10 (param)
   545 ;;_counter	offset	0
   546 ;;_dividend	offset=-8 (param)
   547 ;;_divisor	offset=-16 (param)
   548 ;;_quotient	offset	0
   549 ;;_counter	offset	8
   550 ;;_dividend	offset=-8 (param)
   551 ;;_divisor	offset=-16 (param)
   552 ;;_r	offset	0
   553 ;;_l	offset	2
   554 ;;__l	offset=-2 (param)
   555 ;;__r	offset=-4 (param)
   556 ;;_n	offset=-6 (param)
   557 ;;_nuls	offset	0
   558 ;;_l	offset	7
   559 ;;_p	offset	9
   560 ;;_cp	offset	11
   561 ;;_w	offset	13
   562 ;;_i	offset	15
   563 ;;_fp	offset=-2 (param)
   564 ;;_s	offset=-4 (param)
   565 ;;_efgtoa$5239	offset	0
   566 ;;_efgtoa$5238	offset	2
   567 ;;_efgtoa$5237	offset	4
   568 ;;_efgtoa$5233	offset	6
   569 ;;_efgtoa$5229	offset	8
   570 ;;_efgtoa$5228	offset	10
   571 ;;_u	offset	12
   572 ;;_g	offset	16
   573 ;;_l	offset	20
   574 ;;_h	offset	24
   575 ;;_ou	offset	28
   576 ;;_n	offset	32
   577 ;;_e	offset	34
   578 ;;_i	offset	36
   579 ;;_w	offset	38
   580 ;;_p	offset	40
   581 ;;_sign	offset	42
   582 ;;_d	offset	44
   583 ;;_ne	offset	46
   584 ;;_m	offset	48
   585 ;;_pp	offset	50
   586 ;;_t	offset	52
   587 ;;_mode	offset	54
   588 ;;_nmode	offset	55
   589 ;;_fp	offset=-2 (param)
   590 ;;_f	offset=-6 (param)
   591 ;;_c	offset=-7 (param)
   592 ;;_tolower$6058	offset	0
   593 ;;_c	offset=-2 (param)
   594 ;;_c	offset=-2 (param)
   595 ;;_d	offset	0
   596 ;;_s	offset	2
   597 ;;_dest	offset=-2 (param)
   598 ;;_src	offset=-4 (param)
   599 ;;_u	offset	0
   600 ;;_m	offset	4
   601 ;;_e	offset	8
   602 ;;_x	offset=-4 (param)
   603 ;;_u	offset	0
   604 ;;_e	offset	4
   605 ;;_x	offset=-4 (param)
   606 ;;_exp1	offset	0
   607 ;;_sign1	offset	1
   608 ;;_f1	offset=-4 (param)
   609 ;;_b	offset=-4 (param)
   610 ;;_a	offset=-8 (param)
   611 ;;_grs	offset	0
   612 ;;_bexp	offset	1
   613 ;;_aexp	offset	2
   614 ;;_signs	offset	3
   615 ;;_b	offset=-4 (param)
   616 ;;_a	offset=-8 (param)
   617 ;;_f1	offset=-4 (param)
   618 ;;_prod	offset	0
   619 ;;_grs	offset	4
   620 ;;_temp	offset	8
   621 ;;_bexp	offset	10
   622 ;;_aexp	offset	11
   623 ;;_sign	offset	12
   624 ;;_b	offset=-4 (param)
   625 ;;_a	offset=-8 (param)
   626 ;;_ff1	offset=-4 (param)
   627 ;;_ff2	offset=-8 (param)
   628 ;;_ff1	offset=-4 (param)
   629 ;;_ff2	offset=-8 (param)
   630 ;;_grs	offset	0
   631 ;;_rem	offset	4
   632 ;;_new_exp	offset	8
   633 ;;_aexp	offset	10
   634 ;;_bexp	offset	11
   635 ;;_sign	offset	12
   636 ;;_b	offset=-4 (param)
   637 ;;_a	offset=-8 (param)
   638 ;;_sign	offset	0
   639 ;;_counter	offset	1
   640 ;;_dividend	offset=-2 (param)
   641 ;;_divisor	offset=-4 (param)
   642 ;;_quotient	offset	0
   643 ;;_sign	offset	2
   644 ;;_counter	offset	3
   645 ;;_dividend	offset=-2 (param)
   646 ;;_divisor	offset=-4 (param)
   647 ;;_dtoa$5205	offset	0
   648 ;;_n	offset	2
   649 ;;_i	offset	10
   650 ;;_s	offset	12
   651 ;;_w	offset	14
   652 ;;_p	offset	16
   653 ;;_fp	offset=-2 (param)
   654 ;;_d	offset=-10 (param)
   655 ;;_a	offset=-2 (param)
   656 ;;_sign	offset	0
   657 ;;_counter	offset	1
   658 ;;_dividend	offset=-8 (param)
   659 ;;_divisor	offset=-16 (param)
   660 ;;_quotient	offset	0
   661 ;;_sign	offset	8
   662 ;;_counter	offset	9
   663 ;;_dividend	offset=-8 (param)
   664 ;;_divisor	offset=-16 (param)
   665 ;;_w	offset	0
   666 ;;_fp	offset=-2 (param)
   667 ;;_c	offset=-3 (param)
   668 ;;_w	offset	0
   669 ;;_i	offset	2
   670 ;;_fp	offset=-2 (param)
   671 ;;_buf	offset=-4 (param)
   672 ;;_p	offset=-6 (param)
   673 ;;_a	offset	0
   674 ;;_s	offset=-2 (param)
   675 ;;_i	offset	0
   676 ;;_c	offset	2
   677 ;;_s	offset=-2 (param)
   678 ;;_fp	offset=-4 (param)
   679 ;;_c	offset=-2 (param)
   680 ;;_fp	offset=-4 (param)
   681 ;;_c	offset=-1 (param)
   682 ;;__this	offset=-2 (param)
   683 ;;_c	offset=-3 (param)
   684 ;;_atoi$5789	offset	0
   685 ;;_atoi$5787	offset	2
   686 ;;_atoi$5788	offset	4
   687 ;;_n	offset	5
   688 ;;_neg	offset	7
   689 ;;_s	offset=-2 (param)
   690 ;;_isspace$5838	offset	0
   691 ;;_c	offset=-2 (param)
   692 ;;_c	offset=-2 (param)
   693 ;;_dsize	offset=-2 (param)
   694 ;;_timer	offset=-1 (param)
   695 ;;_count	offset=-3 (param)
   696 ;;_channel	offset=-1 (param)
   697 ;;_i	offset	0
   698                           
   699                           	psect	idataBIGRAM
   700  0171B8                     __pidataBIGRAM:
   701                           	opt callstack 0
   702                           
   703                           ;initializer for _port_data
   704  0171B8  FF                 	db	255
   705  0171B9  00                 	db	0
   706  0171BA  FF                 	db	255
   707  0171BB  00                 	db	0
   708  0171BC  FF                 	db	255
   709  0171BD  00                 	db	0
   710  0171BE  FF                 	db	255
   711  0171BF  00                 	db	0
   712  0171C0  FF                 	db	255
   713  0171C1  00                 	db	0
   714  0171C2  FF                 	db	255
   715  0171C3  00                 	db	0
   716  0171C4  FF                 	db	255
   717  0171C5  00                 	db	0
   718  0171C6  FF                 	db	255
   719  0171C7  00                 	db	0
   720  0171C8  00                 	db	0
   721  0171C9  00                 	db	0
   722  0171CA  00                 	db	0
   723  0171CB  00                 	db	0
   724  0171CC  00                 	db	0
   725  0171CD  00                 	db	0
   726  0171CE  00                 	db	0
   727  0171CF  00                 	db	0
   728  0171D0  00                 	db	0
   729  0171D1  00                 	db	0
   730  0171D2  00                 	db	0
   731  0171D3  00                 	db	0
   732  0171D4  00                 	db	0
   733  0171D5  00                 	db	0
   734  0171D6  00                 	db	0
   735  0171D7  00                 	db	0
   736  0171D8  00                 	db	0
   737  0171D9  00                 	db	0
   738  0171DA  00                 	db	0
   739  0171DB  00                 	db	0
   740  0171DC  00                 	db	0
   741  0171DD  00                 	db	0
   742  0171DE  00                 	db	0
   743  0171DF  00                 	db	0
   744  0171E0  00                 	db	0
   745  0171E1  00                 	db	0
   746  0171E2  00                 	db	0
   747  0171E3  00                 	db	0
   748  0171E4  00                 	db	0
   749  0171E5  00                 	db	0
   750  0171E6  00                 	db	0
   751  0171E7  00                 	db	0
   752  0171E8  00                 	db	0
   753  0171E9  00                 	db	0
   754  0171EA  00                 	db	0
   755  0171EB  00                 	db	0
   756  0171EC  00                 	db	0
   757  0171ED  00                 	db	0
   758  0171EE  00                 	db	0
   759  0171EF  00                 	db	0
   760  0171F0  00                 	db	0
   761  0171F1  00                 	db	0
   762  0171F2  00                 	db	0
   763  0171F3  00                 	db	0
   764  0171F4  00                 	db	0
   765  0171F5  00                 	db	0
   766  0171F6  00                 	db	0
   767  0171F7  00                 	db	0
   768  0171F8  00                 	db	0
   769  0171F9  00                 	db	0
   770  0171FA  00                 	db	0
   771  0171FB  00                 	db	0
   772  0171FC  00                 	db	0
   773  0171FD  00                 	db	0
   774  0171FE  00                 	db	0
   775  0171FF  00                 	db	0
   776  017200  00                 	db	0
   777  017201  00                 	db	0
   778  017202  00                 	db	0
   779  017203  00                 	db	0
   780  017204  00                 	db	0
   781  017205  00                 	db	0
   782  017206  00                 	db	0
   783  017207  00                 	db	0
   784  017208  00                 	db	0
   785  017209  00                 	db	0
   786  01720A  00                 	db	0
   787  01720B  00                 	db	0
   788  01720C  00                 	db	0
   789  01720D  00                 	db	0
   790  01720E  00                 	db	0
   791  01720F  00                 	db	0
   792  017210  00                 	db	0
   793  017211  00                 	db	0
   794  017212  00                 	db	0
   795  017213  00                 	db	0
   796  017214  00                 	db	0
   797  017215  00                 	db	0
   798  017216  00                 	db	0
   799  017217  00                 	db	0
   800  017218  00                 	db	0
   801  017219  00                 	db	0
   802  01721A  00                 	db	0
   803  01721B  00                 	db	0
   804  01721C  00                 	db	0
   805  01721D  00                 	db	0
   806  01721E  00                 	db	0
   807  01721F  00                 	db	0
   808  017220  00                 	db	0
   809  017221  00                 	db	0
   810  017222  00                 	db	0
   811  017223  00                 	db	0
   812  017224  00                 	db	0
   813  017225  00                 	db	0
   814  017226  00                 	db	0
   815  017227  00                 	db	0
   816  017228  00                 	db	0
   817  017229  00                 	db	0
   818  01722A  00                 	db	0
   819  01722B  00                 	db	0
   820  01722C  00                 	db	0
   821  01722D  00                 	db	0
   822  01722E  00                 	db	0
   823  01722F  00                 	db	0
   824  017230  00                 	db	0
   825  017231  00                 	db	0
   826  017232  00                 	db	0
   827  017233  00                 	db	0
   828  017234  00                 	db	0
   829  017235  00                 	db	0
   830  017236  00                 	db	0
   831  017237  00                 	db	0
   832  017238  00                 	db	0
   833  017239  00                 	db	0
   834  01723A  00                 	db	0
   835  01723B  00                 	db	0
   836  01723C  00                 	db	0
   837  01723D  00                 	db	0
   838  01723E  00                 	db	0
   839  01723F  00                 	db	0
   840  017240  00                 	db	0
   841  017241  00                 	db	0
   842  017242  00                 	db	0
   843  017243  00                 	db	0
   844  017244  00                 	db	0
   845  017245  00                 	db	0
   846  017246  00                 	db	0
   847  017247  00                 	db	0
   848  017248  00                 	db	0
   849  017249  00                 	db	0
   850  01724A  00                 	db	0
   851  01724B  00                 	db	0
   852  01724C  00                 	db	0
   853  01724D  00                 	db	0
   854  01724E  00                 	db	0
   855  01724F  00                 	db	0
   856  017250  00                 	db	0
   857  017251  00                 	db	0
   858  017252  00                 	db	0
   859  017253  00                 	db	0
   860  017254  00                 	db	0
   861  017255  00                 	db	0
   862  017256  00                 	db	0
   863  017257  00                 	db	0
   864  017258  00                 	db	0
   865  017259  00                 	db	0
   866  01725A  00                 	db	0
   867  01725B  00                 	db	0
   868  01725C  00                 	db	0
   869  01725D  00                 	db	0
   870  01725E  00                 	db	0
   871  01725F  00                 	db	0
   872  017260  00                 	db	0
   873  017261  00                 	db	0
   874  017262  00                 	db	0
   875  017263  00                 	db	0
   876  017264  00                 	db	0
   877  017265  00                 	db	0
   878  017266  00                 	db	0
   879  017267  00                 	db	0
   880  017268  00                 	db	0
   881  017269  00                 	db	0
   882  01726A  00                 	db	0
   883  01726B  00                 	db	0
   884  01726C  00                 	db	0
   885  01726D  00                 	db	0
   886  01726E  00                 	db	0
   887  01726F  00                 	db	0
   888  017270  00                 	db	0
   889  017271  00                 	db	0
   890  017272  00                 	db	0
   891  017273  00                 	db	0
   892  017274  00                 	db	0
   893  017275  00                 	db	0
   894  017276  00                 	db	0
   895  017277  00                 	db	0
   896  017278  00                 	db	0
   897  017279  00                 	db	0
   898  01727A  00                 	db	0
   899  01727B  00                 	db	0
   900  01727C  00                 	db	0
   901  01727D  00                 	db	0
   902  01727E  00                 	db	0
   903  01727F  00                 	db	0
   904  017280  00                 	db	0
   905  017281  00                 	db	0
   906  017282  00                 	db	0
   907  017283  00                 	db	0
   908  017284  00                 	db	0
   909  017285  00                 	db	0
   910  017286  00                 	db	0
   911  017287  00                 	db	0
   912  017288  00                 	db	0
   913  017289  00                 	db	0
   914  01728A  00                 	db	0
   915  01728B  00                 	db	0
   916  01728C  00                 	db	0
   917  01728D  00                 	db	0
   918  01728E  00                 	db	0
   919  01728F  00                 	db	0
   920  017290  00                 	db	0
   921  017291  00                 	db	0
   922  017292  00                 	db	0
   923  017293  00                 	db	0
   924  017294  00                 	db	0
   925  017295  00                 	db	0
   926  017296  00                 	db	0
   927  017297  00                 	db	0
   928  017298  00                 	db	0
   929  017299  00                 	db	0
   930  01729A  00                 	db	0
   931  01729B  00                 	db	0
   932  01729C  00                 	db	0
   933  01729D  00                 	db	0
   934  01729E  00                 	db	0
   935  01729F  00                 	db	0
   936  0172A0  00                 	db	0
   937  0172A1  00                 	db	0
   938  0172A2  00                 	db	0
   939  0172A3  00                 	db	0
   940  0172A4  00                 	db	0
   941  0172A5  00                 	db	0
   942  0172A6  00                 	db	0
   943  0172A7  00                 	db	0
   944  0172A8  00                 	db	0
   945  0172A9  00                 	db	0
   946  0172AA  00                 	db	0
   947  0172AB  00                 	db	0
   948  0172AC  00                 	db	0
   949  0172AD  00                 	db	0
   950  0172AE  00                 	db	0
   951  0172AF  00                 	db	0
   952  0172B0  00                 	db	0
   953  0172B1  00                 	db	0
   954  0172B2  00                 	db	0
   955  0172B3  00                 	db	0
   956  0172B4  00                 	db	0
   957  0172B5  00                 	db	0
   958  0172B6  00                 	db	0
   959  0172B7  00                 	db	0
   960  0172B8  00                 	db	0
   961  0172B9  00                 	db	0
   962  0172BA  00                 	db	0
   963  0172BB  00                 	db	0
   964  0172BC  00                 	db	0
   965  0172BD  00                 	db	0
   966  0172BE  00                 	db	0
   967  0172BF  00                 	db	0
   968  0172C0  00                 	db	0
   969  0172C1  00                 	db	0
   970  0172C2  00                 	db	0
   971  0172C3  00                 	db	0
   972  0172C4  00                 	db	0
   973  0172C5  00                 	db	0
   974  0172C6  00                 	db	0
   975  0172C7  00                 	db	0
   976  0172C8  00                 	db	0
   977  0172C9  00                 	db	0
   978  0172CA  00                 	db	0
   979  0172CB  00                 	db	0
   980  0172CC  00                 	db	0
   981  0172CD  00                 	db	0
   982  0172CE  00                 	db	0
   983  0172CF  00                 	db	0
   984  0172D0  00                 	db	0
   985  0172D1  00                 	db	0
   986  0172D2  00                 	db	0
   987  0172D3  00                 	db	0
   988  0172D4  00                 	db	0
   989  0172D5  00                 	db	0
   990  0172D6  00                 	db	0
   991  0172D7  00                 	db	0
   992  0172D8  00                 	db	0
   993  0172D9  00                 	db	0
   994  0172DA  00                 	db	0
   995  0172DB  00                 	db	0
   996  0172DC  00                 	db	0
   997  0172DD  00                 	db	0
   998  0172DE  00                 	db	0
   999  0172DF  00                 	db	0
  1000  0172E0  00                 	db	0
  1001  0172E1  00                 	db	0
  1002  0172E2  00                 	db	0
  1003  0172E3  00                 	db	0
  1004  0172E4  00                 	db	0
  1005  0172E5  00                 	db	0
  1006  0172E6  00                 	db	0
  1007  0172E7  00                 	db	0
  1008  0172E8  00                 	db	0
  1009  0172E9  00                 	db	0
  1010  0172EA  00                 	db	0
  1011  0172EB  00                 	db	0
  1012  0172EC  00                 	db	0
  1013  0172ED  00                 	db	0
  1014  0172EE  00                 	db	0
  1015  0172EF  00                 	db	0
  1016  0172F0  00                 	db	0
  1017  0172F1  00                 	db	0
  1018  0172F2  00                 	db	0
  1019  0172F3  00                 	db	0
  1020  0172F4  00                 	db	0
  1021  0172F5  00                 	db	0
  1022  0172F6  00                 	db	0
  1023  0172F7  00                 	db	0
  1024  0172F8  00                 	db	0
  1025  0172F9  00                 	db	0
  1026  0172FA  00                 	db	0
  1027  0172FB  00                 	db	0
  1028  0172FC  00                 	db	0
  1029  0172FD  00                 	db	0
  1030  0172FE  00                 	db	0
  1031  0172FF  00                 	db	0
  1032  017300  00                 	db	0
  1033  017301  00                 	db	0
  1034  017302  00                 	db	0
  1035  017303  00                 	db	0
  1036  017304  00                 	db	0
  1037  017305  00                 	db	0
  1038  017306  00                 	db	0
  1039  017307  00                 	db	0
  1040  017308  00                 	db	0
  1041  017309  00                 	db	0
  1042  01730A  00                 	db	0
  1043  01730B  00                 	db	0
  1044  01730C  00                 	db	0
  1045  01730D  00                 	db	0
  1046  01730E  00                 	db	0
  1047  01730F  00                 	db	0
  1048  017310  00                 	db	0
  1049  017311  00                 	db	0
  1050  017312  00                 	db	0
  1051  017313  00                 	db	0
  1052  017314  00                 	db	0
  1053  017315  00                 	db	0
  1054  017316  00                 	db	0
  1055  017317  00                 	db	0
  1056  017318  00                 	db	0
  1057  017319  00                 	db	0
  1058  01731A  00                 	db	0
  1059  01731B  00                 	db	0
  1060  01731C  00                 	db	0
  1061  01731D  00                 	db	0
  1062  01731E  00                 	db	0
  1063  01731F  00                 	db	0
  1064  017320  00                 	db	0
  1065  017321  00                 	db	0
  1066  017322  00                 	db	0
  1067  017323  00                 	db	0
  1068  017324  00                 	db	0
  1069  017325  00                 	db	0
  1070  017326  00                 	db	0
  1071  017327  00                 	db	0
  1072  017328  00                 	db	0
  1073  017329  00                 	db	0
  1074  01732A  00                 	db	0
  1075  01732B  00                 	db	0
  1076  01732C  00                 	db	0
  1077  01732D  00                 	db	0
  1078  01732E  00                 	db	0
  1079  01732F  00                 	db	0
  1080  017330  00                 	db	0
  1081  017331  00                 	db	0
  1082  017332  00                 	db	0
  1083  017333  00                 	db	0
  1084  017334  00                 	db	0
  1085  017335  00                 	db	0
  1086  017336  00                 	db	0
  1087  017337  00                 	db	0
  1088  017338  00                 	db	0
  1089  017339  00                 	db	0
  1090  01733A  00                 	db	0
  1091  01733B  00                 	db	0
  1092  01733C  00                 	db	0
  1093  01733D  00                 	db	0
  1094  01733E  00                 	db	0
  1095  01733F  00                 	db	0
  1096  017340  00                 	db	0
  1097  017341  00                 	db	0
  1098  017342  00                 	db	0
  1099  017343  00                 	db	0
  1100  017344  00                 	db	0
  1101  017345  00                 	db	0
  1102  017346  00                 	db	0
  1103  017347  00                 	db	0
  1104  017348  00                 	db	0
  1105  017349  00                 	db	0
  1106  01734A  00                 	db	0
  1107  01734B  00                 	db	0
  1108  01734C  00                 	db	0
  1109  01734D  00                 	db	0
  1110  01734E  00                 	db	0
  1111  01734F  00                 	db	0
  1112  017350  00                 	db	0
  1113  017351  00                 	db	0
  1114  017352  00                 	db	0
  1115  017353  00                 	db	0
  1116  017354  00                 	db	0
  1117  017355  00                 	db	0
  1118  017356  00                 	db	0
  1119  017357  00                 	db	0
  1120  017358  00                 	db	0
  1121  017359  00                 	db	0
  1122  01735A  00                 	db	0
  1123  01735B  00                 	db	0
  1124  01735C  00                 	db	0
  1125  01735D  00                 	db	0
  1126  01735E  00                 	db	0
  1127  01735F  00                 	db	0
  1128  017360  00                 	db	0
  1129  017361  00                 	db	0
  1130  017362  00                 	db	0
  1131  017363  00                 	db	0
  1132  017364  00                 	db	0
  1133  017365  00                 	db	0
  1134  017366  00                 	db	0
  1135  017367  00                 	db	0
  1136  017368  00                 	db	0
  1137  017369  00                 	db	0
  1138  01736A  00                 	db	0
  1139  01736B  00                 	db	0
  1140  01736C  00                 	db	0
  1141  01736D  00                 	db	0
  1142  01736E  00                 	db	0
  1143  01736F  00                 	db	0
  1144  017370  00                 	db	0
  1145  017371  00                 	db	0
  1146  017372  00                 	db	0
  1147  017373  00                 	db	0
  1148  017374  00                 	db	0
  1149  017375  00                 	db	0
  1150  017376  00                 	db	0
  1151  017377  00                 	db	0
  1152  017378  00                 	db	0
  1153  017379  00                 	db	0
  1154  01737A  00                 	db	0
  1155  01737B  00                 	db	0
  1156  01737C  00                 	db	0
  1157  01737D  00                 	db	0
  1158  01737E  00                 	db	0
  1159  01737F  00                 	db	0
  1160  017380  00                 	db	0
  1161  017381  00                 	db	0
  1162  017382  00                 	db	0
  1163  017383  00                 	db	0
  1164  017384  00                 	db	0
  1165  017385  00                 	db	0
  1166  017386  00                 	db	0
  1167  017387  00                 	db	0
  1168  017388  00                 	db	0
  1169  017389  00                 	db	0
  1170  01738A  00                 	db	0
  1171  01738B  00                 	db	0
  1172  01738C  00                 	db	0
  1173  01738D  00                 	db	0
  1174  01738E  00                 	db	0
  1175  01738F  00                 	db	0
  1176  017390  00                 	db	0
  1177  017391  00                 	db	0
  1178  017392  00                 	db	0
  1179  017393  00                 	db	0
  1180  017394  00                 	db	0
  1181  017395  00                 	db	0
  1182  017396  00                 	db	0
  1183  017397  00                 	db	0
  1184  017398  00                 	db	0
  1185  017399  00                 	db	0
  1186  01739A  00                 	db	0
  1187  01739B  00                 	db	0
  1188  01739C  00                 	db	0
  1189  01739D  00                 	db	0
  1190  01739E  00                 	db	0
  1191  01739F  00                 	db	0
  1192  0173A0  00                 	db	0
  1193  0173A1  00                 	db	0
  1194  0173A2  00                 	db	0
  1195  0173A3  00                 	db	0
  1196  0173A4  00                 	db	0
  1197  0173A5  00                 	db	0
  1198  0173A6  00                 	db	0
  1199  0173A7  00                 	db	0
  1200  0173A8  00                 	db	0
  1201  0173A9  00                 	db	0
  1202  0173AA  00                 	db	0
  1203  0173AB  00                 	db	0
  1204  0173AC  00                 	db	0
  1205  0173AD  00                 	db	0
  1206  0173AE  00                 	db	0
  1207  0173AF  00                 	db	0
  1208  0173B0  00                 	db	0
  1209  0173B1  00                 	db	0
  1210  0173B2  00                 	db	0
  1211  0173B3  00                 	db	0
  1212  0173B4  00                 	db	0
  1213  0173B5  00                 	db	0
  1214  0173B6  00                 	db	0
  1215  0173B7  00                 	db	0
  1216                           
  1217                           	psect	idataBANK0
  1218  01A292                     __pidataBANK0:
  1219                           	opt callstack 0
  1220                           
  1221                           ;initializer for _R
  1222  01A292  0000               	dw	0
  1223  01A294  0000               	dw	0
  1224  01A296  0000               	dw	0
  1225  01A298  0000               	dw	0
  1226  01A29A  0000               	dw	0
  1227  01A29C  0000               	dw	0
  1228  01A29E  0000               	dw	0
  1229  01A2A0  0000               	dw	0
  1230  01A2A2  0000               	dw	0
  1231  01A2A4  0000               	dw	0
  1232  01A2A6  0000               	dw	0
  1233  01A2A8  0000               	dw	0
  1234  01A2AA  0000               	dw	0
  1235  01A2AC  0000               	dw	0
  1236  01A2AE  0000               	dw	0
  1237  01A2B0  0000               	dw	0
  1238  01A2B2  0F67               	dw	3943
  1239  01A2B4  0F8F               	dw	3983
  1240  01A2B6  00                 	db	0
  1241  01A2B7  0000               	dw	0
  1242  01A2B9  00                 	db	0
  1243                           
  1244                           ;initializer for stoa@F1166
  1245  01A2BA  28                 	db	40
  1246  01A2BB  6E                 	db	110
  1247  01A2BC  75                 	db	117
  1248  01A2BD  6C                 	db	108
  1249  01A2BE  6C                 	db	108
  1250  01A2BF  29                 	db	41
  1251  01A2C0  00                 	db	0
  1252                           
  1253                           ;initializer for _H
  1254  01A2C1  00                 	db	0
  1255  01A2C2  00                 	db	0
  1256  01A2C3  01                 	db	1
  1257  01A2C4  00                 	db	0
  1258  01A2C5  01                 	db	1
  1259  01A2C6  00                 	db	0
  1260  01A2C7  00                 	db	0
  1261                           
  1262                           	psect	idataBANK1
  1263  018D02                     __pidataBANK1:
  1264                           	opt callstack 0
  1265                           
  1266                           ;initializer for _C
  1267  018D02  0000               	dw	0
  1268  018D04  0000               	dw	0
  1269  018D06  0000               	dw	0
  1270  018D08  0000               	dw	0
  1271  018D0A  0000               	dw	0
  1272  018D0C  0000               	dw	0
  1273  018D0E  0000               	dw	0
  1274  018D10  0000               	dw	0
  1275  018D12  0000               	dw	0
  1276  018D14  0000               	dw	0
  1277  018D16  0000               	dw	0
  1278  018D18  0000               	dw	0
  1279  018D1A  0000               	dw	0
  1280  018D1C  0000               	dw	0
  1281  018D1E  0000               	dw	0
  1282  018D20  0000               	dw	0
  1283  018D22  0000               	dw	0
  1284  018D24  0000               	dw	0
  1285  018D26  0000               	dw	0
  1286  018D28  0000               	dw	0
  1287  018D2A  0000               	dw	0
  1288  018D2C  0000               	dw	0
  1289  018D2E  0000               	dw	0
  1290  018D30  0000               	dw	0
  1291  018D32  0000               	dw	0
  1292  018D34  0000               	dw	0
  1293  018D36  0000               	dw	0
  1294  018D38  0000               	dw	0
  1295  018D3A  0000               	dw	0
  1296  018D3C  0000               	dw	0
  1297  018D3E  0000               	dw	0
  1298  018D40  0000               	dw	0
  1299  018D42  0000               	dw	0
  1300  018D44  0000               	dw	0
  1301  018D46  0000               	dw	0
  1302  018D48  0000               	dw	0
  1303  018D4A  0000               	dw	0
  1304  018D4C  0000               	dw	0
  1305  018D4E  0000               	dw	0
  1306  018D50  0000               	dw	0
  1307  018D52  0000               	dw	0
  1308  018D54  0000               	dw	0
  1309  018D56  0000               	dw	0
  1310  018D58  0000               	dw	0
  1311  018D5A  0000               	dw	0
  1312  018D5C  0000               	dw	0
  1313  018D5E  0000               	dw	0
  1314  018D60  0000               	dw	0
  1315  018D62  0000               	dw	0
  1316  018D64  0000               	dw	0
  1317  018D66  0000               	dw	0
  1318  018D68  0000               	dw	0
  1319  018D6A  0000               	dw	0
  1320  018D6C  0000               	dw	0
  1321  018D6E  0000               	dw	0
  1322  018D70  0000               	dw	0
  1323  018D72  0000               	dw	0
  1324  018D74  0000               	dw	0
  1325  018D76  0000               	dw	0
  1326  018D78  0000               	dw	0
  1327  018D7A  0000               	dw	0
  1328  018D7C  0000               	dw	0
  1329  018D7E  0000               	dw	0
  1330  018D80  0000               	dw	0
  1331  018D82  0000               	dw	0
  1332  018D84  0000               	dw	0
  1333  018D86  0000               	dw	0
  1334  018D88  0000               	dw	0
  1335  018D8A  0000               	dw	0
  1336  018D8C  42FA               	dw	17146
  1337  018D8E  00                 	db	0
  1338  018D8F  00                 	db	0
  1339  018D90  00                 	db	0
  1340  018D91  00                 	db	0
  1341  018D92  00                 	db	0
  1342  018D93  00                 	db	0
  1343  018D94  00                 	db	0
  1344  018D95  00                 	db	0
  1345  018D96  00                 	db	0
  1346  018D97  00                 	db	0
  1347  018D98  00                 	db	0
  1348  018D99  00                 	db	0
  1349  018D9A  00                 	db	0
  1350  018D9B  00                 	db	0
  1351  018D9C  00                 	db	0
  1352  018D9D  00                 	db	0
  1353  018D9E  00                 	db	0
  1354  018D9F  00                 	db	0
  1355  018DA0  00                 	db	0
  1356  018DA1  00                 	db	0
  1357  018DA2  00                 	db	0
  1358  018DA3  00                 	db	0
  1359  018DA4  00                 	db	0
  1360  018DA5  00                 	db	0
  1361  018DA6  00                 	db	0
  1362  018DA7  00                 	db	0
  1363  018DA8  00                 	db	0
  1364  018DA9  00                 	db	0
  1365  018DAA  00                 	db	0
  1366  018DAB  00                 	db	0
  1367  018DAC  00                 	db	0
  1368  018DAD  00                 	db	0
  1369  018DAE  00                 	db	0
  1370  018DAF  00                 	db	0
  1371  018DB0  00                 	db	0
  1372  018DB1  00                 	db	0
  1373  018DB2  00                 	db	0
  1374  018DB3  00                 	db	0
  1375  018DB4  00                 	db	0
  1376  018DB5  00                 	db	0
  1377  018DB6  00                 	db	0
  1378  018DB7  00                 	db	0
  1379  018DB8  00                 	db	0
  1380  018DB9  00                 	db	0
  1381  018DBA  00                 	db	0
  1382  018DBB  00                 	db	0
  1383  018DBC  00                 	db	0
  1384  018DBD  00                 	db	0
  1385  018DBE  00                 	db	0
  1386  018DBF  00                 	db	0
  1387  018DC0  00                 	db	0
  1388  018DC1  00                 	db	0
  1389  018DC2  00                 	db	0
  1390  018DC3  00                 	db	0
  1391  018DC4  00                 	db	0
  1392  018DC5  00                 	db	0
  1393  018DC6  00                 	db	0
  1394  018DC7  00                 	db	0
  1395  018DC8  00                 	db	0
  1396  018DC9  00                 	db	0
  1397  018DCA  00                 	db	0
  1398  018DCB  00                 	db	0
  1399  018DCC  00                 	db	0
  1400  018DCD  00                 	db	0
  1401  018DCE  00                 	db	0
  1402  018DCF  00                 	db	0
  1403  018DD0  00                 	db	0
  1404  018DD1  00                 	db	0
  1405  018DD2  00                 	db	0
  1406  018DD3  00                 	db	0
  1407  018DD4  00                 	db	0
  1408  018DD5  00                 	db	0
  1409  018DD6  00                 	db	0
  1410  018DD7  00                 	db	0
  1411  018DD8  00                 	db	0
  1412  018DD9  00                 	db	0
  1413  018DDA  00                 	db	0
  1414  018DDB  00                 	db	0
  1415  018DDC  00                 	db	0
  1416  018DDD  00                 	db	0
  1417  018DDE  00                 	db	0
  1418  018DDF  00                 	db	0
  1419  018DE0  00                 	db	0
  1420                           
  1421                           	psect	idataBANK2
  1422  018F7A                     __pidataBANK2:
  1423                           	opt callstack 0
  1424                           
  1425                           ;initializer for _V
  1426  018F7A  00                 	db	0
  1427  018F7B  00                 	db	0
  1428  018F7C  00                 	db	0
  1429  018F7D  00                 	db	0
  1430  018F7E  00                 	db	0
  1431  018F7F  00                 	db	0
  1432  018F80  00                 	db	0
  1433  018F81  00                 	db	0
  1434  018F82  00                 	db	0
  1435  018F83  00                 	db	0
  1436  018F84  00                 	db	0
  1437  018F85  00                 	db	0
  1438  018F86  00                 	db	0
  1439  018F87  00                 	db	0
  1440  018F88  00                 	db	0
  1441  018F89  00                 	db	0
  1442  018F8A  00                 	db	0
  1443  018F8B  00                 	db	0
  1444  018F8C  00                 	db	0
  1445  018F8D  00                 	db	0
  1446  018F8E  00                 	db	0
  1447  018F8F  00                 	db	0
  1448  018F90  00                 	db	0
  1449  018F91  00                 	db	0
  1450  018F92  00                 	db	0
  1451  018F93  00                 	db	0
  1452  018F94  00                 	db	0
  1453  018F95  00                 	db	0
  1454  018F96  00                 	db	0
  1455  018F97  00                 	db	0
  1456  018F98  00                 	db	0
  1457  018F99  00                 	db	0
  1458  018F9A  00                 	db	0
  1459  018F9B  00                 	db	0
  1460  018F9C  00                 	db	0
  1461  018F9D  00                 	db	0
  1462  018F9E  00                 	db	0
  1463  018F9F  00                 	db	0
  1464  018FA0  00                 	db	0
  1465  018FA1  00                 	db	0
  1466  018FA2  00                 	db	0
  1467  018FA3  00                 	db	0
  1468  018FA4  00                 	db	0
  1469  018FA5  00                 	db	0
  1470  018FA6  00                 	db	0
  1471  018FA7  00                 	db	0
  1472  018FA8  00                 	db	0
  1473  018FA9  00                 	db	0
  1474  018FAA  00                 	db	0
  1475  018FAB  00                 	db	0
  1476  018FAC  00                 	db	0
  1477  018FAD  00                 	db	0
  1478  018FAE  00                 	db	0
  1479  018FAF  00                 	db	0
  1480  018FB0  00                 	db	0
  1481  018FB1  00                 	db	0
  1482  018FB2  00                 	db	0
  1483  018FB3  00                 	db	0
  1484  018FB4  00                 	db	0
  1485  018FB5  00                 	db	0
  1486  018FB6  00                 	db	0
  1487  018FB7  00                 	db	0
  1488  018FB8  00                 	db	0
  1489  018FB9  00                 	db	0
  1490  018FBA  00                 	db	0
  1491  018FBB  00                 	db	0
  1492  018FBC  00                 	db	0
  1493  018FBD  00                 	db	0
  1494  018FBE  00                 	db	0
  1495  018FBF  00                 	db	0
  1496  018FC0  00                 	db	0
  1497  018FC1  00                 	db	0
  1498  018FC2  00                 	db	0
  1499  018FC3  00                 	db	0
  1500  018FC4  00                 	db	0
  1501  018FC5  00                 	db	0
  1502  018FC6  00                 	db	0
  1503  018FC7  00                 	db	0
  1504  018FC8  00                 	db	0
  1505  018FC9  00                 	db	0
  1506  018FCA  00                 	db	0
  1507  018FCB  00                 	db	0
  1508  018FCC  00                 	db	0
  1509  018FCD  00                 	db	0
  1510  018FCE  00                 	db	0
  1511  018FCF  00                 	db	0
  1512  018FD0  00                 	db	0
  1513  018FD1  00                 	db	0
  1514  018FD2  00                 	db	0
  1515  018FD3  00                 	db	0
  1516  018FD4  00                 	db	0
  1517  018FD5  00                 	db	0
  1518  018FD6  00                 	db	0
  1519  018FD7  00                 	db	0
  1520  018FD8  00                 	db	0
  1521  018FD9  00                 	db	0
  1522  018FDA  00                 	db	0
  1523  018FDB  00                 	db	0
  1524  018FDC  00                 	db	0
  1525  018FDD  00                 	db	0
  1526  018FDE  00                 	db	0
  1527  018FDF  00                 	db	0
  1528  018FE0  00                 	db	0
  1529  018FE1  00                 	db	0
  1530  018FE2  00                 	db	0
  1531  018FE3  00                 	db	0
  1532  018FE4  00                 	db	0
  1533  018FE5  00                 	db	0
  1534  018FE6  00                 	db	0
  1535  018FE7  00                 	db	0
  1536  018FE8  00                 	db	0
  1537  018FE9  00                 	db	0
  1538  018FEA  00                 	db	0
  1539  018FEB  00                 	db	0
  1540  018FEC  00                 	db	0
  1541  018FED  00                 	db	0
  1542  018FEE  00                 	db	0
  1543  018FEF  00                 	db	0
  1544  018FF0  00                 	db	0
  1545  018FF1  00                 	db	0
  1546  018FF2  00                 	db	0
  1547  018FF3  00                 	db	0
  1548  018FF4  00                 	db	0
  1549  018FF5  00                 	db	0
  1550  018FF6  00                 	db	0
  1551  018FF7  00                 	db	0
  1552  018FF8  00                 	db	0
  1553  018FF9  00                 	db	0
  1554  018FFA  00                 	db	0
  1555  018FFB  0000               	dw	0
  1556  018FFD  0000               	dw	0
  1557  018FFF  0000               	dw	0
  1558  019001  0000               	dw	0
  1559  019003  00                 	db	0
  1560  019004  00                 	db	0
  1561  019005  00                 	db	0
  1562  019006  00                 	db	0
  1563  019007  00                 	db	0
  1564  019008  00                 	db	0
  1565  019009  0000               	dw	0
  1566  01900B  0000               	dw	0
  1567  01900D  0000               	dw	0
  1568  01900F  0000               	dw	0
  1569  019011  0000               	dw	0
  1570  019013  0000               	dw	0
  1571  019015  00                 	db	0
  1572  019016  00                 	db	0
  1573  019017  00                 	db	0
  1574  019018  00                 	db	0
  1575  019019  00                 	db	0
  1576  01901A  00                 	db	0
  1577  01901B  00                 	db	0
  1578  01901C  00                 	db	0
  1579  01901D  00                 	db	0
  1580  01901E  00                 	db	0
  1581  01901F  0000               	dw	0
  1582  019021  0000               	dw	0
  1583  019023  2D                 	db	45
  1584  019024  00                 	db	0
  1585  019025  00                 	db	0
  1586  019026  0000               	dw	0
  1587  019028  0000               	dw	0
  1588  01902A  0000               	dw	0
  1589  01902C  0000               	dw	0
  1590  01902E  0000               	dw	0
  1591  019030  0000               	dw	0
  1592  019032  0000               	dw	0
  1593  019034  0000               	dw	0
  1594                           
  1595                           	psect	mediumconst
  1596  00FC58                     __pmediumconst:
  1597                           	opt callstack 0
  1598  00FC58  00                 	db	0
  1599  00FC59                     _BVSOC_TABLE:
  1600                           	opt callstack 0
  1601  00FC59  59D8               	dw	23000
  1602  00FC5B  0000               	dw	0
  1603  00FC5D  0005               	dw	5
  1604  00FC5F  0000               	dw	0
  1605  00FC61  5B68               	dw	23400
  1606  00FC63  0000               	dw	0
  1607  00FC65  000A               	dw	10
  1608  00FC67  0000               	dw	0
  1609  00FC69  5C30               	dw	23600
  1610  00FC6B  0000               	dw	0
  1611  00FC6D  0014               	dw	20
  1612  00FC6F  0000               	dw	0
  1613  00FC71  5E38               	dw	24120
  1614  00FC73  0000               	dw	0
  1615  00FC75  0019               	dw	25
  1616  00FC77  0000               	dw	0
  1617  00FC79  5E88               	dw	24200
  1618  00FC7B  0000               	dw	0
  1619  00FC7D  001E               	dw	30
  1620  00FC7F  0000               	dw	0
  1621  00FC81  5F78               	dw	24440
  1622  00FC83  0000               	dw	0
  1623  00FC85  0028               	dw	40
  1624  00FC87  0000               	dw	0
  1625  00FC89  5FDC               	dw	24540
  1626  00FC8B  0000               	dw	0
  1627  00FC8D  002D               	dw	45
  1628  00FC8F  0000               	dw	0
  1629  00FC91  6018               	dw	24600
  1630  00FC93  0000               	dw	0
  1631  00FC95  0032               	dw	50
  1632  00FC97  0000               	dw	0
  1633  00FC99  6046               	dw	24646
  1634  00FC9B  0000               	dw	0
  1635  00FC9D  0035               	dw	53
  1636  00FC9F  0000               	dw	0
  1637  00FCA1  607C               	dw	24700
  1638  00FCA3  0000               	dw	0
  1639  00FCA5  0037               	dw	55
  1640  00FCA7  0000               	dw	0
  1641  00FCA9  60AE               	dw	24750
  1642  00FCAB  0000               	dw	0
  1643  00FCAD  0039               	dw	57
  1644  00FCAF  0000               	dw	0
  1645  00FCB1  60E0               	dw	24800
  1646  00FCB3  0000               	dw	0
  1647  00FCB5  003C               	dw	60
  1648  00FCB7  0000               	dw	0
  1649  00FCB9  6112               	dw	24850
  1650  00FCBB  0000               	dw	0
  1651  00FCBD  003F               	dw	63
  1652  00FCBF  0000               	dw	0
  1653  00FCC1  6176               	dw	24950
  1654  00FCC3  0000               	dw	0
  1655  00FCC5  0043               	dw	67
  1656  00FCC7  0000               	dw	0
  1657  00FCC9  61A8               	dw	25000
  1658  00FCCB  0000               	dw	0
  1659  00FCCD  0046               	dw	70
  1660  00FCCF  0000               	dw	0
  1661  00FCD1  61BC               	dw	25020
  1662  00FCD3  0000               	dw	0
  1663  00FCD5  0048               	dw	72
  1664  00FCD7  0000               	dw	0
  1665  00FCD9  61D0               	dw	25040
  1666  00FCDB  0000               	dw	0
  1667  00FCDD  004B               	dw	75
  1668  00FCDF  0000               	dw	0
  1669  00FCE1  61DA               	dw	25050
  1670  00FCE3  0000               	dw	0
  1671  00FCE5  0050               	dw	80
  1672  00FCE7  0000               	dw	0
  1673  00FCE9  61E4               	dw	25060
  1674  00FCEB  0000               	dw	0
  1675  00FCED  0055               	dw	85
  1676  00FCEF  0000               	dw	0
  1677  00FCF1  61F8               	dw	25080
  1678  00FCF3  0000               	dw	0
  1679  00FCF5  005A               	dw	90
  1680  00FCF7  0000               	dw	0
  1681  00FCF9  6208               	dw	25096
  1682  00FCFB  0000               	dw	0
  1683  00FCFD  005C               	dw	92
  1684  00FCFF  0000               	dw	0
  1685  00FD01  6222               	dw	25122
  1686  00FD03  0000               	dw	0
  1687  00FD05  005D               	dw	93
  1688  00FD07  0000               	dw	0
  1689  00FD09  6234               	dw	25140
  1690  00FD0B  0000               	dw	0
  1691  00FD0D  005F               	dw	95
  1692  00FD0F  0000               	dw	0
  1693  00FD11  6248               	dw	25160
  1694  00FD13  0000               	dw	0
  1695  00FD15  0061               	dw	97
  1696  00FD17  0000               	dw	0
  1697  00FD19  625C               	dw	25180
  1698  00FD1B  0000               	dw	0
  1699  00FD1D  0064               	dw	100
  1700  00FD1F  0000               	dw	0
  1701  00FD21  6658               	dw	26200
  1702  00FD23  0000               	dw	0
  1703  00FD25  005A               	dw	90
  1704  00FD27  0000               	dw	0
  1705  00FD29                     __end_of_BVSOC_TABLE:
  1706                           	opt callstack 0
  1707  00FD29                     _T:
  1708                           	opt callstack 0
  1709  00FD29  63                 	db	99
  1710  00FD2A  6F                 	db	111
  1711  00FD2B  6D                 	db	109
  1712  00FD2C  6D                 	db	109
  1713  00FD2D  61                 	db	97
  1714  00FD2E  6E                 	db	110
  1715  00FD2F  64                 	db	100
  1716  00FD30  73                 	db	115
  1717  00FD31  20                 	db	32
  1718  00FD32  31                 	db	49
  1719  00FD33  00                 	db	0
  1720  00FD34  00                 	db	0
  1721  00FD35  00                 	db	0
  1722  00FD36  00                 	db	0
  1723  00FD37  00                 	db	0
  1724  00FD38  00                 	db	0
  1725  00FD39  00                 	db	0
  1726  00FD3A  00                 	db	0
  1727  00FD3B  64                 	db	100
  1728  00FD3C  69                 	db	105
  1729  00FD3D  73                 	db	115
  1730  00FD3E  70                 	db	112
  1731  00FD3F  6C                 	db	108
  1732  00FD40  61                 	db	97
  1733  00FD41  79                 	db	121
  1734  00FD42  73                 	db	115
  1735  00FD43  20                 	db	32
  1736  00FD44  31                 	db	49
  1737  00FD45  00                 	db	0
  1738  00FD46  00                 	db	0
  1739  00FD47  00                 	db	0
  1740  00FD48  00                 	db	0
  1741  00FD49  00                 	db	0
  1742  00FD4A  00                 	db	0
  1743  00FD4B  00                 	db	0
  1744  00FD4C  00                 	db	0
  1745  00FD4D  63                 	db	99
  1746  00FD4E  6F                 	db	111
  1747  00FD4F  6D                 	db	109
  1748  00FD50  6D                 	db	109
  1749  00FD51  61                 	db	97
  1750  00FD52  6E                 	db	110
  1751  00FD53  64                 	db	100
  1752  00FD54  73                 	db	115
  1753  00FD55  20                 	db	32
  1754  00FD56  32                 	db	50
  1755  00FD57  00                 	db	0
  1756  00FD58  00                 	db	0
  1757  00FD59  00                 	db	0
  1758  00FD5A  00                 	db	0
  1759  00FD5B  00                 	db	0
  1760  00FD5C  00                 	db	0
  1761  00FD5D  00                 	db	0
  1762  00FD5E  00                 	db	0
  1763  00FD5F  64                 	db	100
  1764  00FD60  69                 	db	105
  1765  00FD61  73                 	db	115
  1766  00FD62  70                 	db	112
  1767  00FD63  6C                 	db	108
  1768  00FD64  61                 	db	97
  1769  00FD65  79                 	db	121
  1770  00FD66  73                 	db	115
  1771  00FD67  20                 	db	32
  1772  00FD68  32                 	db	50
  1773  00FD69  00                 	db	0
  1774  00FD6A  00                 	db	0
  1775  00FD6B  00                 	db	0
  1776  00FD6C  00                 	db	0
  1777  00FD6D  00                 	db	0
  1778  00FD6E  00                 	db	0
  1779  00FD6F  00                 	db	0
  1780  00FD70  00                 	db	0
  1781  00FD71  63                 	db	99
  1782  00FD72  6F                 	db	111
  1783  00FD73  6D                 	db	109
  1784  00FD74  6D                 	db	109
  1785  00FD75  61                 	db	97
  1786  00FD76  6E                 	db	110
  1787  00FD77  64                 	db	100
  1788  00FD78  73                 	db	115
  1789  00FD79  20                 	db	32
  1790  00FD7A  33                 	db	51
  1791  00FD7B  00                 	db	0
  1792  00FD7C  00                 	db	0
  1793  00FD7D  00                 	db	0
  1794  00FD7E  00                 	db	0
  1795  00FD7F  00                 	db	0
  1796  00FD80  00                 	db	0
  1797  00FD81  00                 	db	0
  1798  00FD82  00                 	db	0
  1799  00FD83  64                 	db	100
  1800  00FD84  69                 	db	105
  1801  00FD85  73                 	db	115
  1802  00FD86  70                 	db	112
  1803  00FD87  6C                 	db	108
  1804  00FD88  61                 	db	97
  1805  00FD89  79                 	db	121
  1806  00FD8A  73                 	db	115
  1807  00FD8B  20                 	db	32
  1808  00FD8C  33                 	db	51
  1809  00FD8D  00                 	db	0
  1810  00FD8E  00                 	db	0
  1811  00FD8F  00                 	db	0
  1812  00FD90  00                 	db	0
  1813  00FD91  00                 	db	0
  1814  00FD92  00                 	db	0
  1815  00FD93  00                 	db	0
  1816  00FD94  00                 	db	0
  1817  00FD95  63                 	db	99
  1818  00FD96  6F                 	db	111
  1819  00FD97  6D                 	db	109
  1820  00FD98  6D                 	db	109
  1821  00FD99  61                 	db	97
  1822  00FD9A  6E                 	db	110
  1823  00FD9B  64                 	db	100
  1824  00FD9C  73                 	db	115
  1825  00FD9D  20                 	db	32
  1826  00FD9E  34                 	db	52
  1827  00FD9F  00                 	db	0
  1828  00FDA0  00                 	db	0
  1829  00FDA1  00                 	db	0
  1830  00FDA2  00                 	db	0
  1831  00FDA3  00                 	db	0
  1832  00FDA4  00                 	db	0
  1833  00FDA5  00                 	db	0
  1834  00FDA6  00                 	db	0
  1835  00FDA7  64                 	db	100
  1836  00FDA8  69                 	db	105
  1837  00FDA9  73                 	db	115
  1838  00FDAA  70                 	db	112
  1839  00FDAB  6C                 	db	108
  1840  00FDAC  61                 	db	97
  1841  00FDAD  79                 	db	121
  1842  00FDAE  73                 	db	115
  1843  00FDAF  20                 	db	32
  1844  00FDB0  34                 	db	52
  1845  00FDB1  00                 	db	0
  1846  00FDB2  00                 	db	0
  1847  00FDB3  00                 	db	0
  1848  00FDB4  00                 	db	0
  1849  00FDB5  00                 	db	0
  1850  00FDB6  00                 	db	0
  1851  00FDB7  00                 	db	0
  1852  00FDB8  00                 	db	0
  1853  00FDB9                     __end_of_T:
  1854                           	opt callstack 0
  1855  00FDB9  0000               	dw	0
  1856  00FDBB  3F80               	dw	16256
  1857  00FDBD  0000               	dw	0
  1858  00FDBF  3FC0               	dw	16320
  1859  00FDC1                     __end_of_bp:
  1860                           	opt callstack 0
  1861  00FDC1  AA00               	dw	43520
  1862  00FDC3  3FB8               	dw	16312
  1863  00FDC5                     __end_of_ivln2_h:
  1864                           	opt callstack 0
  1865  00FDC5  23C6               	dw	9158
  1866  00FDC7  B8F6               	dw	47350
  1867  00FDC9                     __end_of_cp_l:
  1868                           	opt callstack 0
  1869  00FDC9  4000               	dw	16384
  1870  00FDCB  3F76               	dw	16246
  1871  00FDCD                     __end_of_cp_h:
  1872                           	opt callstack 0
  1873  0000                     _IVTADL	set	14493
  1874  0000                     _IVTADH	set	14494
  1875  0000                     _IVTADU	set	14495
  1876  0000                     _PIR6bits	set	14758
  1877  0000                     _PIR4bits	set	14756
  1878  0000                     _PIE8bits	set	14744
  1879  0000                     _PIR8bits	set	14760
  1880  0000                     _SCANPR	set	14839
  1881  0000                     _DMA2PR	set	14836
  1882  0000                     _DMA1PR	set	14835
  1883  0000                     _MAINPR	set	14834
  1884  0000                     _ISRPR	set	14833
  1885  0000                     _PIE2bits	set	14738
  1886  0000                     _PIR2bits	set	14754
  1887  0000                     _PIE9bits	set	14745
  1888  0000                     _PIR9bits	set	14761
  1889  0000                     _PIE6bits	set	14742
  1890  0000                     _PIE3bits	set	14739
  1891  0000                     _PMD7	set	14791
  1892  0000                     _PMD6	set	14790
  1893  0000                     _PMD5	set	14789
  1894  0000                     _PMD4	set	14788
  1895  0000                     _PMD3	set	14787
  1896  0000                     _PMD2	set	14786
  1897  0000                     _PMD1	set	14785
  1898  0000                     _PMD0	set	14784
  1899  0000                     _OSCTUNE	set	14814
  1900  0000                     _OSCFRQ	set	14815
  1901  0000                     _OSCEN	set	14813
  1902  0000                     _OSCCON3	set	14811
  1903  0000                     _OSCCON1	set	14809
  1904  0000                     _IPR8bits	set	14728
  1905  0000                     _IPR9bits	set	14729
  1906  0000                     _IPR5bits	set	14725
  1907  0000                     _IPR1bits	set	14721
  1908  0000                     _IPR3bits	set	14723
  1909  0000                     _IPR6bits	set	14726
  1910  0000                     _IPR2bits	set	14722
  1911  0000                     _PIE5bits	set	14741
  1912  0000                     _PIE1bits	set	14737
  1913  0000                     _PIR5bits	set	14757
  1914  0000                     _PIR1bits	set	14753
  1915  0000                     _PLLR	set	118496
  1916  0000                     _SPI1SDIPPS	set	15071
  1917  0000                     _U1RXPPS	set	15077
  1918  0000                     _RC6PPS	set	14870
  1919  0000                     _RC5PPS	set	14869
  1920  0000                     _INT1PPS	set	15041
  1921  0000                     _RD1PPS	set	14873
  1922  0000                     _INT0PPS	set	15040
  1923  0000                     _RC3PPS	set	14867
  1924  0000                     _RB6PPS	set	14862
  1925  0000                     _SPI1SCKPPS	set	15070
  1926  0000                     _U2RXPPS	set	15080
  1927  0000                     _SLRCONF	set	14995
  1928  0000                     _SLRCONE	set	14979
  1929  0000                     _SLRCOND	set	14963
  1930  0000                     _SLRCONC	set	14947
  1931  0000                     _SLRCONB	set	14931
  1932  0000                     _SLRCONA	set	14915
  1933  0000                     _ODCOND	set	14962
  1934  0000                     _ODCONC	set	14946
  1935  0000                     _ODCONB	set	14930
  1936  0000                     _ODCONA	set	14914
  1937  0000                     _ODCONF	set	14994
  1938  0000                     _ODCONE	set	14978
  1939  0000                     _WPUC	set	14945
  1940  0000                     _WPUA	set	14913
  1941  0000                     _WPUB	set	14929
  1942  0000                     _WPUE	set	14977
  1943  0000                     _WPUF	set	14993
  1944  0000                     _WPUD	set	14961
  1945  0000                     _ANSELA	set	14912
  1946  0000                     _ANSELF	set	14992
  1947  0000                     _ANSELE	set	14976
  1948  0000                     _ANSELB	set	14928
  1949  0000                     _ANSELC	set	14944
  1950  0000                     _ANSELD	set	14960
  1951  0000                     _DMA2SSA	set	15321
  1952  0000                     _DMA1SSA	set	15353
  1953  0000                     _DMA2DSZ	set	15310
  1954  0000                     _DMA2SSZ	set	15319
  1955  0000                     _DMA2DSA	set	15312
  1956  0000                     _DMA1DSZ	set	15342
  1957  0000                     _DMA1SSZ	set	15351
  1958  0000                     _DMA1DSA	set	15344
  1959  0000                     _DMA2CON0bits	set	15324
  1960  0000                     _DMA2CON1bits	set	15325
  1961  0000                     _DMA1CON0bits	set	15356
  1962  0000                     _DMA1CON1bits	set	15357
  1963  0000                     _DMA2CON0	set	15324
  1964  0000                     _DMA2AIRQ	set	15326
  1965  0000                     _DMA2SIRQ	set	15327
  1966  0000                     _DMA2CON1	set	15325
  1967  0000                     _DMA1CON0	set	15356
  1968  0000                     _DMA1AIRQ	set	15358
  1969  0000                     _DMA1SIRQ	set	15359
  1970  0000                     _DMA1CON1	set	15357
  1971  0000                     _CLKRCON	set	15589
  1972  0000                     _CLKRCLK	set	15590
  1973  0000                     _SPI1INTFbits	set	15642
  1974  0000                     _SPI1RXB	set	15632
  1975  0000                     _SPI1TXB	set	15633
  1976  0000                     _SPI1TCNTL	set	15634
  1977  0000                     _SPI1CON0	set	15636
  1978  0000                     _SPI1CLK	set	15644
  1979  0000                     _SPI1BAUD	set	15641
  1980  0000                     _SPI1CON2	set	15638
  1981  0000                     _SPI1CON1	set	15637
  1982  0000                     _U2RXB	set	15824
  1983  0000                     _U2TXB	set	15826
  1984  0000                     _U2ERRIE	set	15842
  1985  0000                     _U2ERRIR	set	15841
  1986  0000                     _U2UIR	set	15840
  1987  0000                     _U2FIFO	set	15839
  1988  0000                     _U2BRGH	set	15838
  1989  0000                     _U2BRGL	set	15837
  1990  0000                     _U2CON2	set	15836
  1991  0000                     _U2CON1	set	15835
  1992  0000                     _U2CON0	set	15834
  1993  0000                     _U2P3L	set	15832
  1994  0000                     _U2P2L	set	15830
  1995  0000                     _U2P1L	set	15828
  1996  0000                     _U1RXB	set	15848
  1997  0000                     _U1ERRIE	set	15866
  1998  0000                     _U1ERRIR	set	15865
  1999  0000                     _U1UIR	set	15864
  2000  0000                     _U1FIFO	set	15863
  2001  0000                     _U1BRGH	set	15862
  2002  0000                     _U1BRGL	set	15861
  2003  0000                     _U1CON2	set	15860
  2004  0000                     _U1CON1	set	15859
  2005  0000                     _U1CON0	set	15858
  2006  0000                     _U1P3H	set	15857
  2007  0000                     _U1P3L	set	15856
  2008  0000                     _U1P2H	set	15855
  2009  0000                     _U1P2L	set	15854
  2010  0000                     _U1P1H	set	15853
  2011  0000                     _U1P1L	set	15852
  2012  0000                     _FVRCON	set	16065
  2013  0000                     _ADFLTRL	set	16102
  2014  0000                     _ADFLTRH	set	16103
  2015  0000                     _ADCON0bits	set	16120
  2016  0000                     _ADCON0	set	16120
  2017  0000                     _ADCLK	set	16127
  2018  0000                     _ADACT	set	16126
  2019  0000                     _ADREF	set	16125
  2020  0000                     _ADSTAT	set	16124
  2021  0000                     _ADCON3	set	16123
  2022  0000                     _ADCON2	set	16122
  2023  0000                     _ADCON1	set	16121
  2024  0000                     _ADPREH	set	16119
  2025  0000                     _ADPREL	set	16118
  2026  0000                     _ADCAP	set	16117
  2027  0000                     _ADACQH	set	16116
  2028  0000                     _ADACQL	set	16115
  2029  0000                     _ADPCH	set	16113
  2030  0000                     _ADRPT	set	16108
  2031  0000                     _ADACCU	set	16106
  2032  0000                     _ADSTPTH	set	16101
  2033  0000                     _ADSTPTL	set	16100
  2034  0000                     _ADUTHH	set	16097
  2035  0000                     _ADUTHL	set	16096
  2036  0000                     _ADLTHH	set	16095
  2037  0000                     _ADLTHL	set	16094
  2038  0000                     _CCPTMRS1bits	set	16223
  2039  0000                     _PORTFbits	set	16335
  2040  0000                     _LATCbits	set	16316
  2041  0000                     _LATDbits	set	16317
  2042  0000                     _PORTBbits	set	16331
  2043  0000                     _T3CONbits	set	16294
  2044  0000                     _T3CON	set	16294
  2045  0000                     _TMR3L	set	16292
  2046  0000                     _TMR3H	set	16293
  2047  0000                     _T3CLK	set	16297
  2048  0000                     _T3GATE	set	16296
  2049  0000                     _T3GCON	set	16295
  2050  0000                     _T2CON	set	16300
  2051  0000                     _T2TMR	set	16298
  2052  0000                     _T2PR	set	16299
  2053  0000                     _T2RST	set	16303
  2054  0000                     _T2HLT	set	16301
  2055  0000                     _T2CLKCON	set	16302
  2056  0000                     _PWM8DCL	set	16224
  2057  0000                     _PWM8DCH	set	16225
  2058  0000                     _PWM8CON	set	16226
  2059  0000                     _LATEbits	set	16318
  2060  0000                     _T5CONbits	set	16282
  2061  0000                     _T5CON	set	16282
  2062  0000                     _TMR5L	set	16280
  2063  0000                     _TMR5H	set	16281
  2064  0000                     _T5CLK	set	16285
  2065  0000                     _T5GATE	set	16284
  2066  0000                     _T5GCON	set	16283
  2067  0000                     _T6CON	set	16276
  2068  0000                     _T6TMR	set	16274
  2069  0000                     _T6PR	set	16275
  2070  0000                     _T6RST	set	16279
  2071  0000                     _T6HLT	set	16277
  2072  0000                     _T6CLKCON	set	16278
  2073  0000                     _TRISD	set	16325
  2074  0000                     _TRISC	set	16324
  2075  0000                     _TRISB	set	16323
  2076  0000                     _TRISA	set	16322
  2077  0000                     _TRISF	set	16327
  2078  0000                     _TRISE	set	16326
  2079  0000                     _LATC	set	16316
  2080  0000                     _LATB	set	16315
  2081  0000                     _LATF	set	16319
  2082  0000                     _LATA	set	16314
  2083  0000                     _LATD	set	16317
  2084  0000                     _LATE	set	16318
  2085  0000                     _IVTLOCKbits	set	16340
  2086  0000                     _IVTLOCK	set	16340
  2087  0000                     _INTCON0bits	set	16338
  2088  0000                     _GIE	set	130711
  2089  00FDCD                     STR_47:
  2090                           
  2091                           ; BSR set to: 57
  2092  00FDCD  20                 	db	32
  2093  00FDCE  25                 	db	37
  2094  00FDCF  6C                 	db	108	;'l'
  2095  00FDD0  75                 	db	117	;'u'
  2096  00FDD1  2C                 	db	44
  2097  00FDD2  25                 	db	37
  2098  00FDD3  34                 	db	52	;'4'
  2099  00FDD4  2E                 	db	46
  2100  00FDD5  34                 	db	52	;'4'
  2101  00FDD6  66                 	db	102	;'f'
  2102  00FDD7  2C                 	db	44
  2103  00FDD8  25                 	db	37
  2104  00FDD9  34                 	db	52	;'4'
  2105  00FDDA  2E                 	db	46
  2106  00FDDB  34                 	db	52	;'4'
  2107  00FDDC  66                 	db	102	;'f'
  2108  00FDDD  2C                 	db	44
  2109  00FDDE  25                 	db	37
  2110  00FDDF  34                 	db	52	;'4'
  2111  00FDE0  2E                 	db	46
  2112  00FDE1  34                 	db	52	;'4'
  2113  00FDE2  66                 	db	102	;'f'
  2114  00FDE3  2C                 	db	44
  2115  00FDE4  25                 	db	37
  2116  00FDE5  34                 	db	52	;'4'
  2117  00FDE6  2E                 	db	46
  2118  00FDE7  34                 	db	52	;'4'
  2119  00FDE8  66                 	db	102	;'f'
  2120  00FDE9  2C                 	db	44
  2121  00FDEA  25                 	db	37
  2122  00FDEB  34                 	db	52	;'4'
  2123  00FDEC  2E                 	db	46
  2124  00FDED  33                 	db	51	;'3'
  2125  00FDEE  66                 	db	102	;'f'
  2126  00FDEF  2C                 	db	44
  2127  00FDF0  25                 	db	37
  2128  00FDF1  34                 	db	52	;'4'
  2129  00FDF2  2E                 	db	46
  2130  00FDF3  33                 	db	51	;'3'
  2131  00FDF4  66                 	db	102	;'f'
  2132  00FDF5  2C                 	db	44
  2133  00FDF6  25                 	db	37
  2134  00FDF7  34                 	db	52	;'4'
  2135  00FDF8  2E                 	db	46
  2136  00FDF9  33                 	db	51	;'3'
  2137  00FDFA  66                 	db	102	;'f'
  2138  00FDFB  2C                 	db	44
  2139  00FDFC  25                 	db	37
  2140  00FDFD  34                 	db	52	;'4'
  2141  00FDFE  2E                 	db	46
  2142  00FDFF  33                 	db	51	;'3'
  2143  00FE00  66                 	db	102	;'f'
  2144  00FE01  2C                 	db	44
  2145  00FE02  25                 	db	37
  2146  00FE03  34                 	db	52	;'4'
  2147  00FE04  2E                 	db	46
  2148  00FE05  33                 	db	51	;'3'
  2149  00FE06  66                 	db	102	;'f'
  2150  00FE07  2C                 	db	44
  2151  00FE08  25                 	db	37
  2152  00FE09  34                 	db	52	;'4'
  2153  00FE0A  2E                 	db	46
  2154  00FE0B  33                 	db	51	;'3'
  2155  00FE0C  66                 	db	102	;'f'
  2156  00FE0D  2C                 	db	44
  2157  00FE0E  25                 	db	37
  2158  00FE0F  34                 	db	52	;'4'
  2159  00FE10  2E                 	db	46
  2160  00FE11  33                 	db	51	;'3'
  2161  00FE12  64                 	db	100	;'d'
  2162  00FE13  2C                 	db	44
  2163  00FE14  25                 	db	37
  2164  00FE15  34                 	db	52	;'4'
  2165  00FE16  2E                 	db	46
  2166  00FE17  33                 	db	51	;'3'
  2167  00FE18  64                 	db	100	;'d'
  2168  00FE19  0D                 	db	13
  2169  00FE1A  0A                 	db	10
  2170  00FE1B  00                 	db	0
  2171  00FE1C                     
  2172                           ; BSR set to: 57
  2173  00FE1C  20                 	db	32
  2174  00FE1D  4D                 	db	77	;'M'
  2175  00FE1E  65                 	db	101	;'e'
  2176  00FE1F  73                 	db	115	;'s'
  2177  00FE20  67                 	db	103	;'g'
  2178  00FE21  20                 	db	32
  2179  00FE22  25                 	db	37
  2180  00FE23  64                 	db	100	;'d'
  2181  00FE24  20                 	db	32
  2182  00FE25  53                 	db	83	;'S'
  2183  00FE26  74                 	db	116	;'t'
  2184  00FE27  61                 	db	97	;'a'
  2185  00FE28  63                 	db	99	;'c'
  2186  00FE29  6B                 	db	107	;'k'
  2187  00FE2A  20                 	db	32
  2188  00FE2B  25                 	db	37
  2189  00FE2C  64                 	db	100	;'d'
  2190  00FE2D  20                 	db	32
  2191  00FE2E  20                 	db	32
  2192  00FE2F  20                 	db	32
  2193  00FE30  20                 	db	32
  2194  00FE31  20                 	db	32
  2195  00FE32  20                 	db	32
  2196  00FE33  00                 	db	0
  2197  00FE34                     STR_9:
  2198                           
  2199                           ; BSR set to: 57
  2200  00FE34  53                 	db	83	;'S'
  2201  00FE35  20                 	db	32
  2202  00FE36  53                 	db	83	;'S'
  2203  00FE37  4F                 	db	79	;'O'
  2204  00FE38  43                 	db	67	;'C'
  2205  00FE39  20                 	db	32
  2206  00FE3A  25                 	db	37
  2207  00FE3B  64                 	db	100	;'d'
  2208  00FE3C  20                 	db	32
  2209  00FE3D  25                 	db	37
  2210  00FE3E  32                 	db	50	;'2'
  2211  00FE3F  2E                 	db	46
  2212  00FE40  34                 	db	52	;'4'
  2213  00FE41  66                 	db	102	;'f'
  2214  00FE42  20                 	db	32
  2215  00FE43  20                 	db	32
  2216  00FE44  20                 	db	32
  2217  00FE45  20                 	db	32
  2218  00FE46  20                 	db	32
  2219  00FE47  20                 	db	32
  2220  00FE48  20                 	db	32
  2221  00FE49  00                 	db	0
  2222  00FE4A                     STR_20:
  2223                           
  2224                           ; BSR set to: 57
  2225  00FE4A  42                 	db	66	;'B'
  2226  00FE4B  41                 	db	65	;'A'
  2227  00FE4C  48                 	db	72	;'H'
  2228  00FE4D  20                 	db	32
  2229  00FE4E  25                 	db	37
  2230  00FE4F  33                 	db	51	;'3'
  2231  00FE50  2E                 	db	46
  2232  00FE51  32                 	db	50	;'2'
  2233  00FE52  66                 	db	102	;'f'
  2234  00FE53  20                 	db	32
  2235  00FE54  50                 	db	80	;'P'
  2236  00FE55  25                 	db	37
  2237  00FE56  33                 	db	51	;'3'
  2238  00FE57  2E                 	db	46
  2239  00FE58  32                 	db	50	;'2'
  2240  00FE59  66                 	db	102	;'f'
  2241  00FE5A  20                 	db	32
  2242  00FE5B  20                 	db	32
  2243  00FE5C  20                 	db	32
  2244  00FE5D  00                 	db	0
  2245  00FE5E                     STR_40:
  2246                           
  2247                           ; BSR set to: 57
  2248  00FE5E  20                 	db	32
  2249  00FE5F  20                 	db	32
  2250  00FE60  20                 	db	32
  2251  00FE61  20                 	db	32
  2252  00FE62  20                 	db	32
  2253  00FE63  20                 	db	32
  2254  00FE64  20                 	db	32
  2255  00FE65  20                 	db	32
  2256  00FE66  20                 	db	32
  2257  00FE67  20                 	db	32
  2258  00FE68  20                 	db	32
  2259  00FE69  20                 	db	32
  2260  00FE6A  20                 	db	32
  2261  00FE6B  20                 	db	32
  2262  00FE6C  20                 	db	32
  2263  00FE6D  20                 	db	32
  2264  00FE6E  20                 	db	32
  2265  00FE6F  20                 	db	32
  2266  00FE70  00                 	db	0
  2267  00FE71                     STR_30:
  2268                           
  2269                           ; BSR set to: 57
  2270  00FE71  48                 	db	72	;'H'
  2271  00FE72  45                 	db	69	;'E'
  2272  00FE73  4C                 	db	76	;'L'
  2273  00FE74  50                 	db	80	;'P'
  2274  00FE75  20                 	db	32
  2275  00FE76  25                 	db	37
  2276  00FE77  73                 	db	115	;'s'
  2277  00FE78  20                 	db	32
  2278  00FE79  20                 	db	32
  2279  00FE7A  20                 	db	32
  2280  00FE7B  20                 	db	32
  2281  00FE7C  20                 	db	32
  2282  00FE7D  20                 	db	32
  2283  00FE7E  20                 	db	32
  2284  00FE7F  20                 	db	32
  2285  00FE80  20                 	db	32
  2286  00FE81  20                 	db	32
  2287  00FE82  20                 	db	32
  2288  00FE83  00                 	db	0
  2289  00FE84                     
  2290                           ; BSR set to: 57
  2291  00FE84  44                 	db	68	;'D'
  2292  00FE85  49                 	db	73	;'I'
  2293  00FE86  53                 	db	83	;'S'
  2294  00FE87  50                 	db	80	;'P'
  2295  00FE88  4C                 	db	76	;'L'
  2296  00FE89  41                 	db	65	;'A'
  2297  00FE8A  59                 	db	89	;'Y'
  2298  00FE8B  20                 	db	32
  2299  00FE8C  25                 	db	37
  2300  00FE8D  73                 	db	115	;'s'
  2301  00FE8E  20                 	db	32
  2302  00FE8F  20                 	db	32
  2303  00FE90  20                 	db	32
  2304  00FE91  20                 	db	32
  2305  00FE92  20                 	db	32
  2306  00FE93  20                 	db	32
  2307  00FE94  20                 	db	32
  2308  00FE95  20                 	db	32
  2309  00FE96  00                 	db	0
  2310  00FE97                     STR_21:
  2311                           
  2312                           ; BSR set to: 57
  2313  00FE97  53                 	db	83	;'S'
  2314  00FE98  4F                 	db	79	;'O'
  2315  00FE99  43                 	db	67	;'C'
  2316  00FE9A  20                 	db	32
  2317  00FE9B  25                 	db	37
  2318  00FE9C  64                 	db	100	;'d'
  2319  00FE9D  20                 	db	32
  2320  00FE9E  52                 	db	82	;'R'
  2321  00FE9F  55                 	db	85	;'U'
  2322  00FEA0  4E                 	db	78	;'N'
  2323  00FEA1  20                 	db	32
  2324  00FEA2  25                 	db	37
  2325  00FEA3  64                 	db	100	;'d'
  2326  00FEA4  20                 	db	32
  2327  00FEA5  20                 	db	32
  2328  00FEA6  20                 	db	32
  2329  00FEA7  20                 	db	32
  2330  00FEA8  20                 	db	32
  2331  00FEA9  00                 	db	0
  2332  00FEAA                     STR_13:
  2333                           
  2334                           ; BSR set to: 57
  2335  00FEAA  50                 	db	80	;'P'
  2336  00FEAB  56                 	db	86	;'V'
  2337  00FEAC  20                 	db	32
  2338  00FEAD  20                 	db	32
  2339  00FEAE  20                 	db	32
  2340  00FEAF  50                 	db	80	;'P'
  2341  00FEB0  57                 	db	87	;'W'
  2342  00FEB1  52                 	db	82	;'R'
  2343  00FEB2  20                 	db	32
  2344  00FEB3  25                 	db	37
  2345  00FEB4  33                 	db	51	;'3'
  2346  00FEB5  2E                 	db	46
  2347  00FEB6  32                 	db	50	;'2'
  2348  00FEB7  66                 	db	102	;'f'
  2349  00FEB8  20                 	db	32
  2350  00FEB9  20                 	db	32
  2351  00FEBA  20                 	db	32
  2352  00FEBB  20                 	db	32
  2353  00FEBC  00                 	db	0
  2354  00FEBD                     STR_15:
  2355                           
  2356                           ; BSR set to: 57
  2357  00FEBD  49                 	db	73	;'I'
  2358  00FEBE  4E                 	db	78	;'N'
  2359  00FEBF  56                 	db	86	;'V'
  2360  00FEC0  20                 	db	32
  2361  00FEC1  20                 	db	32
  2362  00FEC2  50                 	db	80	;'P'
  2363  00FEC3  57                 	db	87	;'W'
  2364  00FEC4  52                 	db	82	;'R'
  2365  00FEC5  20                 	db	32
  2366  00FEC6  25                 	db	37
  2367  00FEC7  33                 	db	51	;'3'
  2368  00FEC8  2E                 	db	46
  2369  00FEC9  32                 	db	50	;'2'
  2370  00FECA  66                 	db	102	;'f'
  2371  00FECB  20                 	db	32
  2372  00FECC  20                 	db	32
  2373  00FECD  20                 	db	32
  2374  00FECE  20                 	db	32
  2375  00FECF  00                 	db	0
  2376  00FED0                     STR_14:
  2377                           
  2378                           ; BSR set to: 57
  2379  00FED0  4C                 	db	76	;'L'
  2380  00FED1  4F                 	db	79	;'O'
  2381  00FED2  41                 	db	65	;'A'
  2382  00FED3  44                 	db	68	;'D'
  2383  00FED4  20                 	db	32
  2384  00FED5  50                 	db	80	;'P'
  2385  00FED6  57                 	db	87	;'W'
  2386  00FED7  52                 	db	82	;'R'
  2387  00FED8  20                 	db	32
  2388  00FED9  25                 	db	37
  2389  00FEDA  33                 	db	51	;'3'
  2390  00FEDB  2E                 	db	46
  2391  00FEDC  32                 	db	50	;'2'
  2392  00FEDD  66                 	db	102	;'f'
  2393  00FEDE  20                 	db	32
  2394  00FEDF  20                 	db	32
  2395  00FEE0  20                 	db	32
  2396  00FEE1  20                 	db	32
  2397  00FEE2  00                 	db	0
  2398  00FEE3                     STR_19:
  2399                           
  2400                           ; BSR set to: 57
  2401  00FEE3  42                 	db	66	;'B'
  2402  00FEE4  41                 	db	65	;'A'
  2403  00FEE5  54                 	db	84	;'T'
  2404  00FEE6  54                 	db	84	;'T'
  2405  00FEE7  20                 	db	32
  2406  00FEE8  50                 	db	80	;'P'
  2407  00FEE9  57                 	db	87	;'W'
  2408  00FEEA  52                 	db	82	;'R'
  2409  00FEEB  20                 	db	32
  2410  00FEEC  25                 	db	37
  2411  00FEED  33                 	db	51	;'3'
  2412  00FEEE  2E                 	db	46
  2413  00FEEF  32                 	db	50	;'2'
  2414  00FEF0  66                 	db	102	;'f'
  2415  00FEF1  20                 	db	32
  2416  00FEF2  20                 	db	32
  2417  00FEF3  20                 	db	32
  2418  00FEF4  20                 	db	32
  2419  00FEF5  00                 	db	0
  2420  00FEF6                     STR_17:
  2421                           
  2422                           ; BSR set to: 57
  2423  00FEF6  42                 	db	66	;'B'
  2424  00FEF7  56                 	db	86	;'V'
  2425  00FEF8  20                 	db	32
  2426  00FEF9  25                 	db	37
  2427  00FEFA  32                 	db	50	;'2'
  2428  00FEFB  2E                 	db	46
  2429  00FEFC  32                 	db	50	;'2'
  2430  00FEFD  66                 	db	102	;'f'
  2431  00FEFE  20                 	db	32
  2432  00FEFF  42                 	db	66	;'B'
  2433  00FF00  41                 	db	65	;'A'
  2434  00FF01  20                 	db	32
  2435  00FF02  25                 	db	37
  2436  00FF03  32                 	db	50	;'2'
  2437  00FF04  2E                 	db	46
  2438  00FF05  32                 	db	50	;'2'
  2439  00FF06  66                 	db	102	;'f'
  2440  00FF07  20                 	db	32
  2441  00FF08  00                 	db	0
  2442  00FF09                     STR_18:
  2443                           
  2444                           ; BSR set to: 57
  2445  00FF09  43                 	db	67	;'C'
  2446  00FF0A  56                 	db	86	;'V'
  2447  00FF0B  20                 	db	32
  2448  00FF0C  25                 	db	37
  2449  00FF0D  32                 	db	50	;'2'
  2450  00FF0E  2E                 	db	46
  2451  00FF0F  32                 	db	50	;'2'
  2452  00FF10  66                 	db	102	;'f'
  2453  00FF11  20                 	db	32
  2454  00FF12  4C                 	db	76	;'L'
  2455  00FF13  41                 	db	65	;'A'
  2456  00FF14  20                 	db	32
  2457  00FF15  25                 	db	37
  2458  00FF16  32                 	db	50	;'2'
  2459  00FF17  2E                 	db	46
  2460  00FF18  32                 	db	50	;'2'
  2461  00FF19  66                 	db	102	;'f'
  2462  00FF1A  20                 	db	32
  2463  00FF1B  00                 	db	0
  2464  00FF1C                     STR_16:
  2465                           
  2466                           ; BSR set to: 57
  2467  00FF1C  50                 	db	80	;'P'
  2468  00FF1D  56                 	db	86	;'V'
  2469  00FF1E  20                 	db	32
  2470  00FF1F  25                 	db	37
  2471  00FF20  32                 	db	50	;'2'
  2472  00FF21  2E                 	db	46
  2473  00FF22  32                 	db	50	;'2'
  2474  00FF23  66                 	db	102	;'f'
  2475  00FF24  20                 	db	32
  2476  00FF25  50                 	db	80	;'P'
  2477  00FF26  41                 	db	65	;'A'
  2478  00FF27  20                 	db	32
  2479  00FF28  25                 	db	37
  2480  00FF29  32                 	db	50	;'2'
  2481  00FF2A  2E                 	db	46
  2482  00FF2B  32                 	db	50	;'2'
  2483  00FF2C  66                 	db	102	;'f'
  2484  00FF2D  20                 	db	32
  2485  00FF2E  00                 	db	0
  2486  00FF2F                     STR_8:
  2487                           
  2488                           ; BSR set to: 57
  2489  00FF2F  20                 	db	32
  2490  00FF30  56                 	db	86	;'V'
  2491  00FF31  54                 	db	84	;'T'
  2492  00FF32  45                 	db	69	;'E'
  2493  00FF33  52                 	db	82	;'R'
  2494  00FF34  4D                 	db	77	;'M'
  2495  00FF35  20                 	db	32
  2496  00FF36  23                 	db	35
  2497  00FF37  32                 	db	50	;'2'
  2498  00FF38  20                 	db	32
  2499  00FF39  20                 	db	32
  2500  00FF3A  20                 	db	32
  2501  00FF3B  20                 	db	32
  2502  00FF3C  20                 	db	32
  2503  00FF3D  20                 	db	32
  2504  00FF3E  20                 	db	32
  2505  00FF3F  00                 	db	0
  2506  00FF40                     STR_4:
  2507                           
  2508                           ; BSR set to: 57
  2509  00FF40  20                 	db	32
  2510  00FF41  4E                 	db	78	;'N'
  2511  00FF42  53                 	db	83	;'S'
  2512  00FF43  41                 	db	65	;'A'
  2513  00FF44  53                 	db	83	;'S'
  2514  00FF45  50                 	db	80	;'P'
  2515  00FF46  4F                 	db	79	;'O'
  2516  00FF47  4F                 	db	79	;'O'
  2517  00FF48  4B                 	db	75	;'K'
  2518  00FF49  20                 	db	32
  2519  00FF4A  20                 	db	32
  2520  00FF4B  20                 	db	32
  2521  00FF4C  20                 	db	32
  2522  00FF4D  20                 	db	32
  2523  00FF4E  20                 	db	32
  2524  00FF4F  20                 	db	32
  2525  00FF50  00                 	db	0
  2526  00FF51                     STR_1:
  2527                           
  2528                           ; BSR set to: 57
  2529  00FF51  20                 	db	32
  2530  00FF52  4D                 	db	77	;'M'
  2531  00FF53  42                 	db	66	;'B'
  2532  00FF54  4D                 	db	77	;'M'
  2533  00FF55  43                 	db	67	;'C'
  2534  00FF56  20                 	db	32
  2535  00FF57  53                 	db	83	;'S'
  2536  00FF58  4F                 	db	79	;'O'
  2537  00FF59  4C                 	db	76	;'L'
  2538  00FF5A  41                 	db	65	;'A'
  2539  00FF5B  52                 	db	82	;'R'
  2540  00FF5C  4D                 	db	77	;'M'
  2541  00FF5D  4F                 	db	79	;'O'
  2542  00FF5E  4E                 	db	78	;'N'
  2543  00FF5F  20                 	db	32
  2544  00FF60  20                 	db	32
  2545  00FF61  00                 	db	0
  2546  00FF62                     STR_5:
  2547                           
  2548                           ; BSR set to: 57
  2549  00FF62  20                 	db	32
  2550  00FF63  53                 	db	83	;'S'
  2551  00FF64  45                 	db	69	;'E'
  2552  00FF65  51                 	db	81	;'Q'
  2553  00FF66  55                 	db	85	;'U'
  2554  00FF67  45                 	db	69	;'E'
  2555  00FF68  4E                 	db	78	;'N'
  2556  00FF69  43                 	db	67	;'C'
  2557  00FF6A  45                 	db	69	;'E'
  2558  00FF6B  20                 	db	32
  2559  00FF6C  54                 	db	84	;'T'
  2560  00FF6D  45                 	db	69	;'E'
  2561  00FF6E  53                 	db	83	;'S'
  2562  00FF6F  54                 	db	84	;'T'
  2563  00FF70  20                 	db	32
  2564  00FF71  20                 	db	32
  2565  00FF72  00                 	db	0
  2566  00FF73                     STR_12:
  2567                           
  2568                           ; BSR set to: 57
  2569  00FF73  25                 	db	37
  2570  00FF74  64                 	db	100	;'d'
  2571  00FF75  20                 	db	32
  2572  00FF76  25                 	db	37
  2573  00FF77  32                 	db	50	;'2'
  2574  00FF78  2E                 	db	46
  2575  00FF79  34                 	db	52	;'4'
  2576  00FF7A  66                 	db	102	;'f'
  2577  00FF7B  2C                 	db	44
  2578  00FF7C  20                 	db	32
  2579  00FF7D  25                 	db	37
  2580  00FF7E  64                 	db	100	;'d'
  2581  00FF7F  20                 	db	32
  2582  00FF80  20                 	db	32
  2583  00FF81  20                 	db	32
  2584  00FF82  23                 	db	35
  2585  00FF83  00                 	db	0
  2586  00FF84                     STR_10:
  2587                           
  2588                           ; BSR set to: 57
  2589  00FF84  25                 	db	37
  2590  00FF85  64                 	db	100	;'d'
  2591  00FF86  20                 	db	32
  2592  00FF87  25                 	db	37
  2593  00FF88  32                 	db	50	;'2'
  2594  00FF89  2E                 	db	46
  2595  00FF8A  34                 	db	52	;'4'
  2596  00FF8B  66                 	db	102	;'f'
  2597  00FF8C  20                 	db	32
  2598  00FF8D  20                 	db	32
  2599  00FF8E  20                 	db	32
  2600  00FF8F  25                 	db	37
  2601  00FF90  64                 	db	100	;'d'
  2602  00FF91  20                 	db	32
  2603  00FF92  20                 	db	32
  2604  00FF93  00                 	db	0
  2605  00FF94                     STR_34:
  2606                           
  2607                           ; BSR set to: 57
  2608  00FF94  76                 	db	118	;'v'
  2609  00FF95  74                 	db	116	;'t'
  2610  00FF96  65                 	db	101	;'e'
  2611  00FF97  72                 	db	114	;'r'
  2612  00FF98  6D                 	db	109	;'m'
  2613  00FF99  20                 	db	32
  2614  00FF9A  25                 	db	37
  2615  00FF9B  78                 	db	120	;'x'
  2616  00FF9C  3A                 	db	58	;':'
  2617  00FF9D  25                 	db	37
  2618  00FF9E  78                 	db	120	;'x'
  2619  00FF9F  20                 	db	32
  2620  00FFA0  20                 	db	32
  2621  00FFA1  20                 	db	32
  2622  00FFA2  00                 	db	0
  2623  00FFA3                     STR_2:
  2624                           
  2625                           ; BSR set to: 57
  2626  00FFA3  20                 	db	32
  2627  00FFA4  56                 	db	86	;'V'
  2628  00FFA5  65                 	db	101	;'e'
  2629  00FFA6  72                 	db	114	;'r'
  2630  00FFA7  73                 	db	115	;'s'
  2631  00FFA8  69                 	db	105	;'i'
  2632  00FFA9  6F                 	db	111	;'o'
  2633  00FFAA  6E                 	db	110	;'n'
  2634  00FFAB  20                 	db	32
  2635  00FFAC  25                 	db	37
  2636  00FFAD  73                 	db	115	;'s'
  2637  00FFAE  20                 	db	32
  2638  00FFAF  20                 	db	32
  2639  00FFB0  20                 	db	32
  2640  00FFB1  00                 	db	0
  2641  00FFB2                     STR_28:
  2642                           
  2643                           ; BSR set to: 57
  2644  00FFB2  44                 	db	68	;'D'
  2645  00FFB3  65                 	db	101	;'e'
  2646  00FFB4  63                 	db	99	;'c'
  2647  00FFB5  20                 	db	32
  2648  00FFB6  31                 	db	49	;'1'
  2649  00FFB7  31                 	db	49	;'1'
  2650  00FFB8  20                 	db	32
  2651  00FFB9  32                 	db	50	;'2'
  2652  00FFBA  30                 	db	48	;'0'
  2653  00FFBB  31                 	db	49	;'1'
  2654  00FFBC  39                 	db	57	;'9'
  2655  00FFBD  00                 	db	0
  2656  00FFBE                     STR_32:
  2657                           
  2658                           ; BSR set to: 57
  2659  00FFBE  25                 	db	37
  2660  00FFBF  73                 	db	115	;'s'
  2661  00FFC0  20                 	db	32
  2662  00FFC1  20                 	db	32
  2663  00FFC2  20                 	db	32
  2664  00FFC3  20                 	db	32
  2665  00FFC4  20                 	db	32
  2666  00FFC5  20                 	db	32
  2667  00FFC6  20                 	db	32
  2668  00FFC7  00                 	db	0
  2669  00FFC8                     STR_29:
  2670                           
  2671                           ; BSR set to: 57
  2672  00FFC8  32                 	db	50	;'2'
  2673  00FFC9  30                 	db	48	;'0'
  2674  00FFCA  3A                 	db	58	;':'
  2675  00FFCB  34                 	db	52	;'4'
  2676  00FFCC  35                 	db	53	;'5'
  2677  00FFCD  3A                 	db	58	;':'
  2678  00FFCE  32                 	db	50	;'2'
  2679  00FFCF  38                 	db	56	;'8'
  2680  00FFD0  00                 	db	0
  2681  00FFD1                     STR_3:
  2682                           
  2683                           ; BSR set to: 57
  2684  00FFD1  31                 	db	49	;'1'
  2685  00FFD2  2E                 	db	46
  2686  00FFD3  30                 	db	48	;'0'
  2687  00FFD4  30                 	db	48	;'0'
  2688  00FFD5  31                 	db	49	;'1'
  2689  00FFD6  00                 	db	0
  2690  00FFD7                     STR_48:
  2691                           
  2692                           ; BSR set to: 57
  2693  00FFD7  49                 	db	73	;'I'
  2694  00FFD8  4E                 	db	78	;'N'
  2695  00FFD9  46                 	db	70	;'F'
  2696  00FFDA  00                 	db	0
  2697  00FFDB                     STR_52:
  2698                           
  2699                           ; BSR set to: 57
  2700  00FFDB  4E                 	db	78	;'N'
  2701  00FFDC  41                 	db	65	;'A'
  2702  00FFDD  4E                 	db	78	;'N'
  2703  00FFDE  00                 	db	0
  2704  00FFDF                     STR_49:
  2705                           
  2706                           ; BSR set to: 57
  2707  00FFDF  69                 	db	105	;'i'
  2708  00FFE0  6E                 	db	110	;'n'
  2709  00FFE1  66                 	db	102	;'f'
  2710  00FFE2  00                 	db	0
  2711  00FFE3                     STR_53:
  2712                           
  2713                           ; BSR set to: 57
  2714  00FFE3  6E                 	db	110	;'n'
  2715  00FFE4  61                 	db	97	;'a'
  2716  00FFE5  6E                 	db	110	;'n'
  2717  00FFE6  00                 	db	0
  2718  00FFE7                     STR_79:
  2719                           
  2720                           ; BSR set to: 57
  2721  00FFE7  6C                 	db	108	;'l'
  2722  00FFE8  58                 	db	88	;'X'
  2723  00FFE9  00                 	db	0
  2724  00FFEA                     STR_56:
  2725                           
  2726                           ; BSR set to: 57
  2727  00FFEA  6C                 	db	108	;'l'
  2728  00FFEB  64                 	db	100	;'d'
  2729  00FFEC  00                 	db	0
  2730  00FFED                     STR_65:
  2731                           
  2732                           ; BSR set to: 57
  2733  00FFED  6C                 	db	108	;'l'
  2734  00FFEE  66                 	db	102	;'f'
  2735  00FFEF  00                 	db	0
  2736  00FFF0                     STR_60:
  2737                           
  2738                           ; BSR set to: 57
  2739  00FFF0  6C                 	db	108	;'l'
  2740  00FFF1  69                 	db	105	;'i'
  2741  00FFF2  00                 	db	0
  2742  00FFF3                     STR_70:
  2743                           
  2744                           ; BSR set to: 57
  2745  00FFF3  6C                 	db	108	;'l'
  2746  00FFF4  75                 	db	117	;'u'
  2747  00FFF5  00                 	db	0
  2748  00FFF6                     STR_75:
  2749                           
  2750                           ; BSR set to: 57
  2751  00FFF6  6C                 	db	108	;'l'
  2752  00FFF7  78                 	db	120	;'x'
  2753  00FFF8  00                 	db	0
  2754  00FFF9                     STR_26:
  2755                           
  2756                           ; BSR set to: 57
  2757  00FFF9  25                 	db	37
  2758  00FFFA  63                 	db	99	;'c'
  2759  00FFFB  00                 	db	0
  2760  00FFFC                     STR_25:
  2761                           
  2762                           ; BSR set to: 57
  2763  00FFFC  25                 	db	37
  2764  00FFFD  73                 	db	115	;'s'
  2765  00FFFE  00                 	db	0
  2766  0000                     
  2767                           ; #config settings
  2768  00FFFF  00                 	db	0	; dummy byte at the end
  2769  0000                     
  2770                           	psect	cinit
  2771  0188FE                     __pcinit:
  2772                           	opt callstack 0
  2773  0188FE                     start_initialization:
  2774                           	opt callstack 0
  2775  0188FE                     __initialization:
  2776                           	opt callstack 0
  2777                           
  2778                           ; Initialize objects allocated to BIGRAM (512 bytes)
  2779                           ; load TBLPTR registers with __pidataBIGRAM
  2780  0188FE  0EB8               	movlw	low __pidataBIGRAM
  2781  018900  6EF6               	movwf	tblptrl,c
  2782  018902  0E71               	movlw	high __pidataBIGRAM
  2783  018904  6EF7               	movwf	tblptrh,c
  2784  018906  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2785  018908  6EF8               	movwf	tblptru,c
  2786  01890A  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  2787  01890E  EE20 F200          	lfsr	2,512
  2788  018912                     copy_data0:
  2789  018912  0009               	tblrd		*+
  2790  018914  006F FFD7 FFEE     	movff	tablat,postinc0
  2791  01891A  50DD               	movf	postdec2,w,c
  2792  01891C  50D9               	movf	fsr2l,w,c
  2793  01891E  E1F9               	bnz	copy_data0
  2794  018920  50DA               	movf	fsr2h,w,c
  2795  018922  E1F7               	bnz	copy_data0
  2796                           
  2797                           ; Initialize objects allocated to BANK2 (188 bytes)
  2798                           ; load TBLPTR registers with __pidataBANK2
  2799  018924  0E7A               	movlw	low __pidataBANK2
  2800  018926  6EF6               	movwf	tblptrl,c
  2801  018928  0E8F               	movlw	high __pidataBANK2
  2802  01892A  6EF7               	movwf	tblptrh,c
  2803  01892C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2804  01892E  6EF8               	movwf	tblptru,c
  2805  018930  EE00  F200         	lfsr	0,__pdataBANK2
  2806  018934  EE20 F0BC          	lfsr	2,188
  2807  018938                     copy_data1:
  2808  018938  0009               	tblrd		*+
  2809  01893A  006F FFD7 FFEE     	movff	tablat,postinc0
  2810  018940  50DD               	movf	postdec2,w,c
  2811  018942  50D9               	movf	fsr2l,w,c
  2812  018944  E1F9               	bnz	copy_data1
  2813                           
  2814                           ; Initialize objects allocated to BANK1 (223 bytes)
  2815                           ; load TBLPTR registers with __pidataBANK1
  2816  018946  0E02               	movlw	low __pidataBANK1
  2817  018948  6EF6               	movwf	tblptrl,c
  2818  01894A  0E8D               	movlw	high __pidataBANK1
  2819  01894C  6EF7               	movwf	tblptrh,c
  2820  01894E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2821  018950  6EF8               	movwf	tblptru,c
  2822  018952  EE00  F100         	lfsr	0,__pdataBANK1
  2823  018956  EE20 F0DF          	lfsr	2,223
  2824  01895A                     copy_data2:
  2825  01895A  0009               	tblrd		*+
  2826  01895C  006F FFD7 FFEE     	movff	tablat,postinc0
  2827  018962  50DD               	movf	postdec2,w,c
  2828  018964  50D9               	movf	fsr2l,w,c
  2829  018966  E1F9               	bnz	copy_data2
  2830                           
  2831                           ; Initialize objects allocated to BANK0 (54 bytes)
  2832                           ; load TBLPTR registers with __pidataBANK0
  2833  018968  0E92               	movlw	low __pidataBANK0
  2834  01896A  6EF6               	movwf	tblptrl,c
  2835  01896C  0EA2               	movlw	high __pidataBANK0
  2836  01896E  6EF7               	movwf	tblptrh,c
  2837  018970  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2838  018972  6EF8               	movwf	tblptru,c
  2839  018974  EE00  F0C6         	lfsr	0,__pdataBANK0
  2840  018978  EE20 F036          	lfsr	2,54
  2841  01897C                     copy_data3:
  2842  01897C  0009               	tblrd		*+
  2843  01897E  006F FFD7 FFEE     	movff	tablat,postinc0
  2844  018984  50DD               	movf	postdec2,w,c
  2845  018986  50D9               	movf	fsr2l,w,c
  2846  018988  E1F9               	bnz	copy_data3
  2847                           
  2848                           ; Clear objects allocated to BIGRAM (290 bytes)
  2849  01898A  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  2850  01898E  EE20 F122          	lfsr	2,290
  2851  018992                     clear_0:
  2852  018992  6AEE               	clrf	postinc0,c
  2853  018994  50DD               	movf	postdec2,w,c
  2854  018996  50D9               	movf	fsr2l,w,c
  2855  018998  E1FC               	bnz	clear_0
  2856  01899A  50DA               	movf	fsr2h,w,c
  2857  01899C  E1FA               	bnz	clear_0
  2858                           
  2859                           ; Clear objects allocated to BANK5 (255 bytes)
  2860  01899E  EE01  F100         	lfsr	0,__pbssBANK5
  2861  0189A2  EE20 F0FF          	lfsr	2,255
  2862  0189A6                     clear_1:
  2863  0189A6  6AEE               	clrf	postinc0,c
  2864  0189A8  50DD               	movf	postdec2,w,c
  2865  0189AA  50D9               	movf	fsr2l,w,c
  2866  0189AC  E1FC               	bnz	clear_1
  2867  0189AE  50DA               	movf	fsr2h,w,c
  2868  0189B0  E1FA               	bnz	clear_1
  2869                           
  2870                           ; Clear objects allocated to BANK4 (134 bytes)
  2871  0189B2  EE01  F000         	lfsr	0,__pbssBANK4
  2872  0189B6  0E86               	movlw	134
  2873  0189B8                     clear_2:
  2874  0189B8  6AEE               	clrf	postinc0,c
  2875  0189BA  06E8               	decf	wreg,f,c
  2876  0189BC  E1FD               	bnz	clear_2
  2877                           
  2878                           ; Clear objects allocated to BANK3 (228 bytes)
  2879  0189BE  EE00  F300         	lfsr	0,__pbssBANK3
  2880  0189C2  0EE4               	movlw	228
  2881  0189C4                     clear_3:
  2882  0189C4  6AEE               	clrf	postinc0,c
  2883  0189C6  06E8               	decf	wreg,f,c
  2884  0189C8  E1FD               	bnz	clear_3
  2885                           
  2886                           ; Clear objects allocated to BANK2 (41 bytes)
  2887  0189CA  EE00  F2BC         	lfsr	0,__pbssBANK2
  2888  0189CE  0E29               	movlw	41
  2889  0189D0                     clear_4:
  2890  0189D0  6AEE               	clrf	postinc0,c
  2891  0189D2  06E8               	decf	wreg,f,c
  2892  0189D4  E1FD               	bnz	clear_4
  2893                           
  2894                           ; Clear objects allocated to BANK1 (24 bytes)
  2895  0189D6  EE00  F1DF         	lfsr	0,__pbssBANK1
  2896  0189DA  0E18               	movlw	24
  2897  0189DC                     clear_5:
  2898  0189DC  6AEE               	clrf	postinc0,c
  2899  0189DE  06E8               	decf	wreg,f,c
  2900  0189E0  E1FD               	bnz	clear_5
  2901                           
  2902                           ; Clear objects allocated to BANK0 (102 bytes)
  2903  0189E2  EE00  F060         	lfsr	0,__pbssBANK0
  2904  0189E6  0E66               	movlw	102
  2905  0189E8                     clear_6:
  2906  0189E8  6AEE               	clrf	postinc0,c
  2907  0189EA  06E8               	decf	wreg,f,c
  2908  0189EC  E1FD               	bnz	clear_6
  2909                           
  2910                           ; Clear objects allocated to COMRAM (23 bytes)
  2911  0189EE  EE00  F021         	lfsr	0,__pbssCOMRAM
  2912  0189F2  0E17               	movlw	23
  2913  0189F4                     clear_7:
  2914  0189F4  6AEE               	clrf	postinc0,c
  2915  0189F6  06E8               	decf	wreg,f,c
  2916  0189F8  E1FD               	bnz	clear_7
  2917                           
  2918                           ;
  2919                           ; Setup IVTBASE
  2920                           ;
  2921  0189FA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2922  0189FC  6ED5               	movwf	213,c
  2923  0189FE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2924  018A00  6ED6               	movwf	214,c
  2925  018A02  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2926  018A04  6ED7               	movwf	215,c
  2927  018A06                     end_of_initialization:
  2928                           	opt callstack 0
  2929  018A06                     __end_of__initialization:
  2930                           	opt callstack 0
  2931  018A06  0100               	movlb	0
  2932  018A08  EFF8  F090         	goto	_main	;jump to C main() function
  2933                           
  2934                           	psect	bssCOMRAM
  2935  000021                     __pbssCOMRAM:
  2936                           	opt callstack 0
  2937  000021                     _width:
  2938                           	opt callstack 0
  2939  000021                     	ds	2
  2940  000023                     _prec:
  2941                           	opt callstack 0
  2942  000023                     	ds	2
  2943  000025                     _flags:
  2944                           	opt callstack 0
  2945  000025                     	ds	2
  2946  000027                     _timer3ReloadVal:
  2947                           	opt callstack 0
  2948  000027                     	ds	2
  2949  000029                     TMR5_ISR@CountCallBack:
  2950                           	opt callstack 0
  2951  000029                     	ds	2
  2952  00002B                     _timer5ReloadVal:
  2953                           	opt callstack 0
  2954  00002B                     	ds	2
  2955  00002D                     Volts_to_SOC@slot:
  2956                           	opt callstack 0
  2957  00002D                     	ds	1
  2958  00002E                     _mode_sw:
  2959                           	opt callstack 0
  2960  00002E                     	ds	1
  2961  00002F                     _uart2RxCount:
  2962                           	opt callstack 0
  2963  00002F                     	ds	1
  2964  000030                     _uart2RxTail:
  2965                           	opt callstack 0
  2966  000030                     	ds	1
  2967  000031                     _uart2RxHead:
  2968                           	opt callstack 0
  2969  000031                     	ds	1
  2970  000032                     _uart2TxBufferRemaining:
  2971                           	opt callstack 0
  2972  000032                     	ds	1
  2973  000033                     _uart2TxTail:
  2974                           	opt callstack 0
  2975  000033                     	ds	1
  2976  000034                     _uart2TxHead:
  2977                           	opt callstack 0
  2978  000034                     	ds	1
  2979  000035                     _uart1RxCount:
  2980                           	opt callstack 0
  2981  000035                     	ds	1
  2982  000036                     _uart1RxTail:
  2983                           	opt callstack 0
  2984  000036                     	ds	1
  2985  000037                     _uart1RxHead:
  2986                           	opt callstack 0
  2987  000037                     	ds	1
  2988                           
  2989                           	psect	bssBANK0
  2990  000060                     __pbssBANK0:
  2991                           	opt callstack 0
  2992  000060                     _spi_link:
  2993                           	opt callstack 0
  2994  000060                     	ds	12
  2995  00006C                     _uart1RxBuffer:
  2996                           	opt callstack 0
  2997  00006C                     	ds	8
  2998  000074                     floorf@F524:
  2999                           	opt callstack 0
  3000  000074                     	ds	4
  3001  000078                     fabsf@F463:
  3002                           	opt callstack 0
  3003  000078                     	ds	4
  3004  00007C                     ___fpclassifyf@F463:
  3005                           	opt callstack 0
  3006  00007C                     	ds	4
  3007  000080                     calc_ror_data@bcror:
  3008                           	opt callstack 0
  3009  000080                     	ds	4
  3010  000084                     calc_ror_data@bvror:
  3011                           	opt callstack 0
  3012  000084                     	ds	4
  3013  000088                     calc_model_data@bcror:
  3014                           	opt callstack 0
  3015  000088                     	ds	4
  3016  00008C                     calc_model_data@bvror:
  3017                           	opt callstack 0
  3018  00008C                     	ds	4
  3019  000090                     _utctime:
  3020                           	opt callstack 0
  3021  000090                     	ds	4
  3022  000094                     wdtdelay@dcount:
  3023                           	opt callstack 0
  3024  000094                     	ds	4
  3025  000098                     _P:
  3026                           	opt callstack 0
  3027  000098                     	ds	4
  3028  00009C                     _TMR3_InterruptHandler:
  3029                           	opt callstack 0
  3030  00009C                     	ds	3
  3031  00009F                     _TMR5_InterruptHandler:
  3032                           	opt callstack 0
  3033  00009F                     	ds	3
  3034  0000A2                     _TMR6_InterruptHandler:
  3035                           	opt callstack 0
  3036  0000A2                     	ds	3
  3037  0000A5                     _ADCC_ADTI_InterruptHandler:
  3038                           	opt callstack 0
  3039  0000A5                     	ds	3
  3040  0000A8                     _ADCC_ADI_InterruptHandler:
  3041                           	opt callstack 0
  3042  0000A8                     	ds	3
  3043  0000AB                     _UART1_RxInterruptHandler:
  3044                           	opt callstack 0
  3045  0000AB                     	ds	3
  3046  0000AE                     _UART2_TxInterruptHandler:
  3047                           	opt callstack 0
  3048  0000AE                     	ds	3
  3049  0000B1                     _UART2_RxInterruptHandler:
  3050                           	opt callstack 0
  3051  0000B1                     	ds	3
  3052  0000B4                     _INT1_InterruptHandler:
  3053                           	opt callstack 0
  3054  0000B4                     	ds	3
  3055  0000B7                     _INT0_InterruptHandler:
  3056                           	opt callstack 0
  3057  0000B7                     	ds	3
  3058  0000BA                     _nout:
  3059                           	opt callstack 0
  3060  0000BA                     	ds	2
  3061  0000BC                     TMR3_ISR@CountCallBack:
  3062                           	opt callstack 0
  3063  0000BC                     	ds	2
  3064  0000BE                     _seed:
  3065                           	opt callstack 0
  3066  0000BE                     	ds	8
  3067                           
  3068                           	psect	dataBANK0
  3069  0000C6                     __pdataBANK0:
  3070                           	opt callstack 0
  3071  0000C6                     _R:
  3072                           	opt callstack 0
  3073  0000C6                     	ds	40
  3074  0000EE                     stoa@F1166:
  3075                           	opt callstack 0
  3076  0000EE                     	ds	7
  3077  0000F5                     _H:
  3078                           	opt callstack 0
  3079  0000F5                     	ds	7
  3080                           
  3081                           	psect	bssBANK1
  3082  0001DF                     __pbssBANK1:
  3083                           	opt callstack 0
  3084  0001DF                     _tickCount:
  3085                           	opt callstack 0
  3086  0001DF                     	ds	24
  3087                           
  3088                           	psect	dataBANK1
  3089  000100                     __pdataBANK1:
  3090                           	opt callstack 0
  3091  000100                     _C:
  3092                           	opt callstack 0
  3093  000100                     	ds	223
  3094                           
  3095                           	psect	bssBANK2
  3096  0002BC                     __pbssBANK2:
  3097                           	opt callstack 0
  3098  0002BC                     _S:
  3099                           	opt callstack 0
  3100  0002BC                     	ds	41
  3101                           
  3102                           	psect	dataBANK2
  3103  000200                     __pdataBANK2:
  3104                           	opt callstack 0
  3105  000200                     _V:
  3106                           	opt callstack 0
  3107  000200                     	ds	188
  3108                           
  3109                           	psect	bssBANK3
  3110  000300                     __pbssBANK3:
  3111                           	opt callstack 0
  3112  000300                     lp_filter@smooth:
  3113                           	opt callstack 0
  3114  000300                     	ds	84
  3115  000354                     _uart2TxBuffer:
  3116                           	opt callstack 0
  3117  000354                     	ds	64
  3118  000394                     _dbuf:
  3119                           	opt callstack 0
  3120  000394                     	ds	80
  3121                           
  3122                           	psect	bssBANK4
  3123  000400                     __pbssBANK4:
  3124                           	opt callstack 0
  3125  000400                     _ring_buf2:
  3126                           	opt callstack 0
  3127  000400                     	ds	67
  3128  000443                     _ring_buf1:
  3129                           	opt callstack 0
  3130  000443                     	ds	67
  3131                           
  3132                           	psect	bssBANK5
  3133  000500                     __pbssBANK5:
  3134                           	opt callstack 0
  3135  000500                     _uart2RxBuffer:
  3136                           	opt callstack 0
  3137  000500                     	ds	255
  3138                           
  3139                           	psect	bssBIGRAM
  3140  0007FF                     __pbssBIGRAM:
  3141                           	opt callstack 0
  3142  0007FF                     _D:
  3143                           	opt callstack 0
  3144  0007FF                     	ds	290
  3145                           
  3146                           	psect	dataBIGRAM
  3147  0005FF                     __pdataBIGRAM:
  3148                           	opt callstack 0
  3149  0005FF                     _port_data:
  3150                           	opt callstack 0
  3151  0005FF                     	ds	512
  3152                           
  3153                           	psect	cstackBANK2
  3154  0002E5                     __pcstackBANK2:
  3155                           	opt callstack 0
  3156  0002E5                     ??_TMR3_ISR:
  3157                           
  3158                           ; 1 bytes @ 0x0
  3159  0002E5                     	ds	25
  3160                           
  3161                           	psect	cstackCOMRAM
  3162  000038                     __pcstackCOMRAM:
  3163                           	opt callstack 0
  3164  000038                     ??_ADCC_ThresholdISR:
  3165  000038                     
  3166                           ; 1 bytes @ 0x0
  3167  000038                     	ds	5
  3168  00003D                     ??_TMR6_ISR:
  3169                           
  3170                           ; 1 bytes @ 0x5
  3171  00003D                     	ds	1
  3172  00003E                     ??_INT1_ISR:
  3173  00003E                     
  3174                           ; 1 bytes @ 0x6
  3175  00003E                     	ds	4
  3176  000042                     ??_TMR5_ISR:
  3177                           
  3178                           ; 1 bytes @ 0xA
  3179  000042                     	ds	4
  3180                           
  3181 ;;
  3182 ;;Main: autosize = 6, tempsize = 0, incstack = 0, save=0
  3183 ;;
  3184 ;; *************** function _main *****************
  3185 ;; Defined at:
  3186 ;;		line 174 in file "main.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  k               1  [STACK] unsigned char 
  3191 ;;  j               1  [STACK] unsigned char 
  3192 ;;  i               1  [STACK] unsigned char 
  3193 ;;  inp_index       1  [STACK] unsigned char 
  3194 ;;  mode            1  [STACK] enum E17013
  3195 ;;  i_ror           1  [STACK] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1  [STACK] void 
  3198 ;; Registers used:
  3199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels required when called:   28
  3211 ;; This function calls:
  3212 ;;		_SYSTEM_Initialize
  3213 ;;		_StartTimer
  3214 ;;		_TimerDone
  3215 ;;		_WaitMs
  3216 ;;		___flge
  3217 ;;		_calc_model_data
  3218 ;;		_calc_ror_data
  3219 ;;		_check_adc_scan
  3220 ;;		_check_enter_button
  3221 ;;		_check_help
  3222 ;;		_clear_adc_scan
  3223 ;;		_clear_hid_pflags
  3224 ;;		_convert_adc_data
  3225 ;;		_eaDogM_WriteCommand
  3226 ;;		_get_raw_result
  3227 ;;		_get_switch
  3228 ;;		_get_vterm_ptr
  3229 ;;		_hid_display
  3230 ;;		_init_bsoc
  3231 ;;		_init_display
  3232 ;;		_init_port_dma
  3233 ;;		_lp_filter
  3234 ;;		_mode_lamp_dim
  3235 ;;		_set_display_info
  3236 ;;		_set_load_relay_one
  3237 ;;		_set_load_relay_two
  3238 ;;		_set_vterm
  3239 ;;		_sprintf
  3240 ;;		_srand
  3241 ;;		_start_adc_scan
  3242 ;;		_start_switch_handler
  3243 ;;		_static_soc
  3244 ;;		_update_lcd
  3245 ;; This function is called by:
  3246 ;;		Startup code after reset
  3247 ;; This function uses a reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text0
  3251  0121F0                     __ptext0:
  3252                           	opt callstack 0
  3253  0121F0                     _main:
  3254                           	opt callstack 0
  3255                           
  3256                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3257  0121F0  0E06               	movlw	6
  3258  0121F2  26E1               	addwf	fsr1l,f,c
  3259  0121F4  0E00               	movlw	0
  3260  0121F6  22E2               	addwfc	fsr1h,f,c
  3261                           
  3262                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3263                           ;stkvar	_inp_index @ sp[(-6)+3]
  3264                           
  3265                           ;incstack = 0
  3266  0121F8  0EFD               	movlw	-3
  3267  0121FA  6AE3               	clrf	plusw1,c
  3268                           
  3269                           ;stkvar	_i @ sp[(-6)+2]
  3270  0121FC  0EFC               	movlw	-4
  3271  0121FE  6AE3               	clrf	plusw1,c
  3272                           
  3273                           ;stkvar	_j @ sp[(-6)+1]
  3274  012200  0EFB               	movlw	-5
  3275  012202  6AE3               	clrf	plusw1,c
  3276  012204  2AE3               	incf	plusw1,f,c
  3277                           
  3278                           ;stkvar	_k @ sp[(-6)+0]
  3279  012206  0EFA               	movlw	-6
  3280  012208  6AE3               	clrf	plusw1,c
  3281  01220A  82E3               	bsf	plusw1,1,c
  3282                           
  3283                           ;main.c: 180:  SYSTEM_Initialize();
  3284  01220C  EC53  F0CF         	call	_SYSTEM_Initialize	;wreg free
  3285                           
  3286                           ; BSR set to: 60
  3287                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3288  012210  8ED2               	bsf	210,7,c	;volatile
  3289                           
  3290                           ; BSR set to: 60
  3291                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3292  012212  8CD2               	bsf	210,6,c	;volatile
  3293                           
  3294                           ; BSR set to: 60
  3295                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3296  012214  0102               	movlb	2	; () banked
  3297  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3298                           
  3299                           ; BSR set to: 2
  3300                           ;main.c: 193:  WaitMs(300);
  3301  012218  0E2C               	movlw	44
  3302  01221A  6EE6               	movwf	postinc1,c
  3303  01221C  0E01               	movlw	1
  3304  01221E  6EE6               	movwf	postinc1,c
  3305  012220  EC64  F0D1         	call	_WaitMs	;wreg free
  3306                           
  3307                           ;main.c: 194:  if (PORTBbits.RB0) {
  3308  012224  A0CB               	btfss	203,0,c	;volatile
  3309  012226  D004               	goto	l12098
  3310                           
  3311                           ;main.c: 195:   mode = UI_STATE_HOST;
  3312                           ;stkvar	_mode @ sp[(-6)+4]
  3313  012228  0EFE               	movlw	-2
  3314  01222A  6AE3               	clrf	plusw1,c
  3315  01222C  2AE3               	incf	plusw1,f,c
  3316                           
  3317                           ;main.c: 196:  } else {
  3318  01222E  D004               	goto	l12100
  3319  012230                     l12098:
  3320                           
  3321                           ;main.c: 197:   mode = UI_STATE_LOG;
  3322                           ;stkvar	_mode @ sp[(-6)+4]
  3323  012230  0EFE               	movlw	-2
  3324  012232  6AE3               	clrf	plusw1,c
  3325  012234  80E3               	bsf	plusw1,0,c
  3326  012236  82E3               	bsf	plusw1,1,c	;indir
  3327  012238                     l12100:
  3328                           
  3329                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3330                           ;stkvar	_mode @ sp[(-6)+4]
  3331  012238  0EFE               	movlw	-2
  3332  01223A  04E3               	decf	plusw1,w,c
  3333  01223C  A4D8               	btfss	status,2,c
  3334  01223E  D007               	goto	l1314
  3335                           
  3336                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3337  012240  80BD               	bsf	189,0,c	;volatile
  3338                           
  3339                           ;main.c: 202:   V.mode_pwm = 70;
  3340  012242  0E00               	movlw	0
  3341  012244  0102               	movlb	2	; () banked
  3342  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3343  012248  0E46               	movlw	70
  3344  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3345                           
  3346                           ;main.c: 203:  } else {
  3347  01224C  D004               	goto	l12104
  3348  01224E                     l1314:
  3349  01224E  90BD               	bcf	189,0,c	;volatile
  3350                           
  3351                           ;main.c: 205:   V.mode_pwm = 0;
  3352  012250  0102               	movlb	2	; () banked
  3353  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3354  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3355  012256                     l12104:
  3356                           
  3357                           ; BSR set to: 2
  3358                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3359  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3360  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3361  012262  EC2D  F0D5         	call	_mode_lamp_dim	;wreg free
  3362  012266  D14E               	goto	l12184
  3363  012268                     l12106:
  3364                           
  3365                           ; BSR set to: 2
  3366                           ;main.c: 215:    init_port_dma();
  3367  012268  ECE8  F0D1         	call	_init_port_dma	;wreg free
  3368                           
  3369                           ; BSR set to: 59
  3370                           ;main.c: 217:    init_display();
  3371  01226C  EC0C  F0C6         	call	_init_display	;wreg free
  3372                           
  3373                           ; BSR set to: 61
  3374                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3375  012270  0E0C               	movlw	12
  3376  012272  6EE6               	movwf	postinc1,c
  3377  012274  EC91  F0D5         	call	_eaDogM_WriteCommand	;wreg free
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;main.c: 222:    set_load_relay_one(1);
  3381  012278  0E01               	movlw	1
  3382  01227A  6EE6               	movwf	postinc1,c
  3383  01227C  EC81  F0D5         	call	_set_load_relay_one	;wreg free
  3384                           
  3385                           ;main.c: 223:    set_load_relay_two(1);
  3386  012280  0E01               	movlw	1
  3387  012282  6EE6               	movwf	postinc1,c
  3388  012284  EC79  F0D5         	call	_set_load_relay_two	;wreg free
  3389                           
  3390                           ;main.c: 225:    V.ui_state = mode;
  3391                           ;stkvar	_mode @ sp[(-6)+4]
  3392  012288  0EFE               	movlw	-2
  3393  01228A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3394                           
  3395                           ;main.c: 226:    srand(1957);
  3396  012290  0EA5               	movlw	165
  3397  012292  6EE6               	movwf	postinc1,c
  3398  012294  0E07               	movlw	7
  3399  012296  6EE6               	movwf	postinc1,c
  3400  012298  EC9A  F0D1         	call	_srand	;wreg free
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;main.c: 227:    set_vterm(0);
  3404  01229C  0E00               	movlw	0
  3405  01229E  6EE6               	movwf	postinc1,c
  3406  0122A0  ECBA  F0D4         	call	_set_vterm	;wreg free
  3407                           
  3408                           ;main.c: 228:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3409  0122A4  0E51               	movlw	low STR_1
  3410  0122A6  6EE6               	movwf	postinc1,c
  3411  0122A8  0EFF               	movlw	high STR_1
  3412  0122AA  6EE6               	movwf	postinc1,c
  3413  0122AC  0E00               	movlw	0
  3414  0122AE  6EE6               	movwf	postinc1,c
  3415  0122B0  0E00               	movlw	0
  3416  0122B2  6EE6               	movwf	postinc1,c
  3417  0122B4  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3418  0122B8  0060  F007  FFE6   	movff	btemp,postinc1
  3419  0122BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3420  0122C4  0E04               	movlw	4
  3421  0122C6  6EE6               	movwf	postinc1,c
  3422  0122C8  EC06  F0C5         	call	_sprintf	;wreg free
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;main.c: 229:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.001");
  3426  0122CC  0ED1               	movlw	low STR_3
  3427  0122CE  6EE6               	movwf	postinc1,c
  3428  0122D0  0EFF               	movlw	high STR_3
  3429  0122D2  6EE6               	movwf	postinc1,c
  3430  0122D4  0EA3               	movlw	low STR_2
  3431  0122D6  6EE6               	movwf	postinc1,c
  3432  0122D8  0EFF               	movlw	high STR_2
  3433  0122DA  6EE6               	movwf	postinc1,c
  3434  0122DC  0E00               	movlw	0
  3435  0122DE  6EE6               	movwf	postinc1,c
  3436  0122E0  0E01               	movlw	1
  3437  0122E2  6EE6               	movwf	postinc1,c
  3438  0122E4  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3439  0122E8  0060  F007  FFE6   	movff	btemp,postinc1
  3440  0122EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3441  0122F4  0E06               	movlw	6
  3442  0122F6  6EE6               	movwf	postinc1,c
  3443  0122F8  EC06  F0C5         	call	_sprintf	;wreg free
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;main.c: 230:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3447  0122FC  0E40               	movlw	low STR_4
  3448  0122FE  6EE6               	movwf	postinc1,c
  3449  012300  0EFF               	movlw	high STR_4
  3450  012302  6EE6               	movwf	postinc1,c
  3451  012304  0E00               	movlw	0
  3452  012306  6EE6               	movwf	postinc1,c
  3453  012308  0E02               	movlw	2
  3454  01230A  6EE6               	movwf	postinc1,c
  3455  01230C  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3456  012310  0060  F007  FFE6   	movff	btemp,postinc1
  3457  012316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3458  01231C  0E04               	movlw	4
  3459  01231E  6EE6               	movwf	postinc1,c
  3460  012320  EC06  F0C5         	call	_sprintf	;wreg free
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;main.c: 231:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  3464  012324  0E62               	movlw	low STR_5
  3465  012326  6EE6               	movwf	postinc1,c
  3466  012328  0EFF               	movlw	high STR_5
  3467  01232A  6EE6               	movwf	postinc1,c
  3468  01232C  0E02               	movlw	2
  3469  01232E  6EE6               	movwf	postinc1,c
  3470  012330  0E00               	movlw	0
  3471  012332  6EE6               	movwf	postinc1,c
  3472  012334  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3473  012338  0060  F007  FFE6   	movff	btemp,postinc1
  3474  01233E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3475  012344  0E04               	movlw	4
  3476  012346  6EE6               	movwf	postinc1,c
  3477  012348  EC06  F0C5         	call	_sprintf	;wreg free
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;main.c: 232:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "1.001");
  3481  01234C  0ED1               	movlw	low STR_3
  3482  01234E  6EE6               	movwf	postinc1,c
  3483  012350  0EFF               	movlw	high STR_3
  3484  012352  6EE6               	movwf	postinc1,c
  3485  012354  0EA3               	movlw	low STR_2
  3486  012356  6EE6               	movwf	postinc1,c
  3487  012358  0EFF               	movlw	high STR_2
  3488  01235A  6EE6               	movwf	postinc1,c
  3489  01235C  0E02               	movlw	2
  3490  01235E  6EE6               	movwf	postinc1,c
  3491  012360  0E01               	movlw	1
  3492  012362  6EE6               	movwf	postinc1,c
  3493  012364  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3494  012368  0060  F007  FFE6   	movff	btemp,postinc1
  3495  01236E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3496  012374  0E06               	movlw	6
  3497  012376  6EE6               	movwf	postinc1,c
  3498  012378  EC06  F0C5         	call	_sprintf	;wreg free
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;main.c: 233:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  3502  01237C  0E2F               	movlw	low STR_8
  3503  01237E  6EE6               	movwf	postinc1,c
  3504  012380  0EFF               	movlw	high STR_8
  3505  012382  6EE6               	movwf	postinc1,c
  3506  012384  0E02               	movlw	2
  3507  012386  6EE6               	movwf	postinc1,c
  3508  012388  0E02               	movlw	2
  3509  01238A  6EE6               	movwf	postinc1,c
  3510  01238C  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3511  012390  0060  F007  FFE6   	movff	btemp,postinc1
  3512  012396  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3513  01239C  0E04               	movlw	4
  3514  01239E  6EE6               	movwf	postinc1,c
  3515  0123A0  EC06  F0C5         	call	_sprintf	;wreg free
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;main.c: 234:    update_lcd(0);
  3519  0123A4  0E00               	movlw	0
  3520  0123A6  6EE6               	movwf	postinc1,c
  3521  0123A8  ECF7  F0C3         	call	_update_lcd	;wreg free
  3522                           
  3523                           ;main.c: 235:    WaitMs(1000);
  3524  0123AC  0EE8               	movlw	232
  3525  0123AE  6EE6               	movwf	postinc1,c
  3526  0123B0  0E03               	movlw	3
  3527  0123B2  6EE6               	movwf	postinc1,c
  3528  0123B4  EC64  F0D1         	call	_WaitMs	;wreg free
  3529                           
  3530                           ;main.c: 236:    StartTimer(TMR_DISPLAY, 250);
  3531  0123B8  0EFA               	movlw	250
  3532  0123BA  6EE6               	movwf	postinc1,c
  3533  0123BC  0E00               	movlw	0
  3534  0123BE  6EE6               	movwf	postinc1,c
  3535  0123C0  0E0A               	movlw	10
  3536  0123C2  6EE6               	movwf	postinc1,c
  3537  0123C4  EC8E  F0D0         	call	_StartTimer	;wreg free
  3538                           
  3539                           ;main.c: 237:    StartTimer(TMR_ADC, 200);
  3540  0123C8  0EC8               	movlw	200
  3541  0123CA  6EE6               	movwf	postinc1,c
  3542  0123CC  0E00               	movlw	0
  3543  0123CE  6EE6               	movwf	postinc1,c
  3544  0123D0  0E01               	movlw	1
  3545  0123D2  6EE6               	movwf	postinc1,c
  3546  0123D4  EC8E  F0D0         	call	_StartTimer	;wreg free
  3547                           
  3548                           ;main.c: 238:    StartTimer(TMR_INFO, 3000);
  3549  0123D8  0EB8               	movlw	184
  3550  0123DA  6EE6               	movwf	postinc1,c
  3551  0123DC  0E0B               	movlw	11
  3552  0123DE  6EE6               	movwf	postinc1,c
  3553  0123E0  0E07               	movlw	7
  3554  0123E2  6EE6               	movwf	postinc1,c
  3555  0123E4  EC8E  F0D0         	call	_StartTimer	;wreg free
  3556                           
  3557                           ;main.c: 239:    StartTimer(TMR_FLIPPER, 1500);
  3558  0123E8  0EDC               	movlw	220
  3559  0123EA  6EE6               	movwf	postinc1,c
  3560  0123EC  0E05               	movlw	5
  3561  0123EE  6EE6               	movwf	postinc1,c
  3562  0123F0  0E0B               	movlw	11
  3563  0123F2  6EE6               	movwf	postinc1,c
  3564  0123F4  EC8E  F0D0         	call	_StartTimer	;wreg free
  3565                           
  3566                           ;main.c: 240:    StartTimer(TMR_HELPDIS, 3000);
  3567  0123F8  0EB8               	movlw	184
  3568  0123FA  6EE6               	movwf	postinc1,c
  3569  0123FC  0E0B               	movlw	11
  3570  0123FE  6EE6               	movwf	postinc1,c
  3571  012400  0E09               	movlw	9
  3572  012402  6EE6               	movwf	postinc1,c
  3573  012404  EC8E  F0D0         	call	_StartTimer	;wreg free
  3574                           
  3575                           ;main.c: 242:    start_adc_scan();
  3576  012408  EC66  F0CD         	call	_start_adc_scan	;wreg free
  3577                           
  3578                           ;main.c: 243:    start_switch_handler();
  3579  01240C  EC9B  F0D4         	call	_start_switch_handler	;wreg free
  3580                           
  3581                           ; BSR set to: 57
  3582                           ;main.c: 244:    WaitMs(1000);
  3583  012410  0EE8               	movlw	232
  3584  012412  6EE6               	movwf	postinc1,c
  3585  012414  0E03               	movlw	3
  3586  012416  6EE6               	movwf	postinc1,c
  3587  012418  EC64  F0D1         	call	_WaitMs	;wreg free
  3588                           
  3589                           ;main.c: 248:    i_ror = 1;
  3590                           ;stkvar	_i_ror @ sp[(-6)+5]
  3591  01241C  0EFF               	movlw	-1
  3592  01241E  6AE3               	clrf	plusw1,c
  3593  012420  2AE3               	incf	plusw1,f,c
  3594  012422                     l12156:
  3595                           
  3596                           ;main.c: 250:     calc_ror_data();
  3597  012422  EC45  F0BC         	call	_calc_ror_data	;wreg free
  3598                           
  3599                           ;main.c: 251:     sprintf(get_vterm_ptr(2, 0), "S SOC %d %2.4f       ", i_ror, C.bv_ror)
      +                          ;
  3600  012426  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3601  01242C  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3602  012432  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3603  012438  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3604                           
  3605                           ;stkvar	_i_ror @ sp[(-10)+5]
  3606  01243E  0EFB               	movlw	-5
  3607  012440  50E3               	movf	plusw1,w,c
  3608  012442  6EE6               	movwf	postinc1,c
  3609  012444  0E00               	movlw	0
  3610  012446  6EE6               	movwf	postinc1,c
  3611  012448  0E34               	movlw	low STR_9
  3612  01244A  6EE6               	movwf	postinc1,c
  3613  01244C  0EFE               	movlw	high STR_9
  3614  01244E  6EE6               	movwf	postinc1,c
  3615  012450  0E00               	movlw	0
  3616  012452  6EE6               	movwf	postinc1,c
  3617  012454  0E02               	movlw	2
  3618  012456  6EE6               	movwf	postinc1,c
  3619  012458  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3620  01245C  0060  F007  FFE6   	movff	btemp,postinc1
  3621  012462  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3622  012468  0E0A               	movlw	10
  3623  01246A  6EE6               	movwf	postinc1,c
  3624  01246C  EC06  F0C5         	call	_sprintf	;wreg free
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;main.c: 252:     update_lcd(0);
  3628  012470  0E00               	movlw	0
  3629  012472  6EE6               	movwf	postinc1,c
  3630  012474  ECF7  F0C3         	call	_update_lcd	;wreg free
  3631                           
  3632                           ;main.c: 253:     clear_adc_scan();
  3633  012478  ECDF  F0D5         	call	_clear_adc_scan	;wreg free
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;main.c: 254:     start_adc_scan();
  3637  01247C  EC66  F0CD         	call	_start_adc_scan	;wreg free
  3638                           
  3639                           ;main.c: 255:     WaitMs(1000);
  3640  012480  0EE8               	movlw	232
  3641  012482  6EE6               	movwf	postinc1,c
  3642  012484  0E03               	movlw	3
  3643  012486  6EE6               	movwf	postinc1,c
  3644  012488  EC64  F0D1         	call	_WaitMs	;wreg free
  3645                           
  3646                           ;main.c: 256:    } while ((i_ror++ < 30) && (C.bv_ror > 0.005));
  3647                           ;stkvar	_i_ror @ sp[(-6)+5]
  3648  01248C  0EFF               	movlw	-1
  3649  01248E  006F FF8C  F00C    	movff	plusw1,btemp+11
  3650  012494  2A0C               	incf	(btemp+11)^0,f,c
  3651  012496  0060  F033  FFE3   	movff	btemp+11,plusw1
  3652  01249C  060C               	decf	(btemp+11)^0,f,c
  3653  01249E  0E1E               	movlw	30
  3654  0124A0  600C               	cpfslt	(btemp+11)^0,c
  3655  0124A2  D018               	goto	u11750
  3656  0124A4  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3657  0124AA  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3658  0124B0  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3659  0124B6  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3660  0124BC  0E0A               	movlw	10
  3661  0124BE  6EE6               	movwf	postinc1,c
  3662  0124C0  0ED7               	movlw	215
  3663  0124C2  6EE6               	movwf	postinc1,c
  3664  0124C4  0EA3               	movlw	163
  3665  0124C6  6EE6               	movwf	postinc1,c
  3666  0124C8  0E3B               	movlw	59
  3667  0124CA  6EE6               	movwf	postinc1,c
  3668  0124CC  EC70  F0BE         	call	___flge	;wreg free
  3669  0124D0  A001               	btfss	btemp& (0+255),0,c
  3670  0124D2  D7A7               	goto	l12156
  3671  0124D4                     u11750:
  3672                           
  3673                           ;main.c: 258:    WaitMs(2000);
  3674  0124D4  0ED0               	movlw	208
  3675  0124D6  6EE6               	movwf	postinc1,c
  3676  0124D8  0E07               	movlw	7
  3677  0124DA  6EE6               	movwf	postinc1,c
  3678  0124DC  EC64  F0D1         	call	_WaitMs	;wreg free
  3679                           
  3680                           ;main.c: 259:    static_soc();
  3681  0124E0  EC0C  F0D4         	call	_static_soc	;wreg free
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;main.c: 260:    init_bsoc();
  3685  0124E4  ECB8  F0BD         	call	_init_bsoc	;wreg free
  3686                           
  3687                           ;main.c: 261:    set_load_relay_one(0);
  3688  0124E8  0E00               	movlw	0
  3689  0124EA  6EE6               	movwf	postinc1,c
  3690  0124EC  EC81  F0D5         	call	_set_load_relay_one	;wreg free
  3691                           
  3692                           ;main.c: 262:    set_load_relay_two(0);
  3693  0124F0  0E00               	movlw	0
  3694  0124F2  6EE6               	movwf	postinc1,c
  3695  0124F4  EC79  F0D5         	call	_set_load_relay_two	;wreg free
  3696                           
  3697                           ;main.c: 264:    break;
  3698  0124F8  D01C               	goto	l12186
  3699  0124FA                     l1326:
  3700                           
  3701                           ; BSR set to: 2
  3702                           ;main.c: 270:    P.SYSTEM_STABLE = 1;
  3703  0124FA  0100               	movlb	0	; () banked
  3704  0124FC  8199               	bsf	(_P+1)& (0+255),0,b	;volatile
  3705                           
  3706                           ;main.c: 271:    break;
  3707  0124FE  D019               	goto	l12186
  3708  012500                     l1328:
  3709                           
  3710                           ; BSR set to: 2
  3711                           ;main.c: 274:    V.ui_state = UI_STATE_INIT;
  3712  012500  6B00               	clrf	_V& (0+255),b	;volatile
  3713                           
  3714                           ;main.c: 275:    break;
  3715  012502  D017               	goto	l12186
  3716  012504                     l12184:
  3717  012504  0102               	movlb	2	; () banked
  3718  012506  5100               	movf	_V& (0+255),w,b	;volatile
  3719  012508  6E0B               	movwf	(btemp+10)^0,c
  3720  01250A  6A0C               	clrf	(btemp+11)^0,c
  3721                           
  3722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3723                           ; Switch size 1, requested type "simple"
  3724                           ; Number of cases is 1, Range of values is 0 to 0
  3725                           ; switch strategies available:
  3726                           ; Name         Instructions Cycles
  3727                           ; simple_byte            4     3 (average)
  3728                           ;	Chosen strategy is simple_byte
  3729  01250C  500C               	movf	(btemp+11)^0,w,c
  3730  01250E  0A00               	xorlw	0	; case 0
  3731  012510  A4D8               	btfss	status,2,c
  3732  012512  D7F6               	goto	l1328
  3733                           
  3734                           ; BSR set to: 2
  3735                           ; Switch size 1, requested type "simple"
  3736                           ; Number of cases is 5, Range of values is 0 to 5
  3737                           ; switch strategies available:
  3738                           ; Name         Instructions Cycles
  3739                           ; simple_byte           16     9 (average)
  3740                           ;	Chosen strategy is simple_byte
  3741  012514  500B               	movf	(btemp+10)^0,w,c
  3742  012516  0A00               	xorlw	0	; case 0
  3743  012518  B4D8               	btfsc	status,2,c
  3744  01251A  D6A6               	goto	l12106
  3745  01251C  0A01               	xorlw	1	; case 1
  3746  01251E  B4D8               	btfsc	status,2,c
  3747  012520  D008               	goto	l12186
  3748  012522  0A02               	xorlw	2	; case 3
  3749  012524  B4D8               	btfsc	status,2,c
  3750  012526  D005               	goto	l12186
  3751  012528  0A07               	xorlw	7	; case 4
  3752  01252A  B4D8               	btfsc	status,2,c
  3753  01252C  D7E6               	goto	l1326
  3754  01252E  0A01               	xorlw	1	; case 5
  3755  012530  D7E7               	goto	l1328
  3756  012532                     l12186:
  3757                           
  3758                           ;main.c: 278:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  3759  012532  0E01               	movlw	1
  3760  012534  6EE6               	movwf	postinc1,c
  3761  012536  ECF3  F0D2         	call	_TimerDone	;wreg free
  3762  01253A  5001               	movf	btemp^0,w,c
  3763  01253C  B4D8               	btfsc	status,2,c
  3764  01253E  D013               	goto	l12198
  3765  012540  ECD7  F0D5         	call	_check_adc_scan	;wreg free
  3766  012544  5001               	movf	btemp^0,w,c
  3767  012546  B4D8               	btfsc	status,2,c
  3768  012548  D00E               	goto	l12198
  3769                           
  3770                           ;main.c: 282:    convert_adc_data();
  3771  01254A  EC1B  F0C8         	call	_convert_adc_data	;wreg free
  3772                           
  3773                           ;main.c: 286:    clear_adc_scan();
  3774  01254E  ECDF  F0D5         	call	_clear_adc_scan	;wreg free
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;main.c: 287:    start_adc_scan();
  3778  012552  EC66  F0CD         	call	_start_adc_scan	;wreg free
  3779                           
  3780                           ;main.c: 288:    StartTimer(TMR_ADC, 200);
  3781  012556  0EC8               	movlw	200
  3782  012558  6EE6               	movwf	postinc1,c
  3783  01255A  0E00               	movlw	0
  3784  01255C  6EE6               	movwf	postinc1,c
  3785  01255E  0E01               	movlw	1
  3786  012560  6EE6               	movwf	postinc1,c
  3787  012562  EC8E  F0D0         	call	_StartTimer	;wreg free
  3788  012566                     l12198:
  3789                           
  3790                           ;main.c: 295:   if (TimerDone(TMR_DISPLAY)) {
  3791                           
  3792                           ;main.c: 291:   if (V.ticks) {
  3793  012566  0E0A               	movlw	10
  3794  012568  6EE6               	movwf	postinc1,c
  3795  01256A  ECF3  F0D2         	call	_TimerDone	;wreg free
  3796  01256E  5001               	movf	btemp^0,w,c
  3797  012570  B4D8               	btfsc	status,2,c
  3798  012572  D27F               	goto	l12240
  3799                           
  3800                           ;main.c: 296:    if (TimerDone(TMR_HELPDIS)) {
  3801  012574  0E09               	movlw	9
  3802  012576  6EE6               	movwf	postinc1,c
  3803  012578  ECF3  F0D2         	call	_TimerDone	;wreg free
  3804  01257C  5001               	movf	btemp^0,w,c
  3805  01257E  B4D8               	btfsc	status,2,c
  3806  012580  D004               	goto	l12206
  3807                           
  3808                           ;main.c: 297:     set_display_info(DIS_STR);
  3809  012582  0E00               	movlw	0
  3810  012584  6EE6               	movwf	postinc1,c
  3811  012586  ECC9  F0D4         	call	_set_display_info	;wreg free
  3812  01258A                     l12206:
  3813                           
  3814                           ;main.c: 299:    calc_model_data();
  3815  01258A  EC2B  F0AA         	call	_calc_model_data	;wreg free
  3816                           
  3817                           ; BSR set to: 1
  3818                           ;main.c: 306:     hid_display(&H);
  3819                           
  3820                           ;main.c: 301:    if (0) {
  3821  01258E  0EF5               	movlw	_H& (0+255)
  3822  012590  6EE6               	movwf	postinc1,c
  3823  012592  EC8B  F0C5         	call	_hid_display	;wreg free
  3824                           
  3825                           ;main.c: 307:     switch (H.hid_display) {
  3826  012596  D248               	goto	l12232
  3827  012598                     l1336:
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;main.c: 309:      V.calib = 0;
  3831  012598  0102               	movlb	2	; () banked
  3832  01259A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3833                           
  3834                           ; BSR set to: 2
  3835                           ;main.c: 310:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  3836  01259C  0060  F5E3  FFE6   	movff	_C+120,postinc1
  3837  0125A2  0060  F5E7  FFE6   	movff	_C+121,postinc1
  3838  0125A8  0060  F5EB  FFE6   	movff	_C+122,postinc1
  3839  0125AE  0060  F5EF  FFE6   	movff	_C+123,postinc1
  3840  0125B4  0EAA               	movlw	low STR_13
  3841  0125B6  6EE6               	movwf	postinc1,c
  3842  0125B8  0EFE               	movlw	high STR_13
  3843  0125BA  6EE6               	movwf	postinc1,c
  3844  0125BC  0E00               	movlw	0
  3845  0125BE  6EE6               	movwf	postinc1,c
  3846  0125C0  0E00               	movlw	0
  3847  0125C2  6EE6               	movwf	postinc1,c
  3848  0125C4  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3849  0125C8  0060  F007  FFE6   	movff	btemp,postinc1
  3850  0125CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3851  0125D4  0E08               	movlw	8
  3852  0125D6  6EE6               	movwf	postinc1,c
  3853  0125D8  EC06  F0C5         	call	_sprintf	;wreg free
  3854                           
  3855                           ;main.c: 311:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  3856  0125DC  0060  F5C3  FFE6   	movff	_C+112,postinc1
  3857  0125E2  0060  F5C7  FFE6   	movff	_C+113,postinc1
  3858  0125E8  0060  F5CB  FFE6   	movff	_C+114,postinc1
  3859  0125EE  0060  F5CF  FFE6   	movff	_C+115,postinc1
  3860  0125F4  0ED0               	movlw	low STR_14
  3861  0125F6  6EE6               	movwf	postinc1,c
  3862  0125F8  0EFE               	movlw	high STR_14
  3863  0125FA  6EE6               	movwf	postinc1,c
  3864  0125FC  0E00               	movlw	0
  3865  0125FE  6EE6               	movwf	postinc1,c
  3866  012600  0E01               	movlw	1
  3867  012602  6EE6               	movwf	postinc1,c
  3868  012604  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3869  012608  0060  F007  FFE6   	movff	btemp,postinc1
  3870  01260E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3871  012614  0E08               	movlw	8
  3872  012616  6EE6               	movwf	postinc1,c
  3873  012618  EC06  F0C5         	call	_sprintf	;wreg free
  3874                           
  3875                           ;main.c: 312:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  3876  01261C  0060  F5D3  FFE6   	movff	_C+116,postinc1
  3877  012622  0060  F5D7  FFE6   	movff	_C+117,postinc1
  3878  012628  0060  F5DB  FFE6   	movff	_C+118,postinc1
  3879  01262E  0060  F5DF  FFE6   	movff	_C+119,postinc1
  3880  012634  0EBD               	movlw	low STR_15
  3881  012636  6EE6               	movwf	postinc1,c
  3882  012638  0EFE               	movlw	high STR_15
  3883  01263A  6EE6               	movwf	postinc1,c
  3884  01263C  0E00               	movlw	0
  3885  01263E  6EE6               	movwf	postinc1,c
  3886  012640  0E02               	movlw	2
  3887  012642  6EE6               	movwf	postinc1,c
  3888  012644  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3889  012648  0060  F007  FFE6   	movff	btemp,postinc1
  3890  01264E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3891  012654  0E08               	movlw	8
  3892  012656  6EE6               	movwf	postinc1,c
  3893  012658  EC06  F0C5         	call	_sprintf	;wreg free
  3894                           
  3895                           ;main.c: 313:      break;
  3896  01265C  D1FA               	goto	l12234
  3897  01265E                     l1338:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;main.c: 315:      V.calib = 0;
  3901  01265E  0102               	movlb	2	; () banked
  3902  012660  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3903                           
  3904                           ; BSR set to: 2
  3905                           ;main.c: 316:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  3906  012662  0060  F413  FFE6   	movff	_C+4,postinc1
  3907  012668  0060  F417  FFE6   	movff	_C+5,postinc1
  3908  01266E  0060  F41B  FFE6   	movff	_C+6,postinc1
  3909  012674  0060  F41F  FFE6   	movff	_C+7,postinc1
  3910  01267A  0060  F453  FFE6   	movff	_C+20,postinc1
  3911  012680  0060  F457  FFE6   	movff	_C+21,postinc1
  3912  012686  0060  F45B  FFE6   	movff	_C+22,postinc1
  3913  01268C  0060  F45F  FFE6   	movff	_C+23,postinc1
  3914  012692  0E1C               	movlw	low STR_16
  3915  012694  6EE6               	movwf	postinc1,c
  3916  012696  0EFF               	movlw	high STR_16
  3917  012698  6EE6               	movwf	postinc1,c
  3918  01269A  0E00               	movlw	0
  3919  01269C  6EE6               	movwf	postinc1,c
  3920  01269E  0E00               	movlw	0
  3921  0126A0  6EE6               	movwf	postinc1,c
  3922  0126A2  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3923  0126A6  0060  F007  FFE6   	movff	btemp,postinc1
  3924  0126AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3925  0126B2  0E0C               	movlw	12
  3926  0126B4  6EE6               	movwf	postinc1,c
  3927  0126B6  EC06  F0C5         	call	_sprintf	;wreg free
  3928                           
  3929                           ;main.c: 317:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  3930  0126BA  0060  F403  FFE6   	movff	_C,postinc1
  3931  0126C0  0060  F407  FFE6   	movff	_C+1,postinc1
  3932  0126C6  0060  F40B  FFE6   	movff	_C+2,postinc1
  3933  0126CC  0060  F40F  FFE6   	movff	_C+3,postinc1
  3934  0126D2  0060  F443  FFE6   	movff	_C+16,postinc1
  3935  0126D8  0060  F447  FFE6   	movff	_C+17,postinc1
  3936  0126DE  0060  F44B  FFE6   	movff	_C+18,postinc1
  3937  0126E4  0060  F44F  FFE6   	movff	_C+19,postinc1
  3938  0126EA  0EF6               	movlw	low STR_17
  3939  0126EC  6EE6               	movwf	postinc1,c
  3940  0126EE  0EFE               	movlw	high STR_17
  3941  0126F0  6EE6               	movwf	postinc1,c
  3942  0126F2  0E00               	movlw	0
  3943  0126F4  6EE6               	movwf	postinc1,c
  3944  0126F6  0E01               	movlw	1
  3945  0126F8  6EE6               	movwf	postinc1,c
  3946  0126FA  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3947  0126FE  0060  F007  FFE6   	movff	btemp,postinc1
  3948  012704  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3949  01270A  0E0C               	movlw	12
  3950  01270C  6EE6               	movwf	postinc1,c
  3951  01270E  EC06  F0C5         	call	_sprintf	;wreg free
  3952                           
  3953                           ;main.c: 318:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  3954  012712  0060  F503  FFE6   	movff	_C+64,postinc1
  3955  012718  0060  F507  FFE6   	movff	_C+65,postinc1
  3956  01271E  0060  F50B  FFE6   	movff	_C+66,postinc1
  3957  012724  0060  F50F  FFE6   	movff	_C+67,postinc1
  3958  01272A  0060  F423  FFE6   	movff	_C+8,postinc1
  3959  012730  0060  F427  FFE6   	movff	_C+9,postinc1
  3960  012736  0060  F42B  FFE6   	movff	_C+10,postinc1
  3961  01273C  0060  F42F  FFE6   	movff	_C+11,postinc1
  3962  012742  0E09               	movlw	low STR_18
  3963  012744  6EE6               	movwf	postinc1,c
  3964  012746  0EFF               	movlw	high STR_18
  3965  012748  6EE6               	movwf	postinc1,c
  3966  01274A  0E00               	movlw	0
  3967  01274C  6EE6               	movwf	postinc1,c
  3968  01274E  0E02               	movlw	2
  3969  012750  6EE6               	movwf	postinc1,c
  3970  012752  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  3971  012756  0060  F007  FFE6   	movff	btemp,postinc1
  3972  01275C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3973  012762  0E0C               	movlw	12
  3974  012764  6EE6               	movwf	postinc1,c
  3975  012766  EC06  F0C5         	call	_sprintf	;wreg free
  3976                           
  3977                           ;main.c: 319:      break;
  3978  01276A  D173               	goto	l12234
  3979  01276C                     l1339:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;main.c: 321:      V.calib = 0;
  3983  01276C  0102               	movlb	2	; () banked
  3984  01276E  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3985                           
  3986                           ; BSR set to: 2
  3987                           ;main.c: 322:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  3988  012770  0060  F5F3  FFE6   	movff	_C+124,postinc1
  3989  012776  0060  F5F7  FFE6   	movff	_C+125,postinc1
  3990  01277C  0060  F5FB  FFE6   	movff	_C+126,postinc1
  3991  012782  0060  F5FF  FFE6   	movff	_C+127,postinc1
  3992  012788  0EE3               	movlw	low STR_19
  3993  01278A  6EE6               	movwf	postinc1,c
  3994  01278C  0EFE               	movlw	high STR_19
  3995  01278E  6EE6               	movwf	postinc1,c
  3996  012790  0E00               	movlw	0
  3997  012792  6EE6               	movwf	postinc1,c
  3998  012794  0E00               	movlw	0
  3999  012796  6EE6               	movwf	postinc1,c
  4000  012798  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  4001  01279C  0060  F007  FFE6   	movff	btemp,postinc1
  4002  0127A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4003  0127A8  0E08               	movlw	8
  4004  0127AA  6EE6               	movwf	postinc1,c
  4005  0127AC  EC06  F0C5         	call	_sprintf	;wreg free
  4006                           
  4007                           ;main.c: 323:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  4008  0127B0  0060  F643  FFE6   	movff	_C+144,postinc1
  4009  0127B6  0060  F647  FFE6   	movff	_C+145,postinc1
  4010  0127BC  0060  F64B  FFE6   	movff	_C+146,postinc1
  4011  0127C2  0060  F64F  FFE6   	movff	_C+147,postinc1
  4012  0127C8  0060  F633  FFE6   	movff	_C+140,postinc1
  4013  0127CE  0060  F637  FFE6   	movff	_C+141,postinc1
  4014  0127D4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4015  0127DA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4016  0127E0  0E4A               	movlw	low STR_20
  4017  0127E2  6EE6               	movwf	postinc1,c
  4018  0127E4  0EFE               	movlw	high STR_20
  4019  0127E6  6EE6               	movwf	postinc1,c
  4020  0127E8  0E00               	movlw	0
  4021  0127EA  6EE6               	movwf	postinc1,c
  4022  0127EC  0E01               	movlw	1
  4023  0127EE  6EE6               	movwf	postinc1,c
  4024  0127F0  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  4025  0127F4  0060  F007  FFE6   	movff	btemp,postinc1
  4026  0127FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4027  012800  0E0C               	movlw	12
  4028  012802  6EE6               	movwf	postinc1,c
  4029  012804  EC06  F0C5         	call	_sprintf	;wreg free
  4030                           
  4031                           ;main.c: 324:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  4032  012808  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4033  01280E  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4034  012814  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4035  01281A  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4036  012820  0E97               	movlw	low STR_21
  4037  012822  6EE6               	movwf	postinc1,c
  4038  012824  0EFE               	movlw	high STR_21
  4039  012826  6EE6               	movwf	postinc1,c
  4040  012828  0E00               	movlw	0
  4041  01282A  6EE6               	movwf	postinc1,c
  4042  01282C  0E02               	movlw	2
  4043  01282E  6EE6               	movwf	postinc1,c
  4044  012830  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  4045  012834  0060  F007  FFE6   	movff	btemp,postinc1
  4046  01283A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4047  012840  0E08               	movlw	8
  4048  012842  6EE6               	movwf	postinc1,c
  4049  012844  EC06  F0C5         	call	_sprintf	;wreg free
  4050                           
  4051                           ;main.c: 325:      break;
  4052  012848  D104               	goto	l12234
  4053  01284A                     l12218:
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;main.c: 327:      if (!V.calib) {
  4057  01284A  0102               	movlb	2	; () banked
  4058  01284C  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4059  01284E  A4D8               	btfss	status,2,c
  4060  012850  D02D               	goto	l12222
  4061                           
  4062                           ; BSR set to: 2
  4063                           ;main.c: 328:       lp_filter(0.0, i, -1);
  4064  012852  0EFF               	movlw	255
  4065  012854  6EE6               	movwf	postinc1,c
  4066                           
  4067                           ;stkvar	_i @ sp[(-7)+2]
  4068  012856  0EFB               	movlw	-5
  4069  012858  50E3               	movf	plusw1,w,c
  4070  01285A  6EE6               	movwf	postinc1,c
  4071  01285C  0E00               	movlw	0
  4072  01285E  6EE6               	movwf	postinc1,c
  4073  012860  0E00               	movlw	0
  4074  012862  6EE6               	movwf	postinc1,c
  4075  012864  0E00               	movlw	0
  4076  012866  6EE6               	movwf	postinc1,c
  4077  012868  0E00               	movlw	0
  4078  01286A  6EE6               	movwf	postinc1,c
  4079  01286C  ECDC  F0B9         	call	_lp_filter	;wreg free
  4080                           
  4081                           ;main.c: 329:       lp_filter(0.0, j, -1);
  4082  012870  0EFF               	movlw	255
  4083  012872  6EE6               	movwf	postinc1,c
  4084                           
  4085                           ;stkvar	_j @ sp[(-7)+1]
  4086  012874  0EFA               	movlw	-6
  4087  012876  50E3               	movf	plusw1,w,c
  4088  012878  6EE6               	movwf	postinc1,c
  4089  01287A  0E00               	movlw	0
  4090  01287C  6EE6               	movwf	postinc1,c
  4091  01287E  0E00               	movlw	0
  4092  012880  6EE6               	movwf	postinc1,c
  4093  012882  0E00               	movlw	0
  4094  012884  6EE6               	movwf	postinc1,c
  4095  012886  0E00               	movlw	0
  4096  012888  6EE6               	movwf	postinc1,c
  4097  01288A  ECDC  F0B9         	call	_lp_filter	;wreg free
  4098                           
  4099                           ;main.c: 330:       lp_filter(0.0, k, -1);
  4100  01288E  0EFF               	movlw	255
  4101  012890  6EE6               	movwf	postinc1,c
  4102                           
  4103                           ;stkvar	_k @ sp[(-7)+0]
  4104  012892  0EF9               	movlw	-7
  4105  012894  50E3               	movf	plusw1,w,c
  4106  012896  6EE6               	movwf	postinc1,c
  4107  012898  0E00               	movlw	0
  4108  01289A  6EE6               	movwf	postinc1,c
  4109  01289C  0E00               	movlw	0
  4110  01289E  6EE6               	movwf	postinc1,c
  4111  0128A0  0E00               	movlw	0
  4112  0128A2  6EE6               	movwf	postinc1,c
  4113  0128A4  0E00               	movlw	0
  4114  0128A6  6EE6               	movwf	postinc1,c
  4115  0128A8  ECDC  F0B9         	call	_lp_filter	;wreg free
  4116  0128AC                     l12222:
  4117                           
  4118                           ;main.c: 332:      V.calib = 1;
  4119  0128AC  0E01               	movlw	1
  4120  0128AE  0102               	movlb	2	; () banked
  4121  0128B0  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  4122                           
  4123                           ; BSR set to: 2
  4124                           ;main.c: 333:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  4125  0128B2  0E02               	movlw	2
  4126  0128B4  6EE6               	movwf	postinc1,c
  4127  0128B6  EC5F  F0D2         	call	_get_switch	;wreg free
  4128  0128BA  5001               	movf	btemp^0,w,c
  4129  0128BC  6EE6               	movwf	postinc1,c
  4130  0128BE  0E00               	movlw	0
  4131  0128C0  6EE6               	movwf	postinc1,c
  4132                           
  4133                           ;stkvar	_i @ sp[(-8)+2]
  4134  0128C2  0EFA               	movlw	-6
  4135  0128C4  50E3               	movf	plusw1,w,c
  4136  0128C6  0D04               	mullw	4
  4137  0128C8  0E00               	movlw	low _C
  4138  0128CA  24F3               	addwf	243,w,c
  4139  0128CC  6ED9               	movwf	fsr2l,c
  4140  0128CE  0E01               	movlw	high _C
  4141  0128D0  20F4               	addwfc	prodh,w,c
  4142  0128D2  6EDA               	movwf	fsr2h,c
  4143  0128D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4144  0128DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4145  0128E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4146  0128E6  006F FF7B FFE6     	movff	postinc2,postinc1
  4147                           
  4148                           ;stkvar	_i @ sp[(-12)+2]
  4149  0128EC  0EF6               	movlw	-10
  4150  0128EE  50E3               	movf	plusw1,w,c
  4151  0128F0  6EE6               	movwf	postinc1,c
  4152  0128F2  ECD8  F0D4         	call	_get_raw_result	;wreg free
  4153  0128F6  0060  F007  FFE6   	movff	btemp,postinc1
  4154  0128FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4155  012902  0E84               	movlw	low STR_10
  4156  012904  6EE6               	movwf	postinc1,c
  4157  012906  0EFF               	movlw	high STR_10
  4158  012908  6EE6               	movwf	postinc1,c
  4159  01290A  0E00               	movlw	0
  4160  01290C  6EE6               	movwf	postinc1,c
  4161  01290E  0E00               	movlw	0
  4162  012910  6EE6               	movwf	postinc1,c
  4163  012912  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  4164  012916  0060  F007  FFE6   	movff	btemp,postinc1
  4165  01291C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4166  012922  0E0C               	movlw	12
  4167  012924  6EE6               	movwf	postinc1,c
  4168  012926  EC06  F0C5         	call	_sprintf	;wreg free
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;main.c: 334:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4172  01292A  0E03               	movlw	3
  4173  01292C  6EE6               	movwf	postinc1,c
  4174  01292E  EC5F  F0D2         	call	_get_switch	;wreg free
  4175  012932  5001               	movf	btemp^0,w,c
  4176  012934  6EE6               	movwf	postinc1,c
  4177  012936  0E00               	movlw	0
  4178  012938  6EE6               	movwf	postinc1,c
  4179                           
  4180                           ;stkvar	_j @ sp[(-8)+1]
  4181  01293A  0EF9               	movlw	-7
  4182  01293C  50E3               	movf	plusw1,w,c
  4183  01293E  0D04               	mullw	4
  4184  012940  0E00               	movlw	low _C
  4185  012942  24F3               	addwf	243,w,c
  4186  012944  6ED9               	movwf	fsr2l,c
  4187  012946  0E01               	movlw	high _C
  4188  012948  20F4               	addwfc	prodh,w,c
  4189  01294A  6EDA               	movwf	fsr2h,c
  4190  01294C  006F FF7B FFE6     	movff	postinc2,postinc1
  4191  012952  006F FF7B FFE6     	movff	postinc2,postinc1
  4192  012958  006F FF7B FFE6     	movff	postinc2,postinc1
  4193  01295E  006F FF7B FFE6     	movff	postinc2,postinc1
  4194                           
  4195                           ;stkvar	_j @ sp[(-12)+1]
  4196  012964  0EF5               	movlw	-11
  4197  012966  50E3               	movf	plusw1,w,c
  4198  012968  6EE6               	movwf	postinc1,c
  4199  01296A  ECD8  F0D4         	call	_get_raw_result	;wreg free
  4200  01296E  0060  F007  FFE6   	movff	btemp,postinc1
  4201  012974  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4202  01297A  0E84               	movlw	low STR_10
  4203  01297C  6EE6               	movwf	postinc1,c
  4204  01297E  0EFF               	movlw	high STR_10
  4205  012980  6EE6               	movwf	postinc1,c
  4206  012982  0E00               	movlw	0
  4207  012984  6EE6               	movwf	postinc1,c
  4208  012986  0E01               	movlw	1
  4209  012988  6EE6               	movwf	postinc1,c
  4210  01298A  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  4211  01298E  0060  F007  FFE6   	movff	btemp,postinc1
  4212  012994  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4213  01299A  0E0C               	movlw	12
  4214  01299C  6EE6               	movwf	postinc1,c
  4215  01299E  EC06  F0C5         	call	_sprintf	;wreg free
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;main.c: 335:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4219                           ;stkvar	_inp_index @ sp[(-6)+3]
  4220  0129A2  0EFD               	movlw	-3
  4221  0129A4  50E3               	movf	plusw1,w,c
  4222  0129A6  6E0B               	movwf	(btemp+10)^0,c
  4223  0129A8  6A0C               	clrf	(btemp+11)^0,c
  4224  0129AA  0E01               	movlw	1
  4225  0129AC  260B               	addwf	(btemp+10)^0,f,c
  4226  0129AE  0E00               	movlw	0
  4227  0129B0  220C               	addwfc	(btemp+11)^0,f,c
  4228  0129B2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4229  0129B8  0060  F033  FFE6   	movff	btemp+11,postinc1
  4230                           
  4231                           ;stkvar	_k @ sp[(-8)+0]
  4232  0129BE  0EF8               	movlw	-8
  4233  0129C0  50E3               	movf	plusw1,w,c
  4234  0129C2  0D04               	mullw	4
  4235  0129C4  0E00               	movlw	low _C
  4236  0129C6  24F3               	addwf	243,w,c
  4237  0129C8  6ED9               	movwf	fsr2l,c
  4238  0129CA  0E01               	movlw	high _C
  4239  0129CC  20F4               	addwfc	prodh,w,c
  4240  0129CE  6EDA               	movwf	fsr2h,c
  4241  0129D0  006F FF7B FFE6     	movff	postinc2,postinc1
  4242  0129D6  006F FF7B FFE6     	movff	postinc2,postinc1
  4243  0129DC  006F FF7B FFE6     	movff	postinc2,postinc1
  4244  0129E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4245                           
  4246                           ;stkvar	_k @ sp[(-12)+0]
  4247  0129E8  0EF4               	movlw	-12
  4248  0129EA  50E3               	movf	plusw1,w,c
  4249  0129EC  6EE6               	movwf	postinc1,c
  4250  0129EE  ECD8  F0D4         	call	_get_raw_result	;wreg free
  4251  0129F2  0060  F007  FFE6   	movff	btemp,postinc1
  4252  0129F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4253  0129FE  0E73               	movlw	low STR_12
  4254  012A00  6EE6               	movwf	postinc1,c
  4255  012A02  0EFF               	movlw	high STR_12
  4256  012A04  6EE6               	movwf	postinc1,c
  4257  012A06  0E00               	movlw	0
  4258  012A08  6EE6               	movwf	postinc1,c
  4259  012A0A  0E02               	movlw	2
  4260  012A0C  6EE6               	movwf	postinc1,c
  4261  012A0E  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  4262  012A12  0060  F007  FFE6   	movff	btemp,postinc1
  4263  012A18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4264  012A1E  0E0C               	movlw	12
  4265  012A20  6EE6               	movwf	postinc1,c
  4266  012A22  EC06  F0C5         	call	_sprintf	;wreg free
  4267                           
  4268                           ;main.c: 336:      break;
  4269  012A26  D015               	goto	l12234
  4270  012A28                     l12232:
  4271  012A28  0100               	movlb	0	; () banked
  4272  012A2A  51F5               	movf	_H& (0+255),w,b
  4273  012A2C  6E0B               	movwf	(btemp+10)^0,c
  4274  012A2E  6A0C               	clrf	(btemp+11)^0,c
  4275                           
  4276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4277                           ; Switch size 1, requested type "simple"
  4278                           ; Number of cases is 1, Range of values is 0 to 0
  4279                           ; switch strategies available:
  4280                           ; Name         Instructions Cycles
  4281                           ; simple_byte            4     3 (average)
  4282                           ;	Chosen strategy is simple_byte
  4283  012A30  500C               	movf	(btemp+11)^0,w,c
  4284  012A32  0A00               	xorlw	0	; case 0
  4285  012A34  A4D8               	btfss	status,2,c
  4286  012A36  D00D               	goto	l12234
  4287                           
  4288                           ; BSR set to: 0
  4289                           ; Switch size 1, requested type "simple"
  4290                           ; Number of cases is 4, Range of values is 0 to 3
  4291                           ; switch strategies available:
  4292                           ; Name         Instructions Cycles
  4293                           ; simple_byte           13     7 (average)
  4294                           ;	Chosen strategy is simple_byte
  4295  012A38  500B               	movf	(btemp+10)^0,w,c
  4296  012A3A  0A00               	xorlw	0	; case 0
  4297  012A3C  B4D8               	btfsc	status,2,c
  4298  012A3E  D60F               	goto	l1338
  4299  012A40  0A01               	xorlw	1	; case 1
  4300  012A42  B4D8               	btfsc	status,2,c
  4301  012A44  D5A9               	goto	l1336
  4302  012A46  0A03               	xorlw	3	; case 2
  4303  012A48  B4D8               	btfsc	status,2,c
  4304  012A4A  D690               	goto	l1339
  4305  012A4C  0A01               	xorlw	1	; case 3
  4306  012A4E  B4D8               	btfsc	status,2,c
  4307  012A50  D6FC               	goto	l12218
  4308  012A52                     l12234:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;main.c: 340:     clear_hid_pflags(&H);
  4312  012A52  0EF5               	movlw	_H& (0+255)
  4313  012A54  6EE6               	movwf	postinc1,c
  4314  012A56  EC1E  F0D4         	call	_clear_hid_pflags	;wreg free
  4315                           
  4316                           ;main.c: 342:    StartTimer(TMR_DISPLAY, 250);
  4317  012A5A  0EFA               	movlw	250
  4318  012A5C  6EE6               	movwf	postinc1,c
  4319  012A5E  0E00               	movlw	0
  4320  012A60  6EE6               	movwf	postinc1,c
  4321  012A62  0E0A               	movlw	10
  4322  012A64  6EE6               	movwf	postinc1,c
  4323  012A66  EC8E  F0D0         	call	_StartTimer	;wreg free
  4324                           
  4325                           ;main.c: 343:    update_lcd(0);
  4326  012A6A  0E00               	movlw	0
  4327  012A6C  6EE6               	movwf	postinc1,c
  4328  012A6E  ECF7  F0C3         	call	_update_lcd	;wreg free
  4329  012A72                     l12240:
  4330                           
  4331                           ;main.c: 349:   check_help(V.flipper);
  4332  012A72  0102               	movlb	2	; () banked
  4333  012A74  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4334  012A76  6EE6               	movwf	postinc1,c
  4335  012A78  ECD1  F0B6         	call	_check_help	;wreg free
  4336                           
  4337                           ;main.c: 351:   if (check_enter_button(&H)) {
  4338  012A7C  0EF5               	movlw	_H& (0+255)
  4339  012A7E  6EE6               	movwf	postinc1,c
  4340  012A80  ECAE  F0D0         	call	_check_enter_button	;wreg free
  4341  012A84  5001               	movf	btemp^0,w,c
  4342  012A86  B4D8               	btfsc	status,2,c
  4343  012A88  D062               	goto	l1343
  4344                           
  4345                           ;main.c: 352:    V.calib = 0;
  4346  012A8A  0102               	movlb	2	; () banked
  4347  012A8C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4348                           
  4349                           ; BSR set to: 2
  4350                           ;main.c: 353:    inp_index += 3;
  4351                           ;stkvar	_inp_index @ sp[(-6)+3]
  4352  012A8E  0EFD               	movlw	-3
  4353  012A90  006F FF8C  F001    	movff	plusw1,btemp
  4354  012A96  0E03               	movlw	3
  4355  012A98  2601               	addwf	btemp^0,f,c
  4356  012A9A  0EFD               	movlw	-3
  4357  012A9C  0060  F007  FFE3   	movff	btemp,plusw1
  4358                           
  4359                           ;main.c: 354:    if (inp_index > 9)
  4360                           ;stkvar	_inp_index @ sp[(-6)+3]
  4361  012AA2  0EFD               	movlw	-3
  4362  012AA4  006F FF8C  F001    	movff	plusw1,btemp
  4363  012AAA  0E09               	movlw	9
  4364  012AAC  6401               	cpfsgt	btemp^0,c
  4365  012AAE  D03A               	goto	l12268
  4366                           
  4367                           ; BSR set to: 2
  4368                           ;main.c: 355:     inp_index = 0;
  4369                           ;stkvar	_inp_index @ sp[(-6)+3]
  4370  012AB0  0EFD               	movlw	-3
  4371  012AB2  6AE3               	clrf	plusw1,c
  4372  012AB4  D037               	goto	l12268
  4373  012AB6                     l12250:
  4374                           
  4375                           ; BSR set to: 2
  4376                           ;main.c: 358:     i = C_BATT;
  4377                           ;stkvar	_i @ sp[(-6)+2]
  4378  012AB6  0EFC               	movlw	-4
  4379  012AB8  6AE3               	clrf	plusw1,c
  4380                           
  4381                           ; BSR set to: 2
  4382                           ;main.c: 359:     j = C_PV;
  4383                           ;stkvar	_j @ sp[(-6)+1]
  4384  012ABA  0EFB               	movlw	-5
  4385  012ABC  6AE3               	clrf	plusw1,c
  4386  012ABE  2AE3               	incf	plusw1,f,c
  4387                           
  4388                           ; BSR set to: 2
  4389                           ;main.c: 360:     k = V_CC;
  4390                           ;stkvar	_k @ sp[(-6)+0]
  4391  012AC0  0EFA               	movlw	-6
  4392  012AC2  6AE3               	clrf	plusw1,c
  4393  012AC4  82E3               	bsf	plusw1,1,c
  4394                           
  4395                           ;main.c: 361:     break;
  4396  012AC6  D043               	goto	l1343
  4397  012AC8                     l12256:
  4398                           
  4399                           ; BSR set to: 2
  4400                           ;main.c: 363:     i = V_BAT;
  4401                           ;stkvar	_i @ sp[(-6)+2]
  4402  012AC8  0EFC               	movlw	-4
  4403  012ACA  6AE3               	clrf	plusw1,c
  4404  012ACC  84E3               	bsf	plusw1,2,c
  4405                           
  4406                           ;main.c: 364:     j = V_PV;
  4407                           ;stkvar	_j @ sp[(-6)+1]
  4408  012ACE  0EFB               	movlw	-5
  4409  012AD0  6AE3               	clrf	plusw1,c
  4410  012AD2  80E3               	bsf	plusw1,0,c
  4411  012AD4  84E3               	bsf	plusw1,2,c	;indir
  4412                           
  4413                           ;main.c: 365:     k = V_CBUS;
  4414                           ;stkvar	_k @ sp[(-6)+0]
  4415  012AD6  0EFA               	movlw	-6
  4416  012AD8  6AE3               	clrf	plusw1,c
  4417  012ADA  82E3               	bsf	plusw1,1,c
  4418  012ADC  84E3               	bsf	plusw1,2,c	;indir
  4419                           
  4420                           ;main.c: 366:     break;
  4421  012ADE  D037               	goto	l1343
  4422  012AE0                     l12258:
  4423                           
  4424                           ; BSR set to: 2
  4425                           ;main.c: 368:     i = V_BBAT;
  4426                           ;stkvar	_i @ sp[(-6)+2]
  4427  012AE0  0EFC               	movlw	-4
  4428  012AE2  6AE3               	clrf	plusw1,c
  4429  012AE4  82E3               	bsf	plusw1,1,c
  4430  012AE6  86E3               	bsf	plusw1,3,c	;indir
  4431                           
  4432                           ; BSR set to: 2
  4433                           ;main.c: 369:     j = V_TEMP;
  4434  012AE8  0E0B               	movlw	11
  4435  012AEA  6E0C               	movwf	(btemp+11)^0,c
  4436                           
  4437                           ;stkvar	_j @ sp[(-6)+1]
  4438  012AEC  0EFB               	movlw	-5
  4439  012AEE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4440                           
  4441                           ; BSR set to: 2
  4442                           ;main.c: 370:     k = V_INVERTER;
  4443                           ;stkvar	_k @ sp[(-6)+0]
  4444  012AF4  0EFA               	movlw	-6
  4445  012AF6  6AE3               	clrf	plusw1,c
  4446  012AF8  84E3               	bsf	plusw1,2,c
  4447  012AFA  86E3               	bsf	plusw1,3,c	;indir
  4448                           
  4449                           ;main.c: 371:     break;
  4450  012AFC  D028               	goto	l1343
  4451  012AFE                     l12264:
  4452                           
  4453                           ; BSR set to: 2
  4454                           ;main.c: 373:     i = channel_ANB5;
  4455  012AFE  0E0D               	movlw	13
  4456  012B00  6E0C               	movwf	(btemp+11)^0,c
  4457                           
  4458                           ;stkvar	_i @ sp[(-6)+2]
  4459  012B02  0EFC               	movlw	-4
  4460  012B04  0060  F033  FFE3   	movff	btemp+11,plusw1
  4461                           
  4462                           ;main.c: 374:     j = channel_ANB5;
  4463  012B0A  0E0D               	movlw	13
  4464  012B0C  6E0C               	movwf	(btemp+11)^0,c
  4465                           
  4466                           ;stkvar	_j @ sp[(-6)+1]
  4467  012B0E  0EFB               	movlw	-5
  4468  012B10  0060  F033  FFE3   	movff	btemp+11,plusw1
  4469                           
  4470                           ;main.c: 375:     k = channel_ANB5;
  4471  012B16  0E0D               	movlw	13
  4472  012B18  6E0C               	movwf	(btemp+11)^0,c
  4473                           
  4474                           ;stkvar	_k @ sp[(-6)+0]
  4475  012B1A  0EFA               	movlw	-6
  4476  012B1C  0060  F033  FFE3   	movff	btemp+11,plusw1
  4477                           
  4478                           ;main.c: 376:     break;
  4479  012B22  D015               	goto	l1343
  4480  012B24                     l12268:
  4481                           
  4482                           ; BSR set to: 2
  4483                           ;stkvar	_inp_index @ sp[(-6)+3]
  4484  012B24  0EFD               	movlw	-3
  4485  012B26  50E3               	movf	plusw1,w,c
  4486  012B28  6E0B               	movwf	(btemp+10)^0,c
  4487  012B2A  6A0C               	clrf	(btemp+11)^0,c
  4488                           
  4489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4490                           ; Switch size 1, requested type "simple"
  4491                           ; Number of cases is 1, Range of values is 0 to 0
  4492                           ; switch strategies available:
  4493                           ; Name         Instructions Cycles
  4494                           ; simple_byte            4     3 (average)
  4495                           ;	Chosen strategy is simple_byte
  4496  012B2C  500C               	movf	(btemp+11)^0,w,c
  4497  012B2E  0A00               	xorlw	0	; case 0
  4498  012B30  A4D8               	btfss	status,2,c
  4499  012B32  D00D               	goto	l1343
  4500                           
  4501                           ; BSR set to: 2
  4502                           ; Switch size 1, requested type "simple"
  4503                           ; Number of cases is 4, Range of values is 0 to 9
  4504                           ; switch strategies available:
  4505                           ; Name         Instructions Cycles
  4506                           ; simple_byte           13     7 (average)
  4507                           ;	Chosen strategy is simple_byte
  4508  012B34  500B               	movf	(btemp+10)^0,w,c
  4509  012B36  0A00               	xorlw	0	; case 0
  4510  012B38  B4D8               	btfsc	status,2,c
  4511  012B3A  D7BD               	goto	l12250
  4512  012B3C  0A03               	xorlw	3	; case 3
  4513  012B3E  B4D8               	btfsc	status,2,c
  4514  012B40  D7C3               	goto	l12256
  4515  012B42  0A05               	xorlw	5	; case 6
  4516  012B44  B4D8               	btfsc	status,2,c
  4517  012B46  D7CC               	goto	l12258
  4518  012B48  0A0F               	xorlw	15	; case 9
  4519  012B4A  B4D8               	btfsc	status,2,c
  4520  012B4C  D7D8               	goto	l12264
  4521  012B4E                     l1343:
  4522                           
  4523                           ;main.c: 385:   if (V.set_sequ) {
  4524  012B4E  0102               	movlb	2	; () banked
  4525  012B50  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  4526  012B52  D4D8               	goto	l12184
  4527                           
  4528                           ; BSR set to: 2
  4529                           ;main.c: 386:    if (TimerDone(TMR_INFO)) {
  4530  012B54  0E07               	movlw	7
  4531  012B56  6EE6               	movwf	postinc1,c
  4532  012B58  ECF3  F0D2         	call	_TimerDone	;wreg free
  4533  012B5C  5001               	movf	btemp^0,w,c
  4534  012B5E  B4D8               	btfsc	status,2,c
  4535  012B60  D00B               	goto	l12278
  4536                           
  4537                           ;main.c: 387:     V.set_sequ = 0;
  4538  012B62  0102               	movlb	2	; () banked
  4539  012B64  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  4540                           
  4541                           ; BSR set to: 2
  4542                           ;main.c: 388:     set_vterm(0);
  4543  012B66  0E00               	movlw	0
  4544  012B68  6EE6               	movwf	postinc1,c
  4545  012B6A  ECBA  F0D4         	call	_set_vterm	;wreg free
  4546                           
  4547                           ;main.c: 389:     update_lcd(0);
  4548  012B6E  0E00               	movlw	0
  4549  012B70  6EE6               	movwf	postinc1,c
  4550  012B72  ECF7  F0C3         	call	_update_lcd	;wreg free
  4551                           
  4552                           ;main.c: 390:    } else {
  4553  012B76  D4C6               	goto	l12184
  4554  012B78                     l12278:
  4555                           
  4556                           ;main.c: 391:     set_vterm(2);
  4557  012B78  0E02               	movlw	2
  4558  012B7A  6EE6               	movwf	postinc1,c
  4559  012B7C  ECBA  F0D4         	call	_set_vterm	;wreg free
  4560                           
  4561                           ;main.c: 392:     update_lcd(2);
  4562  012B80  0E02               	movlw	2
  4563  012B82  6EE6               	movwf	postinc1,c
  4564  012B84  ECF7  F0C3         	call	_update_lcd	;wreg free
  4565  012B88  D4BD               	goto	l12184
  4566  012B8A                     __end_of_main:
  4567                           	opt callstack 0
  4568                           
  4569 ;; *************** function _static_soc *****************
  4570 ;; Defined at:
  4571 ;;		line 102 in file "mbmc.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1  [STACK] void 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 3F/1
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4589 ;;Total ram usage:        0 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:   15
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_main
  4596 ;; This function uses a reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text1
  4600  01A818                     __ptext1:
  4601                           	opt callstack 0
  4602  01A818                     _static_soc:
  4603                           	opt callstack 15
  4604                           
  4605                           ;mbmc.c: 104:  C.runtime = 120;
  4606                           
  4607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4608                           ;incstack = 0
  4609  01A818  0E00               	movlw	0
  4610  01A81A  0101               	movlb	1	; () banked
  4611  01A81C  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
  4612  01A81E  0E78               	movlw	120
  4613  01A820  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
  4614                           
  4615                           ;mbmc.c: 105:  C.soc = 100;
  4616  01A822  0E00               	movlw	0
  4617  01A824  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
  4618  01A826  0E64               	movlw	100
  4619  01A828  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
  4620                           
  4621                           ; BSR set to: 1
  4622                           ;mbmc.c: 106:  C.dynamic_ah = C.bank_ah;
  4623  01A82A  C188  F18C         	movff	_C+136,_C+140	;volatile
  4624  01A82E  C189  F18D         	movff	_C+137,_C+141	;volatile
  4625  01A832  C18A  F18E         	movff	_C+138,_C+142	;volatile
  4626  01A836  C18B  F18F         	movff	_C+139,_C+143	;volatile
  4627                           
  4628                           ; BSR set to: 1
  4629                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4630  01A83A  0012               	return		;funcret
  4631  01A83C                     __end_of_static_soc:
  4632                           	opt callstack 0
  4633                           
  4634 ;; *************** function _start_switch_handler *****************
  4635 ;; Defined at:
  4636 ;;		line 119 in file "dio.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1  [STACK] void 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  4645 ;; Tracked objects:
  4646 ;;		On entry : 1/0
  4647 ;;		On exit  : 3F/39
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:   16
  4657 ;; This function calls:
  4658 ;;		_INT1_SetInterruptHandler
  4659 ;; This function is called by:
  4660 ;;		_main
  4661 ;; This function uses a reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text2
  4665  01A936                     __ptext2:
  4666                           	opt callstack 0
  4667  01A936                     _start_switch_handler:
  4668                           	opt callstack 14
  4669                           
  4670                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  4671                           
  4672                           ; BSR set to: 1
  4673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4674                           ;incstack = 0
  4675  01A936  0139               	movlb	57	; () banked
  4676  01A938  9195               	bcf	149,0,b	;volatile
  4677                           
  4678                           ; BSR set to: 57
  4679                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  4680  01A93A  0E34               	movlw	low _switch_handler
  4681  01A93C  6EE6               	movwf	postinc1,c
  4682  01A93E  0E82               	movlw	high _switch_handler
  4683  01A940  6EE6               	movwf	postinc1,c
  4684  01A942  0E01               	movlw	low (_switch_handler shr (0+16))
  4685  01A944  6EE6               	movwf	postinc1,c
  4686  01A946  EC7F  F0D3         	call	_INT1_SetInterruptHandler	;wreg free
  4687                           
  4688                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  4689  01A94A  0E02               	movlw	2
  4690  01A94C  0102               	movlb	2	; () banked
  4691  01A94E  6FDF               	movwf	(_S+35)& (0+255),b	;volatile
  4692                           
  4693                           ; BSR set to: 2
  4694                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  4695  01A950  0139               	movlb	57	; () banked
  4696  01A952  8195               	bsf	149,0,b	;volatile
  4697                           
  4698                           ; BSR set to: 57
  4699                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  4700  01A954  0012               	return		;funcret
  4701  01A956                     __end_of_start_switch_handler:
  4702                           	opt callstack 0
  4703                           
  4704 ;; *************** function _start_adc_scan *****************
  4705 ;; Defined at:
  4706 ;;		line 33 in file "daq.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;		None
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;		None
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1  [STACK] _Bool 
  4713 ;; Registers used:
  4714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 1/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4724 ;;Total ram usage:        0 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:   16
  4727 ;; This function calls:
  4728 ;;		_ADCC_DischargeSampleCapacitor
  4729 ;;		_ADCC_SetADIInterruptHandler
  4730 ;;		_ADCC_SetADTIInterruptHandler
  4731 ;;		_ADCC_StartConversion
  4732 ;; This function is called by:
  4733 ;;		_main
  4734 ;; This function uses a reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text3
  4738  019ACC                     __ptext3:
  4739                           	opt callstack 0
  4740  019ACC                     _start_adc_scan:
  4741                           	opt callstack 14
  4742                           
  4743                           ;daq.c: 35:  if (R.done)
  4744                           
  4745                           ; BSR set to: 57
  4746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4747                           ;incstack = 0
  4748  019ACC  0100               	movlb	0	; () banked
  4749  019ACE  51ED               	movf	(_R+39)& (0+255),w,b	;volatile
  4750  019AD0  A4D8               	btfss	status,2,c
  4751  019AD2  0012               	return	
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;daq.c: 38:  R.scan_index = 0;
  4755  019AD4  6BEA               	clrf	(_R+36)& (0+255),b	;volatile
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  4759  019AD6  013A               	movlb	58	; () banked
  4760  019AD8  5140               	movf	64,w,b	;volatile
  4761  019ADA  006E F940  F001    	movff	14928,btemp	;volatile
  4762  019AE0  6A02               	clrf	(btemp+1)^0,c
  4763  019AE2  0060  F004  F002   	movff	btemp,btemp+1
  4764  019AE8  6A01               	clrf	btemp^0,c
  4765  019AEA  2601               	addwf	btemp^0,f,c
  4766  019AEC  0E00               	movlw	0
  4767  019AEE  2202               	addwfc	(btemp+1)^0,f,c
  4768  019AF0  0E77               	movlw	119
  4769  019AF2  1401               	andwf	btemp^0,w,c
  4770  019AF4  0100               	movlb	0	; () banked
  4771  019AF6  6FEB               	movwf	(_R+37)& (0+255),b	;volatile
  4772  019AF8  0E3C               	movlw	60
  4773  019AFA  1402               	andwf	(btemp+1)^0,w,c
  4774  019AFC  6FEC               	movwf	(_R+38)& (0+255),b	;volatile
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  4778  019AFE  0EE6               	movlw	low _adc_int_handler
  4779  019B00  6EE6               	movwf	postinc1,c
  4780  019B02  0EAB               	movlw	high _adc_int_handler
  4781  019B04  6EE6               	movwf	postinc1,c
  4782  019B06  0E01               	movlw	low (_adc_int_handler shr (0+16))
  4783  019B08  6EE6               	movwf	postinc1,c
  4784  019B0A  ECBB  F0D3         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4785                           
  4786                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  4787  019B0E  0EA8               	movlw	low _adc_int_t_handler
  4788  019B10  6EE6               	movwf	postinc1,c
  4789  019B12  0E98               	movlw	high _adc_int_t_handler
  4790  019B14  6EE6               	movwf	postinc1,c
  4791  019B16  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  4792  019B18  6EE6               	movwf	postinc1,c
  4793  019B1A  ECA7  F0D3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  4794                           
  4795                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  4796  019B1E  ECCB  F0D5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  4797                           
  4798                           ; BSR set to: 62
  4799                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  4800  019B22  0100               	movlb	0	; () banked
  4801  019B24  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
  4802  019B26  0B0F               	andlw	15
  4803  019B28  6EE6               	movwf	postinc1,c
  4804  019B2A  EC70  F0D5         	call	_ADCC_StartConversion	;wreg free
  4805                           
  4806                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4807  019B2E  0012               	return		;funcret
  4808  019B30                     __end_of_start_adc_scan:
  4809                           	opt callstack 0
  4810                           
  4811 ;; *************** function _ADCC_StartConversion *****************
  4812 ;; Defined at:
  4813 ;;		line 128 in file "mcc_generated_files/adcc.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  channel         1  [STACK] enum E16136
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1  [STACK] void 
  4820 ;; Registers used:
  4821 ;;		fsr1l, fsr1h
  4822 ;; Tracked objects:
  4823 ;;		On entry : 3F/0
  4824 ;;		On exit  : 3F/3E
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:   15
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_start_adc_scan
  4838 ;;		_adc_int_t_handler
  4839 ;; This function uses a reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text4
  4843  01AAE0                     __ptext4:
  4844                           	opt callstack 0
  4845  01AAE0                     _ADCC_StartConversion:
  4846                           	opt callstack 0
  4847                           
  4848                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  4849                           ;stkvar	_channel @ sp[(0)+-1]
  4850                           
  4851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4852                           ;incstack = 0
  4853 ;; hardware stack exceeded
  4854  01AAE0  0EFF               	movlw	-1
  4855  01AAE2  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  4856                           
  4857                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  4858  01AAE8  013E               	movlb	62	; () banked
  4859  01AAEA  8FF8               	bsf	248,7,b	;volatile
  4860                           
  4861                           ; BSR set to: 62
  4862                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  4863  01AAEC  81F8               	bsf	248,0,b	;volatile
  4864                           
  4865                           ; BSR set to: 62
  4866                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  4867  01AAEE  52E5               	movf	postdec1,f,c
  4868  01AAF0  0012               	return		;funcret
  4869  01AAF2                     __end_of_ADCC_StartConversion:
  4870                           	opt callstack 0
  4871                           
  4872 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4873 ;; Defined at:
  4874 ;;		line 189 in file "mcc_generated_files/adcc.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1  [STACK] void 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 3F/3E
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4892 ;;Total ram usage:        0 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:   15
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_start_adc_scan
  4899 ;;		_adc_int_t_handler
  4900 ;; This function uses a reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text5
  4904  01AB96                     __ptext5:
  4905                           	opt callstack 0
  4906  01AB96                     _ADCC_DischargeSampleCapacitor:
  4907                           	opt callstack 0
  4908                           
  4909                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  4910                           
  4911                           ; BSR set to: 62
  4912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4913                           ;incstack = 0
  4914 ;; hardware stack exceeded
  4915  01AB96  0E3B               	movlw	59
  4916  01AB98  013E               	movlb	62	; () banked
  4917  01AB9A  6FF1               	movwf	241,b	;volatile
  4918                           
  4919                           ; BSR set to: 62
  4920                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  4921  01AB9C  0012               	return		;funcret
  4922  01AB9E                     __end_of_ADCC_DischargeSampleCapacitor:
  4923                           	opt callstack 0
  4924                           
  4925 ;; *************** function _srand *****************
  4926 ;; Defined at:
  4927 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  s               2  [STACK] unsigned int 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1  [STACK] void 
  4934 ;; Registers used:
  4935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 3F/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4945 ;;Total ram usage:        0 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:   15
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_main
  4952 ;; This function uses a reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text6
  4956  01A334                     __ptext6:
  4957                           	opt callstack 0
  4958  01A334                     _srand:
  4959                           	opt callstack 15
  4960                           
  4961                           ;stkvar	_s @ sp[(0)+-2]
  4962                           
  4963                           ; BSR set to: 62
  4964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4965                           ;incstack = 0
  4966  01A334  0EFE               	movlw	-2
  4967  01A336  50E3               	movf	plusw1,w,c
  4968  01A338  0FFF               	addlw	255
  4969  01A33A  6E0B               	movwf	(btemp+10)^0,c
  4970  01A33C  0EFF               	movlw	-1
  4971  01A33E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4972  01A344  0EFF               	movlw	255
  4973  01A346  220C               	addwfc	(btemp+11)^0,f,c
  4974  01A348  0060  F02C  F0BE   	movff	btemp+10,_seed
  4975  01A34E  0060  F030  F0BF   	movff	btemp+11,_seed+1
  4976  01A354  0100               	movlb	0	; () banked
  4977  01A356  6BC0               	clrf	(_seed+2)& (0+255),b
  4978  01A358  6BC1               	clrf	(_seed+3)& (0+255),b
  4979  01A35A  6BC2               	clrf	(_seed+4)& (0+255),b
  4980  01A35C  6BC3               	clrf	(_seed+5)& (0+255),b
  4981  01A35E  6BC4               	clrf	(_seed+6)& (0+255),b
  4982  01A360  6BC5               	clrf	(_seed+7)& (0+255),b
  4983                           
  4984                           ; BSR set to: 0
  4985                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4986  01A362  52E5               	movf	postdec1,f,c
  4987  01A364  52E5               	movf	postdec1,f,c
  4988  01A366  0012               	return		;funcret
  4989  01A368                     __end_of_srand:
  4990                           	opt callstack 0
  4991                           
  4992 ;; *************** function _set_load_relay_two *****************
  4993 ;; Defined at:
  4994 ;;		line 114 in file "mbmc.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  mode            1  [STACK] _Bool 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1  [STACK] void 
  5001 ;; Registers used:
  5002 ;;		wreg, fsr1l, fsr1h
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5012 ;;Total ram usage:        0 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:   15
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_main
  5019 ;; This function uses a reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text7
  5023  01AAF2                     __ptext7:
  5024                           	opt callstack 0
  5025  01AAF2                     _set_load_relay_two:
  5026                           	opt callstack 15
  5027                           
  5028                           ;mbmc.c: 114: void set_load_relay_two(_Bool mode);mbmc.c: 115: {;mbmc.c: 116:  LATDbits.
      +                          LATD5 = mode;
  5029                           ;stkvar	_mode @ sp[(0)+-1]
  5030                           
  5031                           ; BSR set to: 0
  5032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5033                           ;incstack = 0
  5034  01AAF2  0EFF               	movlw	-1
  5035  01AAF4  B0E3               	btfsc	plusw1,0,c
  5036  01AAF6  D002               	bra	u9485
  5037  01AAF8  9ABD               	bcf	189,5,c	;volatile
  5038  01AAFA  D001               	bra	u9486
  5039  01AAFC                     u9485:
  5040  01AAFC  8ABD               	bsf	189,5,c	;volatile
  5041  01AAFE                     u9486:
  5042                           
  5043                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5044  01AAFE  52E5               	movf	postdec1,f,c
  5045  01AB00  0012               	return		;funcret
  5046  01AB02                     __end_of_set_load_relay_two:
  5047                           	opt callstack 0
  5048                           
  5049 ;; *************** function _set_load_relay_one *****************
  5050 ;; Defined at:
  5051 ;;		line 109 in file "mbmc.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  mode            1  [STACK] _Bool 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1  [STACK] void 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr1l, fsr1h
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5069 ;;Total ram usage:        0 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:   15
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_main
  5076 ;; This function uses a reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text8
  5080  01AB02                     __ptext8:
  5081                           	opt callstack 0
  5082  01AB02                     _set_load_relay_one:
  5083                           	opt callstack 15
  5084                           
  5085                           ;mbmc.c: 109: void set_load_relay_one(_Bool mode);mbmc.c: 110: {;mbmc.c: 111:  LATDbits.
      +                          LATD4 = mode;
  5086                           ;stkvar	_mode @ sp[(0)+-1]
  5087                           
  5088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5089                           ;incstack = 0
  5090  01AB02  0EFF               	movlw	-1
  5091  01AB04  B0E3               	btfsc	plusw1,0,c
  5092  01AB06  D002               	bra	u9475
  5093  01AB08  98BD               	bcf	189,4,c	;volatile
  5094  01AB0A  D001               	bra	u9476
  5095  01AB0C                     u9475:
  5096  01AB0C  88BD               	bsf	189,4,c	;volatile
  5097  01AB0E                     u9476:
  5098                           
  5099                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5100  01AB0E  52E5               	movf	postdec1,f,c
  5101  01AB10  0012               	return		;funcret
  5102  01AB12                     __end_of_set_load_relay_one:
  5103                           	opt callstack 0
  5104                           
  5105 ;; *************** function _init_port_dma *****************
  5106 ;; Defined at:
  5107 ;;		line 90 in file "eadog.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;		None
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1  [STACK] void 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/2
  5118 ;;		On exit  : 3F/3B
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5125 ;;Total ram usage:        0 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:   15
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_main
  5132 ;; This function uses a reentrant model
  5133 ;;
  5134                           
  5135                           	psect	text9
  5136  01A3D0                     __ptext9:
  5137                           	opt callstack 0
  5138  01A3D0                     _init_port_dma:
  5139                           	opt callstack 15
  5140                           
  5141                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  5142                           
  5143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5144                           ;incstack = 0
  5145  01A3D0  0E3F               	movlw	-193
  5146  01A3D2  013B               	movlb	59	; () banked
  5147  01A3D4  17DD               	andwf	221,f,b	;volatile
  5148                           
  5149                           ; BSR set to: 59
  5150                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  5151  01A3D6  9BDD               	bcf	221,5,b	;volatile
  5152                           
  5153                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  5154  01A3D8  51DD               	movf	221,w,b	;volatile
  5155  01A3DA  0BF9               	andlw	-7
  5156  01A3DC  0902               	iorlw	2
  5157  01A3DE  6FDD               	movwf	221,b	;volatile
  5158                           
  5159                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  5160  01A3E0  0EE7               	movlw	-25
  5161  01A3E2  17DD               	andwf	221,f,b	;volatile
  5162                           
  5163                           ; BSR set to: 59
  5164                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  5165  01A3E4  81DD               	bsf	221,0,b	;volatile
  5166                           
  5167                           ; BSR set to: 59
  5168                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  5169  01A3E6  9DDC               	bcf	220,6,b	;volatile
  5170                           
  5171                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  5172  01A3E8  0E3D               	movlw	61
  5173  01A3EA  6FD1               	movwf	209,b	;volatile
  5174  01A3EC  0EEA               	movlw	234
  5175  01A3EE  6FD0               	movwf	208,b	;volatile
  5176                           
  5177                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  5178  01A3F0  0EFF               	movlw	low _port_data
  5179  01A3F2  6FD9               	movwf	217,b	;volatile
  5180  01A3F4  0E05               	movlw	high _port_data
  5181  01A3F6  6FDA               	movwf	218,b	;volatile
  5182  01A3F8  0E00               	movlw	low (_port_data shr (0+16))
  5183  01A3FA  6FDB               	movwf	219,b	;volatile
  5184                           
  5185                           ; BSR set to: 59
  5186                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  5187  01A3FC  9BDC               	bcf	220,5,b	;volatile
  5188                           
  5189                           ; BSR set to: 59
  5190                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5191  01A3FE  0012               	return		;funcret
  5192  01A400                     __end_of_init_port_dma:
  5193                           	opt callstack 0
  5194                           
  5195 ;; *************** function _init_display *****************
  5196 ;; Defined at:
  5197 ;;		line 38 in file "eadog.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1  [STACK] void 
  5204 ;; Registers used:
  5205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5206 ;; Tracked objects:
  5207 ;;		On entry : 3F/3B
  5208 ;;		On exit  : 3F/3D
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5215 ;;Total ram usage:        0 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:   17
  5218 ;; This function calls:
  5219 ;;		_ringBufS_init
  5220 ;;		_send_lcd_cmd
  5221 ;;		_send_lcd_cmd_long
  5222 ;;		_wdtdelay
  5223 ;; This function is called by:
  5224 ;;		_main
  5225 ;; This function uses a reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text10
  5229  018C18                     __ptext10:
  5230                           	opt callstack 0
  5231  018C18                     _init_display:
  5232                           	opt callstack 13
  5233                           
  5234                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  5235                           
  5236                           ; BSR set to: 59
  5237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5238                           ;incstack = 0
  5239  018C18  0E43               	movlw	low _ring_buf1
  5240  018C1A  0100               	movlb	0	; () banked
  5241  018C1C  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  5242  018C1E  0E04               	movlw	high _ring_buf1
  5243  018C20  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  5244                           
  5245                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  5246  018C22  0E00               	movlw	low _ring_buf2
  5247  018C24  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  5248  018C26  0E04               	movlw	high _ring_buf2
  5249  018C28  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  5253  018C2A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  5254  018C30  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  5255  018C36  ECDF  F0D2         	call	_ringBufS_init	;wreg free
  5256                           
  5257                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  5258  018C3A  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  5259  018C40  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  5260  018C46  ECDF  F0D2         	call	_ringBufS_init	;wreg free
  5261                           
  5262                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  5263  018C4A  84BE               	bsf	190,2,c	;volatile
  5264  018C4C  84BC               	bsf	188,2,c	;volatile
  5265                           
  5266                           ;eadog.c: 59:  wdtdelay(350000);
  5267  018C4E  0E30               	movlw	48
  5268  018C50  6EE6               	movwf	postinc1,c
  5269  018C52  0E57               	movlw	87
  5270  018C54  6EE6               	movwf	postinc1,c
  5271  018C56  0E05               	movlw	5
  5272  018C58  6EE6               	movwf	postinc1,c
  5273  018C5A  0E00               	movlw	0
  5274  018C5C  6EE6               	movwf	postinc1,c
  5275  018C5E  EC29  F0CE         	call	_wdtdelay	;wreg free
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5279  018C62  0E39               	movlw	57
  5280  018C64  6EE6               	movwf	postinc1,c
  5281  018C66  ECCB  F0D2         	call	_send_lcd_cmd	;wreg free
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5285  018C6A  0E1D               	movlw	29
  5286  018C6C  6EE6               	movwf	postinc1,c
  5287  018C6E  ECCB  F0D2         	call	_send_lcd_cmd	;wreg free
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5291  018C72  0E50               	movlw	80
  5292  018C74  6EE6               	movwf	postinc1,c
  5293  018C76  ECCB  F0D2         	call	_send_lcd_cmd	;wreg free
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5297  018C7A  0E6C               	movlw	108
  5298  018C7C  6EE6               	movwf	postinc1,c
  5299  018C7E  ECCB  F0D2         	call	_send_lcd_cmd	;wreg free
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5303  018C82  0E76               	movlw	118
  5304  018C84  6EE6               	movwf	postinc1,c
  5305  018C86  ECCB  F0D2         	call	_send_lcd_cmd	;wreg free
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5309  018C8A  0E38               	movlw	56
  5310  018C8C  6EE6               	movwf	postinc1,c
  5311  018C8E  ECB7  F0D2         	call	_send_lcd_cmd_long	;wreg free
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5315  018C92  0E0F               	movlw	15
  5316  018C94  6EE6               	movwf	postinc1,c
  5317  018C96  ECCB  F0D2         	call	_send_lcd_cmd	;wreg free
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5321  018C9A  0E01               	movlw	1
  5322  018C9C  6EE6               	movwf	postinc1,c
  5323  018C9E  ECB7  F0D2         	call	_send_lcd_cmd_long	;wreg free
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5327  018CA2  0E02               	movlw	2
  5328  018CA4  6EE6               	movwf	postinc1,c
  5329  018CA6  ECCB  F0D2         	call	_send_lcd_cmd	;wreg free
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5333  018CAA  0E06               	movlw	6
  5334  018CAC  6EE6               	movwf	postinc1,c
  5335  018CAE  ECCB  F0D2         	call	_send_lcd_cmd	;wreg free
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;eadog.c: 70:  wdtdelay(30);
  5339  018CB2  0E1E               	movlw	30
  5340  018CB4  6EE6               	movwf	postinc1,c
  5341  018CB6  0E00               	movlw	0
  5342  018CB8  6EE6               	movwf	postinc1,c
  5343  018CBA  0E00               	movlw	0
  5344  018CBC  6EE6               	movwf	postinc1,c
  5345  018CBE  0E00               	movlw	0
  5346  018CC0  6EE6               	movwf	postinc1,c
  5347  018CC2  EC29  F0CE         	call	_wdtdelay	;wreg free
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5351  018CC6  0E02               	movlw	2
  5352  018CC8  013D               	movlb	61	; () banked
  5353  018CCA  6F16               	movwf	22,b	;volatile
  5354                           
  5355                           ; BSR set to: 61
  5356                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5357  018CCC  0E40               	movlw	64
  5358  018CCE  6F15               	movwf	21,b	;volatile
  5359                           
  5360                           ; BSR set to: 61
  5361                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5362  018CD0  0E83               	movlw	131
  5363  018CD2  6F14               	movwf	20,b	;volatile
  5364                           
  5365                           ; BSR set to: 61
  5366                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5367  018CD4  931A               	bcf	26,1,b	;volatile
  5368                           
  5369                           ; BSR set to: 61
  5370                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5371  018CD6  0E3F               	movlw	-193
  5372  018CD8  013B               	movlb	59	; () banked
  5373  018CDA  17FD               	andwf	253,f,b	;volatile
  5374                           
  5375                           ; BSR set to: 59
  5376                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5377  018CDC  9BFD               	bcf	253,5,b	;volatile
  5378                           
  5379                           ; BSR set to: 59
  5380                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5381  018CDE  51FD               	movf	253,w,b	;volatile
  5382  018CE0  0BF9               	andlw	-7
  5383  018CE2  0902               	iorlw	2
  5384  018CE4  6FFD               	movwf	253,b	;volatile
  5385                           
  5386                           ; BSR set to: 59
  5387                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5388  018CE6  0EE7               	movlw	-25
  5389  018CE8  17FD               	andwf	253,f,b	;volatile
  5390                           
  5391                           ; BSR set to: 59
  5392                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5393  018CEA  81FD               	bsf	253,0,b	;volatile
  5394                           
  5395                           ; BSR set to: 59
  5396                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5397  018CEC  0E43               	movlw	low _ring_buf1
  5398  018CEE  6FF9               	movwf	249,b	;volatile
  5399  018CF0  0E04               	movlw	high _ring_buf1
  5400  018CF2  6FFA               	movwf	250,b	;volatile
  5401  018CF4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5402  018CF6  6FFB               	movwf	251,b	;volatile
  5403                           
  5404                           ; BSR set to: 59
  5405                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5406  018CF8  9BFC               	bcf	252,5,b	;volatile
  5407                           
  5408                           ; BSR set to: 59
  5409                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5410  018CFA  013D               	movlb	61	; () banked
  5411  018CFC  831A               	bsf	26,1,b	;volatile
  5412                           
  5413                           ; BSR set to: 61
  5414                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5415  018CFE  94BE               	bcf	190,2,c	;volatile
  5416                           
  5417                           ; BSR set to: 61
  5418                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5419  018D00  0012               	return		;funcret
  5420  018D02                     __end_of_init_display:
  5421                           	opt callstack 0
  5422                           
  5423 ;; *************** function _send_lcd_cmd_long *****************
  5424 ;; Defined at:
  5425 ;;		line 129 in file "eadog.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  cmd             1  [STACK] const unsigned char 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1  [STACK] void 
  5432 ;; Registers used:
  5433 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5434 ;; Tracked objects:
  5435 ;;		On entry : 3F/0
  5436 ;;		On exit  : 3F/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5443 ;;Total ram usage:        0 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:   16
  5446 ;; This function calls:
  5447 ;;		_SPI1_Exchange8bit
  5448 ;;		_wdtdelay
  5449 ;; This function is called by:
  5450 ;;		_init_display
  5451 ;; This function uses a reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text11
  5455  01A56E                     __ptext11:
  5456                           	opt callstack 0
  5457  01A56E                     _send_lcd_cmd_long:
  5458                           	opt callstack 13
  5459                           
  5460                           ; BSR set to: 61
  5461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5462                           ;incstack = 0
  5463                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5464  01A56E  92BC               	bcf	188,1,c	;volatile
  5465                           
  5466                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5467  01A570  94BC               	bcf	188,2,c	;volatile
  5468                           
  5469                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5470                           ;stkvar	_cmd @ sp[(0)+-1]
  5471  01A572  0EFF               	movlw	-1
  5472  01A574  50E3               	movf	plusw1,w,c
  5473  01A576  6EE6               	movwf	postinc1,c
  5474  01A578  ECAB  F0D4         	call	_SPI1_Exchange8bit	;wreg free
  5475                           
  5476                           ; BSR set to: 57
  5477                           ;eadog.c: 134:  wdtdelay(800);
  5478  01A57C  0E20               	movlw	32
  5479  01A57E  6EE6               	movwf	postinc1,c
  5480  01A580  0E03               	movlw	3
  5481  01A582  6EE6               	movwf	postinc1,c
  5482  01A584  0E00               	movlw	0
  5483  01A586  6EE6               	movwf	postinc1,c
  5484  01A588  0E00               	movlw	0
  5485  01A58A  6EE6               	movwf	postinc1,c
  5486  01A58C  EC29  F0CE         	call	_wdtdelay	;wreg free
  5487                           
  5488                           ; BSR set to: 0
  5489  01A590  82BC               	bsf	188,1,c	;volatile
  5490                           
  5491                           ; BSR set to: 0
  5492                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5493  01A592  52E5               	movf	postdec1,f,c
  5494  01A594  0012               	return		;funcret
  5495  01A596                     __end_of_send_lcd_cmd_long:
  5496                           	opt callstack 0
  5497                           
  5498 ;; *************** function _send_lcd_cmd *****************
  5499 ;; Defined at:
  5500 ;;		line 117 in file "eadog.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  cmd             1  [STACK] const unsigned char 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1  [STACK] void 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5509 ;; Tracked objects:
  5510 ;;		On entry : 3F/0
  5511 ;;		On exit  : 3F/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5518 ;;Total ram usage:        0 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:   16
  5521 ;; This function calls:
  5522 ;;		_SPI1_Exchange8bit
  5523 ;;		_wdtdelay
  5524 ;; This function is called by:
  5525 ;;		_init_display
  5526 ;; This function uses a reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text12
  5530  01A596                     __ptext12:
  5531                           	opt callstack 0
  5532  01A596                     _send_lcd_cmd:
  5533                           	opt callstack 13
  5534                           
  5535                           ; BSR set to: 0
  5536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5537                           ;incstack = 0
  5538                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5539  01A596  92BC               	bcf	188,1,c	;volatile
  5540                           
  5541                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5542  01A598  94BC               	bcf	188,2,c	;volatile
  5543                           
  5544                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5545                           ;stkvar	_cmd @ sp[(0)+-1]
  5546  01A59A  0EFF               	movlw	-1
  5547  01A59C  50E3               	movf	plusw1,w,c
  5548  01A59E  6EE6               	movwf	postinc1,c
  5549  01A5A0  ECAB  F0D4         	call	_SPI1_Exchange8bit	;wreg free
  5550                           
  5551                           ; BSR set to: 57
  5552                           ;eadog.c: 122:  wdtdelay(30);
  5553  01A5A4  0E1E               	movlw	30
  5554  01A5A6  6EE6               	movwf	postinc1,c
  5555  01A5A8  0E00               	movlw	0
  5556  01A5AA  6EE6               	movwf	postinc1,c
  5557  01A5AC  0E00               	movlw	0
  5558  01A5AE  6EE6               	movwf	postinc1,c
  5559  01A5B0  0E00               	movlw	0
  5560  01A5B2  6EE6               	movwf	postinc1,c
  5561  01A5B4  EC29  F0CE         	call	_wdtdelay	;wreg free
  5562                           
  5563                           ; BSR set to: 0
  5564  01A5B8  82BC               	bsf	188,1,c	;volatile
  5565                           
  5566                           ; BSR set to: 0
  5567                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5568  01A5BA  52E5               	movf	postdec1,f,c
  5569  01A5BC  0012               	return		;funcret
  5570  01A5BE                     __end_of_send_lcd_cmd:
  5571                           	opt callstack 0
  5572                           
  5573 ;; *************** function _SPI1_Exchange8bit *****************
  5574 ;; Defined at:
  5575 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  data            1  [STACK] unsigned char 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1  [STACK] unsigned char 
  5582 ;; Registers used:
  5583 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 3F/39
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5593 ;;Total ram usage:        0 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:   15
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_send_lcd_cmd
  5600 ;;		_send_lcd_cmd_long
  5601 ;; This function uses a reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text13
  5605  01A956                     __ptext13:
  5606                           	opt callstack 0
  5607  01A956                     _SPI1_Exchange8bit:
  5608                           	opt callstack 13
  5609                           
  5610                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5611                           
  5612                           ; BSR set to: 0
  5613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5614                           ;incstack = 0
  5615  01A956  0E01               	movlw	1
  5616  01A958  013D               	movlb	61	; () banked
  5617  01A95A  6F12               	movwf	18,b	;volatile
  5618                           
  5619                           ; BSR set to: 61
  5620                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5621                           ;stkvar	_data @ sp[(0)+-1]
  5622  01A95C  0EFF               	movlw	-1
  5623  01A95E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5624  01A964                     l807:
  5625                           
  5626                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5627  01A964  0139               	movlb	57	; () banked
  5628  01A966  A9A2               	btfss	162,4,b	;volatile
  5629  01A968  D7FD               	goto	l807
  5630                           
  5631                           ; BSR set to: 57
  5632                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5633  01A96A  006F F440  F001    	movff	15632,btemp	;volatile
  5634                           
  5635                           ; BSR set to: 57
  5636                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5637  01A970  52E5               	movf	postdec1,f,c
  5638  01A972  0012               	return		;funcret
  5639  01A974                     __end_of_SPI1_Exchange8bit:
  5640                           	opt callstack 0
  5641                           
  5642 ;; *************** function _ringBufS_init *****************
  5643 ;; Defined at:
  5644 ;;		line 22 in file "ringbufs.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  _this           2  [STACK] PTR volatile struct ring
  5647 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1  [STACK] void 
  5652 ;; Registers used:
  5653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5663 ;;Total ram usage:        0 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:   16
  5666 ;; This function calls:
  5667 ;;		_memset
  5668 ;; This function is called by:
  5669 ;;		_init_display
  5670 ;; This function uses a reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text14
  5674  01A5BE                     __ptext14:
  5675                           	opt callstack 0
  5676  01A5BE                     _ringBufS_init:
  5677                           	opt callstack 13
  5678                           
  5679                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5680                           
  5681                           ; BSR set to: 57
  5682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5683                           ;incstack = 0
  5684  01A5BE  0E43               	movlw	67
  5685  01A5C0  6EE6               	movwf	postinc1,c
  5686  01A5C2  0E00               	movlw	0
  5687  01A5C4  6EE6               	movwf	postinc1,c
  5688  01A5C6  0E00               	movlw	0
  5689  01A5C8  6EE6               	movwf	postinc1,c
  5690  01A5CA  0E00               	movlw	0
  5691  01A5CC  6EE6               	movwf	postinc1,c
  5692                           
  5693                           ;stkvar	__this @ sp[(-4)+-2]
  5694  01A5CE  0EFA               	movlw	-6
  5695  01A5D0  006F FF8F FFE6     	movff	plusw1,postinc1
  5696  01A5D6  006F FF8F FFE6     	movff	plusw1,postinc1
  5697  01A5DC  EC52  F0AF         	call	_memset	;wreg free
  5698                           
  5699                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5700  01A5E0  52E5               	movf	postdec1,f,c
  5701  01A5E2  52E5               	movf	postdec1,f,c
  5702  01A5E4  0012               	return		;funcret
  5703  01A5E6                     __end_of_ringBufS_init:
  5704                           	opt callstack 0
  5705                           
  5706 ;; *************** function _init_bsoc *****************
  5707 ;; Defined at:
  5708 ;;		line 87 in file "bsoc.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1  [STACK] void 
  5715 ;; Registers used:
  5716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5717 ;; Tracked objects:
  5718 ;;		On entry : 3F/1
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5726 ;;Total ram usage:        0 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:   18
  5729 ;; This function calls:
  5730 ;;		_TMR3_SetInterruptHandler
  5731 ;;		_Volts_to_SOC
  5732 ;;		___fldiv
  5733 ;;		___flmul
  5734 ;;		___fltol
  5735 ;;		___xxtofl
  5736 ;;		_conv_raw_result
  5737 ;; This function is called by:
  5738 ;;		_main
  5739 ;; This function uses a reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text15
  5743  017B70                     __ptext15:
  5744                           	opt callstack 0
  5745  017B70                     _init_bsoc:
  5746                           	opt callstack 12
  5747                           
  5748                           ;bsoc.c: 92:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  5749                           
  5750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5751                           ;incstack = 0
  5752  017B70  0E00               	movlw	0
  5753  017B72  6EE6               	movwf	postinc1,c
  5754  017B74  0E00               	movlw	0
  5755  017B76  6EE6               	movwf	postinc1,c
  5756  017B78  0E7A               	movlw	122
  5757  017B7A  6EE6               	movwf	postinc1,c
  5758  017B7C  0E44               	movlw	68
  5759  017B7E  6EE6               	movwf	postinc1,c
  5760  017B80  0E00               	movlw	0
  5761  017B82  6EE6               	movwf	postinc1,c
  5762  017B84  0E04               	movlw	4
  5763  017B86  6EE6               	movwf	postinc1,c
  5764  017B88  ECB8  F0A3         	call	_conv_raw_result	;wreg free
  5765  017B8C  0060  F007  FFE6   	movff	btemp,postinc1
  5766  017B92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5767  017B98  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5768  017B9E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5769  017BA4  ECFF  F0BC         	call	___fltol	;wreg free
  5770  017BA8  0060  F007  FFE6   	movff	btemp,postinc1
  5771  017BAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5772  017BB4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5773  017BBA  0060  F013  FFE6   	movff	btemp+3,postinc1
  5774  017BC0  0E00               	movlw	0
  5775  017BC2  6EE6               	movwf	postinc1,c
  5776  017BC4  ECDA  F0B7         	call	___xxtofl	;wreg free
  5777  017BC8  0060  F007  FFE6   	movff	btemp,postinc1
  5778  017BCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5779  017BD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5780  017BDA  0060  F013  FFE6   	movff	btemp+3,postinc1
  5781  017BE0  ECC5  F095         	call	___flmul	;wreg free
  5782  017BE4  0060  F007  FFE6   	movff	btemp,postinc1
  5783  017BEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5784  017BF0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5785  017BF6  0060  F013  FFE6   	movff	btemp+3,postinc1
  5786  017BFC  ECFF  F0BC         	call	___fltol	;wreg free
  5787  017C00  0060  F007  FFE6   	movff	btemp,postinc1
  5788  017C06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5789  017C0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5790  017C12  0060  F013  FFE6   	movff	btemp+3,postinc1
  5791  017C18  EC69  F0CA         	call	_Volts_to_SOC	;wreg free
  5792  017C1C  0060  F004  F1AA   	movff	btemp,_C+170	;volatile
  5793  017C22  0060  F008  F1AB   	movff	btemp+1,_C+171	;volatile
  5794                           
  5795                           ;bsoc.c: 93:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  5796  017C28  0060  F623  FFE6   	movff	_C+136,postinc1
  5797  017C2E  0060  F627  FFE6   	movff	_C+137,postinc1
  5798  017C34  0060  F62B  FFE6   	movff	_C+138,postinc1
  5799  017C3A  0060  F62F  FFE6   	movff	_C+139,postinc1
  5800  017C40  0E00               	movlw	0
  5801  017C42  6EE6               	movwf	postinc1,c
  5802  017C44  0E00               	movlw	0
  5803  017C46  6EE6               	movwf	postinc1,c
  5804  017C48  0EC8               	movlw	200
  5805  017C4A  6EE6               	movwf	postinc1,c
  5806  017C4C  0E42               	movlw	66
  5807  017C4E  6EE6               	movwf	postinc1,c
  5808  017C50  0101               	movlb	1	; () banked
  5809  017C52  51AA               	movf	(_C+170)& (0+255),w,b	;volatile
  5810  017C54  6E09               	movwf	(btemp+8)^0,c
  5811  017C56  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
  5812  017C58  6E0A               	movwf	(btemp+9)^0,c
  5813  017C5A  6A0B               	clrf	(btemp+10)^0,c
  5814  017C5C  6A0C               	clrf	(btemp+11)^0,c
  5815  017C5E  0060  F027  FFE6   	movff	btemp+8,postinc1
  5816  017C64  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5817  017C6A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5818  017C70  0060  F033  FFE6   	movff	btemp+11,postinc1
  5819  017C76  0E00               	movlw	0
  5820  017C78  6EE6               	movwf	postinc1,c
  5821  017C7A  ECDA  F0B7         	call	___xxtofl	;wreg free
  5822  017C7E  0060  F007  FFE6   	movff	btemp,postinc1
  5823  017C84  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5824  017C8A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5825  017C90  0060  F013  FFE6   	movff	btemp+3,postinc1
  5826  017C96  ECFB  F0A0         	call	___fldiv	;wreg free
  5827  017C9A  0060  F007  FFE6   	movff	btemp,postinc1
  5828  017CA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5829  017CA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5830  017CAC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5831  017CB2  ECC5  F095         	call	___flmul	;wreg free
  5832  017CB6  0060  F004  F18C   	movff	btemp,_C+140	;volatile
  5833  017CBC  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
  5834  017CC2  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
  5835  017CC8  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
  5836                           
  5837                           ;bsoc.c: 94:  TMR3_SetInterruptHandler(calc_bsoc);
  5838  017CCE  0E70               	movlw	low _calc_bsoc
  5839  017CD0  6EE6               	movwf	postinc1,c
  5840  017CD2  0E3B               	movlw	high _calc_bsoc
  5841  017CD4  6EE6               	movwf	postinc1,c
  5842  017CD6  0E01               	movlw	low (_calc_bsoc shr (0+16))
  5843  017CD8  6EE6               	movwf	postinc1,c
  5844  017CDA  EC6B  F0D3         	call	_TMR3_SetInterruptHandler	;wreg free
  5845                           
  5846                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5847  017CDE  0012               	return		;funcret
  5848  017CE0                     __end_of_init_bsoc:
  5849                           	opt callstack 0
  5850                           
  5851 ;; *************** function _Volts_to_SOC *****************
  5852 ;; Defined at:
  5853 ;;		line 151 in file "bsoc.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  cvoltage        4  [STACK] unsigned long 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;		None
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  2  [STACK] unsigned short 
  5860 ;; Registers used:
  5861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/1
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5871 ;;Total ram usage:        0 bytes
  5872 ;; Hardware stack levels used:    1
  5873 ;; Hardware stack levels required when called:   15
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_init_bsoc
  5878 ;; This function uses a reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text16
  5882  0194D2                     __ptext16:
  5883                           	opt callstack 0
  5884  0194D2                     _Volts_to_SOC:
  5885                           	opt callstack 14
  5886                           
  5887                           ;bsoc.c: 151: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 152: {;bsoc.c: 153:  stat
      +                          ic uint8_t slot;;bsoc.c: 155:  C.soc = 0;
  5888                           
  5889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5890                           ;incstack = 0
  5891  0194D2  0101               	movlb	1	; () banked
  5892  0194D4  6BAA               	clrf	(_C+170)& (0+255),b	;volatile
  5893  0194D6  6BAB               	clrf	(_C+171)& (0+255),b	;volatile
  5894                           
  5895                           ;bsoc.c: 156:  for (slot = 0; slot < 26; slot++) {
  5896  0194D8  6A2D               	clrf	Volts_to_SOC@slot^0,c
  5897  0194DA                     l10008:
  5898                           
  5899                           ;bsoc.c: 157:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  5900                           ;stkvar	_cvoltage @ sp[(0)+-4]
  5901  0194DA  502D               	movf	Volts_to_SOC@slot^0,w,c
  5902  0194DC  0D08               	mullw	8
  5903  0194DE  0E59               	movlw	low _BVSOC_TABLE
  5904  0194E0  24F3               	addwf	243,w,c
  5905  0194E2  6EF6               	movwf	tblptrl,c
  5906  0194E4  0EFC               	movlw	high _BVSOC_TABLE
  5907  0194E6  20F4               	addwfc	244,w,c
  5908  0194E8  6EF7               	movwf	tblptrh,c
  5909  0194EA                     	if	1	;There are 3 active tblptr bytes
  5910  0194EA  6AF8               	clrf	tblptru,c
  5911  0194EC  0E00               	movlw	low (__mediumconst shr (0+16))
  5912  0194EE  22F8               	addwfc	tblptru,f,c
  5913  0194F0                     	endif
  5914  0194F0  0EFC               	movlw	-4
  5915  0194F2  50E3               	movf	plusw1,w,c
  5916  0194F4  0009               	tblrd		*+
  5917  0194F6  5CF5               	subwf	tablat,w,c
  5918  0194F8  0EFD               	movlw	-3
  5919  0194FA  50E3               	movf	plusw1,w,c
  5920  0194FC  0009               	tblrd		*+
  5921  0194FE  58F5               	subwfb	tablat,w,c
  5922  019500  0EFE               	movlw	-2
  5923  019502  50E3               	movf	plusw1,w,c
  5924  019504  0009               	tblrd		*+
  5925  019506  58F5               	subwfb	tablat,w,c
  5926  019508  0EFF               	movlw	-1
  5927  01950A  50E3               	movf	plusw1,w,c
  5928  01950C  0009               	tblrd		*+
  5929  01950E  58F5               	subwfb	tablat,w,c
  5930  019510  B0D8               	btfsc	status,0,c
  5931  019512  D017               	goto	l10012
  5932                           
  5933                           ;bsoc.c: 158:    C.soc = BVSOC_TABLE[slot][1];
  5934  019514  502D               	movf	Volts_to_SOC@slot^0,w,c
  5935  019516  0D08               	mullw	8
  5936  019518  0E04               	movlw	4
  5937  01951A  26F3               	addwf	243,f,c
  5938  01951C  0E00               	movlw	0
  5939  01951E  22F4               	addwfc	244,f,c
  5940  019520  0E59               	movlw	low _BVSOC_TABLE
  5941  019522  24F3               	addwf	243,w,c
  5942  019524  6EF6               	movwf	tblptrl,c
  5943  019526  0EFC               	movlw	high _BVSOC_TABLE
  5944  019528  20F4               	addwfc	244,w,c
  5945  01952A  6EF7               	movwf	tblptrh,c
  5946  01952C                     	if	1	;There are 3 active tblptr bytes
  5947  01952C  6AF8               	clrf	tblptru,c
  5948  01952E  0E00               	movlw	low (__mediumconst shr (0+16))
  5949  019530  22F8               	addwfc	tblptru,f,c
  5950  019532                     	endif
  5951  019532  0009               	tblrd		*+
  5952  019534  006F FFD4  F1AA    	movff	tablat,_C+170	;volatile
  5953  01953A  000A               	tblrd		*-
  5954  01953C  006F FFD4  F1AB    	movff	tablat,_C+171	;volatile
  5955  019542                     l10012:
  5956                           
  5957                           ;bsoc.c: 160:  }
  5958  019542  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  5959  019544  0E19               	movlw	25
  5960  019546  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  5961  019548  D7C8               	goto	l10008
  5962                           
  5963                           ;bsoc.c: 162:  return C.soc;
  5964  01954A  EE20  F1AA         	lfsr	2,_C+170	;volatile
  5965  01954E  006F FF78  F001    	movff	postinc2,btemp
  5966  019554  006F FF74  F002    	movff	postdec2,btemp+1
  5967                           
  5968                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  5969  01955A  52E5               	movf	postdec1,f,c
  5970  01955C  52E5               	movf	postdec1,f,c
  5971  01955E  52E5               	movf	postdec1,f,c
  5972  019560  52E5               	movf	postdec1,f,c
  5973  019562  0012               	return		;funcret
  5974  019564                     __end_of_Volts_to_SOC:
  5975                           	opt callstack 0
  5976                           
  5977 ;; *************** function _hid_display *****************
  5978 ;; Defined at:
  5979 ;;		line 17 in file "hid.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  h               1  [STACK] PTR struct H_data
  5982 ;;		 -> H(7), 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1  [STACK] PTR struct H_data
  5987 ;; Registers used:
  5988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  5989 ;; Tracked objects:
  5990 ;;		On entry : 3F/1
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:   17
  6001 ;; This function calls:
  6002 ;;		_hid_input
  6003 ;; This function is called by:
  6004 ;;		_main
  6005 ;; This function uses a reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text17
  6009  018B16                     __ptext17:
  6010                           	opt callstack 0
  6011  018B16                     _hid_display:
  6012                           	opt callstack 13
  6013                           
  6014                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  6015                           ;stkvar	_h @ sp[(0)+-1]
  6016                           
  6017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6018                           ;incstack = 0
  6019  018B16  0EFF               	movlw	-1
  6020  018B18  50E3               	movf	plusw1,w,c
  6021  018B1A  6EE6               	movwf	postinc1,c
  6022  018B1C  EC44  F0CB         	call	_hid_input	;wreg free
  6023                           
  6024                           ;hid.c: 21:  switch (h->h_state) {
  6025  018B20  D066               	goto	l10336
  6026  018B22                     l10314:
  6027                           
  6028                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  6029                           ;stkvar	_h @ sp[(0)+-1]
  6030  018B22  0EFF               	movlw	-1
  6031  018B24  50E3               	movf	plusw1,w,c
  6032  018B26  6ED9               	movwf	fsr2l,c
  6033  018B28  6ADA               	clrf	fsr2h,c
  6034  018B2A  0E01               	movlw	1
  6035  018B2C  26D9               	addwf	fsr2l,f,c
  6036  018B2E  0E01               	movlw	1
  6037  018B30  6EDF               	movwf	indf2,c
  6038                           
  6039                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  6040                           ;stkvar	_h @ sp[(0)+-1]
  6041  018B32  0EFF               	movlw	-1
  6042  018B34  50E3               	movf	plusw1,w,c
  6043  018B36  6ED9               	movwf	fsr2l,c
  6044  018B38  6ADA               	clrf	fsr2h,c
  6045  018B3A  0E00               	movlw	0
  6046  018B3C  6EDF               	movwf	indf2,c
  6047                           
  6048                           ;hid.c: 25:   h->wait_enter = 1;
  6049                           ;stkvar	_h @ sp[(0)+-1]
  6050  018B3E  0EFF               	movlw	-1
  6051  018B40  50E3               	movf	plusw1,w,c
  6052  018B42  6ED9               	movwf	fsr2l,c
  6053  018B44  6ADA               	clrf	fsr2h,c
  6054  018B46  0E04               	movlw	4
  6055  018B48  26D9               	addwf	fsr2l,f,c
  6056  018B4A  0E01               	movlw	1
  6057  018B4C  6EDF               	movwf	indf2,c
  6058                           
  6059                           ;hid.c: 26:   h->wait_select = 1;
  6060                           ;stkvar	_h @ sp[(0)+-1]
  6061  018B4E  0EFF               	movlw	-1
  6062  018B50  50E3               	movf	plusw1,w,c
  6063  018B52  6ED9               	movwf	fsr2l,c
  6064  018B54  6ADA               	clrf	fsr2h,c
  6065  018B56  0E02               	movlw	2
  6066  018B58  26D9               	addwf	fsr2l,f,c
  6067  018B5A  0E01               	movlw	1
  6068  018B5C  6EDF               	movwf	indf2,c
  6069                           
  6070                           ;hid.c: 27:   h->select_p = SW_OFF;
  6071                           ;stkvar	_h @ sp[(0)+-1]
  6072  018B5E  0EFF               	movlw	-1
  6073  018B60  50E3               	movf	plusw1,w,c
  6074  018B62  6ED9               	movwf	fsr2l,c
  6075  018B64  6ADA               	clrf	fsr2h,c
  6076  018B66  0E03               	movlw	3
  6077  018B68  26D9               	addwf	fsr2l,f,c
  6078  018B6A  0E00               	movlw	0
  6079  018B6C  6EDF               	movwf	indf2,c
  6080                           
  6081                           ;hid.c: 28:   h->enter_p = SW_OFF;
  6082                           ;stkvar	_h @ sp[(0)+-1]
  6083  018B6E  0EFF               	movlw	-1
  6084  018B70  50E3               	movf	plusw1,w,c
  6085  018B72  6ED9               	movwf	fsr2l,c
  6086  018B74  6ADA               	clrf	fsr2h,c
  6087  018B76  0E05               	movlw	5
  6088  018B78  26D9               	addwf	fsr2l,f,c
  6089  018B7A  0E00               	movlw	0
  6090  018B7C  D036               	goto	L1
  6091  018B7E                     l10326:
  6092                           
  6093                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  6094                           ;stkvar	_h @ sp[(0)+-1]
  6095  018B7E  0EFF               	movlw	-1
  6096  018B80  50E3               	movf	plusw1,w,c
  6097  018B82  6ED9               	movwf	fsr2l,c
  6098  018B84  6ADA               	clrf	fsr2h,c
  6099  018B86  0E02               	movlw	2
  6100  018B88  26D9               	addwf	fsr2l,f,c
  6101  018B8A  50DF               	movf	indf2,w,c
  6102  018B8C  A4D8               	btfss	status,2,c
  6103  018B8E  D042               	goto	l1898
  6104                           
  6105                           ;stkvar	_h @ sp[(0)+-1]
  6106  018B90  0EFF               	movlw	-1
  6107  018B92  50E3               	movf	plusw1,w,c
  6108  018B94  6ED9               	movwf	fsr2l,c
  6109  018B96  6ADA               	clrf	fsr2h,c
  6110  018B98  0E03               	movlw	3
  6111  018B9A  26D9               	addwf	fsr2l,f,c
  6112  018B9C  50DF               	movf	indf2,w,c
  6113  018B9E  A4D8               	btfss	status,2,c
  6114  018BA0  D039               	goto	l1898
  6115                           
  6116                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  6117                           ;stkvar	_h @ sp[(0)+-1]
  6118  018BA2  0EFF               	movlw	-1
  6119  018BA4  50E3               	movf	plusw1,w,c
  6120  018BA6  6ED9               	movwf	fsr2l,c
  6121  018BA8  6ADA               	clrf	fsr2h,c
  6122  018BAA  0E06               	movlw	6
  6123  018BAC  26D9               	addwf	fsr2l,f,c
  6124                           
  6125                           ;stkvar	_h @ sp[(0)+-1]
  6126  018BAE  0EFF               	movlw	-1
  6127  018BB0  50E3               	movf	plusw1,w,c
  6128  018BB2  6EE9               	movwf	fsr0l,c
  6129  018BB4  6AEA               	clrf	fsr0h,c
  6130  018BB6  0E06               	movlw	6
  6131  018BB8  26E9               	addwf	fsr0l,f,c
  6132  018BBA  2AEF               	incf	indf0,f,c
  6133  018BBC  50EF               	movf	indf0,w,c
  6134  018BBE  0B03               	andlw	3
  6135  018BC0  6EDF               	movwf	indf2,c
  6136                           
  6137                           ;hid.c: 34:    h->hid_display = h->sequence;
  6138                           ;stkvar	_h @ sp[(0)+-1]
  6139  018BC2  0EFF               	movlw	-1
  6140  018BC4  50E3               	movf	plusw1,w,c
  6141  018BC6  6ED9               	movwf	fsr2l,c
  6142  018BC8  6ADA               	clrf	fsr2h,c
  6143  018BCA  0E06               	movlw	6
  6144  018BCC  26D9               	addwf	fsr2l,f,c
  6145                           
  6146                           ;stkvar	_h @ sp[(0)+-1]
  6147  018BCE  0EFF               	movlw	-1
  6148  018BD0  50E3               	movf	plusw1,w,c
  6149  018BD2  6EE9               	movwf	fsr0l,c
  6150  018BD4  6AEA               	clrf	fsr0h,c
  6151  018BD6  006F FF7F FFEF     	movff	indf2,indf0
  6152                           
  6153                           ;hid.c: 35:    h->wait_select = 1;
  6154                           ;stkvar	_h @ sp[(0)+-1]
  6155  018BDC  0EFF               	movlw	-1
  6156  018BDE  50E3               	movf	plusw1,w,c
  6157  018BE0  6ED9               	movwf	fsr2l,c
  6158  018BE2  6ADA               	clrf	fsr2h,c
  6159  018BE4  0E02               	movlw	2
  6160  018BE6  26D9               	addwf	fsr2l,f,c
  6161  018BE8  0E01               	movlw	1
  6162  018BEA                     L1:
  6163  018BEA  6EDF               	movwf	indf2,c
  6164  018BEC  D013               	goto	l1898
  6165  018BEE                     l10336:
  6166                           
  6167                           ;stkvar	_h @ sp[(0)+-1]
  6168  018BEE  0EFF               	movlw	-1
  6169  018BF0  50E3               	movf	plusw1,w,c
  6170  018BF2  6ED9               	movwf	fsr2l,c
  6171  018BF4  6ADA               	clrf	fsr2h,c
  6172  018BF6  0E01               	movlw	1
  6173  018BF8  26D9               	addwf	fsr2l,f,c
  6174  018BFA  50DF               	movf	indf2,w,c
  6175  018BFC  6E0B               	movwf	(btemp+10)^0,c
  6176  018BFE  6A0C               	clrf	(btemp+11)^0,c
  6177                           
  6178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6179                           ; Switch size 1, requested type "simple"
  6180                           ; Number of cases is 1, Range of values is 0 to 0
  6181                           ; switch strategies available:
  6182                           ; Name         Instructions Cycles
  6183                           ; simple_byte            4     3 (average)
  6184                           ;	Chosen strategy is simple_byte
  6185  018C00  500C               	movf	(btemp+11)^0,w,c
  6186  018C02  0A00               	xorlw	0	; case 0
  6187  018C04  A4D8               	btfss	status,2,c
  6188  018C06  D7BB               	goto	l10326
  6189                           
  6190                           ; Switch size 1, requested type "simple"
  6191                           ; Number of cases is 2, Range of values is 0 to 1
  6192                           ; switch strategies available:
  6193                           ; Name         Instructions Cycles
  6194                           ; simple_byte            7     4 (average)
  6195                           ;	Chosen strategy is simple_byte
  6196  018C08  500B               	movf	(btemp+10)^0,w,c
  6197  018C0A  0A00               	xorlw	0	; case 0
  6198  018C0C  B4D8               	btfsc	status,2,c
  6199  018C0E  D789               	goto	l10314
  6200  018C10  0A01               	xorlw	1	; case 1
  6201  018C12  D7B5               	goto	l10326
  6202  018C14                     l1898:
  6203                           
  6204                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6205  018C14  52E5               	movf	postdec1,f,c
  6206  018C16  0012               	return		;funcret
  6207  018C18                     __end_of_hid_display:
  6208                           	opt callstack 0
  6209                           
  6210 ;; *************** function _hid_input *****************
  6211 ;; Defined at:
  6212 ;;		line 3 in file "hid.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  h               1  [STACK] PTR struct H_data
  6215 ;;		 -> H(7), 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1  [STACK] PTR struct H_data
  6220 ;; Registers used:
  6221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/1
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6231 ;;Total ram usage:        0 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:   16
  6234 ;; This function calls:
  6235 ;;		_get_switch
  6236 ;; This function is called by:
  6237 ;;		_hid_display
  6238 ;; This function uses a reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text18
  6242  019688                     __ptext18:
  6243                           	opt callstack 0
  6244  019688                     _hid_input:
  6245                           	opt callstack 13
  6246                           
  6247                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  6248                           
  6249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6250                           ;incstack = 0
  6251  019688  0E02               	movlw	2
  6252  01968A  6EE6               	movwf	postinc1,c
  6253  01968C  EC5F  F0D2         	call	_get_switch	;wreg free
  6254  019690  5001               	movf	btemp^0,w,c
  6255  019692  B4D8               	btfsc	status,2,c
  6256  019694  D01C               	goto	l9940
  6257                           
  6258                           ;hid.c: 6:   h->wait_select = 0;
  6259                           ;stkvar	_h @ sp[(0)+-1]
  6260  019696  0EFF               	movlw	-1
  6261  019698  50E3               	movf	plusw1,w,c
  6262  01969A  6ED9               	movwf	fsr2l,c
  6263  01969C  6ADA               	clrf	fsr2h,c
  6264  01969E  0E02               	movlw	2
  6265  0196A0  26D9               	addwf	fsr2l,f,c
  6266  0196A2  0E00               	movlw	0
  6267  0196A4  6EDF               	movwf	indf2,c
  6268                           
  6269                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  6270  0196A6  0E02               	movlw	2
  6271  0196A8  6EE6               	movwf	postinc1,c
  6272  0196AA  EC5F  F0D2         	call	_get_switch	;wreg free
  6273  0196AE  5001               	movf	btemp^0,w,c
  6274  0196B0  B4D8               	btfsc	status,2,c
  6275  0196B2  D003               	goto	u9170
  6276  0196B4  6A0C               	clrf	(btemp+11)^0,c
  6277  0196B6  2A0C               	incf	(btemp+11)^0,f,c
  6278  0196B8  D001               	goto	u9188
  6279  0196BA                     u9170:
  6280  0196BA  6A0C               	clrf	(btemp+11)^0,c
  6281  0196BC                     u9188:
  6282                           
  6283                           ;stkvar	_h @ sp[(0)+-1]
  6284  0196BC  0EFF               	movlw	-1
  6285  0196BE  50E3               	movf	plusw1,w,c
  6286  0196C0  6ED9               	movwf	fsr2l,c
  6287  0196C2  6ADA               	clrf	fsr2h,c
  6288  0196C4  0E03               	movlw	3
  6289  0196C6  26D9               	addwf	fsr2l,f,c
  6290  0196C8  0060  F033  FFDF   	movff	btemp+11,indf2
  6291  0196CE                     l9940:
  6292                           
  6293                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6294  0196CE  0E03               	movlw	3
  6295  0196D0  6EE6               	movwf	postinc1,c
  6296  0196D2  EC5F  F0D2         	call	_get_switch	;wreg free
  6297  0196D6  5001               	movf	btemp^0,w,c
  6298  0196D8  B4D8               	btfsc	status,2,c
  6299  0196DA  D01C               	goto	l1889
  6300                           
  6301                           ;hid.c: 11:   h->wait_enter = 0;
  6302                           ;stkvar	_h @ sp[(0)+-1]
  6303  0196DC  0EFF               	movlw	-1
  6304  0196DE  50E3               	movf	plusw1,w,c
  6305  0196E0  6ED9               	movwf	fsr2l,c
  6306  0196E2  6ADA               	clrf	fsr2h,c
  6307  0196E4  0E04               	movlw	4
  6308  0196E6  26D9               	addwf	fsr2l,f,c
  6309  0196E8  0E00               	movlw	0
  6310  0196EA  6EDF               	movwf	indf2,c
  6311                           
  6312                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6313  0196EC  0E03               	movlw	3
  6314  0196EE  6EE6               	movwf	postinc1,c
  6315  0196F0  EC5F  F0D2         	call	_get_switch	;wreg free
  6316  0196F4  5001               	movf	btemp^0,w,c
  6317  0196F6  B4D8               	btfsc	status,2,c
  6318  0196F8  D003               	goto	u9200
  6319  0196FA  6A0C               	clrf	(btemp+11)^0,c
  6320  0196FC  2A0C               	incf	(btemp+11)^0,f,c
  6321  0196FE  D001               	goto	u9218
  6322  019700                     u9200:
  6323  019700  6A0C               	clrf	(btemp+11)^0,c
  6324  019702                     u9218:
  6325                           
  6326                           ;stkvar	_h @ sp[(0)+-1]
  6327  019702  0EFF               	movlw	-1
  6328  019704  50E3               	movf	plusw1,w,c
  6329  019706  6ED9               	movwf	fsr2l,c
  6330  019708  6ADA               	clrf	fsr2h,c
  6331  01970A  0E05               	movlw	5
  6332  01970C  26D9               	addwf	fsr2l,f,c
  6333  01970E  0060  F033  FFDF   	movff	btemp+11,indf2
  6334  019714                     l1889:
  6335                           
  6336                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6337  019714  52E5               	movf	postdec1,f,c
  6338  019716  0012               	return		;funcret
  6339  019718                     __end_of_hid_input:
  6340                           	opt callstack 0
  6341                           
  6342 ;; *************** function _get_switch *****************
  6343 ;; Defined at:
  6344 ;;		line 18 in file "dio.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  i               1  [STACK] unsigned char 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1  [STACK] enum E17021
  6351 ;; Registers used:
  6352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/2
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:   15
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;;		_hid_input
  6370 ;; This function uses a reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text19
  6374  01A4BE                     __ptext19:
  6375                           	opt callstack 0
  6376  01A4BE                     _get_switch:
  6377                           	opt callstack 13
  6378                           
  6379                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6380                           ;stkvar	_i @ sp[(0)+-1]
  6381                           
  6382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6383                           ;incstack = 0
  6384  01A4BE  0EFF               	movlw	-1
  6385  01A4C0  006F FF8C  F001    	movff	plusw1,btemp
  6386  01A4C6  0E03               	movlw	3
  6387  01A4C8  6401               	cpfsgt	btemp^0,c
  6388  01A4CA  D002               	goto	l9222
  6389                           
  6390                           ;dio.c: 21:   return SW_OFF;
  6391  01A4CC  0E00               	movlw	0
  6392  01A4CE  D00A               	goto	L2
  6393  01A4D0                     l9222:
  6394                           
  6395                           ;dio.c: 23:  return S.button[i].sw;
  6396                           ;stkvar	_i @ sp[(0)+-1]
  6397  01A4D0  0EFF               	movlw	-1
  6398  01A4D2  50E3               	movf	plusw1,w,c
  6399  01A4D4  0D05               	mullw	5
  6400  01A4D6  0EBC               	movlw	low _S
  6401  01A4D8  24F3               	addwf	243,w,c
  6402  01A4DA  6ED9               	movwf	fsr2l,c
  6403  01A4DC  0E02               	movlw	high _S
  6404  01A4DE  20F4               	addwfc	prodh,w,c
  6405  01A4E0  6EDA               	movwf	fsr2h,c
  6406  01A4E2  50DF               	movf	indf2,w,c
  6407  01A4E4                     L2:
  6408  01A4E4  6E01               	movwf	btemp^0,c
  6409                           
  6410                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6411  01A4E6  52E5               	movf	postdec1,f,c
  6412  01A4E8  0012               	return		;funcret
  6413  01A4EA                     __end_of_get_switch:
  6414                           	opt callstack 0
  6415                           
  6416 ;; *************** function _eaDogM_WriteCommand *****************
  6417 ;; Defined at:
  6418 ;;		line 175 in file "eadog.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  cmd             1  [STACK] const unsigned char 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1  [STACK] void 
  6425 ;; Registers used:
  6426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6427 ;; Tracked objects:
  6428 ;;		On entry : 3F/3D
  6429 ;;		On exit  : 3F/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6436 ;;Total ram usage:        0 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:   25
  6439 ;; This function calls:
  6440 ;;		_send_lcd_cmd_dma
  6441 ;; This function is called by:
  6442 ;;		_main
  6443 ;; This function uses a reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text20
  6447  01AB22                     __ptext20:
  6448                           	opt callstack 0
  6449  01AB22                     _eaDogM_WriteCommand:
  6450                           	opt callstack 5
  6451                           
  6452                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  6453                           ;stkvar	_cmd @ sp[(0)+-1]
  6454                           
  6455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6456                           ;incstack = 0
  6457  01AB22  0EFF               	movlw	-1
  6458  01AB24  50E3               	movf	plusw1,w,c
  6459  01AB26  6EE6               	movwf	postinc1,c
  6460  01AB28  ECB1  F0CE         	call	_send_lcd_cmd_dma	;wreg free
  6461                           
  6462                           ; BSR set to: 0
  6463                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  6464  01AB2C  52E5               	movf	postdec1,f,c
  6465  01AB2E  0012               	return		;funcret
  6466  01AB30                     __end_of_eaDogM_WriteCommand:
  6467                           	opt callstack 0
  6468                           
  6469 ;; *************** function _convert_adc_data *****************
  6470 ;; Defined at:
  6471 ;;		line 40 in file "mbmc.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  i               1  [STACK] unsigned char 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1  [STACK] void 
  6478 ;; Registers used:
  6479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/1
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6489 ;;Total ram usage:        0 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:   18
  6492 ;; This function calls:
  6493 ;;		_conv_raw_result
  6494 ;;		_lp_filter
  6495 ;; This function is called by:
  6496 ;;		_main
  6497 ;; This function uses a reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text21
  6501  019036                     __ptext21:
  6502                           	opt callstack 0
  6503  019036                     _convert_adc_data:
  6504                           	opt callstack 0
  6505                           
  6506                           ; BSR set to: 0
  6507                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6508  019036  52E6               	movf	postinc1,f,c
  6509                           
  6510                           ;mbmc.c: 42:  uint8_t i = 0;
  6511                           ;stkvar	_i @ sp[(-1)+0]
  6512                           
  6513                           ;incstack = 0
  6514  019038  0EFF               	movlw	-1
  6515  01903A  6AE3               	clrf	plusw1,c
  6516  01903C                     l10264:
  6517                           
  6518                           ;mbmc.c: 45:   if (V.calib) {
  6519  01903C  0102               	movlb	2	; () banked
  6520  01903E  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6521  019040  B4D8               	btfsc	status,2,c
  6522  019042  D01B               	goto	l10268
  6523                           
  6524                           ; BSR set to: 2
  6525                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  6526  019044  0E01               	movlw	1
  6527  019046  6EE6               	movwf	postinc1,c
  6528                           
  6529                           ;stkvar	_i @ sp[(-2)+0]
  6530  019048  0EFE               	movlw	-2
  6531  01904A  50E3               	movf	plusw1,w,c
  6532  01904C  6EE6               	movwf	postinc1,c
  6533  01904E  0E01               	movlw	1
  6534  019050  6EE6               	movwf	postinc1,c
  6535                           
  6536                           ;stkvar	_i @ sp[(-4)+0]
  6537  019052  0EFC               	movlw	-4
  6538  019054  50E3               	movf	plusw1,w,c
  6539  019056  6EE6               	movwf	postinc1,c
  6540  019058  ECB8  F0A3         	call	_conv_raw_result	;wreg free
  6541  01905C  0060  F007  FFE6   	movff	btemp,postinc1
  6542  019062  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6543  019068  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6544  01906E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6545  019074  ECDC  F0B9         	call	_lp_filter	;wreg free
  6546  019078  D01A               	goto	L3
  6547  01907A                     l10268:
  6548                           
  6549                           ; BSR set to: 2
  6550                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  6551  01907A  0E00               	movlw	0
  6552  01907C  6EE6               	movwf	postinc1,c
  6553                           
  6554                           ;stkvar	_i @ sp[(-2)+0]
  6555  01907E  0EFE               	movlw	-2
  6556  019080  50E3               	movf	plusw1,w,c
  6557  019082  6EE6               	movwf	postinc1,c
  6558  019084  0E00               	movlw	0
  6559  019086  6EE6               	movwf	postinc1,c
  6560                           
  6561                           ;stkvar	_i @ sp[(-4)+0]
  6562  019088  0EFC               	movlw	-4
  6563  01908A  50E3               	movf	plusw1,w,c
  6564  01908C  6EE6               	movwf	postinc1,c
  6565  01908E  ECB8  F0A3         	call	_conv_raw_result	;wreg free
  6566  019092  0060  F007  FFE6   	movff	btemp,postinc1
  6567  019098  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6568  01909E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6569  0190A4  0060  F013  FFE6   	movff	btemp+3,postinc1
  6570  0190AA  ECDC  F0B9         	call	_lp_filter	;wreg free
  6571  0190AE                     L3:
  6572                           
  6573                           ;stkvar	_i @ sp[(-1)+0]
  6574  0190AE  0EFF               	movlw	-1
  6575  0190B0  50E3               	movf	plusw1,w,c
  6576  0190B2  0D04               	mullw	4
  6577  0190B4  0E00               	movlw	low _C
  6578  0190B6  24F3               	addwf	243,w,c
  6579  0190B8  6ED9               	movwf	fsr2l,c
  6580  0190BA  0E01               	movlw	high _C
  6581  0190BC  20F4               	addwfc	prodh,w,c
  6582  0190BE  6EDA               	movwf	fsr2h,c
  6583  0190C0  0060  F007  FFDE   	movff	btemp,postinc2
  6584  0190C6  0060  F00B  FFDE   	movff	btemp+1,postinc2
  6585  0190CC  0060  F00F  FFDE   	movff	btemp+2,postinc2
  6586  0190D2  0060  F013  FFDE   	movff	btemp+3,postinc2
  6587                           
  6588                           ;mbmc.c: 50:  } while (++i < 16);
  6589                           ;stkvar	_i @ sp[(-1)+0]
  6590  0190D8  0EFF               	movlw	-1
  6591  0190DA  2AE3               	incf	plusw1,f,c
  6592  0190DC  0EFF               	movlw	-1
  6593  0190DE  006F FF8C  F001    	movff	plusw1,btemp
  6594  0190E4  0E0F               	movlw	15
  6595  0190E6  6401               	cpfsgt	btemp^0,c
  6596  0190E8  D7A9               	goto	l10264
  6597                           
  6598                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  6599  0190EA  52E5               	movf	postdec1,f,c
  6600  0190EC  0012               	return		;funcret
  6601  0190EE                     __end_of_convert_adc_data:
  6602                           	opt callstack 0
  6603                           
  6604 ;; *************** function _clear_hid_pflags *****************
  6605 ;; Defined at:
  6606 ;;		line 51 in file "hid.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  h               1  [STACK] PTR struct H_data
  6609 ;;		 -> H(7), 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;		None
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1  [STACK] void 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6616 ;; Tracked objects:
  6617 ;;		On entry : 3F/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6625 ;;Total ram usage:        0 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:   15
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_main
  6632 ;; This function uses a reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text22
  6636  01A83C                     __ptext22:
  6637                           	opt callstack 0
  6638  01A83C                     _clear_hid_pflags:
  6639                           	opt callstack 15
  6640                           
  6641                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6642                           ;stkvar	_h @ sp[(0)+-1]
  6643                           
  6644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6645                           ;incstack = 0
  6646  01A83C  0EFF               	movlw	-1
  6647  01A83E  50E3               	movf	plusw1,w,c
  6648  01A840  6ED9               	movwf	fsr2l,c
  6649  01A842  6ADA               	clrf	fsr2h,c
  6650  01A844  0E03               	movlw	3
  6651  01A846  26D9               	addwf	fsr2l,f,c
  6652  01A848  0E00               	movlw	0
  6653  01A84A  6EDF               	movwf	indf2,c
  6654                           
  6655                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6656                           ;stkvar	_h @ sp[(0)+-1]
  6657  01A84C  0EFF               	movlw	-1
  6658  01A84E  50E3               	movf	plusw1,w,c
  6659  01A850  6ED9               	movwf	fsr2l,c
  6660  01A852  6ADA               	clrf	fsr2h,c
  6661  01A854  0E05               	movlw	5
  6662  01A856  26D9               	addwf	fsr2l,f,c
  6663  01A858  0E00               	movlw	0
  6664  01A85A  6EDF               	movwf	indf2,c
  6665                           
  6666                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6667  01A85C  52E5               	movf	postdec1,f,c
  6668  01A85E  0012               	return		;funcret
  6669  01A860                     __end_of_clear_hid_pflags:
  6670                           	opt callstack 0
  6671                           
  6672 ;; *************** function _clear_adc_scan *****************
  6673 ;; Defined at:
  6674 ;;		line 64 in file "daq.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;		None
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1  [STACK] void 
  6681 ;; Registers used:
  6682 ;;		None
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 3F/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6692 ;;Total ram usage:        0 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:   15
  6695 ;; This function calls:
  6696 ;;		Nothing
  6697 ;; This function is called by:
  6698 ;;		_main
  6699 ;; This function uses a reentrant model
  6700 ;;
  6701                           
  6702                           	psect	text23
  6703  01ABBE                     __ptext23:
  6704                           	opt callstack 0
  6705  01ABBE                     _clear_adc_scan:
  6706                           	opt callstack 15
  6707                           
  6708                           ;daq.c: 66:  R.done = 0;
  6709                           
  6710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6711                           ;incstack = 0
  6712  01ABBE  0100               	movlb	0	; () banked
  6713  01ABC0  6BED               	clrf	(_R+39)& (0+255),b	;volatile
  6714                           
  6715                           ; BSR set to: 0
  6716                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6717  01ABC2  0012               	return		;funcret
  6718  01ABC4                     __end_of_clear_adc_scan:
  6719                           	opt callstack 0
  6720                           
  6721 ;; *************** function _check_help *****************
  6722 ;; Defined at:
  6723 ;;		line 40 in file "mconfig.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  flipper         1  [STACK] const _Bool 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  estatus         1    0        _Bool 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1  [STACK] _Bool 
  6730 ;; Registers used:
  6731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6732 ;; Tracked objects:
  6733 ;;		On entry : 3F/2
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6741 ;;Total ram usage:        0 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; Hardware stack levels required when called:   27
  6744 ;; This function calls:
  6745 ;;		_StartTimer
  6746 ;;		_TimerDone
  6747 ;;		_display_help
  6748 ;;		_display_info
  6749 ;;		_get_vterm_ptr
  6750 ;;		_help_button
  6751 ;;		_mode_lamp_bright
  6752 ;;		_mode_lamp_dim
  6753 ;;		_set_display_info
  6754 ;;		_set_temp_display_help
  6755 ;;		_set_vterm
  6756 ;;		_sprintf
  6757 ;;		_update_lcd
  6758 ;;		_vterm_dump
  6759 ;; This function is called by:
  6760 ;;		_main
  6761 ;; This function uses a reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text24
  6765  016DA2                     __ptext24:
  6766                           	opt callstack 0
  6767  016DA2                     _check_help:
  6768                           	opt callstack 3
  6769                           
  6770                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6771                           
  6772                           ; BSR set to: 0
  6773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6774                           ;incstack = 0
  6775  016DA2  EC2D  F0D1         	call	_help_button	;wreg free
  6776  016DA6  5001               	movf	btemp^0,w,c
  6777  016DA8  B4D8               	btfsc	status,2,c
  6778  016DAA  D0D0               	goto	l12050
  6779  016DAC  ECCF  F0D5         	call	_display_info	;wreg free
  6780  016DB0  0401               	decf	btemp^0,w,c
  6781  016DB2  B4D8               	btfsc	status,2,c
  6782  016DB4  D0CB               	goto	l12050
  6783                           
  6784                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6785  016DB6  0EDC               	movlw	220
  6786  016DB8  6EE6               	movwf	postinc1,c
  6787  016DBA  0E05               	movlw	5
  6788  016DBC  6EE6               	movwf	postinc1,c
  6789  016DBE  0E0B               	movlw	11
  6790  016DC0  6EE6               	movwf	postinc1,c
  6791  016DC2  EC8E  F0D0         	call	_StartTimer	;wreg free
  6792                           
  6793                           ;mconfig.c: 48:   if (V.debug)
  6794  016DC6  0102               	movlb	2	; () banked
  6795  016DC8  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6796                           
  6797                           ; BSR set to: 2
  6798                           ;mconfig.c: 49:    vterm_dump();
  6799  016DCA  ECB8  F0C1         	call	_vterm_dump	;wreg free
  6800                           
  6801                           ;mconfig.c: 51:   set_vterm(1);
  6802  016DCE  0E01               	movlw	1
  6803  016DD0  6EE6               	movwf	postinc1,c
  6804  016DD2  ECBA  F0D4         	call	_set_vterm	;wreg free
  6805                           
  6806                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6807  016DD6  ECCF  F0D5         	call	_display_info	;wreg free
  6808  016DDA  5001               	movf	btemp^0,w,c
  6809  016DDC  6EE6               	movwf	postinc1,c
  6810  016DDE  EC89  F0D5         	call	_set_temp_display_help	;wreg free
  6811                           
  6812                           ; BSR set to: 2
  6813                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6814  016DE2  0E01               	movlw	1
  6815  016DE4  6EE6               	movwf	postinc1,c
  6816  016DE6  ECC9  F0D4         	call	_set_display_info	;wreg free
  6817                           
  6818                           ;mconfig.c: 54:   if (flipper) {
  6819                           ;stkvar	_flipper @ sp[(0)+-1]
  6820  016DEA  0EFF               	movlw	-1
  6821  016DEC  50E3               	movf	plusw1,w,c
  6822  016DEE  B4D8               	btfsc	status,2,c
  6823  016DF0  D019               	goto	l12036
  6824                           
  6825                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6826  016DF2  0EB2               	movlw	low STR_28
  6827  016DF4  6EE6               	movwf	postinc1,c
  6828  016DF6  0EFF               	movlw	high STR_28
  6829  016DF8  6EE6               	movwf	postinc1,c
  6830  016DFA  0E71               	movlw	low STR_30
  6831  016DFC  6EE6               	movwf	postinc1,c
  6832  016DFE  0EFE               	movlw	high STR_30
  6833  016E00  6EE6               	movwf	postinc1,c
  6834  016E02  0E01               	movlw	1
  6835  016E04  6EE6               	movwf	postinc1,c
  6836  016E06  0E00               	movlw	0
  6837  016E08  6EE6               	movwf	postinc1,c
  6838  016E0A  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  6839  016E0E  0060  F007  FFE6   	movff	btemp,postinc1
  6840  016E14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6841  016E1A  0E06               	movlw	6
  6842  016E1C  6EE6               	movwf	postinc1,c
  6843  016E1E  EC06  F0C5         	call	_sprintf	;wreg free
  6844                           
  6845                           ;mconfig.c: 56:   } else {
  6846  016E22  D018               	goto	l1651
  6847  016E24                     l12036:
  6848                           
  6849                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6850  016E24  0EC8               	movlw	low STR_29
  6851  016E26  6EE6               	movwf	postinc1,c
  6852  016E28  0EFF               	movlw	high STR_29
  6853  016E2A  6EE6               	movwf	postinc1,c
  6854  016E2C  0E71               	movlw	low STR_30
  6855  016E2E  6EE6               	movwf	postinc1,c
  6856  016E30  0EFE               	movlw	high STR_30
  6857  016E32  6EE6               	movwf	postinc1,c
  6858  016E34  0E01               	movlw	1
  6859  016E36  6EE6               	movwf	postinc1,c
  6860  016E38  0E00               	movlw	0
  6861  016E3A  6EE6               	movwf	postinc1,c
  6862  016E3C  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  6863  016E40  0060  F007  FFE6   	movff	btemp,postinc1
  6864  016E46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6865  016E4C  0E06               	movlw	6
  6866  016E4E  6EE6               	movwf	postinc1,c
  6867  016E50  EC06  F0C5         	call	_sprintf	;wreg free
  6868  016E54                     l1651:
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6872  016E54  0102               	movlb	2	; () banked
  6873  016E56  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6874  016E58  32E8               	rrcf	wreg,f,c
  6875  016E5A  32E8               	rrcf	wreg,f,c
  6876  016E5C  0B03               	andlw	3
  6877  016E5E  0D24               	mullw	36
  6878  016E60  0E12               	movlw	18
  6879  016E62  26F3               	addwf	243,f,c
  6880  016E64  0E00               	movlw	0
  6881  016E66  22F4               	addwfc	244,f,c
  6882  016E68  0E29               	movlw	low _T
  6883  016E6A  6E0B               	movwf	(btemp+10)^0,c
  6884  016E6C  0EFD               	movlw	high _T
  6885  016E6E  6E0C               	movwf	(btemp+11)^0,c
  6886  016E70  50F3               	movf	243,w,c
  6887  016E72  260B               	addwf	(btemp+10)^0,f,c
  6888  016E74  50F4               	movf	244,w,c
  6889  016E76  220C               	addwfc	(btemp+11)^0,f,c
  6890  016E78  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6891  016E7E  0060  F033  FFE6   	movff	btemp+11,postinc1
  6892  016E84  0EBE               	movlw	low STR_32
  6893  016E86  6EE6               	movwf	postinc1,c
  6894  016E88  0EFF               	movlw	high STR_32
  6895  016E8A  6EE6               	movwf	postinc1,c
  6896  016E8C  0E01               	movlw	1
  6897  016E8E  6EE6               	movwf	postinc1,c
  6898  016E90  0E01               	movlw	1
  6899  016E92  6EE6               	movwf	postinc1,c
  6900  016E94  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  6901  016E98  0060  F007  FFE6   	movff	btemp,postinc1
  6902  016E9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6903  016EA4  0E06               	movlw	6
  6904  016EA6  6EE6               	movwf	postinc1,c
  6905  016EA8  EC06  F0C5         	call	_sprintf	;wreg free
  6906                           
  6907                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6908  016EAC  0102               	movlb	2	; () banked
  6909  016EAE  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6910  016EB0  32E8               	rrcf	wreg,f,c
  6911  016EB2  32E8               	rrcf	wreg,f,c
  6912  016EB4  0B03               	andlw	3
  6913  016EB6  0D24               	mullw	36
  6914  016EB8  0E29               	movlw	low _T
  6915  016EBA  6E0B               	movwf	(btemp+10)^0,c
  6916  016EBC  0EFD               	movlw	high _T
  6917  016EBE  6E0C               	movwf	(btemp+11)^0,c
  6918  016EC0  50F3               	movf	243,w,c
  6919  016EC2  260B               	addwf	(btemp+10)^0,f,c
  6920  016EC4  50F4               	movf	244,w,c
  6921  016EC6  220C               	addwfc	(btemp+11)^0,f,c
  6922  016EC8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6923  016ECE  0060  F033  FFE6   	movff	btemp+11,postinc1
  6924  016ED4  0EBE               	movlw	low STR_32
  6925  016ED6  6EE6               	movwf	postinc1,c
  6926  016ED8  0EFF               	movlw	high STR_32
  6927  016EDA  6EE6               	movwf	postinc1,c
  6928  016EDC  0E01               	movlw	1
  6929  016EDE  6EE6               	movwf	postinc1,c
  6930  016EE0  0E02               	movlw	2
  6931  016EE2  6EE6               	movwf	postinc1,c
  6932  016EE4  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  6933  016EE8  0060  F007  FFE6   	movff	btemp,postinc1
  6934  016EEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6935  016EF4  0E06               	movlw	6
  6936  016EF6  6EE6               	movwf	postinc1,c
  6937  016EF8  EC06  F0C5         	call	_sprintf	;wreg free
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;mconfig.c: 61:   V.help_id++;
  6941  016EFC  EE20  F29B         	lfsr	2,_V+155	;volatile
  6942  016F00  38DF               	swapf	223,w,c
  6943  016F02  6E0C               	movwf	(btemp+11)^0,c
  6944  016F04  320C               	rrcf	(btemp+11)^0,f,c
  6945  016F06  300C               	rrcf	(btemp+11)^0,w,c
  6946  016F08  0B03               	andlw	3
  6947  016F0A  6E0C               	movwf	(btemp+11)^0,c
  6948  016F0C  2A0C               	incf	(btemp+11)^0,f,c
  6949  016F0E  3A0C               	swapf	(btemp+11)^0,f,c
  6950  016F10  360C               	rlcf	(btemp+11)^0,f,c
  6951  016F12  360C               	rlcf	(btemp+11)^0,f,c
  6952  016F14  50DF               	movf	223,w,c
  6953  016F16  180C               	xorwf	(btemp+11)^0,w,c
  6954  016F18  0B3F               	andlw	-193
  6955  016F1A  180C               	xorwf	(btemp+11)^0,w,c
  6956  016F1C  6EDF               	movwf	223,c
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6960  016F1E  0EB8               	movlw	184
  6961  016F20  6EE6               	movwf	postinc1,c
  6962  016F22  0E0B               	movlw	11
  6963  016F24  6EE6               	movwf	postinc1,c
  6964  016F26  0E09               	movlw	9
  6965  016F28  6EE6               	movwf	postinc1,c
  6966  016F2A  EC8E  F0D0         	call	_StartTimer	;wreg free
  6967                           
  6968                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6969  016F2E  0EB8               	movlw	184
  6970  016F30  6EE6               	movwf	postinc1,c
  6971  016F32  0E0B               	movlw	11
  6972  016F34  6EE6               	movwf	postinc1,c
  6973  016F36  0E07               	movlw	7
  6974  016F38  6EE6               	movwf	postinc1,c
  6975  016F3A  EC8E  F0D0         	call	_StartTimer	;wreg free
  6976                           
  6977                           ;mconfig.c: 64:   mode_lamp_bright();
  6978  016F3E  EC98  F0D5         	call	_mode_lamp_bright	;wreg free
  6979                           
  6980                           ;mconfig.c: 65:   update_lcd(1);
  6981  016F42  0E01               	movlw	1
  6982  016F44  6EE6               	movwf	postinc1,c
  6983  016F46  ECF7  F0C3         	call	_update_lcd	;wreg free
  6984                           
  6985                           ;mconfig.c: 67:  } else {
  6986  016F4A  D032               	goto	l1652
  6987  016F4C                     l12050:
  6988                           
  6989                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6990  016F4C  0E09               	movlw	9
  6991  016F4E  6EE6               	movwf	postinc1,c
  6992  016F50  ECF3  F0D2         	call	_TimerDone	;wreg free
  6993  016F54  5001               	movf	btemp^0,w,c
  6994  016F56  B4D8               	btfsc	status,2,c
  6995  016F58  D02B               	goto	l1652
  6996                           
  6997                           ;mconfig.c: 69:    set_vterm(0);
  6998  016F5A  0E00               	movlw	0
  6999  016F5C  6EE6               	movwf	postinc1,c
  7000  016F5E  ECBA  F0D4         	call	_set_vterm	;wreg free
  7001                           
  7002                           ;mconfig.c: 70:    V.help = 0;
  7003  016F62  0102               	movlb	2	; () banked
  7004  016F64  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  7005                           
  7006                           ; BSR set to: 2
  7007                           ;mconfig.c: 71:    set_display_info(display_help());
  7008  016F66  ECD3  F0D5         	call	_display_help	;wreg free
  7009  016F6A  5001               	movf	btemp^0,w,c
  7010  016F6C  6EE6               	movwf	postinc1,c
  7011  016F6E  ECC9  F0D4         	call	_set_display_info	;wreg free
  7012                           
  7013                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  7014  016F72  0060  FA57  FFE6   	movff	_V+149,postinc1
  7015  016F78  0060  FA5B  FFE6   	movff	_V+150,postinc1
  7016  016F7E  EC2D  F0D5         	call	_mode_lamp_dim	;wreg free
  7017                           
  7018                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  7019  016F82  0E0B               	movlw	11
  7020  016F84  6EE6               	movwf	postinc1,c
  7021  016F86  ECF3  F0D2         	call	_TimerDone	;wreg free
  7022  016F8A  5001               	movf	btemp^0,w,c
  7023  016F8C  B4D8               	btfsc	status,2,c
  7024  016F8E  D010               	goto	l1652
  7025                           
  7026                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  7027  016F90  0102               	movlb	2	; () banked
  7028  016F92  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  7029  016F94  A4D8               	btfss	status,2,c
  7030  016F96  D002               	goto	u11690
  7031  016F98  0E01               	movlw	1
  7032  016F9A  D001               	goto	u11700
  7033  016F9C                     u11690:
  7034  016F9C  0E00               	movlw	0
  7035  016F9E                     u11700:
  7036  016F9E  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  7037                           
  7038                           ; BSR set to: 2
  7039                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  7040  016FA0  0EDC               	movlw	220
  7041  016FA2  6EE6               	movwf	postinc1,c
  7042  016FA4  0E05               	movlw	5
  7043  016FA6  6EE6               	movwf	postinc1,c
  7044  016FA8  0E0B               	movlw	11
  7045  016FAA  6EE6               	movwf	postinc1,c
  7046  016FAC  EC8E  F0D0         	call	_StartTimer	;wreg free
  7047  016FB0                     l1652:
  7048                           
  7049                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7050  016FB0  52E5               	movf	postdec1,f,c
  7051  016FB2  0012               	return		;funcret
  7052  016FB4                     __end_of_check_help:
  7053                           	opt callstack 0
  7054                           
  7055 ;; *************** function _vterm_dump *****************
  7056 ;; Defined at:
  7057 ;;		line 121 in file "mconfig.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;		None
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;		None
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  1  [STACK] void 
  7064 ;; Registers used:
  7065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7066 ;; Tracked objects:
  7067 ;;		On entry : 3F/2
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;Total ram usage:        0 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:   26
  7078 ;; This function calls:
  7079 ;;		_WaitMs
  7080 ;;		_eaDogM_WriteStringAtPos
  7081 ;;		_get_vterm_ptr
  7082 ;;		_sprintf
  7083 ;;		_wait_lcd_done
  7084 ;; This function is called by:
  7085 ;;		_check_help
  7086 ;; This function uses a reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text25
  7090  018370                     __ptext25:
  7091                           	opt callstack 0
  7092  018370                     _vterm_dump:
  7093                           	opt callstack 3
  7094                           
  7095                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  7096                           
  7097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7098                           ;incstack = 0
  7099  018370  0E01               	movlw	1
  7100  018372  6EE6               	movwf	postinc1,c
  7101  018374  0E00               	movlw	0
  7102  018376  6EE6               	movwf	postinc1,c
  7103  018378  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  7104  01837C  0060  F007  FFE6   	movff	btemp,postinc1
  7105  018382  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7106  018388  0E00               	movlw	0
  7107  01838A  6EE6               	movwf	postinc1,c
  7108  01838C  0E00               	movlw	0
  7109  01838E  6EE6               	movwf	postinc1,c
  7110  018390  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  7111  018394  0060  F007  FFE6   	movff	btemp,postinc1
  7112  01839A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7113  0183A0  0E94               	movlw	low STR_34
  7114  0183A2  6EE6               	movwf	postinc1,c
  7115  0183A4  0EFF               	movlw	high STR_34
  7116  0183A6  6EE6               	movwf	postinc1,c
  7117  0183A8  0E01               	movlw	low (_V+1)
  7118  0183AA  6EE6               	movwf	postinc1,c
  7119  0183AC  0E02               	movlw	high (_V+1)
  7120  0183AE  6EE6               	movwf	postinc1,c
  7121  0183B0  0E08               	movlw	8
  7122  0183B2  6EE6               	movwf	postinc1,c
  7123  0183B4  EC06  F0C5         	call	_sprintf	;wreg free
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;mconfig.c: 124:  wait_lcd_done();
  7127  0183B8  ECF6  F0D4         	call	_wait_lcd_done	;wreg free
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  7131  0183BC  0E01               	movlw	low (_V+1)
  7132  0183BE  6EE6               	movwf	postinc1,c
  7133  0183C0  0E02               	movlw	high (_V+1)
  7134  0183C2  6EE6               	movwf	postinc1,c
  7135  0183C4  0E00               	movlw	0
  7136  0183C6  6EE6               	movwf	postinc1,c
  7137  0183C8  0E00               	movlw	0
  7138  0183CA  6EE6               	movwf	postinc1,c
  7139  0183CC  EC7F  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7140                           
  7141                           ; BSR set to: 59
  7142                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  7143  0183D0  0E01               	movlw	1
  7144  0183D2  6EE6               	movwf	postinc1,c
  7145  0183D4  0E01               	movlw	1
  7146  0183D6  6EE6               	movwf	postinc1,c
  7147  0183D8  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  7148  0183DC  0060  F007  FFE6   	movff	btemp,postinc1
  7149  0183E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7150  0183E8  0E00               	movlw	0
  7151  0183EA  6EE6               	movwf	postinc1,c
  7152  0183EC  0E01               	movlw	1
  7153  0183EE  6EE6               	movwf	postinc1,c
  7154  0183F0  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  7155  0183F4  0060  F007  FFE6   	movff	btemp,postinc1
  7156  0183FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7157  018400  0E94               	movlw	low STR_34
  7158  018402  6EE6               	movwf	postinc1,c
  7159  018404  0EFF               	movlw	high STR_34
  7160  018406  6EE6               	movwf	postinc1,c
  7161  018408  0E01               	movlw	low (_V+1)
  7162  01840A  6EE6               	movwf	postinc1,c
  7163  01840C  0E02               	movlw	high (_V+1)
  7164  01840E  6EE6               	movwf	postinc1,c
  7165  018410  0E08               	movlw	8
  7166  018412  6EE6               	movwf	postinc1,c
  7167  018414  EC06  F0C5         	call	_sprintf	;wreg free
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;mconfig.c: 127:  wait_lcd_done();
  7171  018418  ECF6  F0D4         	call	_wait_lcd_done	;wreg free
  7172                           
  7173                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  7174  01841C  0E01               	movlw	low (_V+1)
  7175  01841E  6EE6               	movwf	postinc1,c
  7176  018420  0E02               	movlw	high (_V+1)
  7177  018422  6EE6               	movwf	postinc1,c
  7178  018424  0E00               	movlw	0
  7179  018426  6EE6               	movwf	postinc1,c
  7180  018428  0E01               	movlw	1
  7181  01842A  6EE6               	movwf	postinc1,c
  7182  01842C  EC7F  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7183                           
  7184                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  7185  018430  0E01               	movlw	1
  7186  018432  6EE6               	movwf	postinc1,c
  7187  018434  0E02               	movlw	2
  7188  018436  6EE6               	movwf	postinc1,c
  7189  018438  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  7190  01843C  0060  F007  FFE6   	movff	btemp,postinc1
  7191  018442  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7192  018448  0E00               	movlw	0
  7193  01844A  6EE6               	movwf	postinc1,c
  7194  01844C  0E02               	movlw	2
  7195  01844E  6EE6               	movwf	postinc1,c
  7196  018450  EC48  F0D2         	call	_get_vterm_ptr	;wreg free
  7197  018454  0060  F007  FFE6   	movff	btemp,postinc1
  7198  01845A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7199  018460  0E94               	movlw	low STR_34
  7200  018462  6EE6               	movwf	postinc1,c
  7201  018464  0EFF               	movlw	high STR_34
  7202  018466  6EE6               	movwf	postinc1,c
  7203  018468  0E01               	movlw	low (_V+1)
  7204  01846A  6EE6               	movwf	postinc1,c
  7205  01846C  0E02               	movlw	high (_V+1)
  7206  01846E  6EE6               	movwf	postinc1,c
  7207  018470  0E08               	movlw	8
  7208  018472  6EE6               	movwf	postinc1,c
  7209  018474  EC06  F0C5         	call	_sprintf	;wreg free
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;mconfig.c: 130:  wait_lcd_done();
  7213  018478  ECF6  F0D4         	call	_wait_lcd_done	;wreg free
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  7217  01847C  0E01               	movlw	low (_V+1)
  7218  01847E  6EE6               	movwf	postinc1,c
  7219  018480  0E02               	movlw	high (_V+1)
  7220  018482  6EE6               	movwf	postinc1,c
  7221  018484  0E00               	movlw	0
  7222  018486  6EE6               	movwf	postinc1,c
  7223  018488  0E02               	movlw	2
  7224  01848A  6EE6               	movwf	postinc1,c
  7225  01848C  EC7F  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7226                           
  7227                           ; BSR set to: 59
  7228                           ;mconfig.c: 132:  WaitMs(3000);
  7229  018490  0EB8               	movlw	184
  7230  018492  6EE6               	movwf	postinc1,c
  7231  018494  0E0B               	movlw	11
  7232  018496  6EE6               	movwf	postinc1,c
  7233  018498  EC64  F0D1         	call	_WaitMs	;wreg free
  7234                           
  7235                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7236  01849C  0012               	return		;funcret
  7237  01849E                     __end_of_vterm_dump:
  7238                           	opt callstack 0
  7239                           
  7240 ;; *************** function _sprintf *****************
  7241 ;; Defined at:
  7242 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  s               2  [STACK] PTR unsigned char 
  7245 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  7246 ;;  fmt             2  [STACK] PTR const unsigned char 
  7247 ;;		 -> STR_47(79), STR_45(3), STR_44(3), STR_43(19), 
  7248 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
  7249 ;;		 -> STR_38(19), STR_37(24), STR_36(15), STR_35(15), 
  7250 ;;		 -> STR_34(15), STR_33(10), STR_32(10), STR_31(19), 
  7251 ;;		 -> STR_30(19), STR_24(17), STR_23(16), STR_22(16), 
  7252 ;;		 -> STR_21(19), STR_20(20), STR_19(19), STR_18(19), 
  7253 ;;		 -> STR_17(19), STR_16(19), STR_15(19), STR_14(19), 
  7254 ;;		 -> STR_13(19), STR_12(17), STR_11(16), STR_10(16), 
  7255 ;;		 -> STR_9(22), STR_8(17), STR_6(15), STR_5(17), 
  7256 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;  f               6  [STACK] struct _IO_FILE
  7259 ;;  ap              2  [STACK] PTR void [1]
  7260 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7261 ;;  ret             2    0        int 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  2  [STACK] int 
  7264 ;; Registers used:
  7265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 3F/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:   23
  7278 ;; This function calls:
  7279 ;;		_vfprintf
  7280 ;; This function is called by:
  7281 ;;		_main
  7282 ;;		_check_help
  7283 ;;		_vterm_dump
  7284 ;;		_calc_bsoc
  7285 ;; This function uses a reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text26
  7289  018A0C                     __ptext26:
  7290                           	opt callstack 0
  7291  018A0C                     _sprintf:
  7292                           	opt callstack 0
  7293                           
  7294                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7295  018A0C  0E08               	movlw	8
  7296  018A0E  26E1               	addwf	fsr1l,f,c
  7297  018A10  0E00               	movlw	0
  7298  018A12  22E2               	addwfc	fsr1h,f,c
  7299                           
  7300                           ;incstack = 0
  7301 ;; hardware stack exceeded
  7302  018A14  0EFE               	movlw	254
  7303  018A16  6E0B               	movwf	(btemp+10)^0,c
  7304  018A18  0EFF               	movlw	255
  7305  018A1A  6E0C               	movwf	(btemp+11)^0,c
  7306                           
  7307                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  7308  018A1C  0EF5               	movlw	245
  7309  018A1E  24E1               	addwf	fsr1l,w,c
  7310  018A20  6E09               	movwf	(btemp+8)^0,c
  7311  018A22  0EFF               	movlw	255
  7312  018A24  20E2               	addwfc	fsr1h,w,c
  7313  018A26  6E0A               	movwf	(btemp+9)^0,c
  7314  018A28  500B               	movf	(btemp+10)^0,w,c
  7315  018A2A  2609               	addwf	(btemp+8)^0,f,c
  7316  018A2C  500C               	movf	(btemp+11)^0,w,c
  7317  018A2E  220A               	addwfc	(btemp+9)^0,f,c
  7318                           
  7319                           ;stkvar	_ap @ sp[(-8)+6]
  7320  018A30  0EFF               	movlw	-1
  7321  018A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7322  018A38  0EFE               	movlw	-2
  7323  018A3A  0060  F027  FFE3   	movff	btemp+8,plusw1
  7324                           
  7325                           ;stkvar	_s @ sp[(-8)+-3]
  7326  018A40  0EF5               	movlw	-11
  7327  018A42  006F FF8C  F00B    	movff	plusw1,btemp+10
  7328  018A48  0EF6               	movlw	-10
  7329  018A4A  006F FF8C  F00C    	movff	plusw1,btemp+11
  7330                           
  7331                           ;stkvar	_f @ sp[(-8)+0]
  7332  018A50  0EF9               	movlw	-7
  7333  018A52  0060  F033  FFE3   	movff	btemp+11,plusw1
  7334  018A58  0EF8               	movlw	-8
  7335  018A5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7336                           
  7337                           ;stkvar	_f @ sp[(-8)+0]
  7338  018A60  0EFA               	movlw	250
  7339  018A62  24E1               	addwf	fsr1l,w,c
  7340  018A64  6ED9               	movwf	fsr2l,c
  7341  018A66  0EFF               	movlw	255
  7342  018A68  20E2               	addwfc	fsr1h,w,c
  7343  018A6A  6EDA               	movwf	fsr2h,c
  7344  018A6C  0E00               	movlw	0
  7345  018A6E  6EDE               	movwf	postinc2,c
  7346  018A70  0E00               	movlw	0
  7347  018A72  6EDD               	movwf	postdec2,c
  7348                           
  7349                           ;stkvar	_f @ sp[(-8)+0]
  7350  018A74  0EFC               	movlw	252
  7351  018A76  24E1               	addwf	fsr1l,w,c
  7352  018A78  6ED9               	movwf	fsr2l,c
  7353  018A7A  0EFF               	movlw	255
  7354  018A7C  20E2               	addwfc	fsr1h,w,c
  7355  018A7E  6EDA               	movwf	fsr2h,c
  7356  018A80  0E00               	movlw	0
  7357  018A82  6EDE               	movwf	postinc2,c
  7358  018A84  0E00               	movlw	0
  7359  018A86  6EDD               	movwf	postdec2,c
  7360                           
  7361                           ;stkvar	_ap @ sp[(-8)+6]
  7362  018A88  0EFE               	movlw	254
  7363  018A8A  24E1               	addwf	fsr1l,w,c
  7364  018A8C  6E01               	movwf	btemp^0,c
  7365  018A8E  0EFF               	movlw	255
  7366  018A90  20E2               	addwfc	fsr1h,w,c
  7367  018A92  6E02               	movwf	(btemp+1)^0,c
  7368  018A94  0060  F007  FFE6   	movff	btemp,postinc1
  7369  018A9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7370                           
  7371                           ;stkvar	_fmt @ sp[(-10)+-5]
  7372  018AA0  0EF1               	movlw	-15
  7373  018AA2  006F FF8F FFE6     	movff	plusw1,postinc1
  7374  018AA8  006F FF8F FFE6     	movff	plusw1,postinc1
  7375                           
  7376                           ;stkvar	_f @ sp[(-12)+0]
  7377  018AAE  0EF4               	movlw	244
  7378  018AB0  24E1               	addwf	fsr1l,w,c
  7379  018AB2  6E01               	movwf	btemp^0,c
  7380  018AB4  0EFF               	movlw	255
  7381  018AB6  20E2               	addwfc	fsr1h,w,c
  7382  018AB8  6E02               	movwf	(btemp+1)^0,c
  7383  018ABA  0060  F007  FFE6   	movff	btemp,postinc1
  7384  018AC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7385  018AC6  ECCE  F0C8         	call	_vfprintf	;wreg free
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;stkvar	_f @ sp[(-8)+0]
  7389  018ACA  0EFA               	movlw	250
  7390  018ACC  24E1               	addwf	fsr1l,w,c
  7391  018ACE  6ED9               	movwf	fsr2l,c
  7392  018AD0  0EFF               	movlw	255
  7393  018AD2  20E2               	addwfc	fsr1h,w,c
  7394  018AD4  6EDA               	movwf	fsr2h,c
  7395  018AD6  006F FF78  F00B    	movff	postinc2,btemp+10
  7396  018ADC  006F FF74  F00C    	movff	postdec2,btemp+11
  7397                           
  7398                           ;stkvar	_s @ sp[(-8)+-3]
  7399  018AE2  0EF5               	movlw	-11
  7400  018AE4  006F FF8C  F009    	movff	plusw1,btemp+8
  7401  018AEA  0EF6               	movlw	-10
  7402  018AEC  006F FF8C  F00A    	movff	plusw1,btemp+9
  7403  018AF2  500B               	movf	(btemp+10)^0,w,c
  7404  018AF4  2409               	addwf	(btemp+8)^0,w,c
  7405  018AF6  6ED9               	movwf	fsr2l,c
  7406  018AF8  500C               	movf	(btemp+11)^0,w,c
  7407  018AFA  200A               	addwfc	(btemp+9)^0,w,c
  7408  018AFC  6EDA               	movwf	fsr2h,c
  7409  018AFE  0E00               	movlw	0
  7410  018B00  6EDF               	movwf	indf2,c
  7411                           
  7412                           ; BSR set to: 0
  7413                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, args
      +                          ize = 4, vargsize = 0
  7414  018B02  0EF8               	movlw	248
  7415  018B04  26E1               	addwf	fsr1l,f,c
  7416  018B06  0EFF               	movlw	255
  7417  018B08  22E2               	addwfc	fsr1h,f,c
  7418  018B0A  52E5               	movf	postdec1,f,c
  7419  018B0C  50E7               	movf	indf1,w,c
  7420  018B0E  5EE1               	subwf	fsr1l,f,c
  7421  018B10  0E00               	movlw	0
  7422  018B12  5AE2               	subwfb	fsr1h,f,c
  7423  018B14  0012               	return		;funcret
  7424  018B16                     __end_of_sprintf:
  7425                           	opt callstack 0
  7426                           
  7427 ;; *************** function _get_vterm_ptr *****************
  7428 ;; Defined at:
  7429 ;;		line 116 in file "mconfig.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  line            1  [STACK] const unsigned char 
  7432 ;;  vterm           1  [STACK] const unsigned char 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;		None
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  2  [STACK] PTR unsigned char 
  7437 ;; Registers used:
  7438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7448 ;;Total ram usage:        0 bytes
  7449 ;; Hardware stack levels used:    1
  7450 ;; Hardware stack levels required when called:   15
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_main
  7455 ;;		_check_help
  7456 ;;		_vterm_dump
  7457 ;; This function uses a reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text27
  7461  01A490                     __ptext27:
  7462                           	opt callstack 0
  7463  01A490                     _get_vterm_ptr:
  7464                           	opt callstack 15
  7465                           
  7466                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  7467                           ;stkvar	_vterm @ sp[(0)+-2]
  7468                           
  7469                           ; BSR set to: 0
  7470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7471                           ;incstack = 0
  7472  01A490  0EFE               	movlw	-2
  7473  01A492  50E3               	movf	plusw1,w,c
  7474  01A494  0B03               	andlw	3
  7475  01A496  0D48               	mullw	72
  7476  01A498  0EFF               	movlw	low _D
  7477  01A49A  6E01               	movwf	btemp^0,c
  7478  01A49C  0E07               	movlw	high _D
  7479  01A49E  6E02               	movwf	(btemp+1)^0,c
  7480  01A4A0  50F3               	movf	243,w,c
  7481  01A4A2  2601               	addwf	btemp^0,f,c
  7482  01A4A4  50F4               	movf	244,w,c
  7483  01A4A6  2202               	addwfc	(btemp+1)^0,f,c
  7484                           
  7485                           ;stkvar	_line @ sp[(0)+-1]
  7486  01A4A8  0EFF               	movlw	-1
  7487  01A4AA  50E3               	movf	plusw1,w,c
  7488  01A4AC  0B03               	andlw	3
  7489  01A4AE  0D18               	mullw	24
  7490  01A4B0  50F3               	movf	243,w,c
  7491  01A4B2  2601               	addwf	btemp^0,f,c
  7492  01A4B4  50F4               	movf	244,w,c
  7493  01A4B6  2202               	addwfc	(btemp+1)^0,f,c
  7494                           
  7495                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7496  01A4B8  52E5               	movf	postdec1,f,c
  7497  01A4BA  52E5               	movf	postdec1,f,c
  7498  01A4BC  0012               	return		;funcret
  7499  01A4BE                     __end_of_get_vterm_ptr:
  7500                           	opt callstack 0
  7501                           
  7502 ;; *************** function _WaitMs *****************
  7503 ;; Defined at:
  7504 ;;		line 32 in file "timers.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  numMilliseco    2  [STACK] const unsigned short 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;		None
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  1  [STACK] void 
  7511 ;; Registers used:
  7512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/2
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7522 ;;Total ram usage:        0 bytes
  7523 ;; Hardware stack levels used:    1
  7524 ;; Hardware stack levels required when called:   16
  7525 ;; This function calls:
  7526 ;;		_StartTimer
  7527 ;;		_TimerDone
  7528 ;; This function is called by:
  7529 ;;		_main
  7530 ;;		_vterm_dump
  7531 ;; This function uses a reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text28
  7535  01A2C8                     __ptext28:
  7536                           	opt callstack 0
  7537  01A2C8                     _WaitMs:
  7538                           	opt callstack 12
  7539                           
  7540                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  7541                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  7542                           
  7543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7544                           ;incstack = 0
  7545  01A2C8  0EFE               	movlw	-2
  7546  01A2CA  006F FF8F FFE6     	movff	plusw1,postinc1
  7547  01A2D0  006F FF8F FFE6     	movff	plusw1,postinc1
  7548  01A2D6  0E00               	movlw	0
  7549  01A2D8  6EE6               	movwf	postinc1,c
  7550  01A2DA  EC8E  F0D0         	call	_StartTimer	;wreg free
  7551                           
  7552                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7553  01A2DE  D005               	goto	l9190
  7554  01A2E0                     l1583:
  7555                           
  7556                           ;timers.c: 36:   __nop();
  7557  01A2E0  F000               	nop	
  7558                           
  7559                           ;timers.c: 37:   __nop();
  7560  01A2E2  F000               	nop	
  7561                           
  7562                           ;timers.c: 38:   __nop();
  7563  01A2E4  F000               	nop	
  7564                           
  7565                           ;timers.c: 39:   __nop();
  7566  01A2E6  F000               	nop	
  7567  01A2E8  0004               	clrwdt		;# 
  7568  01A2EA                     l9190:
  7569                           
  7570                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7571  01A2EA  0E00               	movlw	0
  7572  01A2EC  6EE6               	movwf	postinc1,c
  7573  01A2EE  ECF3  F0D2         	call	_TimerDone	;wreg free
  7574  01A2F2  5001               	movf	btemp^0,w,c
  7575  01A2F4  B4D8               	btfsc	status,2,c
  7576  01A2F6  D7F4               	goto	l1583
  7577                           
  7578                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  7579  01A2F8  52E5               	movf	postdec1,f,c
  7580  01A2FA  52E5               	movf	postdec1,f,c
  7581  01A2FC  0012               	return		;funcret
  7582  01A2FE                     __end_of_WaitMs:
  7583                           	opt callstack 0
  7584                           
  7585 ;; *************** function _update_lcd *****************
  7586 ;; Defined at:
  7587 ;;		line 85 in file "mconfig.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  vterm           1  [STACK] unsigned char 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1  [STACK] unsigned char 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7605 ;;Total ram usage:        0 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:   26
  7608 ;; This function calls:
  7609 ;;		_eaDogM_WriteStringAtPos
  7610 ;;		_wait_lcd_done
  7611 ;; This function is called by:
  7612 ;;		_main
  7613 ;;		_check_help
  7614 ;; This function uses a reentrant model
  7615 ;;
  7616                           
  7617                           	psect	text29
  7618  0187EE                     __ptext29:
  7619                           	opt callstack 0
  7620  0187EE                     _update_lcd:
  7621                           	opt callstack 4
  7622                           
  7623                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  7624                           ;stkvar	_vterm @ sp[(0)+-1]
  7625                           
  7626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7627                           ;incstack = 0
  7628  0187EE  0EFF               	movlw	-1
  7629  0187F0  006F FF8C  F001    	movff	plusw1,btemp
  7630  0187F6  0E03               	movlw	3
  7631  0187F8  1601               	andwf	btemp^0,f,c
  7632  0187FA  0EFF               	movlw	-1
  7633  0187FC  0060  F007  FFE3   	movff	btemp,plusw1
  7634                           
  7635                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7636  018802  EE22  F11F         	lfsr	2,_D+288
  7637  018806  A0DF               	btfss	indf2,0,c
  7638  018808  D004               	goto	l11854
  7639                           
  7640                           ;stkvar	_vterm @ sp[(0)+-1]
  7641  01880A  0EFF               	movlw	-1
  7642  01880C  50E3               	movf	plusw1,w,c
  7643  01880E  B4D8               	btfsc	status,2,c
  7644  018810  D074               	goto	l1659
  7645  018812                     l11854:
  7646                           
  7647                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7648                           ;stkvar	_vterm @ sp[(0)+-1]
  7649  018812  0EFF               	movlw	-1
  7650  018814  50E3               	movf	plusw1,w,c
  7651  018816  0D48               	mullw	72
  7652  018818  0E0F               	movlw	low (_D+16)
  7653  01881A  24F3               	addwf	243,w,c
  7654  01881C  6ED9               	movwf	fsr2l,c
  7655  01881E  0E08               	movlw	high (_D+16)
  7656  018820  20F4               	addwfc	prodh,w,c
  7657  018822  6EDA               	movwf	fsr2h,c
  7658  018824  0E00               	movlw	0
  7659  018826  6EDF               	movwf	indf2,c
  7660                           
  7661                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7662                           ;stkvar	_vterm @ sp[(0)+-1]
  7663  018828  0EFF               	movlw	-1
  7664  01882A  50E3               	movf	plusw1,w,c
  7665  01882C  0D48               	mullw	72
  7666  01882E  0E27               	movlw	low (_D+40)
  7667  018830  24F3               	addwf	243,w,c
  7668  018832  6ED9               	movwf	fsr2l,c
  7669  018834  0E08               	movlw	high (_D+40)
  7670  018836  20F4               	addwfc	prodh,w,c
  7671  018838  6EDA               	movwf	fsr2h,c
  7672  01883A  0E00               	movlw	0
  7673  01883C  6EDF               	movwf	indf2,c
  7674                           
  7675                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7676                           ;stkvar	_vterm @ sp[(0)+-1]
  7677  01883E  0EFF               	movlw	-1
  7678  018840  50E3               	movf	plusw1,w,c
  7679  018842  0D48               	mullw	72
  7680  018844  0E3F               	movlw	low (_D+64)
  7681  018846  24F3               	addwf	243,w,c
  7682  018848  6ED9               	movwf	fsr2l,c
  7683  01884A  0E08               	movlw	high (_D+64)
  7684  01884C  20F4               	addwfc	prodh,w,c
  7685  01884E  6EDA               	movwf	fsr2h,c
  7686  018850  0E00               	movlw	0
  7687  018852  6EDF               	movwf	indf2,c
  7688                           
  7689                           ;mconfig.c: 95:  wait_lcd_done();
  7690  018854  ECF6  F0D4         	call	_wait_lcd_done	;wreg free
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7694                           ;stkvar	_vterm @ sp[(0)+-1]
  7695  018858  0EFF               	movlw	-1
  7696  01885A  50E3               	movf	plusw1,w,c
  7697  01885C  0D48               	mullw	72
  7698  01885E  0EFF               	movlw	low _D
  7699  018860  6E0B               	movwf	(btemp+10)^0,c
  7700  018862  0E07               	movlw	high _D
  7701  018864  6E0C               	movwf	(btemp+11)^0,c
  7702  018866  50F3               	movf	243,w,c
  7703  018868  260B               	addwf	(btemp+10)^0,f,c
  7704  01886A  50F4               	movf	244,w,c
  7705  01886C  220C               	addwfc	(btemp+11)^0,f,c
  7706  01886E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7707  018874  0060  F033  FFE6   	movff	btemp+11,postinc1
  7708  01887A  0E00               	movlw	0
  7709  01887C  6EE6               	movwf	postinc1,c
  7710  01887E  0E00               	movlw	0
  7711  018880  6EE6               	movwf	postinc1,c
  7712  018882  EC7F  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7713                           
  7714                           ; BSR set to: 59
  7715                           ;mconfig.c: 97:  wait_lcd_done();
  7716  018886  ECF6  F0D4         	call	_wait_lcd_done	;wreg free
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7720                           ;stkvar	_vterm @ sp[(0)+-1]
  7721  01888A  0EFF               	movlw	-1
  7722  01888C  50E3               	movf	plusw1,w,c
  7723  01888E  0D48               	mullw	72
  7724  018890  0EFF               	movlw	low _D
  7725  018892  6E0B               	movwf	(btemp+10)^0,c
  7726  018894  0E07               	movlw	high _D
  7727  018896  6E0C               	movwf	(btemp+11)^0,c
  7728  018898  0E18               	movlw	24
  7729  01889A  260B               	addwf	(btemp+10)^0,f,c
  7730  01889C  0E00               	movlw	0
  7731  01889E  220C               	addwfc	(btemp+11)^0,f,c
  7732  0188A0  50F3               	movf	243,w,c
  7733  0188A2  260B               	addwf	(btemp+10)^0,f,c
  7734  0188A4  50F4               	movf	244,w,c
  7735  0188A6  220C               	addwfc	(btemp+11)^0,f,c
  7736  0188A8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7737  0188AE  0060  F033  FFE6   	movff	btemp+11,postinc1
  7738  0188B4  0E00               	movlw	0
  7739  0188B6  6EE6               	movwf	postinc1,c
  7740  0188B8  0E01               	movlw	1
  7741  0188BA  6EE6               	movwf	postinc1,c
  7742  0188BC  EC7F  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7743                           
  7744                           ; BSR set to: 59
  7745                           ;mconfig.c: 99:  wait_lcd_done();
  7746  0188C0  ECF6  F0D4         	call	_wait_lcd_done	;wreg free
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7750                           ;stkvar	_vterm @ sp[(0)+-1]
  7751  0188C4  0EFF               	movlw	-1
  7752  0188C6  50E3               	movf	plusw1,w,c
  7753  0188C8  0D48               	mullw	72
  7754  0188CA  0EFF               	movlw	low _D
  7755  0188CC  6E0B               	movwf	(btemp+10)^0,c
  7756  0188CE  0E07               	movlw	high _D
  7757  0188D0  6E0C               	movwf	(btemp+11)^0,c
  7758  0188D2  0E30               	movlw	48
  7759  0188D4  260B               	addwf	(btemp+10)^0,f,c
  7760  0188D6  0E00               	movlw	0
  7761  0188D8  220C               	addwfc	(btemp+11)^0,f,c
  7762  0188DA  50F3               	movf	243,w,c
  7763  0188DC  260B               	addwf	(btemp+10)^0,f,c
  7764  0188DE  50F4               	movf	244,w,c
  7765  0188E0  220C               	addwfc	(btemp+11)^0,f,c
  7766  0188E2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7767  0188E8  0060  F033  FFE6   	movff	btemp+11,postinc1
  7768  0188EE  0E00               	movlw	0
  7769  0188F0  6EE6               	movwf	postinc1,c
  7770  0188F2  0E02               	movlw	2
  7771  0188F4  6EE6               	movwf	postinc1,c
  7772  0188F6  EC7F  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7773  0188FA                     l1659:
  7774                           
  7775                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7776  0188FA  52E5               	movf	postdec1,f,c
  7777  0188FC  0012               	return		;funcret
  7778  0188FE                     __end_of_update_lcd:
  7779                           	opt callstack 0
  7780                           
  7781 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7782 ;; Defined at:
  7783 ;;		line 278 in file "eadog.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  r               1  [STACK] const unsigned char 
  7786 ;;  c               1  [STACK] const unsigned char 
  7787 ;;  strPtr          2  [STACK] PTR unsigned char 
  7788 ;;		 -> D.lcd(288), D(290), V(188), 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1  [STACK] void 
  7793 ;; Registers used:
  7794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7795 ;; Tracked objects:
  7796 ;;		On entry : 3F/0
  7797 ;;		On exit  : 3F/3B
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7804 ;;Total ram usage:        0 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:   25
  7807 ;; This function calls:
  7808 ;;		_eaDogM_WriteString
  7809 ;;		_send_lcd_cmd_dma
  7810 ;; This function is called by:
  7811 ;;		_update_lcd
  7812 ;;		_vterm_dump
  7813 ;; This function uses a reentrant model
  7814 ;;
  7815                           
  7816                           	psect	text30
  7817  01A2FE                     __ptext30:
  7818                           	opt callstack 0
  7819  01A2FE                     _eaDogM_WriteStringAtPos:
  7820                           	opt callstack 4
  7821                           
  7822                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7823                           ;stkvar	_c @ sp[(0)+-2]
  7824                           
  7825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7826                           ;incstack = 0
  7827  01A2FE  0EFE               	movlw	-2
  7828  01A300  006F FF8C  F00C    	movff	plusw1,btemp+11
  7829                           
  7830                           ;stkvar	_r @ sp[(0)+-1]
  7831  01A306  0EFF               	movlw	-1
  7832  01A308  50E3               	movf	plusw1,w,c
  7833  01A30A  0D10               	mullw	16
  7834  01A30C  50F3               	movf	243,w,c
  7835  01A30E  240C               	addwf	(btemp+11)^0,w,c
  7836  01A310  0F80               	addlw	128
  7837  01A312  6EE6               	movwf	postinc1,c
  7838  01A314  ECB1  F0CE         	call	_send_lcd_cmd_dma	;wreg free
  7839                           
  7840                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  7841                           ;stkvar	_strPtr @ sp[(0)+-4]
  7842  01A318  0EFC               	movlw	-4
  7843  01A31A  006F FF8F FFE6     	movff	plusw1,postinc1
  7844  01A320  006F FF8F FFE6     	movff	plusw1,postinc1
  7845  01A326  EC79  F0C9         	call	_eaDogM_WriteString	;wreg free
  7846                           
  7847                           ; BSR set to: 59
  7848                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7849  01A32A  52E5               	movf	postdec1,f,c
  7850  01A32C  52E5               	movf	postdec1,f,c
  7851  01A32E  52E5               	movf	postdec1,f,c
  7852  01A330  52E5               	movf	postdec1,f,c
  7853  01A332  0012               	return		;funcret
  7854  01A334                     __end_of_eaDogM_WriteStringAtPos:
  7855                           	opt callstack 0
  7856                           
  7857 ;; *************** function _send_lcd_cmd_dma *****************
  7858 ;; Defined at:
  7859 ;;		line 220 in file "eadog.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  strPtr          1  [STACK] unsigned char 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;		None
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  1  [STACK] void 
  7866 ;; Registers used:
  7867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/3D
  7870 ;;		On exit  : 3F/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7877 ;;Total ram usage:        0 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; Hardware stack levels required when called:   24
  7880 ;; This function calls:
  7881 ;;		_printf
  7882 ;;		_ringBufS_flush
  7883 ;;		_start_lcd
  7884 ;;		_wait_lcd_done
  7885 ;;		_wait_lcd_set
  7886 ;; This function is called by:
  7887 ;;		_eaDogM_WriteCommand
  7888 ;;		_eaDogM_WriteStringAtPos
  7889 ;; This function uses a reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text31
  7893  019D62                     __ptext31:
  7894                           	opt callstack 0
  7895  019D62                     _send_lcd_cmd_dma:
  7896                           	opt callstack 4
  7897                           
  7898                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  7899                           
  7900                           ; BSR set to: 59
  7901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7902                           ;incstack = 0
  7903  019D62  ECE2  F0D5         	call	_wait_lcd_set	;wreg free
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  7907  019D66  0E00               	movlw	0
  7908  019D68  6EE6               	movwf	postinc1,c
  7909  019D6A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  7910  019D70  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  7911  019D76  ECB2  F0CA         	call	_ringBufS_flush	;wreg free
  7912  019D7A  92BC               	bcf	188,1,c	;volatile
  7913  019D7C  94BC               	bcf	188,2,c	;volatile
  7914                           
  7915                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  7916  019D7E  013B               	movlb	59	; () banked
  7917  019D80  9FFC               	bcf	252,7,b	;volatile
  7918                           
  7919                           ; BSR set to: 59
  7920                           ;eadog.c: 229:  DMA1SSZ = 1;
  7921  019D82  0E00               	movlw	0
  7922  019D84  6FF8               	movwf	248,b	;volatile
  7923  019D86  0E01               	movlw	1
  7924  019D88  6FF7               	movwf	247,b	;volatile
  7925                           
  7926                           ; BSR set to: 59
  7927                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  7928  019D8A  8FFC               	bsf	252,7,b	;volatile
  7929                           
  7930                           ; BSR set to: 59
  7931                           ;eadog.c: 231:  printf("%c", strPtr);
  7932                           ;stkvar	_strPtr @ sp[(0)+-1]
  7933  019D8C  0EFF               	movlw	-1
  7934  019D8E  50E3               	movf	plusw1,w,c
  7935  019D90  6EE6               	movwf	postinc1,c
  7936  019D92  0E00               	movlw	0
  7937  019D94  6EE6               	movwf	postinc1,c
  7938  019D96  0EF9               	movlw	low STR_26
  7939  019D98  6EE6               	movwf	postinc1,c
  7940  019D9A  0EFF               	movlw	high STR_26
  7941  019D9C  6EE6               	movwf	postinc1,c
  7942  019D9E  0E04               	movlw	4
  7943  019DA0  6EE6               	movwf	postinc1,c
  7944  019DA2  EC98  F0CD         	call	_printf	;wreg free
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;eadog.c: 232:  start_lcd();
  7948  019DA6  ECE5  F0D5         	call	_start_lcd	;wreg free
  7949                           
  7950                           ; BSR set to: 59
  7951                           ;eadog.c: 233:  wait_lcd_done();
  7952  019DAA  ECF6  F0D4         	call	_wait_lcd_done	;wreg free
  7953                           
  7954                           ; BSR set to: 0
  7955  019DAE  82BC               	bsf	188,1,c	;volatile
  7956                           
  7957                           ; BSR set to: 0
  7958                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7959  019DB0  52E5               	movf	postdec1,f,c
  7960  019DB2  0012               	return		;funcret
  7961  019DB4                     __end_of_send_lcd_cmd_dma:
  7962                           	opt callstack 0
  7963                           
  7964 ;; *************** function _wait_lcd_done *****************
  7965 ;; Defined at:
  7966 ;;		line 156 in file "eadog.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;		None
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;		None
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  1  [STACK] void 
  7973 ;; Registers used:
  7974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 3F/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7984 ;;Total ram usage:        0 bytes
  7985 ;; Hardware stack levels used:    1
  7986 ;; Hardware stack levels required when called:   16
  7987 ;; This function calls:
  7988 ;;		_wdtdelay
  7989 ;; This function is called by:
  7990 ;;		_send_lcd_cmd_dma
  7991 ;;		_update_lcd
  7992 ;;		_vterm_dump
  7993 ;; This function uses a reentrant model
  7994 ;;
  7995                           
  7996                           	psect	text32
  7997  01A9EC                     __ptext32:
  7998                           	opt callstack 0
  7999  01A9EC                     _wait_lcd_done:
  8000                           	opt callstack 13
  8001                           
  8002                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  8003                           
  8004                           ; BSR set to: 0
  8005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8006                           ;incstack = 0
  8007  01A9EC  0100               	movlb	0	; () banked
  8008  01A9EE  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  8009  01A9F0  D7FD               	goto	_wait_lcd_done
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;eadog.c: 159:  wdtdelay(50);
  8013  01A9F2  0E32               	movlw	50
  8014  01A9F4  6EE6               	movwf	postinc1,c
  8015  01A9F6  0E00               	movlw	0
  8016  01A9F8  6EE6               	movwf	postinc1,c
  8017  01A9FA  0E00               	movlw	0
  8018  01A9FC  6EE6               	movwf	postinc1,c
  8019  01A9FE  0E00               	movlw	0
  8020  01AA00  6EE6               	movwf	postinc1,c
  8021  01AA02  EC29  F0CE         	call	_wdtdelay	;wreg free
  8022                           
  8023                           ; BSR set to: 0
  8024                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8025  01AA06  0012               	return		;funcret
  8026  01AA08                     __end_of_wait_lcd_done:
  8027                           	opt callstack 0
  8028                           
  8029 ;; *************** function _wdtdelay *****************
  8030 ;; Defined at:
  8031 ;;		line 23 in file "eadog.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;  delay           4  [STACK] const unsigned long 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1  [STACK] void 
  8038 ;; Registers used:
  8039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 3F/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8049 ;;Total ram usage:        0 bytes
  8050 ;; Hardware stack levels used:    1
  8051 ;; Hardware stack levels required when called:   15
  8052 ;; This function calls:
  8053 ;;		Nothing
  8054 ;; This function is called by:
  8055 ;;		_init_display
  8056 ;;		_send_lcd_cmd
  8057 ;;		_send_lcd_cmd_long
  8058 ;;		_wait_lcd_done
  8059 ;; This function uses a reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text33
  8063  019C52                     __ptext33:
  8064                           	opt callstack 0
  8065  019C52                     _wdtdelay:
  8066                           	opt callstack 13
  8067                           
  8068                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  8069                           
  8070                           ; BSR set to: 0
  8071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8072                           ;incstack = 0
  8073  019C52  0100               	movlb	0	; () banked
  8074  019C54  6B94               	clrf	wdtdelay@dcount& (0+255),b
  8075  019C56  6B95               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8076  019C58  6B96               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8077  019C5A  6B97               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8078  019C5C                     l1424:
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;eadog.c: 28:   __nop();
  8082  019C5C  F000               	nop	
  8083  019C5E  0004               	clrwdt		;# 
  8084                           
  8085                           ;eadog.c: 30:  };
  8086  019C60  0E01               	movlw	1
  8087  019C62  0100               	movlb	0	; () banked
  8088  019C64  2794               	addwf	wdtdelay@dcount& (0+255),f,b
  8089  019C66  0E00               	movlw	0
  8090  019C68  2395               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8091  019C6A  2396               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8092  019C6C  2397               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;stkvar	_delay @ sp[(0)+-4]
  8096  019C6E  0EFC               	movlw	-4
  8097  019C70  006F FF8C  F001    	movff	plusw1,btemp
  8098  019C76  5194               	movf	wdtdelay@dcount& (0+255),w,b
  8099  019C78  5C01               	subwf	btemp^0,w,c
  8100  019C7A  0EFD               	movlw	-3
  8101  019C7C  006F FF8C  F001    	movff	plusw1,btemp
  8102  019C82  5195               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8103  019C84  5801               	subwfb	btemp^0,w,c
  8104  019C86  0EFE               	movlw	-2
  8105  019C88  006F FF8C  F001    	movff	plusw1,btemp
  8106  019C8E  5196               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8107  019C90  5801               	subwfb	btemp^0,w,c
  8108  019C92  0EFF               	movlw	-1
  8109  019C94  006F FF8C  F001    	movff	plusw1,btemp
  8110  019C9A  5197               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8111  019C9C  5801               	subwfb	btemp^0,w,c
  8112  019C9E  B0D8               	btfsc	status,0,c
  8113  019CA0  D7DD               	goto	l1424
  8114                           
  8115                           ; BSR set to: 0
  8116                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8117  019CA2  52E5               	movf	postdec1,f,c
  8118  019CA4  52E5               	movf	postdec1,f,c
  8119  019CA6  52E5               	movf	postdec1,f,c
  8120  019CA8  52E5               	movf	postdec1,f,c
  8121  019CAA  0012               	return		;funcret
  8122  019CAC                     __end_of_wdtdelay:
  8123                           	opt callstack 0
  8124                           
  8125 ;; *************** function _eaDogM_WriteString *****************
  8126 ;; Defined at:
  8127 ;;		line 199 in file "eadog.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;  strPtr          2  [STACK] PTR unsigned char 
  8130 ;;		 -> D.lcd(288), D(290), V(188), 
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;		None
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  1  [STACK] void 
  8135 ;; Registers used:
  8136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8137 ;; Tracked objects:
  8138 ;;		On entry : 3F/0
  8139 ;;		On exit  : 3F/3B
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8146 ;;Total ram usage:        0 bytes
  8147 ;; Hardware stack levels used:    1
  8148 ;; Hardware stack levels required when called:   24
  8149 ;; This function calls:
  8150 ;;		_printf
  8151 ;;		_ringBufS_flush
  8152 ;;		_start_lcd
  8153 ;;		_strlen
  8154 ;;		_wait_lcd_set
  8155 ;; This function is called by:
  8156 ;;		_eaDogM_WriteStringAtPos
  8157 ;; This function uses a reentrant model
  8158 ;;
  8159                           
  8160                           	psect	text34
  8161  0192F2                     __ptext34:
  8162                           	opt callstack 0
  8163  0192F2                     _eaDogM_WriteString:
  8164                           	opt callstack 4
  8165                           
  8166                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  8167                           
  8168                           ; BSR set to: 0
  8169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8170                           ;incstack = 0
  8171  0192F2  ECE2  F0D5         	call	_wait_lcd_set	;wreg free
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  8175  0192F6  0E00               	movlw	0
  8176  0192F8  6EE6               	movwf	postinc1,c
  8177  0192FA  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8178  019300  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8179  019306  ECB2  F0CA         	call	_ringBufS_flush	;wreg free
  8180  01930A  94BC               	bcf	188,2,c	;volatile
  8181                           
  8182                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8183                           ;stkvar	_strPtr @ sp[(0)+-2]
  8184  01930C  0EFE               	movlw	-2
  8185  01930E  006F FF8F FFE6     	movff	plusw1,postinc1
  8186  019314  006F FF8F FFE6     	movff	plusw1,postinc1
  8187  01931A  ECCC  F0C9         	call	_strlen	;wreg free
  8188  01931E  5002               	movf	(btemp+1)^0,w,c
  8189  019320  E104               	bnz	u11500
  8190  019322  0E41               	movlw	65
  8191  019324  5C01               	subwf	btemp^0,w,c
  8192  019326  A0D8               	btfss	status,0,c
  8193  019328  D010               	goto	l11808
  8194  01932A                     u11500:
  8195                           
  8196                           ;stkvar	_strPtr @ sp[(0)+-2]
  8197  01932A  0EFE               	movlw	-2
  8198  01932C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8199  019332  0EFF               	movlw	-1
  8200  019334  006F FF8C  F00C    	movff	plusw1,btemp+11
  8201  01933A  0E40               	movlw	64
  8202  01933C  240B               	addwf	(btemp+10)^0,w,c
  8203  01933E  6ED9               	movwf	fsr2l,c
  8204  019340  0E00               	movlw	0
  8205  019342  200C               	addwfc	(btemp+11)^0,w,c
  8206  019344  6EDA               	movwf	fsr2h,c
  8207  019346  0E00               	movlw	0
  8208  019348  6EDF               	movwf	indf2,c
  8209  01934A                     l11808:
  8210                           
  8211                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  8212  01934A  013B               	movlb	59	; () banked
  8213  01934C  9FFC               	bcf	252,7,b	;volatile
  8214                           
  8215                           ; BSR set to: 59
  8216                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  8217                           ;stkvar	_strPtr @ sp[(0)+-2]
  8218  01934E  0EFE               	movlw	-2
  8219  019350  006F FF8F FFE6     	movff	plusw1,postinc1
  8220  019356  006F FF8F FFE6     	movff	plusw1,postinc1
  8221  01935C  ECCC  F0C9         	call	_strlen	;wreg free
  8222  019360  0060  F007  FBF7   	movff	btemp,15351	;volatile
  8223  019366  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  8224                           
  8225                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  8226  01936C  013B               	movlb	59	; () banked
  8227  01936E  8FFC               	bsf	252,7,b	;volatile
  8228                           
  8229                           ; BSR set to: 59
  8230                           ;eadog.c: 210:  printf("%s", strPtr);
  8231                           ;stkvar	_strPtr @ sp[(0)+-2]
  8232  019370  0EFE               	movlw	-2
  8233  019372  006F FF8F FFE6     	movff	plusw1,postinc1
  8234  019378  006F FF8F FFE6     	movff	plusw1,postinc1
  8235  01937E  0EFC               	movlw	low STR_25
  8236  019380  6EE6               	movwf	postinc1,c
  8237  019382  0EFF               	movlw	high STR_25
  8238  019384  6EE6               	movwf	postinc1,c
  8239  019386  0E04               	movlw	4
  8240  019388  6EE6               	movwf	postinc1,c
  8241  01938A  EC98  F0CD         	call	_printf	;wreg free
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;eadog.c: 211:  start_lcd();
  8245  01938E  ECE5  F0D5         	call	_start_lcd	;wreg free
  8246                           
  8247                           ; BSR set to: 59
  8248                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  8249  019392  52E5               	movf	postdec1,f,c
  8250  019394  52E5               	movf	postdec1,f,c
  8251  019396  0012               	return		;funcret
  8252  019398                     __end_of_eaDogM_WriteString:
  8253                           	opt callstack 0
  8254                           
  8255 ;; *************** function _wait_lcd_set *****************
  8256 ;; Defined at:
  8257 ;;		line 146 in file "eadog.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;		None
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;		None
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1  [STACK] void 
  8264 ;; Registers used:
  8265 ;;		None
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/3D
  8268 ;;		On exit  : 3F/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8275 ;;Total ram usage:        0 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:   15
  8278 ;; This function calls:
  8279 ;;		Nothing
  8280 ;; This function is called by:
  8281 ;;		_eaDogM_WriteString
  8282 ;;		_send_lcd_cmd_dma
  8283 ;; This function uses a reentrant model
  8284 ;;
  8285                           
  8286                           	psect	text35
  8287  01ABC4                     __ptext35:
  8288                           	opt callstack 0
  8289  01ABC4                     _wait_lcd_set:
  8290                           	opt callstack 12
  8291                           
  8292                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  8293                           
  8294                           ; BSR set to: 59
  8295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8296                           ;incstack = 0
  8297  01ABC4  0100               	movlb	0	; () banked
  8298  01ABC6  8760               	bsf	_spi_link& (0+255),3,b	;volatile
  8299                           
  8300                           ; BSR set to: 0
  8301                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8302  01ABC8  0012               	return		;funcret
  8303  01ABCA                     __end_of_wait_lcd_set:
  8304                           	opt callstack 0
  8305                           
  8306 ;; *************** function _start_lcd *****************
  8307 ;; Defined at:
  8308 ;;		line 141 in file "eadog.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1  [STACK] void 
  8315 ;; Registers used:
  8316 ;;		None
  8317 ;; Tracked objects:
  8318 ;;		On entry : 3F/0
  8319 ;;		On exit  : 3F/3B
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8326 ;;Total ram usage:        0 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:   15
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_eaDogM_WriteString
  8333 ;;		_send_lcd_cmd_dma
  8334 ;; This function uses a reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text36
  8338  01ABCA                     __ptext36:
  8339                           	opt callstack 0
  8340  01ABCA                     _start_lcd:
  8341                           	opt callstack 12
  8342                           
  8343                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  8344                           
  8345                           ; BSR set to: 0
  8346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8347                           ;incstack = 0
  8348  01ABCA  013B               	movlb	59	; () banked
  8349  01ABCC  8DFC               	bsf	252,6,b	;volatile
  8350                           
  8351                           ; BSR set to: 59
  8352                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8353  01ABCE  0012               	return		;funcret
  8354  01ABD0                     __end_of_start_lcd:
  8355                           	opt callstack 0
  8356                           
  8357 ;; *************** function _ringBufS_flush *****************
  8358 ;; Defined at:
  8359 ;;		line 76 in file "ringbufs.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8362 ;;		 -> ring_buf1(67), 
  8363 ;;  clearBuffer     1  [STACK] const char 
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;		None
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1  [STACK] void 
  8368 ;; Registers used:
  8369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8370 ;; Tracked objects:
  8371 ;;		On entry : 3F/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8379 ;;Total ram usage:        0 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:   16
  8382 ;; This function calls:
  8383 ;;		_memset
  8384 ;; This function is called by:
  8385 ;;		_eaDogM_WriteString
  8386 ;;		_send_lcd_cmd_dma
  8387 ;; This function uses a reentrant model
  8388 ;;
  8389                           
  8390                           	psect	text37
  8391  019564                     __ptext37:
  8392                           	opt callstack 0
  8393  019564                     _ringBufS_flush:
  8394                           	opt callstack 11
  8395                           
  8396                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8397                           ;stkvar	__this @ sp[(0)+-2]
  8398                           
  8399                           ; BSR set to: 59
  8400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8401                           ;incstack = 0
  8402  019564  0EFE               	movlw	-2
  8403  019566  006F FF8C  F00B    	movff	plusw1,btemp+10
  8404  01956C  0EFF               	movlw	-1
  8405  01956E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8406  019574  0E42               	movlw	66
  8407  019576  240B               	addwf	(btemp+10)^0,w,c
  8408  019578  6ED9               	movwf	fsr2l,c
  8409  01957A  0E00               	movlw	0
  8410  01957C  200C               	addwfc	(btemp+11)^0,w,c
  8411  01957E  6EDA               	movwf	fsr2h,c
  8412  019580  0E00               	movlw	0
  8413  019582  6EDF               	movwf	indf2,c
  8414                           
  8415                           ;ringbufs.c: 79:  _this->head = 0;
  8416                           ;stkvar	__this @ sp[(0)+-2]
  8417  019584  0EFE               	movlw	-2
  8418  019586  006F FF8C  F00B    	movff	plusw1,btemp+10
  8419  01958C  0EFF               	movlw	-1
  8420  01958E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8421  019594  0E40               	movlw	64
  8422  019596  240B               	addwf	(btemp+10)^0,w,c
  8423  019598  6ED9               	movwf	fsr2l,c
  8424  01959A  0E00               	movlw	0
  8425  01959C  200C               	addwfc	(btemp+11)^0,w,c
  8426  01959E  6EDA               	movwf	fsr2h,c
  8427  0195A0  0E00               	movlw	0
  8428  0195A2  6EDF               	movwf	indf2,c
  8429                           
  8430                           ;ringbufs.c: 80:  _this->tail = 0;
  8431                           ;stkvar	__this @ sp[(0)+-2]
  8432  0195A4  0EFE               	movlw	-2
  8433  0195A6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8434  0195AC  0EFF               	movlw	-1
  8435  0195AE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8436  0195B4  0E41               	movlw	65
  8437  0195B6  240B               	addwf	(btemp+10)^0,w,c
  8438  0195B8  6ED9               	movwf	fsr2l,c
  8439  0195BA  0E00               	movlw	0
  8440  0195BC  200C               	addwfc	(btemp+11)^0,w,c
  8441  0195BE  6EDA               	movwf	fsr2h,c
  8442  0195C0  0E00               	movlw	0
  8443  0195C2  6EDF               	movwf	indf2,c
  8444                           
  8445                           ;ringbufs.c: 81:  if (clearBuffer) {
  8446                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8447  0195C4  0EFD               	movlw	-3
  8448  0195C6  50E3               	movf	plusw1,w,c
  8449  0195C8  B4D8               	btfsc	status,2,c
  8450  0195CA  D011               	goto	l1568
  8451                           
  8452                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8453  0195CC  0E40               	movlw	64
  8454  0195CE  6EE6               	movwf	postinc1,c
  8455  0195D0  0E00               	movlw	0
  8456  0195D2  6EE6               	movwf	postinc1,c
  8457  0195D4  0E00               	movlw	0
  8458  0195D6  6EE6               	movwf	postinc1,c
  8459  0195D8  0E00               	movlw	0
  8460  0195DA  6EE6               	movwf	postinc1,c
  8461                           
  8462                           ;stkvar	__this @ sp[(-4)+-2]
  8463  0195DC  0EFA               	movlw	-6
  8464  0195DE  006F FF8F FFE6     	movff	plusw1,postinc1
  8465  0195E4  006F FF8F FFE6     	movff	plusw1,postinc1
  8466  0195EA  EC52  F0AF         	call	_memset	;wreg free
  8467  0195EE                     l1568:
  8468                           
  8469                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8470  0195EE  52E5               	movf	postdec1,f,c
  8471  0195F0  52E5               	movf	postdec1,f,c
  8472  0195F2  52E5               	movf	postdec1,f,c
  8473  0195F4  0012               	return		;funcret
  8474  0195F6                     __end_of_ringBufS_flush:
  8475                           	opt callstack 0
  8476                           
  8477 ;; *************** function _memset *****************
  8478 ;; Defined at:
  8479 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  dest            2  [STACK] PTR void 
  8482 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8483 ;;  c               2  [STACK] int 
  8484 ;;  n               2  [STACK] unsigned int 
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;  s               2  [STACK] PTR unsigned char 
  8487 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8488 ;;  k               2  [STACK] unsigned int 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  2  [STACK] PTR void 
  8491 ;; Registers used:
  8492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8502 ;;Total ram usage:        0 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:   15
  8505 ;; This function calls:
  8506 ;;		Nothing
  8507 ;; This function is called by:
  8508 ;;		_ringBufS_init
  8509 ;;		_ringBufS_flush
  8510 ;; This function uses a reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text38
  8514  015EA4                     __ptext38:
  8515                           	opt callstack 0
  8516  015EA4                     _memset:
  8517                           	opt callstack 0
  8518                           
  8519                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8520  015EA4  52E6               	movf	postinc1,f,c
  8521  015EA6  52E6               	movf	postinc1,f,c
  8522  015EA8  52E6               	movf	postinc1,f,c
  8523  015EAA  52E6               	movf	postinc1,f,c
  8524                           
  8525                           ;stkvar	_dest @ sp[(-4)+-2]
  8526                           
  8527                           ;incstack = 0
  8528  015EAC  0EFA               	movlw	-6
  8529  015EAE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8530  015EB4  0EFB               	movlw	-5
  8531  015EB6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8532                           
  8533                           ;stkvar	_s @ sp[(-4)+0]
  8534  015EBC  0EFD               	movlw	-3
  8535  015EBE  0060  F033  FFE3   	movff	btemp+11,plusw1
  8536  015EC4  0EFC               	movlw	-4
  8537  015EC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8538                           
  8539                           ;stkvar	_n @ sp[(-4)+-6]
  8540  015ECC  0EF6               	movlw	-10
  8541  015ECE  006F FF8C  F001    	movff	plusw1,btemp
  8542  015ED4  0EF7               	movlw	-9
  8543  015ED6  50E3               	movf	plusw1,w,c
  8544  015ED8  1001               	iorwf	btemp^0,w,c
  8545  015EDA  B4D8               	btfsc	status,2,c
  8546  015EDC  D154               	goto	u10110
  8547                           
  8548                           ;stkvar	_c @ sp[(-4)+-4]
  8549                           ;stkvar	_s @ sp[(-4)+0]
  8550  015EDE  0EFC               	movlw	-4
  8551  015EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8552  015EE6  0EFD               	movlw	-3
  8553  015EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8554  015EEE  0EF8               	movlw	-8
  8555  015EF0  006F FF8F FFDF     	movff	plusw1,indf2
  8556                           
  8557                           ;stkvar	_c @ sp[(-4)+-4]
  8558                           ;stkvar	_n @ sp[(-4)+-6]
  8559                           ;stkvar	_s @ sp[(-4)+0]
  8560  015EF6  0EFC               	movlw	-4
  8561  015EF8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8562  015EFE  0EFD               	movlw	-3
  8563  015F00  006F FF8C  F00C    	movff	plusw1,btemp+11
  8564  015F06  0EF6               	movlw	-10
  8565  015F08  50E3               	movf	plusw1,w,c
  8566  015F0A  260B               	addwf	(btemp+10)^0,f,c
  8567  015F0C  0EF7               	movlw	-9
  8568  015F0E  50E3               	movf	plusw1,w,c
  8569  015F10  220C               	addwfc	(btemp+11)^0,f,c
  8570  015F12  0EFF               	movlw	255
  8571  015F14  240B               	addwf	(btemp+10)^0,w,c
  8572  015F16  6ED9               	movwf	fsr2l,c
  8573  015F18  0EFF               	movlw	255
  8574  015F1A  200C               	addwfc	(btemp+11)^0,w,c
  8575  015F1C  6EDA               	movwf	fsr2h,c
  8576  015F1E  0EF8               	movlw	-8
  8577  015F20  006F FF8F FFDF     	movff	plusw1,indf2
  8578                           
  8579                           ;stkvar	_n @ sp[(-4)+-6]
  8580  015F26  0EF7               	movlw	-9
  8581  015F28  50E3               	movf	plusw1,w,c
  8582  015F2A  E108               	bnz	l10980
  8583  015F2C  0EF6               	movlw	-10
  8584  015F2E  006F FF8C  F001    	movff	plusw1,btemp
  8585  015F34  0E03               	movlw	3
  8586  015F36  5E01               	subwf	btemp^0,f,c
  8587  015F38  A0D8               	btfss	status,0,c
  8588  015F3A  D125               	goto	u10110
  8589  015F3C                     l10980:
  8590                           
  8591                           ;stkvar	_c @ sp[(-4)+-4]
  8592                           ;stkvar	_s @ sp[(-4)+0]
  8593  015F3C  0EFC               	movlw	-4
  8594  015F3E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8595  015F44  0EFD               	movlw	-3
  8596  015F46  006F FF8C  F00C    	movff	plusw1,btemp+11
  8597  015F4C  0E01               	movlw	1
  8598  015F4E  240B               	addwf	(btemp+10)^0,w,c
  8599  015F50  6ED9               	movwf	fsr2l,c
  8600  015F52  0E00               	movlw	0
  8601  015F54  200C               	addwfc	(btemp+11)^0,w,c
  8602  015F56  6EDA               	movwf	fsr2h,c
  8603  015F58  0EF8               	movlw	-8
  8604  015F5A  006F FF8F FFDF     	movff	plusw1,indf2
  8605                           
  8606                           ;stkvar	_c @ sp[(-4)+-4]
  8607                           ;stkvar	_s @ sp[(-4)+0]
  8608  015F60  0EFC               	movlw	-4
  8609  015F62  006F FF8C  F00B    	movff	plusw1,btemp+10
  8610  015F68  0EFD               	movlw	-3
  8611  015F6A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8612  015F70  0E02               	movlw	2
  8613  015F72  240B               	addwf	(btemp+10)^0,w,c
  8614  015F74  6ED9               	movwf	fsr2l,c
  8615  015F76  0E00               	movlw	0
  8616  015F78  200C               	addwfc	(btemp+11)^0,w,c
  8617  015F7A  6EDA               	movwf	fsr2h,c
  8618  015F7C  0EF8               	movlw	-8
  8619  015F7E  006F FF8F FFDF     	movff	plusw1,indf2
  8620                           
  8621                           ;stkvar	_c @ sp[(-4)+-4]
  8622                           ;stkvar	_n @ sp[(-4)+-6]
  8623                           ;stkvar	_s @ sp[(-4)+0]
  8624  015F84  0EFC               	movlw	-4
  8625  015F86  006F FF8C  F00B    	movff	plusw1,btemp+10
  8626  015F8C  0EFD               	movlw	-3
  8627  015F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8628  015F94  0EF6               	movlw	-10
  8629  015F96  50E3               	movf	plusw1,w,c
  8630  015F98  260B               	addwf	(btemp+10)^0,f,c
  8631  015F9A  0EF7               	movlw	-9
  8632  015F9C  50E3               	movf	plusw1,w,c
  8633  015F9E  220C               	addwfc	(btemp+11)^0,f,c
  8634  015FA0  0EFE               	movlw	254
  8635  015FA2  240B               	addwf	(btemp+10)^0,w,c
  8636  015FA4  6ED9               	movwf	fsr2l,c
  8637  015FA6  0EFF               	movlw	255
  8638  015FA8  200C               	addwfc	(btemp+11)^0,w,c
  8639  015FAA  6EDA               	movwf	fsr2h,c
  8640  015FAC  0EF8               	movlw	-8
  8641  015FAE  006F FF8F FFDF     	movff	plusw1,indf2
  8642                           
  8643                           ;stkvar	_c @ sp[(-4)+-4]
  8644                           ;stkvar	_n @ sp[(-4)+-6]
  8645                           ;stkvar	_s @ sp[(-4)+0]
  8646  015FB4  0EFC               	movlw	-4
  8647  015FB6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8648  015FBC  0EFD               	movlw	-3
  8649  015FBE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8650  015FC4  0EF6               	movlw	-10
  8651  015FC6  50E3               	movf	plusw1,w,c
  8652  015FC8  260B               	addwf	(btemp+10)^0,f,c
  8653  015FCA  0EF7               	movlw	-9
  8654  015FCC  50E3               	movf	plusw1,w,c
  8655  015FCE  220C               	addwfc	(btemp+11)^0,f,c
  8656  015FD0  0EFD               	movlw	253
  8657  015FD2  240B               	addwf	(btemp+10)^0,w,c
  8658  015FD4  6ED9               	movwf	fsr2l,c
  8659  015FD6  0EFF               	movlw	255
  8660  015FD8  200C               	addwfc	(btemp+11)^0,w,c
  8661  015FDA  6EDA               	movwf	fsr2h,c
  8662  015FDC  0EF8               	movlw	-8
  8663  015FDE  006F FF8F FFDF     	movff	plusw1,indf2
  8664                           
  8665                           ;stkvar	_n @ sp[(-4)+-6]
  8666  015FE4  0EF7               	movlw	-9
  8667  015FE6  50E3               	movf	plusw1,w,c
  8668  015FE8  E108               	bnz	l10986
  8669  015FEA  0EF6               	movlw	-10
  8670  015FEC  006F FF8C  F001    	movff	plusw1,btemp
  8671  015FF2  0E07               	movlw	7
  8672  015FF4  5E01               	subwf	btemp^0,f,c
  8673  015FF6  A0D8               	btfss	status,0,c
  8674  015FF8  D0C6               	goto	u10110
  8675  015FFA                     l10986:
  8676                           
  8677                           ;stkvar	_c @ sp[(-4)+-4]
  8678                           ;stkvar	_s @ sp[(-4)+0]
  8679  015FFA  0EFC               	movlw	-4
  8680  015FFC  006F FF8C  F00B    	movff	plusw1,btemp+10
  8681  016002  0EFD               	movlw	-3
  8682  016004  006F FF8C  F00C    	movff	plusw1,btemp+11
  8683  01600A  0E03               	movlw	3
  8684  01600C  240B               	addwf	(btemp+10)^0,w,c
  8685  01600E  6ED9               	movwf	fsr2l,c
  8686  016010  0E00               	movlw	0
  8687  016012  200C               	addwfc	(btemp+11)^0,w,c
  8688  016014  6EDA               	movwf	fsr2h,c
  8689  016016  0EF8               	movlw	-8
  8690  016018  006F FF8F FFDF     	movff	plusw1,indf2
  8691                           
  8692                           ;stkvar	_c @ sp[(-4)+-4]
  8693                           ;stkvar	_n @ sp[(-4)+-6]
  8694                           ;stkvar	_s @ sp[(-4)+0]
  8695  01601E  0EFC               	movlw	-4
  8696  016020  006F FF8C  F00B    	movff	plusw1,btemp+10
  8697  016026  0EFD               	movlw	-3
  8698  016028  006F FF8C  F00C    	movff	plusw1,btemp+11
  8699  01602E  0EF6               	movlw	-10
  8700  016030  50E3               	movf	plusw1,w,c
  8701  016032  260B               	addwf	(btemp+10)^0,f,c
  8702  016034  0EF7               	movlw	-9
  8703  016036  50E3               	movf	plusw1,w,c
  8704  016038  220C               	addwfc	(btemp+11)^0,f,c
  8705  01603A  0EFC               	movlw	252
  8706  01603C  240B               	addwf	(btemp+10)^0,w,c
  8707  01603E  6ED9               	movwf	fsr2l,c
  8708  016040  0EFF               	movlw	255
  8709  016042  200C               	addwfc	(btemp+11)^0,w,c
  8710  016044  6EDA               	movwf	fsr2h,c
  8711  016046  0EF8               	movlw	-8
  8712  016048  006F FF8F FFDF     	movff	plusw1,indf2
  8713                           
  8714                           ;stkvar	_n @ sp[(-4)+-6]
  8715  01604E  0EF7               	movlw	-9
  8716  016050  50E3               	movf	plusw1,w,c
  8717  016052  E108               	bnz	l10992
  8718  016054  0EF6               	movlw	-10
  8719  016056  006F FF8C  F001    	movff	plusw1,btemp
  8720  01605C  0E09               	movlw	9
  8721  01605E  5E01               	subwf	btemp^0,f,c
  8722  016060  A0D8               	btfss	status,0,c
  8723  016062  D091               	goto	u10110
  8724  016064                     l10992:
  8725                           
  8726                           ;stkvar	_s @ sp[(-4)+0]
  8727  016064  0EFC               	movlw	-4
  8728  016066  006F FF8C  F00B    	movff	plusw1,btemp+10
  8729  01606C  1E0B               	comf	(btemp+10)^0,f,c
  8730  01606E  0EFD               	movlw	-3
  8731  016070  006F FF8C  F00C    	movff	plusw1,btemp+11
  8732  016076  1E0C               	comf	(btemp+11)^0,f,c
  8733  016078  2A0B               	incf	(btemp+10)^0,f,c
  8734  01607A  B4D8               	btfsc	status,2,c
  8735  01607C  2A0C               	incf	(btemp+11)^0,f,c
  8736  01607E  0E03               	movlw	3
  8737  016080  160B               	andwf	(btemp+10)^0,f,c
  8738  016082  0E00               	movlw	0
  8739  016084  160C               	andwf	(btemp+11)^0,f,c
  8740                           
  8741                           ;stkvar	_k @ sp[(-4)+2]
  8742  016086  0EFE               	movlw	-2
  8743  016088  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8744  01608E  0EFF               	movlw	-1
  8745  016090  0060  F033  FFE3   	movff	btemp+11,plusw1
  8746                           
  8747                           ;stkvar	_k @ sp[(-4)+2]
  8748                           ;stkvar	_s @ sp[(-4)+0]
  8749  016096  0EFC               	movlw	-4
  8750  016098  50E3               	movf	plusw1,w,c
  8751  01609A  6E01               	movwf	btemp^0,c
  8752  01609C  0EFE               	movlw	-2
  8753  01609E  50E3               	movf	plusw1,w,c
  8754  0160A0  2601               	addwf	btemp^0,f,c
  8755  0160A2  0EFC               	movlw	-4
  8756  0160A4  0060  F007  FFE3   	movff	btemp,plusw1
  8757  0160AA  0EFD               	movlw	-3
  8758  0160AC  50E3               	movf	plusw1,w,c
  8759  0160AE  6E01               	movwf	btemp^0,c
  8760  0160B0  0EFF               	movlw	-1
  8761  0160B2  50E3               	movf	plusw1,w,c
  8762  0160B4  2201               	addwfc	btemp^0,f,c
  8763  0160B6  0EFD               	movlw	-3
  8764  0160B8  0060  F007  FFE3   	movff	btemp,plusw1
  8765                           
  8766                           ;stkvar	_k @ sp[(-4)+2]
  8767                           ;stkvar	_n @ sp[(-4)+-6]
  8768  0160BE  0EF6               	movlw	-10
  8769  0160C0  50E3               	movf	plusw1,w,c
  8770  0160C2  6E01               	movwf	btemp^0,c
  8771  0160C4  0EFE               	movlw	-2
  8772  0160C6  50E3               	movf	plusw1,w,c
  8773  0160C8  5E01               	subwf	btemp^0,f,c
  8774  0160CA  0EF6               	movlw	-10
  8775  0160CC  0060  F007  FFE3   	movff	btemp,plusw1
  8776  0160D2  0EF7               	movlw	-9
  8777  0160D4  50E3               	movf	plusw1,w,c
  8778  0160D6  6E01               	movwf	btemp^0,c
  8779  0160D8  0EFF               	movlw	-1
  8780  0160DA  50E3               	movf	plusw1,w,c
  8781  0160DC  5A01               	subwfb	btemp^0,f,c
  8782  0160DE  0EF7               	movlw	-9
  8783  0160E0  0060  F007  FFE3   	movff	btemp,plusw1
  8784  0160E6  0EFC               	movlw	252
  8785  0160E8  6E0B               	movwf	(btemp+10)^0,c
  8786  0160EA  0EFF               	movlw	255
  8787  0160EC  6E0C               	movwf	(btemp+11)^0,c
  8788                           
  8789                           ;stkvar	_n @ sp[(-4)+-6]
  8790  0160EE  0EF6               	movlw	-10
  8791  0160F0  006F FF8C  F001    	movff	plusw1,btemp
  8792  0160F6  500B               	movf	(btemp+10)^0,w,c
  8793  0160F8  1601               	andwf	btemp^0,f,c
  8794  0160FA  0EF6               	movlw	-10
  8795  0160FC  0060  F007  FFE3   	movff	btemp,plusw1
  8796  016102  0EF7               	movlw	-9
  8797  016104  006F FF8C  F001    	movff	plusw1,btemp
  8798  01610A  500C               	movf	(btemp+11)^0,w,c
  8799  01610C  1601               	andwf	btemp^0,f,c
  8800  01610E  0EF7               	movlw	-9
  8801  016110  D02E               	goto	L4
  8802  016112                     l11000:
  8803                           
  8804                           ;stkvar	_c @ sp[(-4)+-4]
  8805                           ;stkvar	_s @ sp[(-4)+0]
  8806  016112  0EFC               	movlw	-4
  8807  016114  006F FF8F FFD9     	movff	plusw1,fsr2l
  8808  01611A  0EFD               	movlw	-3
  8809  01611C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8810  016122  0EF8               	movlw	-8
  8811  016124  006F FF8F FFDF     	movff	plusw1,indf2
  8812                           
  8813                           ;stkvar	_n @ sp[(-4)+-6]
  8814  01612A  0EF6               	movlw	-10
  8815  01612C  006F FF8C  F001    	movff	plusw1,btemp
  8816  016132  0E01               	movlw	1
  8817  016134  5E01               	subwf	btemp^0,f,c
  8818  016136  0EF6               	movlw	-10
  8819  016138  0060  F007  FFE3   	movff	btemp,plusw1
  8820  01613E  0EF7               	movlw	-9
  8821  016140  006F FF8C  F001    	movff	plusw1,btemp
  8822  016146  0E00               	movlw	0
  8823  016148  5A01               	subwfb	btemp^0,f,c
  8824  01614A  0EF7               	movlw	-9
  8825  01614C  0060  F007  FFE3   	movff	btemp,plusw1
  8826                           
  8827                           ;stkvar	_s @ sp[(-4)+0]
  8828  016152  0EFC               	movlw	-4
  8829  016154  50E3               	movf	plusw1,w,c
  8830  016156  0F01               	addlw	1
  8831  016158  6E01               	movwf	btemp^0,c
  8832  01615A  0EFC               	movlw	-4
  8833  01615C  0060  F007  FFE3   	movff	btemp,plusw1
  8834  016162  6A01               	clrf	btemp^0,c
  8835  016164  0EFD               	movlw	-3
  8836  016166  50E3               	movf	plusw1,w,c
  8837  016168  2001               	addwfc	btemp^0,w,c
  8838  01616A  6E01               	movwf	btemp^0,c
  8839  01616C  0EFD               	movlw	-3
  8840  01616E                     L4:
  8841  01616E  0060  F007  FFE3   	movff	btemp,plusw1
  8842                           
  8843                           ;stkvar	_n @ sp[(-4)+-6]
  8844  016174  0EF6               	movlw	-10
  8845  016176  006F FF8C  F001    	movff	plusw1,btemp
  8846  01617C  0EF7               	movlw	-9
  8847  01617E  50E3               	movf	plusw1,w,c
  8848  016180  1001               	iorwf	btemp^0,w,c
  8849  016182  A4D8               	btfss	status,2,c
  8850  016184  D7C6               	goto	l11000
  8851  016186                     u10110:
  8852                           
  8853                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8854  016186  0EF6               	movlw	246
  8855  016188  26E1               	addwf	fsr1l,f,c
  8856  01618A  0EFF               	movlw	255
  8857  01618C  22E2               	addwfc	fsr1h,f,c
  8858  01618E  0012               	return		;funcret
  8859  016190                     __end_of_memset:
  8860                           	opt callstack 0
  8861                           
  8862 ;; *************** function _printf *****************
  8863 ;; Defined at:
  8864 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;  fmt             2  [STACK] PTR const unsigned char 
  8867 ;;		 -> STR_27(3), STR_26(3), STR_25(3), 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;  ap              2  [STACK] PTR void [1]
  8870 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8871 ;;  ret             2    0        int 
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  2  [STACK] int 
  8874 ;; Registers used:
  8875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8876 ;; Tracked objects:
  8877 ;;		On entry : 3F/3B
  8878 ;;		On exit  : 3F/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8885 ;;Total ram usage:        0 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:   23
  8888 ;; This function calls:
  8889 ;;		_vfprintf
  8890 ;; This function is called by:
  8891 ;;		_eaDogM_WriteString
  8892 ;;		_send_lcd_cmd_dma
  8893 ;; This function uses a reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text39
  8897  019B30                     __ptext39:
  8898                           	opt callstack 0
  8899  019B30                     _printf:
  8900                           	opt callstack 0
  8901                           
  8902                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8903  019B30  52E6               	movf	postinc1,f,c
  8904  019B32  52E6               	movf	postinc1,f,c
  8905                           
  8906                           ;stkvar	?_printf @ sp[(-2)+-3]
  8907                           
  8908                           ;incstack = 0
  8909  019B34  0EFB               	movlw	251
  8910  019B36  24E1               	addwf	fsr1l,w,c
  8911  019B38  6E0B               	movwf	(btemp+10)^0,c
  8912  019B3A  0EFF               	movlw	255
  8913  019B3C  20E2               	addwfc	fsr1h,w,c
  8914  019B3E  6E0C               	movwf	(btemp+11)^0,c
  8915                           
  8916                           ;stkvar	_ap @ sp[(-2)+0]
  8917  019B40  0EFF               	movlw	-1
  8918  019B42  0060  F033  FFE3   	movff	btemp+11,plusw1
  8919  019B48  0EFE               	movlw	-2
  8920  019B4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8921                           
  8922                           ;stkvar	_ap @ sp[(-2)+0]
  8923  019B50  0EFE               	movlw	254
  8924  019B52  24E1               	addwf	fsr1l,w,c
  8925  019B54  6E01               	movwf	btemp^0,c
  8926  019B56  0EFF               	movlw	255
  8927  019B58  20E2               	addwfc	fsr1h,w,c
  8928  019B5A  6E02               	movwf	(btemp+1)^0,c
  8929  019B5C  0060  F007  FFE6   	movff	btemp,postinc1
  8930  019B62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8931                           
  8932                           ;stkvar	_fmt @ sp[(-4)+-3]
  8933  019B68  0EF9               	movlw	-7
  8934  019B6A  006F FF8F FFE6     	movff	plusw1,postinc1
  8935  019B70  006F FF8F FFE6     	movff	plusw1,postinc1
  8936  019B76  0E00               	movlw	0
  8937  019B78  6EE6               	movwf	postinc1,c
  8938  019B7A  0E00               	movlw	0
  8939  019B7C  6EE6               	movwf	postinc1,c
  8940  019B7E  ECCE  F0C8         	call	_vfprintf	;wreg free
  8941                           
  8942                           ; BSR set to: 0
  8943                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8944  019B82  52E5               	movf	postdec1,f,c
  8945  019B84  52E5               	movf	postdec1,f,c
  8946  019B86  52E5               	movf	postdec1,f,c
  8947  019B88  50E7               	movf	indf1,w,c
  8948  019B8A  5EE1               	subwf	fsr1l,f,c
  8949  019B8C  0E00               	movlw	0
  8950  019B8E  5AE2               	subwfb	fsr1h,f,c
  8951  019B90  0012               	return		;funcret
  8952  019B92                     __end_of_printf:
  8953                           	opt callstack 0
  8954                           
  8955 ;; *************** function _vfprintf *****************
  8956 ;; Defined at:
  8957 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8960 ;;		 -> f(6), NULL(0), 
  8961 ;;  fmt             2  [STACK] PTR const unsigned char 
  8962 ;;		 -> STR_47(79), STR_45(3), STR_44(3), STR_43(19), 
  8963 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
  8964 ;;		 -> STR_38(19), STR_37(24), STR_36(15), STR_35(15), 
  8965 ;;		 -> STR_34(15), STR_33(10), STR_32(10), STR_31(19), 
  8966 ;;		 -> STR_30(19), STR_27(3), STR_26(3), STR_25(3), 
  8967 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(19), 
  8968 ;;		 -> STR_20(20), STR_19(19), STR_18(19), STR_17(19), 
  8969 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  8970 ;;		 -> STR_12(17), STR_11(16), STR_10(16), STR_9(22), 
  8971 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  8972 ;;		 -> STR_2(15), STR_1(17), 
  8973 ;;  ap              2  [STACK] PTR PTR void 
  8974 ;;		 -> ap(2), ap(2), 
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;  cfmt            2  [STACK] PTR unsigned char 
  8977 ;;		 -> STR_47(79), STR_45(3), STR_44(3), STR_43(19), 
  8978 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
  8979 ;;		 -> STR_38(19), STR_37(24), STR_36(15), STR_35(15), 
  8980 ;;		 -> STR_34(15), STR_33(10), STR_32(10), STR_31(19), 
  8981 ;;		 -> STR_30(19), STR_27(3), STR_26(3), STR_25(3), 
  8982 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(19), 
  8983 ;;		 -> STR_20(20), STR_19(19), STR_18(19), STR_17(19), 
  8984 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  8985 ;;		 -> STR_12(17), STR_11(16), STR_10(16), STR_9(22), 
  8986 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  8987 ;;		 -> STR_2(15), STR_1(17), 
  8988 ;; Return value:  Size  Location     Type
  8989 ;;                  2  [STACK] int 
  8990 ;; Registers used:
  8991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 3F/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9001 ;;Total ram usage:        0 bytes
  9002 ;; Hardware stack levels used:    1
  9003 ;; Hardware stack levels required when called:   22
  9004 ;; This function calls:
  9005 ;;		_vfpfcnvrt
  9006 ;; This function is called by:
  9007 ;;		_sprintf
  9008 ;;		_printf
  9009 ;; This function uses a reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text40
  9013  01919C                     __ptext40:
  9014                           	opt callstack 0
  9015  01919C                     _vfprintf:
  9016                           	opt callstack 0
  9017                           
  9018                           ; BSR set to: 0
  9019                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9020  01919C  52E6               	movf	postinc1,f,c
  9021  01919E  52E6               	movf	postinc1,f,c
  9022                           
  9023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9024                           ;stkvar	_fmt @ sp[(-2)+-4]
  9025                           
  9026                           ;incstack = 0
  9027 ;; hardware stack exceeded
  9028  0191A0  0EFA               	movlw	-6
  9029  0191A2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9030  0191A8  0EFB               	movlw	-5
  9031  0191AA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9032                           
  9033                           ;stkvar	_cfmt @ sp[(-2)+0]
  9034  0191B0  0EFF               	movlw	-1
  9035  0191B2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9036  0191B8  0EFE               	movlw	-2
  9037  0191BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9038                           
  9039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9040  0191C0  0100               	movlb	0	; () banked
  9041  0191C2  6BBA               	clrf	_nout& (0+255),b
  9042  0191C4  6BBB               	clrf	(_nout+1)& (0+255),b
  9043                           
  9044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9045  0191C6  D021               	goto	l11824
  9046  0191C8                     l11822:
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9050                           ;stkvar	_ap @ sp[(-2)+-6]
  9051  0191C8  0EF8               	movlw	-8
  9052  0191CA  006F FF8F FFE6     	movff	plusw1,postinc1
  9053  0191D0  006F FF8F FFE6     	movff	plusw1,postinc1
  9054                           
  9055                           ;stkvar	_cfmt @ sp[(-4)+0]
  9056  0191D6  0EFC               	movlw	252
  9057  0191D8  24E1               	addwf	fsr1l,w,c
  9058  0191DA  6E01               	movwf	btemp^0,c
  9059  0191DC  0EFF               	movlw	255
  9060  0191DE  20E2               	addwfc	fsr1h,w,c
  9061  0191E0  6E02               	movwf	(btemp+1)^0,c
  9062  0191E2  0060  F007  FFE6   	movff	btemp,postinc1
  9063  0191E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9064                           
  9065                           ;stkvar	_fp @ sp[(-6)+-2]
  9066  0191EE  0EF8               	movlw	-8
  9067  0191F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9068  0191F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9069  0191FC  EC22  F089         	call	_vfpfcnvrt	;wreg free
  9070  019200  5001               	movf	btemp^0,w,c
  9071  019202  0100               	movlb	0	; () banked
  9072  019204  27BA               	addwf	_nout& (0+255),f,b
  9073  019206  5002               	movf	(btemp+1)^0,w,c
  9074  019208  23BB               	addwfc	(_nout+1)& (0+255),f,b
  9075  01920A                     l11824:
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9079                           ;stkvar	_cfmt @ sp[(-2)+0]
  9080  01920A  50E1               	movf	fsr1l,w,c
  9081  01920C  0FFE               	addlw	-2
  9082  01920E  6ED9               	movwf	fsr2l,c
  9083  019210  50E2               	movf	fsr1h,w,c
  9084  019212  6EDA               	movwf	fsr2h,c
  9085  019214  0EFF               	movlw	255
  9086  019216  22DA               	addwfc	fsr2h,f,c
  9087  019218  006F FF7B FFF6     	movff	postinc2,tblptrl
  9088  01921E  006F FF77 FFF7     	movff	postdec2,tblptrh
  9089  019224                     	if	0	;tblptru may be non-zero
  9090  019224                     	endif
  9091  019224                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9092  019224  0E00               	movlw	low (__mediumconst shr (0+16))
  9093  019226  6EF8               	movwf	tblptru,c
  9094  019228                     	endif
  9095  019228  0008               	tblrd		*
  9096  01922A  50F5               	movf	tablat,w,c
  9097  01922C  0900               	iorlw	0
  9098  01922E  A4D8               	btfss	status,2,c
  9099  019230  D7CB               	goto	l11822
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9103  019232  0060  F2E8  F001   	movff	_nout,btemp
  9104  019238  0060  F2EC  F002   	movff	_nout+1,btemp+1
  9105                           
  9106                           ; BSR set to: 0
  9107                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  9108  01923E  0EF8               	movlw	248
  9109  019240  26E1               	addwf	fsr1l,f,c
  9110  019242  0EFF               	movlw	255
  9111  019244  22E2               	addwfc	fsr1h,f,c
  9112  019246  0012               	return		;funcret
  9113  019248                     __end_of_vfprintf:
  9114                           	opt callstack 0
  9115                           
  9116 ;; *************** function _vfpfcnvrt *****************
  9117 ;; Defined at:
  9118 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9121 ;;		 -> f(6), NULL(0), 
  9122 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9123 ;;		 -> cfmt(2), 
  9124 ;;  ap              2  [STACK] PTR PTR void 
  9125 ;;		 -> ap(2), ap(2), 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;  llu             8  [STACK] unsigned long long 
  9128 ;;  ll              8  [STACK] long long 
  9129 ;;  f               4  [STACK] long long 
  9130 ;;  ct              3  [STACK] unsigned char [3]
  9131 ;;  vp              3    0        PTR void 
  9132 ;;  cp              2  [STACK] PTR unsigned char 
  9133 ;;		 -> ?_printf(2), ?_sprintf(2), STR_29(9), STR_28(12), 
  9134 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  9135 ;;		 -> STR_3(6), V(188), 
  9136 ;;  i               2    0        int 
  9137 ;;  done            2    0        int 
  9138 ;;  c               1  [STACK] unsigned char 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  2  [STACK] int 
  9141 ;; Registers used:
  9142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9152 ;;Total ram usage:        0 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:   21
  9155 ;; This function calls:
  9156 ;;		_atoi
  9157 ;;		_ctoa
  9158 ;;		_dtoa
  9159 ;;		_efgtoa
  9160 ;;		_fputc
  9161 ;;		_isdigit
  9162 ;;		_isupper
  9163 ;;		_stoa
  9164 ;;		_strncmp
  9165 ;;		_tolower
  9166 ;;		_utoa
  9167 ;;		_xtoa
  9168 ;; This function is called by:
  9169 ;;		_vfprintf
  9170 ;; This function uses a reentrant model
  9171 ;;
  9172                           
  9173                           	psect	text41
  9174  011244                     __ptext41:
  9175                           	opt callstack 0
  9176  011244                     _vfpfcnvrt:
  9177                           	opt callstack 0
  9178                           
  9179                           ; BSR set to: 0
  9180                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9181  011244  0E20               	movlw	32
  9182  011246  26E1               	addwf	fsr1l,f,c
  9183  011248  0E00               	movlw	0
  9184  01124A  22E2               	addwfc	fsr1h,f,c
  9185                           
  9186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9187                           ;stkvar	_fmt @ sp[(-32)+-4]
  9188                           
  9189                           ;incstack = 0
  9190 ;; hardware stack exceeded
  9191  01124C  0EDC               	movlw	-36
  9192  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9193  011254  0EDD               	movlw	-35
  9194  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  9195  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9196  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  9197  011268                     	if	0	;tblptru may be non-zero
  9198  011268                     	endif
  9199  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9200  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  9201  01126A  6EF8               	movwf	tblptru,c
  9202  01126C                     	endif
  9203  01126C  0008               	tblrd		*
  9204  01126E  50F5               	movf	tablat,w,c
  9205  011270  0A25               	xorlw	37
  9206  011272  A4D8               	btfss	status,2,c
  9207  011274  EFC9  F090         	goto	l11768
  9208                           
  9209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9210                           ;stkvar	_fmt @ sp[(-32)+-4]
  9211  011278  0EDC               	movlw	-36
  9212  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9213  011280  0EDD               	movlw	-35
  9214  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  9215  011288  2ADE               	incf	postinc2,f,c
  9216  01128A  0E00               	movlw	0
  9217  01128C  22DD               	addwfc	postdec2,f,c
  9218                           
  9219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9220  01128E  6A21               	clrf	_width^0,c
  9221  011290  6A22               	clrf	(_width+1)^0,c
  9222  011292  6A25               	clrf	_flags^0,c
  9223  011294  6A26               	clrf	(_flags+1)^0,c
  9224                           
  9225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9226  011296  6823               	setf	_prec^0,c
  9227  011298  6824               	setf	(_prec+1)^0,c
  9228                           
  9229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  9230                           ;stkvar	_fmt @ sp[(-32)+-4]
  9231  01129A  0EDC               	movlw	-36
  9232  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9233  0112A2  0EDD               	movlw	-35
  9234  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9235  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9236  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9237  0112B6                     	if	0	;tblptru may be non-zero
  9238  0112B6                     	endif
  9239  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9240  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9241  0112B8  6EF8               	movwf	tblptru,c
  9242  0112BA                     	endif
  9243  0112BA  0008               	tblrd		*
  9244  0112BC  50F5               	movf	tablat,w,c
  9245  0112BE  0A2A               	xorlw	42
  9246  0112C0  A4D8               	btfss	status,2,c
  9247  0112C2  D031               	goto	l11586
  9248                           
  9249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  9250                           ;stkvar	_fmt @ sp[(-32)+-4]
  9251  0112C4  0EDC               	movlw	-36
  9252  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9253  0112CC  0EDD               	movlw	-35
  9254  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9255  0112D4  2ADE               	incf	postinc2,f,c
  9256  0112D6  0E00               	movlw	0
  9257  0112D8  22DD               	addwfc	postdec2,f,c
  9258                           
  9259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  9260                           ;stkvar	_ap @ sp[(-32)+-6]
  9261  0112DA  0EDA               	movlw	-38
  9262  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9263  0112E2  0EDB               	movlw	-37
  9264  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9265  0112EA  0E02               	movlw	2
  9266  0112EC  5EDE               	subwf	postinc2,f,c
  9267  0112EE  0E00               	movlw	0
  9268  0112F0  5ADD               	subwfb	postdec2,f,c
  9269  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
  9270  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
  9271  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9272  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9273  01130A  006F FF78  F021    	movff	postinc2,_width
  9274  011310  006F FF74  F022    	movff	postdec2,_width+1
  9275                           
  9276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  9277  011316  AE22               	btfss	(_width+1)^0,7,c
  9278  011318  D066               	goto	u11240
  9279                           
  9280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  9281  01131A  8025               	bsf	_flags^0,0,c
  9282                           
  9283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  9284  01131C  6C21               	negf	_width^0,c
  9285  01131E  1E22               	comf	(_width+1)^0,f,c
  9286  011320  B0D8               	btfsc	status,0,c
  9287  011322  2A22               	incf	(_width+1)^0,f,c
  9288  011324  D060               	goto	u11240
  9289  011326                     l11586:
  9290                           
  9291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  9292                           ;stkvar	_fmt @ sp[(-32)+-4]
  9293  011326  0EDC               	movlw	-36
  9294  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  9295  01132E  0EDD               	movlw	-35
  9296  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  9297  011336  006F FF78  F00B    	movff	postinc2,btemp+10
  9298  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
  9299  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9300  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
  9301  01134E  EC67  F0B3         	call	_atoi	;wreg free
  9302  011352  0060  F004  F021   	movff	btemp,_width
  9303  011358  0060  F008  F022   	movff	btemp+1,_width+1
  9304                           
  9305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9306  01135E  D00B               	goto	l11590
  9307  011360                     l11588:
  9308                           
  9309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  9310                           ;stkvar	_fmt @ sp[(-32)+-4]
  9311  011360  0EDC               	movlw	-36
  9312  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  9313  011368  0EDD               	movlw	-35
  9314  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9315  011370  2ADE               	incf	postinc2,f,c
  9316  011372  0E00               	movlw	0
  9317  011374  22DD               	addwfc	postdec2,f,c
  9318  011376                     l11590:
  9319  011376  0ED0               	movlw	208
  9320  011378  6E0B               	movwf	(btemp+10)^0,c
  9321  01137A  0EFF               	movlw	255
  9322  01137C  6E0C               	movwf	(btemp+11)^0,c
  9323                           
  9324                           ;stkvar	_fmt @ sp[(-32)+-4]
  9325  01137E  0EDC               	movlw	-36
  9326  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  9327  011386  0EDD               	movlw	-35
  9328  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  9329  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9330  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  9331  01139A                     	if	0	;tblptru may be non-zero
  9332  01139A                     	endif
  9333  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9334  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  9335  01139C  6EF8               	movwf	tblptru,c
  9336  01139E                     	endif
  9337  01139E  0008               	tblrd		*
  9338  0113A0  50F5               	movf	tablat,w,c
  9339  0113A2  6E09               	movwf	(btemp+8)^0,c
  9340  0113A4  6A0A               	clrf	(btemp+9)^0,c
  9341  0113A6  500B               	movf	(btemp+10)^0,w,c
  9342  0113A8  2609               	addwf	(btemp+8)^0,f,c
  9343  0113AA  500C               	movf	(btemp+11)^0,w,c
  9344  0113AC  220A               	addwfc	(btemp+9)^0,f,c
  9345  0113AE  500A               	movf	(btemp+9)^0,w,c
  9346  0113B0  E106               	bnz	u11220
  9347  0113B2  0E0A               	movlw	10
  9348  0113B4  5C09               	subwf	(btemp+8)^0,w,c
  9349  0113B6  B0D8               	btfsc	status,0,c
  9350  0113B8  D002               	goto	u11220
  9351  0113BA  0E01               	movlw	1
  9352  0113BC  D001               	goto	u11230
  9353  0113BE                     u11220:
  9354  0113BE  0E00               	movlw	0
  9355  0113C0                     u11230:
  9356  0113C0  6E0B               	movwf	(btemp+10)^0,c
  9357  0113C2  6A0C               	clrf	(btemp+11)^0,c
  9358                           
  9359                           ;stkvar	_vfpfcnvrt$5281 @ sp[(-32)+4]
  9360  0113C4  0EE4               	movlw	-28
  9361  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9362  0113CC  0EE5               	movlw	-27
  9363  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  9364                           
  9365                           ;stkvar	_vfpfcnvrt$5281 @ sp[(-32)+4]
  9366  0113D4  0EE4               	movlw	-28
  9367  0113D6  006F FF8C  F001    	movff	plusw1,btemp
  9368  0113DC  0EE5               	movlw	-27
  9369  0113DE  50E3               	movf	plusw1,w,c
  9370  0113E0  1001               	iorwf	btemp^0,w,c
  9371  0113E2  A4D8               	btfss	status,2,c
  9372  0113E4  D7BD               	goto	l11588
  9373  0113E6                     u11240:
  9374                           
  9375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  9376                           ;stkvar	_fmt @ sp[(-32)+-4]
  9377  0113E6  0EDC               	movlw	-36
  9378  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9379  0113EE  0EDD               	movlw	-35
  9380  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9381  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9382  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9383  011402                     	if	0	;tblptru may be non-zero
  9384  011402                     	endif
  9385  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9386  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  9387  011404  6EF8               	movwf	tblptru,c
  9388  011406                     	endif
  9389  011406  0008               	tblrd		*
  9390  011408  50F5               	movf	tablat,w,c
  9391  01140A  0A2E               	xorlw	46
  9392  01140C  A4D8               	btfss	status,2,c
  9393  01140E  D0AC               	goto	u11290
  9394                           
  9395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  9396  011410  6A23               	clrf	_prec^0,c
  9397  011412  6A24               	clrf	(_prec+1)^0,c
  9398                           
  9399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  9400                           ;stkvar	_fmt @ sp[(-32)+-4]
  9401  011414  0EDC               	movlw	-36
  9402  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  9403  01141C  0EDD               	movlw	-35
  9404  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9405  011424  2ADE               	incf	postinc2,f,c
  9406  011426  0E00               	movlw	0
  9407  011428  22DD               	addwfc	postdec2,f,c
  9408                           
  9409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  9410                           ;stkvar	_fmt @ sp[(-32)+-4]
  9411  01142A  0EDC               	movlw	-36
  9412  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9413  011432  0EDD               	movlw	-35
  9414  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  9415  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9416  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  9417  011446                     	if	0	;tblptru may be non-zero
  9418  011446                     	endif
  9419  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9420  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  9421  011448  6EF8               	movwf	tblptru,c
  9422  01144A                     	endif
  9423  01144A  0008               	tblrd		*
  9424  01144C  50F5               	movf	tablat,w,c
  9425  01144E  0A2A               	xorlw	42
  9426  011450  A4D8               	btfss	status,2,c
  9427  011452  D02A               	goto	l11608
  9428                           
  9429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  9430                           ;stkvar	_fmt @ sp[(-32)+-4]
  9431  011454  0EDC               	movlw	-36
  9432  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  9433  01145C  0EDD               	movlw	-35
  9434  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9435  011464  2ADE               	incf	postinc2,f,c
  9436  011466  0E00               	movlw	0
  9437  011468  22DD               	addwfc	postdec2,f,c
  9438                           
  9439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  9440                           ;stkvar	_ap @ sp[(-32)+-6]
  9441  01146A  0EDA               	movlw	-38
  9442  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9443  011472  0EDB               	movlw	-37
  9444  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  9445  01147A  0E02               	movlw	2
  9446  01147C  5EDE               	subwf	postinc2,f,c
  9447  01147E  0E00               	movlw	0
  9448  011480  5ADD               	subwfb	postdec2,f,c
  9449  011482  006F FF78  F00B    	movff	postinc2,btemp+10
  9450  011488  006F FF74  F00C    	movff	postdec2,btemp+11
  9451  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9452  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9453  01149A  006F FF78  F023    	movff	postinc2,_prec
  9454  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
  9455                           
  9456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  9457  0114A6  D060               	goto	u11290
  9458  0114A8                     l11608:
  9459                           
  9460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  9461                           ;stkvar	_fmt @ sp[(-32)+-4]
  9462  0114A8  0EDC               	movlw	-36
  9463  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9464  0114B0  0EDD               	movlw	-35
  9465  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9466  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
  9467  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
  9468  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9469  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
  9470  0114D0  EC67  F0B3         	call	_atoi	;wreg free
  9471  0114D4  0060  F004  F023   	movff	btemp,_prec
  9472  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
  9473                           
  9474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9475  0114E0  D00B               	goto	l11612
  9476  0114E2                     l11610:
  9477                           
  9478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  9479                           ;stkvar	_fmt @ sp[(-32)+-4]
  9480  0114E2  0EDC               	movlw	-36
  9481  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9482  0114EA  0EDD               	movlw	-35
  9483  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9484  0114F2  2ADE               	incf	postinc2,f,c
  9485  0114F4  0E00               	movlw	0
  9486  0114F6  22DD               	addwfc	postdec2,f,c
  9487  0114F8                     l11612:
  9488  0114F8  0ED0               	movlw	208
  9489  0114FA  6E0B               	movwf	(btemp+10)^0,c
  9490  0114FC  0EFF               	movlw	255
  9491  0114FE  6E0C               	movwf	(btemp+11)^0,c
  9492                           
  9493                           ;stkvar	_fmt @ sp[(-32)+-4]
  9494  011500  0EDC               	movlw	-36
  9495  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  9496  011508  0EDD               	movlw	-35
  9497  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9498  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  9499  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  9500  01151C                     	if	0	;tblptru may be non-zero
  9501  01151C                     	endif
  9502  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9503  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  9504  01151E  6EF8               	movwf	tblptru,c
  9505  011520                     	endif
  9506  011520  0008               	tblrd		*
  9507  011522  50F5               	movf	tablat,w,c
  9508  011524  6E09               	movwf	(btemp+8)^0,c
  9509  011526  6A0A               	clrf	(btemp+9)^0,c
  9510  011528  500B               	movf	(btemp+10)^0,w,c
  9511  01152A  2609               	addwf	(btemp+8)^0,f,c
  9512  01152C  500C               	movf	(btemp+11)^0,w,c
  9513  01152E  220A               	addwfc	(btemp+9)^0,f,c
  9514  011530  500A               	movf	(btemp+9)^0,w,c
  9515  011532  E106               	bnz	u11270
  9516  011534  0E0A               	movlw	10
  9517  011536  5C09               	subwf	(btemp+8)^0,w,c
  9518  011538  B0D8               	btfsc	status,0,c
  9519  01153A  D002               	goto	u11270
  9520  01153C  0E01               	movlw	1
  9521  01153E  D001               	goto	u11280
  9522  011540                     u11270:
  9523  011540  0E00               	movlw	0
  9524  011542                     u11280:
  9525  011542  6E0B               	movwf	(btemp+10)^0,c
  9526  011544  6A0C               	clrf	(btemp+11)^0,c
  9527                           
  9528                           ;stkvar	_vfpfcnvrt$5282 @ sp[(-32)+0]
  9529  011546  0EE0               	movlw	-32
  9530  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9531  01154E  0EE1               	movlw	-31
  9532  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
  9533                           
  9534                           ;stkvar	_vfpfcnvrt$5282 @ sp[(-32)+0]
  9535  011556  0EE0               	movlw	-32
  9536  011558  006F FF8C  F001    	movff	plusw1,btemp
  9537  01155E  0EE1               	movlw	-31
  9538  011560  50E3               	movf	plusw1,w,c
  9539  011562  1001               	iorwf	btemp^0,w,c
  9540  011564  A4D8               	btfss	status,2,c
  9541  011566  D7BD               	goto	l11610
  9542  011568                     u11290:
  9543                           
  9544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  9545                           ;stkvar	_fmt @ sp[(-32)+-4]
  9546  011568  0EDC               	movlw	-36
  9547  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9548  011570  0EDD               	movlw	-35
  9549  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  9550  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  9551  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  9552  011584                     	if	0	;tblptru may be non-zero
  9553  011584                     	endif
  9554  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9555  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  9556  011586  6EF8               	movwf	tblptru,c
  9557  011588                     	endif
  9558  011588  0008               	tblrd		*
  9559  01158A  50F5               	movf	tablat,w,c
  9560  01158C  6EE6               	movwf	postinc1,c
  9561  01158E  0E00               	movlw	0
  9562  011590  6EE6               	movwf	postinc1,c
  9563  011592  EC12  F0CC         	call	_tolower	;wreg free
  9564                           
  9565                           ;stkvar	_ct @ sp[(-32)+26]
  9566  011596  0EFA               	movlw	-6
  9567  011598  0060  F007  FFE3   	movff	btemp,plusw1
  9568                           
  9569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  9570                           ;stkvar	_ct @ sp[(-32)+26]
  9571  01159E  0EFA               	movlw	-6
  9572  0115A0  50E3               	movf	plusw1,w,c
  9573  0115A2  B4D8               	btfsc	status,2,c
  9574  0115A4  D05B               	goto	l11628
  9575                           
  9576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  9577                           ;stkvar	_ct @ sp[(-32)+26]
  9578  0115A6  0EFB               	movlw	251
  9579  0115A8  24E1               	addwf	fsr1l,w,c
  9580  0115AA  6ED9               	movwf	fsr2l,c
  9581  0115AC  0EFF               	movlw	255
  9582  0115AE  20E2               	addwfc	fsr1h,w,c
  9583  0115B0  6EDA               	movwf	fsr2h,c
  9584                           
  9585                           ;stkvar	_fmt @ sp[(-32)+-4]
  9586  0115B2  0EDC               	movlw	-36
  9587  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  9588  0115BA  0EDD               	movlw	-35
  9589  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  9590  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
  9591  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
  9592  0115CE  0E01               	movlw	1
  9593  0115D0  260B               	addwf	(btemp+10)^0,f,c
  9594  0115D2  0E00               	movlw	0
  9595  0115D4  220C               	addwfc	(btemp+11)^0,f,c
  9596  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  9597  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
  9598  0115E2                     	if	0	;tblptru may be non-zero
  9599  0115E2                     	endif
  9600  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9601  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9602  0115E4  6EF8               	movwf	tblptru,c
  9603  0115E6                     	endif
  9604  0115E6  0008               	tblrd		*
  9605  0115E8  50F5               	movf	tablat,w,c
  9606  0115EA  6EE6               	movwf	postinc1,c
  9607  0115EC  0E00               	movlw	0
  9608  0115EE  6EE6               	movwf	postinc1,c
  9609  0115F0  EC12  F0CC         	call	_tolower	;wreg free
  9610  0115F4  5001               	movf	btemp^0,w,c
  9611  0115F6  6EDF               	movwf	indf2,c
  9612                           
  9613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  9614                           ;stkvar	_ct @ sp[(-32)+26]
  9615  0115F8  0EFB               	movlw	251
  9616  0115FA  24E1               	addwf	fsr1l,w,c
  9617  0115FC  6ED9               	movwf	fsr2l,c
  9618  0115FE  0EFF               	movlw	255
  9619  011600  20E2               	addwfc	fsr1h,w,c
  9620  011602  6EDA               	movwf	fsr2h,c
  9621  011604  50DF               	movf	indf2,w,c
  9622  011606  B4D8               	btfsc	status,2,c
  9623  011608  D029               	goto	l11628
  9624                           
  9625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  9626                           ;stkvar	_ct @ sp[(-32)+26]
  9627  01160A  0EFC               	movlw	252
  9628  01160C  24E1               	addwf	fsr1l,w,c
  9629  01160E  6ED9               	movwf	fsr2l,c
  9630  011610  0EFF               	movlw	255
  9631  011612  20E2               	addwfc	fsr1h,w,c
  9632  011614  6EDA               	movwf	fsr2h,c
  9633                           
  9634                           ;stkvar	_fmt @ sp[(-32)+-4]
  9635  011616  0EDC               	movlw	-36
  9636  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  9637  01161E  0EDD               	movlw	-35
  9638  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9639  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
  9640  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
  9641  011632  0E02               	movlw	2
  9642  011634  260B               	addwf	(btemp+10)^0,f,c
  9643  011636  0E00               	movlw	0
  9644  011638  220C               	addwfc	(btemp+11)^0,f,c
  9645  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  9646  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
  9647  011646                     	if	0	;tblptru may be non-zero
  9648  011646                     	endif
  9649  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9650  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9651  011648  6EF8               	movwf	tblptru,c
  9652  01164A                     	endif
  9653  01164A  0008               	tblrd		*
  9654  01164C  50F5               	movf	tablat,w,c
  9655  01164E  6EE6               	movwf	postinc1,c
  9656  011650  0E00               	movlw	0
  9657  011652  6EE6               	movwf	postinc1,c
  9658  011654  EC12  F0CC         	call	_tolower	;wreg free
  9659  011658  5001               	movf	btemp^0,w,c
  9660  01165A  6EDF               	movwf	indf2,c
  9661  01165C                     l11628:
  9662                           
  9663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9664                           ;stkvar	_fmt @ sp[(-32)+-4]
  9665  01165C  0EDC               	movlw	-36
  9666  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9667  011664  0EDD               	movlw	-35
  9668  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9669  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9670  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9671  011678                     	if	0	;tblptru may be non-zero
  9672  011678                     	endif
  9673  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9674  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9675  01167A  6EF8               	movwf	tblptru,c
  9676  01167C                     	endif
  9677  01167C  0008               	tblrd		*
  9678  01167E  50F5               	movf	tablat,w,c
  9679  011680  0A63               	xorlw	99
  9680  011682  A4D8               	btfss	status,2,c
  9681  011684  D037               	goto	l11638
  9682                           
  9683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9684                           ;stkvar	_fmt @ sp[(-32)+-4]
  9685  011686  0EDC               	movlw	-36
  9686  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9687  01168E  0EDD               	movlw	-35
  9688  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9689  011696  2ADE               	incf	postinc2,f,c
  9690  011698  0E00               	movlw	0
  9691  01169A  22DD               	addwfc	postdec2,f,c
  9692                           
  9693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9694                           ;stkvar	_ap @ sp[(-32)+-6]
  9695  01169C  0EDA               	movlw	-38
  9696  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9697  0116A4  0EDB               	movlw	-37
  9698  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9699  0116AC  0E02               	movlw	2
  9700  0116AE  5EDE               	subwf	postinc2,f,c
  9701  0116B0  0E00               	movlw	0
  9702  0116B2  5ADD               	subwfb	postdec2,f,c
  9703  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
  9704  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
  9705  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9706  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9707  0116CC  50DF               	movf	indf2,w,c
  9708  0116CE  6E0C               	movwf	(btemp+11)^0,c
  9709                           
  9710                           ;stkvar	_c @ sp[(-32)+31]
  9711  0116D0  0EFF               	movlw	-1
  9712  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9713                           
  9714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9715                           ;stkvar	_c @ sp[(-32)+31]
  9716  0116D8  0EFF               	movlw	-1
  9717  0116DA  50E3               	movf	plusw1,w,c
  9718  0116DC  6EE6               	movwf	postinc1,c
  9719                           
  9720                           ;stkvar	_fp @ sp[(-33)+-2]
  9721  0116DE  0EDD               	movlw	-35
  9722  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9723  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9724  0116EC  EC8C  F0CB         	call	_ctoa	;wreg free
  9725  0116F0  EFF3  F090         	goto	l2272
  9726  0116F4                     l11638:
  9727                           
  9728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9729                           ;stkvar	_fmt @ sp[(-32)+-4]
  9730  0116F4  0EDC               	movlw	-36
  9731  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9732  0116FC  0EDD               	movlw	-35
  9733  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9734  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
  9735  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9736  011710                     	if	0	;tblptru may be non-zero
  9737  011710                     	endif
  9738  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9739  011710  0E00               	movlw	low (__mediumconst shr (0+16))
  9740  011712  6EF8               	movwf	tblptru,c
  9741  011714                     	endif
  9742  011714  0008               	tblrd		*
  9743  011716  50F5               	movf	tablat,w,c
  9744  011718  0A64               	xorlw	100
  9745  01171A  B4D8               	btfsc	status,2,c
  9746  01171C  D015               	goto	u11340
  9747                           
  9748                           ;stkvar	_fmt @ sp[(-32)+-4]
  9749  01171E  0EDC               	movlw	-36
  9750  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
  9751  011726  0EDD               	movlw	-35
  9752  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
  9753  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9754  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
  9755  01173A                     	if	0	;tblptru may be non-zero
  9756  01173A                     	endif
  9757  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9758  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
  9759  01173C  6EF8               	movwf	tblptru,c
  9760  01173E                     	endif
  9761  01173E  0008               	tblrd		*
  9762  011740  50F5               	movf	tablat,w,c
  9763  011742  0A69               	xorlw	105
  9764  011744  A4D8               	btfss	status,2,c
  9765  011746  D076               	goto	l11650
  9766  011748                     u11340:
  9767                           
  9768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9769                           ;stkvar	_fmt @ sp[(-32)+-4]
  9770  011748  0EDC               	movlw	-36
  9771  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9772  011750  0EDD               	movlw	-35
  9773  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
  9774  011758  2ADE               	incf	postinc2,f,c
  9775  01175A  0E00               	movlw	0
  9776  01175C  22DD               	addwfc	postdec2,f,c
  9777                           
  9778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9779                           ;stkvar	_ap @ sp[(-32)+-6]
  9780  01175E  0EDA               	movlw	-38
  9781  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
  9782  011766  0EDB               	movlw	-37
  9783  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
  9784  01176E  0E02               	movlw	2
  9785  011770  5EDE               	subwf	postinc2,f,c
  9786  011772  0E00               	movlw	0
  9787  011774  5ADD               	subwfb	postdec2,f,c
  9788  011776  006F FF78  F00B    	movff	postinc2,btemp+10
  9789  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
  9790  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9791  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9792  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
  9793  011794  006F FF74  F00C    	movff	postdec2,btemp+11
  9794                           
  9795                           ;stkvar	_ll @ sp[(-32)+14]
  9796  01179A  0EEE               	movlw	-18
  9797  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9798  0117A2  0EEF               	movlw	-17
  9799  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
  9800  0117AA  6A01               	clrf	btemp^0,c
  9801  0117AC  BEE3               	btfsc	plusw1,7,c
  9802  0117AE  6801               	setf	btemp^0,c
  9803  0117B0  0EF0               	movlw	-16
  9804  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
  9805  0117B8  0EF1               	movlw	-15
  9806  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  9807  0117C0  0EF2               	movlw	-14
  9808  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
  9809  0117C8  0EF3               	movlw	-13
  9810  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
  9811  0117D0  0EF4               	movlw	-12
  9812  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
  9813  0117D8  0EF5               	movlw	-11
  9814  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
  9815  0117E0                     l11646:
  9816                           
  9817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9818                           ;stkvar	_ll @ sp[(-32)+14]
  9819  0117E0  50E1               	movf	fsr1l,w,c
  9820  0117E2  0FEE               	addlw	-18
  9821  0117E4  6ED9               	movwf	fsr2l,c
  9822  0117E6  50E2               	movf	fsr1h,w,c
  9823  0117E8  6EDA               	movwf	fsr2h,c
  9824  0117EA  0EFF               	movlw	255
  9825  0117EC  22DA               	addwfc	fsr2h,f,c
  9826  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  9827  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  9828  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  9829  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  9830  011806  006F FF7B FFE6     	movff	postinc2,postinc1
  9831  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
  9832  011812  006F FF7B FFE6     	movff	postinc2,postinc1
  9833  011818  006F FF7B FFE6     	movff	postinc2,postinc1
  9834                           
  9835                           ;stkvar	_fp @ sp[(-40)+-2]
  9836  01181E  0ED6               	movlw	-42
  9837  011820  006F FF8F FFE6     	movff	plusw1,postinc1
  9838  011826  006F FF8F FFE6     	movff	plusw1,postinc1
  9839  01182C  EC0E  F0A6         	call	_dtoa	;wreg free
  9840  011830  EFF3  F090         	goto	l2272
  9841  011834                     l11650:
  9842                           
  9843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  9844  011834  0E02               	movlw	2
  9845  011836  6EE6               	movwf	postinc1,c
  9846  011838  0E00               	movlw	0
  9847  01183A  6EE6               	movwf	postinc1,c
  9848  01183C  0EEA               	movlw	low STR_56
  9849  01183E  6EE6               	movwf	postinc1,c
  9850  011840  0EFF               	movlw	high STR_56
  9851  011842  6EE6               	movwf	postinc1,c
  9852                           
  9853                           ;stkvar	_fmt @ sp[(-36)+-4]
  9854  011844  0ED8               	movlw	-40
  9855  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
  9856  01184C  0ED9               	movlw	-39
  9857  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9858  011854  006F FF78  F00B    	movff	postinc2,btemp+10
  9859  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
  9860  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9861  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
  9862  01186C  ECC1  F0B5         	call	_strncmp	;wreg free
  9863  011870  5001               	movf	btemp^0,w,c
  9864  011872  1002               	iorwf	(btemp+1)^0,w,c
  9865  011874  B4D8               	btfsc	status,2,c
  9866  011876  D022               	goto	u11360
  9867  011878  0E02               	movlw	2
  9868  01187A  6EE6               	movwf	postinc1,c
  9869  01187C  0E00               	movlw	0
  9870  01187E  6EE6               	movwf	postinc1,c
  9871  011880  0EF0               	movlw	low STR_60
  9872  011882  6EE6               	movwf	postinc1,c
  9873  011884  0EFF               	movlw	high STR_60
  9874  011886  6EE6               	movwf	postinc1,c
  9875                           
  9876                           ;stkvar	_fmt @ sp[(-36)+-4]
  9877  011888  0ED8               	movlw	-40
  9878  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9879  011890  0ED9               	movlw	-39
  9880  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
  9881  011898  006F FF78  F00B    	movff	postinc2,btemp+10
  9882  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
  9883  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9884  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
  9885  0118B0  ECC1  F0B5         	call	_strncmp	;wreg free
  9886  0118B4  5001               	movf	btemp^0,w,c
  9887  0118B6  1002               	iorwf	(btemp+1)^0,w,c
  9888  0118B8  A4D8               	btfss	status,2,c
  9889  0118BA  D069               	goto	l11662
  9890  0118BC                     u11360:
  9891                           
  9892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  9893                           ;stkvar	_fmt @ sp[(-32)+-4]
  9894  0118BC  0EDC               	movlw	-36
  9895  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9896  0118C4  0EDD               	movlw	-35
  9897  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9898  0118CC  0E02               	movlw	2
  9899  0118CE  26DE               	addwf	postinc2,f,c
  9900  0118D0  0E00               	movlw	0
  9901  0118D2  22DD               	addwfc	postdec2,f,c
  9902                           
  9903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  9904                           ;stkvar	_ap @ sp[(-32)+-6]
  9905  0118D4  0EDA               	movlw	-38
  9906  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9907  0118DC  0EDB               	movlw	-37
  9908  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9909  0118E4  0E04               	movlw	4
  9910  0118E6  5EDE               	subwf	postinc2,f,c
  9911  0118E8  0E00               	movlw	0
  9912  0118EA  5ADD               	subwfb	postdec2,f,c
  9913  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
  9914  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
  9915  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9916  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9917  011904  006F FF78  F009    	movff	postinc2,btemp+8
  9918  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
  9919  011910  006F FF78  F00B    	movff	postinc2,btemp+10
  9920  011916  006F FF78  F00C    	movff	postinc2,btemp+11
  9921  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
  9922  011922  0060  F028  F012   	movff	btemp+9,btemp+17
  9923  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
  9924  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
  9925  011934  6A15               	clrf	(btemp+20)^0,c
  9926  011936  BE14               	btfsc	(btemp+19)^0,7,c
  9927  011938  6815               	setf	(btemp+20)^0,c
  9928  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
  9929  011940  0060  F054  F017   	movff	btemp+20,btemp+22
  9930  011946  0060  F054  F018   	movff	btemp+20,btemp+23
  9931                           
  9932                           ;stkvar	_ll @ sp[(-32)+14]
  9933  01194C  0EEE               	movlw	-18
  9934  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
  9935  011954  0EEF               	movlw	-17
  9936  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
  9937  01195C  0EF0               	movlw	-16
  9938  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
  9939  011964  0EF1               	movlw	-15
  9940  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
  9941  01196C  0EF2               	movlw	-14
  9942  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
  9943  011974  0EF3               	movlw	-13
  9944  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
  9945  01197C  0EF4               	movlw	-12
  9946  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
  9947  011984  0EF5               	movlw	-11
  9948  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
  9949  01198C  D729               	goto	l11646
  9950  01198E                     l11662:
  9951                           
  9952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9953                           ;stkvar	_ct @ sp[(-32)+26]
  9954  01198E  0EFA               	movlw	-6
  9955  011990  006F FF8C  F001    	movff	plusw1,btemp
  9956  011996  0E66               	movlw	102
  9957  011998  1801               	xorwf	btemp^0,w,c
  9958  01199A  A4D8               	btfss	status,2,c
  9959  01199C  D06E               	goto	l11674
  9960                           
  9961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9962                           ;stkvar	_fmt @ sp[(-32)+-4]
  9963  01199E  0EDC               	movlw	-36
  9964  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9965  0119A6  0EDD               	movlw	-35
  9966  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9967  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  9968  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  9969  0119BA                     	if	0	;tblptru may be non-zero
  9970  0119BA                     	endif
  9971  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9972  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
  9973  0119BC  6EF8               	movwf	tblptru,c
  9974  0119BE                     	endif
  9975                           
  9976                           ;stkvar	_c @ sp[(-32)+31]
  9977  0119BE  0008               	tblrd		*
  9978  0119C0  0EFF               	movlw	-1
  9979  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
  9980                           
  9981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9982                           ;stkvar	_fmt @ sp[(-32)+-4]
  9983  0119C8  0EDC               	movlw	-36
  9984  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9985  0119D0  0EDD               	movlw	-35
  9986  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9987  0119D8  2ADE               	incf	postinc2,f,c
  9988  0119DA  0E00               	movlw	0
  9989  0119DC  22DD               	addwfc	postdec2,f,c
  9990                           
  9991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9992                           ;stkvar	_ap @ sp[(-32)+-6]
  9993  0119DE  0EDA               	movlw	-38
  9994  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9995  0119E6  0EDB               	movlw	-37
  9996  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9997  0119EE  0E04               	movlw	4
  9998  0119F0  5EDE               	subwf	postinc2,f,c
  9999  0119F2  0E00               	movlw	0
 10000  0119F4  5ADD               	subwfb	postdec2,f,c
 10001  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 10002  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 10003  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10004  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10005  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 10006  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 10007  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 10008  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 10009                           
 10010                           ;stkvar	_f @ sp[(-32)+22]
 10011  011A26  0EF6               	movlw	-10
 10012  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 10013  011A2E  0EF7               	movlw	-9
 10014  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10015  011A36  0EF8               	movlw	-8
 10016  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10017  011A3E  0EF9               	movlw	-7
 10018  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 10019  011A46                     l11670:
 10020                           
 10021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 10022                           ;stkvar	_c @ sp[(-32)+31]
 10023  011A46  0EFF               	movlw	-1
 10024  011A48  50E3               	movf	plusw1,w,c
 10025  011A4A  6EE6               	movwf	postinc1,c
 10026                           
 10027                           ;stkvar	_f @ sp[(-33)+22]
 10028  011A4C  0EF5               	movlw	-11
 10029  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 10030  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 10031  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 10032  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 10033                           
 10034                           ;stkvar	_fp @ sp[(-37)+-2]
 10035  011A66  0ED9               	movlw	-39
 10036  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 10037  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 10038  011A74  EC00  F080         	call	_efgtoa	;wreg free
 10039  011A78  D3B6               	goto	l2272
 10040  011A7A                     l11674:
 10041                           
 10042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10043  011A7A  0E02               	movlw	2
 10044  011A7C  6EE6               	movwf	postinc1,c
 10045  011A7E  0E00               	movlw	0
 10046  011A80  6EE6               	movwf	postinc1,c
 10047  011A82  0EED               	movlw	low STR_65
 10048  011A84  6EE6               	movwf	postinc1,c
 10049  011A86  0EFF               	movlw	high STR_65
 10050  011A88  6EE6               	movwf	postinc1,c
 10051                           
 10052                           ;stkvar	_ct @ sp[(-36)+26]
 10053  011A8A  0EF6               	movlw	246
 10054  011A8C  24E1               	addwf	fsr1l,w,c
 10055  011A8E  6E01               	movwf	btemp^0,c
 10056  011A90  0EFF               	movlw	255
 10057  011A92  20E2               	addwfc	fsr1h,w,c
 10058  011A94  6E02               	movwf	(btemp+1)^0,c
 10059  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 10060  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10061  011AA2  ECC1  F0B5         	call	_strncmp	;wreg free
 10062  011AA6  5001               	movf	btemp^0,w,c
 10063  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 10064  011AAA  A4D8               	btfss	status,2,c
 10065  011AAC  D096               	goto	l11694
 10066                           
 10067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10068                           ;stkvar	_fmt @ sp[(-32)+-4]
 10069  011AAE  0EDC               	movlw	-36
 10070  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10071  011AB6  0EDD               	movlw	-35
 10072  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10073  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 10074  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 10075  011ACA  0E01               	movlw	1
 10076  011ACC  260B               	addwf	(btemp+10)^0,f,c
 10077  011ACE  0E00               	movlw	0
 10078  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 10079  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10080  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10081  011ADE                     	if	0	;tblptru may be non-zero
 10082  011ADE                     	endif
 10083  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10084  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 10085  011AE0  6EF8               	movwf	tblptru,c
 10086  011AE2                     	endif
 10087                           
 10088                           ;stkvar	_c @ sp[(-32)+31]
 10089  011AE2  0008               	tblrd		*
 10090  011AE4  0EFF               	movlw	-1
 10091  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 10092  011AEC  0EBF               	movlw	191
 10093  011AEE  6E0B               	movwf	(btemp+10)^0,c
 10094  011AF0  0EFF               	movlw	255
 10095  011AF2  6E0C               	movwf	(btemp+11)^0,c
 10096                           
 10097                           ;stkvar	_fmt @ sp[(-32)+-4]
 10098  011AF4  0EDC               	movlw	-36
 10099  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10100  011AFC  0EDD               	movlw	-35
 10101  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10102  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 10103  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10104  011B10                     	if	0	;tblptru may be non-zero
 10105  011B10                     	endif
 10106  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10107  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 10108  011B12  6EF8               	movwf	tblptru,c
 10109  011B14                     	endif
 10110  011B14  0008               	tblrd		*
 10111  011B16  50F5               	movf	tablat,w,c
 10112  011B18  6E09               	movwf	(btemp+8)^0,c
 10113  011B1A  6A0A               	clrf	(btemp+9)^0,c
 10114  011B1C  500B               	movf	(btemp+10)^0,w,c
 10115  011B1E  2609               	addwf	(btemp+8)^0,f,c
 10116  011B20  500C               	movf	(btemp+11)^0,w,c
 10117  011B22  220A               	addwfc	(btemp+9)^0,f,c
 10118  011B24  500A               	movf	(btemp+9)^0,w,c
 10119  011B26  E106               	bnz	u11390
 10120  011B28  0E1A               	movlw	26
 10121  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 10122  011B2C  B0D8               	btfsc	status,0,c
 10123  011B2E  D002               	goto	u11390
 10124  011B30  0E01               	movlw	1
 10125  011B32  D001               	goto	u11400
 10126  011B34                     u11390:
 10127  011B34  0E00               	movlw	0
 10128  011B36                     u11400:
 10129  011B36  6E0B               	movwf	(btemp+10)^0,c
 10130  011B38  6A0C               	clrf	(btemp+11)^0,c
 10131                           
 10132                           ;stkvar	_vfpfcnvrt$5293 @ sp[(-32)+2]
 10133  011B3A  0EE2               	movlw	-30
 10134  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10135  011B42  0EE3               	movlw	-29
 10136  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 10137                           
 10138                           ;stkvar	_vfpfcnvrt$5293 @ sp[(-32)+2]
 10139  011B4A  0EE2               	movlw	-30
 10140  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 10141  011B52  0EE3               	movlw	-29
 10142  011B54  50E3               	movf	plusw1,w,c
 10143  011B56  1001               	iorwf	btemp^0,w,c
 10144                           
 10145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10146                           ;stkvar	_ap @ sp[(-32)+-6]
 10147                           
 10148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 10149                           
 10150                           ;stkvar	_f @ sp[(-32)+22]
 10151                           
 10152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 10153                           ;stkvar	_ap @ sp[(-32)+-6]
 10154  011B58  0EDA               	movlw	-38
 10155  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10156  011B60  0EDB               	movlw	-37
 10157  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 10158  011B68  0E04               	movlw	4
 10159  011B6A  5EDE               	subwf	postinc2,f,c
 10160  011B6C  0E00               	movlw	0
 10161  011B6E  5ADD               	subwfb	postdec2,f,c
 10162  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 10163  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 10164  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10165  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10166  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 10167  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 10168  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 10169  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 10170                           
 10171                           ;stkvar	_f @ sp[(-32)+22]
 10172  011BA0  0EF6               	movlw	-10
 10173  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 10174  011BA8  0EF7               	movlw	-9
 10175  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10176  011BB0  0EF8               	movlw	-8
 10177  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10178  011BB8  0EF9               	movlw	-7
 10179  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10180                           
 10181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 10182                           ;stkvar	_fmt @ sp[(-32)+-4]
 10183  011BC0  0EDC               	movlw	-36
 10184  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10185  011BC8  0EDD               	movlw	-35
 10186  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10187  011BD0  0E02               	movlw	2
 10188  011BD2  26DE               	addwf	postinc2,f,c
 10189  011BD4  0E00               	movlw	0
 10190  011BD6  22DD               	addwfc	postdec2,f,c
 10191  011BD8  D736               	goto	l11670
 10192  011BDA                     l11694:
 10193                           
 10194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10195                           ;stkvar	_fmt @ sp[(-32)+-4]
 10196  011BDA  0EDC               	movlw	-36
 10197  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10198  011BE2  0EDD               	movlw	-35
 10199  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10200  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10201  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10202  011BF6                     	if	0	;tblptru may be non-zero
 10203  011BF6                     	endif
 10204  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10205  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 10206  011BF8  6EF8               	movwf	tblptru,c
 10207  011BFA                     	endif
 10208  011BFA  0008               	tblrd		*
 10209  011BFC  50F5               	movf	tablat,w,c
 10210  011BFE  0A73               	xorlw	115
 10211  011C00  A4D8               	btfss	status,2,c
 10212  011C02  D042               	goto	l11704
 10213                           
 10214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10215                           ;stkvar	_fmt @ sp[(-32)+-4]
 10216  011C04  0EDC               	movlw	-36
 10217  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 10218  011C0C  0EDD               	movlw	-35
 10219  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10220  011C14  2ADE               	incf	postinc2,f,c
 10221  011C16  0E00               	movlw	0
 10222  011C18  22DD               	addwfc	postdec2,f,c
 10223                           
 10224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10225                           ;stkvar	_ap @ sp[(-32)+-6]
 10226  011C1A  0EDA               	movlw	-38
 10227  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10228  011C22  0EDB               	movlw	-37
 10229  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 10230  011C2A  0E02               	movlw	2
 10231  011C2C  5EDE               	subwf	postinc2,f,c
 10232  011C2E  0E00               	movlw	0
 10233  011C30  5ADD               	subwfb	postdec2,f,c
 10234  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 10235  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 10236  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10237  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10238  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 10239  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 10240                           
 10241                           ;stkvar	_cp @ sp[(-32)+29]
 10242  011C56  0EFE               	movlw	-2
 10243  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 10244  011C5E  0EFD               	movlw	-3
 10245  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10246                           
 10247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 10248                           ;stkvar	_cp @ sp[(-32)+29]
 10249  011C66  0EFD               	movlw	-3
 10250  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 10251  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 10252                           
 10253                           ;stkvar	_fp @ sp[(-34)+-2]
 10254  011C74  0EDC               	movlw	-36
 10255  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 10256  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 10257  011C82  ECC8  F0B0         	call	_stoa	;wreg free
 10258  011C86  D2AF               	goto	l2272
 10259  011C88                     l11704:
 10260                           
 10261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 10262                           ;stkvar	_fmt @ sp[(-32)+-4]
 10263  011C88  0EDC               	movlw	-36
 10264  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10265  011C90  0EDD               	movlw	-35
 10266  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 10267  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 10268  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10269  011CA4                     	if	0	;tblptru may be non-zero
 10270  011CA4                     	endif
 10271  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10272  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 10273  011CA6  6EF8               	movwf	tblptru,c
 10274  011CA8                     	endif
 10275  011CA8  0008               	tblrd		*
 10276  011CAA  50F5               	movf	tablat,w,c
 10277  011CAC  0A75               	xorlw	117
 10278  011CAE  A4D8               	btfss	status,2,c
 10279  011CB0  D07C               	goto	l11714
 10280                           
 10281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 10282                           ;stkvar	_fmt @ sp[(-32)+-4]
 10283  011CB2  0EDC               	movlw	-36
 10284  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10285  011CBA  0EDD               	movlw	-35
 10286  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10287  011CC2  2ADE               	incf	postinc2,f,c
 10288  011CC4  0E00               	movlw	0
 10289  011CC6  22DD               	addwfc	postdec2,f,c
 10290                           
 10291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 10292                           ;stkvar	_ap @ sp[(-32)+-6]
 10293  011CC8  0EDA               	movlw	-38
 10294  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10295  011CD0  0EDB               	movlw	-37
 10296  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10297  011CD8  0E02               	movlw	2
 10298  011CDA  5EDE               	subwf	postinc2,f,c
 10299  011CDC  0E00               	movlw	0
 10300  011CDE  5ADD               	subwfb	postdec2,f,c
 10301  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 10302  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 10303  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10304  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10305  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 10306  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 10307  011D04  500B               	movf	(btemp+10)^0,w,c
 10308  011D06  6E11               	movwf	(btemp+16)^0,c
 10309  011D08  500C               	movf	(btemp+11)^0,w,c
 10310  011D0A  6E12               	movwf	(btemp+17)^0,c
 10311  011D0C  6A13               	clrf	(btemp+18)^0,c
 10312  011D0E  6A14               	clrf	(btemp+19)^0,c
 10313  011D10  6A15               	clrf	(btemp+20)^0,c
 10314  011D12  6A16               	clrf	(btemp+21)^0,c
 10315  011D14  6A17               	clrf	(btemp+22)^0,c
 10316  011D16  6A18               	clrf	(btemp+23)^0,c
 10317                           
 10318                           ;stkvar	_llu @ sp[(-32)+6]
 10319  011D18  0EE6               	movlw	-26
 10320  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 10321  011D20  0EE7               	movlw	-25
 10322  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10323  011D28  0EE8               	movlw	-24
 10324  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10325  011D30  0EE9               	movlw	-23
 10326  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 10327  011D38  0EEA               	movlw	-22
 10328  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 10329  011D40  0EEB               	movlw	-21
 10330  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10331  011D48  0EEC               	movlw	-20
 10332  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10333  011D50  0EED               	movlw	-19
 10334  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 10335                           
 10336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 10337                           ;stkvar	_llu @ sp[(-32)+6]
 10338  011D58  50E1               	movf	fsr1l,w,c
 10339  011D5A  0FE6               	addlw	-26
 10340  011D5C  6ED9               	movwf	fsr2l,c
 10341  011D5E  50E2               	movf	fsr1h,w,c
 10342  011D60  6EDA               	movwf	fsr2h,c
 10343  011D62  0EFF               	movlw	255
 10344  011D64  22DA               	addwfc	fsr2h,f,c
 10345  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 10346  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 10347  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 10348  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 10349  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 10350  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 10351  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 10352  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 10353                           
 10354                           ;stkvar	_fp @ sp[(-40)+-2]
 10355  011D96  0ED6               	movlw	-42
 10356  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 10357  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10358  011DA4  ECB2  F0AD         	call	_utoa	;wreg free
 10359  011DA8  D21E               	goto	l2272
 10360  011DAA                     l11714:
 10361                           
 10362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 10363  011DAA  0E02               	movlw	2
 10364  011DAC  6EE6               	movwf	postinc1,c
 10365  011DAE  0E00               	movlw	0
 10366  011DB0  6EE6               	movwf	postinc1,c
 10367  011DB2  0EF3               	movlw	low STR_70
 10368  011DB4  6EE6               	movwf	postinc1,c
 10369  011DB6  0EFF               	movlw	high STR_70
 10370  011DB8  6EE6               	movwf	postinc1,c
 10371                           
 10372                           ;stkvar	_fmt @ sp[(-36)+-4]
 10373  011DBA  0ED8               	movlw	-40
 10374  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10375  011DC2  0ED9               	movlw	-39
 10376  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10377  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 10378  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 10379  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10380  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 10381  011DE2  ECC1  F0B5         	call	_strncmp	;wreg free
 10382  011DE6  5001               	movf	btemp^0,w,c
 10383  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 10384  011DEA  A4D8               	btfss	status,2,c
 10385  011DEC  D039               	goto	l11724
 10386                           
 10387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 10388                           ;stkvar	_fmt @ sp[(-32)+-4]
 10389  011DEE  0EDC               	movlw	-36
 10390  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10391  011DF6  0EDD               	movlw	-35
 10392  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10393  011DFE  0E02               	movlw	2
 10394  011E00  26DE               	addwf	postinc2,f,c
 10395  011E02  0E00               	movlw	0
 10396  011E04  22DD               	addwfc	postdec2,f,c
 10397                           
 10398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 10399                           ;stkvar	_ap @ sp[(-32)+-6]
 10400  011E06  0EDA               	movlw	-38
 10401  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 10402  011E0E  0EDB               	movlw	-37
 10403  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 10404  011E16  0E04               	movlw	4
 10405  011E18  5EDE               	subwf	postinc2,f,c
 10406  011E1A  0E00               	movlw	0
 10407  011E1C  5ADD               	subwfb	postdec2,f,c
 10408  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 10409  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 10410  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10411  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10412  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 10413  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 10414  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 10415  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 10416  011E4E  5009               	movf	(btemp+8)^0,w,c
 10417  011E50  6E11               	movwf	(btemp+16)^0,c
 10418  011E52  500A               	movf	(btemp+9)^0,w,c
 10419  011E54  6E12               	movwf	(btemp+17)^0,c
 10420  011E56  500B               	movf	(btemp+10)^0,w,c
 10421  011E58  6E13               	movwf	(btemp+18)^0,c
 10422  011E5A  500C               	movf	(btemp+11)^0,w,c
 10423  011E5C  6E14               	movwf	(btemp+19)^0,c
 10424  011E5E  D758               	goto	L5
 10425  011E60                     l11724:
 10426                           
 10427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 10428                           ;stkvar	_fmt @ sp[(-32)+-4]
 10429  011E60  0EDC               	movlw	-36
 10430  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 10431  011E68  0EDD               	movlw	-35
 10432  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10433  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 10434  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 10435  011E7C                     	if	0	;tblptru may be non-zero
 10436  011E7C                     	endif
 10437  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10438  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 10439  011E7E  6EF8               	movwf	tblptru,c
 10440  011E80                     	endif
 10441  011E80  0008               	tblrd		*
 10442  011E82  50F5               	movf	tablat,w,c
 10443  011E84  0A78               	xorlw	120
 10444  011E86  B4D8               	btfsc	status,2,c
 10445  011E88  D015               	goto	u11460
 10446                           
 10447                           ;stkvar	_fmt @ sp[(-32)+-4]
 10448  011E8A  0EDC               	movlw	-36
 10449  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10450  011E92  0EDD               	movlw	-35
 10451  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 10452  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10453  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10454  011EA6                     	if	0	;tblptru may be non-zero
 10455  011EA6                     	endif
 10456  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10457  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 10458  011EA8  6EF8               	movwf	tblptru,c
 10459  011EAA                     	endif
 10460  011EAA  0008               	tblrd		*
 10461  011EAC  50F5               	movf	tablat,w,c
 10462  011EAE  0A58               	xorlw	88
 10463  011EB0  A4D8               	btfss	status,2,c
 10464  011EB2  D094               	goto	l11738
 10465  011EB4                     u11460:
 10466                           
 10467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 10468                           ;stkvar	_fmt @ sp[(-32)+-4]
 10469  011EB4  0EDC               	movlw	-36
 10470  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10471  011EBC  0EDD               	movlw	-35
 10472  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10473  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 10474  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 10475  011ED0                     	if	0	;tblptru may be non-zero
 10476  011ED0                     	endif
 10477  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10478  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 10479  011ED2  6EF8               	movwf	tblptru,c
 10480  011ED4                     	endif
 10481                           
 10482                           ;stkvar	_c @ sp[(-32)+31]
 10483  011ED4  0008               	tblrd		*
 10484  011ED6  0EFF               	movlw	-1
 10485  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 10486                           
 10487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 10488                           ;stkvar	_fmt @ sp[(-32)+-4]
 10489  011EDE  0EDC               	movlw	-36
 10490  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10491  011EE6  0EDD               	movlw	-35
 10492  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10493  011EEE  2ADE               	incf	postinc2,f,c
 10494  011EF0  0E00               	movlw	0
 10495  011EF2  22DD               	addwfc	postdec2,f,c
 10496                           
 10497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 10498                           ;stkvar	_ap @ sp[(-32)+-6]
 10499  011EF4  0EDA               	movlw	-38
 10500  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10501  011EFC  0EDB               	movlw	-37
 10502  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10503  011F04  0E02               	movlw	2
 10504  011F06  5EDE               	subwf	postinc2,f,c
 10505  011F08  0E00               	movlw	0
 10506  011F0A  5ADD               	subwfb	postdec2,f,c
 10507  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 10508  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 10509  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10510  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10511  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 10512  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 10513  011F30  500B               	movf	(btemp+10)^0,w,c
 10514  011F32  6E11               	movwf	(btemp+16)^0,c
 10515  011F34  500C               	movf	(btemp+11)^0,w,c
 10516  011F36  6E12               	movwf	(btemp+17)^0,c
 10517  011F38  6A13               	clrf	(btemp+18)^0,c
 10518  011F3A  6A14               	clrf	(btemp+19)^0,c
 10519  011F3C  6A15               	clrf	(btemp+20)^0,c
 10520  011F3E  6A16               	clrf	(btemp+21)^0,c
 10521  011F40  6A17               	clrf	(btemp+22)^0,c
 10522  011F42  6A18               	clrf	(btemp+23)^0,c
 10523                           
 10524                           ;stkvar	_llu @ sp[(-32)+6]
 10525  011F44  0EE6               	movlw	-26
 10526  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 10527  011F4C  0EE7               	movlw	-25
 10528  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10529  011F54  0EE8               	movlw	-24
 10530  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10531  011F5C  0EE9               	movlw	-23
 10532  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 10533  011F64  0EEA               	movlw	-22
 10534  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 10535  011F6C  0EEB               	movlw	-21
 10536  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10537  011F74  0EEC               	movlw	-20
 10538  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10539  011F7C  0EED               	movlw	-19
 10540  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 10541                           
 10542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 10543                           ;stkvar	_c @ sp[(-32)+31]
 10544  011F84  0EFF               	movlw	-1
 10545  011F86  50E3               	movf	plusw1,w,c
 10546  011F88  6EE6               	movwf	postinc1,c
 10547                           
 10548                           ;stkvar	_llu @ sp[(-33)+6]
 10549  011F8A  50E1               	movf	fsr1l,w,c
 10550  011F8C  0FE5               	addlw	-27
 10551  011F8E  6ED9               	movwf	fsr2l,c
 10552  011F90  50E2               	movf	fsr1h,w,c
 10553  011F92  6EDA               	movwf	fsr2h,c
 10554  011F94  0EFF               	movlw	255
 10555  011F96  22DA               	addwfc	fsr2h,f,c
 10556  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 10557  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 10558  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 10559  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 10560  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 10561  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 10562  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 10563  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 10564                           
 10565                           ;stkvar	_fp @ sp[(-41)+-2]
 10566  011FC8  0ED5               	movlw	-43
 10567  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 10568  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 10569  011FD6  EC4E  F0A8         	call	_xtoa	;wreg free
 10570  011FDA  D105               	goto	l2272
 10571  011FDC                     l11738:
 10572                           
 10573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 10574  011FDC  0E02               	movlw	2
 10575  011FDE  6EE6               	movwf	postinc1,c
 10576  011FE0  0E00               	movlw	0
 10577  011FE2  6EE6               	movwf	postinc1,c
 10578  011FE4  0EF6               	movlw	low STR_75
 10579  011FE6  6EE6               	movwf	postinc1,c
 10580  011FE8  0EFF               	movlw	high STR_75
 10581  011FEA  6EE6               	movwf	postinc1,c
 10582                           
 10583                           ;stkvar	_fmt @ sp[(-36)+-4]
 10584  011FEC  0ED8               	movlw	-40
 10585  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10586  011FF4  0ED9               	movlw	-39
 10587  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10588  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 10589  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 10590  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10591  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 10592  012014  ECC1  F0B5         	call	_strncmp	;wreg free
 10593  012018  5001               	movf	btemp^0,w,c
 10594  01201A  1002               	iorwf	(btemp+1)^0,w,c
 10595  01201C  B4D8               	btfsc	status,2,c
 10596  01201E  D022               	goto	u11480
 10597  012020  0E02               	movlw	2
 10598  012022  6EE6               	movwf	postinc1,c
 10599  012024  0E00               	movlw	0
 10600  012026  6EE6               	movwf	postinc1,c
 10601  012028  0EE7               	movlw	low STR_79
 10602  01202A  6EE6               	movwf	postinc1,c
 10603  01202C  0EFF               	movlw	high STR_79
 10604  01202E  6EE6               	movwf	postinc1,c
 10605                           
 10606                           ;stkvar	_fmt @ sp[(-36)+-4]
 10607  012030  0ED8               	movlw	-40
 10608  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 10609  012038  0ED9               	movlw	-39
 10610  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10611  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 10612  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 10613  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10614  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 10615  012058  ECC1  F0B5         	call	_strncmp	;wreg free
 10616  01205C  5001               	movf	btemp^0,w,c
 10617  01205E  1002               	iorwf	(btemp+1)^0,w,c
 10618  012060  A4D8               	btfss	status,2,c
 10619  012062  D058               	goto	l11752
 10620  012064                     u11480:
 10621                           
 10622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 10623                           ;stkvar	_fmt @ sp[(-32)+-4]
 10624  012064  0EDC               	movlw	-36
 10625  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 10626  01206C  0EDD               	movlw	-35
 10627  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10628  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 10629  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 10630  012080  0E01               	movlw	1
 10631  012082  260B               	addwf	(btemp+10)^0,f,c
 10632  012084  0E00               	movlw	0
 10633  012086  220C               	addwfc	(btemp+11)^0,f,c
 10634  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10635  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10636  012094                     	if	0	;tblptru may be non-zero
 10637  012094                     	endif
 10638  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10639  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 10640  012096  6EF8               	movwf	tblptru,c
 10641  012098                     	endif
 10642                           
 10643                           ;stkvar	_c @ sp[(-32)+31]
 10644  012098  0008               	tblrd		*
 10645  01209A  0EFF               	movlw	-1
 10646  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 10647                           
 10648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 10649                           ;stkvar	_fmt @ sp[(-32)+-4]
 10650  0120A2  0EDC               	movlw	-36
 10651  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10652  0120AA  0EDD               	movlw	-35
 10653  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10654  0120B2  0E02               	movlw	2
 10655  0120B4  26DE               	addwf	postinc2,f,c
 10656  0120B6  0E00               	movlw	0
 10657  0120B8  22DD               	addwfc	postdec2,f,c
 10658                           
 10659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 10660                           ;stkvar	_ap @ sp[(-32)+-6]
 10661  0120BA  0EDA               	movlw	-38
 10662  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10663  0120C2  0EDB               	movlw	-37
 10664  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10665  0120CA  0E04               	movlw	4
 10666  0120CC  5EDE               	subwf	postinc2,f,c
 10667  0120CE  0E00               	movlw	0
 10668  0120D0  5ADD               	subwfb	postdec2,f,c
 10669  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 10670  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 10671  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10672  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10673  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 10674  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 10675  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 10676  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 10677  012102  5009               	movf	(btemp+8)^0,w,c
 10678  012104  6E11               	movwf	(btemp+16)^0,c
 10679  012106  500A               	movf	(btemp+9)^0,w,c
 10680  012108  6E12               	movwf	(btemp+17)^0,c
 10681  01210A  500B               	movf	(btemp+10)^0,w,c
 10682  01210C  6E13               	movwf	(btemp+18)^0,c
 10683  01210E  500C               	movf	(btemp+11)^0,w,c
 10684  012110  6E14               	movwf	(btemp+19)^0,c
 10685  012112  D714               	goto	L6
 10686  012114                     l11752:
 10687                           
 10688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 10689                           ;stkvar	_fmt @ sp[(-32)+-4]
 10690  012114  0EDC               	movlw	-36
 10691  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 10692  01211C  0EDD               	movlw	-35
 10693  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10694  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 10695  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10696  012130                     	if	0	;tblptru may be non-zero
 10697  012130                     	endif
 10698  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10699  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 10700  012132  6EF8               	movwf	tblptru,c
 10701  012134                     	endif
 10702  012134  0008               	tblrd		*
 10703  012136  50F5               	movf	tablat,w,c
 10704  012138  0A25               	xorlw	37
 10705  01213A  A4D8               	btfss	status,2,c
 10706  01213C  D01A               	goto	l11762
 10707                           
 10708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10709                           ;stkvar	_fmt @ sp[(-32)+-4]
 10710  01213E  0EDC               	movlw	-36
 10711  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 10712  012146  0EDD               	movlw	-35
 10713  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 10714  01214E  2ADE               	incf	postinc2,f,c
 10715  012150  0E00               	movlw	0
 10716  012152  22DD               	addwfc	postdec2,f,c
 10717                           
 10718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10719                           ;stkvar	_fp @ sp[(-32)+-2]
 10720  012154  0EDE               	movlw	-34
 10721  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 10722  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 10723  012162  0E25               	movlw	37
 10724  012164  6EE6               	movwf	postinc1,c
 10725  012166  0E00               	movlw	0
 10726  012168  6EE6               	movwf	postinc1,c
 10727  01216A  EC4F  F0C2         	call	_fputc	;wreg free
 10728  01216E                     l11758:
 10729                           
 10730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10731  01216E  0E01               	movlw	1
 10732  012170  D00C               	goto	L7
 10733  012172                     l11762:
 10734                           
 10735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 10736                           ;stkvar	_fmt @ sp[(-32)+-4]
 10737  012172  0EDC               	movlw	-36
 10738  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 10739  01217A  0EDD               	movlw	-35
 10740  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10741  012182  2ADE               	incf	postinc2,f,c
 10742  012184  0E00               	movlw	0
 10743  012186  22DD               	addwfc	postdec2,f,c
 10744                           
 10745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 10746  012188  0E00               	movlw	0
 10747  01218A                     L7:
 10748  01218A  6E01               	movwf	btemp^0,c
 10749  01218C  0E00               	movlw	0
 10750  01218E  6E02               	movwf	(btemp+1)^0,c
 10751  012190  D02A               	goto	l2272
 10752  012192                     l11768:
 10753                           
 10754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 10755                           ;stkvar	_fp @ sp[(-32)+-2]
 10756  012192  0EDE               	movlw	-34
 10757  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 10758  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 10759                           
 10760                           ;stkvar	_fmt @ sp[(-34)+-4]
 10761  0121A0  0EDA               	movlw	-38
 10762  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10763  0121A8  0EDB               	movlw	-37
 10764  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10765  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 10766  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 10767  0121BC                     	if	0	;tblptru may be non-zero
 10768  0121BC                     	endif
 10769  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10770  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 10771  0121BE  6EF8               	movwf	tblptru,c
 10772  0121C0                     	endif
 10773  0121C0  0008               	tblrd		*
 10774  0121C2  50F5               	movf	tablat,w,c
 10775  0121C4  6EE6               	movwf	postinc1,c
 10776  0121C6  0E00               	movlw	0
 10777  0121C8  6EE6               	movwf	postinc1,c
 10778  0121CA  EC4F  F0C2         	call	_fputc	;wreg free
 10779                           
 10780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 10781                           ;stkvar	_fmt @ sp[(-32)+-4]
 10782  0121CE  0EDC               	movlw	-36
 10783  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10784  0121D6  0EDD               	movlw	-35
 10785  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10786  0121DE  2ADE               	incf	postinc2,f,c
 10787  0121E0  0E00               	movlw	0
 10788  0121E2  22DD               	addwfc	postdec2,f,c
 10789  0121E4  D7C4               	goto	l11758
 10790  0121E6                     l2272:
 10791                           
 10792                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 10793  0121E6  0EDA               	movlw	218
 10794  0121E8  26E1               	addwf	fsr1l,f,c
 10795  0121EA  0EFF               	movlw	255
 10796  0121EC  22E2               	addwfc	fsr1h,f,c
 10797  0121EE  0012               	return		;funcret
 10798  0121F0                     __end_of_vfpfcnvrt:
 10799                           	opt callstack 0
 10800                           
 10801 ;; *************** function _xtoa *****************
 10802 ;; Defined at:
 10803 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10806 ;;		 -> f(6), NULL(0), 
 10807 ;;  d               8  [STACK] unsigned long long 
 10808 ;;  x               1  [STACK] unsigned char 
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;  n               8  [STACK] unsigned long long 
 10811 ;;  c               2  [STACK] int 
 10812 ;;  i               2  [STACK] int 
 10813 ;;  w               2  [STACK] int 
 10814 ;;  p               2  [STACK] int 
 10815 ;; Return value:  Size  Location     Type
 10816 ;;                  2  [STACK] int 
 10817 ;; Registers used:
 10818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10819 ;; Tracked objects:
 10820 ;;		On entry : 0/0
 10821 ;;		On exit  : 0/0
 10822 ;;		Unchanged: 0/0
 10823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10828 ;;Total ram usage:        0 bytes
 10829 ;; Hardware stack levels used:    1
 10830 ;; Hardware stack levels required when called:   20
 10831 ;; This function calls:
 10832 ;;		_isalpha
 10833 ;;		_isupper
 10834 ;;		_pad
 10835 ;;		_toupper
 10836 ;; This function is called by:
 10837 ;;		_vfpfcnvrt
 10838 ;; This function uses a reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text42
 10842  01509C                     __ptext42:
 10843                           	opt callstack 0
 10844  01509C                     _xtoa:
 10845                           	opt callstack 0
 10846                           
 10847                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10848  01509C  0E14               	movlw	20
 10849  01509E  26E1               	addwf	fsr1l,f,c
 10850  0150A0  0E00               	movlw	0
 10851  0150A2  22E2               	addwfc	fsr1h,f,c
 10852                           
 10853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 10854                           
 10855                           ;incstack = 0
 10856 ;; hardware stack exceeded
 10857  0150A4  AE24               	btfss	(_prec+1)^0,7,c
 10858                           
 10859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 10860  0150A6  9225               	bcf	_flags^0,1,c
 10861                           
 10862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 10863  0150A8  BE24               	btfsc	(_prec+1)^0,7,c
 10864  0150AA  D005               	goto	u11010
 10865  0150AC  5024               	movf	(_prec+1)^0,w,c
 10866  0150AE  E110               	bnz	l11492
 10867  0150B0  0423               	decf	_prec^0,w,c
 10868  0150B2  B0D8               	btfsc	status,0,c
 10869  0150B4  D00D               	goto	l11492
 10870  0150B6                     u11010:
 10871  0150B6  0E01               	movlw	1
 10872  0150B8  6E0B               	movwf	(btemp+10)^0,c
 10873  0150BA  0E00               	movlw	0
 10874  0150BC  6E0C               	movwf	(btemp+11)^0,c
 10875                           
 10876                           ;stkvar	_p @ sp[(-20)+18]
 10877  0150BE  0EFE               	movlw	-2
 10878  0150C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10879  0150C6  0EFF               	movlw	-1
 10880  0150C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 10881  0150CE  D008               	goto	l2222
 10882  0150D0                     l11492:
 10883                           
 10884                           ;stkvar	_p @ sp[(-20)+18]
 10885  0150D0  0EFE               	movlw	-2
 10886  0150D2  0060  F08F  FFE3   	movff	_prec,plusw1
 10887  0150D8  0EFF               	movlw	-1
 10888  0150DA  0060  F093  FFE3   	movff	_prec+1,plusw1
 10889  0150E0                     l2222:
 10890                           
 10891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 10892                           ;stkvar	_w @ sp[(-20)+16]
 10893  0150E0  0EFC               	movlw	-4
 10894  0150E2  0060  F087  FFE3   	movff	_width,plusw1
 10895  0150E8  0EFD               	movlw	-3
 10896  0150EA  0060  F08B  FFE3   	movff	_width+1,plusw1
 10897                           
 10898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 10899  0150F0  A825               	btfss	_flags^0,4,c
 10900  0150F2  D00B               	goto	l11498
 10901                           
 10902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 10903                           ;stkvar	_w @ sp[(-20)+16]
 10904  0150F4  50E1               	movf	fsr1l,w,c
 10905  0150F6  0FFC               	addlw	-4
 10906  0150F8  6ED9               	movwf	fsr2l,c
 10907  0150FA  50E2               	movf	fsr1h,w,c
 10908  0150FC  6EDA               	movwf	fsr2h,c
 10909  0150FE  0EFF               	movlw	255
 10910  015100  22DA               	addwfc	fsr2h,f,c
 10911  015102  0EFE               	movlw	254
 10912  015104  26DE               	addwf	postinc2,f,c
 10913  015106  0EFF               	movlw	255
 10914  015108  22DD               	addwfc	postdec2,f,c
 10915  01510A                     l11498:
 10916                           
 10917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 10918                           ;stkvar	_d @ sp[(-20)+-10]
 10919  01510A  0EE2               	movlw	226
 10920  01510C  24E1               	addwf	fsr1l,w,c
 10921  01510E  6ED9               	movwf	fsr2l,c
 10922  015110  0EFF               	movlw	255
 10923  015112  20E2               	addwfc	fsr1h,w,c
 10924  015114  6EDA               	movwf	fsr2h,c
 10925                           
 10926                           ;stkvar	_n @ sp[(-20)+4]
 10927  015116  0E08               	movlw	8
 10928  015118  6E01               	movwf	btemp^0,c
 10929  01511A  0EF0               	movlw	-16
 10930  01511C                     us1103999:
 10931  01511C  006F FF7B FFE3     	movff	postinc2,plusw1
 10932  015122  28E8               	incf	wreg,w,c
 10933  015124  2E01               	decfsz	btemp^0,f,c
 10934  015126  D7FA               	bra	us1103999
 10935                           
 10936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 10937  015128  0E4F               	movlw	79
 10938  01512A  6E0B               	movwf	(btemp+10)^0,c
 10939  01512C  0E00               	movlw	0
 10940  01512E  6E0C               	movwf	(btemp+11)^0,c
 10941                           
 10942                           ;stkvar	_i @ sp[(-20)+14]
 10943  015130  0EFA               	movlw	-6
 10944  015132  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10945  015138  0EFB               	movlw	-5
 10946  01513A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10947                           
 10948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 10949  015140  0103               	movlb	3	; () banked
 10950  015142  6BE3               	clrf	(_dbuf+79)& (0+255),b
 10951                           
 10952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10953  015144  D0EE               	goto	l11536
 10954  015146                     l11504:
 10955                           
 10956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 10957                           ;stkvar	_i @ sp[(-20)+14]
 10958  015146  50E1               	movf	fsr1l,w,c
 10959  015148  0FFA               	addlw	-6
 10960  01514A  6ED9               	movwf	fsr2l,c
 10961  01514C  50E2               	movf	fsr1h,w,c
 10962  01514E  6EDA               	movwf	fsr2h,c
 10963  015150  0EFF               	movlw	255
 10964  015152  22DA               	addwfc	fsr2h,f,c
 10965  015154  06DE               	decf	postinc2,f,c
 10966  015156  0E00               	movlw	0
 10967  015158  5ADD               	subwfb	postdec2,f,c
 10968                           
 10969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 10970                           ;stkvar	_n @ sp[(-20)+4]
 10971  01515A  0EF0               	movlw	-16
 10972  01515C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10973  015162  0EF1               	movlw	-15
 10974  015164  006F FF8C  F00C    	movff	plusw1,btemp+11
 10975  01516A  0E0F               	movlw	15
 10976  01516C  160B               	andwf	(btemp+10)^0,f,c
 10977  01516E  0E00               	movlw	0
 10978  015170  160C               	andwf	(btemp+11)^0,f,c
 10979                           
 10980                           ;stkvar	_c @ sp[(-20)+12]
 10981  015172  0EF8               	movlw	-8
 10982  015174  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10983  01517A  0EF9               	movlw	-7
 10984  01517C  0060  F033  FFE3   	movff	btemp+11,plusw1
 10985                           
 10986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 10987                           ;stkvar	_c @ sp[(-20)+12]
 10988  015182  0EF9               	movlw	-7
 10989  015184  BEE3               	btfsc	plusw1,7,c
 10990  015186  D00F               	goto	l11512
 10991  015188  0EF9               	movlw	-7
 10992  01518A  50E3               	movf	plusw1,w,c
 10993  01518C  E108               	bnz	u11040
 10994  01518E  0EF8               	movlw	-8
 10995  015190  006F FF8C  F001    	movff	plusw1,btemp
 10996  015196  0E0A               	movlw	10
 10997  015198  5E01               	subwf	btemp^0,f,c
 10998  01519A  A0D8               	btfss	status,0,c
 10999  01519C  D004               	goto	l11512
 11000  01519E                     u11040:
 11001                           
 11002                           ;stkvar	_c @ sp[(-20)+12]
 11003  01519E  0EF8               	movlw	-8
 11004  0151A0  50E3               	movf	plusw1,w,c
 11005  0151A2  0F57               	addlw	87
 11006  0151A4  D003               	goto	L8
 11007  0151A6                     l11512:
 11008                           
 11009                           ;stkvar	_c @ sp[(-20)+12]
 11010  0151A6  0EF8               	movlw	-8
 11011  0151A8  50E3               	movf	plusw1,w,c
 11012  0151AA  0F30               	addlw	48
 11013  0151AC                     L8:
 11014  0151AC  6E0B               	movwf	(btemp+10)^0,c
 11015  0151AE  0EF9               	movlw	-7
 11016  0151B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11017  0151B6  0E00               	movlw	0
 11018  0151B8  220C               	addwfc	(btemp+11)^0,f,c
 11019                           
 11020                           ;stkvar	_c @ sp[(-20)+12]
 11021  0151BA  0EF8               	movlw	-8
 11022  0151BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11023  0151C2  0EF9               	movlw	-7
 11024  0151C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 11025  0151CA  0EBF               	movlw	191
 11026  0151CC  6E0B               	movwf	(btemp+10)^0,c
 11027  0151CE  0EFF               	movlw	255
 11028  0151D0  6E0C               	movwf	(btemp+11)^0,c
 11029                           
 11030                           ;stkvar	_x @ sp[(-20)+-11]
 11031  0151D2  0EE1               	movlw	-31
 11032  0151D4  50E3               	movf	plusw1,w,c
 11033  0151D6  6E09               	movwf	(btemp+8)^0,c
 11034  0151D8  6A0A               	clrf	(btemp+9)^0,c
 11035  0151DA  500B               	movf	(btemp+10)^0,w,c
 11036  0151DC  2609               	addwf	(btemp+8)^0,f,c
 11037  0151DE  500C               	movf	(btemp+11)^0,w,c
 11038  0151E0  220A               	addwfc	(btemp+9)^0,f,c
 11039  0151E2  500A               	movf	(btemp+9)^0,w,c
 11040  0151E4  E106               	bnz	u11050
 11041  0151E6  0E1A               	movlw	26
 11042  0151E8  5C09               	subwf	(btemp+8)^0,w,c
 11043  0151EA  B0D8               	btfsc	status,0,c
 11044  0151EC  D002               	goto	u11050
 11045  0151EE  0E01               	movlw	1
 11046  0151F0  D001               	goto	u11060
 11047  0151F2                     u11050:
 11048  0151F2  0E00               	movlw	0
 11049  0151F4                     u11060:
 11050  0151F4  6E0B               	movwf	(btemp+10)^0,c
 11051  0151F6  6A0C               	clrf	(btemp+11)^0,c
 11052                           
 11053                           ;stkvar	_xtoa$5266 @ sp[(-20)+2]
 11054  0151F8  0EEE               	movlw	-18
 11055  0151FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11056  015200  0EEF               	movlw	-17
 11057  015202  0060  F033  FFE3   	movff	btemp+11,plusw1
 11058                           
 11059                           ;stkvar	_xtoa$5266 @ sp[(-20)+2]
 11060  015208  0EEE               	movlw	-18
 11061  01520A  006F FF8C  F001    	movff	plusw1,btemp
 11062  015210  0EEF               	movlw	-17
 11063  015212  50E3               	movf	plusw1,w,c
 11064  015214  1001               	iorwf	btemp^0,w,c
 11065  015216  B4D8               	btfsc	status,2,c
 11066  015218  D041               	goto	l11528
 11067  01521A  0E9F               	movlw	159
 11068  01521C  6E0B               	movwf	(btemp+10)^0,c
 11069  01521E  0EFF               	movlw	255
 11070  015220  6E0C               	movwf	(btemp+11)^0,c
 11071                           
 11072                           ;stkvar	_c @ sp[(-20)+12]
 11073  015222  0EF8               	movlw	-8
 11074  015224  006F FF8C  F009    	movff	plusw1,btemp+8
 11075  01522A  0EF9               	movlw	-7
 11076  01522C  006F FF8C  F00A    	movff	plusw1,btemp+9
 11077  015232  0E20               	movlw	32
 11078  015234  1209               	iorwf	(btemp+8)^0,f,c
 11079  015236  0E00               	movlw	0
 11080  015238  120A               	iorwf	(btemp+9)^0,f,c
 11081  01523A  500B               	movf	(btemp+10)^0,w,c
 11082  01523C  2609               	addwf	(btemp+8)^0,f,c
 11083  01523E  500C               	movf	(btemp+11)^0,w,c
 11084  015240  220A               	addwfc	(btemp+9)^0,f,c
 11085  015242  500A               	movf	(btemp+9)^0,w,c
 11086  015244  E106               	bnz	u11080
 11087  015246  0E1A               	movlw	26
 11088  015248  5C09               	subwf	(btemp+8)^0,w,c
 11089  01524A  B0D8               	btfsc	status,0,c
 11090  01524C  D002               	goto	u11080
 11091  01524E  0E01               	movlw	1
 11092  015250  D001               	goto	u11090
 11093  015252                     u11080:
 11094  015252  0E00               	movlw	0
 11095  015254                     u11090:
 11096  015254  6E0B               	movwf	(btemp+10)^0,c
 11097  015256  6A0C               	clrf	(btemp+11)^0,c
 11098                           
 11099                           ;stkvar	_xtoa$5267 @ sp[(-20)+0]
 11100  015258  0EEC               	movlw	-20
 11101  01525A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11102  015260  0EED               	movlw	-19
 11103  015262  0060  F033  FFE3   	movff	btemp+11,plusw1
 11104                           
 11105                           ;stkvar	_xtoa$5267 @ sp[(-20)+0]
 11106  015268  0EEC               	movlw	-20
 11107  01526A  006F FF8C  F001    	movff	plusw1,btemp
 11108  015270  0EED               	movlw	-19
 11109  015272  50E3               	movf	plusw1,w,c
 11110  015274  1001               	iorwf	btemp^0,w,c
 11111  015276  B4D8               	btfsc	status,2,c
 11112  015278  D011               	goto	l11528
 11113                           
 11114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 11115                           ;stkvar	_c @ sp[(-20)+12]
 11116  01527A  0EF8               	movlw	-8
 11117  01527C  006F FF8F FFE6     	movff	plusw1,postinc1
 11118  015282  006F FF8F FFE6     	movff	plusw1,postinc1
 11119  015288  ECD0  F0CB         	call	_toupper	;wreg free
 11120                           
 11121                           ;stkvar	_c @ sp[(-20)+12]
 11122  01528C  0EF8               	movlw	-8
 11123  01528E  0060  F007  FFE3   	movff	btemp,plusw1
 11124  015294  0EF9               	movlw	-7
 11125  015296  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11126  01529C                     l11528:
 11127                           
 11128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 11129                           ;stkvar	_c @ sp[(-20)+12]
 11130                           ;stkvar	_i @ sp[(-20)+14]
 11131  01529C  0EFA               	movlw	-6
 11132  01529E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11133  0152A4  0EFB               	movlw	-5
 11134  0152A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11135  0152AC  0E94               	movlw	low _dbuf
 11136  0152AE  240B               	addwf	(btemp+10)^0,w,c
 11137  0152B0  6ED9               	movwf	fsr2l,c
 11138  0152B2  0E03               	movlw	high _dbuf
 11139  0152B4  200C               	addwfc	(btemp+11)^0,w,c
 11140  0152B6  6EDA               	movwf	fsr2h,c
 11141  0152B8  0EF8               	movlw	-8
 11142  0152BA  006F FF8F FFDF     	movff	plusw1,indf2
 11143                           
 11144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 11145                           ;stkvar	_p @ sp[(-20)+18]
 11146  0152C0  50E1               	movf	fsr1l,w,c
 11147  0152C2  0FFE               	addlw	-2
 11148  0152C4  6ED9               	movwf	fsr2l,c
 11149  0152C6  50E2               	movf	fsr1h,w,c
 11150  0152C8  6EDA               	movwf	fsr2h,c
 11151  0152CA  0EFF               	movlw	255
 11152  0152CC  22DA               	addwfc	fsr2h,f,c
 11153  0152CE  06DE               	decf	postinc2,f,c
 11154  0152D0  0E00               	movlw	0
 11155  0152D2  5ADD               	subwfb	postdec2,f,c
 11156                           
 11157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 11158                           ;stkvar	_w @ sp[(-20)+16]
 11159  0152D4  50E1               	movf	fsr1l,w,c
 11160  0152D6  0FFC               	addlw	-4
 11161  0152D8  6ED9               	movwf	fsr2l,c
 11162  0152DA  50E2               	movf	fsr1h,w,c
 11163  0152DC  6EDA               	movwf	fsr2h,c
 11164  0152DE  0EFF               	movlw	255
 11165  0152E0  22DA               	addwfc	fsr2h,f,c
 11166  0152E2  06DE               	decf	postinc2,f,c
 11167  0152E4  0E00               	movlw	0
 11168  0152E6  5ADD               	subwfb	postdec2,f,c
 11169                           
 11170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 11171  0152E8  0E04               	movlw	4
 11172  0152EA  6E0C               	movwf	(btemp+11)^0,c
 11173                           
 11174                           ;stkvar	_n @ sp[(-20)+4]
 11175  0152EC  50E1               	movf	fsr1l,w,c
 11176  0152EE  0FF0               	addlw	-16
 11177  0152F0  6ED9               	movwf	fsr2l,c
 11178  0152F2  50E2               	movf	fsr1h,w,c
 11179  0152F4  6EDA               	movwf	fsr2h,c
 11180  0152F6  0EFF               	movlw	255
 11181  0152F8  22DA               	addwfc	fsr2h,f,c
 11182  0152FA  280C               	incf	(btemp+11)^0,w,c
 11183  0152FC  52DE               	movf	postinc2,f,c
 11184  0152FE  D00F               	goto	u11110
 11185  015300                     u11115:
 11186  015300  52DE               	movf	postinc2,f,c
 11187  015302  52DE               	movf	postinc2,f,c
 11188  015304  52DE               	movf	postinc2,f,c
 11189  015306  52DE               	movf	postinc2,f,c
 11190  015308  52DE               	movf	postinc2,f,c
 11191  01530A  52DE               	movf	postinc2,f,c
 11192  01530C  90D8               	bcf	status,0,c
 11193  01530E  32DD               	rrcf	postdec2,f,c
 11194  015310  32DD               	rrcf	postdec2,f,c
 11195  015312  32DD               	rrcf	postdec2,f,c
 11196  015314  32DD               	rrcf	postdec2,f,c
 11197  015316  32DD               	rrcf	postdec2,f,c
 11198  015318  32DD               	rrcf	postdec2,f,c
 11199  01531A  32DD               	rrcf	postdec2,f,c
 11200  01531C  32DE               	rrcf	postinc2,f,c
 11201  01531E                     u11110:
 11202  01531E  2EE8               	decfsz	wreg,f,c
 11203  015320  D7EF               	goto	u11115
 11204  015322                     l11536:
 11205                           
 11206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11207                           ;stkvar	_i @ sp[(-20)+14]
 11208  015322  0EFB               	movlw	-5
 11209  015324  BEE3               	btfsc	plusw1,7,c
 11210  015326  D03A               	goto	u11160
 11211  015328  0EFB               	movlw	-5
 11212  01532A  50E3               	movf	plusw1,w,c
 11213  01532C  E108               	bnz	u11120
 11214  01532E  0EFA               	movlw	-6
 11215  015330  006F FF8C  F001    	movff	plusw1,btemp
 11216  015336  0E02               	movlw	2
 11217  015338  5E01               	subwf	btemp^0,f,c
 11218  01533A  A0D8               	btfss	status,0,c
 11219  01533C  D02F               	goto	u11160
 11220  01533E                     u11120:
 11221                           
 11222                           ;stkvar	_n @ sp[(-20)+4]
 11223  01533E  0EF0               	movlw	-16
 11224  015340  50E3               	movf	plusw1,w,c
 11225  015342  E115               	bnz	u11131
 11226  015344  0EF1               	movlw	-15
 11227  015346  50E3               	movf	plusw1,w,c
 11228  015348  E112               	bnz	u11131
 11229  01534A  0EF2               	movlw	-14
 11230  01534C  50E3               	movf	plusw1,w,c
 11231  01534E  E10F               	bnz	u11131
 11232  015350  0EF3               	movlw	-13
 11233  015352  50E3               	movf	plusw1,w,c
 11234  015354  E10C               	bnz	u11131
 11235  015356  0EF4               	movlw	-12
 11236  015358  50E3               	movf	plusw1,w,c
 11237  01535A  E109               	bnz	u11131
 11238  01535C  0EF5               	movlw	-11
 11239  01535E  50E3               	movf	plusw1,w,c
 11240  015360  E106               	bnz	u11131
 11241  015362  0EF6               	movlw	-10
 11242  015364  50E3               	movf	plusw1,w,c
 11243  015366  E103               	bnz	u11131
 11244  015368  0EF7               	movlw	-9
 11245  01536A  50E3               	movf	plusw1,w,c
 11246  01536C  A4D8               	btfss	status,2,c
 11247  01536E                     u11131:
 11248  01536E  D6EB               	goto	l11504
 11249                           
 11250                           ;stkvar	_p @ sp[(-20)+18]
 11251  015370  0EFF               	movlw	-1
 11252  015372  BEE3               	btfsc	plusw1,7,c
 11253  015374  D007               	goto	u11140
 11254  015376  0EFF               	movlw	-1
 11255  015378  50E3               	movf	plusw1,w,c
 11256  01537A  E103               	bnz	u11141
 11257  01537C  0EFE               	movlw	-2
 11258  01537E  04E3               	decf	plusw1,w,c
 11259  015380  B0D8               	btfsc	status,0,c
 11260  015382                     u11141:
 11261  015382  D6E1               	goto	l11504
 11262  015384                     u11140:
 11263                           
 11264                           ;stkvar	_w @ sp[(-20)+16]
 11265  015384  0EFD               	movlw	-3
 11266  015386  BEE3               	btfsc	plusw1,7,c
 11267  015388  D009               	goto	u11160
 11268  01538A  0EFD               	movlw	-3
 11269  01538C  50E3               	movf	plusw1,w,c
 11270  01538E  E104               	bnz	u11150
 11271  015390  0EFC               	movlw	-4
 11272  015392  04E3               	decf	plusw1,w,c
 11273  015394  A0D8               	btfss	status,0,c
 11274  015396  D002               	goto	u11160
 11275  015398                     u11150:
 11276  015398  B225               	btfsc	_flags^0,1,c
 11277  01539A  D6D5               	goto	l11504
 11278  01539C                     u11160:
 11279                           
 11280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 11281  01539C  A825               	btfss	_flags^0,4,c
 11282  01539E  D036               	goto	l11552
 11283                           
 11284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 11285                           ;stkvar	_i @ sp[(-20)+14]
 11286  0153A0  50E1               	movf	fsr1l,w,c
 11287  0153A2  0FFA               	addlw	-6
 11288  0153A4  6ED9               	movwf	fsr2l,c
 11289  0153A6  50E2               	movf	fsr1h,w,c
 11290  0153A8  6EDA               	movwf	fsr2h,c
 11291  0153AA  0EFF               	movlw	255
 11292  0153AC  22DA               	addwfc	fsr2h,f,c
 11293  0153AE  06DE               	decf	postinc2,f,c
 11294  0153B0  0E00               	movlw	0
 11295  0153B2  5ADD               	subwfb	postdec2,f,c
 11296                           
 11297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 11298                           ;stkvar	_x @ sp[(-20)+-11]
 11299                           ;stkvar	_i @ sp[(-20)+14]
 11300  0153B4  0EFA               	movlw	-6
 11301  0153B6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11302  0153BC  0EFB               	movlw	-5
 11303  0153BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11304  0153C4  0E94               	movlw	low _dbuf
 11305  0153C6  240B               	addwf	(btemp+10)^0,w,c
 11306  0153C8  6ED9               	movwf	fsr2l,c
 11307  0153CA  0E03               	movlw	high _dbuf
 11308  0153CC  200C               	addwfc	(btemp+11)^0,w,c
 11309  0153CE  6EDA               	movwf	fsr2h,c
 11310  0153D0  0EE1               	movlw	-31
 11311  0153D2  006F FF8F FFDF     	movff	plusw1,indf2
 11312                           
 11313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 11314                           ;stkvar	_i @ sp[(-20)+14]
 11315  0153D8  50E1               	movf	fsr1l,w,c
 11316  0153DA  0FFA               	addlw	-6
 11317  0153DC  6ED9               	movwf	fsr2l,c
 11318  0153DE  50E2               	movf	fsr1h,w,c
 11319  0153E0  6EDA               	movwf	fsr2h,c
 11320  0153E2  0EFF               	movlw	255
 11321  0153E4  22DA               	addwfc	fsr2h,f,c
 11322  0153E6  06DE               	decf	postinc2,f,c
 11323  0153E8  0E00               	movlw	0
 11324  0153EA  5ADD               	subwfb	postdec2,f,c
 11325                           
 11326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 11327                           ;stkvar	_i @ sp[(-20)+14]
 11328  0153EC  0EFA               	movlw	-6
 11329  0153EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11330  0153F4  0EFB               	movlw	-5
 11331  0153F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11332  0153FC  0E94               	movlw	low _dbuf
 11333  0153FE  240B               	addwf	(btemp+10)^0,w,c
 11334  015400  6ED9               	movwf	fsr2l,c
 11335  015402  0E03               	movlw	high _dbuf
 11336  015404  200C               	addwfc	(btemp+11)^0,w,c
 11337  015406  6EDA               	movwf	fsr2h,c
 11338  015408  0E30               	movlw	48
 11339  01540A  6EDF               	movwf	indf2,c
 11340  01540C                     l11552:
 11341                           
 11342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 11343                           ;stkvar	_w @ sp[(-20)+16]
 11344  01540C  0EFC               	movlw	-4
 11345  01540E  006F FF8F FFE6     	movff	plusw1,postinc1
 11346  015414  006F FF8F FFE6     	movff	plusw1,postinc1
 11347                           
 11348                           ;stkvar	_i @ sp[(-22)+14]
 11349  01541A  0E94               	movlw	low _dbuf
 11350  01541C  6E0B               	movwf	(btemp+10)^0,c
 11351  01541E  0E03               	movlw	high _dbuf
 11352  015420  6E0C               	movwf	(btemp+11)^0,c
 11353  015422  0EF8               	movlw	-8
 11354  015424  50E3               	movf	plusw1,w,c
 11355  015426  260B               	addwf	(btemp+10)^0,f,c
 11356  015428  0EF9               	movlw	-7
 11357  01542A  50E3               	movf	plusw1,w,c
 11358  01542C  220C               	addwfc	(btemp+11)^0,f,c
 11359  01542E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11360  015434  0060  F033  FFE6   	movff	btemp+11,postinc1
 11361                           
 11362                           ;stkvar	_fp @ sp[(-24)+-2]
 11363  01543A  0EE6               	movlw	-26
 11364  01543C  006F FF8F FFE6     	movff	plusw1,postinc1
 11365  015442  006F FF8F FFE6     	movff	plusw1,postinc1
 11366  015448  EC6D  F0C3         	call	_pad	;wreg free
 11367                           
 11368                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 11369  01544C  0EE1               	movlw	225
 11370  01544E  26E1               	addwf	fsr1l,f,c
 11371  015450  0EFF               	movlw	255
 11372  015452  22E2               	addwfc	fsr1h,f,c
 11373  015454  0012               	return		;funcret
 11374  015456                     __end_of_xtoa:
 11375                           	opt callstack 0
 11376                           
 11377 ;; *************** function _toupper *****************
 11378 ;; Defined at:
 11379 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;  c               2  [STACK] int 
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;		None
 11384 ;; Return value:  Size  Location     Type
 11385 ;;                  2  [STACK] int 
 11386 ;; Registers used:
 11387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11388 ;; Tracked objects:
 11389 ;;		On entry : 0/3
 11390 ;;		On exit  : 0/0
 11391 ;;		Unchanged: 0/0
 11392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11397 ;;Total ram usage:        0 bytes
 11398 ;; Hardware stack levels used:    1
 11399 ;; Hardware stack levels required when called:   16
 11400 ;; This function calls:
 11401 ;;		_islower
 11402 ;; This function is called by:
 11403 ;;		_xtoa
 11404 ;; This function uses a reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text43
 11408  0197A0                     __ptext43:
 11409                           	opt callstack 0
 11410  0197A0                     _toupper:
 11411                           	opt callstack 0
 11412                           
 11413                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11414  0197A0  52E6               	movf	postinc1,f,c
 11415  0197A2  52E6               	movf	postinc1,f,c
 11416                           
 11417                           ;stkvar	_c @ sp[(-2)+-2]
 11418                           
 11419                           ;incstack = 0
 11420 ;; hardware stack exceeded
 11421  0197A4  0EFC               	movlw	-4
 11422  0197A6  50E3               	movf	plusw1,w,c
 11423  0197A8  0F9F               	addlw	159
 11424  0197AA  6E0B               	movwf	(btemp+10)^0,c
 11425  0197AC  0EFD               	movlw	-3
 11426  0197AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11427  0197B4  0EFF               	movlw	255
 11428  0197B6  220C               	addwfc	(btemp+11)^0,f,c
 11429  0197B8  500C               	movf	(btemp+11)^0,w,c
 11430  0197BA  E106               	bnz	u5810
 11431  0197BC  0E1A               	movlw	26
 11432  0197BE  5C0B               	subwf	(btemp+10)^0,w,c
 11433  0197C0  B0D8               	btfsc	status,0,c
 11434  0197C2  D002               	goto	u5810
 11435  0197C4  0E01               	movlw	1
 11436  0197C6  D001               	goto	u5820
 11437  0197C8                     u5810:
 11438  0197C8  0E00               	movlw	0
 11439  0197CA                     u5820:
 11440  0197CA  6E0B               	movwf	(btemp+10)^0,c
 11441  0197CC  6A0C               	clrf	(btemp+11)^0,c
 11442                           
 11443                           ;stkvar	_toupper$6073 @ sp[(-2)+0]
 11444  0197CE  0EFE               	movlw	-2
 11445  0197D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11446  0197D6  0EFF               	movlw	-1
 11447  0197D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 11448                           
 11449                           ;stkvar	_toupper$6073 @ sp[(-2)+0]
 11450  0197DE  0EFE               	movlw	-2
 11451  0197E0  006F FF8C  F001    	movff	plusw1,btemp
 11452  0197E6  0EFF               	movlw	-1
 11453  0197E8  50E3               	movf	plusw1,w,c
 11454  0197EA  1001               	iorwf	btemp^0,w,c
 11455  0197EC  B4D8               	btfsc	status,2,c
 11456  0197EE  D00D               	goto	l7556
 11457                           
 11458                           ;stkvar	_c @ sp[(-2)+-2]
 11459  0197F0  0EFC               	movlw	-4
 11460  0197F2  006F FF8C  F001    	movff	plusw1,btemp
 11461  0197F8  0EFD               	movlw	-3
 11462  0197FA  006F FF8C  F002    	movff	plusw1,btemp+1
 11463  019800  0E5F               	movlw	95
 11464  019802  1601               	andwf	btemp^0,f,c
 11465  019804  0E00               	movlw	0
 11466  019806  1602               	andwf	(btemp+1)^0,f,c
 11467  019808  D008               	goto	l3389
 11468  01980A                     l7556:
 11469                           
 11470                           ;stkvar	_c @ sp[(-2)+-2]
 11471  01980A  0EFC               	movlw	-4
 11472  01980C  006F FF8C  F001    	movff	plusw1,btemp
 11473  019812  0EFD               	movlw	-3
 11474  019814  006F FF8C  F002    	movff	plusw1,btemp+1
 11475  01981A                     l3389:
 11476                           
 11477                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11478  01981A  52E5               	movf	postdec1,f,c
 11479  01981C  52E5               	movf	postdec1,f,c
 11480  01981E  52E5               	movf	postdec1,f,c
 11481  019820  52E5               	movf	postdec1,f,c
 11482  019822  0012               	return		;funcret
 11483  019824                     __end_of_toupper:
 11484                           	opt callstack 0
 11485                           
 11486 ;; *************** function _islower *****************
 11487 ;; Defined at:
 11488 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;  c               2  [STACK] int 
 11491 ;; Auto vars:     Size  Location     Type
 11492 ;;		None
 11493 ;; Return value:  Size  Location     Type
 11494 ;;                  2  [STACK] int 
 11495 ;; Registers used:
 11496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11497 ;; Tracked objects:
 11498 ;;		On entry : 0/0
 11499 ;;		On exit  : 0/0
 11500 ;;		Unchanged: 0/0
 11501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11506 ;;Total ram usage:        0 bytes
 11507 ;; Hardware stack levels used:    1
 11508 ;; Hardware stack levels required when called:   15
 11509 ;; This function calls:
 11510 ;;		Nothing
 11511 ;; This function is called by:
 11512 ;;		_toupper
 11513 ;; This function uses a reentrant model
 11514 ;;
 11515                           
 11516                           	psect	text44
 11517  01A400                     __ptext44:
 11518                           	opt callstack 0
 11519  01A400                     _islower:
 11520                           	opt callstack 0
 11521                           
 11522                           ;stkvar	_c @ sp[(0)+-2]
 11523                           
 11524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11525                           ;incstack = 0
 11526 ;; hardware stack exceeded
 11527  01A400  0EFE               	movlw	-2
 11528  01A402  50E3               	movf	plusw1,w,c
 11529  01A404  0F9F               	addlw	159
 11530  01A406  6E0B               	movwf	(btemp+10)^0,c
 11531  01A408  0EFF               	movlw	-1
 11532  01A40A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11533  01A410  0EFF               	movlw	255
 11534  01A412  220C               	addwfc	(btemp+11)^0,f,c
 11535  01A414  500C               	movf	(btemp+11)^0,w,c
 11536  01A416  E106               	bnz	u5500
 11537  01A418  0E1A               	movlw	26
 11538  01A41A  5C0B               	subwf	(btemp+10)^0,w,c
 11539  01A41C  B0D8               	btfsc	status,0,c
 11540  01A41E  D002               	goto	u5500
 11541  01A420  0E01               	movlw	1
 11542  01A422  D001               	goto	u5510
 11543  01A424                     u5500:
 11544  01A424  0E00               	movlw	0
 11545  01A426                     u5510:
 11546  01A426  6E01               	movwf	btemp^0,c
 11547  01A428  6A02               	clrf	(btemp+1)^0,c
 11548                           
 11549                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11550  01A42A  52E5               	movf	postdec1,f,c
 11551  01A42C  52E5               	movf	postdec1,f,c
 11552  01A42E  0012               	return		;funcret
 11553  01A430                     __end_of_islower:
 11554                           	opt callstack 0
 11555                           
 11556 ;; *************** function _isalpha *****************
 11557 ;; Defined at:
 11558 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;  c               2  [STACK] int 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  2  [STACK] int 
 11565 ;; Registers used:
 11566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11576 ;;Total ram usage:        0 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:   15
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_xtoa
 11583 ;; This function uses a reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text45
 11587  01A096                     __ptext45:
 11588                           	opt callstack 0
 11589  01A096                     _isalpha:
 11590                           	opt callstack 0
 11591                           
 11592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11593                           ;incstack = 0
 11594 ;; hardware stack exceeded
 11595  01A096  0E9F               	movlw	159
 11596  01A098  6E0B               	movwf	(btemp+10)^0,c
 11597  01A09A  0EFF               	movlw	255
 11598  01A09C  6E0C               	movwf	(btemp+11)^0,c
 11599                           
 11600                           ;stkvar	_c @ sp[(0)+-2]
 11601  01A09E  0EFE               	movlw	-2
 11602  01A0A0  006F FF8C  F009    	movff	plusw1,btemp+8
 11603  01A0A6  0EFF               	movlw	-1
 11604  01A0A8  006F FF8C  F00A    	movff	plusw1,btemp+9
 11605  01A0AE  0E20               	movlw	32
 11606  01A0B0  1209               	iorwf	(btemp+8)^0,f,c
 11607  01A0B2  0E00               	movlw	0
 11608  01A0B4  120A               	iorwf	(btemp+9)^0,f,c
 11609  01A0B6  500B               	movf	(btemp+10)^0,w,c
 11610  01A0B8  2609               	addwf	(btemp+8)^0,f,c
 11611  01A0BA  500C               	movf	(btemp+11)^0,w,c
 11612  01A0BC  220A               	addwfc	(btemp+9)^0,f,c
 11613  01A0BE  500A               	movf	(btemp+9)^0,w,c
 11614  01A0C0  E106               	bnz	u5790
 11615  01A0C2  0E1A               	movlw	26
 11616  01A0C4  5C09               	subwf	(btemp+8)^0,w,c
 11617  01A0C6  B0D8               	btfsc	status,0,c
 11618  01A0C8  D002               	goto	u5790
 11619  01A0CA  0E01               	movlw	1
 11620  01A0CC  D001               	goto	u5800
 11621  01A0CE                     u5790:
 11622  01A0CE  0E00               	movlw	0
 11623  01A0D0                     u5800:
 11624  01A0D0  6E01               	movwf	btemp^0,c
 11625  01A0D2  6A02               	clrf	(btemp+1)^0,c
 11626                           
 11627                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11628  01A0D4  52E5               	movf	postdec1,f,c
 11629  01A0D6  52E5               	movf	postdec1,f,c
 11630  01A0D8  0012               	return		;funcret
 11631  01A0DA                     __end_of_isalpha:
 11632                           	opt callstack 0
 11633                           
 11634 ;; *************** function _utoa *****************
 11635 ;; Defined at:
 11636 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11637 ;; Parameters:    Size  Location     Type
 11638 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11639 ;;		 -> f(6), NULL(0), 
 11640 ;;  d               8  [STACK] unsigned long long 
 11641 ;; Auto vars:     Size  Location     Type
 11642 ;;  n               8  [STACK] unsigned long long 
 11643 ;;  i               2  [STACK] int 
 11644 ;;  w               2  [STACK] int 
 11645 ;;  p               2  [STACK] int 
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  2  [STACK] int 
 11648 ;; Registers used:
 11649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 11650 ;; Tracked objects:
 11651 ;;		On entry : 0/0
 11652 ;;		On exit  : 0/0
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11659 ;;Total ram usage:        0 bytes
 11660 ;; Hardware stack levels used:    1
 11661 ;; Hardware stack levels required when called:   20
 11662 ;; This function calls:
 11663 ;;		___lodiv
 11664 ;;		___lomod
 11665 ;;		_pad
 11666 ;; This function is called by:
 11667 ;;		_vfpfcnvrt
 11668 ;; This function uses a reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text46
 11672  015B64                     __ptext46:
 11673                           	opt callstack 0
 11674  015B64                     _utoa:
 11675                           	opt callstack 0
 11676                           
 11677                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11678  015B64  0E0E               	movlw	14
 11679  015B66  26E1               	addwf	fsr1l,f,c
 11680  015B68  0E00               	movlw	0
 11681  015B6A  22E2               	addwfc	fsr1h,f,c
 11682                           
 11683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 11684                           
 11685                           ;incstack = 0
 11686 ;; hardware stack exceeded
 11687  015B6C  AE24               	btfss	(_prec+1)^0,7,c
 11688                           
 11689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 11690  015B6E  9225               	bcf	_flags^0,1,c
 11691                           
 11692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 11693  015B70  BE24               	btfsc	(_prec+1)^0,7,c
 11694  015B72  D005               	goto	u10930
 11695  015B74  5024               	movf	(_prec+1)^0,w,c
 11696  015B76  E110               	bnz	l11452
 11697  015B78  0423               	decf	_prec^0,w,c
 11698  015B7A  B0D8               	btfsc	status,0,c
 11699  015B7C  D00D               	goto	l11452
 11700  015B7E                     u10930:
 11701  015B7E  0E01               	movlw	1
 11702  015B80  6E0B               	movwf	(btemp+10)^0,c
 11703  015B82  0E00               	movlw	0
 11704  015B84  6E0C               	movwf	(btemp+11)^0,c
 11705                           
 11706                           ;stkvar	_p @ sp[(-14)+12]
 11707  015B86  0EFE               	movlw	-2
 11708  015B88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11709  015B8E  0EFF               	movlw	-1
 11710  015B90  0060  F033  FFE3   	movff	btemp+11,plusw1
 11711  015B96  D008               	goto	l2207
 11712  015B98                     l11452:
 11713                           
 11714                           ;stkvar	_p @ sp[(-14)+12]
 11715  015B98  0EFE               	movlw	-2
 11716  015B9A  0060  F08F  FFE3   	movff	_prec,plusw1
 11717  015BA0  0EFF               	movlw	-1
 11718  015BA2  0060  F093  FFE3   	movff	_prec+1,plusw1
 11719  015BA8                     l2207:
 11720                           
 11721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 11722                           ;stkvar	_w @ sp[(-14)+10]
 11723  015BA8  0EFC               	movlw	-4
 11724  015BAA  0060  F087  FFE3   	movff	_width,plusw1
 11725  015BB0  0EFD               	movlw	-3
 11726  015BB2  0060  F08B  FFE3   	movff	_width+1,plusw1
 11727                           
 11728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 11729                           ;stkvar	_d @ sp[(-14)+-10]
 11730  015BB8  0EE8               	movlw	232
 11731  015BBA  24E1               	addwf	fsr1l,w,c
 11732  015BBC  6ED9               	movwf	fsr2l,c
 11733  015BBE  0EFF               	movlw	255
 11734  015BC0  20E2               	addwfc	fsr1h,w,c
 11735  015BC2  6EDA               	movwf	fsr2h,c
 11736                           
 11737                           ;stkvar	_n @ sp[(-14)+0]
 11738  015BC4  0E08               	movlw	8
 11739  015BC6  6E01               	movwf	btemp^0,c
 11740  015BC8  0EF2               	movlw	-14
 11741  015BCA                     us1094999:
 11742  015BCA  006F FF7B FFE3     	movff	postinc2,plusw1
 11743  015BD0  28E8               	incf	wreg,w,c
 11744  015BD2  2E01               	decfsz	btemp^0,f,c
 11745  015BD4  D7FA               	bra	us1094999
 11746                           
 11747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 11748  015BD6  0E4F               	movlw	79
 11749  015BD8  6E0B               	movwf	(btemp+10)^0,c
 11750  015BDA  0E00               	movlw	0
 11751  015BDC  6E0C               	movwf	(btemp+11)^0,c
 11752                           
 11753                           ;stkvar	_i @ sp[(-14)+8]
 11754  015BDE  0EFA               	movlw	-6
 11755  015BE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11756  015BE6  0EFB               	movlw	-5
 11757  015BE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 11758                           
 11759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 11760  015BEE  0103               	movlb	3	; () banked
 11761  015BF0  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11762                           
 11763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 11764  015BF2  D0FB               	goto	l11470
 11765  015BF4                     l11460:
 11766                           
 11767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 11768                           ;stkvar	_i @ sp[(-14)+8]
 11769  015BF4  50E1               	movf	fsr1l,w,c
 11770  015BF6  0FFA               	addlw	-6
 11771  015BF8  6ED9               	movwf	fsr2l,c
 11772  015BFA  50E2               	movf	fsr1h,w,c
 11773  015BFC  6EDA               	movwf	fsr2h,c
 11774  015BFE  0EFF               	movlw	255
 11775  015C00  22DA               	addwfc	fsr2h,f,c
 11776  015C02  06DE               	decf	postinc2,f,c
 11777  015C04  0E00               	movlw	0
 11778  015C06  5ADD               	subwfb	postdec2,f,c
 11779                           
 11780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 11781  015C08  0E0A               	movlw	10
 11782  015C0A  6EE6               	movwf	postinc1,c
 11783  015C0C  0E00               	movlw	0
 11784  015C0E  6EE6               	movwf	postinc1,c
 11785  015C10  0E00               	movlw	0
 11786  015C12  6EE6               	movwf	postinc1,c
 11787  015C14  0E00               	movlw	0
 11788  015C16  6EE6               	movwf	postinc1,c
 11789  015C18  0E00               	movlw	0
 11790  015C1A  6EE6               	movwf	postinc1,c
 11791  015C1C  0E00               	movlw	0
 11792  015C1E  6EE6               	movwf	postinc1,c
 11793  015C20  0E00               	movlw	0
 11794  015C22  6EE6               	movwf	postinc1,c
 11795  015C24  0E00               	movlw	0
 11796  015C26  6EE6               	movwf	postinc1,c
 11797                           
 11798                           ;stkvar	_n @ sp[(-22)+0]
 11799  015C28  50E1               	movf	fsr1l,w,c
 11800  015C2A  0FEA               	addlw	-22
 11801  015C2C  6ED9               	movwf	fsr2l,c
 11802  015C2E  50E2               	movf	fsr1h,w,c
 11803  015C30  6EDA               	movwf	fsr2h,c
 11804  015C32  0EFF               	movlw	255
 11805  015C34  22DA               	addwfc	fsr2h,f,c
 11806  015C36  006F FF7B FFE6     	movff	postinc2,postinc1
 11807  015C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 11808  015C42  006F FF7B FFE6     	movff	postinc2,postinc1
 11809  015C48  006F FF7B FFE6     	movff	postinc2,postinc1
 11810  015C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 11811  015C54  006F FF7B FFE6     	movff	postinc2,postinc1
 11812  015C5A  006F FF7B FFE6     	movff	postinc2,postinc1
 11813  015C60  006F FF7B FFE6     	movff	postinc2,postinc1
 11814  015C66  EC7A  F0C0         	call	___lomod	;wreg free
 11815  015C6A  52E5               	movf	postdec1,f,c
 11816  015C6C  006F FF9C  F018    	movff	indf1,btemp+23
 11817  015C72  52E5               	movf	postdec1,f,c
 11818  015C74  006F FF9C  F017    	movff	indf1,btemp+22
 11819  015C7A  52E5               	movf	postdec1,f,c
 11820  015C7C  006F FF9C  F016    	movff	indf1,btemp+21
 11821  015C82  52E5               	movf	postdec1,f,c
 11822  015C84  006F FF9C  F015    	movff	indf1,btemp+20
 11823  015C8A  52E5               	movf	postdec1,f,c
 11824  015C8C  006F FF9C  F014    	movff	indf1,btemp+19
 11825  015C92  52E5               	movf	postdec1,f,c
 11826  015C94  006F FF9C  F013    	movff	indf1,btemp+18
 11827  015C9A  52E5               	movf	postdec1,f,c
 11828  015C9C  006F FF9C  F012    	movff	indf1,btemp+17
 11829  015CA2  52E5               	movf	postdec1,f,c
 11830  015CA4  006F FF9C  F011    	movff	indf1,btemp+16
 11831  015CAA  0EF8               	movlw	248
 11832  015CAC  26E1               	addwf	fsr1l,f,c
 11833  015CAE  0EFF               	movlw	255
 11834  015CB0  22E2               	addwfc	fsr1h,f,c
 11835  015CB2  0E30               	movlw	48
 11836  015CB4  2611               	addwf	(btemp+16)^0,f,c
 11837                           
 11838                           ;stkvar	_i @ sp[(-14)+8]
 11839  015CB6  0EFA               	movlw	-6
 11840  015CB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11841  015CBE  0EFB               	movlw	-5
 11842  015CC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11843  015CC6  0E94               	movlw	low _dbuf
 11844  015CC8  240B               	addwf	(btemp+10)^0,w,c
 11845  015CCA  6ED9               	movwf	fsr2l,c
 11846  015CCC  0E03               	movlw	high _dbuf
 11847  015CCE  200C               	addwfc	(btemp+11)^0,w,c
 11848  015CD0  6EDA               	movwf	fsr2h,c
 11849  015CD2  0060  F047  FFDF   	movff	btemp+16,indf2
 11850                           
 11851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 11852                           ;stkvar	_p @ sp[(-14)+12]
 11853  015CD8  50E1               	movf	fsr1l,w,c
 11854  015CDA  0FFE               	addlw	-2
 11855  015CDC  6ED9               	movwf	fsr2l,c
 11856  015CDE  50E2               	movf	fsr1h,w,c
 11857  015CE0  6EDA               	movwf	fsr2h,c
 11858  015CE2  0EFF               	movlw	255
 11859  015CE4  22DA               	addwfc	fsr2h,f,c
 11860  015CE6  06DE               	decf	postinc2,f,c
 11861  015CE8  0E00               	movlw	0
 11862  015CEA  5ADD               	subwfb	postdec2,f,c
 11863                           
 11864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 11865                           ;stkvar	_w @ sp[(-14)+10]
 11866  015CEC  50E1               	movf	fsr1l,w,c
 11867  015CEE  0FFC               	addlw	-4
 11868  015CF0  6ED9               	movwf	fsr2l,c
 11869  015CF2  50E2               	movf	fsr1h,w,c
 11870  015CF4  6EDA               	movwf	fsr2h,c
 11871  015CF6  0EFF               	movlw	255
 11872  015CF8  22DA               	addwfc	fsr2h,f,c
 11873  015CFA  06DE               	decf	postinc2,f,c
 11874  015CFC  0E00               	movlw	0
 11875  015CFE  5ADD               	subwfb	postdec2,f,c
 11876                           
 11877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 11878  015D00  0E0A               	movlw	10
 11879  015D02  6EE6               	movwf	postinc1,c
 11880  015D04  0E00               	movlw	0
 11881  015D06  6EE6               	movwf	postinc1,c
 11882  015D08  0E00               	movlw	0
 11883  015D0A  6EE6               	movwf	postinc1,c
 11884  015D0C  0E00               	movlw	0
 11885  015D0E  6EE6               	movwf	postinc1,c
 11886  015D10  0E00               	movlw	0
 11887  015D12  6EE6               	movwf	postinc1,c
 11888  015D14  0E00               	movlw	0
 11889  015D16  6EE6               	movwf	postinc1,c
 11890  015D18  0E00               	movlw	0
 11891  015D1A  6EE6               	movwf	postinc1,c
 11892  015D1C  0E00               	movlw	0
 11893  015D1E  6EE6               	movwf	postinc1,c
 11894                           
 11895                           ;stkvar	_n @ sp[(-22)+0]
 11896  015D20  50E1               	movf	fsr1l,w,c
 11897  015D22  0FEA               	addlw	-22
 11898  015D24  6ED9               	movwf	fsr2l,c
 11899  015D26  50E2               	movf	fsr1h,w,c
 11900  015D28  6EDA               	movwf	fsr2h,c
 11901  015D2A  0EFF               	movlw	255
 11902  015D2C  22DA               	addwfc	fsr2h,f,c
 11903  015D2E  006F FF7B FFE6     	movff	postinc2,postinc1
 11904  015D34  006F FF7B FFE6     	movff	postinc2,postinc1
 11905  015D3A  006F FF7B FFE6     	movff	postinc2,postinc1
 11906  015D40  006F FF7B FFE6     	movff	postinc2,postinc1
 11907  015D46  006F FF7B FFE6     	movff	postinc2,postinc1
 11908  015D4C  006F FF7B FFE6     	movff	postinc2,postinc1
 11909  015D52  006F FF7B FFE6     	movff	postinc2,postinc1
 11910  015D58  006F FF7B FFE6     	movff	postinc2,postinc1
 11911  015D5E  EC85  F0BB         	call	___lodiv	;wreg free
 11912  015D62  52E5               	movf	postdec1,f,c
 11913  015D64  006F FF9C  F018    	movff	indf1,btemp+23
 11914  015D6A  52E5               	movf	postdec1,f,c
 11915  015D6C  006F FF9C  F017    	movff	indf1,btemp+22
 11916  015D72  52E5               	movf	postdec1,f,c
 11917  015D74  006F FF9C  F016    	movff	indf1,btemp+21
 11918  015D7A  52E5               	movf	postdec1,f,c
 11919  015D7C  006F FF9C  F015    	movff	indf1,btemp+20
 11920  015D82  52E5               	movf	postdec1,f,c
 11921  015D84  006F FF9C  F014    	movff	indf1,btemp+19
 11922  015D8A  52E5               	movf	postdec1,f,c
 11923  015D8C  006F FF9C  F013    	movff	indf1,btemp+18
 11924  015D92  52E5               	movf	postdec1,f,c
 11925  015D94  006F FF9C  F012    	movff	indf1,btemp+17
 11926  015D9A  52E5               	movf	postdec1,f,c
 11927  015D9C  006F FF9C  F011    	movff	indf1,btemp+16
 11928  015DA2  0EF8               	movlw	248
 11929  015DA4  26E1               	addwf	fsr1l,f,c
 11930  015DA6  0EFF               	movlw	255
 11931  015DA8  22E2               	addwfc	fsr1h,f,c
 11932                           
 11933                           ;stkvar	_n @ sp[(-14)+0]
 11934  015DAA  0EF2               	movlw	-14
 11935  015DAC  0060  F047  FFE3   	movff	btemp+16,plusw1
 11936  015DB2  0EF3               	movlw	-13
 11937  015DB4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11938  015DBA  0EF4               	movlw	-12
 11939  015DBC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11940  015DC2  0EF5               	movlw	-11
 11941  015DC4  0060  F053  FFE3   	movff	btemp+19,plusw1
 11942  015DCA  0EF6               	movlw	-10
 11943  015DCC  0060  F057  FFE3   	movff	btemp+20,plusw1
 11944  015DD2  0EF7               	movlw	-9
 11945  015DD4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11946  015DDA  0EF8               	movlw	-8
 11947  015DDC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11948  015DE2  0EF9               	movlw	-7
 11949  015DE4  0060  F063  FFE3   	movff	btemp+23,plusw1
 11950  015DEA                     l11470:
 11951                           
 11952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 11953                           ;stkvar	_i @ sp[(-14)+8]
 11954  015DEA  0EFA               	movlw	-6
 11955  015DEC  006F FF8C  F001    	movff	plusw1,btemp
 11956  015DF2  0EFB               	movlw	-5
 11957  015DF4  50E3               	movf	plusw1,w,c
 11958  015DF6  1001               	iorwf	btemp^0,w,c
 11959  015DF8  B4D8               	btfsc	status,2,c
 11960  015DFA  D02F               	goto	u10990
 11961                           
 11962                           ;stkvar	_n @ sp[(-14)+0]
 11963  015DFC  0EF2               	movlw	-14
 11964  015DFE  50E3               	movf	plusw1,w,c
 11965  015E00  E115               	bnz	u10961
 11966  015E02  0EF3               	movlw	-13
 11967  015E04  50E3               	movf	plusw1,w,c
 11968  015E06  E112               	bnz	u10961
 11969  015E08  0EF4               	movlw	-12
 11970  015E0A  50E3               	movf	plusw1,w,c
 11971  015E0C  E10F               	bnz	u10961
 11972  015E0E  0EF5               	movlw	-11
 11973  015E10  50E3               	movf	plusw1,w,c
 11974  015E12  E10C               	bnz	u10961
 11975  015E14  0EF6               	movlw	-10
 11976  015E16  50E3               	movf	plusw1,w,c
 11977  015E18  E109               	bnz	u10961
 11978  015E1A  0EF7               	movlw	-9
 11979  015E1C  50E3               	movf	plusw1,w,c
 11980  015E1E  E106               	bnz	u10961
 11981  015E20  0EF8               	movlw	-8
 11982  015E22  50E3               	movf	plusw1,w,c
 11983  015E24  E103               	bnz	u10961
 11984  015E26  0EF9               	movlw	-7
 11985  015E28  50E3               	movf	plusw1,w,c
 11986  015E2A  A4D8               	btfss	status,2,c
 11987  015E2C                     u10961:
 11988  015E2C  D6E3               	goto	l11460
 11989                           
 11990                           ;stkvar	_p @ sp[(-14)+12]
 11991  015E2E  0EFF               	movlw	-1
 11992  015E30  BEE3               	btfsc	plusw1,7,c
 11993  015E32  D007               	goto	u10970
 11994  015E34  0EFF               	movlw	-1
 11995  015E36  50E3               	movf	plusw1,w,c
 11996  015E38  E103               	bnz	u10971
 11997  015E3A  0EFE               	movlw	-2
 11998  015E3C  04E3               	decf	plusw1,w,c
 11999  015E3E  B0D8               	btfsc	status,0,c
 12000  015E40                     u10971:
 12001  015E40  D6D9               	goto	l11460
 12002  015E42                     u10970:
 12003                           
 12004                           ;stkvar	_w @ sp[(-14)+10]
 12005  015E42  0EFD               	movlw	-3
 12006  015E44  BEE3               	btfsc	plusw1,7,c
 12007  015E46  D009               	goto	u10990
 12008  015E48  0EFD               	movlw	-3
 12009  015E4A  50E3               	movf	plusw1,w,c
 12010  015E4C  E104               	bnz	u10980
 12011  015E4E  0EFC               	movlw	-4
 12012  015E50  04E3               	decf	plusw1,w,c
 12013  015E52  A0D8               	btfss	status,0,c
 12014  015E54  D002               	goto	u10990
 12015  015E56                     u10980:
 12016  015E56  B225               	btfsc	_flags^0,1,c
 12017  015E58  D6CD               	goto	l11460
 12018  015E5A                     u10990:
 12019                           
 12020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 12021                           ;stkvar	_w @ sp[(-14)+10]
 12022  015E5A  0EFC               	movlw	-4
 12023  015E5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12024  015E62  006F FF8F FFE6     	movff	plusw1,postinc1
 12025                           
 12026                           ;stkvar	_i @ sp[(-16)+8]
 12027  015E68  0E94               	movlw	low _dbuf
 12028  015E6A  6E0B               	movwf	(btemp+10)^0,c
 12029  015E6C  0E03               	movlw	high _dbuf
 12030  015E6E  6E0C               	movwf	(btemp+11)^0,c
 12031  015E70  0EF8               	movlw	-8
 12032  015E72  50E3               	movf	plusw1,w,c
 12033  015E74  260B               	addwf	(btemp+10)^0,f,c
 12034  015E76  0EF9               	movlw	-7
 12035  015E78  50E3               	movf	plusw1,w,c
 12036  015E7A  220C               	addwfc	(btemp+11)^0,f,c
 12037  015E7C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12038  015E82  0060  F033  FFE6   	movff	btemp+11,postinc1
 12039                           
 12040                           ;stkvar	_fp @ sp[(-18)+-2]
 12041  015E88  0EEC               	movlw	-20
 12042  015E8A  006F FF8F FFE6     	movff	plusw1,postinc1
 12043  015E90  006F FF8F FFE6     	movff	plusw1,postinc1
 12044  015E96  EC6D  F0C3         	call	_pad	;wreg free
 12045                           
 12046                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 12047  015E9A  0EE8               	movlw	232
 12048  015E9C  26E1               	addwf	fsr1l,f,c
 12049  015E9E  0EFF               	movlw	255
 12050  015EA0  22E2               	addwfc	fsr1h,f,c
 12051  015EA2  0012               	return		;funcret
 12052  015EA4                     __end_of_utoa:
 12053                           	opt callstack 0
 12054                           
 12055 ;; *************** function ___lomod *****************
 12056 ;; Defined at:
 12057 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 12058 ;; Parameters:    Size  Location     Type
 12059 ;;  dividend        8  [STACK] unsigned long long 
 12060 ;;  divisor         8  [STACK] unsigned long long 
 12061 ;; Auto vars:     Size  Location     Type
 12062 ;;  counter         1  [STACK] unsigned char 
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  8  [STACK] unsigned long long 
 12065 ;; Registers used:
 12066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12067 ;; Tracked objects:
 12068 ;;		On entry : 0/3
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12076 ;;Total ram usage:        0 bytes
 12077 ;; Hardware stack levels used:    1
 12078 ;; Hardware stack levels required when called:   15
 12079 ;; This function calls:
 12080 ;;		Nothing
 12081 ;; This function is called by:
 12082 ;;		_utoa
 12083 ;; This function uses a reentrant model
 12084 ;;
 12085                           
 12086                           	psect	text47
 12087  0180F4                     __ptext47:
 12088                           	opt callstack 0
 12089  0180F4                     ___lomod:
 12090                           	opt callstack 0
 12091                           
 12092                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12093  0180F4  52E6               	movf	postinc1,f,c
 12094                           
 12095                           ;stkvar	_divisor @ sp[(-1)+-16]
 12096                           
 12097                           ;incstack = 0
 12098 ;; hardware stack exceeded
 12099  0180F6  0EEF               	movlw	-17
 12100  0180F8  50E3               	movf	plusw1,w,c
 12101  0180FA  E116               	bnz	u6940
 12102  0180FC  0EF0               	movlw	-16
 12103  0180FE  50E3               	movf	plusw1,w,c
 12104  018100  E113               	bnz	u6940
 12105  018102  0EF1               	movlw	-15
 12106  018104  50E3               	movf	plusw1,w,c
 12107  018106  E110               	bnz	u6940
 12108  018108  0EF2               	movlw	-14
 12109  01810A  50E3               	movf	plusw1,w,c
 12110  01810C  E10D               	bnz	u6940
 12111  01810E  0EF3               	movlw	-13
 12112  018110  50E3               	movf	plusw1,w,c
 12113  018112  E10A               	bnz	u6940
 12114  018114  0EF4               	movlw	-12
 12115  018116  50E3               	movf	plusw1,w,c
 12116  018118  E107               	bnz	u6940
 12117  01811A  0EF5               	movlw	-11
 12118  01811C  50E3               	movf	plusw1,w,c
 12119  01811E  E104               	bnz	u6940
 12120  018120  0EF6               	movlw	-10
 12121  018122  50E3               	movf	plusw1,w,c
 12122  018124  B4D8               	btfsc	status,2,c
 12123  018126  D075               	goto	u6970
 12124  018128                     u6940:
 12125                           
 12126                           ;stkvar	_counter @ sp[(-1)+0]
 12127  018128  0EFF               	movlw	-1
 12128  01812A  6AE3               	clrf	plusw1,c
 12129  01812C  D012               	goto	L9
 12130  01812E                     l8166:
 12131                           
 12132                           ;stkvar	_divisor @ sp[(-1)+-16]
 12133  01812E  90D8               	bcf	status,0,c
 12134  018130  0EEF               	movlw	-17
 12135  018132  36E3               	rlcf	plusw1,f,c
 12136  018134  0EF0               	movlw	-16
 12137  018136  36E3               	rlcf	plusw1,f,c
 12138  018138  0EF1               	movlw	-15
 12139  01813A  36E3               	rlcf	plusw1,f,c
 12140  01813C  0EF2               	movlw	-14
 12141  01813E  36E3               	rlcf	plusw1,f,c
 12142  018140  0EF3               	movlw	-13
 12143  018142  36E3               	rlcf	plusw1,f,c
 12144  018144  0EF4               	movlw	-12
 12145  018146  36E3               	rlcf	plusw1,f,c
 12146  018148  0EF5               	movlw	-11
 12147  01814A  36E3               	rlcf	plusw1,f,c
 12148  01814C  0EF6               	movlw	-10
 12149  01814E  36E3               	rlcf	plusw1,f,c
 12150                           
 12151                           ;stkvar	_counter @ sp[(-1)+0]
 12152  018150  0EFF               	movlw	-1
 12153  018152                     L9:
 12154  018152  2AE3               	incf	plusw1,f,c
 12155                           
 12156                           ;stkvar	_divisor @ sp[(-1)+-16]
 12157  018154  0EF6               	movlw	-10
 12158  018156  AEE3               	btfss	plusw1,7,c
 12159  018158  D7EA               	goto	l8166
 12160  01815A                     u6950:
 12161                           
 12162                           ;stkvar	_divisor @ sp[(-1)+-16]
 12163                           ;stkvar	_dividend @ sp[(-1)+-8]
 12164  01815A  50E1               	movf	fsr1l,w,c
 12165  01815C  0FF7               	addlw	-9
 12166  01815E  6ED9               	movwf	fsr2l,c
 12167  018160  50E2               	movf	fsr1h,w,c
 12168  018162  6EDA               	movwf	fsr2h,c
 12169  018164  0EFF               	movlw	255
 12170  018166  22DA               	addwfc	fsr2h,f,c
 12171  018168  0EEF               	movlw	-17
 12172  01816A  50E3               	movf	plusw1,w,c
 12173  01816C  5CDE               	subwf	postinc2,w,c
 12174  01816E  0EF0               	movlw	-16
 12175  018170  50E3               	movf	plusw1,w,c
 12176  018172  58DE               	subwfb	postinc2,w,c
 12177  018174  0EF1               	movlw	-15
 12178  018176  50E3               	movf	plusw1,w,c
 12179  018178  58DE               	subwfb	postinc2,w,c
 12180  01817A  0EF2               	movlw	-14
 12181  01817C  50E3               	movf	plusw1,w,c
 12182  01817E  58DE               	subwfb	postinc2,w,c
 12183  018180  0EF3               	movlw	-13
 12184  018182  50E3               	movf	plusw1,w,c
 12185  018184  58DE               	subwfb	postinc2,w,c
 12186  018186  0EF4               	movlw	-12
 12187  018188  50E3               	movf	plusw1,w,c
 12188  01818A  58DE               	subwfb	postinc2,w,c
 12189  01818C  0EF5               	movlw	-11
 12190  01818E  50E3               	movf	plusw1,w,c
 12191  018190  58DE               	subwfb	postinc2,w,c
 12192  018192  0EF6               	movlw	-10
 12193  018194  50E3               	movf	plusw1,w,c
 12194  018196  58DE               	subwfb	postinc2,w,c
 12195  018198  A0D8               	btfss	status,0,c
 12196  01819A  D01F               	goto	l8174
 12197                           
 12198                           ;stkvar	_divisor @ sp[(-1)+-16]
 12199                           ;stkvar	_dividend @ sp[(-1)+-8]
 12200  01819C  50E1               	movf	fsr1l,w,c
 12201  01819E  0FF7               	addlw	-9
 12202  0181A0  6ED9               	movwf	fsr2l,c
 12203  0181A2  50E2               	movf	fsr1h,w,c
 12204  0181A4  6EDA               	movwf	fsr2h,c
 12205  0181A6  0EFF               	movlw	255
 12206  0181A8  22DA               	addwfc	fsr2h,f,c
 12207  0181AA  0EEF               	movlw	-17
 12208  0181AC  50E3               	movf	plusw1,w,c
 12209  0181AE  5EDE               	subwf	postinc2,f,c
 12210  0181B0  0EF0               	movlw	-16
 12211  0181B2  50E3               	movf	plusw1,w,c
 12212  0181B4  5ADE               	subwfb	postinc2,f,c
 12213  0181B6  0EF1               	movlw	-15
 12214  0181B8  50E3               	movf	plusw1,w,c
 12215  0181BA  5ADE               	subwfb	postinc2,f,c
 12216  0181BC  0EF2               	movlw	-14
 12217  0181BE  50E3               	movf	plusw1,w,c
 12218  0181C0  5ADE               	subwfb	postinc2,f,c
 12219  0181C2  0EF3               	movlw	-13
 12220  0181C4  50E3               	movf	plusw1,w,c
 12221  0181C6  5ADE               	subwfb	postinc2,f,c
 12222  0181C8  0EF4               	movlw	-12
 12223  0181CA  50E3               	movf	plusw1,w,c
 12224  0181CC  5ADE               	subwfb	postinc2,f,c
 12225  0181CE  0EF5               	movlw	-11
 12226  0181D0  50E3               	movf	plusw1,w,c
 12227  0181D2  5ADE               	subwfb	postinc2,f,c
 12228  0181D4  0EF6               	movlw	-10
 12229  0181D6  50E3               	movf	plusw1,w,c
 12230  0181D8  5ADE               	subwfb	postinc2,f,c
 12231  0181DA                     l8174:
 12232                           
 12233                           ;stkvar	_divisor @ sp[(-1)+-16]
 12234  0181DA  90D8               	bcf	status,0,c
 12235  0181DC  0EF6               	movlw	-10
 12236  0181DE  32E3               	rrcf	plusw1,f,c
 12237  0181E0  0EF5               	movlw	-11
 12238  0181E2  32E3               	rrcf	plusw1,f,c
 12239  0181E4  0EF4               	movlw	-12
 12240  0181E6  32E3               	rrcf	plusw1,f,c
 12241  0181E8  0EF3               	movlw	-13
 12242  0181EA  32E3               	rrcf	plusw1,f,c
 12243  0181EC  0EF2               	movlw	-14
 12244  0181EE  32E3               	rrcf	plusw1,f,c
 12245  0181F0  0EF1               	movlw	-15
 12246  0181F2  32E3               	rrcf	plusw1,f,c
 12247  0181F4  0EF0               	movlw	-16
 12248  0181F6  32E3               	rrcf	plusw1,f,c
 12249  0181F8  0EEF               	movlw	-17
 12250  0181FA  32E3               	rrcf	plusw1,f,c
 12251                           
 12252                           ;stkvar	_counter @ sp[(-1)+0]
 12253  0181FC  0EFF               	movlw	-1
 12254  0181FE  50E3               	movf	plusw1,w,c
 12255  018200  6E01               	movwf	btemp^0,c
 12256  018202  0E01               	movlw	1
 12257  018204  5E01               	subwf	btemp^0,f,c
 12258  018206  0EFF               	movlw	-1
 12259  018208  0060  F007  FFE3   	movff	btemp,plusw1
 12260  01820E  A4D8               	btfss	status,2,c
 12261  018210  D7A4               	goto	u6950
 12262  018212                     u6970:
 12263                           
 12264                           ;stkvar	_dividend @ sp[(-1)+-8]
 12265  018212  0EF7               	movlw	247
 12266  018214  24E1               	addwf	fsr1l,w,c
 12267  018216  6ED9               	movwf	fsr2l,c
 12268  018218  0EFF               	movlw	255
 12269  01821A  20E2               	addwfc	fsr1h,w,c
 12270  01821C  6EDA               	movwf	fsr2h,c
 12271                           
 12272                           ;stkvar	?___lomod @ sp[(-1)+-8]
 12273  01821E  0E08               	movlw	8
 12274  018220  6E01               	movwf	btemp^0,c
 12275  018222  0EF7               	movlw	-9
 12276  018224                     us698999:
 12277  018224  006F FF7B FFE3     	movff	postinc2,plusw1
 12278  01822A  28E8               	incf	wreg,w,c
 12279  01822C  2E01               	decfsz	btemp^0,f,c
 12280  01822E  D7FA               	bra	us698999
 12281                           
 12282                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 12283  018230  52E5               	movf	postdec1,f,c
 12284  018232  0012               	return		;funcret
 12285  018234                     __end_of___lomod:
 12286                           	opt callstack 0
 12287                           
 12288 ;; *************** function ___lodiv *****************
 12289 ;; Defined at:
 12290 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 12291 ;; Parameters:    Size  Location     Type
 12292 ;;  dividend        8  [STACK] unsigned long long 
 12293 ;;  divisor         8  [STACK] unsigned long long 
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;  quotient        8  [STACK] unsigned long long 
 12296 ;;  counter         1  [STACK] unsigned char 
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  8  [STACK] unsigned long long 
 12299 ;; Registers used:
 12300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/3
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12310 ;;Total ram usage:        0 bytes
 12311 ;; Hardware stack levels used:    1
 12312 ;; Hardware stack levels required when called:   15
 12313 ;; This function calls:
 12314 ;;		Nothing
 12315 ;; This function is called by:
 12316 ;;		_utoa
 12317 ;; This function uses a reentrant model
 12318 ;;
 12319                           
 12320                           	psect	text48
 12321  01770A                     __ptext48:
 12322                           	opt callstack 0
 12323  01770A                     ___lodiv:
 12324                           	opt callstack 0
 12325                           
 12326                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12327  01770A  0E09               	movlw	9
 12328  01770C  26E1               	addwf	fsr1l,f,c
 12329  01770E  0E00               	movlw	0
 12330  017710  22E2               	addwfc	fsr1h,f,c
 12331                           
 12332                           ;stkvar	_quotient @ sp[(-9)+0]
 12333                           
 12334                           ;incstack = 0
 12335 ;; hardware stack exceeded
 12336  017712  0E07               	movlw	7
 12337  017714  6E01               	movwf	btemp^0,c
 12338  017716  0EF7               	movlw	-9
 12339  017718                     u6881:
 12340  017718  6AE3               	clrf	plusw1,c
 12341  01771A  2AE8               	incf	wreg,f,c
 12342  01771C  0601               	decf	btemp^0,f,c
 12343  01771E  E2FC               	bc	u6881
 12344                           
 12345                           ;stkvar	_divisor @ sp[(-9)+-16]
 12346  017720  0EE7               	movlw	-25
 12347  017722  50E3               	movf	plusw1,w,c
 12348  017724  E116               	bnz	u6890
 12349  017726  0EE8               	movlw	-24
 12350  017728  50E3               	movf	plusw1,w,c
 12351  01772A  E113               	bnz	u6890
 12352  01772C  0EE9               	movlw	-23
 12353  01772E  50E3               	movf	plusw1,w,c
 12354  017730  E110               	bnz	u6890
 12355  017732  0EEA               	movlw	-22
 12356  017734  50E3               	movf	plusw1,w,c
 12357  017736  E10D               	bnz	u6890
 12358  017738  0EEB               	movlw	-21
 12359  01773A  50E3               	movf	plusw1,w,c
 12360  01773C  E10A               	bnz	u6890
 12361  01773E  0EEC               	movlw	-20
 12362  017740  50E3               	movf	plusw1,w,c
 12363  017742  E107               	bnz	u6890
 12364  017744  0EED               	movlw	-19
 12365  017746  50E3               	movf	plusw1,w,c
 12366  017748  E104               	bnz	u6890
 12367  01774A  0EEE               	movlw	-18
 12368  01774C  50E3               	movf	plusw1,w,c
 12369  01774E  B4D8               	btfsc	status,2,c
 12370  017750  D088               	goto	u6920
 12371  017752                     u6890:
 12372                           
 12373                           ;stkvar	_counter @ sp[(-9)+8]
 12374  017752  0EFF               	movlw	-1
 12375  017754  6AE3               	clrf	plusw1,c
 12376  017756  D012               	goto	L10
 12377  017758                     l8142:
 12378                           
 12379                           ;stkvar	_divisor @ sp[(-9)+-16]
 12380  017758  90D8               	bcf	status,0,c
 12381  01775A  0EE7               	movlw	-25
 12382  01775C  36E3               	rlcf	plusw1,f,c
 12383  01775E  0EE8               	movlw	-24
 12384  017760  36E3               	rlcf	plusw1,f,c
 12385  017762  0EE9               	movlw	-23
 12386  017764  36E3               	rlcf	plusw1,f,c
 12387  017766  0EEA               	movlw	-22
 12388  017768  36E3               	rlcf	plusw1,f,c
 12389  01776A  0EEB               	movlw	-21
 12390  01776C  36E3               	rlcf	plusw1,f,c
 12391  01776E  0EEC               	movlw	-20
 12392  017770  36E3               	rlcf	plusw1,f,c
 12393  017772  0EED               	movlw	-19
 12394  017774  36E3               	rlcf	plusw1,f,c
 12395  017776  0EEE               	movlw	-18
 12396  017778  36E3               	rlcf	plusw1,f,c
 12397                           
 12398                           ;stkvar	_counter @ sp[(-9)+8]
 12399  01777A  0EFF               	movlw	-1
 12400  01777C                     L10:
 12401  01777C  2AE3               	incf	plusw1,f,c
 12402                           
 12403                           ;stkvar	_divisor @ sp[(-9)+-16]
 12404  01777E  0EEE               	movlw	-18
 12405  017780  AEE3               	btfss	plusw1,7,c
 12406  017782  D7EA               	goto	l8142
 12407  017784                     u6900:
 12408                           
 12409                           ;stkvar	_quotient @ sp[(-9)+0]
 12410  017784  90D8               	bcf	status,0,c
 12411  017786  0EF7               	movlw	-9
 12412  017788  36E3               	rlcf	plusw1,f,c
 12413  01778A  0EF8               	movlw	-8
 12414  01778C  36E3               	rlcf	plusw1,f,c
 12415  01778E  0EF9               	movlw	-7
 12416  017790  36E3               	rlcf	plusw1,f,c
 12417  017792  0EFA               	movlw	-6
 12418  017794  36E3               	rlcf	plusw1,f,c
 12419  017796  0EFB               	movlw	-5
 12420  017798  36E3               	rlcf	plusw1,f,c
 12421  01779A  0EFC               	movlw	-4
 12422  01779C  36E3               	rlcf	plusw1,f,c
 12423  01779E  0EFD               	movlw	-3
 12424  0177A0  36E3               	rlcf	plusw1,f,c
 12425  0177A2  0EFE               	movlw	-2
 12426  0177A4  36E3               	rlcf	plusw1,f,c
 12427                           
 12428                           ;stkvar	_divisor @ sp[(-9)+-16]
 12429                           ;stkvar	_dividend @ sp[(-9)+-8]
 12430  0177A6  50E1               	movf	fsr1l,w,c
 12431  0177A8  0FEF               	addlw	-17
 12432  0177AA  6ED9               	movwf	fsr2l,c
 12433  0177AC  50E2               	movf	fsr1h,w,c
 12434  0177AE  6EDA               	movwf	fsr2h,c
 12435  0177B0  0EFF               	movlw	255
 12436  0177B2  22DA               	addwfc	fsr2h,f,c
 12437  0177B4  0EE7               	movlw	-25
 12438  0177B6  50E3               	movf	plusw1,w,c
 12439  0177B8  5CDE               	subwf	postinc2,w,c
 12440  0177BA  0EE8               	movlw	-24
 12441  0177BC  50E3               	movf	plusw1,w,c
 12442  0177BE  58DE               	subwfb	postinc2,w,c
 12443  0177C0  0EE9               	movlw	-23
 12444  0177C2  50E3               	movf	plusw1,w,c
 12445  0177C4  58DE               	subwfb	postinc2,w,c
 12446  0177C6  0EEA               	movlw	-22
 12447  0177C8  50E3               	movf	plusw1,w,c
 12448  0177CA  58DE               	subwfb	postinc2,w,c
 12449  0177CC  0EEB               	movlw	-21
 12450  0177CE  50E3               	movf	plusw1,w,c
 12451  0177D0  58DE               	subwfb	postinc2,w,c
 12452  0177D2  0EEC               	movlw	-20
 12453  0177D4  50E3               	movf	plusw1,w,c
 12454  0177D6  58DE               	subwfb	postinc2,w,c
 12455  0177D8  0EED               	movlw	-19
 12456  0177DA  50E3               	movf	plusw1,w,c
 12457  0177DC  58DE               	subwfb	postinc2,w,c
 12458  0177DE  0EEE               	movlw	-18
 12459  0177E0  50E3               	movf	plusw1,w,c
 12460  0177E2  58DE               	subwfb	postinc2,w,c
 12461  0177E4  A0D8               	btfss	status,0,c
 12462  0177E6  D021               	goto	l8154
 12463                           
 12464                           ;stkvar	_divisor @ sp[(-9)+-16]
 12465                           ;stkvar	_dividend @ sp[(-9)+-8]
 12466  0177E8  50E1               	movf	fsr1l,w,c
 12467  0177EA  0FEF               	addlw	-17
 12468  0177EC  6ED9               	movwf	fsr2l,c
 12469  0177EE  50E2               	movf	fsr1h,w,c
 12470  0177F0  6EDA               	movwf	fsr2h,c
 12471  0177F2  0EFF               	movlw	255
 12472  0177F4  22DA               	addwfc	fsr2h,f,c
 12473  0177F6  0EE7               	movlw	-25
 12474  0177F8  50E3               	movf	plusw1,w,c
 12475  0177FA  5EDE               	subwf	postinc2,f,c
 12476  0177FC  0EE8               	movlw	-24
 12477  0177FE  50E3               	movf	plusw1,w,c
 12478  017800  5ADE               	subwfb	postinc2,f,c
 12479  017802  0EE9               	movlw	-23
 12480  017804  50E3               	movf	plusw1,w,c
 12481  017806  5ADE               	subwfb	postinc2,f,c
 12482  017808  0EEA               	movlw	-22
 12483  01780A  50E3               	movf	plusw1,w,c
 12484  01780C  5ADE               	subwfb	postinc2,f,c
 12485  01780E  0EEB               	movlw	-21
 12486  017810  50E3               	movf	plusw1,w,c
 12487  017812  5ADE               	subwfb	postinc2,f,c
 12488  017814  0EEC               	movlw	-20
 12489  017816  50E3               	movf	plusw1,w,c
 12490  017818  5ADE               	subwfb	postinc2,f,c
 12491  01781A  0EED               	movlw	-19
 12492  01781C  50E3               	movf	plusw1,w,c
 12493  01781E  5ADE               	subwfb	postinc2,f,c
 12494  017820  0EEE               	movlw	-18
 12495  017822  50E3               	movf	plusw1,w,c
 12496  017824  5ADE               	subwfb	postinc2,f,c
 12497                           
 12498                           ;stkvar	_quotient @ sp[(-9)+0]
 12499  017826  0EF7               	movlw	-9
 12500  017828  80E3               	bsf	plusw1,0,c
 12501  01782A                     l8154:
 12502                           
 12503                           ;stkvar	_divisor @ sp[(-9)+-16]
 12504  01782A  90D8               	bcf	status,0,c
 12505  01782C  0EEE               	movlw	-18
 12506  01782E  32E3               	rrcf	plusw1,f,c
 12507  017830  0EED               	movlw	-19
 12508  017832  32E3               	rrcf	plusw1,f,c
 12509  017834  0EEC               	movlw	-20
 12510  017836  32E3               	rrcf	plusw1,f,c
 12511  017838  0EEB               	movlw	-21
 12512  01783A  32E3               	rrcf	plusw1,f,c
 12513  01783C  0EEA               	movlw	-22
 12514  01783E  32E3               	rrcf	plusw1,f,c
 12515  017840  0EE9               	movlw	-23
 12516  017842  32E3               	rrcf	plusw1,f,c
 12517  017844  0EE8               	movlw	-24
 12518  017846  32E3               	rrcf	plusw1,f,c
 12519  017848  0EE7               	movlw	-25
 12520  01784A  32E3               	rrcf	plusw1,f,c
 12521                           
 12522                           ;stkvar	_counter @ sp[(-9)+8]
 12523  01784C  0EFF               	movlw	-1
 12524  01784E  50E3               	movf	plusw1,w,c
 12525  017850  6E01               	movwf	btemp^0,c
 12526  017852  0E01               	movlw	1
 12527  017854  5E01               	subwf	btemp^0,f,c
 12528  017856  0EFF               	movlw	-1
 12529  017858  0060  F007  FFE3   	movff	btemp,plusw1
 12530  01785E  A4D8               	btfss	status,2,c
 12531  017860  D791               	goto	u6900
 12532  017862                     u6920:
 12533                           
 12534                           ;stkvar	_quotient @ sp[(-9)+0]
 12535  017862  0EF7               	movlw	247
 12536  017864  24E1               	addwf	fsr1l,w,c
 12537  017866  6ED9               	movwf	fsr2l,c
 12538  017868  0EFF               	movlw	255
 12539  01786A  20E2               	addwfc	fsr1h,w,c
 12540  01786C  6EDA               	movwf	fsr2h,c
 12541                           
 12542                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 12543  01786E  0E08               	movlw	8
 12544  017870  6E01               	movwf	btemp^0,c
 12545  017872  0EEF               	movlw	-17
 12546  017874                     us693999:
 12547  017874  006F FF7B FFE3     	movff	postinc2,plusw1
 12548  01787A  28E8               	incf	wreg,w,c
 12549  01787C  2E01               	decfsz	btemp^0,f,c
 12550  01787E  D7FA               	bra	us693999
 12551                           
 12552                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 12553  017880  0EF7               	movlw	247
 12554  017882  26E1               	addwf	fsr1l,f,c
 12555  017884  0EFF               	movlw	255
 12556  017886  22E2               	addwfc	fsr1h,f,c
 12557  017888  0012               	return		;funcret
 12558  01788A                     __end_of___lodiv:
 12559                           	opt callstack 0
 12560                           
 12561 ;; *************** function _strncmp *****************
 12562 ;; Defined at:
 12563 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  _l              2  [STACK] PTR const unsigned char 
 12566 ;;		 -> ct(3), STR_47(79), STR_45(3), STR_44(3), 
 12567 ;;		 -> STR_43(19), STR_42(19), STR_41(19), STR_40(19), 
 12568 ;;		 -> STR_39(19), STR_38(19), STR_37(24), STR_36(15), 
 12569 ;;		 -> STR_35(15), STR_34(15), STR_33(10), STR_32(10), 
 12570 ;;		 -> STR_31(19), STR_30(19), STR_27(3), STR_26(3), 
 12571 ;;		 -> STR_25(3), STR_24(17), STR_23(16), STR_22(16), 
 12572 ;;		 -> STR_21(19), STR_20(20), STR_19(19), STR_18(19), 
 12573 ;;		 -> STR_17(19), STR_16(19), STR_15(19), STR_14(19), 
 12574 ;;		 -> STR_13(19), STR_12(17), STR_11(16), STR_10(16), 
 12575 ;;		 -> STR_9(22), STR_8(17), STR_6(15), STR_5(17), 
 12576 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 12577 ;;  _r              2  [STACK] PTR const unsigned char 
 12578 ;;		 -> STR_81(3), STR_77(3), STR_72(3), STR_67(3), 
 12579 ;;		 -> STR_62(3), STR_58(3), 
 12580 ;;  n               2  [STACK] unsigned int 
 12581 ;; Auto vars:     Size  Location     Type
 12582 ;;  r               2  [STACK] PTR const unsigned char 
 12583 ;;		 -> STR_81(3), STR_77(3), STR_72(3), STR_67(3), 
 12584 ;;		 -> STR_62(3), STR_58(3), 
 12585 ;;  l               2  [STACK] PTR const unsigned char 
 12586 ;;		 -> ct(3), STR_47(79), STR_45(3), STR_44(3), 
 12587 ;;		 -> STR_43(19), STR_42(19), STR_41(19), STR_40(19), 
 12588 ;;		 -> STR_39(19), STR_38(19), STR_37(24), STR_36(15), 
 12589 ;;		 -> STR_35(15), STR_34(15), STR_33(10), STR_32(10), 
 12590 ;;		 -> STR_31(19), STR_30(19), STR_27(3), STR_26(3), 
 12591 ;;		 -> STR_25(3), STR_24(17), STR_23(16), STR_22(16), 
 12592 ;;		 -> STR_21(19), STR_20(20), STR_19(19), STR_18(19), 
 12593 ;;		 -> STR_17(19), STR_16(19), STR_15(19), STR_14(19), 
 12594 ;;		 -> STR_13(19), STR_12(17), STR_11(16), STR_10(16), 
 12595 ;;		 -> STR_9(22), STR_8(17), STR_6(15), STR_5(17), 
 12596 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 12597 ;; Return value:  Size  Location     Type
 12598 ;;                  2  [STACK] int 
 12599 ;; Registers used:
 12600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 12601 ;; Tracked objects:
 12602 ;;		On entry : 0/0
 12603 ;;		On exit  : 0/0
 12604 ;;		Unchanged: 0/0
 12605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12610 ;;Total ram usage:        0 bytes
 12611 ;; Hardware stack levels used:    1
 12612 ;; Hardware stack levels required when called:   15
 12613 ;; This function calls:
 12614 ;;		Nothing
 12615 ;; This function is called by:
 12616 ;;		_vfpfcnvrt
 12617 ;; This function uses a reentrant model
 12618 ;;
 12619                           
 12620                           	psect	text49
 12621  016B82                     __ptext49:
 12622                           	opt callstack 0
 12623  016B82                     _strncmp:
 12624                           	opt callstack 0
 12625                           
 12626                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12627  016B82  52E6               	movf	postinc1,f,c
 12628  016B84  52E6               	movf	postinc1,f,c
 12629  016B86  52E6               	movf	postinc1,f,c
 12630  016B88  52E6               	movf	postinc1,f,c
 12631                           
 12632                           ;stkvar	__l @ sp[(-4)+-2]
 12633                           
 12634                           ;incstack = 0
 12635 ;; hardware stack exceeded
 12636  016B8A  0EFA               	movlw	-6
 12637  016B8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12638  016B92  0EFB               	movlw	-5
 12639  016B94  006F FF8C  F00C    	movff	plusw1,btemp+11
 12640                           
 12641                           ;stkvar	_l @ sp[(-4)+2]
 12642  016B9A  0EFF               	movlw	-1
 12643  016B9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12644  016BA2  0EFE               	movlw	-2
 12645  016BA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12646                           
 12647                           ;stkvar	__r @ sp[(-4)+-4]
 12648  016BAA  0EF8               	movlw	-8
 12649  016BAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 12650  016BB2  0EF9               	movlw	-7
 12651  016BB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12652                           
 12653                           ;stkvar	_r @ sp[(-4)+0]
 12654  016BBA  0EFD               	movlw	-3
 12655  016BBC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12656  016BC2  0EFC               	movlw	-4
 12657  016BC4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12658                           
 12659                           ;stkvar	_n @ sp[(-4)+-6]
 12660  016BCA  0EF6               	movlw	-10
 12661  016BCC  006F FF8C  F001    	movff	plusw1,btemp
 12662  016BD2  0E01               	movlw	1
 12663  016BD4  5E01               	subwf	btemp^0,f,c
 12664  016BD6  0EF6               	movlw	-10
 12665  016BD8  0060  F007  FFE3   	movff	btemp,plusw1
 12666  016BDE  0EF7               	movlw	-9
 12667  016BE0  006F FF8C  F001    	movff	plusw1,btemp
 12668  016BE6  0E00               	movlw	0
 12669  016BE8  5A01               	subwfb	btemp^0,f,c
 12670  016BEA  0EF7               	movlw	-9
 12671  016BEC  0060  F007  FFE3   	movff	btemp,plusw1
 12672  016BF2  0EF6               	movlw	-10
 12673  016BF4  28E3               	incf	plusw1,w,c
 12674  016BF6  E13F               	bnz	l8850
 12675  016BF8  0EF7               	movlw	-9
 12676  016BFA  28E3               	incf	plusw1,w,c
 12677  016BFC  A4D8               	btfss	status,2,c
 12678  016BFE  D03B               	goto	l8850
 12679  016C00  0E00               	movlw	0
 12680  016C02  6E01               	movwf	btemp^0,c
 12681  016C04  0E00               	movlw	0
 12682  016C06  6E02               	movwf	(btemp+1)^0,c
 12683  016C08  D0C7               	goto	l3361
 12684  016C0A                     l8848:
 12685                           
 12686                           ;stkvar	_l @ sp[(-4)+2]
 12687  016C0A  0EFE               	movlw	-2
 12688  016C0C  50E3               	movf	plusw1,w,c
 12689  016C0E  0F01               	addlw	1
 12690  016C10  6E01               	movwf	btemp^0,c
 12691  016C12  0EFE               	movlw	-2
 12692  016C14  0060  F007  FFE3   	movff	btemp,plusw1
 12693  016C1A  6A01               	clrf	btemp^0,c
 12694  016C1C  0EFF               	movlw	-1
 12695  016C1E  50E3               	movf	plusw1,w,c
 12696  016C20  2001               	addwfc	btemp^0,w,c
 12697  016C22  6E01               	movwf	btemp^0,c
 12698  016C24  0EFF               	movlw	-1
 12699  016C26  0060  F007  FFE3   	movff	btemp,plusw1
 12700                           
 12701                           ;stkvar	_r @ sp[(-4)+0]
 12702  016C2C  0EFC               	movlw	-4
 12703  016C2E  50E3               	movf	plusw1,w,c
 12704  016C30  0F01               	addlw	1
 12705  016C32  6E01               	movwf	btemp^0,c
 12706  016C34  0EFC               	movlw	-4
 12707  016C36  0060  F007  FFE3   	movff	btemp,plusw1
 12708  016C3C  6A01               	clrf	btemp^0,c
 12709  016C3E  0EFD               	movlw	-3
 12710  016C40  50E3               	movf	plusw1,w,c
 12711  016C42  2001               	addwfc	btemp^0,w,c
 12712  016C44  6E01               	movwf	btemp^0,c
 12713  016C46  0EFD               	movlw	-3
 12714  016C48  0060  F007  FFE3   	movff	btemp,plusw1
 12715                           
 12716                           ;stkvar	_n @ sp[(-4)+-6]
 12717  016C4E  0EF6               	movlw	-10
 12718  016C50  006F FF8C  F001    	movff	plusw1,btemp
 12719  016C56  0E01               	movlw	1
 12720  016C58  5E01               	subwf	btemp^0,f,c
 12721  016C5A  0EF6               	movlw	-10
 12722  016C5C  0060  F007  FFE3   	movff	btemp,plusw1
 12723  016C62  0EF7               	movlw	-9
 12724  016C64  006F FF8C  F001    	movff	plusw1,btemp
 12725  016C6A  0E00               	movlw	0
 12726  016C6C  5A01               	subwfb	btemp^0,f,c
 12727  016C6E  0EF7               	movlw	-9
 12728  016C70  0060  F007  FFE3   	movff	btemp,plusw1
 12729  016C76                     l8850:
 12730                           
 12731                           ;stkvar	_l @ sp[(-4)+2]
 12732  016C76  0EFE               	movlw	-2
 12733  016C78  006F FF8F FFF6     	movff	plusw1,tblptrl
 12734  016C7E  0EFF               	movlw	-1
 12735  016C80  006F FF8F FFF7     	movff	plusw1,tblptrh
 12736  016C86  0E00               	movlw	low (__mediumconst shr (0+16))
 12737  016C88  6EF8               	movwf	tblptru,c
 12738  016C8A  0E1F               	movlw	(high __ramtop+-1)
 12739  016C8C  64F7               	cpfsgt	tblptrh,c
 12740  016C8E  D003               	bra	u8217
 12741  016C90  0008               	tblrd		*
 12742  016C92  50F5               	movf	tablat,w,c
 12743  016C94  D007               	bra	u8210
 12744  016C96                     u8217:
 12745  016C96  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12746  016C9C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12747  016CA2  50EF               	movf	indf0,w,c
 12748  016CA4                     u8210:
 12749  016CA4  0900               	iorlw	0
 12750  016CA6  B4D8               	btfsc	status,2,c
 12751  016CA8  D04A               	goto	u8250
 12752                           
 12753                           ;stkvar	_r @ sp[(-4)+0]
 12754  016CAA  50E1               	movf	fsr1l,w,c
 12755  016CAC  0FFC               	addlw	-4
 12756  016CAE  6ED9               	movwf	fsr2l,c
 12757  016CB0  50E2               	movf	fsr1h,w,c
 12758  016CB2  6EDA               	movwf	fsr2h,c
 12759  016CB4  0EFF               	movlw	255
 12760  016CB6  22DA               	addwfc	fsr2h,f,c
 12761  016CB8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12762  016CBE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12763  016CC4                     	if	0	;tblptru may be non-zero
 12764  016CC4                     	endif
 12765  016CC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12766  016CC4  0E00               	movlw	low (__mediumconst shr (0+16))
 12767  016CC6  6EF8               	movwf	tblptru,c
 12768  016CC8                     	endif
 12769  016CC8  0008               	tblrd		*
 12770  016CCA  50F5               	movf	tablat,w,c
 12771  016CCC  0900               	iorlw	0
 12772  016CCE  B4D8               	btfsc	status,2,c
 12773  016CD0  D036               	goto	u8250
 12774                           
 12775                           ;stkvar	_n @ sp[(-4)+-6]
 12776  016CD2  0EF6               	movlw	-10
 12777  016CD4  006F FF8C  F001    	movff	plusw1,btemp
 12778  016CDA  0EF7               	movlw	-9
 12779  016CDC  50E3               	movf	plusw1,w,c
 12780  016CDE  1001               	iorwf	btemp^0,w,c
 12781  016CE0  B4D8               	btfsc	status,2,c
 12782  016CE2  D02D               	goto	u8250
 12783                           
 12784                           ;stkvar	_r @ sp[(-4)+0]
 12785  016CE4  50E1               	movf	fsr1l,w,c
 12786  016CE6  0FFC               	addlw	-4
 12787  016CE8  6ED9               	movwf	fsr2l,c
 12788  016CEA  50E2               	movf	fsr1h,w,c
 12789  016CEC  6EDA               	movwf	fsr2h,c
 12790  016CEE  0EFF               	movlw	255
 12791  016CF0  22DA               	addwfc	fsr2h,f,c
 12792  016CF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 12793  016CF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 12794  016CFE                     	if	0	;tblptru may be non-zero
 12795  016CFE                     	endif
 12796  016CFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12797  016CFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12798  016D00  6EF8               	movwf	tblptru,c
 12799  016D02                     	endif
 12800  016D02  0008               	tblrd		*
 12801  016D04  006F FFD4  F00C    	movff	tablat,btemp+11
 12802                           
 12803                           ;stkvar	_l @ sp[(-4)+2]
 12804  016D0A  0EFE               	movlw	-2
 12805  016D0C  006F FF8F FFF6     	movff	plusw1,tblptrl
 12806  016D12  0EFF               	movlw	-1
 12807  016D14  006F FF8F FFF7     	movff	plusw1,tblptrh
 12808  016D1A  0E00               	movlw	low (__mediumconst shr (0+16))
 12809  016D1C  6EF8               	movwf	tblptru,c
 12810  016D1E  0E1F               	movlw	(high __ramtop+-1)
 12811  016D20  64F7               	cpfsgt	tblptrh,c
 12812  016D22  D003               	bra	u8257
 12813  016D24  0008               	tblrd		*
 12814  016D26  50F5               	movf	tablat,w,c
 12815  016D28  D007               	bra	u8255
 12816  016D2A                     u8257:
 12817  016D2A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12818  016D30  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12819  016D36  50EF               	movf	indf0,w,c
 12820  016D38                     u8255:
 12821  016D38  180C               	xorwf	(btemp+11)^0,w,c
 12822  016D3A  B4D8               	btfsc	status,2,c
 12823  016D3C  D766               	goto	l8848
 12824  016D3E                     u8250:
 12825                           
 12826                           ;stkvar	_l @ sp[(-4)+2]
 12827  016D3E  0EFE               	movlw	-2
 12828  016D40  006F FF8F FFF6     	movff	plusw1,tblptrl
 12829  016D46  0EFF               	movlw	-1
 12830  016D48  006F FF8F FFF7     	movff	plusw1,tblptrh
 12831  016D4E  0E00               	movlw	low (__mediumconst shr (0+16))
 12832  016D50  6EF8               	movwf	tblptru,c
 12833  016D52  0E1F               	movlw	(high __ramtop+-1)
 12834  016D54  64F7               	cpfsgt	tblptrh,c
 12835  016D56  D003               	bra	u8267
 12836  016D58  0008               	tblrd		*
 12837  016D5A  50F5               	movf	tablat,w,c
 12838  016D5C  D007               	bra	u8260
 12839  016D5E                     u8267:
 12840  016D5E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12841  016D64  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12842  016D6A  50EF               	movf	indf0,w,c
 12843  016D6C                     u8260:
 12844  016D6C  6E01               	movwf	btemp^0,c
 12845  016D6E  6A02               	clrf	(btemp+1)^0,c
 12846                           
 12847                           ;stkvar	_r @ sp[(-4)+0]
 12848  016D70  50E1               	movf	fsr1l,w,c
 12849  016D72  0FFC               	addlw	-4
 12850  016D74  6ED9               	movwf	fsr2l,c
 12851  016D76  50E2               	movf	fsr1h,w,c
 12852  016D78  6EDA               	movwf	fsr2h,c
 12853  016D7A  0EFF               	movlw	255
 12854  016D7C  22DA               	addwfc	fsr2h,f,c
 12855  016D7E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12856  016D84  006F FF77 FFF7     	movff	postdec2,tblptrh
 12857  016D8A                     	if	0	;tblptru may be non-zero
 12858  016D8A                     	endif
 12859  016D8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12860  016D8A  0E00               	movlw	low (__mediumconst shr (0+16))
 12861  016D8C  6EF8               	movwf	tblptru,c
 12862  016D8E                     	endif
 12863  016D8E  0008               	tblrd		*
 12864  016D90  50F5               	movf	tablat,w,c
 12865  016D92  5E01               	subwf	btemp^0,f,c
 12866  016D94  0E00               	movlw	0
 12867  016D96  5A02               	subwfb	(btemp+1)^0,f,c
 12868  016D98                     l3361:
 12869                           
 12870                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 12871  016D98  0EF6               	movlw	246
 12872  016D9A  26E1               	addwf	fsr1l,f,c
 12873  016D9C  0EFF               	movlw	255
 12874  016D9E  22E2               	addwfc	fsr1h,f,c
 12875  016DA0  0012               	return		;funcret
 12876  016DA2                     __end_of_strncmp:
 12877                           	opt callstack 0
 12878                           
 12879 ;; *************** function _stoa *****************
 12880 ;; Defined at:
 12881 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12884 ;;		 -> f(6), NULL(0), 
 12885 ;;  s               2  [STACK] PTR unsigned char 
 12886 ;;		 -> ?_printf(2), ?_sprintf(2), STR_29(9), STR_28(12), 
 12887 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 12888 ;;		 -> STR_3(6), V(188), 
 12889 ;; Auto vars:     Size  Location     Type
 12890 ;;  nuls            7  [STACK] unsigned char [7]
 12891 ;;  l               2  [STACK] int 
 12892 ;;  p               2  [STACK] int 
 12893 ;;  cp              2  [STACK] PTR unsigned char 
 12894 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_29(9), 
 12895 ;;		 -> STR_28(12), D.lcd(288), D(290), T(144), 
 12896 ;;		 -> STR_7(6), STR_3(6), V(188), 
 12897 ;;  w               2  [STACK] int 
 12898 ;;  i               2  [STACK] int 
 12899 ;; Return value:  Size  Location     Type
 12900 ;;                  2  [STACK] int 
 12901 ;; Registers used:
 12902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12903 ;; Tracked objects:
 12904 ;;		On entry : 0/0
 12905 ;;		On exit  : 0/0
 12906 ;;		Unchanged: 0/0
 12907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12912 ;;Total ram usage:        0 bytes
 12913 ;; Hardware stack levels used:    1
 12914 ;; Hardware stack levels required when called:   18
 12915 ;; This function calls:
 12916 ;;		_fputc
 12917 ;;		_strlen
 12918 ;; This function is called by:
 12919 ;;		_vfpfcnvrt
 12920 ;; This function uses a reentrant model
 12921 ;;
 12922                           
 12923                           	psect	text50
 12924  016190                     __ptext50:
 12925                           	opt callstack 0
 12926  016190                     _stoa:
 12927                           	opt callstack 0
 12928                           
 12929                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12930  016190  0E11               	movlw	17
 12931  016192  26E1               	addwf	fsr1l,f,c
 12932  016194  0E00               	movlw	0
 12933  016196  22E2               	addwfc	fsr1h,f,c
 12934                           
 12935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 12936                           
 12937                           ;incstack = 0
 12938 ;; hardware stack exceeded
 12939  016198  EE20  F0EE         	lfsr	2,stoa@F1166
 12940                           
 12941                           ;stkvar	_nuls @ sp[(-17)+0]
 12942  01619C  0E07               	movlw	7
 12943  01619E  6E01               	movwf	btemp^0,c
 12944  0161A0  0EEF               	movlw	-17
 12945  0161A2                     us1082999:
 12946  0161A2  006F FF7B FFE3     	movff	postinc2,plusw1
 12947  0161A8  28E8               	incf	wreg,w,c
 12948  0161AA  2E01               	decfsz	btemp^0,f,c
 12949  0161AC  D7FA               	bra	us1082999
 12950                           
 12951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 12952                           ;stkvar	_s @ sp[(-17)+-4]
 12953  0161AE  0EEB               	movlw	-21
 12954  0161B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 12955  0161B6  0EEC               	movlw	-20
 12956  0161B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12957                           
 12958                           ;stkvar	_cp @ sp[(-17)+11]
 12959  0161BE  0EFB               	movlw	-5
 12960  0161C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 12961  0161C6  0EFA               	movlw	-6
 12962  0161C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12963                           
 12964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 12965                           ;stkvar	_cp @ sp[(-17)+11]
 12966  0161CE  0EFA               	movlw	-6
 12967  0161D0  006F FF8C  F001    	movff	plusw1,btemp
 12968  0161D6  0EFB               	movlw	-5
 12969  0161D8  50E3               	movf	plusw1,w,c
 12970  0161DA  1001               	iorwf	btemp^0,w,c
 12971  0161DC  A4D8               	btfss	status,2,c
 12972  0161DE  D00E               	goto	l11400
 12973                           
 12974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 12975                           ;stkvar	_nuls @ sp[(-17)+0]
 12976  0161E0  0EEF               	movlw	239
 12977  0161E2  24E1               	addwf	fsr1l,w,c
 12978  0161E4  6E0B               	movwf	(btemp+10)^0,c
 12979  0161E6  0EFF               	movlw	255
 12980  0161E8  20E2               	addwfc	fsr1h,w,c
 12981  0161EA  6E0C               	movwf	(btemp+11)^0,c
 12982                           
 12983                           ;stkvar	_cp @ sp[(-17)+11]
 12984  0161EC  0EFB               	movlw	-5
 12985  0161EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 12986  0161F4  0EFA               	movlw	-6
 12987  0161F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12988  0161FC                     l11400:
 12989                           
 12990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 12991                           ;stkvar	_cp @ sp[(-17)+11]
 12992  0161FC  0EFA               	movlw	-6
 12993  0161FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12994  016204  006F FF8F FFE6     	movff	plusw1,postinc1
 12995  01620A  ECCC  F0C9         	call	_strlen	;wreg free
 12996                           
 12997                           ;stkvar	_l @ sp[(-17)+7]
 12998  01620E  0EF6               	movlw	-10
 12999  016210  0060  F007  FFE3   	movff	btemp,plusw1
 13000  016216  0EF7               	movlw	-9
 13001  016218  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13002                           
 13003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 13004                           ;stkvar	_p @ sp[(-17)+9]
 13005  01621E  0EF8               	movlw	-8
 13006  016220  0060  F08F  FFE3   	movff	_prec,plusw1
 13007  016226  0EF9               	movlw	-7
 13008  016228  0060  F093  FFE3   	movff	_prec+1,plusw1
 13009                           
 13010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 13011                           ;stkvar	_p @ sp[(-17)+9]
 13012  01622E  0EF9               	movlw	-7
 13013  016230  BEE3               	btfsc	plusw1,7,c
 13014  016232  D023               	goto	l2186
 13015                           
 13016                           ;stkvar	_l @ sp[(-17)+7]
 13017                           ;stkvar	_p @ sp[(-17)+9]
 13018  016234  50E1               	movf	fsr1l,w,c
 13019  016236  0FF8               	addlw	-8
 13020  016238  6ED9               	movwf	fsr2l,c
 13021  01623A  50E2               	movf	fsr1h,w,c
 13022  01623C  6EDA               	movwf	fsr2h,c
 13023  01623E  0EFF               	movlw	255
 13024  016240  22DA               	addwfc	fsr2h,f,c
 13025  016242  0EF6               	movlw	-10
 13026  016244  50E3               	movf	plusw1,w,c
 13027  016246  5CDE               	subwf	postinc2,w,c
 13028  016248  50DE               	movf	postinc2,w,c
 13029  01624A  0A80               	xorlw	128
 13030  01624C  6E01               	movwf	btemp^0,c
 13031  01624E  0EF7               	movlw	-9
 13032  016250  50E3               	movf	plusw1,w,c
 13033  016252  0A80               	xorlw	128
 13034  016254  5801               	subwfb	btemp^0,w,c
 13035  016256  B0D8               	btfsc	status,0,c
 13036  016258  D010               	goto	l2186
 13037                           
 13038                           ;stkvar	_p @ sp[(-17)+9]
 13039                           ;stkvar	_l @ sp[(-17)+7]
 13040  01625A  0EF8               	movlw	-8
 13041  01625C  006F FF8C  F001    	movff	plusw1,btemp
 13042  016262  0EF6               	movlw	-10
 13043  016264  0060  F007  FFE3   	movff	btemp,plusw1
 13044  01626A  0EF9               	movlw	-7
 13045  01626C  006F FF8C  F001    	movff	plusw1,btemp
 13046  016272  0EF7               	movlw	-9
 13047  016274  0060  F007  FFE3   	movff	btemp,plusw1
 13048  01627A                     l2186:
 13049                           
 13050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 13051                           ;stkvar	_l @ sp[(-17)+7]
 13052                           ;stkvar	_p @ sp[(-17)+9]
 13053  01627A  0EF6               	movlw	-10
 13054  01627C  006F FF8C  F001    	movff	plusw1,btemp
 13055  016282  0EF8               	movlw	-8
 13056  016284  0060  F007  FFE3   	movff	btemp,plusw1
 13057  01628A  0EF7               	movlw	-9
 13058  01628C  006F FF8C  F001    	movff	plusw1,btemp
 13059  016292  0EF9               	movlw	-7
 13060  016294  0060  F007  FFE3   	movff	btemp,plusw1
 13061                           
 13062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 13063                           ;stkvar	_w @ sp[(-17)+13]
 13064  01629A  0EFC               	movlw	-4
 13065  01629C  0060  F087  FFE3   	movff	_width,plusw1
 13066  0162A2  0EFD               	movlw	-3
 13067  0162A4  0060  F08B  FFE3   	movff	_width+1,plusw1
 13068                           
 13069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 13070  0162AA  A025               	btfss	_flags^0,0,c
 13071  0162AC  D01F               	goto	l11420
 13072  0162AE  D031               	goto	u10870
 13073  0162B0                     l11416:
 13074                           
 13075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 13076                           ;stkvar	_fp @ sp[(-17)+-2]
 13077  0162B0  0EED               	movlw	-19
 13078  0162B2  006F FF8F FFE6     	movff	plusw1,postinc1
 13079  0162B8  006F FF8F FFE6     	movff	plusw1,postinc1
 13080  0162BE  0E20               	movlw	32
 13081  0162C0  6EE6               	movwf	postinc1,c
 13082  0162C2  0E00               	movlw	0
 13083  0162C4  6EE6               	movwf	postinc1,c
 13084  0162C6  EC4F  F0C2         	call	_fputc	;wreg free
 13085                           
 13086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 13087                           ;stkvar	_l @ sp[(-17)+7]
 13088  0162CA  0EF6               	movlw	-10
 13089  0162CC  50E3               	movf	plusw1,w,c
 13090  0162CE  0F01               	addlw	1
 13091  0162D0  6E01               	movwf	btemp^0,c
 13092  0162D2  0EF6               	movlw	-10
 13093  0162D4  0060  F007  FFE3   	movff	btemp,plusw1
 13094  0162DA  6A01               	clrf	btemp^0,c
 13095  0162DC  0EF7               	movlw	-9
 13096  0162DE  50E3               	movf	plusw1,w,c
 13097  0162E0  2001               	addwfc	btemp^0,w,c
 13098  0162E2  6E01               	movwf	btemp^0,c
 13099  0162E4  0EF7               	movlw	-9
 13100  0162E6  0060  F007  FFE3   	movff	btemp,plusw1
 13101  0162EC                     l11420:
 13102                           
 13103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 13104                           ;stkvar	_w @ sp[(-17)+13]
 13105                           ;stkvar	_l @ sp[(-17)+7]
 13106  0162EC  50E1               	movf	fsr1l,w,c
 13107  0162EE  0FF6               	addlw	-10
 13108  0162F0  6ED9               	movwf	fsr2l,c
 13109  0162F2  50E2               	movf	fsr1h,w,c
 13110  0162F4  6EDA               	movwf	fsr2h,c
 13111  0162F6  0EFF               	movlw	255
 13112  0162F8  22DA               	addwfc	fsr2h,f,c
 13113  0162FA  0EFC               	movlw	-4
 13114  0162FC  50E3               	movf	plusw1,w,c
 13115  0162FE  5CDE               	subwf	postinc2,w,c
 13116  016300  50DE               	movf	postinc2,w,c
 13117  016302  0A80               	xorlw	128
 13118  016304  6E01               	movwf	btemp^0,c
 13119  016306  0EFD               	movlw	-3
 13120  016308  50E3               	movf	plusw1,w,c
 13121  01630A  0A80               	xorlw	128
 13122  01630C  5801               	subwfb	btemp^0,w,c
 13123  01630E  A0D8               	btfss	status,0,c
 13124  016310  D7CF               	goto	l11416
 13125  016312                     u10870:
 13126                           
 13127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 13128                           ;stkvar	_i @ sp[(-17)+15]
 13129  016312  0EFE               	movlw	-2
 13130  016314  6AE3               	clrf	plusw1,c
 13131  016316  0EFF               	movlw	-1
 13132  016318  6AE3               	clrf	plusw1,c
 13133                           
 13134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 13135  01631A  D045               	goto	l11430
 13136  01631C                     l11424:
 13137                           
 13138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 13139                           ;stkvar	_fp @ sp[(-17)+-2]
 13140  01631C  0EED               	movlw	-19
 13141  01631E  006F FF8F FFE6     	movff	plusw1,postinc1
 13142  016324  006F FF8F FFE6     	movff	plusw1,postinc1
 13143                           
 13144                           ;stkvar	_cp @ sp[(-19)+11]
 13145  01632A  0EF8               	movlw	-8
 13146  01632C  006F FF8F FFF6     	movff	plusw1,tblptrl
 13147  016332  0EF9               	movlw	-7
 13148  016334  006F FF8F FFF7     	movff	plusw1,tblptrh
 13149  01633A  0E00               	movlw	low (__mediumconst shr (0+16))
 13150  01633C  6EF8               	movwf	tblptru,c
 13151  01633E  0E1F               	movlw	(high __ramtop+-1)
 13152  016340  64F7               	cpfsgt	tblptrh,c
 13153  016342  D003               	bra	u10887
 13154  016344  0008               	tblrd		*
 13155  016346  50F5               	movf	tablat,w,c
 13156  016348  D007               	bra	u10880
 13157  01634A                     u10887:
 13158  01634A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13159  016350  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13160  016356  50EF               	movf	indf0,w,c
 13161  016358                     u10880:
 13162  016358  6EE6               	movwf	postinc1,c
 13163  01635A  0E00               	movlw	0
 13164  01635C  6EE6               	movwf	postinc1,c
 13165  01635E  EC4F  F0C2         	call	_fputc	;wreg free
 13166                           
 13167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 13168                           ;stkvar	_cp @ sp[(-17)+11]
 13169  016362  0EFA               	movlw	-6
 13170  016364  50E3               	movf	plusw1,w,c
 13171  016366  0F01               	addlw	1
 13172  016368  6E01               	movwf	btemp^0,c
 13173  01636A  0EFA               	movlw	-6
 13174  01636C  0060  F007  FFE3   	movff	btemp,plusw1
 13175  016372  6A01               	clrf	btemp^0,c
 13176  016374  0EFB               	movlw	-5
 13177  016376  50E3               	movf	plusw1,w,c
 13178  016378  2001               	addwfc	btemp^0,w,c
 13179  01637A  6E01               	movwf	btemp^0,c
 13180  01637C  0EFB               	movlw	-5
 13181  01637E  0060  F007  FFE3   	movff	btemp,plusw1
 13182                           
 13183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 13184                           ;stkvar	_i @ sp[(-17)+15]
 13185  016384  0EFE               	movlw	-2
 13186  016386  50E3               	movf	plusw1,w,c
 13187  016388  0F01               	addlw	1
 13188  01638A  6E01               	movwf	btemp^0,c
 13189  01638C  0EFE               	movlw	-2
 13190  01638E  0060  F007  FFE3   	movff	btemp,plusw1
 13191  016394  6A01               	clrf	btemp^0,c
 13192  016396  0EFF               	movlw	-1
 13193  016398  50E3               	movf	plusw1,w,c
 13194  01639A  2001               	addwfc	btemp^0,w,c
 13195  01639C  6E01               	movwf	btemp^0,c
 13196  01639E  0EFF               	movlw	-1
 13197  0163A0  0060  F007  FFE3   	movff	btemp,plusw1
 13198  0163A6                     l11430:
 13199                           
 13200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 13201                           ;stkvar	_p @ sp[(-17)+9]
 13202                           ;stkvar	_i @ sp[(-17)+15]
 13203  0163A6  50E1               	movf	fsr1l,w,c
 13204  0163A8  0FFE               	addlw	-2
 13205  0163AA  6ED9               	movwf	fsr2l,c
 13206  0163AC  50E2               	movf	fsr1h,w,c
 13207  0163AE  6EDA               	movwf	fsr2h,c
 13208  0163B0  0EFF               	movlw	255
 13209  0163B2  22DA               	addwfc	fsr2h,f,c
 13210  0163B4  0EF8               	movlw	-8
 13211  0163B6  50E3               	movf	plusw1,w,c
 13212  0163B8  5CDE               	subwf	postinc2,w,c
 13213  0163BA  50DE               	movf	postinc2,w,c
 13214  0163BC  0A80               	xorlw	128
 13215  0163BE  6E01               	movwf	btemp^0,c
 13216  0163C0  0EF9               	movlw	-7
 13217  0163C2  50E3               	movf	plusw1,w,c
 13218  0163C4  0A80               	xorlw	128
 13219  0163C6  5801               	subwfb	btemp^0,w,c
 13220  0163C8  A0D8               	btfss	status,0,c
 13221  0163CA  D7A8               	goto	l11424
 13222                           
 13223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 13224  0163CC  B025               	btfsc	_flags^0,0,c
 13225  0163CE  D01F               	goto	l11438
 13226  0163D0  D031               	goto	u10910
 13227  0163D2                     l11434:
 13228                           
 13229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 13230                           ;stkvar	_fp @ sp[(-17)+-2]
 13231  0163D2  0EED               	movlw	-19
 13232  0163D4  006F FF8F FFE6     	movff	plusw1,postinc1
 13233  0163DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13234  0163E0  0E20               	movlw	32
 13235  0163E2  6EE6               	movwf	postinc1,c
 13236  0163E4  0E00               	movlw	0
 13237  0163E6  6EE6               	movwf	postinc1,c
 13238  0163E8  EC4F  F0C2         	call	_fputc	;wreg free
 13239                           
 13240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 13241                           ;stkvar	_l @ sp[(-17)+7]
 13242  0163EC  0EF6               	movlw	-10
 13243  0163EE  50E3               	movf	plusw1,w,c
 13244  0163F0  0F01               	addlw	1
 13245  0163F2  6E01               	movwf	btemp^0,c
 13246  0163F4  0EF6               	movlw	-10
 13247  0163F6  0060  F007  FFE3   	movff	btemp,plusw1
 13248  0163FC  6A01               	clrf	btemp^0,c
 13249  0163FE  0EF7               	movlw	-9
 13250  016400  50E3               	movf	plusw1,w,c
 13251  016402  2001               	addwfc	btemp^0,w,c
 13252  016404  6E01               	movwf	btemp^0,c
 13253  016406  0EF7               	movlw	-9
 13254  016408  0060  F007  FFE3   	movff	btemp,plusw1
 13255  01640E                     l11438:
 13256                           
 13257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 13258                           ;stkvar	_w @ sp[(-17)+13]
 13259                           ;stkvar	_l @ sp[(-17)+7]
 13260  01640E  50E1               	movf	fsr1l,w,c
 13261  016410  0FF6               	addlw	-10
 13262  016412  6ED9               	movwf	fsr2l,c
 13263  016414  50E2               	movf	fsr1h,w,c
 13264  016416  6EDA               	movwf	fsr2h,c
 13265  016418  0EFF               	movlw	255
 13266  01641A  22DA               	addwfc	fsr2h,f,c
 13267  01641C  0EFC               	movlw	-4
 13268  01641E  50E3               	movf	plusw1,w,c
 13269  016420  5CDE               	subwf	postinc2,w,c
 13270  016422  50DE               	movf	postinc2,w,c
 13271  016424  0A80               	xorlw	128
 13272  016426  6E01               	movwf	btemp^0,c
 13273  016428  0EFD               	movlw	-3
 13274  01642A  50E3               	movf	plusw1,w,c
 13275  01642C  0A80               	xorlw	128
 13276  01642E  5801               	subwfb	btemp^0,w,c
 13277  016430  A0D8               	btfss	status,0,c
 13278  016432  D7CF               	goto	l11434
 13279  016434                     u10910:
 13280                           
 13281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 13282                           ;stkvar	_l @ sp[(-17)+7]
 13283  016434  0EF6               	movlw	-10
 13284  016436  006F FF8C  F001    	movff	plusw1,btemp
 13285  01643C  0EF7               	movlw	-9
 13286  01643E  006F FF8C  F002    	movff	plusw1,btemp+1
 13287                           
 13288                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13289  016444  0EEB               	movlw	235
 13290  016446  26E1               	addwf	fsr1l,f,c
 13291  016448  0EFF               	movlw	255
 13292  01644A  22E2               	addwfc	fsr1h,f,c
 13293  01644C  0012               	return		;funcret
 13294  01644E                     __end_of_stoa:
 13295                           	opt callstack 0
 13296                           
 13297 ;; *************** function _efgtoa *****************
 13298 ;; Defined at:
 13299 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13302 ;;		 -> f(6), NULL(0), 
 13303 ;;  f               4  [STACK] PTR struct _IO_FILE
 13304 ;;  c               1  [STACK] unsigned char 
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;  u               4  [STACK] unsigned char 
 13307 ;;  g               4  [STACK] unsigned char 
 13308 ;;  l               4  [STACK] unsigned char 
 13309 ;;  h               4  [STACK] unsigned char 
 13310 ;;  ou              4  [STACK] unsigned char 
 13311 ;;  n               2  [STACK] int 
 13312 ;;  e               2  [STACK] int 
 13313 ;;  i               2  [STACK] int 
 13314 ;;  w               2  [STACK] int 
 13315 ;;  p               2  [STACK] int 
 13316 ;;  sign            2  [STACK] int 
 13317 ;;  d               2  [STACK] int 
 13318 ;;  ne              2  [STACK] int 
 13319 ;;  m               2  [STACK] int 
 13320 ;;  pp              2  [STACK] int 
 13321 ;;  t               2  [STACK] int 
 13322 ;;  mode            1  [STACK] unsigned char 
 13323 ;;  nmode           1  [STACK] unsigned char 
 13324 ;; Return value:  Size  Location     Type
 13325 ;;                  2  [STACK] int 
 13326 ;; Registers used:
 13327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 13328 ;; Tracked objects:
 13329 ;;		On entry : 0/0
 13330 ;;		On exit  : 0/0
 13331 ;;		Unchanged: 0/0
 13332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13337 ;;Total ram usage:        0 bytes
 13338 ;; Hardware stack levels used:    1
 13339 ;; Hardware stack levels required when called:   20
 13340 ;; This function calls:
 13341 ;;		___awdiv
 13342 ;;		___awmod
 13343 ;;		___fladd
 13344 ;;		___fldiv
 13345 ;;		___fleq
 13346 ;;		___flge
 13347 ;;		___flmul
 13348 ;;		___flneg
 13349 ;;		___flsub
 13350 ;;		___fltol
 13351 ;;		___fpclassifyf
 13352 ;;		_floorf
 13353 ;;		_isupper
 13354 ;;		_pad
 13355 ;;		_strcpy
 13356 ;;		_tolower
 13357 ;; This function is called by:
 13358 ;;		_vfpfcnvrt
 13359 ;; This function uses a reentrant model
 13360 ;;
 13361                           
 13362                           	psect	text51
 13363  010000                     __ptext51:
 13364                           	opt callstack 0
 13365  010000                     _efgtoa:
 13366                           	opt callstack 0
 13367                           
 13368                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13369  010000  0E38               	movlw	56
 13370  010002  26E1               	addwf	fsr1l,f,c
 13371  010004  0E00               	movlw	0
 13372  010006  22E2               	addwfc	fsr1h,f,c
 13373                           
 13374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 13375                           ;stkvar	_sign @ sp[(-56)+42]
 13376                           
 13377                           ;incstack = 0
 13378 ;; hardware stack exceeded
 13379  010008  0EF2               	movlw	-14
 13380  01000A  6AE3               	clrf	plusw1,c
 13381  01000C  0EF3               	movlw	-13
 13382  01000E  6AE3               	clrf	plusw1,c
 13383                           
 13384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 13385                           ;stkvar	_f @ sp[(-56)+-6]
 13386  010010  0EC2               	movlw	-62
 13387  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 13388  010018  0EC3               	movlw	-61
 13389  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 13390  010020  0EC4               	movlw	-60
 13391  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 13392  010028  0EC5               	movlw	-59
 13393  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13394                           
 13395                           ;stkvar	_g @ sp[(-56)+16]
 13396  010030  0ED8               	movlw	-40
 13397  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 13398  010038  0ED9               	movlw	-39
 13399  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13400  010040  0EDA               	movlw	-38
 13401  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13402  010048  0EDB               	movlw	-37
 13403  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13404                           
 13405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 13406                           ;stkvar	_g @ sp[(-56)+16]
 13407  010050  0EDB               	movlw	-37
 13408  010052  AEE3               	btfss	plusw1,7,c
 13409  010054  D02B               	goto	l11098
 13410                           
 13411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 13412  010056  0E01               	movlw	1
 13413  010058  6E0B               	movwf	(btemp+10)^0,c
 13414  01005A  0E00               	movlw	0
 13415  01005C  6E0C               	movwf	(btemp+11)^0,c
 13416                           
 13417                           ;stkvar	_sign @ sp[(-56)+42]
 13418  01005E  0EF2               	movlw	-14
 13419  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13420  010066  0EF3               	movlw	-13
 13421  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 13422                           
 13423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 13424                           ;stkvar	_g @ sp[(-56)+16]
 13425  01006E  0ED8               	movlw	-40
 13426  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 13427  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 13428  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 13429  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 13430  010088  EC78  F0CF         	call	___flneg	;wreg free
 13431                           
 13432                           ;stkvar	_g @ sp[(-56)+16]
 13433  01008C  0ED8               	movlw	-40
 13434  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 13435  010094  0ED9               	movlw	-39
 13436  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13437  01009C  0EDA               	movlw	-38
 13438  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13439  0100A4  0EDB               	movlw	-37
 13440  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 13441  0100AC                     l11098:
 13442                           
 13443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 13444                           ;stkvar	_n @ sp[(-56)+32]
 13445  0100AC  0EE8               	movlw	-24
 13446  0100AE  6AE3               	clrf	plusw1,c
 13447  0100B0  0EE9               	movlw	-23
 13448  0100B2  6AE3               	clrf	plusw1,c
 13449                           
 13450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 13451                           ;stkvar	_w @ sp[(-56)+38]
 13452  0100B4  0EEE               	movlw	-18
 13453  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 13454  0100BC  0EEF               	movlw	-17
 13455  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 13456                           
 13457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 13458                           ;stkvar	_sign @ sp[(-56)+42]
 13459  0100C4  0EF2               	movlw	-14
 13460  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 13461  0100CC  0EF3               	movlw	-13
 13462  0100CE  50E3               	movf	plusw1,w,c
 13463  0100D0  1001               	iorwf	btemp^0,w,c
 13464  0100D2  A4D8               	btfss	status,2,c
 13465  0100D4  D002               	goto	u10320
 13466  0100D6  A425               	btfss	_flags^0,2,c
 13467  0100D8  D036               	goto	l11118
 13468  0100DA                     u10320:
 13469                           
 13470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 13471                           ;stkvar	_sign @ sp[(-56)+42]
 13472  0100DA  0EF2               	movlw	-14
 13473  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 13474  0100E2  0EF3               	movlw	-13
 13475  0100E4  50E3               	movf	plusw1,w,c
 13476  0100E6  1001               	iorwf	btemp^0,w,c
 13477  0100E8  A4D8               	btfss	status,2,c
 13478  0100EA  D002               	goto	l11110
 13479  0100EC  0E2B               	movlw	43
 13480  0100EE  D001               	goto	L11
 13481  0100F0                     l11110:
 13482  0100F0  0E2D               	movlw	45
 13483  0100F2                     L11:
 13484  0100F2  6E0B               	movwf	(btemp+10)^0,c
 13485  0100F4  0E00               	movlw	0
 13486  0100F6  6E0C               	movwf	(btemp+11)^0,c
 13487                           
 13488                           ;stkvar	_efgtoa$5228 @ sp[(-56)+10]
 13489  0100F8  0ED2               	movlw	-46
 13490  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13491  010100  0ED3               	movlw	-45
 13492  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 13493                           
 13494                           ;stkvar	_efgtoa$5228 @ sp[(-56)+10]
 13495  010108  0ED2               	movlw	-46
 13496  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 13497                           
 13498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 13499                           ;stkvar	_n @ sp[(-56)+32]
 13500  010110  0EE8               	movlw	-24
 13501  010112  50E3               	movf	plusw1,w,c
 13502  010114  0F01               	addlw	1
 13503  010116  6E01               	movwf	btemp^0,c
 13504  010118  0EE8               	movlw	-24
 13505  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 13506  010120  6A01               	clrf	btemp^0,c
 13507  010122  0EE9               	movlw	-23
 13508  010124  50E3               	movf	plusw1,w,c
 13509  010126  2001               	addwfc	btemp^0,w,c
 13510  010128  6E01               	movwf	btemp^0,c
 13511  01012A  0EE9               	movlw	-23
 13512  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 13513                           
 13514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 13515                           ;stkvar	_w @ sp[(-56)+38]
 13516  010132  50E1               	movf	fsr1l,w,c
 13517  010134  0FEE               	addlw	-18
 13518  010136  6ED9               	movwf	fsr2l,c
 13519  010138  50E2               	movf	fsr1h,w,c
 13520  01013A  6EDA               	movwf	fsr2h,c
 13521  01013C  0EFF               	movlw	255
 13522  01013E  22DA               	addwfc	fsr2h,f,c
 13523  010140  06DE               	decf	postinc2,f,c
 13524  010142  0E00               	movlw	0
 13525  010144  5ADD               	subwfb	postdec2,f,c
 13526  010146                     l11118:
 13527                           
 13528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 13529                           ;stkvar	_g @ sp[(-56)+16]
 13530  010146  0ED8               	movlw	-40
 13531  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 13532  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 13533  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 13534  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 13535  010160  ECBA  F0BA         	call	___fpclassifyf	;wreg free
 13536  010164  0401               	decf	btemp^0,w,c
 13537  010166  1002               	iorwf	(btemp+1)^0,w,c
 13538  010168  A4D8               	btfss	status,2,c
 13539  01016A  D076               	goto	l11136
 13540  01016C  0EBF               	movlw	191
 13541  01016E  6E0B               	movwf	(btemp+10)^0,c
 13542  010170  0EFF               	movlw	255
 13543  010172  6E0C               	movwf	(btemp+11)^0,c
 13544                           
 13545                           ;stkvar	_c @ sp[(-56)+-7]
 13546  010174  0EC1               	movlw	-63
 13547  010176  50E3               	movf	plusw1,w,c
 13548  010178  6E09               	movwf	(btemp+8)^0,c
 13549  01017A  6A0A               	clrf	(btemp+9)^0,c
 13550  01017C  500B               	movf	(btemp+10)^0,w,c
 13551  01017E  2609               	addwf	(btemp+8)^0,f,c
 13552  010180  500C               	movf	(btemp+11)^0,w,c
 13553  010182  220A               	addwfc	(btemp+9)^0,f,c
 13554  010184  500A               	movf	(btemp+9)^0,w,c
 13555  010186  E106               	bnz	u10350
 13556  010188  0E1A               	movlw	26
 13557  01018A  5C09               	subwf	(btemp+8)^0,w,c
 13558  01018C  B0D8               	btfsc	status,0,c
 13559  01018E  D002               	goto	u10350
 13560  010190  0E01               	movlw	1
 13561  010192  D001               	goto	u10360
 13562  010194                     u10350:
 13563  010194  0E00               	movlw	0
 13564  010196                     u10360:
 13565  010196  6E0B               	movwf	(btemp+10)^0,c
 13566  010198  6A0C               	clrf	(btemp+11)^0,c
 13567                           
 13568                           ;stkvar	_efgtoa$5229 @ sp[(-56)+8]
 13569  01019A  0ED0               	movlw	-48
 13570  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13571  0101A2  0ED1               	movlw	-47
 13572  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13573                           
 13574                           ;stkvar	_efgtoa$5229 @ sp[(-56)+8]
 13575  0101AA  0ED0               	movlw	-48
 13576  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 13577  0101B2  0ED1               	movlw	-47
 13578  0101B4  50E3               	movf	plusw1,w,c
 13579  0101B6  1001               	iorwf	btemp^0,w,c
 13580  0101B8  B4D8               	btfsc	status,2,c
 13581  0101BA  D017               	goto	l11128
 13582                           
 13583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 13584  0101BC  0ED7               	movlw	low STR_48
 13585  0101BE  6EE6               	movwf	postinc1,c
 13586  0101C0  0EFF               	movlw	high STR_48
 13587  0101C2  6EE6               	movwf	postinc1,c
 13588                           
 13589                           ;stkvar	_n @ sp[(-58)+32]
 13590  0101C4  0E94               	movlw	low _dbuf
 13591  0101C6  6E0B               	movwf	(btemp+10)^0,c
 13592  0101C8  0E03               	movlw	high _dbuf
 13593  0101CA  6E0C               	movwf	(btemp+11)^0,c
 13594  0101CC  0EE6               	movlw	-26
 13595  0101CE  50E3               	movf	plusw1,w,c
 13596  0101D0  260B               	addwf	(btemp+10)^0,f,c
 13597  0101D2  0EE7               	movlw	-25
 13598  0101D4  50E3               	movf	plusw1,w,c
 13599  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 13600  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13601  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 13602  0101E4  ECF1  F0C6         	call	_strcpy	;wreg free
 13603                           
 13604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 13605  0101E8  D016               	goto	l11130
 13606  0101EA                     l11128:
 13607                           
 13608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 13609  0101EA  0EDF               	movlw	low STR_49
 13610  0101EC  6EE6               	movwf	postinc1,c
 13611  0101EE  0EFF               	movlw	high STR_49
 13612  0101F0  6EE6               	movwf	postinc1,c
 13613                           
 13614                           ;stkvar	_n @ sp[(-58)+32]
 13615  0101F2  0E94               	movlw	low _dbuf
 13616  0101F4  6E0B               	movwf	(btemp+10)^0,c
 13617  0101F6  0E03               	movlw	high _dbuf
 13618  0101F8  6E0C               	movwf	(btemp+11)^0,c
 13619  0101FA  0EE6               	movlw	-26
 13620  0101FC  50E3               	movf	plusw1,w,c
 13621  0101FE  260B               	addwf	(btemp+10)^0,f,c
 13622  010200  0EE7               	movlw	-25
 13623  010202  50E3               	movf	plusw1,w,c
 13624  010204  220C               	addwfc	(btemp+11)^0,f,c
 13625  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13626  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 13627  010212  ECF1  F0C6         	call	_strcpy	;wreg free
 13628  010216                     l11130:
 13629                           
 13630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 13631                           ;stkvar	_w @ sp[(-56)+38]
 13632  010216  50E1               	movf	fsr1l,w,c
 13633  010218  0FEE               	addlw	-18
 13634  01021A  6ED9               	movwf	fsr2l,c
 13635  01021C  50E2               	movf	fsr1h,w,c
 13636  01021E  6EDA               	movwf	fsr2h,c
 13637  010220  0EFF               	movlw	255
 13638  010222  22DA               	addwfc	fsr2h,f,c
 13639  010224  0EFD               	movlw	253
 13640  010226  26DE               	addwf	postinc2,f,c
 13641  010228  0EFF               	movlw	255
 13642  01022A  22DD               	addwfc	postdec2,f,c
 13643  01022C                     l11132:
 13644                           
 13645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 13646                           ;stkvar	_w @ sp[(-56)+38]
 13647  01022C  0EEE               	movlw	-18
 13648  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 13649  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 13650  01023A  0E94               	movlw	low _dbuf
 13651  01023C  6EE6               	movwf	postinc1,c
 13652  01023E  0E03               	movlw	high _dbuf
 13653  010240  6EE6               	movwf	postinc1,c
 13654                           
 13655                           ;stkvar	_fp @ sp[(-60)+-2]
 13656  010242  0EC2               	movlw	-62
 13657  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 13658  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 13659  010250  EC6D  F0C3         	call	_pad	;wreg free
 13660  010254  EF1D  F089         	goto	l2104
 13661  010258                     l11136:
 13662                           
 13663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 13664                           ;stkvar	_g @ sp[(-56)+16]
 13665  010258  0ED8               	movlw	-40
 13666  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 13667  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 13668  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 13669  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 13670  010272  ECBA  F0BA         	call	___fpclassifyf	;wreg free
 13671  010276  5001               	movf	btemp^0,w,c
 13672  010278  1002               	iorwf	(btemp+1)^0,w,c
 13673  01027A  A4D8               	btfss	status,2,c
 13674  01027C  D056               	goto	l11154
 13675  01027E  0EBF               	movlw	191
 13676  010280  6E0B               	movwf	(btemp+10)^0,c
 13677  010282  0EFF               	movlw	255
 13678  010284  6E0C               	movwf	(btemp+11)^0,c
 13679                           
 13680                           ;stkvar	_c @ sp[(-56)+-7]
 13681  010286  0EC1               	movlw	-63
 13682  010288  50E3               	movf	plusw1,w,c
 13683  01028A  6E09               	movwf	(btemp+8)^0,c
 13684  01028C  6A0A               	clrf	(btemp+9)^0,c
 13685  01028E  500B               	movf	(btemp+10)^0,w,c
 13686  010290  2609               	addwf	(btemp+8)^0,f,c
 13687  010292  500C               	movf	(btemp+11)^0,w,c
 13688  010294  220A               	addwfc	(btemp+9)^0,f,c
 13689  010296  500A               	movf	(btemp+9)^0,w,c
 13690  010298  E106               	bnz	u10390
 13691  01029A  0E1A               	movlw	26
 13692  01029C  5C09               	subwf	(btemp+8)^0,w,c
 13693  01029E  B0D8               	btfsc	status,0,c
 13694  0102A0  D002               	goto	u10390
 13695  0102A2  0E01               	movlw	1
 13696  0102A4  D001               	goto	u10400
 13697  0102A6                     u10390:
 13698  0102A6  0E00               	movlw	0
 13699  0102A8                     u10400:
 13700  0102A8  6E0B               	movwf	(btemp+10)^0,c
 13701  0102AA  6A0C               	clrf	(btemp+11)^0,c
 13702                           
 13703                           ;stkvar	_efgtoa$5233 @ sp[(-56)+6]
 13704  0102AC  0ECE               	movlw	-50
 13705  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13706  0102B4  0ECF               	movlw	-49
 13707  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13708                           
 13709                           ;stkvar	_efgtoa$5233 @ sp[(-56)+6]
 13710  0102BC  0ECE               	movlw	-50
 13711  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 13712  0102C4  0ECF               	movlw	-49
 13713  0102C6  50E3               	movf	plusw1,w,c
 13714  0102C8  1001               	iorwf	btemp^0,w,c
 13715  0102CA  B4D8               	btfsc	status,2,c
 13716  0102CC  D017               	goto	l11146
 13717                           
 13718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 13719  0102CE  0EDB               	movlw	low STR_52
 13720  0102D0  6EE6               	movwf	postinc1,c
 13721  0102D2  0EFF               	movlw	high STR_52
 13722  0102D4  6EE6               	movwf	postinc1,c
 13723                           
 13724                           ;stkvar	_n @ sp[(-58)+32]
 13725  0102D6  0E94               	movlw	low _dbuf
 13726  0102D8  6E0B               	movwf	(btemp+10)^0,c
 13727  0102DA  0E03               	movlw	high _dbuf
 13728  0102DC  6E0C               	movwf	(btemp+11)^0,c
 13729  0102DE  0EE6               	movlw	-26
 13730  0102E0  50E3               	movf	plusw1,w,c
 13731  0102E2  260B               	addwf	(btemp+10)^0,f,c
 13732  0102E4  0EE7               	movlw	-25
 13733  0102E6  50E3               	movf	plusw1,w,c
 13734  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 13735  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13736  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 13737  0102F6  ECF1  F0C6         	call	_strcpy	;wreg free
 13738                           
 13739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 13740  0102FA  D78D               	goto	l11130
 13741  0102FC                     l11146:
 13742                           
 13743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 13744  0102FC  0EE3               	movlw	low STR_53
 13745  0102FE  6EE6               	movwf	postinc1,c
 13746  010300  0EFF               	movlw	high STR_53
 13747  010302  6EE6               	movwf	postinc1,c
 13748                           
 13749                           ;stkvar	_n @ sp[(-58)+32]
 13750  010304  0E94               	movlw	low _dbuf
 13751  010306  6E0B               	movwf	(btemp+10)^0,c
 13752  010308  0E03               	movlw	high _dbuf
 13753  01030A  6E0C               	movwf	(btemp+11)^0,c
 13754  01030C  0EE6               	movlw	-26
 13755  01030E  50E3               	movf	plusw1,w,c
 13756  010310  260B               	addwf	(btemp+10)^0,f,c
 13757  010312  0EE7               	movlw	-25
 13758  010314  50E3               	movf	plusw1,w,c
 13759  010316  220C               	addwfc	(btemp+11)^0,f,c
 13760  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13761  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13762  010324  ECF1  F0C6         	call	_strcpy	;wreg free
 13763  010328  D776               	goto	l11130
 13764  01032A                     l11154:
 13765                           
 13766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 13767  01032A  0E00               	movlw	0
 13768  01032C  6E09               	movwf	(btemp+8)^0,c
 13769  01032E  0E00               	movlw	0
 13770  010330  6E0A               	movwf	(btemp+9)^0,c
 13771  010332  0E80               	movlw	128
 13772  010334  6E0B               	movwf	(btemp+10)^0,c
 13773  010336  0E3F               	movlw	63
 13774  010338  6E0C               	movwf	(btemp+11)^0,c
 13775                           
 13776                           ;stkvar	_u @ sp[(-56)+12]
 13777  01033A  0ED4               	movlw	-44
 13778  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 13779  010342  0ED5               	movlw	-43
 13780  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13781  01034A  0ED6               	movlw	-42
 13782  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13783  010352  0ED7               	movlw	-41
 13784  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 13785                           
 13786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 13787                           ;stkvar	_e @ sp[(-56)+34]
 13788  01035A  0EEA               	movlw	-22
 13789  01035C  6AE3               	clrf	plusw1,c
 13790  01035E  0EEB               	movlw	-21
 13791  010360  6AE3               	clrf	plusw1,c
 13792                           
 13793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 13794  010362  0E00               	movlw	0
 13795  010364  6EE6               	movwf	postinc1,c
 13796  010366  0E00               	movlw	0
 13797  010368  6EE6               	movwf	postinc1,c
 13798  01036A  0E00               	movlw	0
 13799  01036C  6EE6               	movwf	postinc1,c
 13800  01036E  0E00               	movlw	0
 13801  010370  6EE6               	movwf	postinc1,c
 13802                           
 13803                           ;stkvar	_g @ sp[(-60)+16]
 13804  010372  0ED4               	movlw	-44
 13805  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 13806  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 13807  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 13808  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 13809  01038C  EC5B  F0C7         	call	___fleq	;wreg free
 13810  010390  A001               	btfss	btemp& (0+255),0,c
 13811  010392  D039               	goto	l11166
 13812  010394  D0BC               	goto	u10440
 13813  010396                     l11162:
 13814                           
 13815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 13816  010396  0E00               	movlw	0
 13817  010398  6EE6               	movwf	postinc1,c
 13818  01039A  0E00               	movlw	0
 13819  01039C  6EE6               	movwf	postinc1,c
 13820  01039E  0E20               	movlw	32
 13821  0103A0  6EE6               	movwf	postinc1,c
 13822  0103A2  0E41               	movlw	65
 13823  0103A4  6EE6               	movwf	postinc1,c
 13824                           
 13825                           ;stkvar	_u @ sp[(-60)+12]
 13826  0103A6  0ED0               	movlw	-48
 13827  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13828  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13829  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 13830  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 13831  0103C0  ECC5  F095         	call	___flmul	;wreg free
 13832                           
 13833                           ;stkvar	_u @ sp[(-56)+12]
 13834  0103C4  0ED4               	movlw	-44
 13835  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 13836  0103CC  0ED5               	movlw	-43
 13837  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13838  0103D4  0ED6               	movlw	-42
 13839  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13840  0103DC  0ED7               	movlw	-41
 13841  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 13842                           
 13843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 13844                           ;stkvar	_e @ sp[(-56)+34]
 13845  0103E4  0EEA               	movlw	-22
 13846  0103E6  50E3               	movf	plusw1,w,c
 13847  0103E8  0F01               	addlw	1
 13848  0103EA  6E01               	movwf	btemp^0,c
 13849  0103EC  0EEA               	movlw	-22
 13850  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 13851  0103F4  6A01               	clrf	btemp^0,c
 13852  0103F6  0EEB               	movlw	-21
 13853  0103F8  50E3               	movf	plusw1,w,c
 13854  0103FA  2001               	addwfc	btemp^0,w,c
 13855  0103FC  6E01               	movwf	btemp^0,c
 13856  0103FE  0EEB               	movlw	-21
 13857  010400  0060  F007  FFE3   	movff	btemp,plusw1
 13858  010406                     l11166:
 13859                           
 13860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 13861  010406  0E00               	movlw	0
 13862  010408  6EE6               	movwf	postinc1,c
 13863  01040A  0E00               	movlw	0
 13864  01040C  6EE6               	movwf	postinc1,c
 13865  01040E  0E20               	movlw	32
 13866  010410  6EE6               	movwf	postinc1,c
 13867  010412  0E41               	movlw	65
 13868  010414  6EE6               	movwf	postinc1,c
 13869                           
 13870                           ;stkvar	_u @ sp[(-60)+12]
 13871  010416  0ED0               	movlw	-48
 13872  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 13873  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 13874  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 13875  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 13876  010430  ECC5  F095         	call	___flmul	;wreg free
 13877  010434  0060  F007  FFE6   	movff	btemp,postinc1
 13878  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13879  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13880  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 13881                           
 13882                           ;stkvar	_g @ sp[(-60)+16]
 13883  01044C  0ED4               	movlw	-44
 13884  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 13885  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 13886  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 13887  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 13888  010466  EC70  F0BE         	call	___flge	;wreg free
 13889  01046A  A001               	btfss	btemp& (0+255),0,c
 13890  01046C  D032               	goto	l11172
 13891  01046E  D793               	goto	l11162
 13892  010470                     l11168:
 13893                           
 13894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 13895  010470  0E00               	movlw	0
 13896  010472  6EE6               	movwf	postinc1,c
 13897  010474  0E00               	movlw	0
 13898  010476  6EE6               	movwf	postinc1,c
 13899  010478  0E20               	movlw	32
 13900  01047A  6EE6               	movwf	postinc1,c
 13901  01047C  0E41               	movlw	65
 13902  01047E  6EE6               	movwf	postinc1,c
 13903                           
 13904                           ;stkvar	_u @ sp[(-60)+12]
 13905  010480  0ED0               	movlw	-48
 13906  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 13907  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 13908  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 13909  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 13910  01049A  ECFB  F0A0         	call	___fldiv	;wreg free
 13911                           
 13912                           ;stkvar	_u @ sp[(-56)+12]
 13913  01049E  0ED4               	movlw	-44
 13914  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 13915  0104A6  0ED5               	movlw	-43
 13916  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13917  0104AE  0ED6               	movlw	-42
 13918  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13919  0104B6  0ED7               	movlw	-41
 13920  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 13921                           
 13922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 13923                           ;stkvar	_e @ sp[(-56)+34]
 13924  0104BE  50E1               	movf	fsr1l,w,c
 13925  0104C0  0FEA               	addlw	-22
 13926  0104C2  6ED9               	movwf	fsr2l,c
 13927  0104C4  50E2               	movf	fsr1h,w,c
 13928  0104C6  6EDA               	movwf	fsr2h,c
 13929  0104C8  0EFF               	movlw	255
 13930  0104CA  22DA               	addwfc	fsr2h,f,c
 13931  0104CC  06DE               	decf	postinc2,f,c
 13932  0104CE  0E00               	movlw	0
 13933  0104D0  5ADD               	subwfb	postdec2,f,c
 13934  0104D2                     l11172:
 13935                           
 13936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 13937                           ;stkvar	_u @ sp[(-56)+12]
 13938  0104D2  0ED4               	movlw	-44
 13939  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 13940  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13941  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 13942  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 13943                           
 13944                           ;stkvar	_g @ sp[(-60)+16]
 13945  0104EC  0ED4               	movlw	-44
 13946  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 13947  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 13948  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 13949  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 13950  010506  EC70  F0BE         	call	___flge	;wreg free
 13951  01050A  A001               	btfss	btemp& (0+255),0,c
 13952  01050C  D7B1               	goto	l11168
 13953  01050E                     u10440:
 13954                           
 13955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 13956                           ;stkvar	_c @ sp[(-56)+-7]
 13957  01050E  0EC1               	movlw	-63
 13958  010510  50E3               	movf	plusw1,w,c
 13959  010512  6EE6               	movwf	postinc1,c
 13960  010514  0E00               	movlw	0
 13961  010516  6EE6               	movwf	postinc1,c
 13962  010518  EC12  F0CC         	call	_tolower	;wreg free
 13963                           
 13964                           ;stkvar	_mode @ sp[(-56)+54]
 13965  01051C  0EFE               	movlw	-2
 13966  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 13967                           
 13968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 13969                           ;stkvar	_mode @ sp[(-56)+54]
 13970                           ;stkvar	_nmode @ sp[(-56)+55]
 13971  010524  0EFE               	movlw	-2
 13972  010526  006F FF8C  F001    	movff	plusw1,btemp
 13973  01052C  0EFF               	movlw	-1
 13974  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 13975                           
 13976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 13977                           ;stkvar	_mode @ sp[(-56)+54]
 13978  010534  0EFE               	movlw	-2
 13979  010536  006F FF8C  F001    	movff	plusw1,btemp
 13980  01053C  0E67               	movlw	103
 13981  01053E  1801               	xorwf	btemp^0,w,c
 13982  010540  A4D8               	btfss	status,2,c
 13983  010542  D025               	goto	l11190
 13984                           
 13985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 13986  010544  5023               	movf	_prec^0,w,c
 13987  010546  1024               	iorwf	(_prec+1)^0,w,c
 13988  010548  A4D8               	btfss	status,2,c
 13989  01054A  D004               	goto	l11184
 13990                           
 13991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 13992  01054C  0E00               	movlw	0
 13993  01054E  6E24               	movwf	(_prec+1)^0,c
 13994  010550  0E01               	movlw	1
 13995  010552  6E23               	movwf	_prec^0,c
 13996  010554                     l11184:
 13997                           
 13998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 13999  010554  BE24               	btfsc	(_prec+1)^0,7,c
 14000  010556  D005               	goto	u10470
 14001  010558  5024               	movf	(_prec+1)^0,w,c
 14002  01055A  E110               	bnz	l11188
 14003  01055C  0423               	decf	_prec^0,w,c
 14004  01055E  B0D8               	btfsc	status,0,c
 14005  010560  D00D               	goto	l11188
 14006  010562                     u10470:
 14007  010562  0E06               	movlw	6
 14008  010564  6E0B               	movwf	(btemp+10)^0,c
 14009  010566  0E00               	movlw	0
 14010  010568  6E0C               	movwf	(btemp+11)^0,c
 14011                           
 14012                           ;stkvar	_p @ sp[(-56)+40]
 14013  01056A  0EF0               	movlw	-16
 14014  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14015  010572  0EF1               	movlw	-15
 14016  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 14017  01057A  D00C               	goto	l11196
 14018  01057C                     l11188:
 14019                           
 14020                           ;stkvar	_p @ sp[(-56)+40]
 14021  01057C  0EF0               	movlw	-16
 14022  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 14023  010584  0EF1               	movlw	-15
 14024  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 14025  01058C  D003               	goto	l11196
 14026  01058E                     l11190:
 14027                           
 14028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 14029  01058E  AE24               	btfss	(_prec+1)^0,7,c
 14030  010590  D7F5               	goto	l11188
 14031  010592  D7E7               	goto	u10470
 14032  010594                     l11196:
 14033                           
 14034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 14035                           ;stkvar	_mode @ sp[(-56)+54]
 14036  010594  0EFE               	movlw	-2
 14037  010596  006F FF8C  F001    	movff	plusw1,btemp
 14038  01059C  0E67               	movlw	103
 14039  01059E  1801               	xorwf	btemp^0,w,c
 14040  0105A0  A4D8               	btfss	status,2,c
 14041  0105A2  D02F               	goto	l11206
 14042                           
 14043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 14044                           ;stkvar	_e @ sp[(-56)+34]
 14045  0105A4  0EEB               	movlw	-21
 14046  0105A6  AEE3               	btfss	plusw1,7,c
 14047  0105A8  D00E               	goto	u10500
 14048  0105AA  0EEA               	movlw	-22
 14049  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 14050  0105B2  0EFC               	movlw	252
 14051  0105B4  5E01               	subwf	btemp^0,f,c
 14052  0105B6  0EEB               	movlw	-21
 14053  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 14054  0105BE  0EFF               	movlw	255
 14055  0105C0  5A01               	subwfb	btemp^0,f,c
 14056  0105C2  A0D8               	btfss	status,0,c
 14057  0105C4  D018               	goto	l11204
 14058  0105C6                     u10500:
 14059                           
 14060                           ;stkvar	_e @ sp[(-56)+34]
 14061                           ;stkvar	_p @ sp[(-56)+40]
 14062  0105C6  0EF0               	movlw	-16
 14063  0105C8  50E3               	movf	plusw1,w,c
 14064  0105CA  0FFF               	addlw	255
 14065  0105CC  6E0B               	movwf	(btemp+10)^0,c
 14066  0105CE  0EF1               	movlw	-15
 14067  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14068  0105D6  0EFF               	movlw	255
 14069  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 14070  0105DA  0EEA               	movlw	-22
 14071  0105DC  50E3               	movf	plusw1,w,c
 14072  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 14073  0105E0  500C               	movf	(btemp+11)^0,w,c
 14074  0105E2  0A80               	xorlw	128
 14075  0105E4  6E01               	movwf	btemp^0,c
 14076  0105E6  0EEB               	movlw	-21
 14077  0105E8  50E3               	movf	plusw1,w,c
 14078  0105EA  0A80               	xorlw	128
 14079  0105EC  5801               	subwfb	btemp^0,w,c
 14080  0105EE  A0D8               	btfss	status,0,c
 14081  0105F0  D002               	goto	l11204
 14082                           
 14083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 14084  0105F2  0E66               	movlw	102
 14085  0105F4  D001               	goto	L12
 14086  0105F6                     l11204:
 14087                           
 14088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 14089  0105F6  0E65               	movlw	101
 14090  0105F8                     L12:
 14091  0105F8  6E0C               	movwf	(btemp+11)^0,c
 14092                           
 14093                           ;stkvar	_nmode @ sp[(-56)+55]
 14094  0105FA  0EFF               	movlw	-1
 14095  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14096  010602                     l11206:
 14097                           
 14098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 14099                           ;stkvar	_p @ sp[(-56)+40]
 14100                           ;stkvar	_m @ sp[(-56)+48]
 14101  010602  0EF0               	movlw	-16
 14102  010604  006F FF8C  F001    	movff	plusw1,btemp
 14103  01060A  0EF8               	movlw	-8
 14104  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 14105  010612  0EF1               	movlw	-15
 14106  010614  006F FF8C  F001    	movff	plusw1,btemp
 14107  01061A  0EF9               	movlw	-7
 14108  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 14109                           
 14110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 14111                           ;stkvar	_mode @ sp[(-56)+54]
 14112  010622  0EFE               	movlw	-2
 14113  010624  006F FF8C  F001    	movff	plusw1,btemp
 14114  01062A  0E67               	movlw	103
 14115  01062C  1801               	xorwf	btemp^0,w,c
 14116  01062E  A4D8               	btfss	status,2,c
 14117  010630  D00B               	goto	u10540
 14118                           
 14119                           ;stkvar	_nmode @ sp[(-56)+55]
 14120  010632  0EFF               	movlw	-1
 14121  010634  006F FF8C  F001    	movff	plusw1,btemp
 14122  01063A  0E66               	movlw	102
 14123  01063C  1801               	xorwf	btemp^0,w,c
 14124  01063E  A4D8               	btfss	status,2,c
 14125  010640  D014               	goto	l2133
 14126                           
 14127                           ;stkvar	_e @ sp[(-56)+34]
 14128  010642  0EEB               	movlw	-21
 14129  010644  AEE3               	btfss	plusw1,7,c
 14130  010646  D011               	goto	l2133
 14131  010648                     u10540:
 14132                           
 14133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 14134                           ;stkvar	_m @ sp[(-56)+48]
 14135  010648  0EF8               	movlw	-8
 14136  01064A  50E3               	movf	plusw1,w,c
 14137  01064C  0F01               	addlw	1
 14138  01064E  6E01               	movwf	btemp^0,c
 14139  010650  0EF8               	movlw	-8
 14140  010652  0060  F007  FFE3   	movff	btemp,plusw1
 14141  010658  6A01               	clrf	btemp^0,c
 14142  01065A  0EF9               	movlw	-7
 14143  01065C  50E3               	movf	plusw1,w,c
 14144  01065E  2001               	addwfc	btemp^0,w,c
 14145  010660  6E01               	movwf	btemp^0,c
 14146  010662  0EF9               	movlw	-7
 14147  010664  0060  F007  FFE3   	movff	btemp,plusw1
 14148  01066A                     l2133:
 14149                           
 14150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 14151                           ;stkvar	_nmode @ sp[(-56)+55]
 14152  01066A  0EFF               	movlw	-1
 14153  01066C  006F FF8C  F001    	movff	plusw1,btemp
 14154  010672  0E66               	movlw	102
 14155  010674  1801               	xorwf	btemp^0,w,c
 14156  010676  A4D8               	btfss	status,2,c
 14157  010678  D03B               	goto	l11226
 14158                           
 14159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 14160                           ;stkvar	_e @ sp[(-56)+34]
 14161  01067A  0EEB               	movlw	-21
 14162  01067C  AEE3               	btfss	plusw1,7,c
 14163  01067E  D01C               	goto	l11222
 14164                           
 14165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 14166  010680  0E00               	movlw	0
 14167  010682  6E09               	movwf	(btemp+8)^0,c
 14168  010684  0E00               	movlw	0
 14169  010686  6E0A               	movwf	(btemp+9)^0,c
 14170  010688  0E80               	movlw	128
 14171  01068A  6E0B               	movwf	(btemp+10)^0,c
 14172  01068C  0E3F               	movlw	63
 14173  01068E  6E0C               	movwf	(btemp+11)^0,c
 14174                           
 14175                           ;stkvar	_u @ sp[(-56)+12]
 14176  010690  0ED4               	movlw	-44
 14177  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 14178  010698  0ED5               	movlw	-43
 14179  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14180  0106A0  0ED6               	movlw	-42
 14181  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14182  0106A8  0ED7               	movlw	-41
 14183  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14184                           
 14185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 14186                           ;stkvar	_e @ sp[(-56)+34]
 14187  0106B0  0EEA               	movlw	-22
 14188  0106B2  6AE3               	clrf	plusw1,c
 14189  0106B4  0EEB               	movlw	-21
 14190  0106B6  6AE3               	clrf	plusw1,c
 14191  0106B8                     l11222:
 14192                           
 14193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 14194                           ;stkvar	_mode @ sp[(-56)+54]
 14195  0106B8  0EFE               	movlw	-2
 14196  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 14197  0106C0  0E67               	movlw	103
 14198  0106C2  1801               	xorwf	btemp^0,w,c
 14199  0106C4  B4D8               	btfsc	status,2,c
 14200  0106C6  D014               	goto	l11226
 14201                           
 14202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 14203                           ;stkvar	_e @ sp[(-56)+34]
 14204                           ;stkvar	_m @ sp[(-56)+48]
 14205  0106C8  0EF8               	movlw	-8
 14206  0106CA  50E3               	movf	plusw1,w,c
 14207  0106CC  6E01               	movwf	btemp^0,c
 14208  0106CE  0EEA               	movlw	-22
 14209  0106D0  50E3               	movf	plusw1,w,c
 14210  0106D2  2601               	addwf	btemp^0,f,c
 14211  0106D4  0EF8               	movlw	-8
 14212  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 14213  0106DC  0EF9               	movlw	-7
 14214  0106DE  50E3               	movf	plusw1,w,c
 14215  0106E0  6E01               	movwf	btemp^0,c
 14216  0106E2  0EEB               	movlw	-21
 14217  0106E4  50E3               	movf	plusw1,w,c
 14218  0106E6  2201               	addwfc	btemp^0,f,c
 14219  0106E8  0EF9               	movlw	-7
 14220  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 14221  0106F0                     l11226:
 14222                           
 14223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 14224                           ;stkvar	_i @ sp[(-56)+36]
 14225  0106F0  0EEC               	movlw	-20
 14226  0106F2  6AE3               	clrf	plusw1,c
 14227  0106F4  0EED               	movlw	-19
 14228  0106F6  6AE3               	clrf	plusw1,c
 14229                           
 14230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 14231                           ;stkvar	_g @ sp[(-56)+16]
 14232  0106F8  0ED8               	movlw	-40
 14233  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 14234  010700  0ED9               	movlw	-39
 14235  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 14236  010708  0EDA               	movlw	-38
 14237  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14238  010710  0EDB               	movlw	-37
 14239  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 14240                           
 14241                           ;stkvar	_h @ sp[(-56)+24]
 14242  010718  0EE0               	movlw	-32
 14243  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14244  010720  0EE1               	movlw	-31
 14245  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14246  010728  0EE2               	movlw	-30
 14247  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14248  010730  0EE3               	movlw	-29
 14249  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 14250                           
 14251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 14252                           ;stkvar	_u @ sp[(-56)+12]
 14253  010738  0ED4               	movlw	-44
 14254  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 14255  010740  0ED5               	movlw	-43
 14256  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 14257  010748  0ED6               	movlw	-42
 14258  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14259  010750  0ED7               	movlw	-41
 14260  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 14261                           
 14262                           ;stkvar	_ou @ sp[(-56)+28]
 14263  010758  0EE4               	movlw	-28
 14264  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14265  010760  0EE5               	movlw	-27
 14266  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14267  010768  0EE6               	movlw	-26
 14268  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14269  010770  0EE7               	movlw	-25
 14270  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 14271                           
 14272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 14273  010778  D0D6               	goto	l11242
 14274  01077A                     l11232:
 14275                           
 14276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 14277                           ;stkvar	_u @ sp[(-56)+12]
 14278  01077A  0ED4               	movlw	-44
 14279  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 14280  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 14281  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 14282  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 14283                           
 14284                           ;stkvar	_h @ sp[(-60)+24]
 14285  010794  0EDC               	movlw	-36
 14286  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 14287  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 14288  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 14289  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14290  0107AE  ECFB  F0A0         	call	___fldiv	;wreg free
 14291  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 14292  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14293  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14294  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 14295  0107CA  ECFC  F0AB         	call	_floorf	;wreg free
 14296                           
 14297                           ;stkvar	_l @ sp[(-56)+20]
 14298  0107CE  0EDC               	movlw	-36
 14299  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 14300  0107D6  0EDD               	movlw	-35
 14301  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14302  0107DE  0EDE               	movlw	-34
 14303  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14304  0107E6  0EDF               	movlw	-33
 14305  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 14306                           
 14307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 14308                           ;stkvar	_l @ sp[(-56)+20]
 14309  0107EE  0EDC               	movlw	-36
 14310  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 14311  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 14312  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 14313  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 14314  010808  ECFF  F0BC         	call	___fltol	;wreg free
 14315  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 14316  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 14317                           
 14318                           ;stkvar	_d @ sp[(-56)+44]
 14319  010818  0EF4               	movlw	-12
 14320  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14321  010820  0EF5               	movlw	-11
 14322  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 14323                           
 14324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 14325                           ;stkvar	_u @ sp[(-56)+12]
 14326  010828  0ED4               	movlw	-44
 14327  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 14328  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 14329  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 14330  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 14331                           
 14332                           ;stkvar	_l @ sp[(-60)+20]
 14333  010842  0ED8               	movlw	-40
 14334  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 14335  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 14336  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 14337  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 14338  01085C  ECC5  F095         	call	___flmul	;wreg free
 14339  010860  0060  F007  FFE6   	movff	btemp,postinc1
 14340  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14341  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14342  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 14343                           
 14344                           ;stkvar	_h @ sp[(-60)+24]
 14345  010878  0EDC               	movlw	-36
 14346  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 14347  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 14348  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 14349  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 14350  010892  ECBF  F0CF         	call	___flsub	;wreg free
 14351                           
 14352                           ;stkvar	_h @ sp[(-56)+24]
 14353  010896  0EE0               	movlw	-32
 14354  010898  0060  F007  FFE3   	movff	btemp,plusw1
 14355  01089E  0EE1               	movlw	-31
 14356  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14357  0108A6  0EE2               	movlw	-30
 14358  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14359  0108AE  0EE3               	movlw	-29
 14360  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 14361                           
 14362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 14363  0108B6  0E00               	movlw	0
 14364  0108B8  6EE6               	movwf	postinc1,c
 14365  0108BA  0E00               	movlw	0
 14366  0108BC  6EE6               	movwf	postinc1,c
 14367  0108BE  0E20               	movlw	32
 14368  0108C0  6EE6               	movwf	postinc1,c
 14369  0108C2  0E41               	movlw	65
 14370  0108C4  6EE6               	movwf	postinc1,c
 14371                           
 14372                           ;stkvar	_u @ sp[(-60)+12]
 14373  0108C6  0ED0               	movlw	-48
 14374  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14375  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 14376  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14377  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 14378  0108E0  ECFB  F0A0         	call	___fldiv	;wreg free
 14379                           
 14380                           ;stkvar	_u @ sp[(-56)+12]
 14381  0108E4  0ED4               	movlw	-44
 14382  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 14383  0108EC  0ED5               	movlw	-43
 14384  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14385  0108F4  0ED6               	movlw	-42
 14386  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14387  0108FC  0ED7               	movlw	-41
 14388  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 14389                           
 14390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 14391                           ;stkvar	_i @ sp[(-56)+36]
 14392  010904  0EEC               	movlw	-20
 14393  010906  50E3               	movf	plusw1,w,c
 14394  010908  0F01               	addlw	1
 14395  01090A  6E01               	movwf	btemp^0,c
 14396  01090C  0EEC               	movlw	-20
 14397  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 14398  010914  6A01               	clrf	btemp^0,c
 14399  010916  0EED               	movlw	-19
 14400  010918  50E3               	movf	plusw1,w,c
 14401  01091A  2001               	addwfc	btemp^0,w,c
 14402  01091C  6E01               	movwf	btemp^0,c
 14403  01091E  0EED               	movlw	-19
 14404  010920  0060  F007  FFE3   	movff	btemp,plusw1
 14405  010926                     l11242:
 14406                           
 14407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 14408                           ;stkvar	_m @ sp[(-56)+48]
 14409                           ;stkvar	_i @ sp[(-56)+36]
 14410  010926  50E1               	movf	fsr1l,w,c
 14411  010928  0FEC               	addlw	-20
 14412  01092A  6ED9               	movwf	fsr2l,c
 14413  01092C  50E2               	movf	fsr1h,w,c
 14414  01092E  6EDA               	movwf	fsr2h,c
 14415  010930  0EFF               	movlw	255
 14416  010932  22DA               	addwfc	fsr2h,f,c
 14417  010934  0EF8               	movlw	-8
 14418  010936  50E3               	movf	plusw1,w,c
 14419  010938  5CDE               	subwf	postinc2,w,c
 14420  01093A  50DE               	movf	postinc2,w,c
 14421  01093C  0A80               	xorlw	128
 14422  01093E  6E01               	movwf	btemp^0,c
 14423  010940  0EF9               	movlw	-7
 14424  010942  50E3               	movf	plusw1,w,c
 14425  010944  0A80               	xorlw	128
 14426  010946  5801               	subwfb	btemp^0,w,c
 14427  010948  A0D8               	btfss	status,0,c
 14428  01094A  D717               	goto	l11232
 14429                           
 14430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 14431  01094C  0E00               	movlw	0
 14432  01094E  6EE6               	movwf	postinc1,c
 14433  010950  0E00               	movlw	0
 14434  010952  6EE6               	movwf	postinc1,c
 14435  010954  0EA0               	movlw	160
 14436  010956  6EE6               	movwf	postinc1,c
 14437  010958  0E40               	movlw	64
 14438  01095A  6EE6               	movwf	postinc1,c
 14439                           
 14440                           ;stkvar	_u @ sp[(-60)+12]
 14441  01095C  0ED0               	movlw	-48
 14442  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 14443  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 14444  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 14445  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 14446  010976  ECC5  F095         	call	___flmul	;wreg free
 14447                           
 14448                           ;stkvar	_l @ sp[(-56)+20]
 14449  01097A  0EDC               	movlw	-36
 14450  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 14451  010982  0EDD               	movlw	-35
 14452  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14453  01098A  0EDE               	movlw	-34
 14454  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14455  010992  0EDF               	movlw	-33
 14456  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 14457                           
 14458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 14459                           ;stkvar	_l @ sp[(-56)+20]
 14460  01099A  0EDC               	movlw	-36
 14461  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 14462  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 14463  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14464  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14465                           
 14466                           ;stkvar	_h @ sp[(-60)+24]
 14467  0109B4  0EDC               	movlw	-36
 14468  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 14469  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 14470  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 14471  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14472  0109CE  EC70  F0BE         	call	___flge	;wreg free
 14473  0109D2  A001               	btfss	btemp& (0+255),0,c
 14474  0109D4  D021               	goto	u10610
 14475                           
 14476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 14477                           ;stkvar	_l @ sp[(-56)+20]
 14478                           
 14479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 14480                           
 14481                           ;stkvar	_l @ sp[(-56)+20]
 14482                           
 14483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 14484  0109D6  0EDC               	movlw	-36
 14485  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 14486  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 14487  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 14488  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 14489                           
 14490                           ;stkvar	_h @ sp[(-60)+24]
 14491  0109F0  0EDC               	movlw	-36
 14492  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 14493  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 14494  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 14495  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 14496  010A0A  EC5B  F0C7         	call	___fleq	;wreg free
 14497  010A0E  A001               	btfss	btemp& (0+255),0,c
 14498  010A10  D01B               	goto	l11256
 14499                           
 14500                           ;stkvar	_d @ sp[(-56)+44]
 14501  010A12  0EF4               	movlw	-12
 14502  010A14  B0E3               	btfsc	plusw1,0,c
 14503  010A16  D018               	goto	l11256
 14504  010A18                     u10610:
 14505                           
 14506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 14507  010A18  0E00               	movlw	0
 14508  010A1A  6E09               	movwf	(btemp+8)^0,c
 14509  010A1C  0E00               	movlw	0
 14510  010A1E  6E0A               	movwf	(btemp+9)^0,c
 14511  010A20  0E00               	movlw	0
 14512  010A22  6E0B               	movwf	(btemp+10)^0,c
 14513  010A24  0E00               	movlw	0
 14514  010A26  6E0C               	movwf	(btemp+11)^0,c
 14515                           
 14516                           ;stkvar	_l @ sp[(-56)+20]
 14517  010A28  0EDC               	movlw	-36
 14518  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14519  010A30  0EDD               	movlw	-35
 14520  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14521  010A38  0EDE               	movlw	-34
 14522  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14523  010A40  0EDF               	movlw	-33
 14524  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 14525  010A48                     l11256:
 14526                           
 14527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 14528                           ;stkvar	_l @ sp[(-56)+20]
 14529  010A48  0EDC               	movlw	-36
 14530  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 14531  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 14532  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 14533  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 14534                           
 14535                           ;stkvar	_g @ sp[(-60)+16]
 14536  010A62  0ED4               	movlw	-44
 14537  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 14538  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 14539  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 14540  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 14541  010A7C  ECDA  F099         	call	___fladd	;wreg free
 14542                           
 14543                           ;stkvar	_h @ sp[(-56)+24]
 14544  010A80  0EE0               	movlw	-32
 14545  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 14546  010A88  0EE1               	movlw	-31
 14547  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14548  010A90  0EE2               	movlw	-30
 14549  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14550  010A98  0EE3               	movlw	-29
 14551  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 14552                           
 14553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 14554                           ;stkvar	_ou @ sp[(-56)+28]
 14555  010AA0  0EE4               	movlw	-28
 14556  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 14557  010AA8  0EE5               	movlw	-27
 14558  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 14559  010AB0  0EE6               	movlw	-26
 14560  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 14561  010AB8  0EE7               	movlw	-25
 14562  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 14563                           
 14564                           ;stkvar	_u @ sp[(-56)+12]
 14565  010AC0  0ED4               	movlw	-44
 14566  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 14567  010AC8  0ED5               	movlw	-43
 14568  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14569  010AD0  0ED6               	movlw	-42
 14570  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14571  010AD8  0ED7               	movlw	-41
 14572  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14573                           
 14574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 14575                           ;stkvar	_nmode @ sp[(-56)+55]
 14576  010AE0  0EFF               	movlw	-1
 14577  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 14578  010AE8  0E65               	movlw	101
 14579  010AEA  1801               	xorwf	btemp^0,w,c
 14580  010AEC  B4D8               	btfsc	status,2,c
 14581  010AEE  D011               	goto	l11264
 14582                           
 14583                           ;stkvar	_e @ sp[(-56)+34]
 14584                           ;stkvar	_ne @ sp[(-56)+46]
 14585  010AF0  0EEA               	movlw	-22
 14586  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 14587  010AF8  0EF6               	movlw	-10
 14588  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 14589  010B00  0EEB               	movlw	-21
 14590  010B02  006F FF8C  F001    	movff	plusw1,btemp
 14591  010B08  0EF7               	movlw	-9
 14592  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 14593  010B10  D004               	goto	l2148
 14594  010B12                     l11264:
 14595                           
 14596                           ;stkvar	_ne @ sp[(-56)+46]
 14597  010B12  0EF6               	movlw	-10
 14598  010B14  6AE3               	clrf	plusw1,c
 14599  010B16  0EF7               	movlw	-9
 14600  010B18  6AE3               	clrf	plusw1,c
 14601  010B1A                     l2148:
 14602                           
 14603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 14604                           ;stkvar	_pp @ sp[(-56)+50]
 14605  010B1A  0EFA               	movlw	-6
 14606  010B1C  6AE3               	clrf	plusw1,c
 14607  010B1E  0EFB               	movlw	-5
 14608  010B20  6AE3               	clrf	plusw1,c
 14609                           
 14610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 14611                           ;stkvar	_t @ sp[(-56)+52]
 14612  010B22  0EFC               	movlw	-4
 14613  010B24  6AE3               	clrf	plusw1,c
 14614  010B26  0EFD               	movlw	-3
 14615  010B28  6AE3               	clrf	plusw1,c
 14616                           
 14617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 14618                           ;stkvar	_i @ sp[(-56)+36]
 14619  010B2A  0EEC               	movlw	-20
 14620  010B2C  6AE3               	clrf	plusw1,c
 14621  010B2E  0EED               	movlw	-19
 14622  010B30  6AE3               	clrf	plusw1,c
 14623                           
 14624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 14625  010B32  D1B7               	goto	l11316
 14626  010B34                     l11266:
 14627                           
 14628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 14629                           ;stkvar	_u @ sp[(-56)+12]
 14630  010B34  0ED4               	movlw	-44
 14631  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 14632  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 14633  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 14634  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 14635                           
 14636                           ;stkvar	_h @ sp[(-60)+24]
 14637  010B4E  0EDC               	movlw	-36
 14638  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 14639  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 14640  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 14641  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 14642  010B68  ECFB  F0A0         	call	___fldiv	;wreg free
 14643  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 14644  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14645  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14646  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 14647  010B84  ECFC  F0AB         	call	_floorf	;wreg free
 14648                           
 14649                           ;stkvar	_l @ sp[(-56)+20]
 14650  010B88  0EDC               	movlw	-36
 14651  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 14652  010B90  0EDD               	movlw	-35
 14653  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14654  010B98  0EDE               	movlw	-34
 14655  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14656  010BA0  0EDF               	movlw	-33
 14657  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 14658                           
 14659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 14660                           ;stkvar	_l @ sp[(-56)+20]
 14661  010BA8  0EDC               	movlw	-36
 14662  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 14663  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 14664  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 14665  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 14666  010BC2  ECFF  F0BC         	call	___fltol	;wreg free
 14667  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 14668  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 14669                           
 14670                           ;stkvar	_d @ sp[(-56)+44]
 14671  010BD2  0EF4               	movlw	-12
 14672  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14673  010BDA  0EF5               	movlw	-11
 14674  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14675                           
 14676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 14677  010BE2  B825               	btfsc	_flags^0,4,c
 14678  010BE4  D026               	goto	l11280
 14679                           
 14680                           ;stkvar	_d @ sp[(-56)+44]
 14681  010BE6  0EF4               	movlw	-12
 14682  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 14683  010BEE  0EF5               	movlw	-11
 14684  010BF0  50E3               	movf	plusw1,w,c
 14685  010BF2  1001               	iorwf	btemp^0,w,c
 14686  010BF4  A4D8               	btfss	status,2,c
 14687  010BF6  D01D               	goto	l11280
 14688                           
 14689                           ;stkvar	_mode @ sp[(-56)+54]
 14690  010BF8  0EFE               	movlw	-2
 14691  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 14692  010C00  0E67               	movlw	103
 14693  010C02  1801               	xorwf	btemp^0,w,c
 14694  010C04  A4D8               	btfss	status,2,c
 14695  010C06  D015               	goto	l11280
 14696                           
 14697                           ;stkvar	_ne @ sp[(-56)+46]
 14698  010C08  0EF7               	movlw	-9
 14699  010C0A  AEE3               	btfss	plusw1,7,c
 14700  010C0C  D012               	goto	l11280
 14701                           
 14702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 14703                           ;stkvar	_t @ sp[(-56)+52]
 14704  010C0E  0EFC               	movlw	-4
 14705  010C10  50E3               	movf	plusw1,w,c
 14706  010C12  0F01               	addlw	1
 14707  010C14  6E01               	movwf	btemp^0,c
 14708  010C16  0EFC               	movlw	-4
 14709  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 14710  010C1E  6A01               	clrf	btemp^0,c
 14711  010C20  0EFD               	movlw	-3
 14712  010C22  50E3               	movf	plusw1,w,c
 14713  010C24  2001               	addwfc	btemp^0,w,c
 14714  010C26  6E01               	movwf	btemp^0,c
 14715  010C28  0EFD               	movlw	-3
 14716  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 14717                           
 14718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 14719  010C30  D0AF               	goto	l11308
 14720  010C32                     l11280:
 14721                           
 14722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 14723                           ;stkvar	_pp @ sp[(-56)+50]
 14724  010C32  0EFA               	movlw	-6
 14725  010C34  006F FF8C  F001    	movff	plusw1,btemp
 14726  010C3A  0EFB               	movlw	-5
 14727  010C3C  50E3               	movf	plusw1,w,c
 14728  010C3E  1001               	iorwf	btemp^0,w,c
 14729  010C40  A4D8               	btfss	status,2,c
 14730  010C42  D070               	goto	l11300
 14731                           
 14732                           ;stkvar	_ne @ sp[(-56)+46]
 14733  010C44  0EF7               	movlw	-9
 14734  010C46  AEE3               	btfss	plusw1,7,c
 14735  010C48  D06D               	goto	l11300
 14736                           
 14737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 14738                           ;stkvar	_n @ sp[(-56)+32]
 14739  010C4A  0EE8               	movlw	-24
 14740  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14741  010C52  0EE9               	movlw	-23
 14742  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 14743  010C5A  0E94               	movlw	low _dbuf
 14744  010C5C  240B               	addwf	(btemp+10)^0,w,c
 14745  010C5E  6ED9               	movwf	fsr2l,c
 14746  010C60  0E03               	movlw	high _dbuf
 14747  010C62  200C               	addwfc	(btemp+11)^0,w,c
 14748  010C64  6EDA               	movwf	fsr2h,c
 14749  010C66  0E2E               	movlw	46
 14750  010C68  6EDF               	movwf	indf2,c
 14751                           
 14752                           ;stkvar	_n @ sp[(-56)+32]
 14753  010C6A  0EE8               	movlw	-24
 14754  010C6C  50E3               	movf	plusw1,w,c
 14755  010C6E  0F01               	addlw	1
 14756  010C70  6E01               	movwf	btemp^0,c
 14757  010C72  0EE8               	movlw	-24
 14758  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 14759  010C7A  6A01               	clrf	btemp^0,c
 14760  010C7C  0EE9               	movlw	-23
 14761  010C7E  50E3               	movf	plusw1,w,c
 14762  010C80  2001               	addwfc	btemp^0,w,c
 14763  010C82  6E01               	movwf	btemp^0,c
 14764  010C84  0EE9               	movlw	-23
 14765  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 14766                           
 14767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 14768                           ;stkvar	_w @ sp[(-56)+38]
 14769  010C8C  50E1               	movf	fsr1l,w,c
 14770  010C8E  0FEE               	addlw	-18
 14771  010C90  6ED9               	movwf	fsr2l,c
 14772  010C92  50E2               	movf	fsr1h,w,c
 14773  010C94  6EDA               	movwf	fsr2h,c
 14774  010C96  0EFF               	movlw	255
 14775  010C98  22DA               	addwfc	fsr2h,f,c
 14776  010C9A  06DE               	decf	postinc2,f,c
 14777  010C9C  0E00               	movlw	0
 14778  010C9E  5ADD               	subwfb	postdec2,f,c
 14779                           
 14780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 14781  010CA0  0E01               	movlw	1
 14782  010CA2  6E0B               	movwf	(btemp+10)^0,c
 14783  010CA4  0E00               	movlw	0
 14784  010CA6  6E0C               	movwf	(btemp+11)^0,c
 14785                           
 14786                           ;stkvar	_pp @ sp[(-56)+50]
 14787  010CA8  0EFA               	movlw	-6
 14788  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14789  010CB0  0EFB               	movlw	-5
 14790  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 14791  010CB8  D035               	goto	l11300
 14792  010CBA                     l11292:
 14793                           
 14794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 14795                           ;stkvar	_n @ sp[(-56)+32]
 14796  010CBA  0EE8               	movlw	-24
 14797  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14798  010CC2  0EE9               	movlw	-23
 14799  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14800  010CCA  0E94               	movlw	low _dbuf
 14801  010CCC  240B               	addwf	(btemp+10)^0,w,c
 14802  010CCE  6ED9               	movwf	fsr2l,c
 14803  010CD0  0E03               	movlw	high _dbuf
 14804  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 14805  010CD4  6EDA               	movwf	fsr2h,c
 14806  010CD6  0E30               	movlw	48
 14807  010CD8  6EDF               	movwf	indf2,c
 14808                           
 14809                           ;stkvar	_n @ sp[(-56)+32]
 14810  010CDA  0EE8               	movlw	-24
 14811  010CDC  50E3               	movf	plusw1,w,c
 14812  010CDE  0F01               	addlw	1
 14813  010CE0  6E01               	movwf	btemp^0,c
 14814  010CE2  0EE8               	movlw	-24
 14815  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 14816  010CEA  6A01               	clrf	btemp^0,c
 14817  010CEC  0EE9               	movlw	-23
 14818  010CEE  50E3               	movf	plusw1,w,c
 14819  010CF0  2001               	addwfc	btemp^0,w,c
 14820  010CF2  6E01               	movwf	btemp^0,c
 14821  010CF4  0EE9               	movlw	-23
 14822  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 14823                           
 14824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 14825                           ;stkvar	_w @ sp[(-56)+38]
 14826  010CFC  50E1               	movf	fsr1l,w,c
 14827  010CFE  0FEE               	addlw	-18
 14828  010D00  6ED9               	movwf	fsr2l,c
 14829  010D02  50E2               	movf	fsr1h,w,c
 14830  010D04  6EDA               	movwf	fsr2h,c
 14831  010D06  0EFF               	movlw	255
 14832  010D08  22DA               	addwfc	fsr2h,f,c
 14833  010D0A  06DE               	decf	postinc2,f,c
 14834  010D0C  0E00               	movlw	0
 14835  010D0E  5ADD               	subwfb	postdec2,f,c
 14836                           
 14837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 14838                           ;stkvar	_t @ sp[(-56)+52]
 14839  010D10  50E1               	movf	fsr1l,w,c
 14840  010D12  0FFC               	addlw	-4
 14841  010D14  6ED9               	movwf	fsr2l,c
 14842  010D16  50E2               	movf	fsr1h,w,c
 14843  010D18  6EDA               	movwf	fsr2h,c
 14844  010D1A  0EFF               	movlw	255
 14845  010D1C  22DA               	addwfc	fsr2h,f,c
 14846  010D1E  06DE               	decf	postinc2,f,c
 14847  010D20  0E00               	movlw	0
 14848  010D22  5ADD               	subwfb	postdec2,f,c
 14849  010D24                     l11300:
 14850                           
 14851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 14852                           ;stkvar	_t @ sp[(-56)+52]
 14853  010D24  0EFC               	movlw	-4
 14854  010D26  006F FF8C  F001    	movff	plusw1,btemp
 14855  010D2C  0EFD               	movlw	-3
 14856  010D2E  50E3               	movf	plusw1,w,c
 14857  010D30  1001               	iorwf	btemp^0,w,c
 14858  010D32  A4D8               	btfss	status,2,c
 14859  010D34  D7C2               	goto	l11292
 14860                           
 14861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 14862                           ;stkvar	_n @ sp[(-56)+32]
 14863  010D36  0EE8               	movlw	-24
 14864  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 14865  010D3E  0EE9               	movlw	-23
 14866  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 14867  010D46  0E94               	movlw	low _dbuf
 14868  010D48  240B               	addwf	(btemp+10)^0,w,c
 14869  010D4A  6ED9               	movwf	fsr2l,c
 14870  010D4C  0E03               	movlw	high _dbuf
 14871  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 14872  010D50  6EDA               	movwf	fsr2h,c
 14873                           
 14874                           ;stkvar	_d @ sp[(-56)+44]
 14875  010D52  0EF4               	movlw	-12
 14876  010D54  50E3               	movf	plusw1,w,c
 14877  010D56  0F30               	addlw	48
 14878  010D58  6EDF               	movwf	indf2,c
 14879                           
 14880                           ;stkvar	_n @ sp[(-56)+32]
 14881  010D5A  0EE8               	movlw	-24
 14882  010D5C  50E3               	movf	plusw1,w,c
 14883  010D5E  0F01               	addlw	1
 14884  010D60  6E01               	movwf	btemp^0,c
 14885  010D62  0EE8               	movlw	-24
 14886  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 14887  010D6A  6A01               	clrf	btemp^0,c
 14888  010D6C  0EE9               	movlw	-23
 14889  010D6E  50E3               	movf	plusw1,w,c
 14890  010D70  2001               	addwfc	btemp^0,w,c
 14891  010D72  6E01               	movwf	btemp^0,c
 14892  010D74  0EE9               	movlw	-23
 14893  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 14894                           
 14895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 14896                           ;stkvar	_w @ sp[(-56)+38]
 14897  010D7C  50E1               	movf	fsr1l,w,c
 14898  010D7E  0FEE               	addlw	-18
 14899  010D80  6ED9               	movwf	fsr2l,c
 14900  010D82  50E2               	movf	fsr1h,w,c
 14901  010D84  6EDA               	movwf	fsr2h,c
 14902  010D86  0EFF               	movlw	255
 14903  010D88  22DA               	addwfc	fsr2h,f,c
 14904  010D8A  06DE               	decf	postinc2,f,c
 14905  010D8C  0E00               	movlw	0
 14906  010D8E  5ADD               	subwfb	postdec2,f,c
 14907  010D90                     l11308:
 14908                           
 14909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 14910                           ;stkvar	_u @ sp[(-56)+12]
 14911  010D90  0ED4               	movlw	-44
 14912  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 14913  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 14914  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 14915  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 14916                           
 14917                           ;stkvar	_l @ sp[(-60)+20]
 14918  010DAA  0ED8               	movlw	-40
 14919  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 14920  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 14921  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14922  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 14923  010DC4  ECC5  F095         	call	___flmul	;wreg free
 14924  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 14925  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14926  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14927  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 14928                           
 14929                           ;stkvar	_h @ sp[(-60)+24]
 14930  010DE0  0EDC               	movlw	-36
 14931  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 14932  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 14933  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 14934  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 14935  010DFA  ECBF  F0CF         	call	___flsub	;wreg free
 14936                           
 14937                           ;stkvar	_h @ sp[(-56)+24]
 14938  010DFE  0EE0               	movlw	-32
 14939  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 14940  010E06  0EE1               	movlw	-31
 14941  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14942  010E0E  0EE2               	movlw	-30
 14943  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14944  010E16  0EE3               	movlw	-29
 14945  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 14946                           
 14947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 14948  010E1E  0E00               	movlw	0
 14949  010E20  6EE6               	movwf	postinc1,c
 14950  010E22  0E00               	movlw	0
 14951  010E24  6EE6               	movwf	postinc1,c
 14952  010E26  0E20               	movlw	32
 14953  010E28  6EE6               	movwf	postinc1,c
 14954  010E2A  0E41               	movlw	65
 14955  010E2C  6EE6               	movwf	postinc1,c
 14956                           
 14957                           ;stkvar	_u @ sp[(-60)+12]
 14958  010E2E  0ED0               	movlw	-48
 14959  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 14960  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 14961  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 14962  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 14963  010E48  ECFB  F0A0         	call	___fldiv	;wreg free
 14964                           
 14965                           ;stkvar	_u @ sp[(-56)+12]
 14966  010E4C  0ED4               	movlw	-44
 14967  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 14968  010E54  0ED5               	movlw	-43
 14969  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14970  010E5C  0ED6               	movlw	-42
 14971  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14972  010E64  0ED7               	movlw	-41
 14973  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 14974                           
 14975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 14976                           ;stkvar	_ne @ sp[(-56)+46]
 14977  010E6C  50E1               	movf	fsr1l,w,c
 14978  010E6E  0FF6               	addlw	-10
 14979  010E70  6ED9               	movwf	fsr2l,c
 14980  010E72  50E2               	movf	fsr1h,w,c
 14981  010E74  6EDA               	movwf	fsr2h,c
 14982  010E76  0EFF               	movlw	255
 14983  010E78  22DA               	addwfc	fsr2h,f,c
 14984  010E7A  06DE               	decf	postinc2,f,c
 14985  010E7C  0E00               	movlw	0
 14986  010E7E  5ADD               	subwfb	postdec2,f,c
 14987                           
 14988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 14989                           ;stkvar	_i @ sp[(-56)+36]
 14990  010E80  0EEC               	movlw	-20
 14991  010E82  50E3               	movf	plusw1,w,c
 14992  010E84  0F01               	addlw	1
 14993  010E86  6E01               	movwf	btemp^0,c
 14994  010E88  0EEC               	movlw	-20
 14995  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 14996  010E90  6A01               	clrf	btemp^0,c
 14997  010E92  0EED               	movlw	-19
 14998  010E94  50E3               	movf	plusw1,w,c
 14999  010E96  2001               	addwfc	btemp^0,w,c
 15000  010E98  6E01               	movwf	btemp^0,c
 15001  010E9A  0EED               	movlw	-19
 15002  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 15003  010EA2                     l11316:
 15004                           
 15005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15006                           ;stkvar	_m @ sp[(-56)+48]
 15007                           ;stkvar	_i @ sp[(-56)+36]
 15008  010EA2  50E1               	movf	fsr1l,w,c
 15009  010EA4  0FEC               	addlw	-20
 15010  010EA6  6ED9               	movwf	fsr2l,c
 15011  010EA8  50E2               	movf	fsr1h,w,c
 15012  010EAA  6EDA               	movwf	fsr2h,c
 15013  010EAC  0EFF               	movlw	255
 15014  010EAE  22DA               	addwfc	fsr2h,f,c
 15015  010EB0  0EF8               	movlw	-8
 15016  010EB2  50E3               	movf	plusw1,w,c
 15017  010EB4  5CDE               	subwf	postinc2,w,c
 15018  010EB6  50DE               	movf	postinc2,w,c
 15019  010EB8  0A80               	xorlw	128
 15020  010EBA  6E01               	movwf	btemp^0,c
 15021  010EBC  0EF9               	movlw	-7
 15022  010EBE  50E3               	movf	plusw1,w,c
 15023  010EC0  0A80               	xorlw	128
 15024  010EC2  5801               	subwfb	btemp^0,w,c
 15025  010EC4  B0D8               	btfsc	status,0,c
 15026  010EC6  D00E               	goto	u10710
 15027                           
 15028                           ;stkvar	_n @ sp[(-56)+32]
 15029  010EC8  0EE9               	movlw	-23
 15030  010ECA  BEE3               	btfsc	plusw1,7,c
 15031  010ECC  D633               	goto	l11266
 15032  010ECE  0EE9               	movlw	-23
 15033  010ED0  50E3               	movf	plusw1,w,c
 15034  010ED2  E108               	bnz	u10710
 15035  010ED4  0EE8               	movlw	-24
 15036  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 15037  010EDC  0E4B               	movlw	75
 15038  010EDE  5E01               	subwf	btemp^0,f,c
 15039  010EE0  A0D8               	btfss	status,0,c
 15040  010EE2  D628               	goto	l11266
 15041  010EE4                     u10710:
 15042                           
 15043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 15044                           ;stkvar	_pp @ sp[(-56)+50]
 15045  010EE4  0EFA               	movlw	-6
 15046  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 15047  010EEC  0EFB               	movlw	-5
 15048  010EEE  50E3               	movf	plusw1,w,c
 15049  010EF0  1001               	iorwf	btemp^0,w,c
 15050  010EF2  B4D8               	btfsc	status,2,c
 15051  010EF4  A825               	btfss	_flags^0,4,c
 15052  010EF6  D021               	goto	l11328
 15053                           
 15054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 15055                           ;stkvar	_n @ sp[(-56)+32]
 15056  010EF8  0EE8               	movlw	-24
 15057  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 15058  010F00  0EE9               	movlw	-23
 15059  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 15060  010F08  0E94               	movlw	low _dbuf
 15061  010F0A  240B               	addwf	(btemp+10)^0,w,c
 15062  010F0C  6ED9               	movwf	fsr2l,c
 15063  010F0E  0E03               	movlw	high _dbuf
 15064  010F10  200C               	addwfc	(btemp+11)^0,w,c
 15065  010F12  6EDA               	movwf	fsr2h,c
 15066  010F14  0E2E               	movlw	46
 15067  010F16  6EDF               	movwf	indf2,c
 15068                           
 15069                           ;stkvar	_n @ sp[(-56)+32]
 15070  010F18  0EE8               	movlw	-24
 15071  010F1A  50E3               	movf	plusw1,w,c
 15072  010F1C  0F01               	addlw	1
 15073  010F1E  6E01               	movwf	btemp^0,c
 15074  010F20  0EE8               	movlw	-24
 15075  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 15076  010F28  6A01               	clrf	btemp^0,c
 15077  010F2A  0EE9               	movlw	-23
 15078  010F2C  50E3               	movf	plusw1,w,c
 15079  010F2E  2001               	addwfc	btemp^0,w,c
 15080  010F30  6E01               	movwf	btemp^0,c
 15081  010F32  0EE9               	movlw	-23
 15082  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 15083  010F3A                     l11328:
 15084                           
 15085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 15086                           ;stkvar	_n @ sp[(-56)+32]
 15087  010F3A  0EE8               	movlw	-24
 15088  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15089  010F42  0EE9               	movlw	-23
 15090  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 15091  010F4A  0E94               	movlw	low _dbuf
 15092  010F4C  240B               	addwf	(btemp+10)^0,w,c
 15093  010F4E  6ED9               	movwf	fsr2l,c
 15094  010F50  0E03               	movlw	high _dbuf
 15095  010F52  200C               	addwfc	(btemp+11)^0,w,c
 15096  010F54  6EDA               	movwf	fsr2h,c
 15097  010F56  0E00               	movlw	0
 15098  010F58  6EDF               	movwf	indf2,c
 15099                           
 15100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 15101                           ;stkvar	_nmode @ sp[(-56)+55]
 15102  010F5A  0EFF               	movlw	-1
 15103  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 15104  010F62  0E65               	movlw	101
 15105  010F64  1801               	xorwf	btemp^0,w,c
 15106  010F66  A4D8               	btfss	status,2,c
 15107  010F68  EF16  F081         	goto	l11132
 15108                           
 15109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 15110  010F6C  0E4F               	movlw	79
 15111  010F6E  6E0B               	movwf	(btemp+10)^0,c
 15112  010F70  0E00               	movlw	0
 15113  010F72  6E0C               	movwf	(btemp+11)^0,c
 15114                           
 15115                           ;stkvar	_i @ sp[(-56)+36]
 15116  010F74  0EEC               	movlw	-20
 15117  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15118  010F7C  0EED               	movlw	-19
 15119  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15120                           
 15121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 15122                           ;stkvar	_i @ sp[(-56)+36]
 15123  010F84  0EEC               	movlw	-20
 15124  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 15125  010F8C  0EED               	movlw	-19
 15126  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15127  010F94  0E94               	movlw	low _dbuf
 15128  010F96  240B               	addwf	(btemp+10)^0,w,c
 15129  010F98  6ED9               	movwf	fsr2l,c
 15130  010F9A  0E03               	movlw	high _dbuf
 15131  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 15132  010F9E  6EDA               	movwf	fsr2h,c
 15133  010FA0  0E00               	movlw	0
 15134  010FA2  6EDF               	movwf	indf2,c
 15135                           
 15136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 15137                           ;stkvar	_sign @ sp[(-56)+42]
 15138  010FA4  0EF2               	movlw	-14
 15139  010FA6  6AE3               	clrf	plusw1,c
 15140  010FA8  0EF3               	movlw	-13
 15141  010FAA  6AE3               	clrf	plusw1,c
 15142                           
 15143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 15144                           ;stkvar	_e @ sp[(-56)+34]
 15145  010FAC  0EEB               	movlw	-21
 15146  010FAE  AEE3               	btfss	plusw1,7,c
 15147  010FB0  D012               	goto	l11342
 15148                           
 15149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 15150  010FB2  0E01               	movlw	1
 15151  010FB4  6E0B               	movwf	(btemp+10)^0,c
 15152  010FB6  0E00               	movlw	0
 15153  010FB8  6E0C               	movwf	(btemp+11)^0,c
 15154                           
 15155                           ;stkvar	_sign @ sp[(-56)+42]
 15156  010FBA  0EF2               	movlw	-14
 15157  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15158  010FC2  0EF3               	movlw	-13
 15159  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15160                           
 15161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 15162                           ;stkvar	_e @ sp[(-56)+34]
 15163                           ;stkvar	_e @ sp[(-56)+34]
 15164  010FCA  0EEA               	movlw	-22
 15165  010FCC  6CE3               	negf	plusw1,c
 15166  010FCE  0EEB               	movlw	-21
 15167  010FD0  1EE3               	comf	plusw1,f,c
 15168  010FD2  B0D8               	btfsc	status,0,c
 15169  010FD4  2AE3               	incf	plusw1,f,c
 15170  010FD6                     l11342:
 15171                           
 15172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 15173  010FD6  0E02               	movlw	2
 15174  010FD8  6E0B               	movwf	(btemp+10)^0,c
 15175  010FDA  0E00               	movlw	0
 15176  010FDC  6E0C               	movwf	(btemp+11)^0,c
 15177                           
 15178                           ;stkvar	_p @ sp[(-56)+40]
 15179  010FDE  0EF0               	movlw	-16
 15180  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15181  010FE6  0EF1               	movlw	-15
 15182  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 15183                           
 15184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 15185  010FEE  D051               	goto	l11354
 15186  010FF0                     l11344:
 15187                           
 15188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 15189                           ;stkvar	_i @ sp[(-56)+36]
 15190  010FF0  50E1               	movf	fsr1l,w,c
 15191  010FF2  0FEC               	addlw	-20
 15192  010FF4  6ED9               	movwf	fsr2l,c
 15193  010FF6  50E2               	movf	fsr1h,w,c
 15194  010FF8  6EDA               	movwf	fsr2h,c
 15195  010FFA  0EFF               	movlw	255
 15196  010FFC  22DA               	addwfc	fsr2h,f,c
 15197  010FFE  06DE               	decf	postinc2,f,c
 15198  011000  0E00               	movlw	0
 15199  011002  5ADD               	subwfb	postdec2,f,c
 15200                           
 15201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 15202                           ;stkvar	_i @ sp[(-56)+36]
 15203  011004  0EEC               	movlw	-20
 15204  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 15205  01100C  0EED               	movlw	-19
 15206  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15207  011014  0E94               	movlw	low _dbuf
 15208  011016  240B               	addwf	(btemp+10)^0,w,c
 15209  011018  6ED9               	movwf	fsr2l,c
 15210  01101A  0E03               	movlw	high _dbuf
 15211  01101C  200C               	addwfc	(btemp+11)^0,w,c
 15212  01101E  6EDA               	movwf	fsr2h,c
 15213  011020  0E0A               	movlw	10
 15214  011022  6EE6               	movwf	postinc1,c
 15215  011024  0E00               	movlw	0
 15216  011026  6EE6               	movwf	postinc1,c
 15217                           
 15218                           ;stkvar	_e @ sp[(-58)+34]
 15219  011028  0EE8               	movlw	-24
 15220  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 15221  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 15222  011036  ECE1  F0C2         	call	___awmod	;wreg free
 15223  01103A  5001               	movf	btemp^0,w,c
 15224  01103C  0F30               	addlw	48
 15225  01103E  6EDF               	movwf	indf2,c
 15226                           
 15227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 15228  011040  0E0A               	movlw	10
 15229  011042  6EE6               	movwf	postinc1,c
 15230  011044  0E00               	movlw	0
 15231  011046  6EE6               	movwf	postinc1,c
 15232                           
 15233                           ;stkvar	_e @ sp[(-58)+34]
 15234  011048  0EE8               	movlw	-24
 15235  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 15236  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 15237  011056  ECD3  F0BF         	call	___awdiv	;wreg free
 15238                           
 15239                           ;stkvar	_e @ sp[(-56)+34]
 15240  01105A  0EEA               	movlw	-22
 15241  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 15242  011062  0EEB               	movlw	-21
 15243  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15244                           
 15245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 15246                           ;stkvar	_p @ sp[(-56)+40]
 15247  01106A  50E1               	movf	fsr1l,w,c
 15248  01106C  0FF0               	addlw	-16
 15249  01106E  6ED9               	movwf	fsr2l,c
 15250  011070  50E2               	movf	fsr1h,w,c
 15251  011072  6EDA               	movwf	fsr2h,c
 15252  011074  0EFF               	movlw	255
 15253  011076  22DA               	addwfc	fsr2h,f,c
 15254  011078  06DE               	decf	postinc2,f,c
 15255  01107A  0E00               	movlw	0
 15256  01107C  5ADD               	subwfb	postdec2,f,c
 15257                           
 15258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 15259                           ;stkvar	_w @ sp[(-56)+38]
 15260  01107E  50E1               	movf	fsr1l,w,c
 15261  011080  0FEE               	addlw	-18
 15262  011082  6ED9               	movwf	fsr2l,c
 15263  011084  50E2               	movf	fsr1h,w,c
 15264  011086  6EDA               	movwf	fsr2h,c
 15265  011088  0EFF               	movlw	255
 15266  01108A  22DA               	addwfc	fsr2h,f,c
 15267  01108C  06DE               	decf	postinc2,f,c
 15268  01108E  0E00               	movlw	0
 15269  011090  5ADD               	subwfb	postdec2,f,c
 15270  011092                     l11354:
 15271                           
 15272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 15273                           ;stkvar	_e @ sp[(-56)+34]
 15274  011092  0EEA               	movlw	-22
 15275  011094  006F FF8C  F001    	movff	plusw1,btemp
 15276  01109A  0EEB               	movlw	-21
 15277  01109C  50E3               	movf	plusw1,w,c
 15278  01109E  1001               	iorwf	btemp^0,w,c
 15279  0110A0  A4D8               	btfss	status,2,c
 15280  0110A2  D7A6               	goto	l11344
 15281                           
 15282                           ;stkvar	_p @ sp[(-56)+40]
 15283  0110A4  0EF1               	movlw	-15
 15284  0110A6  BEE3               	btfsc	plusw1,7,c
 15285  0110A8  D007               	goto	u10770
 15286  0110AA  0EF1               	movlw	-15
 15287  0110AC  50E3               	movf	plusw1,w,c
 15288  0110AE  E1A0               	bnz	l11344
 15289  0110B0  0EF0               	movlw	-16
 15290  0110B2  04E3               	decf	plusw1,w,c
 15291  0110B4  B0D8               	btfsc	status,0,c
 15292  0110B6  D79C               	goto	l11344
 15293  0110B8                     u10770:
 15294                           
 15295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 15296                           ;stkvar	_i @ sp[(-56)+36]
 15297  0110B8  50E1               	movf	fsr1l,w,c
 15298  0110BA  0FEC               	addlw	-20
 15299  0110BC  6ED9               	movwf	fsr2l,c
 15300  0110BE  50E2               	movf	fsr1h,w,c
 15301  0110C0  6EDA               	movwf	fsr2h,c
 15302  0110C2  0EFF               	movlw	255
 15303  0110C4  22DA               	addwfc	fsr2h,f,c
 15304  0110C6  06DE               	decf	postinc2,f,c
 15305  0110C8  0E00               	movlw	0
 15306  0110CA  5ADD               	subwfb	postdec2,f,c
 15307                           
 15308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 15309                           ;stkvar	_sign @ sp[(-56)+42]
 15310  0110CC  0EF2               	movlw	-14
 15311  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 15312  0110D4  0EF3               	movlw	-13
 15313  0110D6  50E3               	movf	plusw1,w,c
 15314  0110D8  1001               	iorwf	btemp^0,w,c
 15315  0110DA  A4D8               	btfss	status,2,c
 15316  0110DC  D002               	goto	l11364
 15317  0110DE  0E2B               	movlw	43
 15318  0110E0  D001               	goto	L13
 15319  0110E2                     l11364:
 15320  0110E2  0E2D               	movlw	45
 15321  0110E4                     L13:
 15322  0110E4  6E0B               	movwf	(btemp+10)^0,c
 15323  0110E6  0E00               	movlw	0
 15324  0110E8  6E0C               	movwf	(btemp+11)^0,c
 15325                           
 15326                           ;stkvar	_efgtoa$5237 @ sp[(-56)+4]
 15327  0110EA  0ECC               	movlw	-52
 15328  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15329  0110F2  0ECD               	movlw	-51
 15330  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15331                           
 15332                           ;stkvar	_efgtoa$5237 @ sp[(-56)+4]
 15333                           ;stkvar	_i @ sp[(-56)+36]
 15334  0110FA  0EEC               	movlw	-20
 15335  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15336  011102  0EED               	movlw	-19
 15337  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 15338  01110A  0E94               	movlw	low _dbuf
 15339  01110C  240B               	addwf	(btemp+10)^0,w,c
 15340  01110E  6ED9               	movwf	fsr2l,c
 15341  011110  0E03               	movlw	high _dbuf
 15342  011112  200C               	addwfc	(btemp+11)^0,w,c
 15343  011114  6EDA               	movwf	fsr2h,c
 15344  011116  0ECC               	movlw	-52
 15345  011118  006F FF8F FFDF     	movff	plusw1,indf2
 15346                           
 15347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 15348                           ;stkvar	_w @ sp[(-56)+38]
 15349  01111E  50E1               	movf	fsr1l,w,c
 15350  011120  0FEE               	addlw	-18
 15351  011122  6ED9               	movwf	fsr2l,c
 15352  011124  50E2               	movf	fsr1h,w,c
 15353  011126  6EDA               	movwf	fsr2h,c
 15354  011128  0EFF               	movlw	255
 15355  01112A  22DA               	addwfc	fsr2h,f,c
 15356  01112C  06DE               	decf	postinc2,f,c
 15357  01112E  0E00               	movlw	0
 15358  011130  5ADD               	subwfb	postdec2,f,c
 15359                           
 15360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 15361                           ;stkvar	_i @ sp[(-56)+36]
 15362  011132  50E1               	movf	fsr1l,w,c
 15363  011134  0FEC               	addlw	-20
 15364  011136  6ED9               	movwf	fsr2l,c
 15365  011138  50E2               	movf	fsr1h,w,c
 15366  01113A  6EDA               	movwf	fsr2h,c
 15367  01113C  0EFF               	movlw	255
 15368  01113E  22DA               	addwfc	fsr2h,f,c
 15369  011140  06DE               	decf	postinc2,f,c
 15370  011142  0E00               	movlw	0
 15371  011144  5ADD               	subwfb	postdec2,f,c
 15372  011146  0EBF               	movlw	191
 15373  011148  6E0B               	movwf	(btemp+10)^0,c
 15374  01114A  0EFF               	movlw	255
 15375  01114C  6E0C               	movwf	(btemp+11)^0,c
 15376                           
 15377                           ;stkvar	_c @ sp[(-56)+-7]
 15378  01114E  0EC1               	movlw	-63
 15379  011150  50E3               	movf	plusw1,w,c
 15380  011152  6E09               	movwf	(btemp+8)^0,c
 15381  011154  6A0A               	clrf	(btemp+9)^0,c
 15382  011156  500B               	movf	(btemp+10)^0,w,c
 15383  011158  2609               	addwf	(btemp+8)^0,f,c
 15384  01115A  500C               	movf	(btemp+11)^0,w,c
 15385  01115C  220A               	addwfc	(btemp+9)^0,f,c
 15386  01115E  500A               	movf	(btemp+9)^0,w,c
 15387  011160  E106               	bnz	u10790
 15388  011162  0E1A               	movlw	26
 15389  011164  5C09               	subwf	(btemp+8)^0,w,c
 15390  011166  B0D8               	btfsc	status,0,c
 15391  011168  D002               	goto	u10790
 15392  01116A  0E01               	movlw	1
 15393  01116C  D001               	goto	u10800
 15394  01116E                     u10790:
 15395  01116E  0E00               	movlw	0
 15396  011170                     u10800:
 15397  011170  6E0B               	movwf	(btemp+10)^0,c
 15398  011172  6A0C               	clrf	(btemp+11)^0,c
 15399                           
 15400                           ;stkvar	_efgtoa$5239 @ sp[(-56)+0]
 15401  011174  0EC8               	movlw	-56
 15402  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15403  01117C  0EC9               	movlw	-55
 15404  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15405                           
 15406                           ;stkvar	_efgtoa$5239 @ sp[(-56)+0]
 15407  011184  0EC8               	movlw	-56
 15408  011186  006F FF8C  F001    	movff	plusw1,btemp
 15409  01118C  0EC9               	movlw	-55
 15410  01118E  50E3               	movf	plusw1,w,c
 15411  011190  1001               	iorwf	btemp^0,w,c
 15412  011192  A4D8               	btfss	status,2,c
 15413  011194  D002               	goto	l11380
 15414  011196  0E65               	movlw	101
 15415  011198  D001               	goto	L14
 15416  01119A                     l11380:
 15417  01119A  0E45               	movlw	69
 15418  01119C                     L14:
 15419  01119C  6E0B               	movwf	(btemp+10)^0,c
 15420  01119E  0E00               	movlw	0
 15421  0111A0  6E0C               	movwf	(btemp+11)^0,c
 15422                           
 15423                           ;stkvar	_efgtoa$5238 @ sp[(-56)+2]
 15424  0111A2  0ECA               	movlw	-54
 15425  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15426  0111AA  0ECB               	movlw	-53
 15427  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15428                           
 15429                           ;stkvar	_efgtoa$5238 @ sp[(-56)+2]
 15430                           ;stkvar	_i @ sp[(-56)+36]
 15431  0111B2  0EEC               	movlw	-20
 15432  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 15433  0111BA  0EED               	movlw	-19
 15434  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 15435  0111C2  0E94               	movlw	low _dbuf
 15436  0111C4  240B               	addwf	(btemp+10)^0,w,c
 15437  0111C6  6ED9               	movwf	fsr2l,c
 15438  0111C8  0E03               	movlw	high _dbuf
 15439  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 15440  0111CC  6EDA               	movwf	fsr2h,c
 15441  0111CE  0ECA               	movlw	-54
 15442  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 15443                           
 15444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 15445                           ;stkvar	_w @ sp[(-56)+38]
 15446  0111D6  50E1               	movf	fsr1l,w,c
 15447  0111D8  0FEE               	addlw	-18
 15448  0111DA  6ED9               	movwf	fsr2l,c
 15449  0111DC  50E2               	movf	fsr1h,w,c
 15450  0111DE  6EDA               	movwf	fsr2h,c
 15451  0111E0  0EFF               	movlw	255
 15452  0111E2  22DA               	addwfc	fsr2h,f,c
 15453  0111E4  06DE               	decf	postinc2,f,c
 15454  0111E6  0E00               	movlw	0
 15455  0111E8  5ADD               	subwfb	postdec2,f,c
 15456                           
 15457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 15458                           ;stkvar	_i @ sp[(-56)+36]
 15459  0111EA  0EEC               	movlw	-20
 15460  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15461  0111F2  0EED               	movlw	-19
 15462  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15463  0111FA  0E94               	movlw	low _dbuf
 15464  0111FC  240B               	addwf	(btemp+10)^0,w,c
 15465  0111FE  6E09               	movwf	(btemp+8)^0,c
 15466  011200  0E03               	movlw	high _dbuf
 15467  011202  200C               	addwfc	(btemp+11)^0,w,c
 15468  011204  6E0A               	movwf	(btemp+9)^0,c
 15469  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 15470  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 15471                           
 15472                           ;stkvar	_n @ sp[(-58)+32]
 15473  011212  0E94               	movlw	low _dbuf
 15474  011214  6E0B               	movwf	(btemp+10)^0,c
 15475  011216  0E03               	movlw	high _dbuf
 15476  011218  6E0C               	movwf	(btemp+11)^0,c
 15477  01121A  0EE6               	movlw	-26
 15478  01121C  50E3               	movf	plusw1,w,c
 15479  01121E  260B               	addwf	(btemp+10)^0,f,c
 15480  011220  0EE7               	movlw	-25
 15481  011222  50E3               	movf	plusw1,w,c
 15482  011224  220C               	addwfc	(btemp+11)^0,f,c
 15483  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15484  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15485  011232  ECF1  F0C6         	call	_strcpy	;wreg free
 15486  011236  EF16  F081         	goto	l11132
 15487  01123A                     l2104:
 15488                           
 15489                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 15490  01123A  0EC1               	movlw	193
 15491  01123C  26E1               	addwf	fsr1l,f,c
 15492  01123E  0EFF               	movlw	255
 15493  011240  22E2               	addwfc	fsr1h,f,c
 15494  011242  0012               	return		;funcret
 15495  011244                     __end_of_efgtoa:
 15496                           	opt callstack 0
 15497                           
 15498 ;; *************** function _tolower *****************
 15499 ;; Defined at:
 15500 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;  c               2  [STACK] int 
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;		None
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  2  [STACK] int 
 15507 ;; Registers used:
 15508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 15509 ;; Tracked objects:
 15510 ;;		On entry : 0/0
 15511 ;;		On exit  : 0/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15518 ;;Total ram usage:        0 bytes
 15519 ;; Hardware stack levels used:    1
 15520 ;; Hardware stack levels required when called:   16
 15521 ;; This function calls:
 15522 ;;		_isupper
 15523 ;; This function is called by:
 15524 ;;		_efgtoa
 15525 ;;		_vfpfcnvrt
 15526 ;; This function uses a reentrant model
 15527 ;;
 15528                           
 15529                           	psect	text52
 15530  019824                     __ptext52:
 15531                           	opt callstack 0
 15532  019824                     _tolower:
 15533                           	opt callstack 0
 15534                           
 15535                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15536  019824  52E6               	movf	postinc1,f,c
 15537  019826  52E6               	movf	postinc1,f,c
 15538                           
 15539                           ;stkvar	_c @ sp[(-2)+-2]
 15540                           
 15541                           ;incstack = 0
 15542 ;; hardware stack exceeded
 15543  019828  0EFC               	movlw	-4
 15544  01982A  50E3               	movf	plusw1,w,c
 15545  01982C  0FBF               	addlw	191
 15546  01982E  6E0B               	movwf	(btemp+10)^0,c
 15547  019830  0EFD               	movlw	-3
 15548  019832  006F FF8C  F00C    	movff	plusw1,btemp+11
 15549  019838  0EFF               	movlw	255
 15550  01983A  220C               	addwfc	(btemp+11)^0,f,c
 15551  01983C  500C               	movf	(btemp+11)^0,w,c
 15552  01983E  E106               	bnz	u5660
 15553  019840  0E1A               	movlw	26
 15554  019842  5C0B               	subwf	(btemp+10)^0,w,c
 15555  019844  B0D8               	btfsc	status,0,c
 15556  019846  D002               	goto	u5660
 15557  019848  0E01               	movlw	1
 15558  01984A  D001               	goto	u5670
 15559  01984C                     u5660:
 15560  01984C  0E00               	movlw	0
 15561  01984E                     u5670:
 15562  01984E  6E0B               	movwf	(btemp+10)^0,c
 15563  019850  6A0C               	clrf	(btemp+11)^0,c
 15564                           
 15565                           ;stkvar	_tolower$6058 @ sp[(-2)+0]
 15566  019852  0EFE               	movlw	-2
 15567  019854  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15568  01985A  0EFF               	movlw	-1
 15569  01985C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15570                           
 15571                           ;stkvar	_tolower$6058 @ sp[(-2)+0]
 15572  019862  0EFE               	movlw	-2
 15573  019864  006F FF8C  F001    	movff	plusw1,btemp
 15574  01986A  0EFF               	movlw	-1
 15575  01986C  50E3               	movf	plusw1,w,c
 15576  01986E  1001               	iorwf	btemp^0,w,c
 15577  019870  B4D8               	btfsc	status,2,c
 15578  019872  D00D               	goto	l7500
 15579                           
 15580                           ;stkvar	_c @ sp[(-2)+-2]
 15581  019874  0EFC               	movlw	-4
 15582  019876  006F FF8C  F001    	movff	plusw1,btemp
 15583  01987C  0EFD               	movlw	-3
 15584  01987E  006F FF8C  F002    	movff	plusw1,btemp+1
 15585  019884  0E20               	movlw	32
 15586  019886  1201               	iorwf	btemp^0,f,c
 15587  019888  0E00               	movlw	0
 15588  01988A  1202               	iorwf	(btemp+1)^0,f,c
 15589  01988C  D008               	goto	l3376
 15590  01988E                     l7500:
 15591                           
 15592                           ;stkvar	_c @ sp[(-2)+-2]
 15593  01988E  0EFC               	movlw	-4
 15594  019890  006F FF8C  F001    	movff	plusw1,btemp
 15595  019896  0EFD               	movlw	-3
 15596  019898  006F FF8C  F002    	movff	plusw1,btemp+1
 15597  01989E                     l3376:
 15598                           
 15599                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15600  01989E  52E5               	movf	postdec1,f,c
 15601  0198A0  52E5               	movf	postdec1,f,c
 15602  0198A2  52E5               	movf	postdec1,f,c
 15603  0198A4  52E5               	movf	postdec1,f,c
 15604  0198A6  0012               	return		;funcret
 15605  0198A8                     __end_of_tolower:
 15606                           	opt callstack 0
 15607                           
 15608 ;; *************** function _isupper *****************
 15609 ;; Defined at:
 15610 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 15611 ;; Parameters:    Size  Location     Type
 15612 ;;  c               2  [STACK] int 
 15613 ;; Auto vars:     Size  Location     Type
 15614 ;;		None
 15615 ;; Return value:  Size  Location     Type
 15616 ;;                  2  [STACK] int 
 15617 ;; Registers used:
 15618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 15619 ;; Tracked objects:
 15620 ;;		On entry : 0/0
 15621 ;;		On exit  : 0/0
 15622 ;;		Unchanged: 0/0
 15623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15628 ;;Total ram usage:        0 bytes
 15629 ;; Hardware stack levels used:    1
 15630 ;; Hardware stack levels required when called:   15
 15631 ;; This function calls:
 15632 ;;		Nothing
 15633 ;; This function is called by:
 15634 ;;		_efgtoa
 15635 ;;		_xtoa
 15636 ;;		_vfpfcnvrt
 15637 ;;		_tolower
 15638 ;; This function uses a reentrant model
 15639 ;;
 15640                           
 15641                           	psect	text53
 15642  01A430                     __ptext53:
 15643                           	opt callstack 0
 15644  01A430                     _isupper:
 15645                           	opt callstack 0
 15646                           
 15647                           ;stkvar	_c @ sp[(0)+-2]
 15648                           
 15649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15650                           ;incstack = 0
 15651 ;; hardware stack exceeded
 15652  01A430  0EFE               	movlw	-2
 15653  01A432  50E3               	movf	plusw1,w,c
 15654  01A434  0FBF               	addlw	191
 15655  01A436  6E0B               	movwf	(btemp+10)^0,c
 15656  01A438  0EFF               	movlw	-1
 15657  01A43A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15658  01A440  0EFF               	movlw	255
 15659  01A442  220C               	addwfc	(btemp+11)^0,f,c
 15660  01A444  500C               	movf	(btemp+11)^0,w,c
 15661  01A446  E106               	bnz	u5060
 15662  01A448  0E1A               	movlw	26
 15663  01A44A  5C0B               	subwf	(btemp+10)^0,w,c
 15664  01A44C  B0D8               	btfsc	status,0,c
 15665  01A44E  D002               	goto	u5060
 15666  01A450  0E01               	movlw	1
 15667  01A452  D001               	goto	u5070
 15668  01A454                     u5060:
 15669  01A454  0E00               	movlw	0
 15670  01A456                     u5070:
 15671  01A456  6E01               	movwf	btemp^0,c
 15672  01A458  6A02               	clrf	(btemp+1)^0,c
 15673                           
 15674                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15675  01A45A  52E5               	movf	postdec1,f,c
 15676  01A45C  52E5               	movf	postdec1,f,c
 15677  01A45E  0012               	return		;funcret
 15678  01A460                     __end_of_isupper:
 15679                           	opt callstack 0
 15680                           
 15681 ;; *************** function _strcpy *****************
 15682 ;; Defined at:
 15683 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 15684 ;; Parameters:    Size  Location     Type
 15685 ;;  dest            2  [STACK] PTR unsigned char 
 15686 ;;		 -> dbuf(80), 
 15687 ;;  src             2  [STACK] PTR const unsigned char 
 15688 ;;		 -> STR_53(4), STR_52(4), STR_49(4), STR_48(4), 
 15689 ;;		 -> dbuf(80), 
 15690 ;; Auto vars:     Size  Location     Type
 15691 ;;  d               2  [STACK] PTR unsigned char 
 15692 ;;		 -> dbuf(80), 
 15693 ;;  s               2  [STACK] PTR const unsigned char 
 15694 ;;		 -> STR_53(4), STR_52(4), STR_49(4), STR_48(4), 
 15695 ;;		 -> dbuf(80), 
 15696 ;; Return value:  Size  Location     Type
 15697 ;;                  2  [STACK] PTR unsigned char 
 15698 ;; Registers used:
 15699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 15700 ;; Tracked objects:
 15701 ;;		On entry : 0/0
 15702 ;;		On exit  : 0/0
 15703 ;;		Unchanged: 0/0
 15704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15709 ;;Total ram usage:        0 bytes
 15710 ;; Hardware stack levels used:    1
 15711 ;; Hardware stack levels required when called:   15
 15712 ;; This function calls:
 15713 ;;		Nothing
 15714 ;; This function is called by:
 15715 ;;		_efgtoa
 15716 ;; This function uses a reentrant model
 15717 ;;
 15718                           
 15719                           	psect	text54
 15720  018DE2                     __ptext54:
 15721                           	opt callstack 0
 15722  018DE2                     _strcpy:
 15723                           	opt callstack 0
 15724                           
 15725                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15726  018DE2  52E6               	movf	postinc1,f,c
 15727  018DE4  52E6               	movf	postinc1,f,c
 15728  018DE6  52E6               	movf	postinc1,f,c
 15729  018DE8  52E6               	movf	postinc1,f,c
 15730                           
 15731                           ;stkvar	_src @ sp[(-4)+-4]
 15732                           
 15733                           ;incstack = 0
 15734 ;; hardware stack exceeded
 15735  018DEA  0EF8               	movlw	-8
 15736  018DEC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15737  018DF2  0EF9               	movlw	-7
 15738  018DF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15739                           
 15740                           ;stkvar	_s @ sp[(-4)+2]
 15741  018DFA  0EFF               	movlw	-1
 15742  018DFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15743  018E02  0EFE               	movlw	-2
 15744  018E04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15745                           
 15746                           ;stkvar	_dest @ sp[(-4)+-2]
 15747  018E0A  0EFA               	movlw	-6
 15748  018E0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15749  018E12  0EFB               	movlw	-5
 15750  018E14  006F FF8C  F00C    	movff	plusw1,btemp+11
 15751                           
 15752                           ;stkvar	_d @ sp[(-4)+0]
 15753  018E1A  0EFD               	movlw	-3
 15754  018E1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15755  018E22  0EFC               	movlw	-4
 15756  018E24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15757  018E2A                     l10964:
 15758                           
 15759                           ;stkvar	_s @ sp[(-4)+2]
 15760  018E2A  50E1               	movf	fsr1l,w,c
 15761  018E2C  0FFE               	addlw	-2
 15762  018E2E  6ED9               	movwf	fsr2l,c
 15763  018E30  50E2               	movf	fsr1h,w,c
 15764  018E32  6EDA               	movwf	fsr2h,c
 15765  018E34  0EFF               	movlw	255
 15766  018E36  22DA               	addwfc	fsr2h,f,c
 15767  018E38  006F FF7C  F00B    	movff	indf2,btemp+10
 15768  018E3E  0E01               	movlw	1
 15769  018E40  26DE               	addwf	postinc2,f,c
 15770  018E42  006F FF7C  F00C    	movff	indf2,btemp+11
 15771  018E48  0E00               	movlw	0
 15772  018E4A  22DD               	addwfc	postdec2,f,c
 15773  018E4C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15774  018E52  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15775  018E58  0E00               	movlw	low (__mediumconst shr (0+16))
 15776  018E5A  6EF8               	movwf	tblptru,c
 15777                           
 15778                           ;stkvar	_d @ sp[(-4)+0]
 15779  018E5C  50E1               	movf	fsr1l,w,c
 15780  018E5E  0FFC               	addlw	-4
 15781  018E60  6ED9               	movwf	fsr2l,c
 15782  018E62  50E2               	movf	fsr1h,w,c
 15783  018E64  6EDA               	movwf	fsr2h,c
 15784  018E66  0EFF               	movlw	255
 15785  018E68  22DA               	addwfc	fsr2h,f,c
 15786  018E6A  006F FF7C  F00B    	movff	indf2,btemp+10
 15787  018E70  0E01               	movlw	1
 15788  018E72  26DE               	addwf	postinc2,f,c
 15789  018E74  006F FF7C  F00C    	movff	indf2,btemp+11
 15790  018E7A  0E00               	movlw	0
 15791  018E7C  22DD               	addwfc	postdec2,f,c
 15792  018E7E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15793  018E84  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15794  018E8A  0E1F               	movlw	(high __ramtop+-1)
 15795  018E8C  64F7               	cpfsgt	tblptrh,c
 15796  018E8E  D003               	bra	u10057
 15797  018E90  0008               	tblrd		*
 15798  018E92  50F5               	movf	tablat,w,c
 15799  018E94  D007               	bra	u10050
 15800  018E96                     u10057:
 15801  018E96  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15802  018E9C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15803  018EA2  50EF               	movf	indf0,w,c
 15804  018EA4                     u10050:
 15805  018EA4  6EDF               	movwf	indf2,c
 15806  018EA6  50DF               	movf	indf2,w,c
 15807  018EA8  A4D8               	btfss	status,2,c
 15808  018EAA  D7BF               	goto	l10964
 15809                           
 15810                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 15811  018EAC  0EF8               	movlw	248
 15812  018EAE  26E1               	addwf	fsr1l,f,c
 15813  018EB0  0EFF               	movlw	255
 15814  018EB2  22E2               	addwfc	fsr1h,f,c
 15815  018EB4  0012               	return		;funcret
 15816  018EB6                     __end_of_strcpy:
 15817                           	opt callstack 0
 15818                           
 15819 ;; *************** function _floorf *****************
 15820 ;; Defined at:
 15821 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;  x               4  [STACK] float 
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;  u               4  [STACK] struct .
 15826 ;;  m               4  [STACK] unsigned long 
 15827 ;;  e               2  [STACK] int 
 15828 ;; Return value:  Size  Location     Type
 15829 ;;                  4  [STACK] float 
 15830 ;; Registers used:
 15831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 15832 ;; Tracked objects:
 15833 ;;		On entry : 0/0
 15834 ;;		On exit  : 0/0
 15835 ;;		Unchanged: 0/0
 15836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15841 ;;Total ram usage:        0 bytes
 15842 ;; Hardware stack levels used:    1
 15843 ;; Hardware stack levels required when called:   15
 15844 ;; This function calls:
 15845 ;;		Nothing
 15846 ;; This function is called by:
 15847 ;;		_efgtoa
 15848 ;; This function uses a reentrant model
 15849 ;;
 15850                           
 15851                           	psect	text55
 15852  0157F8                     __ptext55:
 15853                           	opt callstack 0
 15854  0157F8                     _floorf:
 15855                           	opt callstack 0
 15856                           
 15857                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15858  0157F8  0E0A               	movlw	10
 15859  0157FA  26E1               	addwf	fsr1l,f,c
 15860  0157FC  0E00               	movlw	0
 15861  0157FE  22E2               	addwfc	fsr1h,f,c
 15862                           
 15863                           ;incstack = 0
 15864 ;; hardware stack exceeded
 15865  015800  0060  F1D0  F009   	movff	floorf@F524,btemp+8
 15866  015806  0060  F1D4  F00A   	movff	floorf@F524+1,btemp+9
 15867  01580C  0060  F1D8  F00B   	movff	floorf@F524+2,btemp+10
 15868  015812  0060  F1DC  F00C   	movff	floorf@F524+3,btemp+11
 15869                           
 15870                           ;stkvar	_u @ sp[(-10)+0]
 15871  015818  0EF6               	movlw	-10
 15872  01581A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15873  015820  0EF7               	movlw	-9
 15874  015822  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15875  015828  0EF8               	movlw	-8
 15876  01582A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15877  015830  0EF9               	movlw	-7
 15878  015832  0060  F033  FFE3   	movff	btemp+11,plusw1
 15879                           
 15880                           ;stkvar	_x @ sp[(-10)+-4]
 15881  015838  0EF2               	movlw	-14
 15882  01583A  006F FF8C  F009    	movff	plusw1,btemp+8
 15883  015840  0EF3               	movlw	-13
 15884  015842  006F FF8C  F00A    	movff	plusw1,btemp+9
 15885  015848  0EF4               	movlw	-12
 15886  01584A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15887  015850  0EF5               	movlw	-11
 15888  015852  006F FF8C  F00C    	movff	plusw1,btemp+11
 15889                           
 15890                           ;stkvar	_u @ sp[(-10)+0]
 15891  015858  0EF6               	movlw	-10
 15892  01585A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15893  015860  0EF7               	movlw	-9
 15894  015862  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15895  015868  0EF8               	movlw	-8
 15896  01586A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15897  015870  0EF9               	movlw	-7
 15898  015872  0060  F033  FFE3   	movff	btemp+11,plusw1
 15899  015878  0E81               	movlw	129
 15900  01587A  6E0B               	movwf	(btemp+10)^0,c
 15901  01587C  0EFF               	movlw	255
 15902  01587E  6E0C               	movwf	(btemp+11)^0,c
 15903                           
 15904                           ;stkvar	_u @ sp[(-10)+0]
 15905  015880  0EF6               	movlw	-10
 15906  015882  006F FF8C  F005    	movff	plusw1,btemp+4
 15907  015888  0EF7               	movlw	-9
 15908  01588A  006F FF8C  F006    	movff	plusw1,btemp+5
 15909  015890  0EF8               	movlw	-8
 15910  015892  006F FF8C  F007    	movff	plusw1,btemp+6
 15911  015898  0EF9               	movlw	-7
 15912  01589A  006F FF8C  F008    	movff	plusw1,btemp+7
 15913  0158A0  0E18               	movlw	24
 15914  0158A2  D005               	goto	u5690
 15915  0158A4                     u5695:
 15916  0158A4  90D8               	bcf	status,0,c
 15917  0158A6  3208               	rrcf	(btemp+7)^0,f,c
 15918  0158A8  3207               	rrcf	(btemp+6)^0,f,c
 15919  0158AA  3206               	rrcf	(btemp+5)^0,f,c
 15920  0158AC  3205               	rrcf	(btemp+4)^0,f,c
 15921  0158AE                     u5690:
 15922  0158AE  2EE8               	decfsz	wreg,f,c
 15923  0158B0  D7F9               	goto	u5695
 15924  0158B2  0060  F014  F009   	movff	btemp+4,btemp+8
 15925  0158B8  0060  F018  F00A   	movff	btemp+5,btemp+9
 15926  0158BE  0EFF               	movlw	255
 15927  0158C0  1609               	andwf	(btemp+8)^0,f,c
 15928  0158C2  0E00               	movlw	0
 15929  0158C4  160A               	andwf	(btemp+9)^0,f,c
 15930  0158C6  500B               	movf	(btemp+10)^0,w,c
 15931  0158C8  2609               	addwf	(btemp+8)^0,f,c
 15932  0158CA  500C               	movf	(btemp+11)^0,w,c
 15933  0158CC  220A               	addwfc	(btemp+9)^0,f,c
 15934                           
 15935                           ;stkvar	_e @ sp[(-10)+8]
 15936  0158CE  0EFE               	movlw	-2
 15937  0158D0  0060  F027  FFE3   	movff	btemp+8,plusw1
 15938  0158D6  0EFF               	movlw	-1
 15939  0158D8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15940                           
 15941                           ;stkvar	_e @ sp[(-10)+8]
 15942  0158DE  0EFF               	movlw	-1
 15943  0158E0  BEE3               	btfsc	plusw1,7,c
 15944  0158E2  D019               	goto	l7514
 15945  0158E4  0EFF               	movlw	-1
 15946  0158E6  50E3               	movf	plusw1,w,c
 15947  0158E8  E108               	bnz	u5700
 15948  0158EA  0EFE               	movlw	-2
 15949  0158EC  006F FF8C  F001    	movff	plusw1,btemp
 15950  0158F2  0E17               	movlw	23
 15951  0158F4  5E01               	subwf	btemp^0,f,c
 15952  0158F6  A0D8               	btfss	status,0,c
 15953  0158F8  D00E               	goto	l7514
 15954  0158FA                     u5700:
 15955                           
 15956                           ;stkvar	_x @ sp[(-10)+-4]
 15957  0158FA  0EF2               	movlw	-14
 15958  0158FC  006F FF8C  F001    	movff	plusw1,btemp
 15959  015902  0EF3               	movlw	-13
 15960  015904  006F FF8C  F002    	movff	plusw1,btemp+1
 15961  01590A  0EF4               	movlw	-12
 15962  01590C  006F FF8C  F003    	movff	plusw1,btemp+2
 15963  015912  0EF5               	movlw	-11
 15964  015914  D11F               	goto	L15
 15965  015916                     l7514:
 15966                           
 15967                           ;stkvar	_e @ sp[(-10)+8]
 15968  015916  0EFF               	movlw	-1
 15969  015918  BEE3               	btfsc	plusw1,7,c
 15970  01591A  D0B4               	goto	l7530
 15971                           
 15972                           ;stkvar	_e @ sp[(-10)+8]
 15973  01591C  0EFE               	movlw	-2
 15974  01591E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15975  015924  0EFF               	movlw	255
 15976  015926  6E05               	movwf	(btemp+4)^0,c
 15977  015928  0EFF               	movlw	255
 15978  01592A  6E06               	movwf	(btemp+5)^0,c
 15979  01592C  0E7F               	movlw	127
 15980  01592E  6E07               	movwf	(btemp+6)^0,c
 15981  015930  0E00               	movlw	0
 15982  015932  6E08               	movwf	(btemp+7)^0,c
 15983  015934                     u5725:
 15984  015934  660C               	tstfsz	(btemp+11)^0,c
 15985  015936  D001               	goto	u5726
 15986  015938  D007               	goto	u5727
 15987  01593A                     u5726:
 15988  01593A  3408               	rlcf	(btemp+7)^0,w,c
 15989  01593C  3208               	rrcf	(btemp+7)^0,f,c
 15990  01593E  3207               	rrcf	(btemp+6)^0,f,c
 15991  015940  3206               	rrcf	(btemp+5)^0,f,c
 15992  015942  3205               	rrcf	(btemp+4)^0,f,c
 15993  015944  2E0C               	decfsz	(btemp+11)^0,f,c
 15994  015946  D7F6               	goto	u5725
 15995  015948                     u5727:
 15996                           
 15997                           ;stkvar	_m @ sp[(-10)+4]
 15998  015948  0EFA               	movlw	-6
 15999  01594A  0060  F017  FFE3   	movff	btemp+4,plusw1
 16000  015950  0EFB               	movlw	-5
 16001  015952  0060  F01B  FFE3   	movff	btemp+5,plusw1
 16002  015958  0EFC               	movlw	-4
 16003  01595A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 16004  015960  0EFD               	movlw	-3
 16005  015962  0060  F023  FFE3   	movff	btemp+7,plusw1
 16006                           
 16007                           ;stkvar	_m @ sp[(-10)+4]
 16008                           ;stkvar	_u @ sp[(-10)+0]
 16009  015968  0EF6               	movlw	-10
 16010  01596A  006F FF8C  F009    	movff	plusw1,btemp+8
 16011  015970  0EF7               	movlw	-9
 16012  015972  006F FF8C  F00A    	movff	plusw1,btemp+9
 16013  015978  0EF8               	movlw	-8
 16014  01597A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16015  015980  0EF9               	movlw	-7
 16016  015982  006F FF8C  F00C    	movff	plusw1,btemp+11
 16017  015988  0EFA               	movlw	-6
 16018  01598A  50E3               	movf	plusw1,w,c
 16019  01598C  1609               	andwf	(btemp+8)^0,f,c
 16020  01598E  0EFB               	movlw	-5
 16021  015990  50E3               	movf	plusw1,w,c
 16022  015992  160A               	andwf	(btemp+9)^0,f,c
 16023  015994  0EFC               	movlw	-4
 16024  015996  50E3               	movf	plusw1,w,c
 16025  015998  160B               	andwf	(btemp+10)^0,f,c
 16026  01599A  0EFD               	movlw	-3
 16027  01599C  50E3               	movf	plusw1,w,c
 16028  01599E  160C               	andwf	(btemp+11)^0,f,c
 16029  0159A0  5009               	movf	(btemp+8)^0,w,c
 16030  0159A2  100A               	iorwf	(btemp+9)^0,w,c
 16031  0159A4  100B               	iorwf	(btemp+10)^0,w,c
 16032  0159A6  100C               	iorwf	(btemp+11)^0,w,c
 16033  0159A8  B4D8               	btfsc	status,2,c
 16034  0159AA  D7A7               	goto	u5700
 16035                           
 16036                           ;stkvar	_u @ sp[(-10)+0]
 16037  0159AC  0EF6               	movlw	-10
 16038  0159AE  006F FF8C  F009    	movff	plusw1,btemp+8
 16039  0159B4  0EF7               	movlw	-9
 16040  0159B6  006F FF8C  F00A    	movff	plusw1,btemp+9
 16041  0159BC  0EF8               	movlw	-8
 16042  0159BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 16043  0159C4  0EF9               	movlw	-7
 16044  0159C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 16045  0159CC  0E20               	movlw	32
 16046  0159CE  D005               	goto	u5740
 16047  0159D0                     u5745:
 16048  0159D0  90D8               	bcf	status,0,c
 16049  0159D2  320C               	rrcf	(btemp+11)^0,f,c
 16050  0159D4  320B               	rrcf	(btemp+10)^0,f,c
 16051  0159D6  320A               	rrcf	(btemp+9)^0,f,c
 16052  0159D8  3209               	rrcf	(btemp+8)^0,f,c
 16053  0159DA                     u5740:
 16054  0159DA  2EE8               	decfsz	wreg,f,c
 16055  0159DC  D7F9               	goto	u5745
 16056  0159DE  5009               	movf	(btemp+8)^0,w,c
 16057  0159E0  B4D8               	btfsc	status,2,c
 16058  0159E2  D028               	goto	l7528
 16059                           
 16060                           ;stkvar	_m @ sp[(-10)+4]
 16061                           ;stkvar	_u @ sp[(-10)+0]
 16062  0159E4  0EF6               	movlw	-10
 16063  0159E6  50E3               	movf	plusw1,w,c
 16064  0159E8  6E01               	movwf	btemp^0,c
 16065  0159EA  0EFA               	movlw	-6
 16066  0159EC  50E3               	movf	plusw1,w,c
 16067  0159EE  2601               	addwf	btemp^0,f,c
 16068  0159F0  0EF6               	movlw	-10
 16069  0159F2  0060  F007  FFE3   	movff	btemp,plusw1
 16070  0159F8  0EF7               	movlw	-9
 16071  0159FA  50E3               	movf	plusw1,w,c
 16072  0159FC  6E01               	movwf	btemp^0,c
 16073  0159FE  0EFB               	movlw	-5
 16074  015A00  50E3               	movf	plusw1,w,c
 16075  015A02  2201               	addwfc	btemp^0,f,c
 16076  015A04  0EF7               	movlw	-9
 16077  015A06  0060  F007  FFE3   	movff	btemp,plusw1
 16078  015A0C  0EF8               	movlw	-8
 16079  015A0E  50E3               	movf	plusw1,w,c
 16080  015A10  6E01               	movwf	btemp^0,c
 16081  015A12  0EFC               	movlw	-4
 16082  015A14  50E3               	movf	plusw1,w,c
 16083  015A16  2201               	addwfc	btemp^0,f,c
 16084  015A18  0EF8               	movlw	-8
 16085  015A1A  0060  F007  FFE3   	movff	btemp,plusw1
 16086  015A20  0EF9               	movlw	-7
 16087  015A22  50E3               	movf	plusw1,w,c
 16088  015A24  6E01               	movwf	btemp^0,c
 16089  015A26  0EFD               	movlw	-3
 16090  015A28  50E3               	movf	plusw1,w,c
 16091  015A2A  2201               	addwfc	btemp^0,f,c
 16092  015A2C  0EF9               	movlw	-7
 16093  015A2E  0060  F007  FFE3   	movff	btemp,plusw1
 16094  015A34                     l7528:
 16095                           
 16096                           ;stkvar	_m @ sp[(-10)+4]
 16097  015A34  0EFA               	movlw	-6
 16098  015A36  006F FF8C  F009    	movff	plusw1,btemp+8
 16099  015A3C  0EFB               	movlw	-5
 16100  015A3E  006F FF8C  F00A    	movff	plusw1,btemp+9
 16101  015A44  0EFC               	movlw	-4
 16102  015A46  006F FF8C  F00B    	movff	plusw1,btemp+10
 16103  015A4C  0EFD               	movlw	-3
 16104  015A4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16105  015A54  1C09               	comf	(btemp+8)^0,w,c
 16106  015A56  6E05               	movwf	(btemp+4)^0,c
 16107  015A58  1C0A               	comf	(btemp+9)^0,w,c
 16108  015A5A  6E06               	movwf	(btemp+5)^0,c
 16109  015A5C  1C0B               	comf	(btemp+10)^0,w,c
 16110  015A5E  6E07               	movwf	(btemp+6)^0,c
 16111  015A60  1C0C               	comf	(btemp+11)^0,w,c
 16112  015A62  6E08               	movwf	(btemp+7)^0,c
 16113                           
 16114                           ;stkvar	_u @ sp[(-10)+0]
 16115  015A64  50E1               	movf	fsr1l,w,c
 16116  015A66  0FF6               	addlw	-10
 16117  015A68  6ED9               	movwf	fsr2l,c
 16118  015A6A  50E2               	movf	fsr1h,w,c
 16119  015A6C  6EDA               	movwf	fsr2h,c
 16120  015A6E  0EFF               	movlw	255
 16121  015A70  22DA               	addwfc	fsr2h,f,c
 16122  015A72  5005               	movf	(btemp+4)^0,w,c
 16123  015A74  16DE               	andwf	postinc2,f,c
 16124  015A76  5006               	movf	(btemp+5)^0,w,c
 16125  015A78  16DE               	andwf	postinc2,f,c
 16126  015A7A  5007               	movf	(btemp+6)^0,w,c
 16127  015A7C  16DE               	andwf	postinc2,f,c
 16128  015A7E  5008               	movf	(btemp+7)^0,w,c
 16129  015A80  16DE               	andwf	postinc2,f,c
 16130  015A82  D05B               	goto	l7538
 16131  015A84                     l7530:
 16132                           
 16133                           ;stkvar	_u @ sp[(-10)+0]
 16134  015A84  0EF6               	movlw	-10
 16135  015A86  006F FF8C  F009    	movff	plusw1,btemp+8
 16136  015A8C  0EF7               	movlw	-9
 16137  015A8E  006F FF8C  F00A    	movff	plusw1,btemp+9
 16138  015A94  0EF8               	movlw	-8
 16139  015A96  006F FF8C  F00B    	movff	plusw1,btemp+10
 16140  015A9C  0EF9               	movlw	-7
 16141  015A9E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16142  015AA4  0E20               	movlw	32
 16143  015AA6  D005               	goto	u5760
 16144  015AA8                     u5765:
 16145  015AA8  90D8               	bcf	status,0,c
 16146  015AAA  320C               	rrcf	(btemp+11)^0,f,c
 16147  015AAC  320B               	rrcf	(btemp+10)^0,f,c
 16148  015AAE  320A               	rrcf	(btemp+9)^0,f,c
 16149  015AB0  3209               	rrcf	(btemp+8)^0,f,c
 16150  015AB2                     u5760:
 16151  015AB2  2EE8               	decfsz	wreg,f,c
 16152  015AB4  D7F9               	goto	u5765
 16153  015AB6  6609               	tstfsz	(btemp+8)^0,c
 16154  015AB8  D009               	goto	l7534
 16155                           
 16156                           ;stkvar	_u @ sp[(-10)+0]
 16157  015ABA  0EF6               	movlw	-10
 16158  015ABC  6AE3               	clrf	plusw1,c
 16159  015ABE  0EF7               	movlw	-9
 16160  015AC0  6AE3               	clrf	plusw1,c
 16161  015AC2  0EF8               	movlw	-8
 16162  015AC4  6AE3               	clrf	plusw1,c
 16163  015AC6  0EF9               	movlw	-7
 16164  015AC8  6AE3               	clrf	plusw1,c
 16165  015ACA  D037               	goto	l7538
 16166  015ACC                     l7534:
 16167                           
 16168                           ;stkvar	_u @ sp[(-10)+0]
 16169  015ACC  0EF6               	movlw	-10
 16170  015ACE  006F FF8C  F009    	movff	plusw1,btemp+8
 16171  015AD4  0EF7               	movlw	-9
 16172  015AD6  006F FF8C  F00A    	movff	plusw1,btemp+9
 16173  015ADC  0EF8               	movlw	-8
 16174  015ADE  006F FF8C  F00B    	movff	plusw1,btemp+10
 16175  015AE4  0EF9               	movlw	-7
 16176  015AE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 16177  015AEC  90D8               	bcf	status,0,c
 16178  015AEE  3409               	rlcf	(btemp+8)^0,w,c
 16179  015AF0  6E05               	movwf	(btemp+4)^0,c
 16180  015AF2  340A               	rlcf	(btemp+9)^0,w,c
 16181  015AF4  6E06               	movwf	(btemp+5)^0,c
 16182  015AF6  340B               	rlcf	(btemp+10)^0,w,c
 16183  015AF8  6E07               	movwf	(btemp+6)^0,c
 16184  015AFA  340C               	rlcf	(btemp+11)^0,w,c
 16185  015AFC  6E08               	movwf	(btemp+7)^0,c
 16186  015AFE  5005               	movf	(btemp+4)^0,w,c
 16187  015B00  1006               	iorwf	(btemp+5)^0,w,c
 16188  015B02  1007               	iorwf	(btemp+6)^0,w,c
 16189  015B04  1008               	iorwf	(btemp+7)^0,w,c
 16190  015B06  B4D8               	btfsc	status,2,c
 16191  015B08  D018               	goto	l7538
 16192  015B0A  0E00               	movlw	0
 16193  015B0C  6E09               	movwf	(btemp+8)^0,c
 16194  015B0E  0E00               	movlw	0
 16195  015B10  6E0A               	movwf	(btemp+9)^0,c
 16196  015B12  0E80               	movlw	128
 16197  015B14  6E0B               	movwf	(btemp+10)^0,c
 16198  015B16  0EBF               	movlw	191
 16199  015B18  6E0C               	movwf	(btemp+11)^0,c
 16200                           
 16201                           ;stkvar	_u @ sp[(-10)+0]
 16202  015B1A  0EF6               	movlw	-10
 16203  015B1C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16204  015B22  0EF7               	movlw	-9
 16205  015B24  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16206  015B2A  0EF8               	movlw	-8
 16207  015B2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16208  015B32  0EF9               	movlw	-7
 16209  015B34  0060  F033  FFE3   	movff	btemp+11,plusw1
 16210  015B3A                     l7538:
 16211                           
 16212                           ;stkvar	_u @ sp[(-10)+0]
 16213  015B3A  0EF6               	movlw	-10
 16214  015B3C  006F FF8C  F001    	movff	plusw1,btemp
 16215  015B42  0EF7               	movlw	-9
 16216  015B44  006F FF8C  F002    	movff	plusw1,btemp+1
 16217  015B4A  0EF8               	movlw	-8
 16218  015B4C  006F FF8C  F003    	movff	plusw1,btemp+2
 16219  015B52  0EF9               	movlw	-7
 16220  015B54                     L15:
 16221  015B54  006F FF8C  F004    	movff	plusw1,btemp+3
 16222                           
 16223                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16224  015B5A  0EF2               	movlw	242
 16225  015B5C  26E1               	addwf	fsr1l,f,c
 16226  015B5E  0EFF               	movlw	255
 16227  015B60  22E2               	addwfc	fsr1h,f,c
 16228  015B62  0012               	return		;funcret
 16229  015B64                     __end_of_floorf:
 16230                           	opt callstack 0
 16231                           
 16232 ;; *************** function ___fpclassifyf *****************
 16233 ;; Defined at:
 16234 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 16235 ;; Parameters:    Size  Location     Type
 16236 ;;  x               4  [STACK] float 
 16237 ;; Auto vars:     Size  Location     Type
 16238 ;;  u               4  [STACK] struct .
 16239 ;;  e               2  [STACK] int 
 16240 ;; Return value:  Size  Location     Type
 16241 ;;                  2  [STACK] int 
 16242 ;; Registers used:
 16243 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 16244 ;; Tracked objects:
 16245 ;;		On entry : 0/0
 16246 ;;		On exit  : 0/0
 16247 ;;		Unchanged: 0/0
 16248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16253 ;;Total ram usage:        0 bytes
 16254 ;; Hardware stack levels used:    1
 16255 ;; Hardware stack levels required when called:   15
 16256 ;; This function calls:
 16257 ;;		Nothing
 16258 ;; This function is called by:
 16259 ;;		_efgtoa
 16260 ;; This function uses a reentrant model
 16261 ;;
 16262                           
 16263                           	psect	text56
 16264  017574                     __ptext56:
 16265                           	opt callstack 0
 16266  017574                     ___fpclassifyf:
 16267                           	opt callstack 0
 16268                           
 16269                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16270  017574  0E06               	movlw	6
 16271  017576  26E1               	addwf	fsr1l,f,c
 16272  017578  0E00               	movlw	0
 16273  01757A  22E2               	addwfc	fsr1h,f,c
 16274                           
 16275                           ;incstack = 0
 16276 ;; hardware stack exceeded
 16277  01757C  0060  F1F0  F009   	movff	___fpclassifyf@F463,btemp+8
 16278  017582  0060  F1F4  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 16279  017588  0060  F1F8  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 16280  01758E  0060  F1FC  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 16281                           
 16282                           ;stkvar	_u @ sp[(-6)+0]
 16283  017594  0EFA               	movlw	-6
 16284  017596  0060  F027  FFE3   	movff	btemp+8,plusw1
 16285  01759C  0EFB               	movlw	-5
 16286  01759E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16287  0175A4  0EFC               	movlw	-4
 16288  0175A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16289  0175AC  0EFD               	movlw	-3
 16290  0175AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16291                           
 16292                           ;stkvar	_x @ sp[(-6)+-4]
 16293  0175B4  0EF6               	movlw	-10
 16294  0175B6  006F FF8C  F009    	movff	plusw1,btemp+8
 16295  0175BC  0EF7               	movlw	-9
 16296  0175BE  006F FF8C  F00A    	movff	plusw1,btemp+9
 16297  0175C4  0EF8               	movlw	-8
 16298  0175C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 16299  0175CC  0EF9               	movlw	-7
 16300  0175CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 16301                           
 16302                           ;stkvar	_u @ sp[(-6)+0]
 16303  0175D4  0EFA               	movlw	-6
 16304  0175D6  0060  F027  FFE3   	movff	btemp+8,plusw1
 16305  0175DC  0EFB               	movlw	-5
 16306  0175DE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16307  0175E4  0EFC               	movlw	-4
 16308  0175E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16309  0175EC  0EFD               	movlw	-3
 16310  0175EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16311                           
 16312                           ;stkvar	_u @ sp[(-6)+0]
 16313  0175F4  0EFA               	movlw	-6
 16314  0175F6  006F FF8C  F009    	movff	plusw1,btemp+8
 16315  0175FC  0EFB               	movlw	-5
 16316  0175FE  006F FF8C  F00A    	movff	plusw1,btemp+9
 16317  017604  0EFC               	movlw	-4
 16318  017606  006F FF8C  F00B    	movff	plusw1,btemp+10
 16319  01760C  0EFD               	movlw	-3
 16320  01760E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16321  017614  0E18               	movlw	24
 16322  017616  D005               	goto	u5570
 16323  017618                     u5575:
 16324  017618  90D8               	bcf	status,0,c
 16325  01761A  320C               	rrcf	(btemp+11)^0,f,c
 16326  01761C  320B               	rrcf	(btemp+10)^0,f,c
 16327  01761E  320A               	rrcf	(btemp+9)^0,f,c
 16328  017620  3209               	rrcf	(btemp+8)^0,f,c
 16329  017622                     u5570:
 16330  017622  2EE8               	decfsz	wreg,f,c
 16331  017624  D7F9               	goto	u5575
 16332  017626  0060  F024  F007   	movff	btemp+8,btemp+6
 16333  01762C  0060  F028  F008   	movff	btemp+9,btemp+7
 16334  017632  0EFF               	movlw	255
 16335  017634  1607               	andwf	(btemp+6)^0,f,c
 16336  017636  0E00               	movlw	0
 16337  017638  1608               	andwf	(btemp+7)^0,f,c
 16338                           
 16339                           ;stkvar	_e @ sp[(-6)+4]
 16340  01763A  0EFE               	movlw	-2
 16341  01763C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 16342  017642  0EFF               	movlw	-1
 16343  017644  0060  F023  FFE3   	movff	btemp+7,plusw1
 16344                           
 16345                           ;stkvar	_e @ sp[(-6)+4]
 16346  01764A  0EFE               	movlw	-2
 16347  01764C  006F FF8C  F001    	movff	plusw1,btemp
 16348  017652  0EFF               	movlw	-1
 16349  017654  50E3               	movf	plusw1,w,c
 16350  017656  1001               	iorwf	btemp^0,w,c
 16351  017658  A4D8               	btfss	status,2,c
 16352  01765A  D023               	goto	l7476
 16353                           
 16354                           ;stkvar	_u @ sp[(-6)+0]
 16355  01765C  0EFA               	movlw	-6
 16356  01765E  006F FF8C  F009    	movff	plusw1,btemp+8
 16357  017664  0EFB               	movlw	-5
 16358  017666  006F FF8C  F00A    	movff	plusw1,btemp+9
 16359  01766C  0EFC               	movlw	-4
 16360  01766E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16361  017674  0EFD               	movlw	-3
 16362  017676  006F FF8C  F00C    	movff	plusw1,btemp+11
 16363  01767C  90D8               	bcf	status,0,c
 16364  01767E  3409               	rlcf	(btemp+8)^0,w,c
 16365  017680  6E05               	movwf	(btemp+4)^0,c
 16366  017682  340A               	rlcf	(btemp+9)^0,w,c
 16367  017684  6E06               	movwf	(btemp+5)^0,c
 16368  017686  340B               	rlcf	(btemp+10)^0,w,c
 16369  017688  6E07               	movwf	(btemp+6)^0,c
 16370  01768A  340C               	rlcf	(btemp+11)^0,w,c
 16371  01768C  6E08               	movwf	(btemp+7)^0,c
 16372  01768E  5005               	movf	(btemp+4)^0,w,c
 16373  017690  1006               	iorwf	(btemp+5)^0,w,c
 16374  017692  1007               	iorwf	(btemp+6)^0,w,c
 16375  017694  1008               	iorwf	(btemp+7)^0,w,c
 16376  017696  A4D8               	btfss	status,2,c
 16377  017698  D002               	goto	l7472
 16378  01769A  0E02               	movlw	2
 16379  01769C  D02E               	goto	L16
 16380  01769E                     l7472:
 16381  01769E  0E03               	movlw	3
 16382  0176A0  D02C               	goto	L16
 16383  0176A2                     l7476:
 16384                           
 16385                           ;stkvar	_e @ sp[(-6)+4]
 16386  0176A2  0EFE               	movlw	-2
 16387  0176A4  28E3               	incf	plusw1,w,c
 16388  0176A6  E128               	bnz	l7482
 16389  0176A8  0EFF               	movlw	-1
 16390  0176AA  50E3               	movf	plusw1,w,c
 16391  0176AC  A4D8               	btfss	status,2,c
 16392  0176AE  D024               	goto	l7482
 16393                           
 16394                           ;stkvar	_u @ sp[(-6)+0]
 16395  0176B0  0EFA               	movlw	-6
 16396  0176B2  006F FF8C  F009    	movff	plusw1,btemp+8
 16397  0176B8  0EFB               	movlw	-5
 16398  0176BA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16399  0176C0  0EFC               	movlw	-4
 16400  0176C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16401  0176C8  0EFD               	movlw	-3
 16402  0176CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16403  0176D0  0E09               	movlw	9
 16404  0176D2                     u5615:
 16405  0176D2  90D8               	bcf	status,0,c
 16406  0176D4  3609               	rlcf	(btemp+8)^0,f,c
 16407  0176D6  360A               	rlcf	(btemp+9)^0,f,c
 16408  0176D8  360B               	rlcf	(btemp+10)^0,f,c
 16409  0176DA  360C               	rlcf	(btemp+11)^0,f,c
 16410  0176DC  2EE8               	decfsz	wreg,f,c
 16411  0176DE  D7F9               	goto	u5615
 16412  0176E0  5009               	movf	(btemp+8)^0,w,c
 16413  0176E2  100A               	iorwf	(btemp+9)^0,w,c
 16414  0176E4  100B               	iorwf	(btemp+10)^0,w,c
 16415  0176E6  100C               	iorwf	(btemp+11)^0,w,c
 16416  0176E8  A4D8               	btfss	status,2,c
 16417  0176EA  D002               	goto	u5620
 16418  0176EC  0E01               	movlw	1
 16419  0176EE  D001               	goto	u5630
 16420  0176F0                     u5620:
 16421  0176F0  0E00               	movlw	0
 16422  0176F2                     u5630:
 16423  0176F2  6E01               	movwf	btemp^0,c
 16424  0176F4  6A02               	clrf	(btemp+1)^0,c
 16425  0176F6  D004               	goto	l2986
 16426  0176F8                     l7482:
 16427  0176F8  0E04               	movlw	4
 16428  0176FA                     L16:
 16429  0176FA  6E01               	movwf	btemp^0,c
 16430  0176FC  0E00               	movlw	0
 16431  0176FE  6E02               	movwf	(btemp+1)^0,c
 16432  017700                     l2986:
 16433                           
 16434                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 16435  017700  0EF6               	movlw	246
 16436  017702  26E1               	addwf	fsr1l,f,c
 16437  017704  0EFF               	movlw	255
 16438  017706  22E2               	addwfc	fsr1h,f,c
 16439  017708  0012               	return		;funcret
 16440  01770A                     __end_of___fpclassifyf:
 16441                           	opt callstack 0
 16442                           
 16443 ;; *************** function ___fltol *****************
 16444 ;; Defined at:
 16445 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 16446 ;; Parameters:    Size  Location     Type
 16447 ;;  f1              4  [STACK] int 
 16448 ;; Auto vars:     Size  Location     Type
 16449 ;;  exp1            1  [STACK] unsigned char 
 16450 ;;  sign1           1  [STACK] unsigned char 
 16451 ;; Return value:  Size  Location     Type
 16452 ;;                  4  [STACK] long 
 16453 ;; Registers used:
 16454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16455 ;; Tracked objects:
 16456 ;;		On entry : 0/1
 16457 ;;		On exit  : 0/0
 16458 ;;		Unchanged: 0/0
 16459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16464 ;;Total ram usage:        0 bytes
 16465 ;; Hardware stack levels used:    1
 16466 ;; Hardware stack levels required when called:   15
 16467 ;; This function calls:
 16468 ;;		Nothing
 16469 ;; This function is called by:
 16470 ;;		_calc_bsoc
 16471 ;;		_init_bsoc
 16472 ;;		_efgtoa
 16473 ;; This function uses a reentrant model
 16474 ;;
 16475                           
 16476                           	psect	text57
 16477  0179FE                     __ptext57:
 16478                           	opt callstack 0
 16479  0179FE                     ___fltol:
 16480                           	opt callstack 0
 16481                           
 16482                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16483  0179FE  52E6               	movf	postinc1,f,c
 16484  017A00  52E6               	movf	postinc1,f,c
 16485                           
 16486                           ;stkvar	_f1 @ sp[(-2)+-4]
 16487                           
 16488                           ;incstack = 0
 16489 ;; hardware stack exceeded
 16490  017A02  0EFA               	movlw	-6
 16491  017A04  006F FF8C  F009    	movff	plusw1,btemp+8
 16492  017A0A  0EFB               	movlw	-5
 16493  017A0C  006F FF8C  F00A    	movff	plusw1,btemp+9
 16494  017A12  0EFC               	movlw	-4
 16495  017A14  006F FF8C  F00B    	movff	plusw1,btemp+10
 16496  017A1A  0EFD               	movlw	-3
 16497  017A1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 16498  017A22  0E18               	movlw	24
 16499  017A24  D005               	goto	u6780
 16500  017A26                     u6785:
 16501  017A26  90D8               	bcf	status,0,c
 16502  017A28  320C               	rrcf	(btemp+11)^0,f,c
 16503  017A2A  320B               	rrcf	(btemp+10)^0,f,c
 16504  017A2C  320A               	rrcf	(btemp+9)^0,f,c
 16505  017A2E  3209               	rrcf	(btemp+8)^0,f,c
 16506  017A30                     u6780:
 16507  017A30  2EE8               	decfsz	wreg,f,c
 16508  017A32  D7F9               	goto	u6785
 16509                           
 16510                           ;stkvar	_exp1 @ sp[(-2)+0]
 16511  017A34  0EFE               	movlw	-2
 16512  017A36  0060  F027  FFE3   	movff	btemp+8,plusw1
 16513  017A3C  0EFE               	movlw	-2
 16514  017A3E  50E3               	movf	plusw1,w,c
 16515  017A40  A4D8               	btfss	status,2,c
 16516  017A42  D006               	goto	l8102
 16517  017A44                     u6790:
 16518  017A44  0E00               	movlw	0
 16519  017A46  6E01               	movwf	btemp^0,c
 16520  017A48  6A02               	clrf	(btemp+1)^0,c
 16521  017A4A  6A03               	clrf	(btemp+2)^0,c
 16522  017A4C  6A04               	clrf	(btemp+3)^0,c
 16523  017A4E  D08B               	goto	l2602
 16524  017A50                     l8102:
 16525                           
 16526                           ;stkvar	_f1 @ sp[(-2)+-4]
 16527  017A50  0EFA               	movlw	-6
 16528  017A52  006F FF8C  F009    	movff	plusw1,btemp+8
 16529  017A58  0EFB               	movlw	-5
 16530  017A5A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16531  017A60  0EFC               	movlw	-4
 16532  017A62  006F FF8C  F00B    	movff	plusw1,btemp+10
 16533  017A68  0EFD               	movlw	-3
 16534  017A6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16535  017A70  0E20               	movlw	32
 16536  017A72  D005               	goto	u6800
 16537  017A74                     u6805:
 16538  017A74  90D8               	bcf	status,0,c
 16539  017A76  320C               	rrcf	(btemp+11)^0,f,c
 16540  017A78  320B               	rrcf	(btemp+10)^0,f,c
 16541  017A7A  320A               	rrcf	(btemp+9)^0,f,c
 16542  017A7C  3209               	rrcf	(btemp+8)^0,f,c
 16543  017A7E                     u6800:
 16544  017A7E  2EE8               	decfsz	wreg,f,c
 16545  017A80  D7F9               	goto	u6805
 16546                           
 16547                           ;stkvar	_sign1 @ sp[(-2)+1]
 16548  017A82  0EFF               	movlw	-1
 16549  017A84  0060  F027  FFE3   	movff	btemp+8,plusw1
 16550                           
 16551                           ;stkvar	_f1 @ sp[(-2)+-4]
 16552  017A8A  0EFC               	movlw	-4
 16553  017A8C  8EE3               	bsf	plusw1,7,c
 16554                           
 16555                           ;stkvar	_f1 @ sp[(-2)+-4]
 16556  017A8E  50E1               	movf	fsr1l,w,c
 16557  017A90  0FFA               	addlw	-6
 16558  017A92  6ED9               	movwf	fsr2l,c
 16559  017A94  50E2               	movf	fsr1h,w,c
 16560  017A96  6EDA               	movwf	fsr2h,c
 16561  017A98  0EFF               	movlw	255
 16562  017A9A  22DA               	addwfc	fsr2h,f,c
 16563  017A9C  0EFF               	movlw	255
 16564  017A9E  16DE               	andwf	postinc2,f,c
 16565  017AA0  0EFF               	movlw	255
 16566  017AA2  16DE               	andwf	postinc2,f,c
 16567  017AA4  0EFF               	movlw	255
 16568  017AA6  16DE               	andwf	postinc2,f,c
 16569  017AA8  0E00               	movlw	0
 16570  017AAA  16DE               	andwf	postinc2,f,c
 16571                           
 16572                           ;stkvar	_exp1 @ sp[(-2)+0]
 16573  017AAC  0EFE               	movlw	-2
 16574  017AAE  006F FF8C  F001    	movff	plusw1,btemp
 16575  017AB4  0E96               	movlw	150
 16576  017AB6  5E01               	subwf	btemp^0,f,c
 16577  017AB8  0EFE               	movlw	-2
 16578  017ABA  0060  F007  FFE3   	movff	btemp,plusw1
 16579                           
 16580                           ;stkvar	_exp1 @ sp[(-2)+0]
 16581  017AC0  0EFE               	movlw	-2
 16582  017AC2  AEE3               	btfss	plusw1,7,c
 16583  017AC4  D014               	goto	l8120
 16584                           
 16585                           ;stkvar	_exp1 @ sp[(-2)+0]
 16586  017AC6  0EFE               	movlw	-2
 16587  017AC8  50E3               	movf	plusw1,w,c
 16588  017ACA  0A80               	xorlw	128
 16589  017ACC  0F97               	addlw	151
 16590  017ACE  A0D8               	btfss	status,0,c
 16591  017AD0  D7B9               	goto	u6790
 16592  017AD2                     l8118:
 16593                           
 16594                           ;stkvar	_f1 @ sp[(-2)+-4]
 16595  017AD2  90D8               	bcf	status,0,c
 16596  017AD4  0EFD               	movlw	-3
 16597  017AD6  32E3               	rrcf	plusw1,f,c
 16598  017AD8  0EFC               	movlw	-4
 16599  017ADA  32E3               	rrcf	plusw1,f,c
 16600  017ADC  0EFB               	movlw	-5
 16601  017ADE  32E3               	rrcf	plusw1,f,c
 16602  017AE0  0EFA               	movlw	-6
 16603  017AE2  32E3               	rrcf	plusw1,f,c
 16604                           
 16605                           ;stkvar	_exp1 @ sp[(-2)+0]
 16606  017AE4  0EFE               	movlw	-2
 16607  017AE6  2AE3               	incf	plusw1,f,c
 16608  017AE8  B4D8               	btfsc	status,2,c
 16609  017AEA  D018               	goto	u6850
 16610  017AEC  D7F2               	goto	l8118
 16611  017AEE                     l8120:
 16612                           
 16613                           ;stkvar	_exp1 @ sp[(-2)+0]
 16614  017AEE  0EFE               	movlw	-2
 16615  017AF0  006F FF8C  F001    	movff	plusw1,btemp
 16616  017AF6  0E1F               	movlw	31
 16617  017AF8  6401               	cpfsgt	btemp^0,c
 16618  017AFA  D00C               	goto	l8128
 16619  017AFC  D7A3               	goto	u6790
 16620  017AFE                     l8126:
 16621                           
 16622                           ;stkvar	_f1 @ sp[(-2)+-4]
 16623  017AFE  90D8               	bcf	status,0,c
 16624  017B00  0EFA               	movlw	-6
 16625  017B02  36E3               	rlcf	plusw1,f,c
 16626  017B04  0EFB               	movlw	-5
 16627  017B06  36E3               	rlcf	plusw1,f,c
 16628  017B08  0EFC               	movlw	-4
 16629  017B0A  36E3               	rlcf	plusw1,f,c
 16630  017B0C  0EFD               	movlw	-3
 16631  017B0E  36E3               	rlcf	plusw1,f,c
 16632                           
 16633                           ;stkvar	_exp1 @ sp[(-2)+0]
 16634  017B10  0EFE               	movlw	-2
 16635  017B12  06E3               	decf	plusw1,f,c
 16636  017B14                     l8128:
 16637                           
 16638                           ;stkvar	_exp1 @ sp[(-2)+0]
 16639  017B14  0EFE               	movlw	-2
 16640  017B16  50E3               	movf	plusw1,w,c
 16641  017B18  A4D8               	btfss	status,2,c
 16642  017B1A  D7F1               	goto	l8126
 16643  017B1C                     u6850:
 16644                           
 16645                           ;stkvar	_sign1 @ sp[(-2)+1]
 16646  017B1C  0EFF               	movlw	-1
 16647  017B1E  50E3               	movf	plusw1,w,c
 16648  017B20  B4D8               	btfsc	status,2,c
 16649  017B22  D011               	goto	u6870
 16650                           
 16651                           ;stkvar	_f1 @ sp[(-2)+-4]
 16652                           ;stkvar	_f1 @ sp[(-2)+-4]
 16653  017B24  0EFA               	movlw	-6
 16654  017B26  6CE3               	negf	plusw1,c
 16655  017B28  0EFB               	movlw	-5
 16656  017B2A  1EE3               	comf	plusw1,f,c
 16657  017B2C  0EFC               	movlw	-4
 16658  017B2E  1EE3               	comf	plusw1,f,c
 16659  017B30  0EFD               	movlw	-3
 16660  017B32  1EE3               	comf	plusw1,f,c
 16661  017B34  E308               	bnc	u6870
 16662  017B36  0EFB               	movlw	-5
 16663  017B38  2AE3               	incf	plusw1,f,c
 16664  017B3A  E305               	bnc	u6870
 16665  017B3C  0EFC               	movlw	-4
 16666  017B3E  2AE3               	incf	plusw1,f,c
 16667  017B40  E302               	bnc	u6870
 16668  017B42  0EFD               	movlw	-3
 16669  017B44  2AE3               	incf	plusw1,f,c
 16670  017B46                     u6870:
 16671                           
 16672                           ;stkvar	_f1 @ sp[(-2)+-4]
 16673  017B46  0EFA               	movlw	-6
 16674  017B48  006F FF8C  F001    	movff	plusw1,btemp
 16675  017B4E  0EFB               	movlw	-5
 16676  017B50  006F FF8C  F002    	movff	plusw1,btemp+1
 16677  017B56  0EFC               	movlw	-4
 16678  017B58  006F FF8C  F003    	movff	plusw1,btemp+2
 16679  017B5E  0EFD               	movlw	-3
 16680  017B60  006F FF8C  F004    	movff	plusw1,btemp+3
 16681  017B66                     l2602:
 16682                           
 16683                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16684  017B66  0EFA               	movlw	250
 16685  017B68  26E1               	addwf	fsr1l,f,c
 16686  017B6A  0EFF               	movlw	255
 16687  017B6C  22E2               	addwfc	fsr1h,f,c
 16688  017B6E  0012               	return		;funcret
 16689  017B70                     __end_of___fltol:
 16690                           	opt callstack 0
 16691                           
 16692 ;; *************** function ___flneg *****************
 16693 ;; Defined at:
 16694 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 16695 ;; Parameters:    Size  Location     Type
 16696 ;;  f1              4  [STACK] long 
 16697 ;; Auto vars:     Size  Location     Type
 16698 ;;		None
 16699 ;; Return value:  Size  Location     Type
 16700 ;;                  4  [STACK] long 
 16701 ;; Registers used:
 16702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 16703 ;; Tracked objects:
 16704 ;;		On entry : 0/0
 16705 ;;		On exit  : 0/0
 16706 ;;		Unchanged: 0/0
 16707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16712 ;;Total ram usage:        0 bytes
 16713 ;; Hardware stack levels used:    1
 16714 ;; Hardware stack levels required when called:   15
 16715 ;; This function calls:
 16716 ;;		Nothing
 16717 ;; This function is called by:
 16718 ;;		_calc_bsoc
 16719 ;;		_efgtoa
 16720 ;; This function uses a reentrant model
 16721 ;;
 16722                           
 16723                           	psect	text58
 16724  019EF0                     __ptext58:
 16725                           	opt callstack 0
 16726  019EF0                     ___flneg:
 16727                           	opt callstack 0
 16728                           
 16729                           ;stkvar	_f1 @ sp[(0)+-4]
 16730                           
 16731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16732                           ;incstack = 0
 16733 ;; hardware stack exceeded
 16734  019EF0  0EFC               	movlw	-4
 16735  019EF2  50E3               	movf	plusw1,w,c
 16736  019EF4  E10A               	bnz	u6770
 16737  019EF6  0EFD               	movlw	-3
 16738  019EF8  50E3               	movf	plusw1,w,c
 16739  019EFA  E107               	bnz	u6770
 16740  019EFC  0EFE               	movlw	-2
 16741  019EFE  50E3               	movf	plusw1,w,c
 16742  019F00  E104               	bnz	u6770
 16743  019F02  0EFF               	movlw	-1
 16744  019F04  50E3               	movf	plusw1,w,c
 16745  019F06  B4D8               	btfsc	status,2,c
 16746  019F08  D002               	goto	l8092
 16747  019F0A                     u6770:
 16748                           
 16749                           ;stkvar	_f1 @ sp[(0)+-4]
 16750  019F0A  0EFF               	movlw	-1
 16751  019F0C  7EE3               	btg	plusw1,7,c
 16752  019F0E                     l8092:
 16753                           
 16754                           ;stkvar	_f1 @ sp[(0)+-4]
 16755  019F0E  0EFC               	movlw	-4
 16756  019F10  006F FF8C  F001    	movff	plusw1,btemp
 16757  019F16  0EFD               	movlw	-3
 16758  019F18  006F FF8C  F002    	movff	plusw1,btemp+1
 16759  019F1E  0EFE               	movlw	-2
 16760  019F20  006F FF8C  F003    	movff	plusw1,btemp+2
 16761  019F26  0EFF               	movlw	-1
 16762  019F28  006F FF8C  F004    	movff	plusw1,btemp+3
 16763                           
 16764                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16765  019F2E  52E5               	movf	postdec1,f,c
 16766  019F30  52E5               	movf	postdec1,f,c
 16767  019F32  52E5               	movf	postdec1,f,c
 16768  019F34  52E5               	movf	postdec1,f,c
 16769  019F36  0012               	return		;funcret
 16770  019F38                     __end_of___flneg:
 16771                           	opt callstack 0
 16772                           
 16773 ;; *************** function ___fleq *****************
 16774 ;; Defined at:
 16775 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16776 ;; Parameters:    Size  Location     Type
 16777 ;;  ff1             4  [STACK] long 
 16778 ;;  ff2             4  [STACK] long 
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;		None
 16781 ;; Return value:  Size  Location     Type
 16782 ;;		None               void
 16783 ;; Registers used:
 16784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16785 ;; Tracked objects:
 16786 ;;		On entry : 0/0
 16787 ;;		On exit  : 0/0
 16788 ;;		Unchanged: 0/0
 16789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16794 ;;Total ram usage:        0 bytes
 16795 ;; Hardware stack levels used:    1
 16796 ;; Hardware stack levels required when called:   15
 16797 ;; This function calls:
 16798 ;;		Nothing
 16799 ;; This function is called by:
 16800 ;;		_efgtoa
 16801 ;; This function uses a reentrant model
 16802 ;;
 16803                           
 16804                           	psect	text59
 16805  018EB6                     __ptext59:
 16806                           	opt callstack 0
 16807  018EB6                     ___fleq:
 16808                           	opt callstack 0
 16809                           
 16810                           ;stkvar	_ff1 @ sp[(0)+-4]
 16811                           
 16812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16813                           ;incstack = 0
 16814 ;; hardware stack exceeded
 16815  018EB6  50E1               	movf	fsr1l,w,c
 16816  018EB8  0FFC               	addlw	-4
 16817  018EBA  6ED9               	movwf	fsr2l,c
 16818  018EBC  50E2               	movf	fsr1h,w,c
 16819  018EBE  6EDA               	movwf	fsr2h,c
 16820  018EC0  0EFF               	movlw	255
 16821  018EC2  22DA               	addwfc	fsr2h,f,c
 16822  018EC4  0E00               	movlw	0
 16823  018EC6  14DE               	andwf	postinc2,w,c
 16824  018EC8  6E09               	movwf	(btemp+8)^0,c
 16825  018ECA  0E00               	movlw	0
 16826  018ECC  14DE               	andwf	postinc2,w,c
 16827  018ECE  6E0A               	movwf	(btemp+9)^0,c
 16828  018ED0  0E80               	movlw	128
 16829  018ED2  14DE               	andwf	postinc2,w,c
 16830  018ED4  6E0B               	movwf	(btemp+10)^0,c
 16831  018ED6  0E7F               	movlw	127
 16832  018ED8  14DE               	andwf	postinc2,w,c
 16833  018EDA  6E0C               	movwf	(btemp+11)^0,c
 16834  018EDC  5009               	movf	(btemp+8)^0,w,c
 16835  018EDE  100A               	iorwf	(btemp+9)^0,w,c
 16836  018EE0  100B               	iorwf	(btemp+10)^0,w,c
 16837  018EE2  100C               	iorwf	(btemp+11)^0,w,c
 16838  018EE4  A4D8               	btfss	status,2,c
 16839  018EE6  D008               	goto	l8050
 16840                           
 16841                           ;stkvar	_ff1 @ sp[(0)+-4]
 16842  018EE8  0EFC               	movlw	-4
 16843  018EEA  6AE3               	clrf	plusw1,c
 16844  018EEC  0EFD               	movlw	-3
 16845  018EEE  6AE3               	clrf	plusw1,c
 16846  018EF0  0EFE               	movlw	-2
 16847  018EF2  6AE3               	clrf	plusw1,c
 16848  018EF4  0EFF               	movlw	-1
 16849  018EF6  6AE3               	clrf	plusw1,c
 16850  018EF8                     l8050:
 16851                           
 16852                           ;stkvar	_ff2 @ sp[(0)+-8]
 16853  018EF8  50E1               	movf	fsr1l,w,c
 16854  018EFA  0FF8               	addlw	-8
 16855  018EFC  6ED9               	movwf	fsr2l,c
 16856  018EFE  50E2               	movf	fsr1h,w,c
 16857  018F00  6EDA               	movwf	fsr2h,c
 16858  018F02  0EFF               	movlw	255
 16859  018F04  22DA               	addwfc	fsr2h,f,c
 16860  018F06  0E00               	movlw	0
 16861  018F08  14DE               	andwf	postinc2,w,c
 16862  018F0A  6E09               	movwf	(btemp+8)^0,c
 16863  018F0C  0E00               	movlw	0
 16864  018F0E  14DE               	andwf	postinc2,w,c
 16865  018F10  6E0A               	movwf	(btemp+9)^0,c
 16866  018F12  0E80               	movlw	128
 16867  018F14  14DE               	andwf	postinc2,w,c
 16868  018F16  6E0B               	movwf	(btemp+10)^0,c
 16869  018F18  0E7F               	movlw	127
 16870  018F1A  14DE               	andwf	postinc2,w,c
 16871  018F1C  6E0C               	movwf	(btemp+11)^0,c
 16872  018F1E  5009               	movf	(btemp+8)^0,w,c
 16873  018F20  100A               	iorwf	(btemp+9)^0,w,c
 16874  018F22  100B               	iorwf	(btemp+10)^0,w,c
 16875  018F24  100C               	iorwf	(btemp+11)^0,w,c
 16876  018F26  A4D8               	btfss	status,2,c
 16877  018F28  D008               	goto	l8054
 16878                           
 16879                           ;stkvar	_ff2 @ sp[(0)+-8]
 16880  018F2A  0EF8               	movlw	-8
 16881  018F2C  6AE3               	clrf	plusw1,c
 16882  018F2E  0EF9               	movlw	-7
 16883  018F30  6AE3               	clrf	plusw1,c
 16884  018F32  0EFA               	movlw	-6
 16885  018F34  6AE3               	clrf	plusw1,c
 16886  018F36  0EFB               	movlw	-5
 16887  018F38  6AE3               	clrf	plusw1,c
 16888  018F3A                     l8054:
 16889                           
 16890                           ;stkvar	_ff2 @ sp[(0)+-8]
 16891                           ;stkvar	_ff1 @ sp[(0)+-4]
 16892  018F3A  50E1               	movf	fsr1l,w,c
 16893  018F3C  0FFC               	addlw	-4
 16894  018F3E  6ED9               	movwf	fsr2l,c
 16895  018F40  50E2               	movf	fsr1h,w,c
 16896  018F42  6EDA               	movwf	fsr2h,c
 16897  018F44  0EFF               	movlw	255
 16898  018F46  22DA               	addwfc	fsr2h,f,c
 16899  018F48  0EF8               	movlw	-8
 16900  018F4A  50E3               	movf	plusw1,w,c
 16901  018F4C  18DE               	xorwf	postinc2,w,c
 16902  018F4E  E10D               	bnz	u6710
 16903  018F50  0EF9               	movlw	-7
 16904  018F52  50E3               	movf	plusw1,w,c
 16905  018F54  18DE               	xorwf	postinc2,w,c
 16906  018F56  E109               	bnz	u6710
 16907  018F58  0EFA               	movlw	-6
 16908  018F5A  50E3               	movf	plusw1,w,c
 16909  018F5C  18DE               	xorwf	postinc2,w,c
 16910  018F5E  E105               	bnz	u6710
 16911  018F60  0EFB               	movlw	-5
 16912  018F62  50E3               	movf	plusw1,w,c
 16913  018F64  18DE               	xorwf	postinc2,w,c
 16914  018F66  B4D8               	btfsc	status,2,c
 16915  018F68  D002               	goto	l8058
 16916  018F6A                     u6710:
 16917  018F6A  9001               	bcf	btemp& (0+255),0,c
 16918  018F6C  D001               	goto	l2564
 16919  018F6E                     l8058:
 16920  018F6E  8001               	bsf	btemp& (0+255),0,c
 16921  018F70                     l2564:
 16922                           
 16923                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16924  018F70  0EF8               	movlw	248
 16925  018F72  26E1               	addwf	fsr1l,f,c
 16926  018F74  0EFF               	movlw	255
 16927  018F76  22E2               	addwfc	fsr1h,f,c
 16928  018F78  0012               	return		;funcret
 16929  018F7A                     __end_of___fleq:
 16930                           	opt callstack 0
 16931                           
 16932 ;; *************** function ___awmod *****************
 16933 ;; Defined at:
 16934 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16935 ;; Parameters:    Size  Location     Type
 16936 ;;  dividend        2  [STACK] int 
 16937 ;;  divisor         2  [STACK] int 
 16938 ;; Auto vars:     Size  Location     Type
 16939 ;;  sign            1  [STACK] unsigned char 
 16940 ;;  counter         1  [STACK] unsigned char 
 16941 ;; Return value:  Size  Location     Type
 16942 ;;                  2  [STACK] int 
 16943 ;; Registers used:
 16944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16945 ;; Tracked objects:
 16946 ;;		On entry : 0/0
 16947 ;;		On exit  : 0/0
 16948 ;;		Unchanged: 0/0
 16949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16954 ;;Total ram usage:        0 bytes
 16955 ;; Hardware stack levels used:    1
 16956 ;; Hardware stack levels required when called:   15
 16957 ;; This function calls:
 16958 ;;		Nothing
 16959 ;; This function is called by:
 16960 ;;		_efgtoa
 16961 ;; This function uses a reentrant model
 16962 ;;
 16963                           
 16964                           	psect	text60
 16965  0185C2                     __ptext60:
 16966                           	opt callstack 0
 16967  0185C2                     ___awmod:
 16968                           	opt callstack 0
 16969                           
 16970                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16971  0185C2  52E6               	movf	postinc1,f,c
 16972  0185C4  52E6               	movf	postinc1,f,c
 16973                           
 16974                           ;stkvar	_sign @ sp[(-2)+0]
 16975                           
 16976                           ;incstack = 0
 16977 ;; hardware stack exceeded
 16978  0185C6  0EFE               	movlw	-2
 16979  0185C8  6AE3               	clrf	plusw1,c
 16980                           
 16981                           ;stkvar	_dividend @ sp[(-2)+-2]
 16982  0185CA  0EFD               	movlw	-3
 16983  0185CC  AEE3               	btfss	plusw1,7,c
 16984  0185CE  D009               	goto	l8016
 16985                           
 16986                           ;stkvar	_dividend @ sp[(-2)+-2]
 16987                           ;stkvar	_dividend @ sp[(-2)+-2]
 16988  0185D0  0EFC               	movlw	-4
 16989  0185D2  6CE3               	negf	plusw1,c
 16990  0185D4  0EFD               	movlw	-3
 16991  0185D6  1EE3               	comf	plusw1,f,c
 16992  0185D8  B0D8               	btfsc	status,0,c
 16993  0185DA  2AE3               	incf	plusw1,f,c
 16994                           
 16995                           ;stkvar	_sign @ sp[(-2)+0]
 16996  0185DC  0EFE               	movlw	-2
 16997  0185DE  6AE3               	clrf	plusw1,c
 16998  0185E0  2AE3               	incf	plusw1,f,c
 16999  0185E2                     l8016:
 17000                           
 17001                           ;stkvar	_divisor @ sp[(-2)+-4]
 17002  0185E2  0EFB               	movlw	-5
 17003  0185E4  AEE3               	btfss	plusw1,7,c
 17004  0185E6  D006               	goto	l8020
 17005                           
 17006                           ;stkvar	_divisor @ sp[(-2)+-4]
 17007                           ;stkvar	_divisor @ sp[(-2)+-4]
 17008  0185E8  0EFA               	movlw	-6
 17009  0185EA  6CE3               	negf	plusw1,c
 17010  0185EC  0EFB               	movlw	-5
 17011  0185EE  1EE3               	comf	plusw1,f,c
 17012  0185F0  B0D8               	btfsc	status,0,c
 17013  0185F2  2AE3               	incf	plusw1,f,c
 17014  0185F4                     l8020:
 17015                           
 17016                           ;stkvar	_divisor @ sp[(-2)+-4]
 17017  0185F4  0EFA               	movlw	-6
 17018  0185F6  006F FF8C  F001    	movff	plusw1,btemp
 17019  0185FC  0EFB               	movlw	-5
 17020  0185FE  50E3               	movf	plusw1,w,c
 17021  018600  1001               	iorwf	btemp^0,w,c
 17022  018602  B4D8               	btfsc	status,2,c
 17023  018604  D053               	goto	u6670
 17024                           
 17025                           ;stkvar	_counter @ sp[(-2)+1]
 17026  018606  0EFF               	movlw	-1
 17027  018608  6AE3               	clrf	plusw1,c
 17028  01860A  D012               	goto	L17
 17029  01860C                     l8024:
 17030                           
 17031                           ;stkvar	_divisor @ sp[(-2)+-4]
 17032  01860C  0EFA               	movlw	-6
 17033  01860E  50E3               	movf	plusw1,w,c
 17034  018610  90D8               	bcf	status,0,c
 17035  018612  34E8               	rlcf	wreg,w,c
 17036  018614  6E01               	movwf	btemp^0,c
 17037  018616  0EFA               	movlw	-6
 17038  018618  0060  F007  FFE3   	movff	btemp,plusw1
 17039  01861E  0EFB               	movlw	-5
 17040  018620  50E3               	movf	plusw1,w,c
 17041  018622  34E8               	rlcf	wreg,w,c
 17042  018624  6E01               	movwf	btemp^0,c
 17043  018626  0EFB               	movlw	-5
 17044  018628  0060  F007  FFE3   	movff	btemp,plusw1
 17045                           
 17046                           ;stkvar	_counter @ sp[(-2)+1]
 17047  01862E  0EFF               	movlw	-1
 17048  018630                     L17:
 17049  018630  2AE3               	incf	plusw1,f,c
 17050                           
 17051                           ;stkvar	_divisor @ sp[(-2)+-4]
 17052  018632  0EFB               	movlw	-5
 17053  018634  AEE3               	btfss	plusw1,7,c
 17054  018636  D7EA               	goto	l8024
 17055  018638                     u6650:
 17056                           
 17057                           ;stkvar	_divisor @ sp[(-2)+-4]
 17058  018638  0EFA               	movlw	-6
 17059  01863A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17060  018640  0EFB               	movlw	-5
 17061  018642  006F FF8C  F00C    	movff	plusw1,btemp+11
 17062                           
 17063                           ;stkvar	_dividend @ sp[(-2)+-2]
 17064  018648  0EFC               	movlw	-4
 17065  01864A  006F FF8C  F009    	movff	plusw1,btemp+8
 17066  018650  0EFD               	movlw	-3
 17067  018652  006F FF8C  F00A    	movff	plusw1,btemp+9
 17068  018658  500B               	movf	(btemp+10)^0,w,c
 17069  01865A  5C09               	subwf	(btemp+8)^0,w,c
 17070  01865C  500C               	movf	(btemp+11)^0,w,c
 17071  01865E  580A               	subwfb	(btemp+9)^0,w,c
 17072  018660  A0D8               	btfss	status,0,c
 17073  018662  D014               	goto	l8034
 17074                           
 17075                           ;stkvar	_divisor @ sp[(-2)+-4]
 17076                           ;stkvar	_dividend @ sp[(-2)+-2]
 17077  018664  0EFC               	movlw	-4
 17078  018666  50E3               	movf	plusw1,w,c
 17079  018668  6E01               	movwf	btemp^0,c
 17080  01866A  0EFA               	movlw	-6
 17081  01866C  50E3               	movf	plusw1,w,c
 17082  01866E  5E01               	subwf	btemp^0,f,c
 17083  018670  0EFC               	movlw	-4
 17084  018672  0060  F007  FFE3   	movff	btemp,plusw1
 17085  018678  0EFD               	movlw	-3
 17086  01867A  50E3               	movf	plusw1,w,c
 17087  01867C  6E01               	movwf	btemp^0,c
 17088  01867E  0EFB               	movlw	-5
 17089  018680  50E3               	movf	plusw1,w,c
 17090  018682  5A01               	subwfb	btemp^0,f,c
 17091  018684  0EFD               	movlw	-3
 17092  018686  0060  F007  FFE3   	movff	btemp,plusw1
 17093  01868C                     l8034:
 17094                           
 17095                           ;stkvar	_divisor @ sp[(-2)+-4]
 17096  01868C  90D8               	bcf	status,0,c
 17097  01868E  0EFB               	movlw	-5
 17098  018690  32E3               	rrcf	plusw1,f,c
 17099  018692  0EFA               	movlw	-6
 17100  018694  32E3               	rrcf	plusw1,f,c
 17101                           
 17102                           ;stkvar	_counter @ sp[(-2)+1]
 17103  018696  0EFF               	movlw	-1
 17104  018698  50E3               	movf	plusw1,w,c
 17105  01869A  6E01               	movwf	btemp^0,c
 17106  01869C  0E01               	movlw	1
 17107  01869E  5E01               	subwf	btemp^0,f,c
 17108  0186A0  0EFF               	movlw	-1
 17109  0186A2  0060  F007  FFE3   	movff	btemp,plusw1
 17110  0186A8  A4D8               	btfss	status,2,c
 17111  0186AA  D7C6               	goto	u6650
 17112  0186AC                     u6670:
 17113                           
 17114                           ;stkvar	_sign @ sp[(-2)+0]
 17115  0186AC  0EFE               	movlw	-2
 17116  0186AE  50E3               	movf	plusw1,w,c
 17117  0186B0  B4D8               	btfsc	status,2,c
 17118  0186B2  D006               	goto	l8042
 17119                           
 17120                           ;stkvar	_dividend @ sp[(-2)+-2]
 17121                           ;stkvar	_dividend @ sp[(-2)+-2]
 17122  0186B4  0EFC               	movlw	-4
 17123  0186B6  6CE3               	negf	plusw1,c
 17124  0186B8  0EFD               	movlw	-3
 17125  0186BA  1EE3               	comf	plusw1,f,c
 17126  0186BC  B0D8               	btfsc	status,0,c
 17127  0186BE  2AE3               	incf	plusw1,f,c
 17128  0186C0                     l8042:
 17129                           
 17130                           ;stkvar	_dividend @ sp[(-2)+-2]
 17131  0186C0  0EFC               	movlw	-4
 17132  0186C2  006F FF8C  F001    	movff	plusw1,btemp
 17133  0186C8  0EFD               	movlw	-3
 17134  0186CA  006F FF8C  F002    	movff	plusw1,btemp+1
 17135                           
 17136                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17137  0186D0  0EFA               	movlw	250
 17138  0186D2  26E1               	addwf	fsr1l,f,c
 17139  0186D4  0EFF               	movlw	255
 17140  0186D6  22E2               	addwfc	fsr1h,f,c
 17141  0186D8  0012               	return		;funcret
 17142  0186DA                     __end_of___awmod:
 17143                           	opt callstack 0
 17144                           
 17145 ;; *************** function ___awdiv *****************
 17146 ;; Defined at:
 17147 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17148 ;; Parameters:    Size  Location     Type
 17149 ;;  dividend        2  [STACK] int 
 17150 ;;  divisor         2  [STACK] int 
 17151 ;; Auto vars:     Size  Location     Type
 17152 ;;  quotient        2  [STACK] int 
 17153 ;;  sign            1  [STACK] unsigned char 
 17154 ;;  counter         1  [STACK] unsigned char 
 17155 ;; Return value:  Size  Location     Type
 17156 ;;                  2  [STACK] int 
 17157 ;; Registers used:
 17158 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17159 ;; Tracked objects:
 17160 ;;		On entry : 0/0
 17161 ;;		On exit  : 0/0
 17162 ;;		Unchanged: 0/0
 17163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17168 ;;Total ram usage:        0 bytes
 17169 ;; Hardware stack levels used:    1
 17170 ;; Hardware stack levels required when called:   15
 17171 ;; This function calls:
 17172 ;;		Nothing
 17173 ;; This function is called by:
 17174 ;;		_efgtoa
 17175 ;; This function uses a reentrant model
 17176 ;;
 17177                           
 17178                           	psect	text61
 17179  017FA6                     __ptext61:
 17180                           	opt callstack 0
 17181  017FA6                     ___awdiv:
 17182                           	opt callstack 0
 17183                           
 17184                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17185  017FA6  52E6               	movf	postinc1,f,c
 17186  017FA8  52E6               	movf	postinc1,f,c
 17187  017FAA  52E6               	movf	postinc1,f,c
 17188  017FAC  52E6               	movf	postinc1,f,c
 17189                           
 17190                           ;stkvar	_sign @ sp[(-4)+2]
 17191                           
 17192                           ;incstack = 0
 17193 ;; hardware stack exceeded
 17194  017FAE  0EFE               	movlw	-2
 17195  017FB0  6AE3               	clrf	plusw1,c
 17196                           
 17197                           ;stkvar	_divisor @ sp[(-4)+-4]
 17198  017FB2  0EF9               	movlw	-7
 17199  017FB4  AEE3               	btfss	plusw1,7,c
 17200  017FB6  D009               	goto	l7970
 17201                           
 17202                           ;stkvar	_divisor @ sp[(-4)+-4]
 17203                           ;stkvar	_divisor @ sp[(-4)+-4]
 17204  017FB8  0EF8               	movlw	-8
 17205  017FBA  6CE3               	negf	plusw1,c
 17206  017FBC  0EF9               	movlw	-7
 17207  017FBE  1EE3               	comf	plusw1,f,c
 17208  017FC0  B0D8               	btfsc	status,0,c
 17209  017FC2  2AE3               	incf	plusw1,f,c
 17210                           
 17211                           ;stkvar	_sign @ sp[(-4)+2]
 17212  017FC4  0EFE               	movlw	-2
 17213  017FC6  6AE3               	clrf	plusw1,c
 17214  017FC8  2AE3               	incf	plusw1,f,c
 17215  017FCA                     l7970:
 17216                           
 17217                           ;stkvar	_dividend @ sp[(-4)+-2]
 17218  017FCA  0EFB               	movlw	-5
 17219  017FCC  AEE3               	btfss	plusw1,7,c
 17220  017FCE  D008               	goto	l7976
 17221                           
 17222                           ;stkvar	_dividend @ sp[(-4)+-2]
 17223                           ;stkvar	_dividend @ sp[(-4)+-2]
 17224  017FD0  0EFA               	movlw	-6
 17225  017FD2  6CE3               	negf	plusw1,c
 17226  017FD4  0EFB               	movlw	-5
 17227  017FD6  1EE3               	comf	plusw1,f,c
 17228  017FD8  B0D8               	btfsc	status,0,c
 17229  017FDA  2AE3               	incf	plusw1,f,c
 17230                           
 17231                           ;stkvar	_sign @ sp[(-4)+2]
 17232  017FDC  0EFE               	movlw	-2
 17233  017FDE  70E3               	btg	plusw1,0,c
 17234  017FE0                     l7976:
 17235                           
 17236                           ;stkvar	_quotient @ sp[(-4)+0]
 17237  017FE0  0EFC               	movlw	-4
 17238  017FE2  6AE3               	clrf	plusw1,c
 17239  017FE4  0EFD               	movlw	-3
 17240  017FE6  6AE3               	clrf	plusw1,c
 17241                           
 17242                           ;stkvar	_divisor @ sp[(-4)+-4]
 17243  017FE8  0EF8               	movlw	-8
 17244  017FEA  006F FF8C  F001    	movff	plusw1,btemp
 17245  017FF0  0EF9               	movlw	-7
 17246  017FF2  50E3               	movf	plusw1,w,c
 17247  017FF4  1001               	iorwf	btemp^0,w,c
 17248  017FF6  B4D8               	btfsc	status,2,c
 17249  017FF8  D066               	goto	u6600
 17250                           
 17251                           ;stkvar	_counter @ sp[(-4)+3]
 17252  017FFA  0EFF               	movlw	-1
 17253  017FFC  6AE3               	clrf	plusw1,c
 17254  017FFE  D012               	goto	L18
 17255  018000                     l7982:
 17256                           
 17257                           ;stkvar	_divisor @ sp[(-4)+-4]
 17258  018000  0EF8               	movlw	-8
 17259  018002  50E3               	movf	plusw1,w,c
 17260  018004  90D8               	bcf	status,0,c
 17261  018006  34E8               	rlcf	wreg,w,c
 17262  018008  6E01               	movwf	btemp^0,c
 17263  01800A  0EF8               	movlw	-8
 17264  01800C  0060  F007  FFE3   	movff	btemp,plusw1
 17265  018012  0EF9               	movlw	-7
 17266  018014  50E3               	movf	plusw1,w,c
 17267  018016  34E8               	rlcf	wreg,w,c
 17268  018018  6E01               	movwf	btemp^0,c
 17269  01801A  0EF9               	movlw	-7
 17270  01801C  0060  F007  FFE3   	movff	btemp,plusw1
 17271                           
 17272                           ;stkvar	_counter @ sp[(-4)+3]
 17273  018022  0EFF               	movlw	-1
 17274  018024                     L18:
 17275  018024  2AE3               	incf	plusw1,f,c
 17276                           
 17277                           ;stkvar	_divisor @ sp[(-4)+-4]
 17278  018026  0EF9               	movlw	-7
 17279  018028  AEE3               	btfss	plusw1,7,c
 17280  01802A  D7EA               	goto	l7982
 17281  01802C                     u6580:
 17282                           
 17283                           ;stkvar	_quotient @ sp[(-4)+0]
 17284  01802C  0EFC               	movlw	-4
 17285  01802E  50E3               	movf	plusw1,w,c
 17286  018030  90D8               	bcf	status,0,c
 17287  018032  34E8               	rlcf	wreg,w,c
 17288  018034  6E01               	movwf	btemp^0,c
 17289  018036  0EFC               	movlw	-4
 17290  018038  0060  F007  FFE3   	movff	btemp,plusw1
 17291  01803E  0EFD               	movlw	-3
 17292  018040  50E3               	movf	plusw1,w,c
 17293  018042  34E8               	rlcf	wreg,w,c
 17294  018044  6E01               	movwf	btemp^0,c
 17295  018046  0EFD               	movlw	-3
 17296  018048  0060  F007  FFE3   	movff	btemp,plusw1
 17297                           
 17298                           ;stkvar	_divisor @ sp[(-4)+-4]
 17299  01804E  0EF8               	movlw	-8
 17300  018050  006F FF8C  F00B    	movff	plusw1,btemp+10
 17301  018056  0EF9               	movlw	-7
 17302  018058  006F FF8C  F00C    	movff	plusw1,btemp+11
 17303                           
 17304                           ;stkvar	_dividend @ sp[(-4)+-2]
 17305  01805E  0EFA               	movlw	-6
 17306  018060  006F FF8C  F009    	movff	plusw1,btemp+8
 17307  018066  0EFB               	movlw	-5
 17308  018068  006F FF8C  F00A    	movff	plusw1,btemp+9
 17309  01806E  500B               	movf	(btemp+10)^0,w,c
 17310  018070  5C09               	subwf	(btemp+8)^0,w,c
 17311  018072  500C               	movf	(btemp+11)^0,w,c
 17312  018074  580A               	subwfb	(btemp+9)^0,w,c
 17313  018076  A0D8               	btfss	status,0,c
 17314  018078  D016               	goto	l7996
 17315                           
 17316                           ;stkvar	_divisor @ sp[(-4)+-4]
 17317                           ;stkvar	_dividend @ sp[(-4)+-2]
 17318  01807A  0EFA               	movlw	-6
 17319  01807C  50E3               	movf	plusw1,w,c
 17320  01807E  6E01               	movwf	btemp^0,c
 17321  018080  0EF8               	movlw	-8
 17322  018082  50E3               	movf	plusw1,w,c
 17323  018084  5E01               	subwf	btemp^0,f,c
 17324  018086  0EFA               	movlw	-6
 17325  018088  0060  F007  FFE3   	movff	btemp,plusw1
 17326  01808E  0EFB               	movlw	-5
 17327  018090  50E3               	movf	plusw1,w,c
 17328  018092  6E01               	movwf	btemp^0,c
 17329  018094  0EF9               	movlw	-7
 17330  018096  50E3               	movf	plusw1,w,c
 17331  018098  5A01               	subwfb	btemp^0,f,c
 17332  01809A  0EFB               	movlw	-5
 17333  01809C  0060  F007  FFE3   	movff	btemp,plusw1
 17334                           
 17335                           ;stkvar	_quotient @ sp[(-4)+0]
 17336  0180A2  0EFC               	movlw	-4
 17337  0180A4  80E3               	bsf	plusw1,0,c
 17338  0180A6                     l7996:
 17339                           
 17340                           ;stkvar	_divisor @ sp[(-4)+-4]
 17341  0180A6  90D8               	bcf	status,0,c
 17342  0180A8  0EF9               	movlw	-7
 17343  0180AA  32E3               	rrcf	plusw1,f,c
 17344  0180AC  0EF8               	movlw	-8
 17345  0180AE  32E3               	rrcf	plusw1,f,c
 17346                           
 17347                           ;stkvar	_counter @ sp[(-4)+3]
 17348  0180B0  0EFF               	movlw	-1
 17349  0180B2  50E3               	movf	plusw1,w,c
 17350  0180B4  6E01               	movwf	btemp^0,c
 17351  0180B6  0E01               	movlw	1
 17352  0180B8  5E01               	subwf	btemp^0,f,c
 17353  0180BA  0EFF               	movlw	-1
 17354  0180BC  0060  F007  FFE3   	movff	btemp,plusw1
 17355  0180C2  A4D8               	btfss	status,2,c
 17356  0180C4  D7B3               	goto	u6580
 17357  0180C6                     u6600:
 17358                           
 17359                           ;stkvar	_sign @ sp[(-4)+2]
 17360  0180C6  0EFE               	movlw	-2
 17361  0180C8  50E3               	movf	plusw1,w,c
 17362  0180CA  B4D8               	btfsc	status,2,c
 17363  0180CC  D006               	goto	l8004
 17364                           
 17365                           ;stkvar	_quotient @ sp[(-4)+0]
 17366                           ;stkvar	_quotient @ sp[(-4)+0]
 17367  0180CE  0EFC               	movlw	-4
 17368  0180D0  6CE3               	negf	plusw1,c
 17369  0180D2  0EFD               	movlw	-3
 17370  0180D4  1EE3               	comf	plusw1,f,c
 17371  0180D6  B0D8               	btfsc	status,0,c
 17372  0180D8  2AE3               	incf	plusw1,f,c
 17373  0180DA                     l8004:
 17374                           
 17375                           ;stkvar	_quotient @ sp[(-4)+0]
 17376  0180DA  0EFC               	movlw	-4
 17377  0180DC  006F FF8C  F001    	movff	plusw1,btemp
 17378  0180E2  0EFD               	movlw	-3
 17379  0180E4  006F FF8C  F002    	movff	plusw1,btemp+1
 17380                           
 17381                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17382  0180EA  0EF8               	movlw	248
 17383  0180EC  26E1               	addwf	fsr1l,f,c
 17384  0180EE  0EFF               	movlw	255
 17385  0180F0  22E2               	addwfc	fsr1h,f,c
 17386  0180F2  0012               	return		;funcret
 17387  0180F4                     __end_of___awdiv:
 17388                           	opt callstack 0
 17389                           
 17390 ;; *************** function _dtoa *****************
 17391 ;; Defined at:
 17392 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17393 ;; Parameters:    Size  Location     Type
 17394 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17395 ;;		 -> f(6), NULL(0), 
 17396 ;;  d               8  [STACK] long long 
 17397 ;; Auto vars:     Size  Location     Type
 17398 ;;  n               8  [STACK] long long 
 17399 ;;  i               2  [STACK] int 
 17400 ;;  s               2  [STACK] int 
 17401 ;;  w               2  [STACK] int 
 17402 ;;  p               2  [STACK] int 
 17403 ;; Return value:  Size  Location     Type
 17404 ;;                  2  [STACK] int 
 17405 ;; Registers used:
 17406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17407 ;; Tracked objects:
 17408 ;;		On entry : 0/0
 17409 ;;		On exit  : 0/0
 17410 ;;		Unchanged: 0/0
 17411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17416 ;;Total ram usage:        0 bytes
 17417 ;; Hardware stack levels used:    1
 17418 ;; Hardware stack levels required when called:   20
 17419 ;; This function calls:
 17420 ;;		___aodiv
 17421 ;;		___aomod
 17422 ;;		_abs
 17423 ;;		_pad
 17424 ;; This function is called by:
 17425 ;;		_vfpfcnvrt
 17426 ;; This function uses a reentrant model
 17427 ;;
 17428                           
 17429                           	psect	text62
 17430  014C1C                     __ptext62:
 17431                           	opt callstack 0
 17432  014C1C                     _dtoa:
 17433                           	opt callstack 0
 17434                           
 17435                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17436  014C1C  0E12               	movlw	18
 17437  014C1E  26E1               	addwf	fsr1l,f,c
 17438  014C20  0E00               	movlw	0
 17439  014C22  22E2               	addwfc	fsr1h,f,c
 17440                           
 17441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17442                           ;stkvar	_d @ sp[(-18)+-10]
 17443                           
 17444                           ;incstack = 0
 17445 ;; hardware stack exceeded
 17446  014C24  0EE4               	movlw	228
 17447  014C26  24E1               	addwf	fsr1l,w,c
 17448  014C28  6ED9               	movwf	fsr2l,c
 17449  014C2A  0EFF               	movlw	255
 17450  014C2C  20E2               	addwfc	fsr1h,w,c
 17451  014C2E  6EDA               	movwf	fsr2h,c
 17452                           
 17453                           ;stkvar	_n @ sp[(-18)+2]
 17454  014C30  0E08               	movlw	8
 17455  014C32  6E01               	movwf	btemp^0,c
 17456  014C34  0EF0               	movlw	-16
 17457  014C36                     us1013999:
 17458  014C36  006F FF7B FFE3     	movff	postinc2,plusw1
 17459  014C3C  28E8               	incf	wreg,w,c
 17460  014C3E  2E01               	decfsz	btemp^0,f,c
 17461  014C40  D7FA               	bra	us1013999
 17462                           
 17463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17464                           ;stkvar	_n @ sp[(-18)+2]
 17465  014C42  0EF7               	movlw	-9
 17466  014C44  AEE3               	btfss	plusw1,7,c
 17467  014C46  D002               	goto	u10140
 17468  014C48  0E01               	movlw	1
 17469  014C4A  D001               	goto	u10150
 17470  014C4C                     u10140:
 17471  014C4C  0E00               	movlw	0
 17472  014C4E                     u10150:
 17473  014C4E  6E0B               	movwf	(btemp+10)^0,c
 17474  014C50  6A0C               	clrf	(btemp+11)^0,c
 17475                           
 17476                           ;stkvar	_s @ sp[(-18)+12]
 17477  014C52  0EFA               	movlw	-6
 17478  014C54  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17479  014C5A  0EFB               	movlw	-5
 17480  014C5C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17481                           
 17482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17483                           ;stkvar	_s @ sp[(-18)+12]
 17484  014C62  0EFA               	movlw	-6
 17485  014C64  006F FF8C  F001    	movff	plusw1,btemp
 17486  014C6A  0EFB               	movlw	-5
 17487  014C6C  50E3               	movf	plusw1,w,c
 17488  014C6E  1001               	iorwf	btemp^0,w,c
 17489  014C70  B4D8               	btfsc	status,2,c
 17490  014C72  D025               	goto	u10170
 17491                           
 17492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17493                           ;stkvar	_n @ sp[(-18)+2]
 17494                           ;stkvar	_n @ sp[(-18)+2]
 17495  014C74  0EF0               	movlw	-16
 17496  014C76  6CE3               	negf	plusw1,c
 17497  014C78  0EF1               	movlw	-15
 17498  014C7A  1EE3               	comf	plusw1,f,c
 17499  014C7C  0EF2               	movlw	-14
 17500  014C7E  1EE3               	comf	plusw1,f,c
 17501  014C80  0EF3               	movlw	-13
 17502  014C82  1EE3               	comf	plusw1,f,c
 17503  014C84  0EF4               	movlw	-12
 17504  014C86  1EE3               	comf	plusw1,f,c
 17505  014C88  0EF5               	movlw	-11
 17506  014C8A  1EE3               	comf	plusw1,f,c
 17507  014C8C  0EF6               	movlw	-10
 17508  014C8E  1EE3               	comf	plusw1,f,c
 17509  014C90  0EF7               	movlw	-9
 17510  014C92  1EE3               	comf	plusw1,f,c
 17511  014C94  E314               	bnc	u10170
 17512  014C96  0EF1               	movlw	-15
 17513  014C98  2AE3               	incf	plusw1,f,c
 17514  014C9A  E311               	bnc	u10170
 17515  014C9C  0EF2               	movlw	-14
 17516  014C9E  2AE3               	incf	plusw1,f,c
 17517  014CA0  E30E               	bnc	u10170
 17518  014CA2  0EF3               	movlw	-13
 17519  014CA4  2AE3               	incf	plusw1,f,c
 17520  014CA6  E30B               	bnc	u10170
 17521  014CA8  0EF4               	movlw	-12
 17522  014CAA  2AE3               	incf	plusw1,f,c
 17523  014CAC  E308               	bnc	u10170
 17524  014CAE  0EF5               	movlw	-11
 17525  014CB0  2AE3               	incf	plusw1,f,c
 17526  014CB2  E305               	bnc	u10170
 17527  014CB4  0EF6               	movlw	-10
 17528  014CB6  2AE3               	incf	plusw1,f,c
 17529  014CB8  E302               	bnc	u10170
 17530  014CBA  0EF7               	movlw	-9
 17531  014CBC  2AE3               	incf	plusw1,f,c
 17532  014CBE                     u10170:
 17533                           
 17534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17535  014CBE  AE24               	btfss	(_prec+1)^0,7,c
 17536                           
 17537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17538  014CC0  9225               	bcf	_flags^0,1,c
 17539                           
 17540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17541  014CC2  BE24               	btfsc	(_prec+1)^0,7,c
 17542  014CC4  D005               	goto	u10190
 17543  014CC6  5024               	movf	(_prec+1)^0,w,c
 17544  014CC8  E110               	bnz	l11038
 17545  014CCA  0423               	decf	_prec^0,w,c
 17546  014CCC  B0D8               	btfsc	status,0,c
 17547  014CCE  D00D               	goto	l11038
 17548  014CD0                     u10190:
 17549  014CD0  0E01               	movlw	1
 17550  014CD2  6E0B               	movwf	(btemp+10)^0,c
 17551  014CD4  0E00               	movlw	0
 17552  014CD6  6E0C               	movwf	(btemp+11)^0,c
 17553                           
 17554                           ;stkvar	_p @ sp[(-18)+16]
 17555  014CD8  0EFE               	movlw	-2
 17556  014CDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17557  014CE0  0EFF               	movlw	-1
 17558  014CE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17559  014CE8  D008               	goto	l2068
 17560  014CEA                     l11038:
 17561                           
 17562                           ;stkvar	_p @ sp[(-18)+16]
 17563  014CEA  0EFE               	movlw	-2
 17564  014CEC  0060  F08F  FFE3   	movff	_prec,plusw1
 17565  014CF2  0EFF               	movlw	-1
 17566  014CF4  0060  F093  FFE3   	movff	_prec+1,plusw1
 17567  014CFA                     l2068:
 17568                           
 17569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17570                           ;stkvar	_w @ sp[(-18)+14]
 17571  014CFA  0EFC               	movlw	-4
 17572  014CFC  0060  F087  FFE3   	movff	_width,plusw1
 17573  014D02  0EFD               	movlw	-3
 17574  014D04  0060  F08B  FFE3   	movff	_width+1,plusw1
 17575                           
 17576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17577                           ;stkvar	_s @ sp[(-18)+12]
 17578  014D0A  0EFA               	movlw	-6
 17579  014D0C  006F FF8C  F001    	movff	plusw1,btemp
 17580  014D12  0EFB               	movlw	-5
 17581  014D14  50E3               	movf	plusw1,w,c
 17582  014D16  1001               	iorwf	btemp^0,w,c
 17583  014D18  A4D8               	btfss	status,2,c
 17584  014D1A  D002               	goto	u10210
 17585  014D1C  A425               	btfss	_flags^0,2,c
 17586  014D1E  D00A               	goto	l11046
 17587  014D20                     u10210:
 17588                           
 17589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17590                           ;stkvar	_w @ sp[(-18)+14]
 17591  014D20  50E1               	movf	fsr1l,w,c
 17592  014D22  0FFC               	addlw	-4
 17593  014D24  6ED9               	movwf	fsr2l,c
 17594  014D26  50E2               	movf	fsr1h,w,c
 17595  014D28  6EDA               	movwf	fsr2h,c
 17596  014D2A  0EFF               	movlw	255
 17597  014D2C  22DA               	addwfc	fsr2h,f,c
 17598  014D2E  06DE               	decf	postinc2,f,c
 17599  014D30  0E00               	movlw	0
 17600  014D32  5ADD               	subwfb	postdec2,f,c
 17601  014D34                     l11046:
 17602                           
 17603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17604  014D34  0E4F               	movlw	79
 17605  014D36  6E0B               	movwf	(btemp+10)^0,c
 17606  014D38  0E00               	movlw	0
 17607  014D3A  6E0C               	movwf	(btemp+11)^0,c
 17608                           
 17609                           ;stkvar	_i @ sp[(-18)+10]
 17610  014D3C  0EF8               	movlw	-8
 17611  014D3E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17612  014D44  0EF9               	movlw	-7
 17613  014D46  0060  F033  FFE3   	movff	btemp+11,plusw1
 17614                           
 17615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17616  014D4C  0103               	movlb	3	; () banked
 17617  014D4E  6BE3               	clrf	(_dbuf+79)& (0+255),b
 17618                           
 17619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17620  014D50  D109               	goto	l11060
 17621  014D52                     l11050:
 17622                           
 17623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17624                           ;stkvar	_i @ sp[(-18)+10]
 17625  014D52  50E1               	movf	fsr1l,w,c
 17626  014D54  0FF8               	addlw	-8
 17627  014D56  6ED9               	movwf	fsr2l,c
 17628  014D58  50E2               	movf	fsr1h,w,c
 17629  014D5A  6EDA               	movwf	fsr2h,c
 17630  014D5C  0EFF               	movlw	255
 17631  014D5E  22DA               	addwfc	fsr2h,f,c
 17632  014D60  06DE               	decf	postinc2,f,c
 17633  014D62  0E00               	movlw	0
 17634  014D64  5ADD               	subwfb	postdec2,f,c
 17635                           
 17636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17637  014D66  0E0A               	movlw	10
 17638  014D68  6EE6               	movwf	postinc1,c
 17639  014D6A  0E00               	movlw	0
 17640  014D6C  6EE6               	movwf	postinc1,c
 17641  014D6E  0E00               	movlw	0
 17642  014D70  6EE6               	movwf	postinc1,c
 17643  014D72  0E00               	movlw	0
 17644  014D74  6EE6               	movwf	postinc1,c
 17645  014D76  0E00               	movlw	0
 17646  014D78  6EE6               	movwf	postinc1,c
 17647  014D7A  0E00               	movlw	0
 17648  014D7C  6EE6               	movwf	postinc1,c
 17649  014D7E  0E00               	movlw	0
 17650  014D80  6EE6               	movwf	postinc1,c
 17651  014D82  0E00               	movlw	0
 17652  014D84  6EE6               	movwf	postinc1,c
 17653                           
 17654                           ;stkvar	_n @ sp[(-26)+2]
 17655  014D86  50E1               	movf	fsr1l,w,c
 17656  014D88  0FE8               	addlw	-24
 17657  014D8A  6ED9               	movwf	fsr2l,c
 17658  014D8C  50E2               	movf	fsr1h,w,c
 17659  014D8E  6EDA               	movwf	fsr2h,c
 17660  014D90  0EFF               	movlw	255
 17661  014D92  22DA               	addwfc	fsr2h,f,c
 17662  014D94  006F FF7B FFE6     	movff	postinc2,postinc1
 17663  014D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 17664  014DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 17665  014DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 17666  014DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 17667  014DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 17668  014DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 17669  014DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 17670  014DC4  ECA1  F0B4         	call	___aomod	;wreg free
 17671  014DC8  52E5               	movf	postdec1,f,c
 17672  014DCA  006F FF9C  F018    	movff	indf1,btemp+23
 17673  014DD0  52E5               	movf	postdec1,f,c
 17674  014DD2  006F FF9C  F017    	movff	indf1,btemp+22
 17675  014DD8  52E5               	movf	postdec1,f,c
 17676  014DDA  006F FF9C  F016    	movff	indf1,btemp+21
 17677  014DE0  52E5               	movf	postdec1,f,c
 17678  014DE2  006F FF9C  F015    	movff	indf1,btemp+20
 17679  014DE8  52E5               	movf	postdec1,f,c
 17680  014DEA  006F FF9C  F014    	movff	indf1,btemp+19
 17681  014DF0  52E5               	movf	postdec1,f,c
 17682  014DF2  006F FF9C  F013    	movff	indf1,btemp+18
 17683  014DF8  52E5               	movf	postdec1,f,c
 17684  014DFA  006F FF9C  F012    	movff	indf1,btemp+17
 17685  014E00  52E5               	movf	postdec1,f,c
 17686  014E02  006F FF9C  F011    	movff	indf1,btemp+16
 17687  014E08  0EF8               	movlw	248
 17688  014E0A  26E1               	addwf	fsr1l,f,c
 17689  014E0C  0EFF               	movlw	255
 17690  014E0E  22E2               	addwfc	fsr1h,f,c
 17691  014E10  0060  F044  F00B   	movff	btemp+16,btemp+10
 17692  014E16  0060  F048  F00C   	movff	btemp+17,btemp+11
 17693  014E1C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17694  014E22  0060  F033  FFE6   	movff	btemp+11,postinc1
 17695  014E28  EC9C  F0CF         	call	_abs	;wreg free
 17696  014E2C  0E30               	movlw	48
 17697  014E2E  2601               	addwf	btemp^0,f,c
 17698                           
 17699                           ;stkvar	_i @ sp[(-18)+10]
 17700  014E30  0EF8               	movlw	-8
 17701  014E32  006F FF8C  F00B    	movff	plusw1,btemp+10
 17702  014E38  0EF9               	movlw	-7
 17703  014E3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17704  014E40  0E94               	movlw	low _dbuf
 17705  014E42  240B               	addwf	(btemp+10)^0,w,c
 17706  014E44  6ED9               	movwf	fsr2l,c
 17707  014E46  0E03               	movlw	high _dbuf
 17708  014E48  200C               	addwfc	(btemp+11)^0,w,c
 17709  014E4A  6EDA               	movwf	fsr2h,c
 17710  014E4C  0060  F007  FFDF   	movff	btemp,indf2
 17711                           
 17712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17713                           ;stkvar	_p @ sp[(-18)+16]
 17714  014E52  50E1               	movf	fsr1l,w,c
 17715  014E54  0FFE               	addlw	-2
 17716  014E56  6ED9               	movwf	fsr2l,c
 17717  014E58  50E2               	movf	fsr1h,w,c
 17718  014E5A  6EDA               	movwf	fsr2h,c
 17719  014E5C  0EFF               	movlw	255
 17720  014E5E  22DA               	addwfc	fsr2h,f,c
 17721  014E60  06DE               	decf	postinc2,f,c
 17722  014E62  0E00               	movlw	0
 17723  014E64  5ADD               	subwfb	postdec2,f,c
 17724                           
 17725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17726                           ;stkvar	_w @ sp[(-18)+14]
 17727  014E66  50E1               	movf	fsr1l,w,c
 17728  014E68  0FFC               	addlw	-4
 17729  014E6A  6ED9               	movwf	fsr2l,c
 17730  014E6C  50E2               	movf	fsr1h,w,c
 17731  014E6E  6EDA               	movwf	fsr2h,c
 17732  014E70  0EFF               	movlw	255
 17733  014E72  22DA               	addwfc	fsr2h,f,c
 17734  014E74  06DE               	decf	postinc2,f,c
 17735  014E76  0E00               	movlw	0
 17736  014E78  5ADD               	subwfb	postdec2,f,c
 17737                           
 17738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17739  014E7A  0E0A               	movlw	10
 17740  014E7C  6EE6               	movwf	postinc1,c
 17741  014E7E  0E00               	movlw	0
 17742  014E80  6EE6               	movwf	postinc1,c
 17743  014E82  0E00               	movlw	0
 17744  014E84  6EE6               	movwf	postinc1,c
 17745  014E86  0E00               	movlw	0
 17746  014E88  6EE6               	movwf	postinc1,c
 17747  014E8A  0E00               	movlw	0
 17748  014E8C  6EE6               	movwf	postinc1,c
 17749  014E8E  0E00               	movlw	0
 17750  014E90  6EE6               	movwf	postinc1,c
 17751  014E92  0E00               	movlw	0
 17752  014E94  6EE6               	movwf	postinc1,c
 17753  014E96  0E00               	movlw	0
 17754  014E98  6EE6               	movwf	postinc1,c
 17755                           
 17756                           ;stkvar	_n @ sp[(-26)+2]
 17757  014E9A  50E1               	movf	fsr1l,w,c
 17758  014E9C  0FE8               	addlw	-24
 17759  014E9E  6ED9               	movwf	fsr2l,c
 17760  014EA0  50E2               	movf	fsr1h,w,c
 17761  014EA2  6EDA               	movwf	fsr2h,c
 17762  014EA4  0EFF               	movlw	255
 17763  014EA6  22DA               	addwfc	fsr2h,f,c
 17764  014EA8  006F FF7B FFE6     	movff	postinc2,postinc1
 17765  014EAE  006F FF7B FFE6     	movff	postinc2,postinc1
 17766  014EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 17767  014EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 17768  014EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 17769  014EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 17770  014ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 17771  014ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 17772  014ED8  EC27  F0B2         	call	___aodiv	;wreg free
 17773  014EDC  52E5               	movf	postdec1,f,c
 17774  014EDE  006F FF9C  F018    	movff	indf1,btemp+23
 17775  014EE4  52E5               	movf	postdec1,f,c
 17776  014EE6  006F FF9C  F017    	movff	indf1,btemp+22
 17777  014EEC  52E5               	movf	postdec1,f,c
 17778  014EEE  006F FF9C  F016    	movff	indf1,btemp+21
 17779  014EF4  52E5               	movf	postdec1,f,c
 17780  014EF6  006F FF9C  F015    	movff	indf1,btemp+20
 17781  014EFC  52E5               	movf	postdec1,f,c
 17782  014EFE  006F FF9C  F014    	movff	indf1,btemp+19
 17783  014F04  52E5               	movf	postdec1,f,c
 17784  014F06  006F FF9C  F013    	movff	indf1,btemp+18
 17785  014F0C  52E5               	movf	postdec1,f,c
 17786  014F0E  006F FF9C  F012    	movff	indf1,btemp+17
 17787  014F14  52E5               	movf	postdec1,f,c
 17788  014F16  006F FF9C  F011    	movff	indf1,btemp+16
 17789  014F1C  0EF8               	movlw	248
 17790  014F1E  26E1               	addwf	fsr1l,f,c
 17791  014F20  0EFF               	movlw	255
 17792  014F22  22E2               	addwfc	fsr1h,f,c
 17793                           
 17794                           ;stkvar	_n @ sp[(-18)+2]
 17795  014F24  0EF0               	movlw	-16
 17796  014F26  0060  F047  FFE3   	movff	btemp+16,plusw1
 17797  014F2C  0EF1               	movlw	-15
 17798  014F2E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17799  014F34  0EF2               	movlw	-14
 17800  014F36  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17801  014F3C  0EF3               	movlw	-13
 17802  014F3E  0060  F053  FFE3   	movff	btemp+19,plusw1
 17803  014F44  0EF4               	movlw	-12
 17804  014F46  0060  F057  FFE3   	movff	btemp+20,plusw1
 17805  014F4C  0EF5               	movlw	-11
 17806  014F4E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17807  014F54  0EF6               	movlw	-10
 17808  014F56  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17809  014F5C  0EF7               	movlw	-9
 17810  014F5E  0060  F063  FFE3   	movff	btemp+23,plusw1
 17811  014F64                     l11060:
 17812                           
 17813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17814                           ;stkvar	_i @ sp[(-18)+10]
 17815  014F64  0EF9               	movlw	-7
 17816  014F66  BEE3               	btfsc	plusw1,7,c
 17817  014F68  D036               	goto	u10260
 17818  014F6A  0EF9               	movlw	-7
 17819  014F6C  50E3               	movf	plusw1,w,c
 17820  014F6E  E104               	bnz	u10220
 17821  014F70  0EF8               	movlw	-8
 17822  014F72  04E3               	decf	plusw1,w,c
 17823  014F74  A0D8               	btfss	status,0,c
 17824  014F76  D02F               	goto	u10260
 17825  014F78                     u10220:
 17826                           
 17827                           ;stkvar	_n @ sp[(-18)+2]
 17828  014F78  0EF0               	movlw	-16
 17829  014F7A  50E3               	movf	plusw1,w,c
 17830  014F7C  E115               	bnz	u10231
 17831  014F7E  0EF1               	movlw	-15
 17832  014F80  50E3               	movf	plusw1,w,c
 17833  014F82  E112               	bnz	u10231
 17834  014F84  0EF2               	movlw	-14
 17835  014F86  50E3               	movf	plusw1,w,c
 17836  014F88  E10F               	bnz	u10231
 17837  014F8A  0EF3               	movlw	-13
 17838  014F8C  50E3               	movf	plusw1,w,c
 17839  014F8E  E10C               	bnz	u10231
 17840  014F90  0EF4               	movlw	-12
 17841  014F92  50E3               	movf	plusw1,w,c
 17842  014F94  E109               	bnz	u10231
 17843  014F96  0EF5               	movlw	-11
 17844  014F98  50E3               	movf	plusw1,w,c
 17845  014F9A  E106               	bnz	u10231
 17846  014F9C  0EF6               	movlw	-10
 17847  014F9E  50E3               	movf	plusw1,w,c
 17848  014FA0  E103               	bnz	u10231
 17849  014FA2  0EF7               	movlw	-9
 17850  014FA4  50E3               	movf	plusw1,w,c
 17851  014FA6  A4D8               	btfss	status,2,c
 17852  014FA8                     u10231:
 17853  014FA8  D6D4               	goto	l11050
 17854                           
 17855                           ;stkvar	_p @ sp[(-18)+16]
 17856  014FAA  0EFF               	movlw	-1
 17857  014FAC  BEE3               	btfsc	plusw1,7,c
 17858  014FAE  D007               	goto	u10240
 17859  014FB0  0EFF               	movlw	-1
 17860  014FB2  50E3               	movf	plusw1,w,c
 17861  014FB4  E103               	bnz	u10241
 17862  014FB6  0EFE               	movlw	-2
 17863  014FB8  04E3               	decf	plusw1,w,c
 17864  014FBA  B0D8               	btfsc	status,0,c
 17865  014FBC                     u10241:
 17866  014FBC  D6CA               	goto	l11050
 17867  014FBE                     u10240:
 17868                           
 17869                           ;stkvar	_w @ sp[(-18)+14]
 17870  014FBE  0EFD               	movlw	-3
 17871  014FC0  BEE3               	btfsc	plusw1,7,c
 17872  014FC2  D009               	goto	u10260
 17873  014FC4  0EFD               	movlw	-3
 17874  014FC6  50E3               	movf	plusw1,w,c
 17875  014FC8  E104               	bnz	u10250
 17876  014FCA  0EFC               	movlw	-4
 17877  014FCC  04E3               	decf	plusw1,w,c
 17878  014FCE  A0D8               	btfss	status,0,c
 17879  014FD0  D002               	goto	u10260
 17880  014FD2                     u10250:
 17881  014FD2  B225               	btfsc	_flags^0,1,c
 17882  014FD4  D6BE               	goto	l11050
 17883  014FD6                     u10260:
 17884                           
 17885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17886                           ;stkvar	_s @ sp[(-18)+12]
 17887  014FD6  0EFA               	movlw	-6
 17888  014FD8  006F FF8C  F001    	movff	plusw1,btemp
 17889  014FDE  0EFB               	movlw	-5
 17890  014FE0  50E3               	movf	plusw1,w,c
 17891  014FE2  1001               	iorwf	btemp^0,w,c
 17892  014FE4  A4D8               	btfss	status,2,c
 17893  014FE6  D002               	goto	u10280
 17894  014FE8  A425               	btfss	_flags^0,2,c
 17895  014FEA  D033               	goto	l11084
 17896  014FEC                     u10280:
 17897                           
 17898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17899                           ;stkvar	_i @ sp[(-18)+10]
 17900  014FEC  50E1               	movf	fsr1l,w,c
 17901  014FEE  0FF8               	addlw	-8
 17902  014FF0  6ED9               	movwf	fsr2l,c
 17903  014FF2  50E2               	movf	fsr1h,w,c
 17904  014FF4  6EDA               	movwf	fsr2h,c
 17905  014FF6  0EFF               	movlw	255
 17906  014FF8  22DA               	addwfc	fsr2h,f,c
 17907  014FFA  06DE               	decf	postinc2,f,c
 17908  014FFC  0E00               	movlw	0
 17909  014FFE  5ADD               	subwfb	postdec2,f,c
 17910                           
 17911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17912                           ;stkvar	_s @ sp[(-18)+12]
 17913  015000  0EFA               	movlw	-6
 17914  015002  006F FF8C  F001    	movff	plusw1,btemp
 17915  015008  0EFB               	movlw	-5
 17916  01500A  50E3               	movf	plusw1,w,c
 17917  01500C  1001               	iorwf	btemp^0,w,c
 17918  01500E  A4D8               	btfss	status,2,c
 17919  015010  D002               	goto	l11080
 17920  015012  0E2B               	movlw	43
 17921  015014  D001               	goto	L19
 17922  015016                     l11080:
 17923  015016  0E2D               	movlw	45
 17924  015018                     L19:
 17925  015018  6E0B               	movwf	(btemp+10)^0,c
 17926  01501A  0E00               	movlw	0
 17927  01501C  6E0C               	movwf	(btemp+11)^0,c
 17928                           
 17929                           ;stkvar	_dtoa$5205 @ sp[(-18)+0]
 17930  01501E  0EEE               	movlw	-18
 17931  015020  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17932  015026  0EEF               	movlw	-17
 17933  015028  0060  F033  FFE3   	movff	btemp+11,plusw1
 17934                           
 17935                           ;stkvar	_dtoa$5205 @ sp[(-18)+0]
 17936                           ;stkvar	_i @ sp[(-18)+10]
 17937  01502E  0EF8               	movlw	-8
 17938  015030  006F FF8C  F00B    	movff	plusw1,btemp+10
 17939  015036  0EF9               	movlw	-7
 17940  015038  006F FF8C  F00C    	movff	plusw1,btemp+11
 17941  01503E  0E94               	movlw	low _dbuf
 17942  015040  240B               	addwf	(btemp+10)^0,w,c
 17943  015042  6ED9               	movwf	fsr2l,c
 17944  015044  0E03               	movlw	high _dbuf
 17945  015046  200C               	addwfc	(btemp+11)^0,w,c
 17946  015048  6EDA               	movwf	fsr2h,c
 17947  01504A  0EEE               	movlw	-18
 17948  01504C  006F FF8F FFDF     	movff	plusw1,indf2
 17949  015052                     l11084:
 17950                           
 17951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17952                           ;stkvar	_w @ sp[(-18)+14]
 17953  015052  0EFC               	movlw	-4
 17954  015054  006F FF8F FFE6     	movff	plusw1,postinc1
 17955  01505A  006F FF8F FFE6     	movff	plusw1,postinc1
 17956                           
 17957                           ;stkvar	_i @ sp[(-20)+10]
 17958  015060  0E94               	movlw	low _dbuf
 17959  015062  6E0B               	movwf	(btemp+10)^0,c
 17960  015064  0E03               	movlw	high _dbuf
 17961  015066  6E0C               	movwf	(btemp+11)^0,c
 17962  015068  0EF6               	movlw	-10
 17963  01506A  50E3               	movf	plusw1,w,c
 17964  01506C  260B               	addwf	(btemp+10)^0,f,c
 17965  01506E  0EF7               	movlw	-9
 17966  015070  50E3               	movf	plusw1,w,c
 17967  015072  220C               	addwfc	(btemp+11)^0,f,c
 17968  015074  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17969  01507A  0060  F033  FFE6   	movff	btemp+11,postinc1
 17970                           
 17971                           ;stkvar	_fp @ sp[(-22)+-2]
 17972  015080  0EE8               	movlw	-24
 17973  015082  006F FF8F FFE6     	movff	plusw1,postinc1
 17974  015088  006F FF8F FFE6     	movff	plusw1,postinc1
 17975  01508E  EC6D  F0C3         	call	_pad	;wreg free
 17976                           
 17977                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17978  015092  0EE4               	movlw	228
 17979  015094  26E1               	addwf	fsr1l,f,c
 17980  015096  0EFF               	movlw	255
 17981  015098  22E2               	addwfc	fsr1h,f,c
 17982  01509A  0012               	return		;funcret
 17983  01509C                     __end_of_dtoa:
 17984                           	opt callstack 0
 17985                           
 17986 ;; *************** function _abs *****************
 17987 ;; Defined at:
 17988 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17989 ;; Parameters:    Size  Location     Type
 17990 ;;  a               2  [STACK] int 
 17991 ;; Auto vars:     Size  Location     Type
 17992 ;;		None
 17993 ;; Return value:  Size  Location     Type
 17994 ;;                  2  [STACK] int 
 17995 ;; Registers used:
 17996 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17997 ;; Tracked objects:
 17998 ;;		On entry : 0/3
 17999 ;;		On exit  : 0/0
 18000 ;;		Unchanged: 0/0
 18001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18006 ;;Total ram usage:        0 bytes
 18007 ;; Hardware stack levels used:    1
 18008 ;; Hardware stack levels required when called:   15
 18009 ;; This function calls:
 18010 ;;		Nothing
 18011 ;; This function is called by:
 18012 ;;		_dtoa
 18013 ;; This function uses a reentrant model
 18014 ;;
 18015                           
 18016                           	psect	text63
 18017  019F38                     __ptext63:
 18018                           	opt callstack 0
 18019  019F38                     _abs:
 18020                           	opt callstack 0
 18021                           
 18022                           ;stkvar	_a @ sp[(0)+-2]
 18023                           
 18024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18025                           ;incstack = 0
 18026 ;; hardware stack exceeded
 18027  019F38  0EFF               	movlw	-1
 18028  019F3A  BEE3               	btfsc	plusw1,7,c
 18029  019F3C  D007               	goto	u5560
 18030  019F3E  0EFF               	movlw	-1
 18031  019F40  50E3               	movf	plusw1,w,c
 18032  019F42  E112               	bnz	l7458
 18033  019F44  0EFE               	movlw	-2
 18034  019F46  04E3               	decf	plusw1,w,c
 18035  019F48  B0D8               	btfsc	status,0,c
 18036  019F4A  D00E               	goto	l7458
 18037  019F4C                     u5560:
 18038                           
 18039                           ;stkvar	_a @ sp[(0)+-2]
 18040  019F4C  0EFE               	movlw	-2
 18041  019F4E  006F FF8C  F001    	movff	plusw1,btemp
 18042  019F54  1E01               	comf	btemp^0,f,c
 18043  019F56  0EFF               	movlw	-1
 18044  019F58  006F FF8C  F002    	movff	plusw1,btemp+1
 18045  019F5E  1E02               	comf	(btemp+1)^0,f,c
 18046  019F60  2A01               	incf	btemp^0,f,c
 18047  019F62  B4D8               	btfsc	status,2,c
 18048  019F64  2A02               	incf	(btemp+1)^0,f,c
 18049  019F66  D008               	goto	l2994
 18050  019F68                     l7458:
 18051                           
 18052                           ;stkvar	_a @ sp[(0)+-2]
 18053  019F68  0EFE               	movlw	-2
 18054  019F6A  006F FF8C  F001    	movff	plusw1,btemp
 18055  019F70  0EFF               	movlw	-1
 18056  019F72  006F FF8C  F002    	movff	plusw1,btemp+1
 18057  019F78                     l2994:
 18058                           
 18059                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18060  019F78  52E5               	movf	postdec1,f,c
 18061  019F7A  52E5               	movf	postdec1,f,c
 18062  019F7C  0012               	return		;funcret
 18063  019F7E                     __end_of_abs:
 18064                           	opt callstack 0
 18065                           
 18066 ;; *************** function ___aomod *****************
 18067 ;; Defined at:
 18068 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18069 ;; Parameters:    Size  Location     Type
 18070 ;;  dividend        8  [STACK] long long 
 18071 ;;  divisor         8  [STACK] long long 
 18072 ;; Auto vars:     Size  Location     Type
 18073 ;;  sign            1  [STACK] unsigned char 
 18074 ;;  counter         1  [STACK] unsigned char 
 18075 ;; Return value:  Size  Location     Type
 18076 ;;                  8  [STACK] long long 
 18077 ;; Registers used:
 18078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18079 ;; Tracked objects:
 18080 ;;		On entry : 0/3
 18081 ;;		On exit  : 0/0
 18082 ;;		Unchanged: 0/0
 18083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18088 ;;Total ram usage:        0 bytes
 18089 ;; Hardware stack levels used:    1
 18090 ;; Hardware stack levels required when called:   15
 18091 ;; This function calls:
 18092 ;;		Nothing
 18093 ;; This function is called by:
 18094 ;;		_dtoa
 18095 ;; This function uses a reentrant model
 18096 ;;
 18097                           
 18098                           	psect	text64
 18099  016942                     __ptext64:
 18100                           	opt callstack 0
 18101  016942                     ___aomod:
 18102                           	opt callstack 0
 18103                           
 18104                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18105  016942  52E6               	movf	postinc1,f,c
 18106  016944  52E6               	movf	postinc1,f,c
 18107                           
 18108                           ;stkvar	_sign @ sp[(-2)+0]
 18109                           
 18110                           ;incstack = 0
 18111 ;; hardware stack exceeded
 18112  016946  0EFE               	movlw	-2
 18113  016948  6AE3               	clrf	plusw1,c
 18114                           
 18115                           ;stkvar	_dividend @ sp[(-2)+-8]
 18116  01694A  0EFD               	movlw	-3
 18117  01694C  AEE3               	btfss	plusw1,7,c
 18118  01694E  D028               	goto	l7616
 18119                           
 18120                           ;stkvar	_dividend @ sp[(-2)+-8]
 18121                           ;stkvar	_dividend @ sp[(-2)+-8]
 18122  016950  0EF6               	movlw	-10
 18123  016952  6CE3               	negf	plusw1,c
 18124  016954  0EF7               	movlw	-9
 18125  016956  1EE3               	comf	plusw1,f,c
 18126  016958  0EF8               	movlw	-8
 18127  01695A  1EE3               	comf	plusw1,f,c
 18128  01695C  0EF9               	movlw	-7
 18129  01695E  1EE3               	comf	plusw1,f,c
 18130  016960  0EFA               	movlw	-6
 18131  016962  1EE3               	comf	plusw1,f,c
 18132  016964  0EFB               	movlw	-5
 18133  016966  1EE3               	comf	plusw1,f,c
 18134  016968  0EFC               	movlw	-4
 18135  01696A  1EE3               	comf	plusw1,f,c
 18136  01696C  0EFD               	movlw	-3
 18137  01696E  1EE3               	comf	plusw1,f,c
 18138  016970  E314               	bnc	u5990
 18139  016972  0EF7               	movlw	-9
 18140  016974  2AE3               	incf	plusw1,f,c
 18141  016976  E311               	bnc	u5990
 18142  016978  0EF8               	movlw	-8
 18143  01697A  2AE3               	incf	plusw1,f,c
 18144  01697C  E30E               	bnc	u5990
 18145  01697E  0EF9               	movlw	-7
 18146  016980  2AE3               	incf	plusw1,f,c
 18147  016982  E30B               	bnc	u5990
 18148  016984  0EFA               	movlw	-6
 18149  016986  2AE3               	incf	plusw1,f,c
 18150  016988  E308               	bnc	u5990
 18151  01698A  0EFB               	movlw	-5
 18152  01698C  2AE3               	incf	plusw1,f,c
 18153  01698E  E305               	bnc	u5990
 18154  016990  0EFC               	movlw	-4
 18155  016992  2AE3               	incf	plusw1,f,c
 18156  016994  E302               	bnc	u5990
 18157  016996  0EFD               	movlw	-3
 18158  016998  2AE3               	incf	plusw1,f,c
 18159  01699A                     u5990:
 18160                           
 18161                           ;stkvar	_sign @ sp[(-2)+0]
 18162  01699A  0EFE               	movlw	-2
 18163  01699C  6AE3               	clrf	plusw1,c
 18164  01699E  2AE3               	incf	plusw1,f,c
 18165  0169A0                     l7616:
 18166                           
 18167                           ;stkvar	_divisor @ sp[(-2)+-16]
 18168  0169A0  0EF5               	movlw	-11
 18169  0169A2  AEE3               	btfss	plusw1,7,c
 18170  0169A4  D025               	goto	u6010
 18171                           
 18172                           ;stkvar	_divisor @ sp[(-2)+-16]
 18173                           ;stkvar	_divisor @ sp[(-2)+-16]
 18174  0169A6  0EEE               	movlw	-18
 18175  0169A8  6CE3               	negf	plusw1,c
 18176  0169AA  0EEF               	movlw	-17
 18177  0169AC  1EE3               	comf	plusw1,f,c
 18178  0169AE  0EF0               	movlw	-16
 18179  0169B0  1EE3               	comf	plusw1,f,c
 18180  0169B2  0EF1               	movlw	-15
 18181  0169B4  1EE3               	comf	plusw1,f,c
 18182  0169B6  0EF2               	movlw	-14
 18183  0169B8  1EE3               	comf	plusw1,f,c
 18184  0169BA  0EF3               	movlw	-13
 18185  0169BC  1EE3               	comf	plusw1,f,c
 18186  0169BE  0EF4               	movlw	-12
 18187  0169C0  1EE3               	comf	plusw1,f,c
 18188  0169C2  0EF5               	movlw	-11
 18189  0169C4  1EE3               	comf	plusw1,f,c
 18190  0169C6  E314               	bnc	u6010
 18191  0169C8  0EEF               	movlw	-17
 18192  0169CA  2AE3               	incf	plusw1,f,c
 18193  0169CC  E311               	bnc	u6010
 18194  0169CE  0EF0               	movlw	-16
 18195  0169D0  2AE3               	incf	plusw1,f,c
 18196  0169D2  E30E               	bnc	u6010
 18197  0169D4  0EF1               	movlw	-15
 18198  0169D6  2AE3               	incf	plusw1,f,c
 18199  0169D8  E30B               	bnc	u6010
 18200  0169DA  0EF2               	movlw	-14
 18201  0169DC  2AE3               	incf	plusw1,f,c
 18202  0169DE  E308               	bnc	u6010
 18203  0169E0  0EF3               	movlw	-13
 18204  0169E2  2AE3               	incf	plusw1,f,c
 18205  0169E4  E305               	bnc	u6010
 18206  0169E6  0EF4               	movlw	-12
 18207  0169E8  2AE3               	incf	plusw1,f,c
 18208  0169EA  E302               	bnc	u6010
 18209  0169EC  0EF5               	movlw	-11
 18210  0169EE  2AE3               	incf	plusw1,f,c
 18211  0169F0                     u6010:
 18212                           
 18213                           ;stkvar	_divisor @ sp[(-2)+-16]
 18214  0169F0  0EEE               	movlw	-18
 18215  0169F2  50E3               	movf	plusw1,w,c
 18216  0169F4  E116               	bnz	u6020
 18217  0169F6  0EEF               	movlw	-17
 18218  0169F8  50E3               	movf	plusw1,w,c
 18219  0169FA  E113               	bnz	u6020
 18220  0169FC  0EF0               	movlw	-16
 18221  0169FE  50E3               	movf	plusw1,w,c
 18222  016A00  E110               	bnz	u6020
 18223  016A02  0EF1               	movlw	-15
 18224  016A04  50E3               	movf	plusw1,w,c
 18225  016A06  E10D               	bnz	u6020
 18226  016A08  0EF2               	movlw	-14
 18227  016A0A  50E3               	movf	plusw1,w,c
 18228  016A0C  E10A               	bnz	u6020
 18229  016A0E  0EF3               	movlw	-13
 18230  016A10  50E3               	movf	plusw1,w,c
 18231  016A12  E107               	bnz	u6020
 18232  016A14  0EF4               	movlw	-12
 18233  016A16  50E3               	movf	plusw1,w,c
 18234  016A18  E104               	bnz	u6020
 18235  016A1A  0EF5               	movlw	-11
 18236  016A1C  50E3               	movf	plusw1,w,c
 18237  016A1E  B4D8               	btfsc	status,2,c
 18238  016A20  D075               	goto	u6050
 18239  016A22                     u6020:
 18240                           
 18241                           ;stkvar	_counter @ sp[(-2)+1]
 18242  016A22  0EFF               	movlw	-1
 18243  016A24  6AE3               	clrf	plusw1,c
 18244  016A26  D012               	goto	L20
 18245  016A28                     l7624:
 18246                           
 18247                           ;stkvar	_divisor @ sp[(-2)+-16]
 18248  016A28  90D8               	bcf	status,0,c
 18249  016A2A  0EEE               	movlw	-18
 18250  016A2C  36E3               	rlcf	plusw1,f,c
 18251  016A2E  0EEF               	movlw	-17
 18252  016A30  36E3               	rlcf	plusw1,f,c
 18253  016A32  0EF0               	movlw	-16
 18254  016A34  36E3               	rlcf	plusw1,f,c
 18255  016A36  0EF1               	movlw	-15
 18256  016A38  36E3               	rlcf	plusw1,f,c
 18257  016A3A  0EF2               	movlw	-14
 18258  016A3C  36E3               	rlcf	plusw1,f,c
 18259  016A3E  0EF3               	movlw	-13
 18260  016A40  36E3               	rlcf	plusw1,f,c
 18261  016A42  0EF4               	movlw	-12
 18262  016A44  36E3               	rlcf	plusw1,f,c
 18263  016A46  0EF5               	movlw	-11
 18264  016A48  36E3               	rlcf	plusw1,f,c
 18265                           
 18266                           ;stkvar	_counter @ sp[(-2)+1]
 18267  016A4A  0EFF               	movlw	-1
 18268  016A4C                     L20:
 18269  016A4C  2AE3               	incf	plusw1,f,c
 18270                           
 18271                           ;stkvar	_divisor @ sp[(-2)+-16]
 18272  016A4E  0EF5               	movlw	-11
 18273  016A50  AEE3               	btfss	plusw1,7,c
 18274  016A52  D7EA               	goto	l7624
 18275  016A54                     u6030:
 18276                           
 18277                           ;stkvar	_divisor @ sp[(-2)+-16]
 18278                           ;stkvar	_dividend @ sp[(-2)+-8]
 18279  016A54  50E1               	movf	fsr1l,w,c
 18280  016A56  0FF6               	addlw	-10
 18281  016A58  6ED9               	movwf	fsr2l,c
 18282  016A5A  50E2               	movf	fsr1h,w,c
 18283  016A5C  6EDA               	movwf	fsr2h,c
 18284  016A5E  0EFF               	movlw	255
 18285  016A60  22DA               	addwfc	fsr2h,f,c
 18286  016A62  0EEE               	movlw	-18
 18287  016A64  50E3               	movf	plusw1,w,c
 18288  016A66  5CDE               	subwf	postinc2,w,c
 18289  016A68  0EEF               	movlw	-17
 18290  016A6A  50E3               	movf	plusw1,w,c
 18291  016A6C  58DE               	subwfb	postinc2,w,c
 18292  016A6E  0EF0               	movlw	-16
 18293  016A70  50E3               	movf	plusw1,w,c
 18294  016A72  58DE               	subwfb	postinc2,w,c
 18295  016A74  0EF1               	movlw	-15
 18296  016A76  50E3               	movf	plusw1,w,c
 18297  016A78  58DE               	subwfb	postinc2,w,c
 18298  016A7A  0EF2               	movlw	-14
 18299  016A7C  50E3               	movf	plusw1,w,c
 18300  016A7E  58DE               	subwfb	postinc2,w,c
 18301  016A80  0EF3               	movlw	-13
 18302  016A82  50E3               	movf	plusw1,w,c
 18303  016A84  58DE               	subwfb	postinc2,w,c
 18304  016A86  0EF4               	movlw	-12
 18305  016A88  50E3               	movf	plusw1,w,c
 18306  016A8A  58DE               	subwfb	postinc2,w,c
 18307  016A8C  0EF5               	movlw	-11
 18308  016A8E  50E3               	movf	plusw1,w,c
 18309  016A90  58DE               	subwfb	postinc2,w,c
 18310  016A92  A0D8               	btfss	status,0,c
 18311  016A94  D01F               	goto	l7632
 18312                           
 18313                           ;stkvar	_divisor @ sp[(-2)+-16]
 18314                           ;stkvar	_dividend @ sp[(-2)+-8]
 18315  016A96  50E1               	movf	fsr1l,w,c
 18316  016A98  0FF6               	addlw	-10
 18317  016A9A  6ED9               	movwf	fsr2l,c
 18318  016A9C  50E2               	movf	fsr1h,w,c
 18319  016A9E  6EDA               	movwf	fsr2h,c
 18320  016AA0  0EFF               	movlw	255
 18321  016AA2  22DA               	addwfc	fsr2h,f,c
 18322  016AA4  0EEE               	movlw	-18
 18323  016AA6  50E3               	movf	plusw1,w,c
 18324  016AA8  5EDE               	subwf	postinc2,f,c
 18325  016AAA  0EEF               	movlw	-17
 18326  016AAC  50E3               	movf	plusw1,w,c
 18327  016AAE  5ADE               	subwfb	postinc2,f,c
 18328  016AB0  0EF0               	movlw	-16
 18329  016AB2  50E3               	movf	plusw1,w,c
 18330  016AB4  5ADE               	subwfb	postinc2,f,c
 18331  016AB6  0EF1               	movlw	-15
 18332  016AB8  50E3               	movf	plusw1,w,c
 18333  016ABA  5ADE               	subwfb	postinc2,f,c
 18334  016ABC  0EF2               	movlw	-14
 18335  016ABE  50E3               	movf	plusw1,w,c
 18336  016AC0  5ADE               	subwfb	postinc2,f,c
 18337  016AC2  0EF3               	movlw	-13
 18338  016AC4  50E3               	movf	plusw1,w,c
 18339  016AC6  5ADE               	subwfb	postinc2,f,c
 18340  016AC8  0EF4               	movlw	-12
 18341  016ACA  50E3               	movf	plusw1,w,c
 18342  016ACC  5ADE               	subwfb	postinc2,f,c
 18343  016ACE  0EF5               	movlw	-11
 18344  016AD0  50E3               	movf	plusw1,w,c
 18345  016AD2  5ADE               	subwfb	postinc2,f,c
 18346  016AD4                     l7632:
 18347                           
 18348                           ;stkvar	_divisor @ sp[(-2)+-16]
 18349  016AD4  90D8               	bcf	status,0,c
 18350  016AD6  0EF5               	movlw	-11
 18351  016AD8  32E3               	rrcf	plusw1,f,c
 18352  016ADA  0EF4               	movlw	-12
 18353  016ADC  32E3               	rrcf	plusw1,f,c
 18354  016ADE  0EF3               	movlw	-13
 18355  016AE0  32E3               	rrcf	plusw1,f,c
 18356  016AE2  0EF2               	movlw	-14
 18357  016AE4  32E3               	rrcf	plusw1,f,c
 18358  016AE6  0EF1               	movlw	-15
 18359  016AE8  32E3               	rrcf	plusw1,f,c
 18360  016AEA  0EF0               	movlw	-16
 18361  016AEC  32E3               	rrcf	plusw1,f,c
 18362  016AEE  0EEF               	movlw	-17
 18363  016AF0  32E3               	rrcf	plusw1,f,c
 18364  016AF2  0EEE               	movlw	-18
 18365  016AF4  32E3               	rrcf	plusw1,f,c
 18366                           
 18367                           ;stkvar	_counter @ sp[(-2)+1]
 18368  016AF6  0EFF               	movlw	-1
 18369  016AF8  50E3               	movf	plusw1,w,c
 18370  016AFA  6E01               	movwf	btemp^0,c
 18371  016AFC  0E01               	movlw	1
 18372  016AFE  5E01               	subwf	btemp^0,f,c
 18373  016B00  0EFF               	movlw	-1
 18374  016B02  0060  F007  FFE3   	movff	btemp,plusw1
 18375  016B08  A4D8               	btfss	status,2,c
 18376  016B0A  D7A4               	goto	u6030
 18377  016B0C                     u6050:
 18378                           
 18379                           ;stkvar	_sign @ sp[(-2)+0]
 18380  016B0C  0EFE               	movlw	-2
 18381  016B0E  50E3               	movf	plusw1,w,c
 18382  016B10  B4D8               	btfsc	status,2,c
 18383  016B12  D025               	goto	u6070
 18384                           
 18385                           ;stkvar	_dividend @ sp[(-2)+-8]
 18386                           ;stkvar	_dividend @ sp[(-2)+-8]
 18387  016B14  0EF6               	movlw	-10
 18388  016B16  6CE3               	negf	plusw1,c
 18389  016B18  0EF7               	movlw	-9
 18390  016B1A  1EE3               	comf	plusw1,f,c
 18391  016B1C  0EF8               	movlw	-8
 18392  016B1E  1EE3               	comf	plusw1,f,c
 18393  016B20  0EF9               	movlw	-7
 18394  016B22  1EE3               	comf	plusw1,f,c
 18395  016B24  0EFA               	movlw	-6
 18396  016B26  1EE3               	comf	plusw1,f,c
 18397  016B28  0EFB               	movlw	-5
 18398  016B2A  1EE3               	comf	plusw1,f,c
 18399  016B2C  0EFC               	movlw	-4
 18400  016B2E  1EE3               	comf	plusw1,f,c
 18401  016B30  0EFD               	movlw	-3
 18402  016B32  1EE3               	comf	plusw1,f,c
 18403  016B34  E314               	bnc	u6070
 18404  016B36  0EF7               	movlw	-9
 18405  016B38  2AE3               	incf	plusw1,f,c
 18406  016B3A  E311               	bnc	u6070
 18407  016B3C  0EF8               	movlw	-8
 18408  016B3E  2AE3               	incf	plusw1,f,c
 18409  016B40  E30E               	bnc	u6070
 18410  016B42  0EF9               	movlw	-7
 18411  016B44  2AE3               	incf	plusw1,f,c
 18412  016B46  E30B               	bnc	u6070
 18413  016B48  0EFA               	movlw	-6
 18414  016B4A  2AE3               	incf	plusw1,f,c
 18415  016B4C  E308               	bnc	u6070
 18416  016B4E  0EFB               	movlw	-5
 18417  016B50  2AE3               	incf	plusw1,f,c
 18418  016B52  E305               	bnc	u6070
 18419  016B54  0EFC               	movlw	-4
 18420  016B56  2AE3               	incf	plusw1,f,c
 18421  016B58  E302               	bnc	u6070
 18422  016B5A  0EFD               	movlw	-3
 18423  016B5C  2AE3               	incf	plusw1,f,c
 18424  016B5E                     u6070:
 18425                           
 18426                           ;stkvar	_dividend @ sp[(-2)+-8]
 18427  016B5E  0EF6               	movlw	246
 18428  016B60  24E1               	addwf	fsr1l,w,c
 18429  016B62  6ED9               	movwf	fsr2l,c
 18430  016B64  0EFF               	movlw	255
 18431  016B66  20E2               	addwfc	fsr1h,w,c
 18432  016B68  6EDA               	movwf	fsr2h,c
 18433                           
 18434                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18435  016B6A  0E08               	movlw	8
 18436  016B6C  6E01               	movwf	btemp^0,c
 18437  016B6E  0EF6               	movlw	-10
 18438  016B70                     us608999:
 18439  016B70  006F FF7B FFE3     	movff	postinc2,plusw1
 18440  016B76  28E8               	incf	wreg,w,c
 18441  016B78  2E01               	decfsz	btemp^0,f,c
 18442  016B7A  D7FA               	bra	us608999
 18443                           
 18444                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18445  016B7C  52E5               	movf	postdec1,f,c
 18446  016B7E  52E5               	movf	postdec1,f,c
 18447  016B80  0012               	return		;funcret
 18448  016B82                     __end_of___aomod:
 18449                           	opt callstack 0
 18450                           
 18451 ;; *************** function ___aodiv *****************
 18452 ;; Defined at:
 18453 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18454 ;; Parameters:    Size  Location     Type
 18455 ;;  dividend        8  [STACK] long long 
 18456 ;;  divisor         8  [STACK] long long 
 18457 ;; Auto vars:     Size  Location     Type
 18458 ;;  quotient        8  [STACK] long long 
 18459 ;;  sign            1  [STACK] unsigned char 
 18460 ;;  counter         1  [STACK] unsigned char 
 18461 ;; Return value:  Size  Location     Type
 18462 ;;                  8  [STACK] long long 
 18463 ;; Registers used:
 18464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18465 ;; Tracked objects:
 18466 ;;		On entry : 0/3
 18467 ;;		On exit  : 0/0
 18468 ;;		Unchanged: 0/0
 18469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18474 ;;Total ram usage:        0 bytes
 18475 ;; Hardware stack levels used:    1
 18476 ;; Hardware stack levels required when called:   15
 18477 ;; This function calls:
 18478 ;;		Nothing
 18479 ;; This function is called by:
 18480 ;;		_dtoa
 18481 ;; This function uses a reentrant model
 18482 ;;
 18483                           
 18484                           	psect	text65
 18485  01644E                     __ptext65:
 18486                           	opt callstack 0
 18487  01644E                     ___aodiv:
 18488                           	opt callstack 0
 18489                           
 18490                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18491  01644E  0E0A               	movlw	10
 18492  016450  26E1               	addwf	fsr1l,f,c
 18493  016452  0E00               	movlw	0
 18494  016454  22E2               	addwfc	fsr1h,f,c
 18495                           
 18496                           ;stkvar	_sign @ sp[(-10)+8]
 18497                           
 18498                           ;incstack = 0
 18499 ;; hardware stack exceeded
 18500  016456  0EFE               	movlw	-2
 18501  016458  6AE3               	clrf	plusw1,c
 18502                           
 18503                           ;stkvar	_divisor @ sp[(-10)+-16]
 18504  01645A  0EED               	movlw	-19
 18505  01645C  AEE3               	btfss	plusw1,7,c
 18506  01645E  D028               	goto	l7572
 18507                           
 18508                           ;stkvar	_divisor @ sp[(-10)+-16]
 18509                           ;stkvar	_divisor @ sp[(-10)+-16]
 18510  016460  0EE6               	movlw	-26
 18511  016462  6CE3               	negf	plusw1,c
 18512  016464  0EE7               	movlw	-25
 18513  016466  1EE3               	comf	plusw1,f,c
 18514  016468  0EE8               	movlw	-24
 18515  01646A  1EE3               	comf	plusw1,f,c
 18516  01646C  0EE9               	movlw	-23
 18517  01646E  1EE3               	comf	plusw1,f,c
 18518  016470  0EEA               	movlw	-22
 18519  016472  1EE3               	comf	plusw1,f,c
 18520  016474  0EEB               	movlw	-21
 18521  016476  1EE3               	comf	plusw1,f,c
 18522  016478  0EEC               	movlw	-20
 18523  01647A  1EE3               	comf	plusw1,f,c
 18524  01647C  0EED               	movlw	-19
 18525  01647E  1EE3               	comf	plusw1,f,c
 18526  016480  E314               	bnc	u5870
 18527  016482  0EE7               	movlw	-25
 18528  016484  2AE3               	incf	plusw1,f,c
 18529  016486  E311               	bnc	u5870
 18530  016488  0EE8               	movlw	-24
 18531  01648A  2AE3               	incf	plusw1,f,c
 18532  01648C  E30E               	bnc	u5870
 18533  01648E  0EE9               	movlw	-23
 18534  016490  2AE3               	incf	plusw1,f,c
 18535  016492  E30B               	bnc	u5870
 18536  016494  0EEA               	movlw	-22
 18537  016496  2AE3               	incf	plusw1,f,c
 18538  016498  E308               	bnc	u5870
 18539  01649A  0EEB               	movlw	-21
 18540  01649C  2AE3               	incf	plusw1,f,c
 18541  01649E  E305               	bnc	u5870
 18542  0164A0  0EEC               	movlw	-20
 18543  0164A2  2AE3               	incf	plusw1,f,c
 18544  0164A4  E302               	bnc	u5870
 18545  0164A6  0EED               	movlw	-19
 18546  0164A8  2AE3               	incf	plusw1,f,c
 18547  0164AA                     u5870:
 18548                           
 18549                           ;stkvar	_sign @ sp[(-10)+8]
 18550  0164AA  0EFE               	movlw	-2
 18551  0164AC  6AE3               	clrf	plusw1,c
 18552  0164AE  2AE3               	incf	plusw1,f,c
 18553  0164B0                     l7572:
 18554                           
 18555                           ;stkvar	_dividend @ sp[(-10)+-8]
 18556  0164B0  0EF5               	movlw	-11
 18557  0164B2  AEE3               	btfss	plusw1,7,c
 18558  0164B4  D027               	goto	l7578
 18559                           
 18560                           ;stkvar	_dividend @ sp[(-10)+-8]
 18561                           ;stkvar	_dividend @ sp[(-10)+-8]
 18562  0164B6  0EEE               	movlw	-18
 18563  0164B8  6CE3               	negf	plusw1,c
 18564  0164BA  0EEF               	movlw	-17
 18565  0164BC  1EE3               	comf	plusw1,f,c
 18566  0164BE  0EF0               	movlw	-16
 18567  0164C0  1EE3               	comf	plusw1,f,c
 18568  0164C2  0EF1               	movlw	-15
 18569  0164C4  1EE3               	comf	plusw1,f,c
 18570  0164C6  0EF2               	movlw	-14
 18571  0164C8  1EE3               	comf	plusw1,f,c
 18572  0164CA  0EF3               	movlw	-13
 18573  0164CC  1EE3               	comf	plusw1,f,c
 18574  0164CE  0EF4               	movlw	-12
 18575  0164D0  1EE3               	comf	plusw1,f,c
 18576  0164D2  0EF5               	movlw	-11
 18577  0164D4  1EE3               	comf	plusw1,f,c
 18578  0164D6  E314               	bnc	u5890
 18579  0164D8  0EEF               	movlw	-17
 18580  0164DA  2AE3               	incf	plusw1,f,c
 18581  0164DC  E311               	bnc	u5890
 18582  0164DE  0EF0               	movlw	-16
 18583  0164E0  2AE3               	incf	plusw1,f,c
 18584  0164E2  E30E               	bnc	u5890
 18585  0164E4  0EF1               	movlw	-15
 18586  0164E6  2AE3               	incf	plusw1,f,c
 18587  0164E8  E30B               	bnc	u5890
 18588  0164EA  0EF2               	movlw	-14
 18589  0164EC  2AE3               	incf	plusw1,f,c
 18590  0164EE  E308               	bnc	u5890
 18591  0164F0  0EF3               	movlw	-13
 18592  0164F2  2AE3               	incf	plusw1,f,c
 18593  0164F4  E305               	bnc	u5890
 18594  0164F6  0EF4               	movlw	-12
 18595  0164F8  2AE3               	incf	plusw1,f,c
 18596  0164FA  E302               	bnc	u5890
 18597  0164FC  0EF5               	movlw	-11
 18598  0164FE  2AE3               	incf	plusw1,f,c
 18599  016500                     u5890:
 18600                           
 18601                           ;stkvar	_sign @ sp[(-10)+8]
 18602  016500  0EFE               	movlw	-2
 18603  016502  70E3               	btg	plusw1,0,c
 18604  016504                     l7578:
 18605                           
 18606                           ;stkvar	_quotient @ sp[(-10)+0]
 18607  016504  0E07               	movlw	7
 18608  016506  6E01               	movwf	btemp^0,c
 18609  016508  0EF6               	movlw	-10
 18610  01650A                     u5901:
 18611  01650A  6AE3               	clrf	plusw1,c
 18612  01650C  2AE8               	incf	wreg,f,c
 18613  01650E  0601               	decf	btemp^0,f,c
 18614  016510  E2FC               	bc	u5901
 18615                           
 18616                           ;stkvar	_divisor @ sp[(-10)+-16]
 18617  016512  0EE6               	movlw	-26
 18618  016514  50E3               	movf	plusw1,w,c
 18619  016516  E116               	bnz	u5910
 18620  016518  0EE7               	movlw	-25
 18621  01651A  50E3               	movf	plusw1,w,c
 18622  01651C  E113               	bnz	u5910
 18623  01651E  0EE8               	movlw	-24
 18624  016520  50E3               	movf	plusw1,w,c
 18625  016522  E110               	bnz	u5910
 18626  016524  0EE9               	movlw	-23
 18627  016526  50E3               	movf	plusw1,w,c
 18628  016528  E10D               	bnz	u5910
 18629  01652A  0EEA               	movlw	-22
 18630  01652C  50E3               	movf	plusw1,w,c
 18631  01652E  E10A               	bnz	u5910
 18632  016530  0EEB               	movlw	-21
 18633  016532  50E3               	movf	plusw1,w,c
 18634  016534  E107               	bnz	u5910
 18635  016536  0EEC               	movlw	-20
 18636  016538  50E3               	movf	plusw1,w,c
 18637  01653A  E104               	bnz	u5910
 18638  01653C  0EED               	movlw	-19
 18639  01653E  50E3               	movf	plusw1,w,c
 18640  016540  B4D8               	btfsc	status,2,c
 18641  016542  D088               	goto	u5940
 18642  016544                     u5910:
 18643                           
 18644                           ;stkvar	_counter @ sp[(-10)+9]
 18645  016544  0EFF               	movlw	-1
 18646  016546  6AE3               	clrf	plusw1,c
 18647  016548  D012               	goto	L21
 18648  01654A                     l7584:
 18649                           
 18650                           ;stkvar	_divisor @ sp[(-10)+-16]
 18651  01654A  90D8               	bcf	status,0,c
 18652  01654C  0EE6               	movlw	-26
 18653  01654E  36E3               	rlcf	plusw1,f,c
 18654  016550  0EE7               	movlw	-25
 18655  016552  36E3               	rlcf	plusw1,f,c
 18656  016554  0EE8               	movlw	-24
 18657  016556  36E3               	rlcf	plusw1,f,c
 18658  016558  0EE9               	movlw	-23
 18659  01655A  36E3               	rlcf	plusw1,f,c
 18660  01655C  0EEA               	movlw	-22
 18661  01655E  36E3               	rlcf	plusw1,f,c
 18662  016560  0EEB               	movlw	-21
 18663  016562  36E3               	rlcf	plusw1,f,c
 18664  016564  0EEC               	movlw	-20
 18665  016566  36E3               	rlcf	plusw1,f,c
 18666  016568  0EED               	movlw	-19
 18667  01656A  36E3               	rlcf	plusw1,f,c
 18668                           
 18669                           ;stkvar	_counter @ sp[(-10)+9]
 18670  01656C  0EFF               	movlw	-1
 18671  01656E                     L21:
 18672  01656E  2AE3               	incf	plusw1,f,c
 18673                           
 18674                           ;stkvar	_divisor @ sp[(-10)+-16]
 18675  016570  0EED               	movlw	-19
 18676  016572  AEE3               	btfss	plusw1,7,c
 18677  016574  D7EA               	goto	l7584
 18678  016576                     u5920:
 18679                           
 18680                           ;stkvar	_quotient @ sp[(-10)+0]
 18681  016576  90D8               	bcf	status,0,c
 18682  016578  0EF6               	movlw	-10
 18683  01657A  36E3               	rlcf	plusw1,f,c
 18684  01657C  0EF7               	movlw	-9
 18685  01657E  36E3               	rlcf	plusw1,f,c
 18686  016580  0EF8               	movlw	-8
 18687  016582  36E3               	rlcf	plusw1,f,c
 18688  016584  0EF9               	movlw	-7
 18689  016586  36E3               	rlcf	plusw1,f,c
 18690  016588  0EFA               	movlw	-6
 18691  01658A  36E3               	rlcf	plusw1,f,c
 18692  01658C  0EFB               	movlw	-5
 18693  01658E  36E3               	rlcf	plusw1,f,c
 18694  016590  0EFC               	movlw	-4
 18695  016592  36E3               	rlcf	plusw1,f,c
 18696  016594  0EFD               	movlw	-3
 18697  016596  36E3               	rlcf	plusw1,f,c
 18698                           
 18699                           ;stkvar	_divisor @ sp[(-10)+-16]
 18700                           ;stkvar	_dividend @ sp[(-10)+-8]
 18701  016598  50E1               	movf	fsr1l,w,c
 18702  01659A  0FEE               	addlw	-18
 18703  01659C  6ED9               	movwf	fsr2l,c
 18704  01659E  50E2               	movf	fsr1h,w,c
 18705  0165A0  6EDA               	movwf	fsr2h,c
 18706  0165A2  0EFF               	movlw	255
 18707  0165A4  22DA               	addwfc	fsr2h,f,c
 18708  0165A6  0EE6               	movlw	-26
 18709  0165A8  50E3               	movf	plusw1,w,c
 18710  0165AA  5CDE               	subwf	postinc2,w,c
 18711  0165AC  0EE7               	movlw	-25
 18712  0165AE  50E3               	movf	plusw1,w,c
 18713  0165B0  58DE               	subwfb	postinc2,w,c
 18714  0165B2  0EE8               	movlw	-24
 18715  0165B4  50E3               	movf	plusw1,w,c
 18716  0165B6  58DE               	subwfb	postinc2,w,c
 18717  0165B8  0EE9               	movlw	-23
 18718  0165BA  50E3               	movf	plusw1,w,c
 18719  0165BC  58DE               	subwfb	postinc2,w,c
 18720  0165BE  0EEA               	movlw	-22
 18721  0165C0  50E3               	movf	plusw1,w,c
 18722  0165C2  58DE               	subwfb	postinc2,w,c
 18723  0165C4  0EEB               	movlw	-21
 18724  0165C6  50E3               	movf	plusw1,w,c
 18725  0165C8  58DE               	subwfb	postinc2,w,c
 18726  0165CA  0EEC               	movlw	-20
 18727  0165CC  50E3               	movf	plusw1,w,c
 18728  0165CE  58DE               	subwfb	postinc2,w,c
 18729  0165D0  0EED               	movlw	-19
 18730  0165D2  50E3               	movf	plusw1,w,c
 18731  0165D4  58DE               	subwfb	postinc2,w,c
 18732  0165D6  A0D8               	btfss	status,0,c
 18733  0165D8  D021               	goto	l7596
 18734                           
 18735                           ;stkvar	_divisor @ sp[(-10)+-16]
 18736                           ;stkvar	_dividend @ sp[(-10)+-8]
 18737  0165DA  50E1               	movf	fsr1l,w,c
 18738  0165DC  0FEE               	addlw	-18
 18739  0165DE  6ED9               	movwf	fsr2l,c
 18740  0165E0  50E2               	movf	fsr1h,w,c
 18741  0165E2  6EDA               	movwf	fsr2h,c
 18742  0165E4  0EFF               	movlw	255
 18743  0165E6  22DA               	addwfc	fsr2h,f,c
 18744  0165E8  0EE6               	movlw	-26
 18745  0165EA  50E3               	movf	plusw1,w,c
 18746  0165EC  5EDE               	subwf	postinc2,f,c
 18747  0165EE  0EE7               	movlw	-25
 18748  0165F0  50E3               	movf	plusw1,w,c
 18749  0165F2  5ADE               	subwfb	postinc2,f,c
 18750  0165F4  0EE8               	movlw	-24
 18751  0165F6  50E3               	movf	plusw1,w,c
 18752  0165F8  5ADE               	subwfb	postinc2,f,c
 18753  0165FA  0EE9               	movlw	-23
 18754  0165FC  50E3               	movf	plusw1,w,c
 18755  0165FE  5ADE               	subwfb	postinc2,f,c
 18756  016600  0EEA               	movlw	-22
 18757  016602  50E3               	movf	plusw1,w,c
 18758  016604  5ADE               	subwfb	postinc2,f,c
 18759  016606  0EEB               	movlw	-21
 18760  016608  50E3               	movf	plusw1,w,c
 18761  01660A  5ADE               	subwfb	postinc2,f,c
 18762  01660C  0EEC               	movlw	-20
 18763  01660E  50E3               	movf	plusw1,w,c
 18764  016610  5ADE               	subwfb	postinc2,f,c
 18765  016612  0EED               	movlw	-19
 18766  016614  50E3               	movf	plusw1,w,c
 18767  016616  5ADE               	subwfb	postinc2,f,c
 18768                           
 18769                           ;stkvar	_quotient @ sp[(-10)+0]
 18770  016618  0EF6               	movlw	-10
 18771  01661A  80E3               	bsf	plusw1,0,c
 18772  01661C                     l7596:
 18773                           
 18774                           ;stkvar	_divisor @ sp[(-10)+-16]
 18775  01661C  90D8               	bcf	status,0,c
 18776  01661E  0EED               	movlw	-19
 18777  016620  32E3               	rrcf	plusw1,f,c
 18778  016622  0EEC               	movlw	-20
 18779  016624  32E3               	rrcf	plusw1,f,c
 18780  016626  0EEB               	movlw	-21
 18781  016628  32E3               	rrcf	plusw1,f,c
 18782  01662A  0EEA               	movlw	-22
 18783  01662C  32E3               	rrcf	plusw1,f,c
 18784  01662E  0EE9               	movlw	-23
 18785  016630  32E3               	rrcf	plusw1,f,c
 18786  016632  0EE8               	movlw	-24
 18787  016634  32E3               	rrcf	plusw1,f,c
 18788  016636  0EE7               	movlw	-25
 18789  016638  32E3               	rrcf	plusw1,f,c
 18790  01663A  0EE6               	movlw	-26
 18791  01663C  32E3               	rrcf	plusw1,f,c
 18792                           
 18793                           ;stkvar	_counter @ sp[(-10)+9]
 18794  01663E  0EFF               	movlw	-1
 18795  016640  50E3               	movf	plusw1,w,c
 18796  016642  6E01               	movwf	btemp^0,c
 18797  016644  0E01               	movlw	1
 18798  016646  5E01               	subwf	btemp^0,f,c
 18799  016648  0EFF               	movlw	-1
 18800  01664A  0060  F007  FFE3   	movff	btemp,plusw1
 18801  016650  A4D8               	btfss	status,2,c
 18802  016652  D791               	goto	u5920
 18803  016654                     u5940:
 18804                           
 18805                           ;stkvar	_sign @ sp[(-10)+8]
 18806  016654  0EFE               	movlw	-2
 18807  016656  50E3               	movf	plusw1,w,c
 18808  016658  B4D8               	btfsc	status,2,c
 18809  01665A  D025               	goto	u5960
 18810                           
 18811                           ;stkvar	_quotient @ sp[(-10)+0]
 18812                           ;stkvar	_quotient @ sp[(-10)+0]
 18813  01665C  0EF6               	movlw	-10
 18814  01665E  6CE3               	negf	plusw1,c
 18815  016660  0EF7               	movlw	-9
 18816  016662  1EE3               	comf	plusw1,f,c
 18817  016664  0EF8               	movlw	-8
 18818  016666  1EE3               	comf	plusw1,f,c
 18819  016668  0EF9               	movlw	-7
 18820  01666A  1EE3               	comf	plusw1,f,c
 18821  01666C  0EFA               	movlw	-6
 18822  01666E  1EE3               	comf	plusw1,f,c
 18823  016670  0EFB               	movlw	-5
 18824  016672  1EE3               	comf	plusw1,f,c
 18825  016674  0EFC               	movlw	-4
 18826  016676  1EE3               	comf	plusw1,f,c
 18827  016678  0EFD               	movlw	-3
 18828  01667A  1EE3               	comf	plusw1,f,c
 18829  01667C  E314               	bnc	u5960
 18830  01667E  0EF7               	movlw	-9
 18831  016680  2AE3               	incf	plusw1,f,c
 18832  016682  E311               	bnc	u5960
 18833  016684  0EF8               	movlw	-8
 18834  016686  2AE3               	incf	plusw1,f,c
 18835  016688  E30E               	bnc	u5960
 18836  01668A  0EF9               	movlw	-7
 18837  01668C  2AE3               	incf	plusw1,f,c
 18838  01668E  E30B               	bnc	u5960
 18839  016690  0EFA               	movlw	-6
 18840  016692  2AE3               	incf	plusw1,f,c
 18841  016694  E308               	bnc	u5960
 18842  016696  0EFB               	movlw	-5
 18843  016698  2AE3               	incf	plusw1,f,c
 18844  01669A  E305               	bnc	u5960
 18845  01669C  0EFC               	movlw	-4
 18846  01669E  2AE3               	incf	plusw1,f,c
 18847  0166A0  E302               	bnc	u5960
 18848  0166A2  0EFD               	movlw	-3
 18849  0166A4  2AE3               	incf	plusw1,f,c
 18850  0166A6                     u5960:
 18851                           
 18852                           ;stkvar	_quotient @ sp[(-10)+0]
 18853  0166A6  0EF6               	movlw	246
 18854  0166A8  24E1               	addwf	fsr1l,w,c
 18855  0166AA  6ED9               	movwf	fsr2l,c
 18856  0166AC  0EFF               	movlw	255
 18857  0166AE  20E2               	addwfc	fsr1h,w,c
 18858  0166B0  6EDA               	movwf	fsr2h,c
 18859                           
 18860                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18861  0166B2  0E08               	movlw	8
 18862  0166B4  6E01               	movwf	btemp^0,c
 18863  0166B6  0EEE               	movlw	-18
 18864  0166B8                     us597999:
 18865  0166B8  006F FF7B FFE3     	movff	postinc2,plusw1
 18866  0166BE  28E8               	incf	wreg,w,c
 18867  0166C0  2E01               	decfsz	btemp^0,f,c
 18868  0166C2  D7FA               	bra	us597999
 18869                           
 18870                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 18871  0166C4  0EF6               	movlw	246
 18872  0166C6  26E1               	addwf	fsr1l,f,c
 18873  0166C8  0EFF               	movlw	255
 18874  0166CA  22E2               	addwfc	fsr1h,f,c
 18875  0166CC  0012               	return		;funcret
 18876  0166CE                     __end_of___aodiv:
 18877                           	opt callstack 0
 18878                           
 18879 ;; *************** function _ctoa *****************
 18880 ;; Defined at:
 18881 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18882 ;; Parameters:    Size  Location     Type
 18883 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18884 ;;		 -> f(6), NULL(0), 
 18885 ;;  c               1  [STACK] unsigned char 
 18886 ;; Auto vars:     Size  Location     Type
 18887 ;;  w               2  [STACK] int 
 18888 ;;  l               2    0        int 
 18889 ;; Return value:  Size  Location     Type
 18890 ;;                  2  [STACK] int 
 18891 ;; Registers used:
 18892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18893 ;; Tracked objects:
 18894 ;;		On entry : 0/0
 18895 ;;		On exit  : 0/0
 18896 ;;		Unchanged: 0/0
 18897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18902 ;;Total ram usage:        0 bytes
 18903 ;; Hardware stack levels used:    1
 18904 ;; Hardware stack levels required when called:   20
 18905 ;; This function calls:
 18906 ;;		_pad
 18907 ;; This function is called by:
 18908 ;;		_vfpfcnvrt
 18909 ;; This function uses a reentrant model
 18910 ;;
 18911                           
 18912                           	psect	text66
 18913  019718                     __ptext66:
 18914                           	opt callstack 0
 18915  019718                     _ctoa:
 18916                           	opt callstack 0
 18917                           
 18918                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18919  019718  52E6               	movf	postinc1,f,c
 18920  01971A  52E6               	movf	postinc1,f,c
 18921                           
 18922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18923                           
 18924                           ;incstack = 0
 18925 ;; hardware stack exceeded
 18926  01971C  5021               	movf	_width^0,w,c
 18927  01971E  1022               	iorwf	(_width+1)^0,w,c
 18928  019720  A4D8               	btfss	status,2,c
 18929  019722  D009               	goto	l11012
 18930                           
 18931                           ;stkvar	_w @ sp[(-2)+0]
 18932  019724  0EFE               	movlw	-2
 18933  019726  0060  F087  FFE3   	movff	_width,plusw1
 18934  01972C  0EFF               	movlw	-1
 18935  01972E  0060  F08B  FFE3   	movff	_width+1,plusw1
 18936  019734  D016               	goto	l11014
 18937  019736                     l11012:
 18938  019736  0EFF               	movlw	255
 18939  019738  6E0B               	movwf	(btemp+10)^0,c
 18940  01973A  0EFF               	movlw	255
 18941  01973C  6E0C               	movwf	(btemp+11)^0,c
 18942  01973E  0060  F084  F009   	movff	_width,btemp+8
 18943  019744  0060  F088  F00A   	movff	_width+1,btemp+9
 18944  01974A  500B               	movf	(btemp+10)^0,w,c
 18945  01974C  2609               	addwf	(btemp+8)^0,f,c
 18946  01974E  500C               	movf	(btemp+11)^0,w,c
 18947  019750  220A               	addwfc	(btemp+9)^0,f,c
 18948                           
 18949                           ;stkvar	_w @ sp[(-2)+0]
 18950  019752  0EFE               	movlw	-2
 18951  019754  0060  F027  FFE3   	movff	btemp+8,plusw1
 18952  01975A  0EFF               	movlw	-1
 18953  01975C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18954  019762                     l11014:
 18955                           
 18956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18957                           ;stkvar	_c @ sp[(-2)+-3]
 18958  019762  0EFB               	movlw	-5
 18959  019764  006F FF8C  F394    	movff	plusw1,_dbuf
 18960                           
 18961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18962  01976A  0103               	movlb	3	; () banked
 18963  01976C  6B95               	clrf	(_dbuf+1)& (0+255),b
 18964                           
 18965                           ; BSR set to: 3
 18966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18967                           ;stkvar	_w @ sp[(-2)+0]
 18968  01976E  0EFE               	movlw	-2
 18969  019770  006F FF8F FFE6     	movff	plusw1,postinc1
 18970  019776  006F FF8F FFE6     	movff	plusw1,postinc1
 18971  01977C  0E94               	movlw	low _dbuf
 18972  01977E  6EE6               	movwf	postinc1,c
 18973  019780  0E03               	movlw	high _dbuf
 18974  019782  6EE6               	movwf	postinc1,c
 18975                           
 18976                           ;stkvar	_fp @ sp[(-6)+-2]
 18977  019784  0EF8               	movlw	-8
 18978  019786  006F FF8F FFE6     	movff	plusw1,postinc1
 18979  01978C  006F FF8F FFE6     	movff	plusw1,postinc1
 18980  019792  EC6D  F0C3         	call	_pad	;wreg free
 18981                           
 18982                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18983  019796  0EFB               	movlw	251
 18984  019798  26E1               	addwf	fsr1l,f,c
 18985  01979A  0EFF               	movlw	255
 18986  01979C  22E2               	addwfc	fsr1h,f,c
 18987  01979E  0012               	return		;funcret
 18988  0197A0                     __end_of_ctoa:
 18989                           	opt callstack 0
 18990                           
 18991 ;; *************** function _pad *****************
 18992 ;; Defined at:
 18993 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18994 ;; Parameters:    Size  Location     Type
 18995 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18996 ;;		 -> f(6), NULL(0), 
 18997 ;;  buf             2  [STACK] PTR unsigned char 
 18998 ;;		 -> dbuf(80), 
 18999 ;;  p               2  [STACK] int 
 19000 ;; Auto vars:     Size  Location     Type
 19001 ;;  w               2  [STACK] int 
 19002 ;;  i               2  [STACK] int 
 19003 ;; Return value:  Size  Location     Type
 19004 ;;                  2  [STACK] int 
 19005 ;; Registers used:
 19006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19007 ;; Tracked objects:
 19008 ;;		On entry : 0/3
 19009 ;;		On exit  : 0/0
 19010 ;;		Unchanged: 0/0
 19011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19016 ;;Total ram usage:        0 bytes
 19017 ;; Hardware stack levels used:    1
 19018 ;; Hardware stack levels required when called:   19
 19019 ;; This function calls:
 19020 ;;		_fputc
 19021 ;;		_fputs
 19022 ;;		_strlen
 19023 ;; This function is called by:
 19024 ;;		_ctoa
 19025 ;;		_dtoa
 19026 ;;		_efgtoa
 19027 ;;		_utoa
 19028 ;;		_xtoa
 19029 ;; This function uses a reentrant model
 19030 ;;
 19031                           
 19032                           	psect	text67
 19033  0186DA                     __ptext67:
 19034                           	opt callstack 0
 19035  0186DA                     _pad:
 19036                           	opt callstack 0
 19037                           
 19038                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19039  0186DA  52E6               	movf	postinc1,f,c
 19040  0186DC  52E6               	movf	postinc1,f,c
 19041  0186DE  52E6               	movf	postinc1,f,c
 19042  0186E0  52E6               	movf	postinc1,f,c
 19043                           
 19044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19045                           
 19046                           ;incstack = 0
 19047 ;; hardware stack exceeded
 19048  0186E2  A025               	btfss	_flags^0,0,c
 19049  0186E4  D010               	goto	l10944
 19050                           
 19051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19052                           ;stkvar	_fp @ sp[(-4)+-2]
 19053  0186E6  0EFA               	movlw	-6
 19054  0186E8  006F FF8F FFE6     	movff	plusw1,postinc1
 19055  0186EE  006F FF8F FFE6     	movff	plusw1,postinc1
 19056                           
 19057                           ;stkvar	_buf @ sp[(-6)+-4]
 19058  0186F4  0EF6               	movlw	-10
 19059  0186F6  006F FF8F FFE6     	movff	plusw1,postinc1
 19060  0186FC  006F FF8F FFE6     	movff	plusw1,postinc1
 19061  018702  EC1D  F0CA         	call	_fputs	;wreg free
 19062  018706                     l10944:
 19063                           
 19064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19065                           ;stkvar	_p @ sp[(-4)+-6]
 19066  018706  0EF7               	movlw	-9
 19067  018708  BEE3               	btfsc	plusw1,7,c
 19068  01870A  D011               	goto	l10948
 19069                           
 19070                           ;stkvar	_p @ sp[(-4)+-6]
 19071                           ;stkvar	_w @ sp[(-4)+0]
 19072  01870C  0EF6               	movlw	-10
 19073  01870E  006F FF8C  F001    	movff	plusw1,btemp
 19074  018714  0EFC               	movlw	-4
 19075  018716  0060  F007  FFE3   	movff	btemp,plusw1
 19076  01871C  0EF7               	movlw	-9
 19077  01871E  006F FF8C  F001    	movff	plusw1,btemp
 19078  018724  0EFD               	movlw	-3
 19079  018726  0060  F007  FFE3   	movff	btemp,plusw1
 19080  01872C  D004               	goto	l2048
 19081  01872E                     l10948:
 19082                           
 19083                           ;stkvar	_w @ sp[(-4)+0]
 19084  01872E  0EFC               	movlw	-4
 19085  018730  6AE3               	clrf	plusw1,c
 19086  018732  0EFD               	movlw	-3
 19087  018734  6AE3               	clrf	plusw1,c
 19088  018736                     l2048:
 19089                           
 19090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19091                           ;stkvar	_i @ sp[(-4)+2]
 19092  018736  0EFE               	movlw	-2
 19093  018738  6AE3               	clrf	plusw1,c
 19094  01873A  0EFF               	movlw	-1
 19095  01873C  6AE3               	clrf	plusw1,c
 19096                           
 19097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19098  01873E  D01E               	goto	l10954
 19099  018740                     l10950:
 19100                           
 19101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19102                           ;stkvar	_fp @ sp[(-4)+-2]
 19103  018740  0EFA               	movlw	-6
 19104  018742  006F FF8F FFE6     	movff	plusw1,postinc1
 19105  018748  006F FF8F FFE6     	movff	plusw1,postinc1
 19106  01874E  0E20               	movlw	32
 19107  018750  6EE6               	movwf	postinc1,c
 19108  018752  0E00               	movlw	0
 19109  018754  6EE6               	movwf	postinc1,c
 19110  018756  EC4F  F0C2         	call	_fputc	;wreg free
 19111                           
 19112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19113                           ;stkvar	_i @ sp[(-4)+2]
 19114  01875A  0EFE               	movlw	-2
 19115  01875C  50E3               	movf	plusw1,w,c
 19116  01875E  0F01               	addlw	1
 19117  018760  6E01               	movwf	btemp^0,c
 19118  018762  0EFE               	movlw	-2
 19119  018764  0060  F007  FFE3   	movff	btemp,plusw1
 19120  01876A  6A01               	clrf	btemp^0,c
 19121  01876C  0EFF               	movlw	-1
 19122  01876E  50E3               	movf	plusw1,w,c
 19123  018770  2001               	addwfc	btemp^0,w,c
 19124  018772  6E01               	movwf	btemp^0,c
 19125  018774  0EFF               	movlw	-1
 19126  018776  0060  F007  FFE3   	movff	btemp,plusw1
 19127  01877C                     l10954:
 19128                           
 19129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19130                           ;stkvar	_w @ sp[(-4)+0]
 19131                           ;stkvar	_i @ sp[(-4)+2]
 19132  01877C  50E1               	movf	fsr1l,w,c
 19133  01877E  0FFE               	addlw	-2
 19134  018780  6ED9               	movwf	fsr2l,c
 19135  018782  50E2               	movf	fsr1h,w,c
 19136  018784  6EDA               	movwf	fsr2h,c
 19137  018786  0EFF               	movlw	255
 19138  018788  22DA               	addwfc	fsr2h,f,c
 19139  01878A  0EFC               	movlw	-4
 19140  01878C  50E3               	movf	plusw1,w,c
 19141  01878E  5CDE               	subwf	postinc2,w,c
 19142  018790  50DE               	movf	postinc2,w,c
 19143  018792  0A80               	xorlw	128
 19144  018794  6E01               	movwf	btemp^0,c
 19145  018796  0EFD               	movlw	-3
 19146  018798  50E3               	movf	plusw1,w,c
 19147  01879A  0A80               	xorlw	128
 19148  01879C  5801               	subwfb	btemp^0,w,c
 19149  01879E  A0D8               	btfss	status,0,c
 19150  0187A0  D7CF               	goto	l10950
 19151                           
 19152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19153  0187A2  B025               	btfsc	_flags^0,0,c
 19154  0187A4  D010               	goto	l10958
 19155                           
 19156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19157                           ;stkvar	_fp @ sp[(-4)+-2]
 19158  0187A6  0EFA               	movlw	-6
 19159  0187A8  006F FF8F FFE6     	movff	plusw1,postinc1
 19160  0187AE  006F FF8F FFE6     	movff	plusw1,postinc1
 19161                           
 19162                           ;stkvar	_buf @ sp[(-6)+-4]
 19163  0187B4  0EF6               	movlw	-10
 19164  0187B6  006F FF8F FFE6     	movff	plusw1,postinc1
 19165  0187BC  006F FF8F FFE6     	movff	plusw1,postinc1
 19166  0187C2  EC1D  F0CA         	call	_fputs	;wreg free
 19167  0187C6                     l10958:
 19168                           
 19169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19170                           ;stkvar	_w @ sp[(-4)+0]
 19171                           ;stkvar	_buf @ sp[(-4)+-4]
 19172  0187C6  0EF8               	movlw	-8
 19173  0187C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19174  0187CE  006F FF8F FFE6     	movff	plusw1,postinc1
 19175  0187D4  ECCC  F0C9         	call	_strlen	;wreg free
 19176  0187D8  0EFC               	movlw	-4
 19177  0187DA  50E3               	movf	plusw1,w,c
 19178  0187DC  2601               	addwf	btemp^0,f,c
 19179  0187DE  0EFD               	movlw	-3
 19180  0187E0  50E3               	movf	plusw1,w,c
 19181  0187E2  2202               	addwfc	(btemp+1)^0,f,c
 19182                           
 19183                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19184  0187E4  0EF6               	movlw	246
 19185  0187E6  26E1               	addwf	fsr1l,f,c
 19186  0187E8  0EFF               	movlw	255
 19187  0187EA  22E2               	addwfc	fsr1h,f,c
 19188  0187EC  0012               	return		;funcret
 19189  0187EE                     __end_of_pad:
 19190                           	opt callstack 0
 19191                           
 19192 ;; *************** function _strlen *****************
 19193 ;; Defined at:
 19194 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19195 ;; Parameters:    Size  Location     Type
 19196 ;;  s               2  [STACK] PTR const unsigned char 
 19197 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19198 ;;		 -> STR_29(9), STR_28(12), D.lcd(288), D(290), 
 19199 ;;		 -> T(144), port_data(512), STR_7(6), STR_3(6), 
 19200 ;;		 -> V(188), 
 19201 ;; Auto vars:     Size  Location     Type
 19202 ;;  a               2  [STACK] PTR const unsigned char 
 19203 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19204 ;;		 -> STR_29(9), STR_28(12), D.lcd(288), D(290), 
 19205 ;;		 -> T(144), port_data(512), STR_7(6), STR_3(6), 
 19206 ;;		 -> V(188), 
 19207 ;; Return value:  Size  Location     Type
 19208 ;;                  2  [STACK] unsigned int 
 19209 ;; Registers used:
 19210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19211 ;; Tracked objects:
 19212 ;;		On entry : 0/0
 19213 ;;		On exit  : 0/0
 19214 ;;		Unchanged: 0/0
 19215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19220 ;;Total ram usage:        0 bytes
 19221 ;; Hardware stack levels used:    1
 19222 ;; Hardware stack levels required when called:   15
 19223 ;; This function calls:
 19224 ;;		Nothing
 19225 ;; This function is called by:
 19226 ;;		_eaDogM_WriteString
 19227 ;;		_calc_bsoc
 19228 ;;		_pad
 19229 ;;		_stoa
 19230 ;; This function uses a reentrant model
 19231 ;;
 19232                           
 19233                           	psect	text68
 19234  019398                     __ptext68:
 19235                           	opt callstack 0
 19236  019398                     _strlen:
 19237                           	opt callstack 0
 19238                           
 19239                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19240  019398  52E6               	movf	postinc1,f,c
 19241  01939A  52E6               	movf	postinc1,f,c
 19242                           
 19243                           ;stkvar	_s @ sp[(-2)+-2]
 19244                           
 19245                           ;incstack = 0
 19246 ;; hardware stack exceeded
 19247  01939C  0EFC               	movlw	-4
 19248  01939E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19249  0193A4  0EFD               	movlw	-3
 19250  0193A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 19251                           
 19252                           ;stkvar	_a @ sp[(-2)+0]
 19253  0193AC  0EFF               	movlw	-1
 19254  0193AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19255  0193B4  0EFE               	movlw	-2
 19256  0193B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19257  0193BC  D011               	goto	l7190
 19258  0193BE                     l7188:
 19259                           
 19260                           ;stkvar	_s @ sp[(-2)+-2]
 19261  0193BE  0EFC               	movlw	-4
 19262  0193C0  50E3               	movf	plusw1,w,c
 19263  0193C2  0F01               	addlw	1
 19264  0193C4  6E01               	movwf	btemp^0,c
 19265  0193C6  0EFC               	movlw	-4
 19266  0193C8  0060  F007  FFE3   	movff	btemp,plusw1
 19267  0193CE  6A01               	clrf	btemp^0,c
 19268  0193D0  0EFD               	movlw	-3
 19269  0193D2  50E3               	movf	plusw1,w,c
 19270  0193D4  2001               	addwfc	btemp^0,w,c
 19271  0193D6  6E01               	movwf	btemp^0,c
 19272  0193D8  0EFD               	movlw	-3
 19273  0193DA  0060  F007  FFE3   	movff	btemp,plusw1
 19274  0193E0                     l7190:
 19275                           
 19276                           ;stkvar	_s @ sp[(-2)+-2]
 19277  0193E0  0EFC               	movlw	-4
 19278  0193E2  006F FF8F FFF6     	movff	plusw1,tblptrl
 19279  0193E8  0EFD               	movlw	-3
 19280  0193EA  006F FF8F FFF7     	movff	plusw1,tblptrh
 19281  0193F0  0E00               	movlw	low (__mediumconst shr (0+16))
 19282  0193F2  6EF8               	movwf	tblptru,c
 19283  0193F4  0E1F               	movlw	(high __ramtop+-1)
 19284  0193F6  64F7               	cpfsgt	tblptrh,c
 19285  0193F8  D003               	bra	u5037
 19286  0193FA  0008               	tblrd		*
 19287  0193FC  50F5               	movf	tablat,w,c
 19288  0193FE  D007               	bra	u5030
 19289  019400                     u5037:
 19290  019400  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19291  019406  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19292  01940C  50EF               	movf	indf0,w,c
 19293  01940E                     u5030:
 19294  01940E  0900               	iorlw	0
 19295  019410  A4D8               	btfss	status,2,c
 19296  019412  D7D5               	goto	l7188
 19297                           
 19298                           ;stkvar	_a @ sp[(-2)+0]
 19299                           ;stkvar	_s @ sp[(-2)+-2]
 19300  019414  0EFC               	movlw	-4
 19301  019416  006F FF8C  F001    	movff	plusw1,btemp
 19302  01941C  0EFD               	movlw	-3
 19303  01941E  006F FF8C  F002    	movff	plusw1,btemp+1
 19304  019424  0EFE               	movlw	-2
 19305  019426  50E3               	movf	plusw1,w,c
 19306  019428  5E01               	subwf	btemp^0,f,c
 19307  01942A  0EFF               	movlw	-1
 19308  01942C  50E3               	movf	plusw1,w,c
 19309  01942E  5A02               	subwfb	(btemp+1)^0,f,c
 19310                           
 19311                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19312  019430  52E5               	movf	postdec1,f,c
 19313  019432  52E5               	movf	postdec1,f,c
 19314  019434  52E5               	movf	postdec1,f,c
 19315  019436  52E5               	movf	postdec1,f,c
 19316  019438  0012               	return		;funcret
 19317  01943A                     __end_of_strlen:
 19318                           	opt callstack 0
 19319                           
 19320 ;; *************** function _fputs *****************
 19321 ;; Defined at:
 19322 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19323 ;; Parameters:    Size  Location     Type
 19324 ;;  s               2  [STACK] PTR const unsigned char 
 19325 ;;		 -> dbuf(80), 
 19326 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19327 ;;		 -> f(6), NULL(0), 
 19328 ;; Auto vars:     Size  Location     Type
 19329 ;;  i               2  [STACK] int 
 19330 ;;  c               1  [STACK] unsigned char 
 19331 ;; Return value:  Size  Location     Type
 19332 ;;                  2  [STACK] int 
 19333 ;; Registers used:
 19334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19335 ;; Tracked objects:
 19336 ;;		On entry : 0/3
 19337 ;;		On exit  : 0/0
 19338 ;;		Unchanged: 0/0
 19339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19344 ;;Total ram usage:        0 bytes
 19345 ;; Hardware stack levels used:    1
 19346 ;; Hardware stack levels required when called:   18
 19347 ;; This function calls:
 19348 ;;		_fputc
 19349 ;; This function is called by:
 19350 ;;		_pad
 19351 ;; This function uses a reentrant model
 19352 ;;
 19353                           
 19354                           	psect	text69
 19355  01943A                     __ptext69:
 19356                           	opt callstack 0
 19357  01943A                     _fputs:
 19358                           	opt callstack 0
 19359                           
 19360                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19361  01943A  52E6               	movf	postinc1,f,c
 19362  01943C  52E6               	movf	postinc1,f,c
 19363  01943E  52E6               	movf	postinc1,f,c
 19364                           
 19365                           ;stkvar	_i @ sp[(-3)+0]
 19366                           
 19367                           ;incstack = 0
 19368 ;; hardware stack exceeded
 19369  019440  0EFD               	movlw	-3
 19370  019442  6AE3               	clrf	plusw1,c
 19371  019444  0EFE               	movlw	-2
 19372  019446  6AE3               	clrf	plusw1,c
 19373  019448  D01F               	goto	l10938
 19374  01944A                     l10934:
 19375                           
 19376                           ;stkvar	_fp @ sp[(-3)+-4]
 19377  01944A  0EF9               	movlw	-7
 19378  01944C  006F FF8F FFE6     	movff	plusw1,postinc1
 19379  019452  006F FF8F FFE6     	movff	plusw1,postinc1
 19380                           
 19381                           ;stkvar	_c @ sp[(-5)+2]
 19382  019458  0EFD               	movlw	-3
 19383  01945A  50E3               	movf	plusw1,w,c
 19384  01945C  6EE6               	movwf	postinc1,c
 19385  01945E  0E00               	movlw	0
 19386  019460  6EE6               	movwf	postinc1,c
 19387  019462  EC4F  F0C2         	call	_fputc	;wreg free
 19388                           
 19389                           ;stkvar	_i @ sp[(-3)+0]
 19390  019466  0EFD               	movlw	-3
 19391  019468  50E3               	movf	plusw1,w,c
 19392  01946A  0F01               	addlw	1
 19393  01946C  6E01               	movwf	btemp^0,c
 19394  01946E  0EFD               	movlw	-3
 19395  019470  0060  F007  FFE3   	movff	btemp,plusw1
 19396  019476  6A01               	clrf	btemp^0,c
 19397  019478  0EFE               	movlw	-2
 19398  01947A  50E3               	movf	plusw1,w,c
 19399  01947C  2001               	addwfc	btemp^0,w,c
 19400  01947E  6E01               	movwf	btemp^0,c
 19401  019480  0EFE               	movlw	-2
 19402  019482  0060  F007  FFE3   	movff	btemp,plusw1
 19403  019488                     l10938:
 19404                           
 19405                           ;stkvar	_i @ sp[(-3)+0]
 19406  019488  0EFD               	movlw	-3
 19407  01948A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19408  019490  0EFE               	movlw	-2
 19409  019492  006F FF8C  F00C    	movff	plusw1,btemp+11
 19410                           
 19411                           ;stkvar	_s @ sp[(-3)+-2]
 19412  019498  0EFB               	movlw	-5
 19413  01949A  006F FF8C  F009    	movff	plusw1,btemp+8
 19414  0194A0  0EFC               	movlw	-4
 19415  0194A2  006F FF8C  F00A    	movff	plusw1,btemp+9
 19416  0194A8  500B               	movf	(btemp+10)^0,w,c
 19417  0194AA  2409               	addwf	(btemp+8)^0,w,c
 19418  0194AC  6ED9               	movwf	fsr2l,c
 19419  0194AE  500C               	movf	(btemp+11)^0,w,c
 19420  0194B0  200A               	addwfc	(btemp+9)^0,w,c
 19421  0194B2  6EDA               	movwf	fsr2h,c
 19422  0194B4  50DF               	movf	indf2,w,c
 19423  0194B6  6E0C               	movwf	(btemp+11)^0,c
 19424                           
 19425                           ;stkvar	_c @ sp[(-3)+2]
 19426  0194B8  0EFF               	movlw	-1
 19427  0194BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 19428  0194C0  0EFF               	movlw	-1
 19429  0194C2  50E3               	movf	plusw1,w,c
 19430  0194C4  A4D8               	btfss	status,2,c
 19431  0194C6  D7C1               	goto	l10934
 19432                           
 19433                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19434  0194C8  0EF9               	movlw	249
 19435  0194CA  26E1               	addwf	fsr1l,f,c
 19436  0194CC  0EFF               	movlw	255
 19437  0194CE  22E2               	addwfc	fsr1h,f,c
 19438  0194D0  0012               	return		;funcret
 19439  0194D2                     __end_of_fputs:
 19440                           	opt callstack 0
 19441                           
 19442 ;; *************** function _fputc *****************
 19443 ;; Defined at:
 19444 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19445 ;; Parameters:    Size  Location     Type
 19446 ;;  c               2  [STACK] int 
 19447 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19448 ;;		 -> f(6), NULL(0), 
 19449 ;; Auto vars:     Size  Location     Type
 19450 ;;		None
 19451 ;; Return value:  Size  Location     Type
 19452 ;;                  2  [STACK] int 
 19453 ;; Registers used:
 19454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19455 ;; Tracked objects:
 19456 ;;		On entry : 0/0
 19457 ;;		On exit  : 0/0
 19458 ;;		Unchanged: 0/0
 19459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19464 ;;Total ram usage:        0 bytes
 19465 ;; Hardware stack levels used:    1
 19466 ;; Hardware stack levels required when called:   17
 19467 ;; This function calls:
 19468 ;;		_putch
 19469 ;; This function is called by:
 19470 ;;		_pad
 19471 ;;		_stoa
 19472 ;;		_vfpfcnvrt
 19473 ;;		_fputs
 19474 ;; This function uses a reentrant model
 19475 ;;
 19476                           
 19477                           	psect	text70
 19478  01849E                     __ptext70:
 19479                           	opt callstack 0
 19480  01849E                     _fputc:
 19481                           	opt callstack 0
 19482                           
 19483                           ;stkvar	_fp @ sp[(0)+-4]
 19484                           
 19485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19486                           ;incstack = 0
 19487 ;; hardware stack exceeded
 19488  01849E  0EFC               	movlw	-4
 19489  0184A0  006F FF8C  F001    	movff	plusw1,btemp
 19490  0184A6  0EFD               	movlw	-3
 19491  0184A8  50E3               	movf	plusw1,w,c
 19492  0184AA  1001               	iorwf	btemp^0,w,c
 19493  0184AC  B4D8               	btfsc	status,2,c
 19494  0184AE  D009               	goto	u9970
 19495                           
 19496                           ;stkvar	_fp @ sp[(0)+-4]
 19497  0184B0  0EFC               	movlw	-4
 19498  0184B2  006F FF8C  F001    	movff	plusw1,btemp
 19499  0184B8  0EFD               	movlw	-3
 19500  0184BA  50E3               	movf	plusw1,w,c
 19501  0184BC  1001               	iorwf	btemp^0,w,c
 19502  0184BE  A4D8               	btfss	status,2,c
 19503  0184C0  D006               	goto	l10922
 19504  0184C2                     u9970:
 19505                           
 19506                           ;stkvar	_c @ sp[(0)+-2]
 19507  0184C2  0EFE               	movlw	-2
 19508  0184C4  50E3               	movf	plusw1,w,c
 19509  0184C6  6EE6               	movwf	postinc1,c
 19510  0184C8  EC12  F0D5         	call	_putch	;wreg free
 19511  0184CC  D075               	goto	l3094
 19512  0184CE                     l10922:
 19513                           
 19514                           ;stkvar	_fp @ sp[(0)+-4]
 19515  0184CE  0EFC               	movlw	-4
 19516  0184D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19517  0184D6  0EFD               	movlw	-3
 19518  0184D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19519  0184DE  0E04               	movlw	4
 19520  0184E0  240B               	addwf	(btemp+10)^0,w,c
 19521  0184E2  6ED9               	movwf	fsr2l,c
 19522  0184E4  0E00               	movlw	0
 19523  0184E6  200C               	addwfc	(btemp+11)^0,w,c
 19524  0184E8  6EDA               	movwf	fsr2h,c
 19525  0184EA  50DE               	movf	postinc2,w,c
 19526  0184EC  10DE               	iorwf	postinc2,w,c
 19527  0184EE  B4D8               	btfsc	status,2,c
 19528  0184F0  D026               	goto	u9990
 19529                           
 19530                           ;stkvar	_fp @ sp[(0)+-4]
 19531  0184F2  0EFC               	movlw	-4
 19532  0184F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19533  0184FA  0EFD               	movlw	-3
 19534  0184FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19535  018502  0E04               	movlw	4
 19536  018504  240B               	addwf	(btemp+10)^0,w,c
 19537  018506  6ED9               	movwf	fsr2l,c
 19538  018508  0E00               	movlw	0
 19539  01850A  200C               	addwfc	(btemp+11)^0,w,c
 19540  01850C  6EDA               	movwf	fsr2h,c
 19541                           
 19542                           ;stkvar	_fp @ sp[(0)+-4]
 19543  01850E  0EFC               	movlw	-4
 19544  018510  006F FF8C  F00B    	movff	plusw1,btemp+10
 19545  018516  0EFD               	movlw	-3
 19546  018518  006F FF8C  F00C    	movff	plusw1,btemp+11
 19547  01851E  0E02               	movlw	2
 19548  018520  240B               	addwf	(btemp+10)^0,w,c
 19549  018522  6EE9               	movwf	fsr0l,c
 19550  018524  0E00               	movlw	0
 19551  018526  200C               	addwfc	(btemp+11)^0,w,c
 19552  018528  6EEA               	movwf	fsr0h,c
 19553  01852A  50DE               	movf	postinc2,w,c
 19554  01852C  5CEE               	subwf	postinc0,w,c
 19555  01852E  50EE               	movf	postinc0,w,c
 19556  018530  0A80               	xorlw	128
 19557  018532  6E01               	movwf	btemp^0,c
 19558  018534  50DE               	movf	postinc2,w,c
 19559  018536  0A80               	xorlw	128
 19560  018538  5801               	subwfb	btemp^0,w,c
 19561  01853A  B0D8               	btfsc	status,0,c
 19562  01853C  D03D               	goto	l3094
 19563  01853E                     u9990:
 19564                           
 19565                           ;stkvar	_c @ sp[(0)+-2]
 19566                           ;stkvar	_fp @ sp[(0)+-4]
 19567  01853E  0EFC               	movlw	-4
 19568  018540  006F FF8C  F00B    	movff	plusw1,btemp+10
 19569  018546  0EFD               	movlw	-3
 19570  018548  006F FF8C  F00C    	movff	plusw1,btemp+11
 19571  01854E  0E02               	movlw	2
 19572  018550  240B               	addwf	(btemp+10)^0,w,c
 19573  018552  6ED9               	movwf	fsr2l,c
 19574  018554  0E00               	movlw	0
 19575  018556  200C               	addwfc	(btemp+11)^0,w,c
 19576  018558  6EDA               	movwf	fsr2h,c
 19577  01855A  006F FF78  F00B    	movff	postinc2,btemp+10
 19578  018560  006F FF74  F00C    	movff	postdec2,btemp+11
 19579                           
 19580                           ;stkvar	_fp @ sp[(0)+-4]
 19581  018566  0EFC               	movlw	-4
 19582  018568  006F FF8F FFD9     	movff	plusw1,fsr2l
 19583  01856E  0EFD               	movlw	-3
 19584  018570  006F FF8F FFDA     	movff	plusw1,fsr2h
 19585  018576  006F FF78  F009    	movff	postinc2,btemp+8
 19586  01857C  006F FF74  F00A    	movff	postdec2,btemp+9
 19587  018582  500B               	movf	(btemp+10)^0,w,c
 19588  018584  2409               	addwf	(btemp+8)^0,w,c
 19589  018586  6ED9               	movwf	fsr2l,c
 19590  018588  500C               	movf	(btemp+11)^0,w,c
 19591  01858A  200A               	addwfc	(btemp+9)^0,w,c
 19592  01858C  6EDA               	movwf	fsr2h,c
 19593  01858E  0EFE               	movlw	-2
 19594  018590  006F FF8F FFDF     	movff	plusw1,indf2
 19595                           
 19596                           ;stkvar	_fp @ sp[(0)+-4]
 19597  018596  0EFC               	movlw	-4
 19598  018598  006F FF8C  F00B    	movff	plusw1,btemp+10
 19599  01859E  0EFD               	movlw	-3
 19600  0185A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19601  0185A6  0E02               	movlw	2
 19602  0185A8  240B               	addwf	(btemp+10)^0,w,c
 19603  0185AA  6ED9               	movwf	fsr2l,c
 19604  0185AC  0E00               	movlw	0
 19605  0185AE  200C               	addwfc	(btemp+11)^0,w,c
 19606  0185B0  6EDA               	movwf	fsr2h,c
 19607  0185B2  2ADE               	incf	postinc2,f,c
 19608  0185B4  0E00               	movlw	0
 19609  0185B6  22DD               	addwfc	postdec2,f,c
 19610  0185B8                     l3094:
 19611                           
 19612                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19613  0185B8  52E5               	movf	postdec1,f,c
 19614  0185BA  52E5               	movf	postdec1,f,c
 19615  0185BC  52E5               	movf	postdec1,f,c
 19616  0185BE  52E5               	movf	postdec1,f,c
 19617  0185C0  0012               	return		;funcret
 19618  0185C2                     __end_of_fputc:
 19619                           	opt callstack 0
 19620                           
 19621 ;; *************** function _putch *****************
 19622 ;; Defined at:
 19623 ;;		line 170 in file "eadog.c"
 19624 ;; Parameters:    Size  Location     Type
 19625 ;;  c               1  [STACK] unsigned char 
 19626 ;; Auto vars:     Size  Location     Type
 19627 ;;		None
 19628 ;; Return value:  Size  Location     Type
 19629 ;;                  1  [STACK] void 
 19630 ;; Registers used:
 19631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19632 ;; Tracked objects:
 19633 ;;		On entry : 0/0
 19634 ;;		On exit  : 0/0
 19635 ;;		Unchanged: 0/0
 19636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19641 ;;Total ram usage:        0 bytes
 19642 ;; Hardware stack levels used:    1
 19643 ;; Hardware stack levels required when called:   16
 19644 ;; This function calls:
 19645 ;;		_ringBufS_put_dma
 19646 ;; This function is called by:
 19647 ;;		_fputc
 19648 ;; This function uses a reentrant model
 19649 ;;
 19650                           
 19651                           	psect	text71
 19652  01AA24                     __ptext71:
 19653                           	opt callstack 0
 19654  01AA24                     _putch:
 19655                           	opt callstack 0
 19656                           
 19657                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19658                           ;stkvar	_c @ sp[(0)+-1]
 19659                           
 19660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19661                           ;incstack = 0
 19662 ;; hardware stack exceeded
 19663  01AA24  0EFF               	movlw	-1
 19664  01AA26  50E3               	movf	plusw1,w,c
 19665  01AA28  6EE6               	movwf	postinc1,c
 19666  01AA2A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 19667  01AA30  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 19668  01AA36  EC24  F0C9         	call	_ringBufS_put_dma	;wreg free
 19669                           
 19670                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19671  01AA3A  52E5               	movf	postdec1,f,c
 19672  01AA3C  0012               	return		;funcret
 19673  01AA3E                     __end_of_putch:
 19674                           	opt callstack 0
 19675                           
 19676 ;; *************** function _ringBufS_put_dma *****************
 19677 ;; Defined at:
 19678 ;;		line 67 in file "ringbufs.c"
 19679 ;; Parameters:    Size  Location     Type
 19680 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19681 ;;		 -> ring_buf1(67), 
 19682 ;;  c               1  [STACK] const unsigned char 
 19683 ;; Auto vars:     Size  Location     Type
 19684 ;;		None
 19685 ;; Return value:  Size  Location     Type
 19686 ;;                  1  [STACK] void 
 19687 ;; Registers used:
 19688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19689 ;; Tracked objects:
 19690 ;;		On entry : 0/0
 19691 ;;		On exit  : 0/0
 19692 ;;		Unchanged: 0/0
 19693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19698 ;;Total ram usage:        0 bytes
 19699 ;; Hardware stack levels used:    1
 19700 ;; Hardware stack levels required when called:   15
 19701 ;; This function calls:
 19702 ;;		Nothing
 19703 ;; This function is called by:
 19704 ;;		_putch
 19705 ;; This function uses a reentrant model
 19706 ;;
 19707                           
 19708                           	psect	text72
 19709  019248                     __ptext72:
 19710                           	opt callstack 0
 19711  019248                     _ringBufS_put_dma:
 19712                           	opt callstack 0
 19713                           
 19714                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19715                           ;stkvar	__this @ sp[(0)+-2]
 19716                           
 19717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19718                           ;incstack = 0
 19719 ;; hardware stack exceeded
 19720  019248  0EFE               	movlw	-2
 19721  01924A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19722  019250  0EFF               	movlw	-1
 19723  019252  006F FF8C  F00C    	movff	plusw1,btemp+11
 19724  019258  0E42               	movlw	66
 19725  01925A  240B               	addwf	(btemp+10)^0,w,c
 19726  01925C  6ED9               	movwf	fsr2l,c
 19727  01925E  0E00               	movlw	0
 19728  019260  200C               	addwfc	(btemp+11)^0,w,c
 19729  019262  6EDA               	movwf	fsr2h,c
 19730  019264  0E40               	movlw	64
 19731  019266  60DF               	cpfslt	indf2,c
 19732  019268  D040               	goto	l1564
 19733                           
 19734                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19735                           ;stkvar	_c @ sp[(0)+-3]
 19736                           ;stkvar	__this @ sp[(0)+-2]
 19737  01926A  0EFE               	movlw	-2
 19738  01926C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19739  019272  0EFF               	movlw	-1
 19740  019274  006F FF8C  F00C    	movff	plusw1,btemp+11
 19741  01927A  0E40               	movlw	64
 19742  01927C  240B               	addwf	(btemp+10)^0,w,c
 19743  01927E  6ED9               	movwf	fsr2l,c
 19744  019280  0E00               	movlw	0
 19745  019282  200C               	addwfc	(btemp+11)^0,w,c
 19746  019284  6EDA               	movwf	fsr2h,c
 19747  019286  50DF               	movf	indf2,w,c
 19748  019288  6E0C               	movwf	(btemp+11)^0,c
 19749                           
 19750                           ;stkvar	__this @ sp[(0)+-2]
 19751  01928A  0EFE               	movlw	-2
 19752  01928C  006F FF8C  F009    	movff	plusw1,btemp+8
 19753  019292  0EFF               	movlw	-1
 19754  019294  006F FF8C  F00A    	movff	plusw1,btemp+9
 19755  01929A  500C               	movf	(btemp+11)^0,w,c
 19756  01929C  2409               	addwf	(btemp+8)^0,w,c
 19757  01929E  6ED9               	movwf	fsr2l,c
 19758  0192A0  0E00               	movlw	0
 19759  0192A2  200A               	addwfc	(btemp+9)^0,w,c
 19760  0192A4  6EDA               	movwf	fsr2h,c
 19761  0192A6  0EFD               	movlw	-3
 19762  0192A8  006F FF8F FFDF     	movff	plusw1,indf2
 19763                           
 19764                           ;ringbufs.c: 71:   ++_this->head;
 19765                           ;stkvar	__this @ sp[(0)+-2]
 19766  0192AE  0EFE               	movlw	-2
 19767  0192B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19768  0192B6  0EFF               	movlw	-1
 19769  0192B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19770  0192BE  0E40               	movlw	64
 19771  0192C0  240B               	addwf	(btemp+10)^0,w,c
 19772  0192C2  6ED9               	movwf	fsr2l,c
 19773  0192C4  0E00               	movlw	0
 19774  0192C6  200C               	addwfc	(btemp+11)^0,w,c
 19775  0192C8  6EDA               	movwf	fsr2h,c
 19776  0192CA  2ADF               	incf	indf2,f,c
 19777                           
 19778                           ;ringbufs.c: 72:   ++_this->count;
 19779                           ;stkvar	__this @ sp[(0)+-2]
 19780  0192CC  0EFE               	movlw	-2
 19781  0192CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 19782  0192D4  0EFF               	movlw	-1
 19783  0192D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 19784  0192DC  0E42               	movlw	66
 19785  0192DE  240B               	addwf	(btemp+10)^0,w,c
 19786  0192E0  6ED9               	movwf	fsr2l,c
 19787  0192E2  0E00               	movlw	0
 19788  0192E4  200C               	addwfc	(btemp+11)^0,w,c
 19789  0192E6  6EDA               	movwf	fsr2h,c
 19790  0192E8  2ADF               	incf	indf2,f,c
 19791  0192EA                     l1564:
 19792                           
 19793                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19794  0192EA  52E5               	movf	postdec1,f,c
 19795  0192EC  52E5               	movf	postdec1,f,c
 19796  0192EE  52E5               	movf	postdec1,f,c
 19797  0192F0  0012               	return		;funcret
 19798  0192F2                     __end_of_ringBufS_put_dma:
 19799                           	opt callstack 0
 19800                           
 19801 ;; *************** function _atoi *****************
 19802 ;; Defined at:
 19803 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19804 ;; Parameters:    Size  Location     Type
 19805 ;;  s               2  [STACK] PTR const unsigned char 
 19806 ;;		 -> STR_47(79), STR_45(3), STR_44(3), STR_43(19), 
 19807 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
 19808 ;;		 -> STR_38(19), STR_37(24), STR_36(15), STR_35(15), 
 19809 ;;		 -> STR_34(15), STR_33(10), STR_32(10), STR_31(19), 
 19810 ;;		 -> STR_30(19), STR_27(3), STR_26(3), STR_25(3), 
 19811 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(19), 
 19812 ;;		 -> STR_20(20), STR_19(19), STR_18(19), STR_17(19), 
 19813 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
 19814 ;;		 -> STR_12(17), STR_11(16), STR_10(16), STR_9(22), 
 19815 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
 19816 ;;		 -> STR_2(15), STR_1(17), 
 19817 ;; Auto vars:     Size  Location     Type
 19818 ;;  n               2  [STACK] int 
 19819 ;;  neg             2  [STACK] int 
 19820 ;; Return value:  Size  Location     Type
 19821 ;;                  2  [STACK] int 
 19822 ;; Registers used:
 19823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19824 ;; Tracked objects:
 19825 ;;		On entry : 0/0
 19826 ;;		On exit  : 0/0
 19827 ;;		Unchanged: 0/0
 19828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19833 ;;Total ram usage:        0 bytes
 19834 ;; Hardware stack levels used:    1
 19835 ;; Hardware stack levels required when called:   16
 19836 ;; This function calls:
 19837 ;;		_isdigit
 19838 ;;		_isspace
 19839 ;; This function is called by:
 19840 ;;		_vfpfcnvrt
 19841 ;; This function uses a reentrant model
 19842 ;;
 19843                           
 19844                           	psect	text73
 19845  0166CE                     __ptext73:
 19846                           	opt callstack 0
 19847  0166CE                     _atoi:
 19848                           	opt callstack 0
 19849                           
 19850                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19851  0166CE  0E09               	movlw	9
 19852  0166D0  26E1               	addwf	fsr1l,f,c
 19853  0166D2  0E00               	movlw	0
 19854  0166D4  22E2               	addwfc	fsr1h,f,c
 19855                           
 19856                           ;stkvar	_n @ sp[(-9)+5]
 19857                           
 19858                           ;incstack = 0
 19859 ;; hardware stack exceeded
 19860  0166D6  0EFC               	movlw	-4
 19861  0166D8  6AE3               	clrf	plusw1,c
 19862  0166DA  0EFD               	movlw	-3
 19863  0166DC  6AE3               	clrf	plusw1,c
 19864                           
 19865                           ;stkvar	_neg @ sp[(-9)+7]
 19866  0166DE  0EFE               	movlw	-2
 19867  0166E0  6AE3               	clrf	plusw1,c
 19868  0166E2  0EFF               	movlw	-1
 19869  0166E4  6AE3               	clrf	plusw1,c
 19870  0166E6  D011               	goto	l8798
 19871  0166E8                     l8796:
 19872                           
 19873                           ;stkvar	_s @ sp[(-9)+-2]
 19874  0166E8  0EF5               	movlw	-11
 19875  0166EA  50E3               	movf	plusw1,w,c
 19876  0166EC  0F01               	addlw	1
 19877  0166EE  6E01               	movwf	btemp^0,c
 19878  0166F0  0EF5               	movlw	-11
 19879  0166F2  0060  F007  FFE3   	movff	btemp,plusw1
 19880  0166F8  6A01               	clrf	btemp^0,c
 19881  0166FA  0EF6               	movlw	-10
 19882  0166FC  50E3               	movf	plusw1,w,c
 19883  0166FE  2001               	addwfc	btemp^0,w,c
 19884  016700  6E01               	movwf	btemp^0,c
 19885  016702  0EF6               	movlw	-10
 19886  016704  0060  F007  FFE3   	movff	btemp,plusw1
 19887  01670A                     l8798:
 19888                           
 19889                           ;stkvar	_atoi$5788 @ sp[(-9)+4]
 19890  01670A  0EFB               	movlw	-5
 19891  01670C  6AE3               	clrf	plusw1,c
 19892  01670E  2AE3               	incf	plusw1,f,c
 19893                           
 19894                           ;stkvar	_s @ sp[(-9)+-2]
 19895  016710  50E1               	movf	fsr1l,w,c
 19896  016712  0FF5               	addlw	-11
 19897  016714  6ED9               	movwf	fsr2l,c
 19898  016716  50E2               	movf	fsr1h,w,c
 19899  016718  6EDA               	movwf	fsr2h,c
 19900  01671A  0EFF               	movlw	255
 19901  01671C  22DA               	addwfc	fsr2h,f,c
 19902  01671E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19903  016724  006F FF77 FFF7     	movff	postdec2,tblptrh
 19904  01672A                     	if	0	;tblptru may be non-zero
 19905  01672A                     	endif
 19906  01672A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19907  01672A  0E00               	movlw	low (__mediumconst shr (0+16))
 19908  01672C  6EF8               	movwf	tblptru,c
 19909  01672E                     	endif
 19910  01672E  0008               	tblrd		*
 19911  016730  50F5               	movf	tablat,w,c
 19912  016732  0A20               	xorlw	32
 19913  016734  B4D8               	btfsc	status,2,c
 19914  016736  D023               	goto	l8806
 19915  016738  0EF7               	movlw	247
 19916  01673A  6E0B               	movwf	(btemp+10)^0,c
 19917  01673C  0EFF               	movlw	255
 19918  01673E  6E0C               	movwf	(btemp+11)^0,c
 19919                           
 19920                           ;stkvar	_s @ sp[(-9)+-2]
 19921  016740  50E1               	movf	fsr1l,w,c
 19922  016742  0FF5               	addlw	-11
 19923  016744  6ED9               	movwf	fsr2l,c
 19924  016746  50E2               	movf	fsr1h,w,c
 19925  016748  6EDA               	movwf	fsr2h,c
 19926  01674A  0EFF               	movlw	255
 19927  01674C  22DA               	addwfc	fsr2h,f,c
 19928  01674E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19929  016754  006F FF77 FFF7     	movff	postdec2,tblptrh
 19930  01675A                     	if	0	;tblptru may be non-zero
 19931  01675A                     	endif
 19932  01675A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19933  01675A  0E00               	movlw	low (__mediumconst shr (0+16))
 19934  01675C  6EF8               	movwf	tblptru,c
 19935  01675E                     	endif
 19936  01675E  0008               	tblrd		*
 19937  016760  50F5               	movf	tablat,w,c
 19938  016762  6E09               	movwf	(btemp+8)^0,c
 19939  016764  6A0A               	clrf	(btemp+9)^0,c
 19940  016766  500B               	movf	(btemp+10)^0,w,c
 19941  016768  2609               	addwf	(btemp+8)^0,f,c
 19942  01676A  500C               	movf	(btemp+11)^0,w,c
 19943  01676C  220A               	addwfc	(btemp+9)^0,f,c
 19944  01676E  500A               	movf	(btemp+9)^0,w,c
 19945  016770  E104               	bnz	u8140
 19946  016772  0E05               	movlw	5
 19947  016774  5C09               	subwf	(btemp+8)^0,w,c
 19948  016776  A0D8               	btfss	status,0,c
 19949  016778  D002               	goto	l8806
 19950  01677A                     u8140:
 19951                           
 19952                           ;stkvar	_atoi$5788 @ sp[(-9)+4]
 19953  01677A  0EFB               	movlw	-5
 19954  01677C  6AE3               	clrf	plusw1,c
 19955  01677E                     l8806:
 19956                           
 19957                           ;stkvar	_atoi$5788 @ sp[(-9)+4]
 19958  01677E  0EFB               	movlw	-5
 19959  016780  50E3               	movf	plusw1,w,c
 19960  016782  6E0B               	movwf	(btemp+10)^0,c
 19961  016784  6A0C               	clrf	(btemp+11)^0,c
 19962                           
 19963                           ;stkvar	_atoi$5787 @ sp[(-9)+2]
 19964  016786  0EF9               	movlw	-7
 19965  016788  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19966  01678E  0EFA               	movlw	-6
 19967  016790  0060  F033  FFE3   	movff	btemp+11,plusw1
 19968                           
 19969                           ;stkvar	_atoi$5787 @ sp[(-9)+2]
 19970  016796  0EF9               	movlw	-7
 19971  016798  006F FF8C  F001    	movff	plusw1,btemp
 19972  01679E  0EFA               	movlw	-6
 19973  0167A0  50E3               	movf	plusw1,w,c
 19974  0167A2  1001               	iorwf	btemp^0,w,c
 19975  0167A4  B4D8               	btfsc	status,2,c
 19976  0167A6  D01F               	goto	l8816
 19977  0167A8  D79F               	goto	l8796
 19978  0167AA                     l8812:
 19979  0167AA  0E01               	movlw	1
 19980  0167AC  6E0B               	movwf	(btemp+10)^0,c
 19981  0167AE  0E00               	movlw	0
 19982  0167B0  6E0C               	movwf	(btemp+11)^0,c
 19983                           
 19984                           ;stkvar	_neg @ sp[(-9)+7]
 19985  0167B2  0EFE               	movlw	-2
 19986  0167B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19987  0167BA  0EFF               	movlw	-1
 19988  0167BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19989  0167C2                     l8814:
 19990                           
 19991                           ;stkvar	_s @ sp[(-9)+-2]
 19992  0167C2  0EF5               	movlw	-11
 19993  0167C4  50E3               	movf	plusw1,w,c
 19994  0167C6  0F01               	addlw	1
 19995  0167C8  6E01               	movwf	btemp^0,c
 19996  0167CA  0EF5               	movlw	-11
 19997  0167CC  0060  F007  FFE3   	movff	btemp,plusw1
 19998  0167D2  6A01               	clrf	btemp^0,c
 19999  0167D4  0EF6               	movlw	-10
 20000  0167D6  50E3               	movf	plusw1,w,c
 20001  0167D8  2001               	addwfc	btemp^0,w,c
 20002  0167DA  6E01               	movwf	btemp^0,c
 20003  0167DC  0EF6               	movlw	-10
 20004  0167DE  0060  F007  FFE3   	movff	btemp,plusw1
 20005  0167E4  D053               	goto	l8822
 20006  0167E6                     l8816:
 20007                           
 20008                           ;stkvar	_s @ sp[(-9)+-2]
 20009  0167E6  50E1               	movf	fsr1l,w,c
 20010  0167E8  0FF5               	addlw	-11
 20011  0167EA  6ED9               	movwf	fsr2l,c
 20012  0167EC  50E2               	movf	fsr1h,w,c
 20013  0167EE  6EDA               	movwf	fsr2h,c
 20014  0167F0  0EFF               	movlw	255
 20015  0167F2  22DA               	addwfc	fsr2h,f,c
 20016  0167F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 20017  0167FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 20018  016800                     	if	0	;tblptru may be non-zero
 20019  016800                     	endif
 20020  016800                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20021  016800  0E00               	movlw	low (__mediumconst shr (0+16))
 20022  016802  6EF8               	movwf	tblptru,c
 20023  016804                     	endif
 20024  016804  0008               	tblrd		*
 20025  016806  50F5               	movf	tablat,w,c
 20026  016808  6E0B               	movwf	(btemp+10)^0,c
 20027  01680A  6A0C               	clrf	(btemp+11)^0,c
 20028                           
 20029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20030                           ; Switch size 1, requested type "simple"
 20031                           ; Number of cases is 1, Range of values is 0 to 0
 20032                           ; switch strategies available:
 20033                           ; Name         Instructions Cycles
 20034                           ; simple_byte            4     3 (average)
 20035                           ;	Chosen strategy is simple_byte
 20036  01680C  500C               	movf	(btemp+11)^0,w,c
 20037  01680E  0A00               	xorlw	0	; case 0
 20038  016810  A4D8               	btfss	status,2,c
 20039  016812  D03C               	goto	l8822
 20040                           
 20041                           ; Switch size 1, requested type "simple"
 20042                           ; Number of cases is 2, Range of values is 43 to 45
 20043                           ; switch strategies available:
 20044                           ; Name         Instructions Cycles
 20045                           ; simple_byte            7     4 (average)
 20046                           ;	Chosen strategy is simple_byte
 20047  016814  500B               	movf	(btemp+10)^0,w,c
 20048  016816  0A2B               	xorlw	43	; case 43
 20049  016818  B4D8               	btfsc	status,2,c
 20050  01681A  D7D3               	goto	l8814
 20051  01681C  0A06               	xorlw	6	; case 45
 20052  01681E  B4D8               	btfsc	status,2,c
 20053  016820  D7C4               	goto	l8812
 20054  016822  D034               	goto	l8822
 20055  016824                     l8818:
 20056                           
 20057                           ;stkvar	_n @ sp[(-9)+5]
 20058  016824  0EFC               	movlw	-4
 20059  016826  006F FF8C  F00B    	movff	plusw1,btemp+10
 20060  01682C  0EFD               	movlw	-3
 20061  01682E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20062  016834  0E0A               	movlw	10
 20063  016836  020B               	mulwf	(btemp+10)^0,c
 20064  016838  006F FFCC  F009    	movff	prodl,btemp+8
 20065  01683E  006F FFD0  F00A    	movff	prodh,btemp+9
 20066  016844  020C               	mulwf	(btemp+11)^0,c
 20067  016846  50F3               	movf	prodl,w,c
 20068  016848  260A               	addwf	(btemp+9)^0,f,c
 20069                           
 20070                           ;stkvar	_s @ sp[(-9)+-2]
 20071  01684A  50E1               	movf	fsr1l,w,c
 20072  01684C  0FF5               	addlw	-11
 20073  01684E  6ED9               	movwf	fsr2l,c
 20074  016850  50E2               	movf	fsr1h,w,c
 20075  016852  6EDA               	movwf	fsr2h,c
 20076  016854  0EFF               	movlw	255
 20077  016856  22DA               	addwfc	fsr2h,f,c
 20078  016858  006F FF7B FFF6     	movff	postinc2,tblptrl
 20079  01685E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20080  016864                     	if	0	;tblptru may be non-zero
 20081  016864                     	endif
 20082  016864                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20083  016864  0E00               	movlw	low (__mediumconst shr (0+16))
 20084  016866  6EF8               	movwf	tblptru,c
 20085  016868                     	endif
 20086  016868  0008               	tblrd		*
 20087  01686A  50F5               	movf	tablat,w,c
 20088  01686C  5E09               	subwf	(btemp+8)^0,f,c
 20089  01686E  0E00               	movlw	0
 20090  016870  5A0A               	subwfb	(btemp+9)^0,f,c
 20091  016872  0E30               	movlw	48
 20092  016874  2609               	addwf	(btemp+8)^0,f,c
 20093  016876  0E00               	movlw	0
 20094  016878  220A               	addwfc	(btemp+9)^0,f,c
 20095                           
 20096                           ;stkvar	_n @ sp[(-9)+5]
 20097  01687A  0EFC               	movlw	-4
 20098  01687C  0060  F027  FFE3   	movff	btemp+8,plusw1
 20099  016882  0EFD               	movlw	-3
 20100  016884  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20101  01688A  D79B               	goto	l8814
 20102  01688C                     l8822:
 20103  01688C  0ED0               	movlw	208
 20104  01688E  6E0B               	movwf	(btemp+10)^0,c
 20105  016890  0EFF               	movlw	255
 20106  016892  6E0C               	movwf	(btemp+11)^0,c
 20107                           
 20108                           ;stkvar	_s @ sp[(-9)+-2]
 20109  016894  50E1               	movf	fsr1l,w,c
 20110  016896  0FF5               	addlw	-11
 20111  016898  6ED9               	movwf	fsr2l,c
 20112  01689A  50E2               	movf	fsr1h,w,c
 20113  01689C  6EDA               	movwf	fsr2h,c
 20114  01689E  0EFF               	movlw	255
 20115  0168A0  22DA               	addwfc	fsr2h,f,c
 20116  0168A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20117  0168A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20118  0168AE                     	if	0	;tblptru may be non-zero
 20119  0168AE                     	endif
 20120  0168AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20121  0168AE  0E00               	movlw	low (__mediumconst shr (0+16))
 20122  0168B0  6EF8               	movwf	tblptru,c
 20123  0168B2                     	endif
 20124  0168B2  0008               	tblrd		*
 20125  0168B4  50F5               	movf	tablat,w,c
 20126  0168B6  6E09               	movwf	(btemp+8)^0,c
 20127  0168B8  6A0A               	clrf	(btemp+9)^0,c
 20128  0168BA  500B               	movf	(btemp+10)^0,w,c
 20129  0168BC  2609               	addwf	(btemp+8)^0,f,c
 20130  0168BE  500C               	movf	(btemp+11)^0,w,c
 20131  0168C0  220A               	addwfc	(btemp+9)^0,f,c
 20132  0168C2  500A               	movf	(btemp+9)^0,w,c
 20133  0168C4  E106               	bnz	u8160
 20134  0168C6  0E0A               	movlw	10
 20135  0168C8  5C09               	subwf	(btemp+8)^0,w,c
 20136  0168CA  B0D8               	btfsc	status,0,c
 20137  0168CC  D002               	goto	u8160
 20138  0168CE  0E01               	movlw	1
 20139  0168D0  D001               	goto	u8170
 20140  0168D2                     u8160:
 20141  0168D2  0E00               	movlw	0
 20142  0168D4                     u8170:
 20143  0168D4  6E0B               	movwf	(btemp+10)^0,c
 20144  0168D6  6A0C               	clrf	(btemp+11)^0,c
 20145                           
 20146                           ;stkvar	_atoi$5789 @ sp[(-9)+0]
 20147  0168D8  0EF7               	movlw	-9
 20148  0168DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20149  0168E0  0EF8               	movlw	-8
 20150  0168E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 20151                           
 20152                           ;stkvar	_atoi$5789 @ sp[(-9)+0]
 20153  0168E8  0EF7               	movlw	-9
 20154  0168EA  006F FF8C  F001    	movff	plusw1,btemp
 20155  0168F0  0EF8               	movlw	-8
 20156  0168F2  50E3               	movf	plusw1,w,c
 20157  0168F4  1001               	iorwf	btemp^0,w,c
 20158  0168F6  A4D8               	btfss	status,2,c
 20159  0168F8  D795               	goto	l8818
 20160                           
 20161                           ;stkvar	_neg @ sp[(-9)+7]
 20162  0168FA  0EFE               	movlw	-2
 20163  0168FC  006F FF8C  F001    	movff	plusw1,btemp
 20164  016902  0EFF               	movlw	-1
 20165  016904  50E3               	movf	plusw1,w,c
 20166  016906  1001               	iorwf	btemp^0,w,c
 20167  016908  A4D8               	btfss	status,2,c
 20168  01690A  D00E               	goto	l8832
 20169                           
 20170                           ;stkvar	_n @ sp[(-9)+5]
 20171  01690C  0EFC               	movlw	-4
 20172  01690E  006F FF8C  F001    	movff	plusw1,btemp
 20173  016914  1E01               	comf	btemp^0,f,c
 20174  016916  0EFD               	movlw	-3
 20175  016918  006F FF8C  F002    	movff	plusw1,btemp+1
 20176  01691E  1E02               	comf	(btemp+1)^0,f,c
 20177  016920  2A01               	incf	btemp^0,f,c
 20178  016922  B4D8               	btfsc	status,2,c
 20179  016924  2A02               	incf	(btemp+1)^0,f,c
 20180  016926  D008               	goto	l3025
 20181  016928                     l8832:
 20182                           
 20183                           ;stkvar	_n @ sp[(-9)+5]
 20184  016928  0EFC               	movlw	-4
 20185  01692A  006F FF8C  F001    	movff	plusw1,btemp
 20186  016930  0EFD               	movlw	-3
 20187  016932  006F FF8C  F002    	movff	plusw1,btemp+1
 20188  016938                     l3025:
 20189                           
 20190                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20191  016938  0EF5               	movlw	245
 20192  01693A  26E1               	addwf	fsr1l,f,c
 20193  01693C  0EFF               	movlw	255
 20194  01693E  22E2               	addwfc	fsr1h,f,c
 20195  016940  0012               	return		;funcret
 20196  016942                     __end_of_atoi:
 20197                           	opt callstack 0
 20198                           
 20199 ;; *************** function _isspace *****************
 20200 ;; Defined at:
 20201 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20202 ;; Parameters:    Size  Location     Type
 20203 ;;  c               2  [STACK] int 
 20204 ;; Auto vars:     Size  Location     Type
 20205 ;;		None
 20206 ;; Return value:  Size  Location     Type
 20207 ;;                  2  [STACK] int 
 20208 ;; Registers used:
 20209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20210 ;; Tracked objects:
 20211 ;;		On entry : 0/0
 20212 ;;		On exit  : 0/0
 20213 ;;		Unchanged: 0/0
 20214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20219 ;;Total ram usage:        0 bytes
 20220 ;; Hardware stack levels used:    1
 20221 ;; Hardware stack levels required when called:   15
 20222 ;; This function calls:
 20223 ;;		Nothing
 20224 ;; This function is called by:
 20225 ;;		_atoi
 20226 ;; This function uses a reentrant model
 20227 ;;
 20228                           
 20229                           	psect	text74
 20230  019DB4                     __ptext74:
 20231                           	opt callstack 0
 20232  019DB4                     _isspace:
 20233                           	opt callstack 0
 20234                           
 20235                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20236  019DB4  52E6               	movf	postinc1,f,c
 20237                           
 20238                           ;stkvar	_isspace$5838 @ sp[(-1)+0]
 20239                           
 20240                           ;incstack = 0
 20241 ;; hardware stack exceeded
 20242  019DB6  0EFF               	movlw	-1
 20243  019DB8  6AE3               	clrf	plusw1,c
 20244  019DBA  2AE3               	incf	plusw1,f,c
 20245                           
 20246                           ;stkvar	_c @ sp[(-1)+-2]
 20247  019DBC  0EFD               	movlw	-3
 20248  019DBE  006F FF8C  F001    	movff	plusw1,btemp
 20249  019DC4  0E20               	movlw	32
 20250  019DC6  1801               	xorwf	btemp^0,w,c
 20251  019DC8  E104               	bnz	u6990
 20252  019DCA  0EFE               	movlw	-2
 20253  019DCC  50E3               	movf	plusw1,w,c
 20254  019DCE  B4D8               	btfsc	status,2,c
 20255  019DD0  D012               	goto	l8190
 20256  019DD2                     u6990:
 20257                           
 20258                           ;stkvar	_c @ sp[(-1)+-2]
 20259  019DD2  0EFD               	movlw	-3
 20260  019DD4  50E3               	movf	plusw1,w,c
 20261  019DD6  0FF7               	addlw	247
 20262  019DD8  6E0B               	movwf	(btemp+10)^0,c
 20263  019DDA  0EFE               	movlw	-2
 20264  019DDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20265  019DE2  0EFF               	movlw	255
 20266  019DE4  220C               	addwfc	(btemp+11)^0,f,c
 20267  019DE6  500C               	movf	(btemp+11)^0,w,c
 20268  019DE8  E104               	bnz	u7000
 20269  019DEA  0E05               	movlw	5
 20270  019DEC  5C0B               	subwf	(btemp+10)^0,w,c
 20271  019DEE  A0D8               	btfss	status,0,c
 20272  019DF0  D002               	goto	l8190
 20273  019DF2                     u7000:
 20274                           
 20275                           ;stkvar	_isspace$5838 @ sp[(-1)+0]
 20276  019DF2  0EFF               	movlw	-1
 20277  019DF4  6AE3               	clrf	plusw1,c
 20278  019DF6                     l8190:
 20279                           
 20280                           ;stkvar	_isspace$5838 @ sp[(-1)+0]
 20281  019DF6  0EFF               	movlw	-1
 20282  019DF8  50E3               	movf	plusw1,w,c
 20283  019DFA  6E01               	movwf	btemp^0,c
 20284  019DFC  6A02               	clrf	(btemp+1)^0,c
 20285                           
 20286                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20287  019DFE  52E5               	movf	postdec1,f,c
 20288  019E00  52E5               	movf	postdec1,f,c
 20289  019E02  52E5               	movf	postdec1,f,c
 20290  019E04  0012               	return		;funcret
 20291  019E06                     __end_of_isspace:
 20292                           	opt callstack 0
 20293                           
 20294 ;; *************** function _isdigit *****************
 20295 ;; Defined at:
 20296 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20297 ;; Parameters:    Size  Location     Type
 20298 ;;  c               2  [STACK] int 
 20299 ;; Auto vars:     Size  Location     Type
 20300 ;;		None
 20301 ;; Return value:  Size  Location     Type
 20302 ;;                  2  [STACK] int 
 20303 ;; Registers used:
 20304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20305 ;; Tracked objects:
 20306 ;;		On entry : 0/0
 20307 ;;		On exit  : 0/0
 20308 ;;		Unchanged: 0/0
 20309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20314 ;;Total ram usage:        0 bytes
 20315 ;; Hardware stack levels used:    1
 20316 ;; Hardware stack levels required when called:   15
 20317 ;; This function calls:
 20318 ;;		Nothing
 20319 ;; This function is called by:
 20320 ;;		_vfpfcnvrt
 20321 ;;		_atoi
 20322 ;; This function uses a reentrant model
 20323 ;;
 20324                           
 20325                           	psect	text75
 20326  01A460                     __ptext75:
 20327                           	opt callstack 0
 20328  01A460                     _isdigit:
 20329                           	opt callstack 0
 20330                           
 20331                           ;stkvar	_c @ sp[(0)+-2]
 20332                           
 20333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20334                           ;incstack = 0
 20335 ;; hardware stack exceeded
 20336  01A460  0EFE               	movlw	-2
 20337  01A462  50E3               	movf	plusw1,w,c
 20338  01A464  0FD0               	addlw	208
 20339  01A466  6E0B               	movwf	(btemp+10)^0,c
 20340  01A468  0EFF               	movlw	-1
 20341  01A46A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20342  01A470  0EFF               	movlw	255
 20343  01A472  220C               	addwfc	(btemp+11)^0,f,c
 20344  01A474  500C               	movf	(btemp+11)^0,w,c
 20345  01A476  E106               	bnz	u5840
 20346  01A478  0E0A               	movlw	10
 20347  01A47A  5C0B               	subwf	(btemp+10)^0,w,c
 20348  01A47C  B0D8               	btfsc	status,0,c
 20349  01A47E  D002               	goto	u5840
 20350  01A480  0E01               	movlw	1
 20351  01A482  D001               	goto	u5850
 20352  01A484                     u5840:
 20353  01A484  0E00               	movlw	0
 20354  01A486                     u5850:
 20355  01A486  6E01               	movwf	btemp^0,c
 20356  01A488  6A02               	clrf	(btemp+1)^0,c
 20357                           
 20358                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20359  01A48A  52E5               	movf	postdec1,f,c
 20360  01A48C  52E5               	movf	postdec1,f,c
 20361  01A48E  0012               	return		;funcret
 20362  01A490                     __end_of_isdigit:
 20363                           	opt callstack 0
 20364                           
 20365 ;; *************** function _set_vterm *****************
 20366 ;; Defined at:
 20367 ;;		line 107 in file "mconfig.c"
 20368 ;; Parameters:    Size  Location     Type
 20369 ;;  vterm           1  [STACK] const unsigned char 
 20370 ;; Auto vars:     Size  Location     Type
 20371 ;;		None
 20372 ;; Return value:  Size  Location     Type
 20373 ;;                  1  [STACK] unsigned char 
 20374 ;; Registers used:
 20375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 20376 ;; Tracked objects:
 20377 ;;		On entry : 0/0
 20378 ;;		On exit  : 0/0
 20379 ;;		Unchanged: 0/0
 20380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20385 ;;Total ram usage:        0 bytes
 20386 ;; Hardware stack levels used:    1
 20387 ;; Hardware stack levels required when called:   15
 20388 ;; This function calls:
 20389 ;;		Nothing
 20390 ;; This function is called by:
 20391 ;;		_main
 20392 ;;		_check_help
 20393 ;; This function uses a reentrant model
 20394 ;;
 20395                           
 20396                           	psect	text76
 20397  01A974                     __ptext76:
 20398                           	opt callstack 0
 20399  01A974                     _set_vterm:
 20400                           	opt callstack 15
 20401                           
 20402                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 20403                           ;stkvar	_vterm @ sp[(0)+-1]
 20404                           
 20405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20406                           ;incstack = 0
 20407  01A974  0EFF               	movlw	-1
 20408  01A976  006F FF8C  F00C    	movff	plusw1,btemp+11
 20409  01A97C  0E03               	movlw	3
 20410  01A97E  160C               	andwf	(btemp+11)^0,f,c
 20411  01A980  EE22  F11F         	lfsr	2,_D+288
 20412  01A984  50DF               	movf	223,w,c
 20413  01A986  180C               	xorwf	(btemp+11)^0,w,c
 20414  01A988  0BFE               	andlw	-2
 20415  01A98A  180C               	xorwf	(btemp+11)^0,w,c
 20416  01A98C  6EDF               	movwf	223,c
 20417                           
 20418                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20419  01A98E  52E5               	movf	postdec1,f,c
 20420  01A990  0012               	return		;funcret
 20421  01A992                     __end_of_set_vterm:
 20422                           	opt callstack 0
 20423                           
 20424 ;; *************** function _set_temp_display_help *****************
 20425 ;; Defined at:
 20426 ;;		line 211 in file "mconfig.c"
 20427 ;; Parameters:    Size  Location     Type
 20428 ;;  new_response    1  [STACK] const enum E16509
 20429 ;; Auto vars:     Size  Location     Type
 20430 ;;		None
 20431 ;; Return value:  Size  Location     Type
 20432 ;;                  1  [STACK] enum E16509
 20433 ;; Registers used:
 20434 ;;		wreg, fsr1l, fsr1h
 20435 ;; Tracked objects:
 20436 ;;		On entry : 0/2
 20437 ;;		On exit  : 3F/2
 20438 ;;		Unchanged: 0/0
 20439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20444 ;;Total ram usage:        0 bytes
 20445 ;; Hardware stack levels used:    1
 20446 ;; Hardware stack levels required when called:   15
 20447 ;; This function calls:
 20448 ;;		Nothing
 20449 ;; This function is called by:
 20450 ;;		_check_help
 20451 ;; This function uses a reentrant model
 20452 ;;
 20453                           
 20454                           	psect	text77
 20455  01AB12                     __ptext77:
 20456                           	opt callstack 0
 20457  01AB12                     _set_temp_display_help:
 20458                           	opt callstack 14
 20459                           
 20460                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 20461                           
 20462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20463                           ;incstack = 0
 20464  01AB12  0102               	movlb	2	; () banked
 20465  01AB14  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20466                           
 20467                           ; BSR set to: 2
 20468                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 20469                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20470  01AB16  0EFF               	movlw	-1
 20471  01AB18  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 20472                           
 20473                           ; BSR set to: 2
 20474                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20475  01AB1E  52E5               	movf	postdec1,f,c
 20476  01AB20  0012               	return		;funcret
 20477  01AB22                     __end_of_set_temp_display_help:
 20478                           	opt callstack 0
 20479                           
 20480 ;; *************** function _set_display_info *****************
 20481 ;; Defined at:
 20482 ;;		line 200 in file "mconfig.c"
 20483 ;; Parameters:    Size  Location     Type
 20484 ;;  new_response    1  [STACK] const enum E16509
 20485 ;; Auto vars:     Size  Location     Type
 20486 ;;		None
 20487 ;; Return value:  Size  Location     Type
 20488 ;;                  1  [STACK] enum E16994
 20489 ;; Registers used:
 20490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20491 ;; Tracked objects:
 20492 ;;		On entry : 0/1
 20493 ;;		On exit  : 0/0
 20494 ;;		Unchanged: 0/0
 20495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20500 ;;Total ram usage:        0 bytes
 20501 ;; Hardware stack levels used:    1
 20502 ;; Hardware stack levels required when called:   16
 20503 ;; This function calls:
 20504 ;;		_TimerDone
 20505 ;; This function is called by:
 20506 ;;		_main
 20507 ;;		_check_help
 20508 ;; This function uses a reentrant model
 20509 ;;
 20510                           
 20511                           	psect	text78
 20512  01A992                     __ptext78:
 20513                           	opt callstack 0
 20514  01A992                     _set_display_info:
 20515                           	opt callstack 14
 20516                           
 20517                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 20518                           
 20519                           ; BSR set to: 2
 20520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20521                           ;incstack = 0
 20522  01A992  0E07               	movlw	7
 20523  01A994  6EE6               	movwf	postinc1,c
 20524  01A996  ECF3  F0D2         	call	_TimerDone	;wreg free
 20525  01A99A  5001               	movf	btemp^0,w,c
 20526  01A99C  B4D8               	btfsc	status,2,c
 20527  01A99E  D006               	goto	l1699
 20528                           
 20529                           ;mconfig.c: 205:   old_info = V.response.info;
 20530  01A9A0  0102               	movlb	2	; () banked
 20531  01A9A2  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20532                           
 20533                           ; BSR set to: 2
 20534                           ;mconfig.c: 206:   V.response.info = new_response_info;
 20535                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20536  01A9A4  0EFF               	movlw	-1
 20537  01A9A6  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 20538  01A9AC                     l1699:
 20539                           
 20540                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20541  01A9AC  52E5               	movf	postdec1,f,c
 20542  01A9AE  0012               	return		;funcret
 20543  01A9B0                     __end_of_set_display_info:
 20544                           	opt callstack 0
 20545                           
 20546 ;; *************** function _mode_lamp_dim *****************
 20547 ;; Defined at:
 20548 ;;		line 13 in file "mconfig.c"
 20549 ;; Parameters:    Size  Location     Type
 20550 ;;  level           2  [STACK] const unsigned short 
 20551 ;; Auto vars:     Size  Location     Type
 20552 ;;		None
 20553 ;; Return value:  Size  Location     Type
 20554 ;;                  1  [STACK] void 
 20555 ;; Registers used:
 20556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20557 ;; Tracked objects:
 20558 ;;		On entry : 0/2
 20559 ;;		On exit  : 0/0
 20560 ;;		Unchanged: 0/0
 20561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20566 ;;Total ram usage:        0 bytes
 20567 ;; Hardware stack levels used:    1
 20568 ;; Hardware stack levels required when called:   16
 20569 ;; This function calls:
 20570 ;;		_PWM8_LoadDutyValue
 20571 ;; This function is called by:
 20572 ;;		_main
 20573 ;;		_check_help
 20574 ;; This function uses a reentrant model
 20575 ;;
 20576                           
 20577                           	psect	text79
 20578  01AA5A                     __ptext79:
 20579                           	opt callstack 0
 20580  01AA5A                     _mode_lamp_dim:
 20581                           	opt callstack 14
 20582                           
 20583                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20584                           ;stkvar	_level @ sp[(0)+-2]
 20585                           
 20586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20587                           ;incstack = 0
 20588  01AA5A  0EFE               	movlw	-2
 20589  01AA5C  006F FF8F FFE6     	movff	plusw1,postinc1
 20590  01AA62  006F FF8F FFE6     	movff	plusw1,postinc1
 20591  01AA68  EC6D  F0D0         	call	_PWM8_LoadDutyValue	;wreg free
 20592                           
 20593                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20594  01AA6C  52E5               	movf	postdec1,f,c
 20595  01AA6E  52E5               	movf	postdec1,f,c
 20596  01AA70  0012               	return		;funcret
 20597  01AA72                     __end_of_mode_lamp_dim:
 20598                           	opt callstack 0
 20599                           
 20600 ;; *************** function _mode_lamp_bright *****************
 20601 ;; Defined at:
 20602 ;;		line 18 in file "mconfig.c"
 20603 ;; Parameters:    Size  Location     Type
 20604 ;;		None
 20605 ;; Auto vars:     Size  Location     Type
 20606 ;;		None
 20607 ;; Return value:  Size  Location     Type
 20608 ;;                  1  [STACK] void 
 20609 ;; Registers used:
 20610 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20611 ;; Tracked objects:
 20612 ;;		On entry : 0/0
 20613 ;;		On exit  : 0/0
 20614 ;;		Unchanged: 0/0
 20615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20620 ;;Total ram usage:        0 bytes
 20621 ;; Hardware stack levels used:    1
 20622 ;; Hardware stack levels required when called:   16
 20623 ;; This function calls:
 20624 ;;		_PWM8_LoadDutyValue
 20625 ;; This function is called by:
 20626 ;;		_check_help
 20627 ;; This function uses a reentrant model
 20628 ;;
 20629                           
 20630                           	psect	text80
 20631  01AB30                     __ptext80:
 20632                           	opt callstack 0
 20633  01AB30                     _mode_lamp_bright:
 20634                           	opt callstack 13
 20635                           
 20636                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20637                           
 20638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20639                           ;incstack = 0
 20640  01AB30  0E2C               	movlw	44
 20641  01AB32  6EE6               	movwf	postinc1,c
 20642  01AB34  0E01               	movlw	1
 20643  01AB36  6EE6               	movwf	postinc1,c
 20644  01AB38  EC6D  F0D0         	call	_PWM8_LoadDutyValue	;wreg free
 20645                           
 20646                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20647  01AB3C  0012               	return		;funcret
 20648  01AB3E                     __end_of_mode_lamp_bright:
 20649                           	opt callstack 0
 20650                           
 20651 ;; *************** function _PWM8_LoadDutyValue *****************
 20652 ;; Defined at:
 20653 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20654 ;; Parameters:    Size  Location     Type
 20655 ;;  dutyValue       2  [STACK] unsigned short 
 20656 ;; Auto vars:     Size  Location     Type
 20657 ;;		None
 20658 ;; Return value:  Size  Location     Type
 20659 ;;                  1  [STACK] void 
 20660 ;; Registers used:
 20661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20662 ;; Tracked objects:
 20663 ;;		On entry : 0/2
 20664 ;;		On exit  : 0/0
 20665 ;;		Unchanged: 0/0
 20666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20671 ;;Total ram usage:        0 bytes
 20672 ;; Hardware stack levels used:    1
 20673 ;; Hardware stack levels required when called:   15
 20674 ;; This function calls:
 20675 ;;		Nothing
 20676 ;; This function is called by:
 20677 ;;		_mode_lamp_dim
 20678 ;;		_mode_lamp_bright
 20679 ;; This function uses a reentrant model
 20680 ;;
 20681                           
 20682                           	psect	text81
 20683  01A0DA                     __ptext81:
 20684                           	opt callstack 0
 20685  01A0DA                     _PWM8_LoadDutyValue:
 20686                           	opt callstack 14
 20687                           
 20688                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20689                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20690                           
 20691                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20692                           ;incstack = 0
 20693  01A0DA  0EFE               	movlw	-2
 20694  01A0DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20695  01A0E2  0EFF               	movlw	-1
 20696  01A0E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20697  01A0EA  90D8               	bcf	status,0,c
 20698  01A0EC  320C               	rrcf	(btemp+11)^0,f,c
 20699  01A0EE  320B               	rrcf	(btemp+10)^0,f,c
 20700  01A0F0  90D8               	bcf	status,0,c
 20701  01A0F2  320C               	rrcf	(btemp+11)^0,f,c
 20702  01A0F4  320B               	rrcf	(btemp+10)^0,f,c
 20703  01A0F6  500B               	movf	(btemp+10)^0,w,c
 20704  01A0F8  6E61               	movwf	97,c	;volatile
 20705                           
 20706                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20707                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20708  01A0FA  0EFE               	movlw	-2
 20709  01A0FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20710  01A102  0E03               	movlw	3
 20711  01A104  160C               	andwf	(btemp+11)^0,f,c
 20712  01A106  0E06               	movlw	6
 20713  01A108  6E01               	movwf	btemp^0,c
 20714  01A10A                     u8645:
 20715  01A10A  90D8               	bcf	status,0,c
 20716  01A10C  360C               	rlcf	(btemp+11)^0,f,c
 20717  01A10E  2E01               	decfsz	btemp^0,f,c
 20718  01A110  D7FC               	goto	u8645
 20719  01A112  500C               	movf	(btemp+11)^0,w,c
 20720  01A114  6E60               	movwf	96,c	;volatile
 20721                           
 20722                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20723  01A116  52E5               	movf	postdec1,f,c
 20724  01A118  52E5               	movf	postdec1,f,c
 20725  01A11A  0012               	return		;funcret
 20726  01A11C                     __end_of_PWM8_LoadDutyValue:
 20727                           	opt callstack 0
 20728                           
 20729 ;; *************** function _help_button *****************
 20730 ;; Defined at:
 20731 ;;		line 26 in file "mconfig.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;		None
 20734 ;; Auto vars:     Size  Location     Type
 20735 ;;		None
 20736 ;; Return value:  Size  Location     Type
 20737 ;;                  1  [STACK] _Bool 
 20738 ;; Registers used:
 20739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20740 ;; Tracked objects:
 20741 ;;		On entry : 0/2
 20742 ;;		On exit  : 0/0
 20743 ;;		Unchanged: 0/0
 20744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20749 ;;Total ram usage:        0 bytes
 20750 ;; Hardware stack levels used:    1
 20751 ;; Hardware stack levels required when called:   16
 20752 ;; This function calls:
 20753 ;;		_StartTimer
 20754 ;;		_TimerDone
 20755 ;; This function is called by:
 20756 ;;		_check_help
 20757 ;; This function uses a reentrant model
 20758 ;;
 20759                           
 20760                           	psect	text82
 20761  01A25A                     __ptext82:
 20762                           	opt callstack 0
 20763  01A25A                     _help_button:
 20764                           	opt callstack 13
 20765                           
 20766                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20767                           
 20768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20769                           ;incstack = 0
 20770  01A25A  B0CB               	btfsc	203,0,c	;volatile
 20771  01A25C  D00C               	goto	l1642
 20772                           
 20773                           ;mconfig.c: 29:   V.help = 1;
 20774  01A25E  0102               	movlb	2	; () banked
 20775  01A260  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 20776                           
 20777                           ; BSR set to: 2
 20778                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20779  01A262  0E08               	movlw	8
 20780  01A264  6EE6               	movwf	postinc1,c
 20781  01A266  ECF3  F0D2         	call	_TimerDone	;wreg free
 20782  01A26A  5001               	movf	btemp^0,w,c
 20783  01A26C  B4D8               	btfsc	status,2,c
 20784  01A26E  D003               	goto	l1642
 20785                           
 20786                           ;mconfig.c: 31:    return 1;
 20787  01A270  0E01               	movlw	1
 20788  01A272  6E01               	movwf	btemp^0,c
 20789  01A274  0012               	return	
 20790  01A276                     l1642:
 20791                           
 20792                           ;mconfig.c: 34:  if (!V.help)
 20793  01A276  0102               	movlb	2	; () banked
 20794  01A278  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 20795  01A27A  D008               	goto	l9776
 20796                           
 20797                           ; BSR set to: 2
 20798                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20799  01A27C  0E2C               	movlw	44
 20800  01A27E  6EE6               	movwf	postinc1,c
 20801  01A280  0E01               	movlw	1
 20802  01A282  6EE6               	movwf	postinc1,c
 20803  01A284  0E08               	movlw	8
 20804  01A286  6EE6               	movwf	postinc1,c
 20805  01A288  EC8E  F0D0         	call	_StartTimer	;wreg free
 20806  01A28C                     l9776:
 20807                           
 20808                           ;mconfig.c: 37:  return 0;
 20809  01A28C  0E00               	movlw	0
 20810  01A28E  6E01               	movwf	btemp^0,c
 20811                           
 20812                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20813  01A290  0012               	return		;funcret
 20814  01A292                     __end_of_help_button:
 20815                           	opt callstack 0
 20816                           
 20817 ;; *************** function _TimerDone *****************
 20818 ;; Defined at:
 20819 ;;		line 20 in file "timers.c"
 20820 ;; Parameters:    Size  Location     Type
 20821 ;;  timer           1  [STACK] const unsigned char 
 20822 ;; Auto vars:     Size  Location     Type
 20823 ;;		None
 20824 ;; Return value:  Size  Location     Type
 20825 ;;                  1  [STACK] _Bool 
 20826 ;; Registers used:
 20827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20828 ;; Tracked objects:
 20829 ;;		On entry : 0/1
 20830 ;;		On exit  : 0/0
 20831 ;;		Unchanged: 0/0
 20832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20837 ;;Total ram usage:        0 bytes
 20838 ;; Hardware stack levels used:    1
 20839 ;; Hardware stack levels required when called:   15
 20840 ;; This function calls:
 20841 ;;		Nothing
 20842 ;; This function is called by:
 20843 ;;		_main
 20844 ;;		_WaitMs
 20845 ;;		_help_button
 20846 ;;		_check_help
 20847 ;;		_set_display_info
 20848 ;; This function uses a reentrant model
 20849 ;;
 20850                           
 20851                           	psect	text83
 20852  01A5E6                     __ptext83:
 20853                           	opt callstack 0
 20854  01A5E6                     _TimerDone:
 20855                           	opt callstack 14
 20856                           
 20857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20858                           ;incstack = 0
 20859  01A5E6  0004               	clrwdt		;# 
 20860                           
 20861                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20862                           ;stkvar	_timer @ sp[(0)+-1]
 20863  01A5E8  0EFF               	movlw	-1
 20864  01A5EA  50E3               	movf	plusw1,w,c
 20865  01A5EC  0D02               	mullw	2
 20866  01A5EE  0EDF               	movlw	low _tickCount
 20867  01A5F0  24F3               	addwf	243,w,c
 20868  01A5F2  6ED9               	movwf	fsr2l,c
 20869  01A5F4  0E01               	movlw	high _tickCount
 20870  01A5F6  20F4               	addwfc	prodh,w,c
 20871  01A5F8  6EDA               	movwf	fsr2h,c
 20872  01A5FA  50DE               	movf	postinc2,w,c
 20873  01A5FC  10DE               	iorwf	postinc2,w,c
 20874  01A5FE  A4D8               	btfss	status,2,c
 20875  01A600  D002               	goto	l9098
 20876                           
 20877                           ;timers.c: 24:   return 1;
 20878  01A602  0E01               	movlw	1
 20879  01A604  D001               	goto	L22
 20880  01A606                     l9098:
 20881                           
 20882                           ;timers.c: 26:  return 0;
 20883  01A606  0E00               	movlw	0
 20884  01A608                     L22:
 20885  01A608  6E01               	movwf	btemp^0,c
 20886                           
 20887                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20888  01A60A  52E5               	movf	postdec1,f,c
 20889  01A60C  0012               	return		;funcret
 20890  01A60E                     __end_of_TimerDone:
 20891                           	opt callstack 0
 20892                           
 20893 ;; *************** function _StartTimer *****************
 20894 ;; Defined at:
 20895 ;;		line 12 in file "timers.c"
 20896 ;; Parameters:    Size  Location     Type
 20897 ;;  timer           1  [STACK] const unsigned char 
 20898 ;;  count           2  [STACK] const unsigned short 
 20899 ;; Auto vars:     Size  Location     Type
 20900 ;;		None
 20901 ;; Return value:  Size  Location     Type
 20902 ;;                  1  [STACK] void 
 20903 ;; Registers used:
 20904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20905 ;; Tracked objects:
 20906 ;;		On entry : 0/0
 20907 ;;		On exit  : 0/0
 20908 ;;		Unchanged: 0/0
 20909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20914 ;;Total ram usage:        0 bytes
 20915 ;; Hardware stack levels used:    1
 20916 ;; Hardware stack levels required when called:   15
 20917 ;; This function calls:
 20918 ;;		Nothing
 20919 ;; This function is called by:
 20920 ;;		_main
 20921 ;;		_WaitMs
 20922 ;;		_help_button
 20923 ;;		_check_help
 20924 ;;		_calc_bsoc
 20925 ;; This function uses a reentrant model
 20926 ;;
 20927                           
 20928                           	psect	text84
 20929  01A11C                     __ptext84:
 20930                           	opt callstack 0
 20931  01A11C                     _StartTimer:
 20932                           	opt callstack 0
 20933                           
 20934                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 20935                           ;stkvar	_count @ sp[(0)+-3]
 20936                           
 20937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20938                           ;incstack = 0
 20939 ;; hardware stack exceeded
 20940  01A11C  0EFD               	movlw	-3
 20941  01A11E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20942  01A124  0EFE               	movlw	-2
 20943  01A126  006F FF8C  F00C    	movff	plusw1,btemp+11
 20944  01A12C  90D8               	bcf	status,0,c
 20945  01A12E  340B               	rlcf	(btemp+10)^0,w,c
 20946  01A130  6E09               	movwf	(btemp+8)^0,c
 20947  01A132  340C               	rlcf	(btemp+11)^0,w,c
 20948  01A134  6E0A               	movwf	(btemp+9)^0,c
 20949                           
 20950                           ;stkvar	_timer @ sp[(0)+-1]
 20951  01A136  0EFF               	movlw	-1
 20952  01A138  50E3               	movf	plusw1,w,c
 20953  01A13A  0D02               	mullw	2
 20954  01A13C  0EDF               	movlw	low _tickCount
 20955  01A13E  24F3               	addwf	243,w,c
 20956  01A140  6ED9               	movwf	fsr2l,c
 20957  01A142  0E01               	movlw	high _tickCount
 20958  01A144  20F4               	addwfc	prodh,w,c
 20959  01A146  6EDA               	movwf	fsr2h,c
 20960  01A148  0060  F027  FFDE   	movff	btemp+8,postinc2
 20961  01A14E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 20962                           
 20963                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20964  01A154  52E5               	movf	postdec1,f,c
 20965  01A156  52E5               	movf	postdec1,f,c
 20966  01A158  52E5               	movf	postdec1,f,c
 20967  01A15A  0012               	return		;funcret
 20968  01A15C                     __end_of_StartTimer:
 20969                           	opt callstack 0
 20970                           
 20971 ;; *************** function _display_info *****************
 20972 ;; Defined at:
 20973 ;;		line 190 in file "mconfig.c"
 20974 ;; Parameters:    Size  Location     Type
 20975 ;;		None
 20976 ;; Auto vars:     Size  Location     Type
 20977 ;;		None
 20978 ;; Return value:  Size  Location     Type
 20979 ;;                  1  [STACK] enum E16509
 20980 ;; Registers used:
 20981 ;;		btemp
 20982 ;; Tracked objects:
 20983 ;;		On entry : 0/2
 20984 ;;		On exit  : 0/0
 20985 ;;		Unchanged: 0/0
 20986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20991 ;;Total ram usage:        0 bytes
 20992 ;; Hardware stack levels used:    1
 20993 ;; Hardware stack levels required when called:   15
 20994 ;; This function calls:
 20995 ;;		Nothing
 20996 ;; This function is called by:
 20997 ;;		_check_help
 20998 ;; This function uses a reentrant model
 20999 ;;
 21000                           
 21001                           	psect	text85
 21002  01AB9E                     __ptext85:
 21003                           	opt callstack 0
 21004  01AB9E                     _display_info:
 21005                           	opt callstack 14
 21006                           
 21007                           ;mconfig.c: 192:  return V.response.info;
 21008                           
 21009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21010                           ;incstack = 0
 21011  01AB9E  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 21012                           
 21013                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21014  01ABA4  0012               	return		;funcret
 21015  01ABA6                     __end_of_display_info:
 21016                           	opt callstack 0
 21017                           
 21018 ;; *************** function _display_help *****************
 21019 ;; Defined at:
 21020 ;;		line 195 in file "mconfig.c"
 21021 ;; Parameters:    Size  Location     Type
 21022 ;;		None
 21023 ;; Auto vars:     Size  Location     Type
 21024 ;;		None
 21025 ;; Return value:  Size  Location     Type
 21026 ;;                  1  [STACK] enum E16509
 21027 ;; Registers used:
 21028 ;;		btemp
 21029 ;; Tracked objects:
 21030 ;;		On entry : 3F/2
 21031 ;;		On exit  : 0/0
 21032 ;;		Unchanged: 0/0
 21033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21038 ;;Total ram usage:        0 bytes
 21039 ;; Hardware stack levels used:    1
 21040 ;; Hardware stack levels required when called:   15
 21041 ;; This function calls:
 21042 ;;		Nothing
 21043 ;; This function is called by:
 21044 ;;		_check_help
 21045 ;; This function uses a reentrant model
 21046 ;;
 21047                           
 21048                           	psect	text86
 21049  01ABA6                     __ptext86:
 21050                           	opt callstack 0
 21051  01ABA6                     _display_help:
 21052                           	opt callstack 14
 21053                           
 21054                           ;mconfig.c: 197:  return V.response.help_temp;
 21055                           
 21056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21057                           ;incstack = 0
 21058  01ABA6  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 21059                           
 21060                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21061  01ABAC  0012               	return		;funcret
 21062  01ABAE                     __end_of_display_help:
 21063                           	opt callstack 0
 21064                           
 21065 ;; *************** function _check_enter_button *****************
 21066 ;; Defined at:
 21067 ;;		line 42 in file "hid.c"
 21068 ;; Parameters:    Size  Location     Type
 21069 ;;  h               1  [STACK] PTR struct H_data
 21070 ;;		 -> H(7), 
 21071 ;; Auto vars:     Size  Location     Type
 21072 ;;		None
 21073 ;; Return value:  Size  Location     Type
 21074 ;;                  1  [STACK] _Bool 
 21075 ;; Registers used:
 21076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21077 ;; Tracked objects:
 21078 ;;		On entry : 0/1
 21079 ;;		On exit  : 0/0
 21080 ;;		Unchanged: 0/0
 21081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21086 ;;Total ram usage:        0 bytes
 21087 ;; Hardware stack levels used:    1
 21088 ;; Hardware stack levels required when called:   15
 21089 ;; This function calls:
 21090 ;;		Nothing
 21091 ;; This function is called by:
 21092 ;;		_main
 21093 ;; This function uses a reentrant model
 21094 ;;
 21095                           
 21096                           	psect	text87
 21097  01A15C                     __ptext87:
 21098                           	opt callstack 0
 21099  01A15C                     _check_enter_button:
 21100                           	opt callstack 15
 21101                           
 21102                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 21103                           ;stkvar	_h @ sp[(0)+-1]
 21104                           
 21105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21106                           ;incstack = 0
 21107  01A15C  0EFF               	movlw	-1
 21108  01A15E  50E3               	movf	plusw1,w,c
 21109  01A160  6ED9               	movwf	fsr2l,c
 21110  01A162  6ADA               	clrf	fsr2h,c
 21111  01A164  0E04               	movlw	4
 21112  01A166  26D9               	addwf	fsr2l,f,c
 21113  01A168  50DF               	movf	indf2,w,c
 21114  01A16A  A4D8               	btfss	status,2,c
 21115  01A16C  D013               	goto	l10408
 21116                           
 21117                           ;stkvar	_h @ sp[(0)+-1]
 21118  01A16E  0EFF               	movlw	-1
 21119  01A170  50E3               	movf	plusw1,w,c
 21120  01A172  6ED9               	movwf	fsr2l,c
 21121  01A174  6ADA               	clrf	fsr2h,c
 21122  01A176  0E05               	movlw	5
 21123  01A178  26D9               	addwf	fsr2l,f,c
 21124  01A17A  50DF               	movf	indf2,w,c
 21125  01A17C  A4D8               	btfss	status,2,c
 21126  01A17E  D00A               	goto	l10408
 21127                           
 21128                           ;hid.c: 45:   h->wait_enter = 1;
 21129                           ;stkvar	_h @ sp[(0)+-1]
 21130  01A180  0EFF               	movlw	-1
 21131  01A182  50E3               	movf	plusw1,w,c
 21132  01A184  6ED9               	movwf	fsr2l,c
 21133  01A186  6ADA               	clrf	fsr2h,c
 21134  01A188  0E04               	movlw	4
 21135  01A18A  26D9               	addwf	fsr2l,f,c
 21136  01A18C  0E01               	movlw	1
 21137  01A18E  6EDF               	movwf	indf2,c
 21138                           
 21139                           ;hid.c: 46:   return 1;
 21140  01A190  0E01               	movlw	1
 21141  01A192  D001               	goto	L23
 21142  01A194                     l10408:
 21143                           
 21144                           ;hid.c: 48:  return 0;
 21145  01A194  0E00               	movlw	0
 21146  01A196                     L23:
 21147  01A196  6E01               	movwf	btemp^0,c
 21148                           
 21149                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 21150  01A198  52E5               	movf	postdec1,f,c
 21151  01A19A  0012               	return		;funcret
 21152  01A19C                     __end_of_check_enter_button:
 21153                           	opt callstack 0
 21154                           
 21155 ;; *************** function _check_adc_scan *****************
 21156 ;; Defined at:
 21157 ;;		line 56 in file "daq.c"
 21158 ;; Parameters:    Size  Location     Type
 21159 ;;		None
 21160 ;; Auto vars:     Size  Location     Type
 21161 ;;		None
 21162 ;; Return value:  Size  Location     Type
 21163 ;;                  1  [STACK] _Bool 
 21164 ;; Registers used:
 21165 ;;		btemp
 21166 ;; Tracked objects:
 21167 ;;		On entry : 0/1
 21168 ;;		On exit  : 0/0
 21169 ;;		Unchanged: 0/0
 21170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21175 ;;Total ram usage:        0 bytes
 21176 ;; Hardware stack levels used:    1
 21177 ;; Hardware stack levels required when called:   15
 21178 ;; This function calls:
 21179 ;;		Nothing
 21180 ;; This function is called by:
 21181 ;;		_main
 21182 ;; This function uses a reentrant model
 21183 ;;
 21184                           
 21185                           	psect	text88
 21186  01ABAE                     __ptext88:
 21187                           	opt callstack 0
 21188  01ABAE                     _check_adc_scan:
 21189                           	opt callstack 15
 21190                           
 21191                           ;daq.c: 58:  return R.done;
 21192                           
 21193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21194                           ;incstack = 0
 21195  01ABAE  0060  F3B4  F001   	movff	_R+39,btemp	;volatile
 21196                           
 21197                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21198  01ABB4  0012               	return		;funcret
 21199  01ABB6                     __end_of_check_adc_scan:
 21200                           	opt callstack 0
 21201                           
 21202 ;; *************** function _calc_ror_data *****************
 21203 ;; Defined at:
 21204 ;;		line 87 in file "mbmc.c"
 21205 ;; Parameters:    Size  Location     Type
 21206 ;;		None
 21207 ;; Auto vars:     Size  Location     Type
 21208 ;;		None
 21209 ;; Return value:  Size  Location     Type
 21210 ;;                  1  [STACK] void 
 21211 ;; Registers used:
 21212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21213 ;; Tracked objects:
 21214 ;;		On entry : 0/39
 21215 ;;		On exit  : 0/0
 21216 ;;		Unchanged: 0/0
 21217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21222 ;;Total ram usage:        0 bytes
 21223 ;; Hardware stack levels used:    1
 21224 ;; Hardware stack levels required when called:   18
 21225 ;; This function calls:
 21226 ;;		___flge
 21227 ;;		___flsub
 21228 ;;		_conv_raw_result
 21229 ;;		_fabsf
 21230 ;; This function is called by:
 21231 ;;		_main
 21232 ;; This function uses a reentrant model
 21233 ;;
 21234                           
 21235                           	psect	text89
 21236  01788A                     __ptext89:
 21237                           	opt callstack 0
 21238  01788A                     _calc_ror_data:
 21239                           	opt callstack 12
 21240                           
 21241                           ;mbmc.c: 89:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 91:  C.bc_ror = fabsf(conv_
      +                          raw_result(C_BATT, CONV) - bcror);
 21242                           
 21243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21244                           ;incstack = 0
 21245  01788A  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 21246  017890  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 21247  017896  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 21248  01789C  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 21249  0178A2  0E00               	movlw	0
 21250  0178A4  6EE6               	movwf	postinc1,c
 21251  0178A6  0E00               	movlw	0
 21252  0178A8  6EE6               	movwf	postinc1,c
 21253  0178AA  ECB8  F0A3         	call	_conv_raw_result	;wreg free
 21254  0178AE  0060  F007  FFE6   	movff	btemp,postinc1
 21255  0178B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21256  0178BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21257  0178C0  0060  F013  FFE6   	movff	btemp+3,postinc1
 21258  0178C6  ECBF  F0CF         	call	___flsub	;wreg free
 21259  0178CA  0060  F007  FFE6   	movff	btemp,postinc1
 21260  0178D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21261  0178D6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21262  0178DC  0060  F013  FFE6   	movff	btemp+3,postinc1
 21263  0178E2  EC77  F0C8         	call	_fabsf	;wreg free
 21264  0178E6  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 21265  0178EC  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 21266  0178F2  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 21267  0178F8  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 21268                           
 21269                           ;mbmc.c: 92:  bcror = conv_raw_result(C_BATT, CONV);
 21270  0178FE  0E00               	movlw	0
 21271  017900  6EE6               	movwf	postinc1,c
 21272  017902  0E00               	movlw	0
 21273  017904  6EE6               	movwf	postinc1,c
 21274  017906  ECB8  F0A3         	call	_conv_raw_result	;wreg free
 21275  01790A  0060  F004  F080   	movff	btemp,calc_ror_data@bcror
 21276  017910  0060  F008  F081   	movff	btemp+1,calc_ror_data@bcror+1
 21277  017916  0060  F00C  F082   	movff	btemp+2,calc_ror_data@bcror+2
 21278  01791C  0060  F010  F083   	movff	btemp+3,calc_ror_data@bcror+3
 21279                           
 21280                           ;mbmc.c: 93:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 21281  017922  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 21282  017928  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 21283  01792E  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 21284  017934  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 21285  01793A  0E00               	movlw	0
 21286  01793C  6EE6               	movwf	postinc1,c
 21287  01793E  0E04               	movlw	4
 21288  017940  6EE6               	movwf	postinc1,c
 21289  017942  ECB8  F0A3         	call	_conv_raw_result	;wreg free
 21290  017946  0060  F007  FFE6   	movff	btemp,postinc1
 21291  01794C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21292  017952  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21293  017958  0060  F013  FFE6   	movff	btemp+3,postinc1
 21294  01795E  ECBF  F0CF         	call	___flsub	;wreg free
 21295  017962  0060  F007  FFE6   	movff	btemp,postinc1
 21296  017968  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21297  01796E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21298  017974  0060  F013  FFE6   	movff	btemp+3,postinc1
 21299  01797A  EC77  F0C8         	call	_fabsf	;wreg free
 21300  01797E  0060  F004  F168   	movff	btemp,_C+104	;volatile
 21301  017984  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 21302  01798A  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 21303  017990  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 21304                           
 21305                           ;mbmc.c: 94:  if (C.bv_ror < 0.0001)
 21306  017996  0E17               	movlw	23
 21307  017998  6EE6               	movwf	postinc1,c
 21308  01799A  0EB7               	movlw	183
 21309  01799C  6EE6               	movwf	postinc1,c
 21310  01799E  0ED1               	movlw	209
 21311  0179A0  6EE6               	movwf	postinc1,c
 21312  0179A2  0E38               	movlw	56
 21313  0179A4  6EE6               	movwf	postinc1,c
 21314  0179A6  0060  F5A3  FFE6   	movff	_C+104,postinc1
 21315  0179AC  0060  F5A7  FFE6   	movff	_C+105,postinc1
 21316  0179B2  0060  F5AB  FFE6   	movff	_C+106,postinc1
 21317  0179B8  0060  F5AF  FFE6   	movff	_C+107,postinc1
 21318  0179BE  EC70  F0BE         	call	___flge	;wreg free
 21319  0179C2  B001               	btfsc	btemp& (0+255),0,c
 21320  0179C4  D009               	goto	l10244
 21321                           
 21322                           ;mbmc.c: 95:   C.bv_ror = 0.0051;
 21323  0179C6  0EE7               	movlw	231
 21324  0179C8  0101               	movlb	1	; () banked
 21325  0179CA  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 21326  0179CC  0E1D               	movlw	29
 21327  0179CE  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 21328  0179D0  0EA7               	movlw	167
 21329  0179D2  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 21330  0179D4  0E3B               	movlw	59
 21331  0179D6  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 21332  0179D8                     l10244:
 21333                           
 21334                           ;mbmc.c: 96:  bvror = conv_raw_result(V_BAT, CONV);
 21335  0179D8  0E00               	movlw	0
 21336  0179DA  6EE6               	movwf	postinc1,c
 21337  0179DC  0E04               	movlw	4
 21338  0179DE  6EE6               	movwf	postinc1,c
 21339  0179E0  ECB8  F0A3         	call	_conv_raw_result	;wreg free
 21340  0179E4  0060  F004  F084   	movff	btemp,calc_ror_data@bvror
 21341  0179EA  0060  F008  F085   	movff	btemp+1,calc_ror_data@bvror+1
 21342  0179F0  0060  F00C  F086   	movff	btemp+2,calc_ror_data@bvror+2
 21343  0179F6  0060  F010  F087   	movff	btemp+3,calc_ror_data@bvror+3
 21344                           
 21345                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 21346  0179FC  0012               	return		;funcret
 21347  0179FE                     __end_of_calc_ror_data:
 21348                           	opt callstack 0
 21349                           
 21350 ;; *************** function _fabsf *****************
 21351 ;; Defined at:
 21352 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 21353 ;; Parameters:    Size  Location     Type
 21354 ;;  x               4  [STACK] float 
 21355 ;; Auto vars:     Size  Location     Type
 21356 ;;  u               4  [STACK] struct .
 21357 ;; Return value:  Size  Location     Type
 21358 ;;                  4  [STACK] float 
 21359 ;; Registers used:
 21360 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 21361 ;; Tracked objects:
 21362 ;;		On entry : 0/39
 21363 ;;		On exit  : 0/0
 21364 ;;		Unchanged: 0/0
 21365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21370 ;;Total ram usage:        0 bytes
 21371 ;; Hardware stack levels used:    1
 21372 ;; Hardware stack levels required when called:   15
 21373 ;; This function calls:
 21374 ;;		Nothing
 21375 ;; This function is called by:
 21376 ;;		_calc_ror_data
 21377 ;; This function uses a reentrant model
 21378 ;;
 21379                           
 21380                           	psect	text90
 21381  0190EE                     __ptext90:
 21382                           	opt callstack 0
 21383  0190EE                     _fabsf:
 21384                           	opt callstack 0
 21385                           
 21386                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21387  0190EE  52E6               	movf	postinc1,f,c
 21388  0190F0  52E6               	movf	postinc1,f,c
 21389  0190F2  52E6               	movf	postinc1,f,c
 21390  0190F4  52E6               	movf	postinc1,f,c
 21391                           
 21392                           ;incstack = 0
 21393  0190F6  0060  F1E0  F009   	movff	fabsf@F463,btemp+8
 21394  0190FC  0060  F1E4  F00A   	movff	fabsf@F463+1,btemp+9
 21395  019102  0060  F1E8  F00B   	movff	fabsf@F463+2,btemp+10
 21396  019108  0060  F1EC  F00C   	movff	fabsf@F463+3,btemp+11
 21397                           
 21398                           ;stkvar	_u @ sp[(-4)+0]
 21399  01910E  0EFC               	movlw	-4
 21400  019110  0060  F027  FFE3   	movff	btemp+8,plusw1
 21401  019116  0EFD               	movlw	-3
 21402  019118  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21403  01911E  0EFE               	movlw	-2
 21404  019120  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21405  019126  0EFF               	movlw	-1
 21406  019128  0060  F033  FFE3   	movff	btemp+11,plusw1
 21407                           
 21408                           ;stkvar	_x @ sp[(-4)+-4]
 21409  01912E  0EF8               	movlw	-8
 21410  019130  006F FF8C  F009    	movff	plusw1,btemp+8
 21411  019136  0EF9               	movlw	-7
 21412  019138  006F FF8C  F00A    	movff	plusw1,btemp+9
 21413  01913E  0EFA               	movlw	-6
 21414  019140  006F FF8C  F00B    	movff	plusw1,btemp+10
 21415  019146  0EFB               	movlw	-5
 21416  019148  006F FF8C  F00C    	movff	plusw1,btemp+11
 21417                           
 21418                           ;stkvar	_u @ sp[(-4)+0]
 21419  01914E  0EFC               	movlw	-4
 21420  019150  0060  F027  FFE3   	movff	btemp+8,plusw1
 21421  019156  0EFD               	movlw	-3
 21422  019158  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21423  01915E  0EFE               	movlw	-2
 21424  019160  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21425  019166  0EFF               	movlw	-1
 21426  019168  0060  F033  FFE3   	movff	btemp+11,plusw1
 21427                           
 21428                           ;stkvar	_u @ sp[(-4)+0]
 21429  01916E  0EFF               	movlw	-1
 21430  019170  9EE3               	bcf	plusw1,7,c
 21431                           
 21432                           ;stkvar	_u @ sp[(-4)+0]
 21433  019172  0EFC               	movlw	-4
 21434  019174  006F FF8C  F001    	movff	plusw1,btemp
 21435  01917A  0EFD               	movlw	-3
 21436  01917C  006F FF8C  F002    	movff	plusw1,btemp+1
 21437  019182  0EFE               	movlw	-2
 21438  019184  006F FF8C  F003    	movff	plusw1,btemp+2
 21439  01918A  0EFF               	movlw	-1
 21440  01918C  006F FF8C  F004    	movff	plusw1,btemp+3
 21441                           
 21442                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21443  019192  0EF8               	movlw	248
 21444  019194  26E1               	addwf	fsr1l,f,c
 21445  019196  0EFF               	movlw	255
 21446  019198  22E2               	addwfc	fsr1h,f,c
 21447  01919A  0012               	return		;funcret
 21448  01919C                     __end_of_fabsf:
 21449                           	opt callstack 0
 21450                           
 21451 ;; *************** function _conv_raw_result *****************
 21452 ;; Defined at:
 21453 ;;		line 80 in file "daq.c"
 21454 ;; Parameters:    Size  Location     Type
 21455 ;;  chan            1  [STACK] const enum E16136
 21456 ;;  to_what         1  [STACK] const enum E16198
 21457 ;; Auto vars:     Size  Location     Type
 21458 ;;		None
 21459 ;; Return value:  Size  Location     Type
 21460 ;;                  4  [STACK] float 
 21461 ;; Registers used:
 21462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21463 ;; Tracked objects:
 21464 ;;		On entry : 0/1
 21465 ;;		On exit  : 0/0
 21466 ;;		Unchanged: 0/0
 21467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21472 ;;Total ram usage:        0 bytes
 21473 ;; Hardware stack levels used:    1
 21474 ;; Hardware stack levels required when called:   17
 21475 ;; This function calls:
 21476 ;;		___fldiv
 21477 ;;		___flmul
 21478 ;;		___flsub
 21479 ;;		___xxtofl
 21480 ;;		_get_raw_result
 21481 ;;		_nanf
 21482 ;; This function is called by:
 21483 ;;		_convert_adc_data
 21484 ;;		_calc_ror_data
 21485 ;;		_init_bsoc
 21486 ;; This function uses a reentrant model
 21487 ;;
 21488                           
 21489                           	psect	text91
 21490  014770                     __ptext91:
 21491                           	opt callstack 0
 21492  014770                     _conv_raw_result:
 21493                           	opt callstack 12
 21494                           
 21495                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
 21496                           
 21497                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21498                           ;incstack = 0
 21499  014770  D242               	goto	l9866
 21500  014772                     l9812:
 21501                           
 21502                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
 21503                           ;stkvar	_chan @ sp[(0)+-1]
 21504  014772  0EFF               	movlw	-1
 21505  014774  006F FF8C  F00C    	movff	plusw1,btemp+11
 21506  01477A  0E77               	movlw	119
 21507  01477C  6E09               	movwf	(btemp+8)^0,c
 21508  01477E  0E3C               	movlw	60
 21509  014780  6E0A               	movwf	(btemp+9)^0,c
 21510  014782  2A0C               	incf	(btemp+11)^0,f,c
 21511  014784  D003               	goto	u8944
 21512  014786                     u8945:
 21513  014786  340A               	rlcf	(btemp+9)^0,w,c
 21514  014788  320A               	rrcf	(btemp+9)^0,f,c
 21515  01478A  3209               	rrcf	(btemp+8)^0,f,c
 21516  01478C                     u8944:
 21517  01478C  2E0C               	decfsz	(btemp+11)^0,f,c
 21518  01478E  D7FB               	goto	u8945
 21519  014790  B009               	btfsc	(btemp+8)^0,0,c
 21520  014792  D007               	goto	l9818
 21521                           
 21522                           ;daq.c: 86:    return nanf("");
 21523  014794  0E1B               	movlw	low (STR_47+78)
 21524  014796  6EE6               	movwf	postinc1,c
 21525  014798  0EFE               	movlw	high (STR_47+78)
 21526  01479A  6EE6               	movwf	postinc1,c
 21527  01479C  ECC9  F0CD         	call	_nanf	;wreg free
 21528  0147A0  D23A               	goto	l1747
 21529  0147A2                     l9818:
 21530                           
 21531                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
 21532                           ;stkvar	_chan @ sp[(0)+-1]
 21533  0147A2  0EFF               	movlw	-1
 21534  0147A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21535  0147AA  0E03               	movlw	3
 21536  0147AC  6E09               	movwf	(btemp+8)^0,c
 21537  0147AE  0E00               	movlw	0
 21538  0147B0  6E0A               	movwf	(btemp+9)^0,c
 21539  0147B2  2A0C               	incf	(btemp+11)^0,f,c
 21540  0147B4  D003               	goto	u8964
 21541  0147B6                     u8965:
 21542  0147B6  340A               	rlcf	(btemp+9)^0,w,c
 21543  0147B8  320A               	rrcf	(btemp+9)^0,f,c
 21544  0147BA  3209               	rrcf	(btemp+8)^0,f,c
 21545  0147BC                     u8964:
 21546  0147BC  2E0C               	decfsz	(btemp+11)^0,f,c
 21547  0147BE  D7FB               	goto	u8965
 21548  0147C0  A009               	btfss	(btemp+8)^0,0,c
 21549  0147C2  D0EB               	goto	l9832
 21550                           
 21551                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
 21552                           ;stkvar	_chan @ sp[(0)+-1]
 21553  0147C4  0EFF               	movlw	-1
 21554  0147C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21555  0147CC  0E01               	movlw	1
 21556  0147CE  6E09               	movwf	(btemp+8)^0,c
 21557  0147D0  0E00               	movlw	0
 21558  0147D2  6E0A               	movwf	(btemp+9)^0,c
 21559  0147D4  2A0C               	incf	(btemp+11)^0,f,c
 21560  0147D6  D003               	goto	u8984
 21561  0147D8                     u8985:
 21562  0147D8  340A               	rlcf	(btemp+9)^0,w,c
 21563  0147DA  320A               	rrcf	(btemp+9)^0,f,c
 21564  0147DC  3209               	rrcf	(btemp+8)^0,f,c
 21565  0147DE                     u8984:
 21566  0147DE  2E0C               	decfsz	(btemp+11)^0,f,c
 21567  0147E0  D7FB               	goto	u8985
 21568  0147E2  A009               	btfss	(btemp+8)^0,0,c
 21569  0147E4  D06D               	goto	l9828
 21570                           
 21571                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
 21572  0147E6  0E7B               	movlw	123
 21573  0147E8  6EE6               	movwf	postinc1,c
 21574  0147EA  0E14               	movlw	20
 21575  0147EC  6EE6               	movwf	postinc1,c
 21576  0147EE  0EAE               	movlw	174
 21577  0147F0  6EE6               	movwf	postinc1,c
 21578  0147F2  0E3D               	movlw	61
 21579  0147F4  6EE6               	movwf	postinc1,c
 21580  0147F6  0060  F398  F009   	movff	_R+32,btemp+8	;volatile
 21581  0147FC  0060  F39C  F00A   	movff	_R+33,btemp+9	;volatile
 21582  014802  0E00               	movlw	0
 21583  014804  BE0A               	btfsc	(btemp+9)^0,7,c
 21584  014806  0EFF               	movlw	255
 21585  014808  6E0B               	movwf	(btemp+10)^0,c
 21586  01480A  6E0C               	movwf	(btemp+11)^0,c
 21587  01480C  0060  F027  FFE6   	movff	btemp+8,postinc1
 21588  014812  0060  F02B  FFE6   	movff	btemp+9,postinc1
 21589  014818  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21590  01481E  0060  F033  FFE6   	movff	btemp+11,postinc1
 21591  014824  0E01               	movlw	1
 21592  014826  6EE6               	movwf	postinc1,c
 21593  014828  ECDA  F0B7         	call	___xxtofl	;wreg free
 21594  01482C  0060  F007  FFE6   	movff	btemp,postinc1
 21595  014832  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21596  014838  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21597  01483E  0060  F013  FFE6   	movff	btemp+3,postinc1
 21598                           
 21599                           ;stkvar	_chan @ sp[(-8)+-1]
 21600  014844  0EF7               	movlw	-9
 21601  014846  50E3               	movf	plusw1,w,c
 21602  014848  6EE6               	movwf	postinc1,c
 21603  01484A  ECD8  F0D4         	call	_get_raw_result	;wreg free
 21604  01484E  0060  F004  F00B   	movff	btemp,btemp+10
 21605  014854  0060  F008  F00C   	movff	btemp+1,btemp+11
 21606  01485A  500B               	movf	(btemp+10)^0,w,c
 21607  01485C  6E05               	movwf	(btemp+4)^0,c
 21608  01485E  500C               	movf	(btemp+11)^0,w,c
 21609  014860  6E06               	movwf	(btemp+5)^0,c
 21610  014862  6A07               	clrf	(btemp+6)^0,c
 21611  014864  6A08               	clrf	(btemp+7)^0,c
 21612  014866  0060  F017  FFE6   	movff	btemp+4,postinc1
 21613  01486C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 21614  014872  0060  F01F  FFE6   	movff	btemp+6,postinc1
 21615  014878  0060  F023  FFE6   	movff	btemp+7,postinc1
 21616  01487E  0E00               	movlw	0
 21617  014880  6EE6               	movwf	postinc1,c
 21618  014882  ECDA  F0B7         	call	___xxtofl	;wreg free
 21619  014886  0060  F007  FFE6   	movff	btemp,postinc1
 21620  01488C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21621  014892  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21622  014898  0060  F013  FFE6   	movff	btemp+3,postinc1
 21623  01489E  ECBF  F0CF         	call	___flsub	;wreg free
 21624  0148A2  0060  F007  FFE6   	movff	btemp,postinc1
 21625  0148A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21626  0148AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21627  0148B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 21628  0148BA  ECC5  F095         	call	___flmul	;wreg free
 21629  0148BE  D1AB               	goto	l1747
 21630  0148C0                     l9828:
 21631                           
 21632                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
 21633  0148C0  0E29               	movlw	41
 21634  0148C2  6EE6               	movwf	postinc1,c
 21635  0148C4  0E5C               	movlw	92
 21636  0148C6  6EE6               	movwf	postinc1,c
 21637  0148C8  0E0F               	movlw	15
 21638  0148CA  6EE6               	movwf	postinc1,c
 21639  0148CC  0E3D               	movlw	61
 21640  0148CE  6EE6               	movwf	postinc1,c
 21641  0148D0  0060  F3A0  F009   	movff	_R+34,btemp+8	;volatile
 21642  0148D6  0060  F3A4  F00A   	movff	_R+35,btemp+9	;volatile
 21643  0148DC  0E00               	movlw	0
 21644  0148DE  BE0A               	btfsc	(btemp+9)^0,7,c
 21645  0148E0  0EFF               	movlw	255
 21646  0148E2  6E0B               	movwf	(btemp+10)^0,c
 21647  0148E4  6E0C               	movwf	(btemp+11)^0,c
 21648  0148E6  0060  F027  FFE6   	movff	btemp+8,postinc1
 21649  0148EC  0060  F02B  FFE6   	movff	btemp+9,postinc1
 21650  0148F2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21651  0148F8  0060  F033  FFE6   	movff	btemp+11,postinc1
 21652  0148FE  0E01               	movlw	1
 21653  014900  6EE6               	movwf	postinc1,c
 21654  014902  ECDA  F0B7         	call	___xxtofl	;wreg free
 21655  014906  0060  F007  FFE6   	movff	btemp,postinc1
 21656  01490C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21657  014912  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21658  014918  0060  F013  FFE6   	movff	btemp+3,postinc1
 21659                           
 21660                           ;stkvar	_chan @ sp[(-8)+-1]
 21661  01491E  0EF7               	movlw	-9
 21662  014920  50E3               	movf	plusw1,w,c
 21663  014922  6EE6               	movwf	postinc1,c
 21664  014924  ECD8  F0D4         	call	_get_raw_result	;wreg free
 21665  014928  0060  F004  F00B   	movff	btemp,btemp+10
 21666  01492E  0060  F008  F00C   	movff	btemp+1,btemp+11
 21667  014934  500B               	movf	(btemp+10)^0,w,c
 21668  014936  6E05               	movwf	(btemp+4)^0,c
 21669  014938  500C               	movf	(btemp+11)^0,w,c
 21670  01493A  6E06               	movwf	(btemp+5)^0,c
 21671  01493C  6A07               	clrf	(btemp+6)^0,c
 21672  01493E  6A08               	clrf	(btemp+7)^0,c
 21673  014940  0060  F017  FFE6   	movff	btemp+4,postinc1
 21674  014946  0060  F01B  FFE6   	movff	btemp+5,postinc1
 21675  01494C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 21676  014952  0060  F023  FFE6   	movff	btemp+7,postinc1
 21677  014958  0E00               	movlw	0
 21678  01495A  6EE6               	movwf	postinc1,c
 21679  01495C  ECDA  F0B7         	call	___xxtofl	;wreg free
 21680  014960  0060  F007  FFE6   	movff	btemp,postinc1
 21681  014966  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21682  01496C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21683  014972  0060  F013  FFE6   	movff	btemp+3,postinc1
 21684  014978  ECBF  F0CF         	call	___flsub	;wreg free
 21685  01497C  0060  F007  FFE6   	movff	btemp,postinc1
 21686  014982  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21687  014988  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21688  01498E  0060  F013  FFE6   	movff	btemp+3,postinc1
 21689  014994  ECC5  F095         	call	___flmul	;wreg free
 21690  014998  D13E               	goto	l1747
 21691  01499A                     l9832:
 21692                           
 21693                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
 21694                           ;stkvar	_chan @ sp[(0)+-1]
 21695  01499A  0EFF               	movlw	-1
 21696  01499C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21697  0149A2  0E00               	movlw	0
 21698  0149A4  6E09               	movwf	(btemp+8)^0,c
 21699  0149A6  0E08               	movlw	8
 21700  0149A8  6E0A               	movwf	(btemp+9)^0,c
 21701  0149AA  2A0C               	incf	(btemp+11)^0,f,c
 21702  0149AC  D003               	goto	u9004
 21703  0149AE                     u9005:
 21704  0149AE  340A               	rlcf	(btemp+9)^0,w,c
 21705  0149B0  320A               	rrcf	(btemp+9)^0,f,c
 21706  0149B2  3209               	rrcf	(btemp+8)^0,f,c
 21707  0149B4                     u9004:
 21708  0149B4  2E0C               	decfsz	(btemp+11)^0,f,c
 21709  0149B6  D7FB               	goto	u9005
 21710  0149B8  A009               	btfss	(btemp+8)^0,0,c
 21711  0149BA  D008               	goto	l9840
 21712                           
 21713                           ;daq.c: 96:     return 25.0;
 21714  0149BC  0E00               	movlw	0
 21715  0149BE  6E01               	movwf	btemp^0,c
 21716  0149C0  0E00               	movlw	0
 21717  0149C2  6E02               	movwf	(btemp+1)^0,c
 21718  0149C4  0EC8               	movlw	200
 21719  0149C6  6E03               	movwf	(btemp+2)^0,c
 21720  0149C8  0E41               	movlw	65
 21721  0149CA  D113               	goto	L24
 21722  0149CC                     l9840:
 21723                           
 21724                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 21725  0149CC  0E00               	movlw	0
 21726  0149CE  6EE6               	movwf	postinc1,c
 21727  0149D0  0E00               	movlw	0
 21728  0149D2  6EE6               	movwf	postinc1,c
 21729  0149D4  0E7A               	movlw	122
 21730  0149D6  6EE6               	movwf	postinc1,c
 21731  0149D8  0E44               	movlw	68
 21732  0149DA  6EE6               	movwf	postinc1,c
 21733  0149DC  0E61               	movlw	97
 21734  0149DE  6EE6               	movwf	postinc1,c
 21735  0149E0  0E03               	movlw	3
 21736  0149E2  6EE6               	movwf	postinc1,c
 21737  0149E4  0E84               	movlw	132
 21738  0149E6  6EE6               	movwf	postinc1,c
 21739  0149E8  0E40               	movlw	64
 21740  0149EA  6EE6               	movwf	postinc1,c
 21741                           
 21742                           ;stkvar	_chan @ sp[(-8)+-1]
 21743  0149EC  0EF7               	movlw	-9
 21744  0149EE  50E3               	movf	plusw1,w,c
 21745  0149F0  6EE6               	movwf	postinc1,c
 21746  0149F2  ECD8  F0D4         	call	_get_raw_result	;wreg free
 21747  0149F6  0060  F004  F00B   	movff	btemp,btemp+10
 21748  0149FC  0060  F008  F00C   	movff	btemp+1,btemp+11
 21749  014A02  500B               	movf	(btemp+10)^0,w,c
 21750  014A04  6E05               	movwf	(btemp+4)^0,c
 21751  014A06  500C               	movf	(btemp+11)^0,w,c
 21752  014A08  6E06               	movwf	(btemp+5)^0,c
 21753  014A0A  6A07               	clrf	(btemp+6)^0,c
 21754  014A0C  6A08               	clrf	(btemp+7)^0,c
 21755  014A0E  0060  F017  FFE6   	movff	btemp+4,postinc1
 21756  014A14  0060  F01B  FFE6   	movff	btemp+5,postinc1
 21757  014A1A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 21758  014A20  0060  F023  FFE6   	movff	btemp+7,postinc1
 21759  014A26  0E00               	movlw	0
 21760  014A28  6EE6               	movwf	postinc1,c
 21761  014A2A  ECDA  F0B7         	call	___xxtofl	;wreg free
 21762  014A2E  0060  F007  FFE6   	movff	btemp,postinc1
 21763  014A34  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21764  014A3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21765  014A40  0060  F013  FFE6   	movff	btemp+3,postinc1
 21766  014A46  ECC5  F095         	call	___flmul	;wreg free
 21767  014A4A  0060  F007  FFE6   	movff	btemp,postinc1
 21768  014A50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21769  014A56  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21770  014A5C  0060  F013  FFE6   	movff	btemp+3,postinc1
 21771  014A62  ECFB  F0A0         	call	___fldiv	;wreg free
 21772  014A66  D0D7               	goto	l1747
 21773  014A68                     l9844:
 21774                           
 21775                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 21776                           ;stkvar	_chan @ sp[(0)+-1]
 21777  014A68  0EFF               	movlw	-1
 21778  014A6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21779  014A70  0E03               	movlw	3
 21780  014A72  6E09               	movwf	(btemp+8)^0,c
 21781  014A74  0E00               	movlw	0
 21782  014A76  6E0A               	movwf	(btemp+9)^0,c
 21783  014A78  2A0C               	incf	(btemp+11)^0,f,c
 21784  014A7A  D003               	goto	u9024
 21785  014A7C                     u9025:
 21786  014A7C  340A               	rlcf	(btemp+9)^0,w,c
 21787  014A7E  320A               	rrcf	(btemp+9)^0,f,c
 21788  014A80  3209               	rrcf	(btemp+8)^0,f,c
 21789  014A82                     u9024:
 21790  014A82  2E0C               	decfsz	(btemp+11)^0,f,c
 21791  014A84  D7FB               	goto	u9025
 21792  014A86  B009               	btfsc	(btemp+8)^0,0,c
 21793  014A88  D011               	goto	u9050
 21794                           
 21795                           ;stkvar	_chan @ sp[(0)+-1]
 21796  014A8A  0EFF               	movlw	-1
 21797  014A8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21798  014A92  0E00               	movlw	0
 21799  014A94  6E09               	movwf	(btemp+8)^0,c
 21800  014A96  0E08               	movlw	8
 21801  014A98  6E0A               	movwf	(btemp+9)^0,c
 21802  014A9A  2A0C               	incf	(btemp+11)^0,f,c
 21803  014A9C  D003               	goto	u9044
 21804  014A9E                     u9045:
 21805  014A9E  340A               	rlcf	(btemp+9)^0,w,c
 21806  014AA0  320A               	rrcf	(btemp+9)^0,f,c
 21807  014AA2  3209               	rrcf	(btemp+8)^0,f,c
 21808  014AA4                     u9044:
 21809  014AA4  2E0C               	decfsz	(btemp+11)^0,f,c
 21810  014AA6  D7FB               	goto	u9045
 21811  014AA8  A009               	btfss	(btemp+8)^0,0,c
 21812  014AAA  D04E               	goto	l9852
 21813  014AAC                     u9050:
 21814                           
 21815                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 21816  014AAC  0E00               	movlw	0
 21817  014AAE  6EE6               	movwf	postinc1,c
 21818  014AB0  0E00               	movlw	0
 21819  014AB2  6EE6               	movwf	postinc1,c
 21820  014AB4  0E7A               	movlw	122
 21821  014AB6  6EE6               	movwf	postinc1,c
 21822  014AB8  0E44               	movlw	68
 21823  014ABA  6EE6               	movwf	postinc1,c
 21824  014ABC  0E00               	movlw	0
 21825  014ABE  6EE6               	movwf	postinc1,c
 21826  014AC0  0E00               	movlw	0
 21827  014AC2  6EE6               	movwf	postinc1,c
 21828  014AC4  0E20               	movlw	32
 21829  014AC6  6EE6               	movwf	postinc1,c
 21830  014AC8  0E3F               	movlw	63
 21831  014ACA  6EE6               	movwf	postinc1,c
 21832                           
 21833                           ;stkvar	_chan @ sp[(-8)+-1]
 21834  014ACC  0EF7               	movlw	-9
 21835  014ACE  50E3               	movf	plusw1,w,c
 21836  014AD0  6EE6               	movwf	postinc1,c
 21837  014AD2  ECD8  F0D4         	call	_get_raw_result	;wreg free
 21838  014AD6  0060  F004  F00B   	movff	btemp,btemp+10
 21839  014ADC  0060  F008  F00C   	movff	btemp+1,btemp+11
 21840  014AE2  500B               	movf	(btemp+10)^0,w,c
 21841  014AE4  6E05               	movwf	(btemp+4)^0,c
 21842  014AE6  500C               	movf	(btemp+11)^0,w,c
 21843  014AE8  6E06               	movwf	(btemp+5)^0,c
 21844  014AEA  6A07               	clrf	(btemp+6)^0,c
 21845  014AEC  6A08               	clrf	(btemp+7)^0,c
 21846  014AEE  0060  F017  FFE6   	movff	btemp+4,postinc1
 21847  014AF4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 21848  014AFA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 21849  014B00  0060  F023  FFE6   	movff	btemp+7,postinc1
 21850  014B06  0E00               	movlw	0
 21851  014B08  6EE6               	movwf	postinc1,c
 21852  014B0A  ECDA  F0B7         	call	___xxtofl	;wreg free
 21853  014B0E  0060  F007  FFE6   	movff	btemp,postinc1
 21854  014B14  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21855  014B1A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21856  014B20  0060  F013  FFE6   	movff	btemp+3,postinc1
 21857  014B26  ECC5  F095         	call	___flmul	;wreg free
 21858  014B2A  0060  F007  FFE6   	movff	btemp,postinc1
 21859  014B30  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21860  014B36  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21861  014B3C  0060  F013  FFE6   	movff	btemp+3,postinc1
 21862  014B42  ECFB  F0A0         	call	___fldiv	;wreg free
 21863  014B46  D067               	goto	l1747
 21864  014B48                     l9852:
 21865                           
 21866                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 21867  014B48  0E00               	movlw	0
 21868  014B4A  6EE6               	movwf	postinc1,c
 21869  014B4C  0E00               	movlw	0
 21870  014B4E  6EE6               	movwf	postinc1,c
 21871  014B50  0E7A               	movlw	122
 21872  014B52  6EE6               	movwf	postinc1,c
 21873  014B54  0E44               	movlw	68
 21874  014B56  6EE6               	movwf	postinc1,c
 21875  014B58  0E61               	movlw	97
 21876  014B5A  6EE6               	movwf	postinc1,c
 21877  014B5C  0E03               	movlw	3
 21878  014B5E  6EE6               	movwf	postinc1,c
 21879  014B60  0E84               	movlw	132
 21880  014B62  6EE6               	movwf	postinc1,c
 21881  014B64  0E40               	movlw	64
 21882  014B66  6EE6               	movwf	postinc1,c
 21883                           
 21884                           ;stkvar	_chan @ sp[(-8)+-1]
 21885  014B68  0EF7               	movlw	-9
 21886  014B6A  50E3               	movf	plusw1,w,c
 21887  014B6C  6EE6               	movwf	postinc1,c
 21888  014B6E  ECD8  F0D4         	call	_get_raw_result	;wreg free
 21889  014B72  0060  F004  F00B   	movff	btemp,btemp+10
 21890  014B78  0060  F008  F00C   	movff	btemp+1,btemp+11
 21891  014B7E  500B               	movf	(btemp+10)^0,w,c
 21892  014B80  6E05               	movwf	(btemp+4)^0,c
 21893  014B82  500C               	movf	(btemp+11)^0,w,c
 21894  014B84  6E06               	movwf	(btemp+5)^0,c
 21895  014B86  6A07               	clrf	(btemp+6)^0,c
 21896  014B88  6A08               	clrf	(btemp+7)^0,c
 21897  014B8A  0060  F017  FFE6   	movff	btemp+4,postinc1
 21898  014B90  0060  F01B  FFE6   	movff	btemp+5,postinc1
 21899  014B96  0060  F01F  FFE6   	movff	btemp+6,postinc1
 21900  014B9C  0060  F023  FFE6   	movff	btemp+7,postinc1
 21901  014BA2  0E00               	movlw	0
 21902  014BA4  6EE6               	movwf	postinc1,c
 21903  014BA6  ECDA  F0B7         	call	___xxtofl	;wreg free
 21904  014BAA  0060  F007  FFE6   	movff	btemp,postinc1
 21905  014BB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21906  014BB6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21907  014BBC  0060  F013  FFE6   	movff	btemp+3,postinc1
 21908  014BC2  ECC5  F095         	call	___flmul	;wreg free
 21909  014BC6  0060  F007  FFE6   	movff	btemp,postinc1
 21910  014BCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21911  014BD2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21912  014BD8  0060  F013  FFE6   	movff	btemp+3,postinc1
 21913  014BDE  ECFB  F0A0         	call	___fldiv	;wreg free
 21914  014BE2  D019               	goto	l1747
 21915  014BE4                     l9858:
 21916                           
 21917                           ;daq.c: 109:   return 0.0;
 21918  014BE4  0E00               	movlw	0
 21919  014BE6  6E01               	movwf	btemp^0,c
 21920  014BE8  0E00               	movlw	0
 21921  014BEA  6E02               	movwf	(btemp+1)^0,c
 21922  014BEC  0E00               	movlw	0
 21923  014BEE  6E03               	movwf	(btemp+2)^0,c
 21924  014BF0  0E00               	movlw	0
 21925  014BF2                     L24:
 21926  014BF2  6E04               	movwf	(btemp+3)^0,c
 21927  014BF4  D010               	goto	l1747
 21928  014BF6                     l9866:
 21929                           
 21930                           ;stkvar	_to_what @ sp[(0)+-2]
 21931  014BF6  0EFE               	movlw	-2
 21932  014BF8  50E3               	movf	plusw1,w,c
 21933  014BFA  6E0B               	movwf	(btemp+10)^0,c
 21934  014BFC  6A0C               	clrf	(btemp+11)^0,c
 21935                           
 21936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21937                           ; Switch size 1, requested type "simple"
 21938                           ; Number of cases is 1, Range of values is 0 to 0
 21939                           ; switch strategies available:
 21940                           ; Name         Instructions Cycles
 21941                           ; simple_byte            4     3 (average)
 21942                           ;	Chosen strategy is simple_byte
 21943  014BFE  500C               	movf	(btemp+11)^0,w,c
 21944  014C00  0A00               	xorlw	0	; case 0
 21945  014C02  A4D8               	btfss	status,2,c
 21946  014C04  D7EF               	goto	l9858
 21947                           
 21948                           ; Switch size 1, requested type "simple"
 21949                           ; Number of cases is 2, Range of values is 0 to 1
 21950                           ; switch strategies available:
 21951                           ; Name         Instructions Cycles
 21952                           ; simple_byte            7     4 (average)
 21953                           ;	Chosen strategy is simple_byte
 21954  014C06  500B               	movf	(btemp+10)^0,w,c
 21955  014C08  0A00               	xorlw	0	; case 0
 21956  014C0A  B4D8               	btfsc	status,2,c
 21957  014C0C  D5B2               	goto	l9812
 21958  014C0E  0A01               	xorlw	1	; case 1
 21959  014C10  B4D8               	btfsc	status,2,c
 21960  014C12  D72A               	goto	l9844
 21961  014C14  D7E7               	goto	l9858
 21962  014C16                     l1747:
 21963                           
 21964                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 21965  014C16  52E5               	movf	postdec1,f,c
 21966  014C18  52E5               	movf	postdec1,f,c
 21967  014C1A  0012               	return		;funcret
 21968  014C1C                     __end_of_conv_raw_result:
 21969                           	opt callstack 0
 21970                           
 21971 ;; *************** function _nanf *****************
 21972 ;; Defined at:
 21973 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 21974 ;; Parameters:    Size  Location     Type
 21975 ;;  s               2  [STACK] PTR const unsigned char 
 21976 ;;		 -> STR_84(1), STR_46(1), 
 21977 ;; Auto vars:     Size  Location     Type
 21978 ;;  u               4  [STACK] struct .
 21979 ;; Return value:  Size  Location     Type
 21980 ;;                  4  [STACK] float 
 21981 ;; Registers used:
 21982 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 21983 ;; Tracked objects:
 21984 ;;		On entry : 0/1
 21985 ;;		On exit  : 0/0
 21986 ;;		Unchanged: 0/0
 21987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21992 ;;Total ram usage:        0 bytes
 21993 ;; Hardware stack levels used:    1
 21994 ;; Hardware stack levels required when called:   15
 21995 ;; This function calls:
 21996 ;;		Nothing
 21997 ;; This function is called by:
 21998 ;;		_conv_raw_result
 21999 ;; This function uses a reentrant model
 22000 ;;
 22001                           
 22002                           	psect	text92
 22003  019B92                     __ptext92:
 22004                           	opt callstack 0
 22005  019B92                     _nanf:
 22006                           	opt callstack 0
 22007                           
 22008                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22009  019B92  52E6               	movf	postinc1,f,c
 22010  019B94  52E6               	movf	postinc1,f,c
 22011  019B96  52E6               	movf	postinc1,f,c
 22012  019B98  52E6               	movf	postinc1,f,c
 22013                           
 22014                           ;incstack = 0
 22015  019B9A  0EFF               	movlw	255
 22016  019B9C  6E09               	movwf	(btemp+8)^0,c
 22017  019B9E  0EFF               	movlw	255
 22018  019BA0  6E0A               	movwf	(btemp+9)^0,c
 22019  019BA2  0EFF               	movlw	255
 22020  019BA4  6E0B               	movwf	(btemp+10)^0,c
 22021  019BA6  0E7F               	movlw	127
 22022  019BA8  6E0C               	movwf	(btemp+11)^0,c
 22023                           
 22024                           ;stkvar	_u @ sp[(-4)+0]
 22025  019BAA  0EFC               	movlw	-4
 22026  019BAC  0060  F027  FFE3   	movff	btemp+8,plusw1
 22027  019BB2  0EFD               	movlw	-3
 22028  019BB4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22029  019BBA  0EFE               	movlw	-2
 22030  019BBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22031  019BC2  0EFF               	movlw	-1
 22032  019BC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 22033                           
 22034                           ;stkvar	_u @ sp[(-4)+0]
 22035  019BCA  0EFC               	movlw	-4
 22036  019BCC  006F FF8C  F001    	movff	plusw1,btemp
 22037  019BD2  0EFD               	movlw	-3
 22038  019BD4  006F FF8C  F002    	movff	plusw1,btemp+1
 22039  019BDA  0EFE               	movlw	-2
 22040  019BDC  006F FF8C  F003    	movff	plusw1,btemp+2
 22041  019BE2  0EFF               	movlw	-1
 22042  019BE4  006F FF8C  F004    	movff	plusw1,btemp+3
 22043                           
 22044                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22045  019BEA  0EFA               	movlw	250
 22046  019BEC  26E1               	addwf	fsr1l,f,c
 22047  019BEE  0EFF               	movlw	255
 22048  019BF0  22E2               	addwfc	fsr1h,f,c
 22049  019BF2  0012               	return		;funcret
 22050  019BF4                     __end_of_nanf:
 22051                           	opt callstack 0
 22052                           
 22053 ;; *************** function _get_raw_result *****************
 22054 ;; Defined at:
 22055 ;;		line 72 in file "daq.c"
 22056 ;; Parameters:    Size  Location     Type
 22057 ;;  index           1  [STACK] const enum E16136
 22058 ;; Auto vars:     Size  Location     Type
 22059 ;;		None
 22060 ;; Return value:  Size  Location     Type
 22061 ;;                  2  [STACK] unsigned short 
 22062 ;; Registers used:
 22063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 22064 ;; Tracked objects:
 22065 ;;		On entry : 0/2
 22066 ;;		On exit  : 0/0
 22067 ;;		Unchanged: 0/0
 22068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22073 ;;Total ram usage:        0 bytes
 22074 ;; Hardware stack levels used:    1
 22075 ;; Hardware stack levels required when called:   15
 22076 ;; This function calls:
 22077 ;;		Nothing
 22078 ;; This function is called by:
 22079 ;;		_main
 22080 ;;		_conv_raw_result
 22081 ;; This function uses a reentrant model
 22082 ;;
 22083                           
 22084                           	psect	text93
 22085  01A9B0                     __ptext93:
 22086                           	opt callstack 0
 22087  01A9B0                     _get_raw_result:
 22088                           	opt callstack 13
 22089                           
 22090                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
 22091                           ;stkvar	_index @ sp[(0)+-1]
 22092                           
 22093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22094                           ;incstack = 0
 22095  01A9B0  0EFF               	movlw	-1
 22096  01A9B2  50E3               	movf	plusw1,w,c
 22097  01A9B4  0D02               	mullw	2
 22098  01A9B6  50F3               	movf	243,w,c
 22099  01A9B8  0FC6               	addlw	low _R
 22100  01A9BA  6ED9               	movwf	fsr2l,c
 22101  01A9BC  6ADA               	clrf	fsr2h,c
 22102  01A9BE  006F FF78  F001    	movff	postinc2,btemp
 22103  01A9C4  006F FF74  F002    	movff	postdec2,btemp+1
 22104                           
 22105                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 22106  01A9CA  52E5               	movf	postdec1,f,c
 22107  01A9CC  0012               	return		;funcret
 22108  01A9CE                     __end_of_get_raw_result:
 22109                           	opt callstack 0
 22110                           
 22111 ;; *************** function ___xxtofl *****************
 22112 ;; Defined at:
 22113 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 22114 ;; Parameters:    Size  Location     Type
 22115 ;;  sign            1  [STACK] unsigned char 
 22116 ;;  val             4  [STACK] long 
 22117 ;; Auto vars:     Size  Location     Type
 22118 ;;  arg             4  [STACK] unsigned long 
 22119 ;;  exp             1  [STACK] unsigned char 
 22120 ;; Return value:  Size  Location     Type
 22121 ;;                  4  [STACK] unsigned char 
 22122 ;; Registers used:
 22123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22124 ;; Tracked objects:
 22125 ;;		On entry : 0/1
 22126 ;;		On exit  : 0/0
 22127 ;;		Unchanged: 0/0
 22128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22133 ;;Total ram usage:        0 bytes
 22134 ;; Hardware stack levels used:    1
 22135 ;; Hardware stack levels required when called:   15
 22136 ;; This function calls:
 22137 ;;		Nothing
 22138 ;; This function is called by:
 22139 ;;		_conv_raw_result
 22140 ;;		_init_bsoc
 22141 ;; This function uses a reentrant model
 22142 ;;
 22143                           
 22144                           	psect	text94
 22145  016FB4                     __ptext94:
 22146                           	opt callstack 0
 22147  016FB4                     ___xxtofl:
 22148                           	opt callstack 0
 22149                           
 22150                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22151  016FB4  0E05               	movlw	5
 22152  016FB6  26E1               	addwf	fsr1l,f,c
 22153  016FB8  0E00               	movlw	0
 22154  016FBA  22E2               	addwfc	fsr1h,f,c
 22155                           
 22156                           ;stkvar	_sign @ sp[(-5)+-1]
 22157                           
 22158                           ;incstack = 0
 22159  016FBC  0EFA               	movlw	-6
 22160  016FBE  50E3               	movf	plusw1,w,c
 22161  016FC0  B4D8               	btfsc	status,2,c
 22162  016FC2  D01D               	goto	l9258
 22163                           
 22164                           ;stkvar	_val @ sp[(-5)+-5]
 22165  016FC4  0EF9               	movlw	-7
 22166  016FC6  AEE3               	btfss	plusw1,7,c
 22167  016FC8  D01A               	goto	l9258
 22168                           
 22169                           ;stkvar	_val @ sp[(-5)+-5]
 22170  016FCA  0EF6               	movlw	-10
 22171  016FCC  006F FF8C  F009    	movff	plusw1,btemp+8
 22172  016FD2  0EF7               	movlw	-9
 22173  016FD4  006F FF8C  F00A    	movff	plusw1,btemp+9
 22174  016FDA  0EF8               	movlw	-8
 22175  016FDC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22176  016FE2  0EF9               	movlw	-7
 22177  016FE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22178  016FEA  1E09               	comf	(btemp+8)^0,f,c
 22179  016FEC  1E0A               	comf	(btemp+9)^0,f,c
 22180  016FEE  1E0B               	comf	(btemp+10)^0,f,c
 22181  016FF0  1E0C               	comf	(btemp+11)^0,f,c
 22182  016FF2  2A09               	incf	(btemp+8)^0,f,c
 22183  016FF4  0E00               	movlw	0
 22184  016FF6  220A               	addwfc	(btemp+9)^0,f,c
 22185  016FF8  220B               	addwfc	(btemp+10)^0,f,c
 22186  016FFA  220C               	addwfc	(btemp+11)^0,f,c
 22187  016FFC  D010               	goto	L25
 22188  016FFE                     l9258:
 22189                           
 22190                           ;stkvar	_val @ sp[(-5)+-5]
 22191  016FFE  0EF6               	movlw	-10
 22192  017000  006F FF8C  F009    	movff	plusw1,btemp+8
 22193  017006  0EF7               	movlw	-9
 22194  017008  006F FF8C  F00A    	movff	plusw1,btemp+9
 22195  01700E  0EF8               	movlw	-8
 22196  017010  006F FF8C  F00B    	movff	plusw1,btemp+10
 22197  017016  0EF9               	movlw	-7
 22198  017018  006F FF8C  F00C    	movff	plusw1,btemp+11
 22199  01701E                     L25:
 22200                           
 22201                           ;stkvar	_arg @ sp[(-5)+0]
 22202  01701E  0EFB               	movlw	-5
 22203  017020  0060  F027  FFE3   	movff	btemp+8,plusw1
 22204  017026  0EFC               	movlw	-4
 22205  017028  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22206  01702E  0EFD               	movlw	-3
 22207  017030  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22208  017036  0EFE               	movlw	-2
 22209  017038  0060  F033  FFE3   	movff	btemp+11,plusw1
 22210                           
 22211                           ;stkvar	_val @ sp[(-5)+-5]
 22212  01703E  0EF6               	movlw	-10
 22213  017040  50E3               	movf	plusw1,w,c
 22214  017042  E113               	bnz	l9266
 22215  017044  0EF7               	movlw	-9
 22216  017046  50E3               	movf	plusw1,w,c
 22217  017048  E110               	bnz	l9266
 22218  01704A  0EF8               	movlw	-8
 22219  01704C  50E3               	movf	plusw1,w,c
 22220  01704E  E10D               	bnz	l9266
 22221  017050  0EF9               	movlw	-7
 22222  017052  50E3               	movf	plusw1,w,c
 22223  017054  A4D8               	btfss	status,2,c
 22224  017056  D009               	goto	l9266
 22225  017058  0E00               	movlw	0
 22226  01705A  6E01               	movwf	btemp^0,c
 22227  01705C  0E00               	movlw	0
 22228  01705E  6E02               	movwf	(btemp+1)^0,c
 22229  017060  0E00               	movlw	0
 22230  017062  6E03               	movwf	(btemp+2)^0,c
 22231  017064  0E00               	movlw	0
 22232  017066  6E04               	movwf	(btemp+3)^0,c
 22233  017068  D0A2               	goto	l2963
 22234  01706A                     l9266:
 22235  01706A  0E96               	movlw	150
 22236  01706C  6E0C               	movwf	(btemp+11)^0,c
 22237                           
 22238                           ;stkvar	_exp @ sp[(-5)+4]
 22239  01706E  0EFF               	movlw	-1
 22240  017070  0060  F033  FFE3   	movff	btemp+11,plusw1
 22241  017076  D00B               	goto	l9270
 22242  017078                     l9268:
 22243                           
 22244                           ;stkvar	_exp @ sp[(-5)+4]
 22245  017078  0EFF               	movlw	-1
 22246  01707A  2AE3               	incf	plusw1,f,c
 22247                           
 22248                           ;stkvar	_arg @ sp[(-5)+0]
 22249  01707C  90D8               	bcf	status,0,c
 22250  01707E  0EFE               	movlw	-2
 22251  017080  32E3               	rrcf	plusw1,f,c
 22252  017082  0EFD               	movlw	-3
 22253  017084  32E3               	rrcf	plusw1,f,c
 22254  017086  0EFC               	movlw	-4
 22255  017088  32E3               	rrcf	plusw1,f,c
 22256  01708A  0EFB               	movlw	-5
 22257  01708C  32E3               	rrcf	plusw1,f,c
 22258  01708E                     l9270:
 22259                           
 22260                           ;stkvar	_arg @ sp[(-5)+0]
 22261  01708E  50E1               	movf	fsr1l,w,c
 22262  017090  0FFB               	addlw	-5
 22263  017092  6ED9               	movwf	fsr2l,c
 22264  017094  50E2               	movf	fsr1h,w,c
 22265  017096  6EDA               	movwf	fsr2h,c
 22266  017098  0EFF               	movlw	255
 22267  01709A  22DA               	addwfc	fsr2h,f,c
 22268  01709C  52DE               	movf	postinc2,f,c
 22269  01709E  52DE               	movf	postinc2,f,c
 22270  0170A0  52DE               	movf	postinc2,f,c
 22271  0170A2  0EFE               	movlw	254
 22272  0170A4  14DD               	andwf	postdec2,w,c
 22273  0170A6  B4D8               	btfsc	status,2,c
 22274  0170A8  D018               	goto	l9278
 22275  0170AA  D7E6               	goto	l9268
 22276  0170AC                     l9272:
 22277                           
 22278                           ;stkvar	_exp @ sp[(-5)+4]
 22279  0170AC  0EFF               	movlw	-1
 22280  0170AE  2AE3               	incf	plusw1,f,c
 22281                           
 22282                           ;stkvar	_arg @ sp[(-5)+0]
 22283  0170B0  50E1               	movf	fsr1l,w,c
 22284  0170B2  0FFB               	addlw	-5
 22285  0170B4  6ED9               	movwf	fsr2l,c
 22286  0170B6  50E2               	movf	fsr1h,w,c
 22287  0170B8  6EDA               	movwf	fsr2h,c
 22288  0170BA  0EFF               	movlw	255
 22289  0170BC  22DA               	addwfc	fsr2h,f,c
 22290  0170BE  2ADE               	incf	postinc2,f,c
 22291  0170C0  0E00               	movlw	0
 22292  0170C2  22DE               	addwfc	postinc2,f,c
 22293  0170C4  22DE               	addwfc	postinc2,f,c
 22294  0170C6  22DE               	addwfc	postinc2,f,c
 22295                           
 22296                           ;stkvar	_arg @ sp[(-5)+0]
 22297  0170C8  90D8               	bcf	status,0,c
 22298  0170CA  0EFE               	movlw	-2
 22299  0170CC  32E3               	rrcf	plusw1,f,c
 22300  0170CE  0EFD               	movlw	-3
 22301  0170D0  32E3               	rrcf	plusw1,f,c
 22302  0170D2  0EFC               	movlw	-4
 22303  0170D4  32E3               	rrcf	plusw1,f,c
 22304  0170D6  0EFB               	movlw	-5
 22305  0170D8  32E3               	rrcf	plusw1,f,c
 22306  0170DA                     l9278:
 22307                           
 22308                           ;stkvar	_arg @ sp[(-5)+0]
 22309  0170DA  50E1               	movf	fsr1l,w,c
 22310  0170DC  0FFB               	addlw	-5
 22311  0170DE  6ED9               	movwf	fsr2l,c
 22312  0170E0  50E2               	movf	fsr1h,w,c
 22313  0170E2  6EDA               	movwf	fsr2h,c
 22314  0170E4  0EFF               	movlw	255
 22315  0170E6  22DA               	addwfc	fsr2h,f,c
 22316  0170E8  52DE               	movf	postinc2,f,c
 22317  0170EA  52DE               	movf	postinc2,f,c
 22318  0170EC  52DE               	movf	postinc2,f,c
 22319  0170EE  0EFF               	movlw	255
 22320  0170F0  14DD               	andwf	postdec2,w,c
 22321  0170F2  B4D8               	btfsc	status,2,c
 22322  0170F4  D00C               	goto	l9282
 22323  0170F6  D7DA               	goto	l9272
 22324  0170F8                     l9280:
 22325                           
 22326                           ;stkvar	_exp @ sp[(-5)+4]
 22327  0170F8  0EFF               	movlw	-1
 22328  0170FA  06E3               	decf	plusw1,f,c
 22329                           
 22330                           ;stkvar	_arg @ sp[(-5)+0]
 22331  0170FC  90D8               	bcf	status,0,c
 22332  0170FE  0EFB               	movlw	-5
 22333  017100  36E3               	rlcf	plusw1,f,c
 22334  017102  0EFC               	movlw	-4
 22335  017104  36E3               	rlcf	plusw1,f,c
 22336  017106  0EFD               	movlw	-3
 22337  017108  36E3               	rlcf	plusw1,f,c
 22338  01710A  0EFE               	movlw	-2
 22339  01710C  36E3               	rlcf	plusw1,f,c
 22340  01710E                     l9282:
 22341                           
 22342                           ;stkvar	_arg @ sp[(-5)+0]
 22343  01710E  0EFD               	movlw	-3
 22344  017110  BEE3               	btfsc	plusw1,7,c
 22345  017112  D007               	goto	u8740
 22346                           
 22347                           ;stkvar	_exp @ sp[(-5)+4]
 22348  017114  0EFF               	movlw	-1
 22349  017116  006F FF8C  F001    	movff	plusw1,btemp
 22350  01711C  0E02               	movlw	2
 22351  01711E  6001               	cpfslt	btemp^0,c
 22352  017120  D7EB               	goto	l9280
 22353  017122                     u8740:
 22354                           
 22355                           ;stkvar	_exp @ sp[(-5)+4]
 22356  017122  0EFF               	movlw	-1
 22357  017124  B0E3               	btfsc	plusw1,0,c
 22358  017126  D002               	goto	l9290
 22359                           
 22360                           ;stkvar	_arg @ sp[(-5)+0]
 22361  017128  0EFD               	movlw	-3
 22362  01712A  9EE3               	bcf	plusw1,7,c
 22363  01712C                     l9290:
 22364                           
 22365                           ;stkvar	_exp @ sp[(-5)+4]
 22366  01712C  50E1               	movf	fsr1l,w,c
 22367  01712E  0FFF               	addlw	-1
 22368  017130  6ED9               	movwf	fsr2l,c
 22369  017132  50E2               	movf	fsr1h,w,c
 22370  017134  6EDA               	movwf	fsr2h,c
 22371  017136  0EFF               	movlw	255
 22372  017138  22DA               	addwfc	fsr2h,f,c
 22373  01713A  90D8               	bcf	status,0,c
 22374  01713C  32DF               	rrcf	indf2,f,c
 22375                           
 22376                           ;stkvar	_exp @ sp[(-5)+4]
 22377  01713E  0EFF               	movlw	-1
 22378  017140  006F FF8C  F00C    	movff	plusw1,btemp+11
 22379  017146  0060  F030  F005   	movff	btemp+11,btemp+4
 22380  01714C  6A06               	clrf	(btemp+5)^0,c
 22381  01714E  6A07               	clrf	(btemp+6)^0,c
 22382  017150  6A08               	clrf	(btemp+7)^0,c
 22383  017152  0060  F014  F008   	movff	btemp+4,btemp+7
 22384  017158  6A07               	clrf	(btemp+6)^0,c
 22385  01715A  6A06               	clrf	(btemp+5)^0,c
 22386  01715C  6A05               	clrf	(btemp+4)^0,c
 22387                           
 22388                           ;stkvar	_arg @ sp[(-5)+0]
 22389  01715E  50E1               	movf	fsr1l,w,c
 22390  017160  0FFB               	addlw	-5
 22391  017162  6ED9               	movwf	fsr2l,c
 22392  017164  50E2               	movf	fsr1h,w,c
 22393  017166  6EDA               	movwf	fsr2h,c
 22394  017168  0EFF               	movlw	255
 22395  01716A  22DA               	addwfc	fsr2h,f,c
 22396  01716C  5005               	movf	(btemp+4)^0,w,c
 22397  01716E  12DE               	iorwf	postinc2,f,c
 22398  017170  5006               	movf	(btemp+5)^0,w,c
 22399  017172  12DE               	iorwf	postinc2,f,c
 22400  017174  5007               	movf	(btemp+6)^0,w,c
 22401  017176  12DE               	iorwf	postinc2,f,c
 22402  017178  5008               	movf	(btemp+7)^0,w,c
 22403  01717A  12DE               	iorwf	postinc2,f,c
 22404                           
 22405                           ;stkvar	_sign @ sp[(-5)+-1]
 22406  01717C  0EFA               	movlw	-6
 22407  01717E  50E3               	movf	plusw1,w,c
 22408  017180  B4D8               	btfsc	status,2,c
 22409  017182  D005               	goto	l9300
 22410                           
 22411                           ;stkvar	_val @ sp[(-5)+-5]
 22412  017184  0EF9               	movlw	-7
 22413  017186  AEE3               	btfss	plusw1,7,c
 22414  017188  D002               	goto	l9300
 22415                           
 22416                           ;stkvar	_arg @ sp[(-5)+0]
 22417  01718A  0EFE               	movlw	-2
 22418  01718C  8EE3               	bsf	plusw1,7,c
 22419  01718E                     l9300:
 22420                           
 22421                           ;stkvar	_arg @ sp[(-5)+0]
 22422  01718E  0EFB               	movlw	-5
 22423  017190  006F FF8C  F001    	movff	plusw1,btemp
 22424  017196  0EFC               	movlw	-4
 22425  017198  006F FF8C  F002    	movff	plusw1,btemp+1
 22426  01719E  0EFD               	movlw	-3
 22427  0171A0  006F FF8C  F003    	movff	plusw1,btemp+2
 22428  0171A6  0EFE               	movlw	-2
 22429  0171A8  006F FF8C  F004    	movff	plusw1,btemp+3
 22430  0171AE                     l2963:
 22431                           
 22432                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 22433  0171AE  0EF6               	movlw	246
 22434  0171B0  26E1               	addwf	fsr1l,f,c
 22435  0171B2  0EFF               	movlw	255
 22436  0171B4  22E2               	addwfc	fsr1h,f,c
 22437  0171B6  0012               	return		;funcret
 22438  0171B8                     __end_of___xxtofl:
 22439                           	opt callstack 0
 22440                           
 22441 ;; *************** function ___fldiv *****************
 22442 ;; Defined at:
 22443 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 22444 ;; Parameters:    Size  Location     Type
 22445 ;;  b               4  [STACK] unsigned char 
 22446 ;;  a               4  [STACK] unsigned char 
 22447 ;; Auto vars:     Size  Location     Type
 22448 ;;  grs             4  [STACK] unsigned long 
 22449 ;;  rem             4  [STACK] unsigned long 
 22450 ;;  new_exp         2  [STACK] short 
 22451 ;;  aexp            1  [STACK] unsigned char 
 22452 ;;  bexp            1  [STACK] unsigned char 
 22453 ;;  sign            1  [STACK] unsigned char 
 22454 ;; Return value:  Size  Location     Type
 22455 ;;                  4  [STACK] unsigned char 
 22456 ;; Registers used:
 22457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 22458 ;; Tracked objects:
 22459 ;;		On entry : 0/1
 22460 ;;		On exit  : 0/0
 22461 ;;		Unchanged: 0/0
 22462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22467 ;;Total ram usage:        0 bytes
 22468 ;; Hardware stack levels used:    1
 22469 ;; Hardware stack levels required when called:   15
 22470 ;; This function calls:
 22471 ;;		Nothing
 22472 ;; This function is called by:
 22473 ;;		_conv_raw_result
 22474 ;;		_calc_bsoc
 22475 ;;		_init_bsoc
 22476 ;;		_efgtoa
 22477 ;; This function uses a reentrant model
 22478 ;;
 22479                           
 22480                           	psect	text95
 22481  0141F6                     __ptext95:
 22482                           	opt callstack 0
 22483  0141F6                     ___fldiv:
 22484                           	opt callstack 0
 22485                           
 22486                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22487  0141F6  0E0D               	movlw	13
 22488  0141F8  26E1               	addwf	fsr1l,f,c
 22489  0141FA  0E00               	movlw	0
 22490  0141FC  22E2               	addwfc	fsr1h,f,c
 22491                           
 22492                           ;stkvar	_b @ sp[(-13)+-4]
 22493                           
 22494                           ;incstack = 0
 22495 ;; hardware stack exceeded
 22496  0141FE  0EF2               	movlw	242
 22497  014200  24E1               	addwf	fsr1l,w,c
 22498  014202  6ED9               	movwf	fsr2l,c
 22499  014204  0EFF               	movlw	255
 22500  014206  20E2               	addwfc	fsr1h,w,c
 22501  014208  6EDA               	movwf	fsr2h,c
 22502  01420A  50DF               	movf	indf2,w,c
 22503  01420C  6E0C               	movwf	(btemp+11)^0,c
 22504  01420E  0E80               	movlw	128
 22505  014210  160C               	andwf	(btemp+11)^0,f,c
 22506                           
 22507                           ;stkvar	_sign @ sp[(-13)+12]
 22508  014212  0EFF               	movlw	-1
 22509  014214  0060  F033  FFE3   	movff	btemp+11,plusw1
 22510                           
 22511                           ;stkvar	_b @ sp[(-13)+-4]
 22512  01421A  0EF2               	movlw	242
 22513  01421C  24E1               	addwf	fsr1l,w,c
 22514  01421E  6ED9               	movwf	fsr2l,c
 22515  014220  0EFF               	movlw	255
 22516  014222  20E2               	addwfc	fsr1h,w,c
 22517  014224  6EDA               	movwf	fsr2h,c
 22518  014226  50DF               	movf	indf2,w,c
 22519  014228  6E0C               	movwf	(btemp+11)^0,c
 22520  01422A  90D8               	bcf	status,0,c
 22521  01422C  340C               	rlcf	(btemp+11)^0,w,c
 22522  01422E  6E0B               	movwf	(btemp+10)^0,c
 22523                           
 22524                           ;stkvar	_bexp @ sp[(-13)+11]
 22525  014230  0EFE               	movlw	-2
 22526  014232  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22527                           
 22528                           ;stkvar	_b @ sp[(-13)+-4]
 22529  014238  0EF1               	movlw	241
 22530  01423A  24E1               	addwf	fsr1l,w,c
 22531  01423C  6ED9               	movwf	fsr2l,c
 22532  01423E  0EFF               	movlw	255
 22533  014240  20E2               	addwfc	fsr1h,w,c
 22534  014242  6EDA               	movwf	fsr2h,c
 22535  014244  AEDF               	btfss	indf2,7,c
 22536  014246  D002               	goto	l7652
 22537                           
 22538                           ;stkvar	_bexp @ sp[(-13)+11]
 22539  014248  0EFE               	movlw	-2
 22540  01424A  80E3               	bsf	plusw1,0,c
 22541  01424C                     l7652:
 22542                           
 22543                           ;stkvar	_bexp @ sp[(-13)+11]
 22544  01424C  0EFE               	movlw	-2
 22545  01424E  50E3               	movf	plusw1,w,c
 22546  014250  B4D8               	btfsc	status,2,c
 22547  014252  D027               	goto	l7662
 22548                           
 22549                           ;stkvar	_bexp @ sp[(-13)+11]
 22550  014254  0EFE               	movlw	-2
 22551  014256  28E3               	incf	plusw1,w,c
 22552  014258  A4D8               	btfss	status,2,c
 22553  01425A  D018               	goto	l7658
 22554  01425C  0E00               	movlw	0
 22555  01425E  6E09               	movwf	(btemp+8)^0,c
 22556  014260  0E00               	movlw	0
 22557  014262  6E0A               	movwf	(btemp+9)^0,c
 22558  014264  0E00               	movlw	0
 22559  014266  6E0B               	movwf	(btemp+10)^0,c
 22560  014268  0E00               	movlw	0
 22561  01426A  6E0C               	movwf	(btemp+11)^0,c
 22562                           
 22563                           ;stkvar	_b @ sp[(-13)+-4]
 22564  01426C  0EEF               	movlw	-17
 22565  01426E  0060  F027  FFE3   	movff	btemp+8,plusw1
 22566  014274  0EF0               	movlw	-16
 22567  014276  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22568  01427C  0EF1               	movlw	-15
 22569  01427E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22570  014284  0EF2               	movlw	-14
 22571  014286  0060  F033  FFE3   	movff	btemp+11,plusw1
 22572  01428C                     l7658:
 22573                           
 22574                           ;stkvar	_b @ sp[(-13)+-4]
 22575  01428C  0EF1               	movlw	-15
 22576  01428E  8EE3               	bsf	plusw1,7,c
 22577                           
 22578                           ;stkvar	_b @ sp[(-13)+-4]
 22579  014290  0EF2               	movlw	242
 22580  014292  24E1               	addwf	fsr1l,w,c
 22581  014294  6ED9               	movwf	fsr2l,c
 22582  014296  0EFF               	movlw	255
 22583  014298  20E2               	addwfc	fsr1h,w,c
 22584  01429A  6EDA               	movwf	fsr2h,c
 22585  01429C  0E00               	movlw	0
 22586  01429E  6EDF               	movwf	indf2,c
 22587  0142A0  D018               	goto	l7664
 22588  0142A2                     l7662:
 22589  0142A2  0E00               	movlw	0
 22590  0142A4  6E09               	movwf	(btemp+8)^0,c
 22591  0142A6  0E00               	movlw	0
 22592  0142A8  6E0A               	movwf	(btemp+9)^0,c
 22593  0142AA  0E00               	movlw	0
 22594  0142AC  6E0B               	movwf	(btemp+10)^0,c
 22595  0142AE  0E00               	movlw	0
 22596  0142B0  6E0C               	movwf	(btemp+11)^0,c
 22597                           
 22598                           ;stkvar	_b @ sp[(-13)+-4]
 22599  0142B2  0EEF               	movlw	-17
 22600  0142B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 22601  0142BA  0EF0               	movlw	-16
 22602  0142BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22603  0142C2  0EF1               	movlw	-15
 22604  0142C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22605  0142CA  0EF2               	movlw	-14
 22606  0142CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22607  0142D2                     l7664:
 22608                           
 22609                           ;stkvar	_a @ sp[(-13)+-8]
 22610  0142D2  0EEE               	movlw	238
 22611  0142D4  24E1               	addwf	fsr1l,w,c
 22612  0142D6  6ED9               	movwf	fsr2l,c
 22613  0142D8  0EFF               	movlw	255
 22614  0142DA  20E2               	addwfc	fsr1h,w,c
 22615  0142DC  6EDA               	movwf	fsr2h,c
 22616  0142DE  50DF               	movf	indf2,w,c
 22617  0142E0  6E0C               	movwf	(btemp+11)^0,c
 22618  0142E2  0E80               	movlw	128
 22619  0142E4  160C               	andwf	(btemp+11)^0,f,c
 22620                           
 22621                           ;stkvar	_sign @ sp[(-13)+12]
 22622  0142E6  50E1               	movf	fsr1l,w,c
 22623  0142E8  0FFF               	addlw	-1
 22624  0142EA  6ED9               	movwf	fsr2l,c
 22625  0142EC  50E2               	movf	fsr1h,w,c
 22626  0142EE  6EDA               	movwf	fsr2h,c
 22627  0142F0  0EFF               	movlw	255
 22628  0142F2  22DA               	addwfc	fsr2h,f,c
 22629  0142F4  500C               	movf	(btemp+11)^0,w,c
 22630  0142F6  1ADF               	xorwf	indf2,f,c
 22631                           
 22632                           ;stkvar	_a @ sp[(-13)+-8]
 22633  0142F8  0EEE               	movlw	238
 22634  0142FA  24E1               	addwf	fsr1l,w,c
 22635  0142FC  6ED9               	movwf	fsr2l,c
 22636  0142FE  0EFF               	movlw	255
 22637  014300  20E2               	addwfc	fsr1h,w,c
 22638  014302  6EDA               	movwf	fsr2h,c
 22639  014304  50DF               	movf	indf2,w,c
 22640  014306  6E0C               	movwf	(btemp+11)^0,c
 22641  014308  90D8               	bcf	status,0,c
 22642  01430A  340C               	rlcf	(btemp+11)^0,w,c
 22643  01430C  6E0B               	movwf	(btemp+10)^0,c
 22644                           
 22645                           ;stkvar	_aexp @ sp[(-13)+10]
 22646  01430E  0EFD               	movlw	-3
 22647  014310  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22648                           
 22649                           ;stkvar	_a @ sp[(-13)+-8]
 22650  014316  0EED               	movlw	237
 22651  014318  24E1               	addwf	fsr1l,w,c
 22652  01431A  6ED9               	movwf	fsr2l,c
 22653  01431C  0EFF               	movlw	255
 22654  01431E  20E2               	addwfc	fsr1h,w,c
 22655  014320  6EDA               	movwf	fsr2h,c
 22656  014322  AEDF               	btfss	indf2,7,c
 22657  014324  D002               	goto	l7672
 22658                           
 22659                           ;stkvar	_aexp @ sp[(-13)+10]
 22660  014326  0EFD               	movlw	-3
 22661  014328  80E3               	bsf	plusw1,0,c
 22662  01432A                     l7672:
 22663                           
 22664                           ;stkvar	_aexp @ sp[(-13)+10]
 22665  01432A  0EFD               	movlw	-3
 22666  01432C  50E3               	movf	plusw1,w,c
 22667  01432E  B4D8               	btfsc	status,2,c
 22668  014330  D027               	goto	l7682
 22669                           
 22670                           ;stkvar	_aexp @ sp[(-13)+10]
 22671  014332  0EFD               	movlw	-3
 22672  014334  28E3               	incf	plusw1,w,c
 22673  014336  A4D8               	btfss	status,2,c
 22674  014338  D018               	goto	l7678
 22675  01433A  0E00               	movlw	0
 22676  01433C  6E09               	movwf	(btemp+8)^0,c
 22677  01433E  0E00               	movlw	0
 22678  014340  6E0A               	movwf	(btemp+9)^0,c
 22679  014342  0E00               	movlw	0
 22680  014344  6E0B               	movwf	(btemp+10)^0,c
 22681  014346  0E00               	movlw	0
 22682  014348  6E0C               	movwf	(btemp+11)^0,c
 22683                           
 22684                           ;stkvar	_a @ sp[(-13)+-8]
 22685  01434A  0EEB               	movlw	-21
 22686  01434C  0060  F027  FFE3   	movff	btemp+8,plusw1
 22687  014352  0EEC               	movlw	-20
 22688  014354  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22689  01435A  0EED               	movlw	-19
 22690  01435C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22691  014362  0EEE               	movlw	-18
 22692  014364  0060  F033  FFE3   	movff	btemp+11,plusw1
 22693  01436A                     l7678:
 22694                           
 22695                           ;stkvar	_a @ sp[(-13)+-8]
 22696  01436A  0EED               	movlw	-19
 22697  01436C  8EE3               	bsf	plusw1,7,c
 22698                           
 22699                           ;stkvar	_a @ sp[(-13)+-8]
 22700  01436E  0EEE               	movlw	238
 22701  014370  24E1               	addwf	fsr1l,w,c
 22702  014372  6ED9               	movwf	fsr2l,c
 22703  014374  0EFF               	movlw	255
 22704  014376  20E2               	addwfc	fsr1h,w,c
 22705  014378  6EDA               	movwf	fsr2h,c
 22706  01437A  0E00               	movlw	0
 22707  01437C  6EDF               	movwf	indf2,c
 22708  01437E  D018               	goto	l7684
 22709  014380                     l7682:
 22710  014380  0E00               	movlw	0
 22711  014382  6E09               	movwf	(btemp+8)^0,c
 22712  014384  0E00               	movlw	0
 22713  014386  6E0A               	movwf	(btemp+9)^0,c
 22714  014388  0E00               	movlw	0
 22715  01438A  6E0B               	movwf	(btemp+10)^0,c
 22716  01438C  0E00               	movlw	0
 22717  01438E  6E0C               	movwf	(btemp+11)^0,c
 22718                           
 22719                           ;stkvar	_a @ sp[(-13)+-8]
 22720  014390  0EEB               	movlw	-21
 22721  014392  0060  F027  FFE3   	movff	btemp+8,plusw1
 22722  014398  0EEC               	movlw	-20
 22723  01439A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22724  0143A0  0EED               	movlw	-19
 22725  0143A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22726  0143A8  0EEE               	movlw	-18
 22727  0143AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 22728  0143B0                     l7684:
 22729                           
 22730                           ;stkvar	_a @ sp[(-13)+-8]
 22731  0143B0  0EEB               	movlw	-21
 22732  0143B2  50E3               	movf	plusw1,w,c
 22733  0143B4  E139               	bnz	l7696
 22734  0143B6  0EEC               	movlw	-20
 22735  0143B8  50E3               	movf	plusw1,w,c
 22736  0143BA  E136               	bnz	l7696
 22737  0143BC  0EED               	movlw	-19
 22738  0143BE  50E3               	movf	plusw1,w,c
 22739  0143C0  E133               	bnz	l7696
 22740  0143C2  0EEE               	movlw	-18
 22741  0143C4  50E3               	movf	plusw1,w,c
 22742  0143C6  A4D8               	btfss	status,2,c
 22743  0143C8  D02F               	goto	l7696
 22744                           
 22745                           ;stkvar	_b @ sp[(-13)+-4]
 22746  0143CA  0EEF               	movlw	-17
 22747  0143CC  6AE3               	clrf	plusw1,c
 22748  0143CE  0EF0               	movlw	-16
 22749  0143D0  6AE3               	clrf	plusw1,c
 22750  0143D2  0EF1               	movlw	-15
 22751  0143D4  6AE3               	clrf	plusw1,c
 22752  0143D6  0EF2               	movlw	-14
 22753  0143D8  6AE3               	clrf	plusw1,c
 22754                           
 22755                           ;stkvar	_b @ sp[(-13)+-4]
 22756  0143DA  0EF1               	movlw	241
 22757  0143DC  24E1               	addwf	fsr1l,w,c
 22758  0143DE  6ED9               	movwf	fsr2l,c
 22759  0143E0  0EFF               	movlw	255
 22760  0143E2  20E2               	addwfc	fsr1h,w,c
 22761  0143E4  6EDA               	movwf	fsr2h,c
 22762  0143E6  0E80               	movlw	128
 22763  0143E8  12DE               	iorwf	postinc2,f,c
 22764  0143EA  0E7F               	movlw	127
 22765  0143EC  12DD               	iorwf	postdec2,f,c
 22766  0143EE                     l7690:
 22767                           
 22768                           ;stkvar	_sign @ sp[(-13)+12]
 22769  0143EE  0EFF               	movlw	-1
 22770  0143F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22771                           
 22772                           ;stkvar	_b @ sp[(-13)+-4]
 22773  0143F6  0EF2               	movlw	242
 22774  0143F8  24E1               	addwf	fsr1l,w,c
 22775  0143FA  6ED9               	movwf	fsr2l,c
 22776  0143FC  0EFF               	movlw	255
 22777  0143FE  20E2               	addwfc	fsr1h,w,c
 22778  014400  6EDA               	movwf	fsr2h,c
 22779  014402  500C               	movf	(btemp+11)^0,w,c
 22780  014404  12DF               	iorwf	indf2,f,c
 22781                           
 22782                           ;stkvar	_b @ sp[(-13)+-4]
 22783  014406  0EEF               	movlw	-17
 22784  014408  006F FF8C  F001    	movff	plusw1,btemp
 22785  01440E  0EF0               	movlw	-16
 22786  014410  006F FF8C  F002    	movff	plusw1,btemp+1
 22787  014416  0EF1               	movlw	-15
 22788  014418  006F FF8C  F003    	movff	plusw1,btemp+2
 22789  01441E  0EF2               	movlw	-14
 22790  014420  006F FF8C  F004    	movff	plusw1,btemp+3
 22791  014426  D19F               	goto	l2887
 22792  014428                     l7696:
 22793                           
 22794                           ;stkvar	_bexp @ sp[(-13)+11]
 22795  014428  0EFE               	movlw	-2
 22796  01442A  50E3               	movf	plusw1,w,c
 22797  01442C  A4D8               	btfss	status,2,c
 22798  01442E  D009               	goto	l7704
 22799  014430  0E00               	movlw	0
 22800  014432  6E01               	movwf	btemp^0,c
 22801  014434  0E00               	movlw	0
 22802  014436  6E02               	movwf	(btemp+1)^0,c
 22803  014438  0E00               	movlw	0
 22804  01443A  6E03               	movwf	(btemp+2)^0,c
 22805  01443C  0E00               	movlw	0
 22806  01443E  6E04               	movwf	(btemp+3)^0,c
 22807  014440  D192               	goto	l2887
 22808  014442                     l7704:
 22809                           
 22810                           ;stkvar	_bexp @ sp[(-13)+11]
 22811  014442  0EFE               	movlw	-2
 22812  014444  50E3               	movf	plusw1,w,c
 22813  014446  6E0B               	movwf	(btemp+10)^0,c
 22814  014448  6A0C               	clrf	(btemp+11)^0,c
 22815                           
 22816                           ;stkvar	_aexp @ sp[(-13)+10]
 22817  01444A  0EFD               	movlw	-3
 22818  01444C  50E3               	movf	plusw1,w,c
 22819  01444E  5E0B               	subwf	(btemp+10)^0,f,c
 22820  014450  0E00               	movlw	0
 22821  014452  5A0C               	subwfb	(btemp+11)^0,f,c
 22822  014454  0E7F               	movlw	127
 22823  014456  260B               	addwf	(btemp+10)^0,f,c
 22824  014458  0E00               	movlw	0
 22825  01445A  220C               	addwfc	(btemp+11)^0,f,c
 22826                           
 22827                           ;stkvar	_new_exp @ sp[(-13)+8]
 22828  01445C  0EFB               	movlw	-5
 22829  01445E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22830  014464  0EFC               	movlw	-4
 22831  014466  0060  F033  FFE3   	movff	btemp+11,plusw1
 22832                           
 22833                           ;stkvar	_b @ sp[(-13)+-4]
 22834  01446C  0EEF               	movlw	-17
 22835  01446E  006F FF8C  F009    	movff	plusw1,btemp+8
 22836  014474  0EF0               	movlw	-16
 22837  014476  006F FF8C  F00A    	movff	plusw1,btemp+9
 22838  01447C  0EF1               	movlw	-15
 22839  01447E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22840  014484  0EF2               	movlw	-14
 22841  014486  006F FF8C  F00C    	movff	plusw1,btemp+11
 22842                           
 22843                           ;stkvar	_rem @ sp[(-13)+4]
 22844  01448C  0EF7               	movlw	-9
 22845  01448E  0060  F027  FFE3   	movff	btemp+8,plusw1
 22846  014494  0EF8               	movlw	-8
 22847  014496  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22848  01449C  0EF9               	movlw	-7
 22849  01449E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22850  0144A4  0EFA               	movlw	-6
 22851  0144A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 22852                           
 22853                           ;stkvar	_b @ sp[(-13)+-4]
 22854  0144AC  0EEF               	movlw	-17
 22855  0144AE  6AE3               	clrf	plusw1,c
 22856  0144B0  0EF0               	movlw	-16
 22857  0144B2  6AE3               	clrf	plusw1,c
 22858  0144B4  0EF1               	movlw	-15
 22859  0144B6  6AE3               	clrf	plusw1,c
 22860  0144B8  0EF2               	movlw	-14
 22861  0144BA  6AE3               	clrf	plusw1,c
 22862                           
 22863                           ;stkvar	_grs @ sp[(-13)+0]
 22864  0144BC  0EF3               	movlw	-13
 22865  0144BE  6AE3               	clrf	plusw1,c
 22866  0144C0  0EF4               	movlw	-12
 22867  0144C2  6AE3               	clrf	plusw1,c
 22868  0144C4  0EF5               	movlw	-11
 22869  0144C6  6AE3               	clrf	plusw1,c
 22870  0144C8  0EF6               	movlw	-10
 22871  0144CA  6AE3               	clrf	plusw1,c
 22872                           
 22873                           ;stkvar	_aexp @ sp[(-13)+10]
 22874  0144CC  0EFD               	movlw	-3
 22875  0144CE  6AE3               	clrf	plusw1,c
 22876  0144D0  D050               	goto	l7732
 22877  0144D2                     l7714:
 22878                           
 22879                           ;stkvar	_aexp @ sp[(-13)+10]
 22880  0144D2  0EFD               	movlw	-3
 22881  0144D4  50E3               	movf	plusw1,w,c
 22882  0144D6  B4D8               	btfsc	status,2,c
 22883  0144D8  D020               	goto	l7724
 22884                           
 22885                           ;stkvar	_rem @ sp[(-13)+4]
 22886  0144DA  90D8               	bcf	status,0,c
 22887  0144DC  0EF7               	movlw	-9
 22888  0144DE  36E3               	rlcf	plusw1,f,c
 22889  0144E0  0EF8               	movlw	-8
 22890  0144E2  36E3               	rlcf	plusw1,f,c
 22891  0144E4  0EF9               	movlw	-7
 22892  0144E6  36E3               	rlcf	plusw1,f,c
 22893  0144E8  0EFA               	movlw	-6
 22894  0144EA  36E3               	rlcf	plusw1,f,c
 22895                           
 22896                           ;stkvar	_b @ sp[(-13)+-4]
 22897  0144EC  90D8               	bcf	status,0,c
 22898  0144EE  0EEF               	movlw	-17
 22899  0144F0  36E3               	rlcf	plusw1,f,c
 22900  0144F2  0EF0               	movlw	-16
 22901  0144F4  36E3               	rlcf	plusw1,f,c
 22902  0144F6  0EF1               	movlw	-15
 22903  0144F8  36E3               	rlcf	plusw1,f,c
 22904  0144FA  0EF2               	movlw	-14
 22905  0144FC  36E3               	rlcf	plusw1,f,c
 22906                           
 22907                           ;stkvar	_grs @ sp[(-13)+0]
 22908  0144FE  0EF6               	movlw	-10
 22909  014500  AEE3               	btfss	plusw1,7,c
 22910  014502  D002               	goto	l7722
 22911                           
 22912                           ;stkvar	_b @ sp[(-13)+-4]
 22913  014504  0EEF               	movlw	-17
 22914  014506  80E3               	bsf	plusw1,0,c
 22915  014508                     l7722:
 22916                           
 22917                           ;stkvar	_grs @ sp[(-13)+0]
 22918  014508  90D8               	bcf	status,0,c
 22919  01450A  0EF3               	movlw	-13
 22920  01450C  36E3               	rlcf	plusw1,f,c
 22921  01450E  0EF4               	movlw	-12
 22922  014510  36E3               	rlcf	plusw1,f,c
 22923  014512  0EF5               	movlw	-11
 22924  014514  36E3               	rlcf	plusw1,f,c
 22925  014516  0EF6               	movlw	-10
 22926  014518  36E3               	rlcf	plusw1,f,c
 22927  01451A                     l7724:
 22928                           
 22929                           ;stkvar	_a @ sp[(-13)+-8]
 22930                           ;stkvar	_rem @ sp[(-13)+4]
 22931  01451A  50E1               	movf	fsr1l,w,c
 22932  01451C  0FF7               	addlw	-9
 22933  01451E  6ED9               	movwf	fsr2l,c
 22934  014520  50E2               	movf	fsr1h,w,c
 22935  014522  6EDA               	movwf	fsr2h,c
 22936  014524  0EFF               	movlw	255
 22937  014526  22DA               	addwfc	fsr2h,f,c
 22938  014528  0EEB               	movlw	-21
 22939  01452A  50E3               	movf	plusw1,w,c
 22940  01452C  5CDE               	subwf	postinc2,w,c
 22941  01452E  0EEC               	movlw	-20
 22942  014530  50E3               	movf	plusw1,w,c
 22943  014532  58DE               	subwfb	postinc2,w,c
 22944  014534  0EED               	movlw	-19
 22945  014536  50E3               	movf	plusw1,w,c
 22946  014538  58DE               	subwfb	postinc2,w,c
 22947  01453A  0EEE               	movlw	-18
 22948  01453C  50E3               	movf	plusw1,w,c
 22949  01453E  58DE               	subwfb	postinc2,w,c
 22950  014540  A0D8               	btfss	status,0,c
 22951  014542  D015               	goto	l7730
 22952                           
 22953                           ;stkvar	_grs @ sp[(-13)+0]
 22954  014544  0EF6               	movlw	-10
 22955  014546  8CE3               	bsf	plusw1,6,c
 22956                           
 22957                           ;stkvar	_a @ sp[(-13)+-8]
 22958                           ;stkvar	_rem @ sp[(-13)+4]
 22959  014548  50E1               	movf	fsr1l,w,c
 22960  01454A  0FF7               	addlw	-9
 22961  01454C  6ED9               	movwf	fsr2l,c
 22962  01454E  50E2               	movf	fsr1h,w,c
 22963  014550  6EDA               	movwf	fsr2h,c
 22964  014552  0EFF               	movlw	255
 22965  014554  22DA               	addwfc	fsr2h,f,c
 22966  014556  0EEB               	movlw	-21
 22967  014558  50E3               	movf	plusw1,w,c
 22968  01455A  5EDE               	subwf	postinc2,f,c
 22969  01455C  0EEC               	movlw	-20
 22970  01455E  50E3               	movf	plusw1,w,c
 22971  014560  5ADE               	subwfb	postinc2,f,c
 22972  014562  0EED               	movlw	-19
 22973  014564  50E3               	movf	plusw1,w,c
 22974  014566  5ADE               	subwfb	postinc2,f,c
 22975  014568  0EEE               	movlw	-18
 22976  01456A  50E3               	movf	plusw1,w,c
 22977  01456C  5ADE               	subwfb	postinc2,f,c
 22978  01456E                     l7730:
 22979                           
 22980                           ;stkvar	_aexp @ sp[(-13)+10]
 22981  01456E  0EFD               	movlw	-3
 22982  014570  2AE3               	incf	plusw1,f,c
 22983  014572                     l7732:
 22984                           
 22985                           ;stkvar	_aexp @ sp[(-13)+10]
 22986  014572  0EFD               	movlw	-3
 22987  014574  006F FF8C  F001    	movff	plusw1,btemp
 22988  01457A  0E19               	movlw	25
 22989  01457C  6401               	cpfsgt	btemp^0,c
 22990  01457E  D7A9               	goto	l7714
 22991                           
 22992                           ;stkvar	_rem @ sp[(-13)+4]
 22993  014580  0EF7               	movlw	-9
 22994  014582  50E3               	movf	plusw1,w,c
 22995  014584  E10A               	bnz	u6210
 22996  014586  0EF8               	movlw	-8
 22997  014588  50E3               	movf	plusw1,w,c
 22998  01458A  E107               	bnz	u6210
 22999  01458C  0EF9               	movlw	-7
 23000  01458E  50E3               	movf	plusw1,w,c
 23001  014590  E104               	bnz	u6210
 23002  014592  0EFA               	movlw	-6
 23003  014594  50E3               	movf	plusw1,w,c
 23004  014596  B4D8               	btfsc	status,2,c
 23005  014598  D024               	goto	l7748
 23006  01459A                     u6210:
 23007                           
 23008                           ;stkvar	_grs @ sp[(-13)+0]
 23009  01459A  0EF3               	movlw	-13
 23010  01459C  80E3               	bsf	plusw1,0,c
 23011  01459E  D021               	goto	l7748
 23012  0145A0                     l7738:
 23013                           
 23014                           ;stkvar	_b @ sp[(-13)+-4]
 23015  0145A0  90D8               	bcf	status,0,c
 23016  0145A2  0EEF               	movlw	-17
 23017  0145A4  36E3               	rlcf	plusw1,f,c
 23018  0145A6  0EF0               	movlw	-16
 23019  0145A8  36E3               	rlcf	plusw1,f,c
 23020  0145AA  0EF1               	movlw	-15
 23021  0145AC  36E3               	rlcf	plusw1,f,c
 23022  0145AE  0EF2               	movlw	-14
 23023  0145B0  36E3               	rlcf	plusw1,f,c
 23024                           
 23025                           ;stkvar	_grs @ sp[(-13)+0]
 23026  0145B2  0EF6               	movlw	-10
 23027  0145B4  AEE3               	btfss	plusw1,7,c
 23028  0145B6  D002               	goto	l7744
 23029                           
 23030                           ;stkvar	_b @ sp[(-13)+-4]
 23031  0145B8  0EEF               	movlw	-17
 23032  0145BA  80E3               	bsf	plusw1,0,c
 23033  0145BC                     l7744:
 23034                           
 23035                           ;stkvar	_grs @ sp[(-13)+0]
 23036  0145BC  90D8               	bcf	status,0,c
 23037  0145BE  0EF3               	movlw	-13
 23038  0145C0  36E3               	rlcf	plusw1,f,c
 23039  0145C2  0EF4               	movlw	-12
 23040  0145C4  36E3               	rlcf	plusw1,f,c
 23041  0145C6  0EF5               	movlw	-11
 23042  0145C8  36E3               	rlcf	plusw1,f,c
 23043  0145CA  0EF6               	movlw	-10
 23044  0145CC  36E3               	rlcf	plusw1,f,c
 23045                           
 23046                           ;stkvar	_new_exp @ sp[(-13)+8]
 23047  0145CE  50E1               	movf	fsr1l,w,c
 23048  0145D0  0FFB               	addlw	-5
 23049  0145D2  6ED9               	movwf	fsr2l,c
 23050  0145D4  50E2               	movf	fsr1h,w,c
 23051  0145D6  6EDA               	movwf	fsr2h,c
 23052  0145D8  0EFF               	movlw	255
 23053  0145DA  22DA               	addwfc	fsr2h,f,c
 23054  0145DC  06DE               	decf	postinc2,f,c
 23055  0145DE  0E00               	movlw	0
 23056  0145E0  5ADD               	subwfb	postdec2,f,c
 23057  0145E2                     l7748:
 23058                           
 23059                           ;stkvar	_b @ sp[(-13)+-4]
 23060  0145E2  0EF1               	movlw	-15
 23061  0145E4  AEE3               	btfss	plusw1,7,c
 23062  0145E6  D7DC               	goto	l7738
 23063                           
 23064                           ;stkvar	_aexp @ sp[(-13)+10]
 23065  0145E8  0EFD               	movlw	-3
 23066  0145EA  6AE3               	clrf	plusw1,c
 23067                           
 23068                           ;stkvar	_grs @ sp[(-13)+0]
 23069  0145EC  0EF6               	movlw	-10
 23070  0145EE  AEE3               	btfss	plusw1,7,c
 23071  0145F0  D020               	goto	l7762
 23072                           
 23073                           ;stkvar	_grs @ sp[(-13)+0]
 23074  0145F2  50E1               	movf	fsr1l,w,c
 23075  0145F4  0FF3               	addlw	-13
 23076  0145F6  6ED9               	movwf	fsr2l,c
 23077  0145F8  50E2               	movf	fsr1h,w,c
 23078  0145FA  6EDA               	movwf	fsr2h,c
 23079  0145FC  0EFF               	movlw	255
 23080  0145FE  22DA               	addwfc	fsr2h,f,c
 23081  014600  0EFF               	movlw	255
 23082  014602  14DE               	andwf	postinc2,w,c
 23083  014604  6E09               	movwf	(btemp+8)^0,c
 23084  014606  0EFF               	movlw	255
 23085  014608  14DE               	andwf	postinc2,w,c
 23086  01460A  6E0A               	movwf	(btemp+9)^0,c
 23087  01460C  0EFF               	movlw	255
 23088  01460E  14DE               	andwf	postinc2,w,c
 23089  014610  6E0B               	movwf	(btemp+10)^0,c
 23090  014612  0E7F               	movlw	127
 23091  014614  14DE               	andwf	postinc2,w,c
 23092  014616  6E0C               	movwf	(btemp+11)^0,c
 23093  014618  5009               	movf	(btemp+8)^0,w,c
 23094  01461A  100A               	iorwf	(btemp+9)^0,w,c
 23095  01461C  100B               	iorwf	(btemp+10)^0,w,c
 23096  01461E  100C               	iorwf	(btemp+11)^0,w,c
 23097  014620  B4D8               	btfsc	status,2,c
 23098  014622  D004               	goto	l7758
 23099  014624                     u6250:
 23100                           
 23101                           ;stkvar	_aexp @ sp[(-13)+10]
 23102  014624  0EFD               	movlw	-3
 23103  014626  6AE3               	clrf	plusw1,c
 23104  014628  2AE3               	incf	plusw1,f,c
 23105  01462A  D003               	goto	l7762
 23106  01462C                     l7758:
 23107                           
 23108                           ;stkvar	_b @ sp[(-13)+-4]
 23109  01462C  0EEF               	movlw	-17
 23110  01462E  B0E3               	btfsc	plusw1,0,c
 23111  014630  D7F9               	goto	u6250
 23112  014632                     l7762:
 23113                           
 23114                           ;stkvar	_aexp @ sp[(-13)+10]
 23115  014632  0EFD               	movlw	-3
 23116  014634  50E3               	movf	plusw1,w,c
 23117  014636  B4D8               	btfsc	status,2,c
 23118  014638  D036               	goto	l7772
 23119                           
 23120                           ;stkvar	_b @ sp[(-13)+-4]
 23121  01463A  50E1               	movf	fsr1l,w,c
 23122  01463C  0FEF               	addlw	-17
 23123  01463E  6ED9               	movwf	fsr2l,c
 23124  014640  50E2               	movf	fsr1h,w,c
 23125  014642  6EDA               	movwf	fsr2h,c
 23126  014644  0EFF               	movlw	255
 23127  014646  22DA               	addwfc	fsr2h,f,c
 23128  014648  2ADE               	incf	postinc2,f,c
 23129  01464A  0E00               	movlw	0
 23130  01464C  22DE               	addwfc	postinc2,f,c
 23131  01464E  22DE               	addwfc	postinc2,f,c
 23132  014650  22DE               	addwfc	postinc2,f,c
 23133                           
 23134                           ;stkvar	_b @ sp[(-13)+-4]
 23135  014652  0EF2               	movlw	-14
 23136  014654  A0E3               	btfss	plusw1,0,c
 23137  014656  D027               	goto	l7772
 23138  014658  0E01               	movlw	1
 23139  01465A  6E0C               	movwf	(btemp+11)^0,c
 23140                           
 23141                           ;stkvar	_b @ sp[(-13)+-4]
 23142  01465C  50E1               	movf	fsr1l,w,c
 23143  01465E  0FEF               	addlw	-17
 23144  014660  6ED9               	movwf	fsr2l,c
 23145  014662  50E2               	movf	fsr1h,w,c
 23146  014664  6EDA               	movwf	fsr2h,c
 23147  014666  0EFF               	movlw	255
 23148  014668  22DA               	addwfc	fsr2h,f,c
 23149  01466A  280C               	incf	(btemp+11)^0,w,c
 23150  01466C  52DE               	movf	postinc2,f,c
 23151  01466E  D008               	goto	u6290
 23152  014670                     u6295:
 23153  014670  52DE               	movf	postinc2,f,c
 23154  014672  90D8               	bcf	status,0,c
 23155  014674  BEDC               	btfsc	preinc2,7,c
 23156  014676  80D8               	bsf	status,0,c
 23157  014678  32DD               	rrcf	postdec2,f,c
 23158  01467A  32DD               	rrcf	postdec2,f,c
 23159  01467C  32DD               	rrcf	postdec2,f,c
 23160  01467E  32DE               	rrcf	postinc2,f,c
 23161  014680                     u6290:
 23162  014680  2EE8               	decfsz	wreg,f,c
 23163  014682  D7F6               	goto	u6295
 23164                           
 23165                           ;stkvar	_new_exp @ sp[(-13)+8]
 23166  014684  0EFB               	movlw	-5
 23167  014686  50E3               	movf	plusw1,w,c
 23168  014688  0F01               	addlw	1
 23169  01468A  6E01               	movwf	btemp^0,c
 23170  01468C  0EFB               	movlw	-5
 23171  01468E  0060  F007  FFE3   	movff	btemp,plusw1
 23172  014694  6A01               	clrf	btemp^0,c
 23173  014696  0EFC               	movlw	-4
 23174  014698  50E3               	movf	plusw1,w,c
 23175  01469A  2001               	addwfc	btemp^0,w,c
 23176  01469C  6E01               	movwf	btemp^0,c
 23177  01469E  0EFC               	movlw	-4
 23178  0146A0  0060  F007  FFE3   	movff	btemp,plusw1
 23179  0146A6                     l7772:
 23180                           
 23181                           ;stkvar	_new_exp @ sp[(-13)+8]
 23182  0146A6  0EFC               	movlw	-4
 23183  0146A8  BEE3               	btfsc	plusw1,7,c
 23184  0146AA  D01B               	goto	l7778
 23185  0146AC  0EFC               	movlw	-4
 23186  0146AE  50E3               	movf	plusw1,w,c
 23187  0146B0  E104               	bnz	u6300
 23188  0146B2  0EFB               	movlw	-5
 23189  0146B4  28E3               	incf	plusw1,w,c
 23190  0146B6  A0D8               	btfss	status,0,c
 23191  0146B8  D014               	goto	l7778
 23192  0146BA                     u6300:
 23193  0146BA  0EFF               	movlw	255
 23194  0146BC  6E0B               	movwf	(btemp+10)^0,c
 23195  0146BE  0E00               	movlw	0
 23196  0146C0  6E0C               	movwf	(btemp+11)^0,c
 23197                           
 23198                           ;stkvar	_new_exp @ sp[(-13)+8]
 23199  0146C2  0EFB               	movlw	-5
 23200  0146C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23201  0146CA  0EFC               	movlw	-4
 23202  0146CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23203                           
 23204                           ;stkvar	_b @ sp[(-13)+-4]
 23205  0146D2  0EEF               	movlw	-17
 23206  0146D4  6AE3               	clrf	plusw1,c
 23207  0146D6  0EF0               	movlw	-16
 23208  0146D8  6AE3               	clrf	plusw1,c
 23209  0146DA  0EF1               	movlw	-15
 23210  0146DC  6AE3               	clrf	plusw1,c
 23211  0146DE  0EF2               	movlw	-14
 23212  0146E0  6AE3               	clrf	plusw1,c
 23213  0146E2                     l7778:
 23214                           
 23215                           ;stkvar	_new_exp @ sp[(-13)+8]
 23216  0146E2  0EFC               	movlw	-4
 23217  0146E4  BEE3               	btfsc	plusw1,7,c
 23218  0146E6  D007               	goto	u6310
 23219  0146E8  0EFC               	movlw	-4
 23220  0146EA  50E3               	movf	plusw1,w,c
 23221  0146EC  E112               	bnz	l7784
 23222  0146EE  0EFB               	movlw	-5
 23223  0146F0  04E3               	decf	plusw1,w,c
 23224  0146F2  B0D8               	btfsc	status,0,c
 23225  0146F4  D00E               	goto	l7784
 23226  0146F6                     u6310:
 23227                           
 23228                           ;stkvar	_new_exp @ sp[(-13)+8]
 23229  0146F6  0EFB               	movlw	-5
 23230  0146F8  6AE3               	clrf	plusw1,c
 23231  0146FA  0EFC               	movlw	-4
 23232  0146FC  6AE3               	clrf	plusw1,c
 23233                           
 23234                           ;stkvar	_b @ sp[(-13)+-4]
 23235  0146FE  0EEF               	movlw	-17
 23236  014700  6AE3               	clrf	plusw1,c
 23237  014702  0EF0               	movlw	-16
 23238  014704  6AE3               	clrf	plusw1,c
 23239  014706  0EF1               	movlw	-15
 23240  014708  6AE3               	clrf	plusw1,c
 23241  01470A  0EF2               	movlw	-14
 23242  01470C  6AE3               	clrf	plusw1,c
 23243                           
 23244                           ;stkvar	_sign @ sp[(-13)+12]
 23245  01470E  0EFF               	movlw	-1
 23246  014710  6AE3               	clrf	plusw1,c
 23247  014712                     l7784:
 23248                           
 23249                           ;stkvar	_new_exp @ sp[(-13)+8]
 23250                           ;stkvar	_bexp @ sp[(-13)+11]
 23251  014712  0EFB               	movlw	-5
 23252  014714  006F FF8C  F001    	movff	plusw1,btemp
 23253  01471A  0EFE               	movlw	-2
 23254  01471C  0060  F007  FFE3   	movff	btemp,plusw1
 23255                           
 23256                           ;stkvar	_bexp @ sp[(-13)+11]
 23257  014722  0EFE               	movlw	-2
 23258  014724  A0E3               	btfss	plusw1,0,c
 23259  014726  D009               	goto	l7790
 23260                           
 23261                           ;stkvar	_b @ sp[(-13)+-4]
 23262  014728  0EF1               	movlw	241
 23263  01472A  24E1               	addwf	fsr1l,w,c
 23264  01472C  6ED9               	movwf	fsr2l,c
 23265  01472E  0EFF               	movlw	255
 23266  014730  20E2               	addwfc	fsr1h,w,c
 23267  014732  6EDA               	movwf	fsr2h,c
 23268  014734  0E00               	movlw	0
 23269  014736  8EDB               	bsf	plusw2,7,c
 23270  014738  D008               	goto	l7792
 23271  01473A                     l7790:
 23272                           
 23273                           ;stkvar	_b @ sp[(-13)+-4]
 23274  01473A  0EF1               	movlw	241
 23275  01473C  24E1               	addwf	fsr1l,w,c
 23276  01473E  6ED9               	movwf	fsr2l,c
 23277  014740  0EFF               	movlw	255
 23278  014742  20E2               	addwfc	fsr1h,w,c
 23279  014744  6EDA               	movwf	fsr2h,c
 23280  014746  0E7F               	movlw	127
 23281  014748  16DF               	andwf	indf2,f,c
 23282  01474A                     l7792:
 23283                           
 23284                           ;stkvar	_b @ sp[(-13)+-4]
 23285  01474A  0EF2               	movlw	242
 23286  01474C  24E1               	addwf	fsr1l,w,c
 23287  01474E  6ED9               	movwf	fsr2l,c
 23288  014750  0EFF               	movlw	255
 23289  014752  20E2               	addwfc	fsr1h,w,c
 23290  014754  6EDA               	movwf	fsr2h,c
 23291                           
 23292                           ;stkvar	_bexp @ sp[(-13)+11]
 23293  014756  0EFE               	movlw	-2
 23294  014758  006F FF8C  F00C    	movff	plusw1,btemp+11
 23295  01475E  90D8               	bcf	status,0,c
 23296  014760  300C               	rrcf	(btemp+11)^0,w,c
 23297  014762  6EDF               	movwf	indf2,c
 23298  014764  D644               	goto	l7690
 23299  014766                     l2887:
 23300                           
 23301                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23302  014766  0EEB               	movlw	235
 23303  014768  26E1               	addwf	fsr1l,f,c
 23304  01476A  0EFF               	movlw	255
 23305  01476C  22E2               	addwfc	fsr1h,f,c
 23306  01476E  0012               	return		;funcret
 23307  014770                     __end_of___fldiv:
 23308                           	opt callstack 0
 23309                           
 23310 ;; *************** function ___flge *****************
 23311 ;; Defined at:
 23312 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 23313 ;; Parameters:    Size  Location     Type
 23314 ;;  ff1             4  [STACK] unsigned char 
 23315 ;;  ff2             4  [STACK] unsigned char 
 23316 ;; Auto vars:     Size  Location     Type
 23317 ;;		None
 23318 ;; Return value:  Size  Location     Type
 23319 ;;		None               void
 23320 ;; Registers used:
 23321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23322 ;; Tracked objects:
 23323 ;;		On entry : 0/0
 23324 ;;		On exit  : 0/0
 23325 ;;		Unchanged: 0/0
 23326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23331 ;;Total ram usage:        0 bytes
 23332 ;; Hardware stack levels used:    1
 23333 ;; Hardware stack levels required when called:   15
 23334 ;; This function calls:
 23335 ;;		Nothing
 23336 ;; This function is called by:
 23337 ;;		_main
 23338 ;;		_calc_ror_data
 23339 ;;		_calc_bsoc
 23340 ;;		_efgtoa
 23341 ;; This function uses a reentrant model
 23342 ;;
 23343                           
 23344                           	psect	text96
 23345  017CE0                     __ptext96:
 23346                           	opt callstack 0
 23347  017CE0                     ___flge:
 23348                           	opt callstack 0
 23349                           
 23350                           ;stkvar	_ff1 @ sp[(0)+-4]
 23351                           
 23352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23353                           ;incstack = 0
 23354 ;; hardware stack exceeded
 23355  017CE0  50E1               	movf	fsr1l,w,c
 23356  017CE2  0FFC               	addlw	-4
 23357  017CE4  6ED9               	movwf	fsr2l,c
 23358  017CE6  50E2               	movf	fsr1h,w,c
 23359  017CE8  6EDA               	movwf	fsr2h,c
 23360  017CEA  0EFF               	movlw	255
 23361  017CEC  22DA               	addwfc	fsr2h,f,c
 23362  017CEE  0E00               	movlw	0
 23363  017CF0  14DE               	andwf	postinc2,w,c
 23364  017CF2  6E09               	movwf	(btemp+8)^0,c
 23365  017CF4  0E00               	movlw	0
 23366  017CF6  14DE               	andwf	postinc2,w,c
 23367  017CF8  6E0A               	movwf	(btemp+9)^0,c
 23368  017CFA  0E80               	movlw	128
 23369  017CFC  14DE               	andwf	postinc2,w,c
 23370  017CFE  6E0B               	movwf	(btemp+10)^0,c
 23371  017D00  0E7F               	movlw	127
 23372  017D02  14DE               	andwf	postinc2,w,c
 23373  017D04  6E0C               	movwf	(btemp+11)^0,c
 23374  017D06  5009               	movf	(btemp+8)^0,w,c
 23375  017D08  100A               	iorwf	(btemp+9)^0,w,c
 23376  017D0A  100B               	iorwf	(btemp+10)^0,w,c
 23377  017D0C  100C               	iorwf	(btemp+11)^0,w,c
 23378  017D0E  A4D8               	btfss	status,2,c
 23379  017D10  D008               	goto	l8066
 23380                           
 23381                           ;stkvar	_ff1 @ sp[(0)+-4]
 23382  017D12  0EFC               	movlw	-4
 23383  017D14  6AE3               	clrf	plusw1,c
 23384  017D16  0EFD               	movlw	-3
 23385  017D18  6AE3               	clrf	plusw1,c
 23386  017D1A  0EFE               	movlw	-2
 23387  017D1C  6AE3               	clrf	plusw1,c
 23388  017D1E  0EFF               	movlw	-1
 23389  017D20  6AE3               	clrf	plusw1,c
 23390  017D22                     l8066:
 23391                           
 23392                           ;stkvar	_ff2 @ sp[(0)+-8]
 23393  017D22  50E1               	movf	fsr1l,w,c
 23394  017D24  0FF8               	addlw	-8
 23395  017D26  6ED9               	movwf	fsr2l,c
 23396  017D28  50E2               	movf	fsr1h,w,c
 23397  017D2A  6EDA               	movwf	fsr2h,c
 23398  017D2C  0EFF               	movlw	255
 23399  017D2E  22DA               	addwfc	fsr2h,f,c
 23400  017D30  0E00               	movlw	0
 23401  017D32  14DE               	andwf	postinc2,w,c
 23402  017D34  6E09               	movwf	(btemp+8)^0,c
 23403  017D36  0E00               	movlw	0
 23404  017D38  14DE               	andwf	postinc2,w,c
 23405  017D3A  6E0A               	movwf	(btemp+9)^0,c
 23406  017D3C  0E80               	movlw	128
 23407  017D3E  14DE               	andwf	postinc2,w,c
 23408  017D40  6E0B               	movwf	(btemp+10)^0,c
 23409  017D42  0E7F               	movlw	127
 23410  017D44  14DE               	andwf	postinc2,w,c
 23411  017D46  6E0C               	movwf	(btemp+11)^0,c
 23412  017D48  5009               	movf	(btemp+8)^0,w,c
 23413  017D4A  100A               	iorwf	(btemp+9)^0,w,c
 23414  017D4C  100B               	iorwf	(btemp+10)^0,w,c
 23415  017D4E  100C               	iorwf	(btemp+11)^0,w,c
 23416  017D50  A4D8               	btfss	status,2,c
 23417  017D52  D008               	goto	l2568
 23418                           
 23419                           ;stkvar	_ff2 @ sp[(0)+-8]
 23420  017D54  0EF8               	movlw	-8
 23421  017D56  6AE3               	clrf	plusw1,c
 23422  017D58  0EF9               	movlw	-7
 23423  017D5A  6AE3               	clrf	plusw1,c
 23424  017D5C  0EFA               	movlw	-6
 23425  017D5E  6AE3               	clrf	plusw1,c
 23426  017D60  0EFB               	movlw	-5
 23427  017D62  6AE3               	clrf	plusw1,c
 23428  017D64                     l2568:
 23429                           
 23430                           ;stkvar	_ff1 @ sp[(0)+-4]
 23431  017D64  0EFF               	movlw	-1
 23432  017D66  AEE3               	btfss	plusw1,7,c
 23433  017D68  D024               	goto	l8072
 23434                           
 23435                           ;stkvar	_ff1 @ sp[(0)+-4]
 23436  017D6A  0E00               	movlw	0
 23437  017D6C  6E09               	movwf	(btemp+8)^0,c
 23438  017D6E  0E00               	movlw	0
 23439  017D70  6E0A               	movwf	(btemp+9)^0,c
 23440  017D72  0E00               	movlw	0
 23441  017D74  6E0B               	movwf	(btemp+10)^0,c
 23442  017D76  0E80               	movlw	128
 23443  017D78  6E0C               	movwf	(btemp+11)^0,c
 23444  017D7A  0EFC               	movlw	-4
 23445  017D7C  50E3               	movf	plusw1,w,c
 23446  017D7E  5E09               	subwf	(btemp+8)^0,f,c
 23447  017D80  0EFD               	movlw	-3
 23448  017D82  50E3               	movf	plusw1,w,c
 23449  017D84  5A0A               	subwfb	(btemp+9)^0,f,c
 23450  017D86  0EFE               	movlw	-2
 23451  017D88  50E3               	movf	plusw1,w,c
 23452  017D8A  5A0B               	subwfb	(btemp+10)^0,f,c
 23453  017D8C  0EFF               	movlw	-1
 23454  017D8E  50E3               	movf	plusw1,w,c
 23455  017D90  5A0C               	subwfb	(btemp+11)^0,f,c
 23456                           
 23457                           ;stkvar	_ff1 @ sp[(0)+-4]
 23458  017D92  0EFC               	movlw	-4
 23459  017D94  0060  F027  FFE3   	movff	btemp+8,plusw1
 23460  017D9A  0EFD               	movlw	-3
 23461  017D9C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23462  017DA2  0EFE               	movlw	-2
 23463  017DA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23464  017DAA  0EFF               	movlw	-1
 23465  017DAC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23466  017DB2                     l8072:
 23467                           
 23468                           ;stkvar	_ff2 @ sp[(0)+-8]
 23469  017DB2  0EFB               	movlw	-5
 23470  017DB4  AEE3               	btfss	plusw1,7,c
 23471  017DB6  D024               	goto	l8076
 23472                           
 23473                           ;stkvar	_ff2 @ sp[(0)+-8]
 23474  017DB8  0E00               	movlw	0
 23475  017DBA  6E09               	movwf	(btemp+8)^0,c
 23476  017DBC  0E00               	movlw	0
 23477  017DBE  6E0A               	movwf	(btemp+9)^0,c
 23478  017DC0  0E00               	movlw	0
 23479  017DC2  6E0B               	movwf	(btemp+10)^0,c
 23480  017DC4  0E80               	movlw	128
 23481  017DC6  6E0C               	movwf	(btemp+11)^0,c
 23482  017DC8  0EF8               	movlw	-8
 23483  017DCA  50E3               	movf	plusw1,w,c
 23484  017DCC  5E09               	subwf	(btemp+8)^0,f,c
 23485  017DCE  0EF9               	movlw	-7
 23486  017DD0  50E3               	movf	plusw1,w,c
 23487  017DD2  5A0A               	subwfb	(btemp+9)^0,f,c
 23488  017DD4  0EFA               	movlw	-6
 23489  017DD6  50E3               	movf	plusw1,w,c
 23490  017DD8  5A0B               	subwfb	(btemp+10)^0,f,c
 23491  017DDA  0EFB               	movlw	-5
 23492  017DDC  50E3               	movf	plusw1,w,c
 23493  017DDE  5A0C               	subwfb	(btemp+11)^0,f,c
 23494                           
 23495                           ;stkvar	_ff2 @ sp[(0)+-8]
 23496  017DE0  0EF8               	movlw	-8
 23497  017DE2  0060  F027  FFE3   	movff	btemp+8,plusw1
 23498  017DE8  0EF9               	movlw	-7
 23499  017DEA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23500  017DF0  0EFA               	movlw	-6
 23501  017DF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23502  017DF8  0EFB               	movlw	-5
 23503  017DFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 23504  017E00                     l8076:
 23505                           
 23506                           ;stkvar	_ff1 @ sp[(0)+-4]
 23507  017E00  0EFF               	movlw	-1
 23508  017E02  7EE3               	btg	plusw1,7,c
 23509                           
 23510                           ;stkvar	_ff2 @ sp[(0)+-8]
 23511  017E04  0EFB               	movlw	-5
 23512  017E06  7EE3               	btg	plusw1,7,c
 23513                           
 23514                           ;stkvar	_ff2 @ sp[(0)+-8]
 23515                           ;stkvar	_ff1 @ sp[(0)+-4]
 23516  017E08  50E1               	movf	fsr1l,w,c
 23517  017E0A  0FFC               	addlw	-4
 23518  017E0C  6ED9               	movwf	fsr2l,c
 23519  017E0E  50E2               	movf	fsr1h,w,c
 23520  017E10  6EDA               	movwf	fsr2h,c
 23521  017E12  0EFF               	movlw	255
 23522  017E14  22DA               	addwfc	fsr2h,f,c
 23523  017E16  0EF8               	movlw	-8
 23524  017E18  50E3               	movf	plusw1,w,c
 23525  017E1A  5CDE               	subwf	postinc2,w,c
 23526  017E1C  0EF9               	movlw	-7
 23527  017E1E  50E3               	movf	plusw1,w,c
 23528  017E20  58DE               	subwfb	postinc2,w,c
 23529  017E22  0EFA               	movlw	-6
 23530  017E24  50E3               	movf	plusw1,w,c
 23531  017E26  58DE               	subwfb	postinc2,w,c
 23532  017E28  0EFB               	movlw	-5
 23533  017E2A  50E3               	movf	plusw1,w,c
 23534  017E2C  58DE               	subwfb	postinc2,w,c
 23535  017E2E  B0D8               	btfsc	status,0,c
 23536  017E30  D002               	goto	l8084
 23537  017E32  9001               	bcf	btemp& (0+255),0,c
 23538  017E34  D001               	goto	l2575
 23539  017E36                     l8084:
 23540  017E36  8001               	bsf	btemp& (0+255),0,c
 23541  017E38                     l2575:
 23542                           
 23543                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 23544  017E38  0EF8               	movlw	248
 23545  017E3A  26E1               	addwf	fsr1l,f,c
 23546  017E3C  0EFF               	movlw	255
 23547  017E3E  22E2               	addwfc	fsr1h,f,c
 23548  017E40  0012               	return		;funcret
 23549  017E42                     __end_of___flge:
 23550                           	opt callstack 0
 23551                           
 23552 ;; *************** function _calc_model_data *****************
 23553 ;; Defined at:
 23554 ;;		line 56 in file "mbmc.c"
 23555 ;; Parameters:    Size  Location     Type
 23556 ;;		None
 23557 ;; Auto vars:     Size  Location     Type
 23558 ;;		None
 23559 ;; Return value:  Size  Location     Type
 23560 ;;                  1  [STACK] void 
 23561 ;; Registers used:
 23562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23563 ;; Tracked objects:
 23564 ;;		On entry : 0/1
 23565 ;;		On exit  : 3F/1
 23566 ;;		Unchanged: 0/0
 23567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23572 ;;Total ram usage:        0 bytes
 23573 ;; Hardware stack levels used:    1
 23574 ;; Hardware stack levels required when called:   18
 23575 ;; This function calls:
 23576 ;;		___fladd
 23577 ;;		___flmul
 23578 ;;		___flsub
 23579 ;;		_lp_filter
 23580 ;;		_start_bsoc
 23581 ;;		_stop_bsoc
 23582 ;; This function is called by:
 23583 ;;		_main
 23584 ;; This function uses a reentrant model
 23585 ;;
 23586                           
 23587                           	psect	text97
 23588  015456                     __ptext97:
 23589                           	opt callstack 0
 23590  015456                     _calc_model_data:
 23591                           	opt callstack 12
 23592                           
 23593                           ;mbmc.c: 58:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 59:  stop_bsoc();
 23594                           
 23595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23596                           ;incstack = 0
 23597  015456  ECE8  F0D5         	call	_stop_bsoc	;wreg free
 23598                           
 23599                           ; BSR set to: 57
 23600                           ;mbmc.c: 61:  if (!V.calib) {
 23601  01545A  0102               	movlb	2	; () banked
 23602  01545C  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 23603  01545E  A4D8               	btfss	status,2,c
 23604  015460  D1C5               	goto	l10308
 23605                           
 23606                           ; BSR set to: 2
 23607                           ;mbmc.c: 62:   C.c_bat = C.calc[C_BATT];
 23608  015462  C100  F144         	movff	_C,_C+68	;volatile
 23609  015466  C101  F145         	movff	_C+1,_C+69	;volatile
 23610  01546A  C102  F146         	movff	_C+2,_C+70	;volatile
 23611  01546E  C103  F147         	movff	_C+3,_C+71	;volatile
 23612                           
 23613                           ; BSR set to: 2
 23614                           ;mbmc.c: 63:   C.bc_ror = C.c_bat - bcror;
 23615  015472  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 23616  015478  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 23617  01547E  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 23618  015484  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 23619  01548A  0060  F513  FFE6   	movff	_C+68,postinc1
 23620  015490  0060  F517  FFE6   	movff	_C+69,postinc1
 23621  015496  0060  F51B  FFE6   	movff	_C+70,postinc1
 23622  01549C  0060  F51F  FFE6   	movff	_C+71,postinc1
 23623  0154A2  ECBF  F0CF         	call	___flsub	;wreg free
 23624  0154A6  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 23625  0154AC  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 23626  0154B2  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 23627  0154B8  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 23628                           
 23629                           ;mbmc.c: 64:   bcror = C.c_bat;
 23630  0154BE  C144  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 23631  0154C2  C145  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 23632  0154C6  C146  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 23633  0154CA  C147  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 23634                           
 23635                           ;mbmc.c: 65:   C.c_pv = C.calc[C_PV];
 23636  0154CE  C104  F148         	movff	_C+4,_C+72	;volatile
 23637  0154D2  C105  F149         	movff	_C+5,_C+73	;volatile
 23638  0154D6  C106  F14A         	movff	_C+6,_C+74	;volatile
 23639  0154DA  C107  F14B         	movff	_C+7,_C+75	;volatile
 23640                           
 23641                           ;mbmc.c: 66:   C.v_bat = C.calc[V_BAT];
 23642  0154DE  C110  F154         	movff	_C+16,_C+84	;volatile
 23643  0154E2  C111  F155         	movff	_C+17,_C+85	;volatile
 23644  0154E6  C112  F156         	movff	_C+18,_C+86	;volatile
 23645  0154EA  C113  F157         	movff	_C+19,_C+87	;volatile
 23646                           
 23647                           ;mbmc.c: 67:   C.bv_ror = C.v_bat - bvror;
 23648  0154EE  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 23649  0154F4  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 23650  0154FA  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 23651  015500  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 23652  015506  0060  F553  FFE6   	movff	_C+84,postinc1
 23653  01550C  0060  F557  FFE6   	movff	_C+85,postinc1
 23654  015512  0060  F55B  FFE6   	movff	_C+86,postinc1
 23655  015518  0060  F55F  FFE6   	movff	_C+87,postinc1
 23656  01551E  ECBF  F0CF         	call	___flsub	;wreg free
 23657  015522  0060  F004  F168   	movff	btemp,_C+104	;volatile
 23658  015528  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 23659  01552E  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 23660  015534  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 23661                           
 23662                           ;mbmc.c: 68:   bvror = C.v_bat;
 23663  01553A  C154  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 23664  01553E  C155  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 23665  015542  C156  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 23666  015546  C157  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 23667                           
 23668                           ;mbmc.c: 69:   C.v_pv = C.calc[V_PV];
 23669  01554A  C114  F150         	movff	_C+20,_C+80	;volatile
 23670  01554E  C115  F151         	movff	_C+21,_C+81	;volatile
 23671  015552  C116  F152         	movff	_C+22,_C+82	;volatile
 23672  015556  C117  F153         	movff	_C+23,_C+83	;volatile
 23673                           
 23674                           ;mbmc.c: 70:   C.v_cc = C.calc[V_CC];
 23675  01555A  C108  F14C         	movff	_C+8,_C+76	;volatile
 23676  01555E  C109  F14D         	movff	_C+9,_C+77	;volatile
 23677  015562  C10A  F14E         	movff	_C+10,_C+78	;volatile
 23678  015566  C10B  F14F         	movff	_C+11,_C+79	;volatile
 23679                           
 23680                           ;mbmc.c: 71:   C.v_inverter = C.calc[V_INVERTER];
 23681  01556A  C130  F164         	movff	_C+48,_C+100	;volatile
 23682  01556E  C131  F165         	movff	_C+49,_C+101	;volatile
 23683  015572  C132  F166         	movff	_C+50,_C+102	;volatile
 23684  015576  C133  F167         	movff	_C+51,_C+103	;volatile
 23685                           
 23686                           ;mbmc.c: 72:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 23687  01557A  0E01               	movlw	1
 23688  01557C  6EE6               	movwf	postinc1,c
 23689  01557E  0E10               	movlw	16
 23690  015580  6EE6               	movwf	postinc1,c
 23691  015582  0060  F403  FFE6   	movff	_C,postinc1
 23692  015588  0060  F407  FFE6   	movff	_C+1,postinc1
 23693  01558E  0060  F40B  FFE6   	movff	_C+2,postinc1
 23694  015594  0060  F40F  FFE6   	movff	_C+3,postinc1
 23695  01559A  0060  F413  FFE6   	movff	_C+4,postinc1
 23696  0155A0  0060  F417  FFE6   	movff	_C+5,postinc1
 23697  0155A6  0060  F41B  FFE6   	movff	_C+6,postinc1
 23698  0155AC  0060  F41F  FFE6   	movff	_C+7,postinc1
 23699  0155B2  ECBF  F0CF         	call	___flsub	;wreg free
 23700  0155B6  0060  F007  FFE6   	movff	btemp,postinc1
 23701  0155BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23702  0155C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23703  0155C8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23704  0155CE  ECDC  F0B9         	call	_lp_filter	;wreg free
 23705  0155D2  0060  F004  F140   	movff	btemp,_C+64	;volatile
 23706  0155D8  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 23707  0155DE  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 23708  0155E4  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 23709                           
 23710                           ;mbmc.c: 73:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 23711  0155EA  0E01               	movlw	1
 23712  0155EC  6EE6               	movwf	postinc1,c
 23713  0155EE  0E11               	movlw	17
 23714  0155F0  6EE6               	movwf	postinc1,c
 23715  0155F2  0060  F553  FFE6   	movff	_C+84,postinc1
 23716  0155F8  0060  F557  FFE6   	movff	_C+85,postinc1
 23717  0155FE  0060  F55B  FFE6   	movff	_C+86,postinc1
 23718  015604  0060  F55F  FFE6   	movff	_C+87,postinc1
 23719  01560A  0060  F503  FFE6   	movff	_C+64,postinc1
 23720  015610  0060  F507  FFE6   	movff	_C+65,postinc1
 23721  015616  0060  F50B  FFE6   	movff	_C+66,postinc1
 23722  01561C  0060  F50F  FFE6   	movff	_C+67,postinc1
 23723  015622  ECC5  F095         	call	___flmul	;wreg free
 23724  015626  0060  F007  FFE6   	movff	btemp,postinc1
 23725  01562C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23726  015632  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23727  015638  0060  F013  FFE6   	movff	btemp+3,postinc1
 23728  01563E  ECDC  F0B9         	call	_lp_filter	;wreg free
 23729  015642  0060  F004  F170   	movff	btemp,_C+112	;volatile
 23730  015648  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 23731  01564E  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 23732  015654  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 23733                           
 23734                           ;mbmc.c: 74:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 23735  01565A  0E01               	movlw	1
 23736  01565C  6EE6               	movwf	postinc1,c
 23737  01565E  0E12               	movlw	18
 23738  015660  6EE6               	movwf	postinc1,c
 23739  015662  0060  F543  FFE6   	movff	_C+80,postinc1
 23740  015668  0060  F547  FFE6   	movff	_C+81,postinc1
 23741  01566E  0060  F54B  FFE6   	movff	_C+82,postinc1
 23742  015674  0060  F54F  FFE6   	movff	_C+83,postinc1
 23743  01567A  0060  F523  FFE6   	movff	_C+72,postinc1
 23744  015680  0060  F527  FFE6   	movff	_C+73,postinc1
 23745  015686  0060  F52B  FFE6   	movff	_C+74,postinc1
 23746  01568C  0060  F52F  FFE6   	movff	_C+75,postinc1
 23747  015692  ECC5  F095         	call	___flmul	;wreg free
 23748  015696  0060  F007  FFE6   	movff	btemp,postinc1
 23749  01569C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23750  0156A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23751  0156A8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23752  0156AE  ECDC  F0B9         	call	_lp_filter	;wreg free
 23753  0156B2  0060  F004  F178   	movff	btemp,_C+120	;volatile
 23754  0156B8  0060  F008  F179   	movff	btemp+1,_C+121	;volatile
 23755  0156BE  0060  F00C  F17A   	movff	btemp+2,_C+122	;volatile
 23756  0156C4  0060  F010  F17B   	movff	btemp+3,_C+123	;volatile
 23757                           
 23758                           ;mbmc.c: 75:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 23759  0156CA  0E01               	movlw	1
 23760  0156CC  6EE6               	movwf	postinc1,c
 23761  0156CE  0E13               	movlw	19
 23762  0156D0  6EE6               	movwf	postinc1,c
 23763  0156D2  0E00               	movlw	0
 23764  0156D4  6EE6               	movwf	postinc1,c
 23765  0156D6  0E00               	movlw	0
 23766  0156D8  6EE6               	movwf	postinc1,c
 23767  0156DA  0E60               	movlw	96
 23768  0156DC  6EE6               	movwf	postinc1,c
 23769  0156DE  0EC1               	movlw	193
 23770  0156E0  6EE6               	movwf	postinc1,c
 23771  0156E2  0060  F593  FFE6   	movff	_C+100,postinc1
 23772  0156E8  0060  F597  FFE6   	movff	_C+101,postinc1
 23773  0156EE  0060  F59B  FFE6   	movff	_C+102,postinc1
 23774  0156F4  0060  F59F  FFE6   	movff	_C+103,postinc1
 23775  0156FA  0060  F503  FFE6   	movff	_C+64,postinc1
 23776  015700  0060  F507  FFE6   	movff	_C+65,postinc1
 23777  015706  0060  F50B  FFE6   	movff	_C+66,postinc1
 23778  01570C  0060  F50F  FFE6   	movff	_C+67,postinc1
 23779  015712  ECC5  F095         	call	___flmul	;wreg free
 23780  015716  0060  F007  FFE6   	movff	btemp,postinc1
 23781  01571C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23782  015722  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23783  015728  0060  F013  FFE6   	movff	btemp+3,postinc1
 23784  01572E  ECDA  F099         	call	___fladd	;wreg free
 23785  015732  0060  F007  FFE6   	movff	btemp,postinc1
 23786  015738  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23787  01573E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23788  015744  0060  F013  FFE6   	movff	btemp+3,postinc1
 23789  01574A  ECDC  F0B9         	call	_lp_filter	;wreg free
 23790  01574E  0060  F004  F174   	movff	btemp,_C+116	;volatile
 23791  015754  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 23792  01575A  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 23793  015760  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 23794                           
 23795                           ;mbmc.c: 76:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 23796  015766  0E01               	movlw	1
 23797  015768  6EE6               	movwf	postinc1,c
 23798  01576A  0E14               	movlw	20
 23799  01576C  6EE6               	movwf	postinc1,c
 23800  01576E  0060  F553  FFE6   	movff	_C+84,postinc1
 23801  015774  0060  F557  FFE6   	movff	_C+85,postinc1
 23802  01577A  0060  F55B  FFE6   	movff	_C+86,postinc1
 23803  015780  0060  F55F  FFE6   	movff	_C+87,postinc1
 23804  015786  0060  F513  FFE6   	movff	_C+68,postinc1
 23805  01578C  0060  F517  FFE6   	movff	_C+69,postinc1
 23806  015792  0060  F51B  FFE6   	movff	_C+70,postinc1
 23807  015798  0060  F51F  FFE6   	movff	_C+71,postinc1
 23808  01579E  ECC5  F095         	call	___flmul	;wreg free
 23809  0157A2  0060  F007  FFE6   	movff	btemp,postinc1
 23810  0157A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23811  0157AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23812  0157B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 23813  0157BA  ECDC  F0B9         	call	_lp_filter	;wreg free
 23814  0157BE  0060  F004  F17C   	movff	btemp,_C+124	;volatile
 23815  0157C4  0060  F008  F17D   	movff	btemp+1,_C+125	;volatile
 23816  0157CA  0060  F00C  F17E   	movff	btemp+2,_C+126	;volatile
 23817  0157D0  0060  F010  F17F   	movff	btemp+3,_C+127	;volatile
 23818                           
 23819                           ;mbmc.c: 80:   if (C.p_inverter < 0.0)
 23820  0157D6  0101               	movlb	1	; () banked
 23821  0157D8  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 23822  0157DA  D008               	goto	l10308
 23823                           
 23824                           ; BSR set to: 1
 23825                           ;mbmc.c: 81:    C.p_inverter = 0.0001;
 23826  0157DC  0E17               	movlw	23
 23827  0157DE  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 23828  0157E0  0EB7               	movlw	183
 23829  0157E2  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 23830  0157E4  0ED1               	movlw	209
 23831  0157E6  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 23832  0157E8  0E38               	movlw	56
 23833  0157EA  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 23834  0157EC                     l10308:
 23835                           
 23836                           ;mbmc.c: 83:  start_bsoc();
 23837  0157EC  EC8A  F0D4         	call	_start_bsoc	;wreg free
 23838                           
 23839                           ; BSR set to: 57
 23840                           ;mbmc.c: 84:  C.update = 1;
 23841  0157F0  0E01               	movlw	1
 23842  0157F2  0101               	movlb	1	; () banked
 23843  0157F4  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 23844                           
 23845                           ; BSR set to: 1
 23846                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23847  0157F6  0012               	return		;funcret
 23848  0157F8                     __end_of_calc_model_data:
 23849                           	opt callstack 0
 23850                           
 23851 ;; *************** function _stop_bsoc *****************
 23852 ;; Defined at:
 23853 ;;		line 106 in file "bsoc.c"
 23854 ;; Parameters:    Size  Location     Type
 23855 ;;		None
 23856 ;; Auto vars:     Size  Location     Type
 23857 ;;		None
 23858 ;; Return value:  Size  Location     Type
 23859 ;;                  1  [STACK] void 
 23860 ;; Registers used:
 23861 ;;		None
 23862 ;; Tracked objects:
 23863 ;;		On entry : 0/1
 23864 ;;		On exit  : 3F/39
 23865 ;;		Unchanged: 0/0
 23866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23871 ;;Total ram usage:        0 bytes
 23872 ;; Hardware stack levels used:    1
 23873 ;; Hardware stack levels required when called:   15
 23874 ;; This function calls:
 23875 ;;		Nothing
 23876 ;; This function is called by:
 23877 ;;		_calc_model_data
 23878 ;; This function uses a reentrant model
 23879 ;;
 23880                           
 23881                           	psect	text98
 23882  01ABD0                     __ptext98:
 23883                           	opt callstack 0
 23884  01ABD0                     _stop_bsoc:
 23885                           	opt callstack 14
 23886                           
 23887                           ;bsoc.c: 109:  PIE6bits.TMR3IE = 0;
 23888                           
 23889                           ; BSR set to: 1
 23890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23891                           ;incstack = 0
 23892  01ABD0  0139               	movlb	57	; () banked
 23893  01ABD2  9D96               	bcf	150,6,b	;volatile
 23894                           
 23895                           ; BSR set to: 57
 23896                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 23897  01ABD4  0012               	return		;funcret
 23898  01ABD6                     __end_of_stop_bsoc:
 23899                           	opt callstack 0
 23900                           
 23901 ;; *************** function _start_bsoc *****************
 23902 ;; Defined at:
 23903 ;;		line 97 in file "bsoc.c"
 23904 ;; Parameters:    Size  Location     Type
 23905 ;;		None
 23906 ;; Auto vars:     Size  Location     Type
 23907 ;;		None
 23908 ;; Return value:  Size  Location     Type
 23909 ;;                  1  [STACK] void 
 23910 ;; Registers used:
 23911 ;;		wreg, status,2, status,0, btemp+11
 23912 ;; Tracked objects:
 23913 ;;		On entry : 3C/2
 23914 ;;		On exit  : 3F/39
 23915 ;;		Unchanged: 0/0
 23916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23921 ;;Total ram usage:        0 bytes
 23922 ;; Hardware stack levels used:    1
 23923 ;; Hardware stack levels required when called:   15
 23924 ;; This function calls:
 23925 ;;		Nothing
 23926 ;; This function is called by:
 23927 ;;		_calc_model_data
 23928 ;; This function uses a reentrant model
 23929 ;;
 23930                           
 23931                           	psect	text99
 23932  01A914                     __ptext99:
 23933                           	opt callstack 0
 23934  01A914                     _start_bsoc:
 23935                           	opt callstack 14
 23936                           
 23937                           ;bsoc.c: 100:  PIE6bits.TMR3IE = 1;
 23938                           
 23939                           ; BSR set to: 57
 23940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23941                           ;incstack = 0
 23942  01A914  0139               	movlb	57	; () banked
 23943  01A916  8D96               	bsf	150,6,b	;volatile
 23944                           
 23945                           ; BSR set to: 57
 23946  01A918  A4BE               	btfss	190,2,c	;volatile
 23947  01A91A  D002               	goto	u9060
 23948  01A91C  0E01               	movlw	1
 23949  01A91E  D001               	goto	u9066
 23950  01A920                     u9060:
 23951  01A920  0E00               	movlw	0
 23952  01A922                     u9066:
 23953  01A922  0AFF               	xorlw	255
 23954  01A924  6E0C               	movwf	(btemp+11)^0,c
 23955  01A926  460C               	rlncf	(btemp+11)^0,f,c
 23956  01A928  460C               	rlncf	(btemp+11)^0,f,c
 23957  01A92A  50BE               	movf	190,w,c	;volatile
 23958  01A92C  180C               	xorwf	(btemp+11)^0,w,c
 23959  01A92E  0BFB               	andlw	-5
 23960  01A930  180C               	xorwf	(btemp+11)^0,w,c
 23961  01A932  6EBE               	movwf	190,c	;volatile
 23962                           
 23963                           ; BSR set to: 57
 23964                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23965  01A934  0012               	return		;funcret
 23966  01A936                     __end_of_start_bsoc:
 23967                           	opt callstack 0
 23968                           
 23969 ;; *************** function _lp_filter *****************
 23970 ;; Defined at:
 23971 ;;		line 18 in file "mbmc.c"
 23972 ;; Parameters:    Size  Location     Type
 23973 ;;  new             4  [STACK] const float 
 23974 ;;  bn              1  [STACK] const unsigned char 
 23975 ;;  slow            1  [STACK] const char 
 23976 ;; Auto vars:     Size  Location     Type
 23977 ;;  lp_speed        4  [STACK] float 
 23978 ;; Return value:  Size  Location     Type
 23979 ;;                  4  [STACK] float 
 23980 ;; Registers used:
 23981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23982 ;; Tracked objects:
 23983 ;;		On entry : 0/2
 23984 ;;		On exit  : 0/0
 23985 ;;		Unchanged: 0/0
 23986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23991 ;;Total ram usage:        0 bytes
 23992 ;; Hardware stack levels used:    1
 23993 ;; Hardware stack levels required when called:   17
 23994 ;; This function calls:
 23995 ;;		___fladd
 23996 ;;		___flmul
 23997 ;;		___flsub
 23998 ;; This function is called by:
 23999 ;;		_main
 24000 ;;		_convert_adc_data
 24001 ;;		_calc_model_data
 24002 ;; This function uses a reentrant model
 24003 ;;
 24004                           
 24005                           	psect	text100
 24006  0173B8                     __ptext100:
 24007                           	opt callstack 0
 24008  0173B8                     _lp_filter:
 24009                           	opt callstack 0
 24010                           
 24011                           ; BSR set to: 57
 24012                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24013  0173B8  52E6               	movf	postinc1,f,c
 24014  0173BA  52E6               	movf	postinc1,f,c
 24015  0173BC  52E6               	movf	postinc1,f,c
 24016  0173BE  52E6               	movf	postinc1,f,c
 24017                           
 24018                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 24019                           ;stkvar	_bn @ sp[(-4)+-5]
 24020                           
 24021                           ;incstack = 0
 24022  0173C0  0EF7               	movlw	-9
 24023  0173C2  006F FF8C  F001    	movff	plusw1,btemp
 24024  0173C8  0E14               	movlw	20
 24025  0173CA  6401               	cpfsgt	btemp^0,c
 24026  0173CC  D011               	goto	l9730
 24027  0173CE                     u8880:
 24028                           
 24029                           ;mbmc.c: 24:   return new;
 24030                           ;stkvar	_new @ sp[(-4)+-4]
 24031  0173CE  0EF8               	movlw	-8
 24032  0173D0  006F FF8C  F001    	movff	plusw1,btemp
 24033  0173D6  0EF9               	movlw	-7
 24034  0173D8  006F FF8C  F002    	movff	plusw1,btemp+1
 24035  0173DE  0EFA               	movlw	-6
 24036  0173E0  006F FF8C  F003    	movff	plusw1,btemp+2
 24037  0173E6  0EFB               	movlw	-5
 24038  0173E8  006F FF8C  F004    	movff	plusw1,btemp+3
 24039  0173EE  D0BD               	goto	l1794
 24040  0173F0                     l9730:
 24041                           
 24042                           ;mbmc.c: 26:  if (slow == (-1)) {
 24043                           ;stkvar	_slow @ sp[(-4)+-6]
 24044  0173F0  0EF6               	movlw	-10
 24045  0173F2  28E3               	incf	plusw1,w,c
 24046  0173F4  A4D8               	btfss	status,2,c
 24047  0173F6  D012               	goto	l9738
 24048                           
 24049                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 24050                           ;stkvar	_bn @ sp[(-4)+-5]
 24051  0173F8  0EF7               	movlw	-9
 24052  0173FA  50E3               	movf	plusw1,w,c
 24053  0173FC  0D04               	mullw	4
 24054  0173FE  0E00               	movlw	low lp_filter@smooth
 24055  017400  24F3               	addwf	243,w,c
 24056  017402  6ED9               	movwf	fsr2l,c
 24057  017404  0E03               	movlw	high lp_filter@smooth
 24058  017406  20F4               	addwfc	prodh,w,c
 24059  017408  6EDA               	movwf	fsr2h,c
 24060  01740A  0E00               	movlw	0
 24061  01740C  6EDE               	movwf	postinc2,c
 24062  01740E  0E00               	movlw	0
 24063  017410  6EDE               	movwf	postinc2,c
 24064  017412  0E00               	movlw	0
 24065  017414  6EDE               	movwf	postinc2,c
 24066  017416  0E00               	movlw	0
 24067  017418  6EDD               	movwf	postdec2,c
 24068  01741A  D7D9               	goto	u8880
 24069  01741C                     l9738:
 24070                           
 24071                           ;mbmc.c: 31:  if (slow) {
 24072                           ;stkvar	_slow @ sp[(-4)+-6]
 24073  01741C  0EF6               	movlw	-10
 24074  01741E  50E3               	movf	plusw1,w,c
 24075  017420  B4D8               	btfsc	status,2,c
 24076  017422  D006               	goto	l9742
 24077                           
 24078                           ;mbmc.c: 32:   lp_speed = 0.033;
 24079  017424  0E02               	movlw	2
 24080  017426  6E09               	movwf	(btemp+8)^0,c
 24081  017428  0E2B               	movlw	43
 24082  01742A  6E0A               	movwf	(btemp+9)^0,c
 24083  01742C  0E07               	movlw	7
 24084  01742E  D005               	goto	L26
 24085  017430                     l9742:
 24086                           
 24087                           ;mbmc.c: 34:   lp_speed = 0.066;
 24088  017430  0E02               	movlw	2
 24089  017432  6E09               	movwf	(btemp+8)^0,c
 24090  017434  0E2B               	movlw	43
 24091  017436  6E0A               	movwf	(btemp+9)^0,c
 24092  017438  0E87               	movlw	135
 24093  01743A                     L26:
 24094  01743A  6E0B               	movwf	(btemp+10)^0,c
 24095  01743C  0E3D               	movlw	61
 24096  01743E  6E0C               	movwf	(btemp+11)^0,c
 24097                           
 24098                           ;stkvar	_lp_speed @ sp[(-4)+0]
 24099  017440  0EFC               	movlw	-4
 24100  017442  0060  F027  FFE3   	movff	btemp+8,plusw1
 24101  017448  0EFD               	movlw	-3
 24102  01744A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24103  017450  0EFE               	movlw	-2
 24104  017452  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24105  017458  0EFF               	movlw	-1
 24106  01745A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24107                           
 24108                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 24109                           ;stkvar	_bn @ sp[(-4)+-5]
 24110  017460  0EF7               	movlw	-9
 24111  017462  50E3               	movf	plusw1,w,c
 24112  017464  0D04               	mullw	4
 24113  017466  0E00               	movlw	low lp_filter@smooth
 24114  017468  24F3               	addwf	243,w,c
 24115  01746A  6ED9               	movwf	fsr2l,c
 24116  01746C  0E03               	movlw	high lp_filter@smooth
 24117  01746E  20F4               	addwfc	prodh,w,c
 24118  017470  6EDA               	movwf	fsr2h,c
 24119  017472  006F FF7B FFE6     	movff	postinc2,postinc1
 24120  017478  006F FF7B FFE6     	movff	postinc2,postinc1
 24121  01747E  006F FF7B FFE6     	movff	postinc2,postinc1
 24122  017484  006F FF7B FFE6     	movff	postinc2,postinc1
 24123                           
 24124                           ;stkvar	_lp_speed @ sp[(-8)+0]
 24125  01748A  0EF8               	movlw	-8
 24126  01748C  006F FF8F FFE6     	movff	plusw1,postinc1
 24127  017492  006F FF8F FFE6     	movff	plusw1,postinc1
 24128  017498  006F FF8F FFE6     	movff	plusw1,postinc1
 24129  01749E  006F FF8F FFE6     	movff	plusw1,postinc1
 24130                           
 24131                           ;stkvar	_bn @ sp[(-12)+-5]
 24132  0174A4  0EEF               	movlw	-17
 24133  0174A6  50E3               	movf	plusw1,w,c
 24134  0174A8  0D04               	mullw	4
 24135  0174AA  0E00               	movlw	low lp_filter@smooth
 24136  0174AC  24F3               	addwf	243,w,c
 24137  0174AE  6ED9               	movwf	fsr2l,c
 24138  0174B0  0E03               	movlw	high lp_filter@smooth
 24139  0174B2  20F4               	addwfc	prodh,w,c
 24140  0174B4  6EDA               	movwf	fsr2h,c
 24141  0174B6  006F FF7B FFE6     	movff	postinc2,postinc1
 24142  0174BC  006F FF7B FFE6     	movff	postinc2,postinc1
 24143  0174C2  006F FF7B FFE6     	movff	postinc2,postinc1
 24144  0174C8  006F FF7B FFE6     	movff	postinc2,postinc1
 24145                           
 24146                           ;stkvar	_new @ sp[(-16)+-4]
 24147  0174CE  0EEC               	movlw	-20
 24148  0174D0  006F FF8F FFE6     	movff	plusw1,postinc1
 24149  0174D6  006F FF8F FFE6     	movff	plusw1,postinc1
 24150  0174DC  006F FF8F FFE6     	movff	plusw1,postinc1
 24151  0174E2  006F FF8F FFE6     	movff	plusw1,postinc1
 24152  0174E8  ECBF  F0CF         	call	___flsub	;wreg free
 24153  0174EC  0060  F007  FFE6   	movff	btemp,postinc1
 24154  0174F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24155  0174F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24156  0174FE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24157  017504  ECC5  F095         	call	___flmul	;wreg free
 24158  017508  0060  F007  FFE6   	movff	btemp,postinc1
 24159  01750E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24160  017514  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24161  01751A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24162  017520  ECDA  F099         	call	___fladd	;wreg free
 24163                           
 24164                           ;stkvar	_bn @ sp[(-4)+-5]
 24165  017524  0EF7               	movlw	-9
 24166  017526  50E3               	movf	plusw1,w,c
 24167  017528  0D04               	mullw	4
 24168  01752A  0E00               	movlw	low lp_filter@smooth
 24169  01752C  24F3               	addwf	243,w,c
 24170  01752E  6ED9               	movwf	fsr2l,c
 24171  017530  0E03               	movlw	high lp_filter@smooth
 24172  017532  20F4               	addwfc	prodh,w,c
 24173  017534  6EDA               	movwf	fsr2h,c
 24174  017536  0060  F007  FFDE   	movff	btemp,postinc2
 24175  01753C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 24176  017542  0060  F00F  FFDE   	movff	btemp+2,postinc2
 24177  017548  0060  F013  FFDD   	movff	btemp+3,postdec2
 24178  01754E  52DD               	movf	postdec2,f,c
 24179  017550  52DD               	movf	postdec2,f,c
 24180  017552  006F FF78  F001    	movff	postinc2,btemp
 24181  017558  006F FF78  F002    	movff	postinc2,btemp+1
 24182  01755E  006F FF78  F003    	movff	postinc2,btemp+2
 24183  017564  006F FF78  F004    	movff	postinc2,btemp+3
 24184  01756A                     l1794:
 24185                           
 24186                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 24187  01756A  0EF6               	movlw	246
 24188  01756C  26E1               	addwf	fsr1l,f,c
 24189  01756E  0EFF               	movlw	255
 24190  017570  22E2               	addwfc	fsr1h,f,c
 24191  017572  0012               	return		;funcret
 24192  017574                     __end_of_lp_filter:
 24193                           	opt callstack 0
 24194                           
 24195 ;; *************** function ___flsub *****************
 24196 ;; Defined at:
 24197 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 24198 ;; Parameters:    Size  Location     Type
 24199 ;;  b               4  [STACK] float 
 24200 ;;  a               4  [STACK] float 
 24201 ;; Auto vars:     Size  Location     Type
 24202 ;;		None
 24203 ;; Return value:  Size  Location     Type
 24204 ;;                  4  [STACK] float 
 24205 ;; Registers used:
 24206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24207 ;; Tracked objects:
 24208 ;;		On entry : 0/0
 24209 ;;		On exit  : 0/0
 24210 ;;		Unchanged: 0/0
 24211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24216 ;;Total ram usage:        0 bytes
 24217 ;; Hardware stack levels used:    1
 24218 ;; Hardware stack levels required when called:   16
 24219 ;; This function calls:
 24220 ;;		___fladd
 24221 ;; This function is called by:
 24222 ;;		_conv_raw_result
 24223 ;;		_lp_filter
 24224 ;;		_calc_model_data
 24225 ;;		_calc_ror_data
 24226 ;;		_efgtoa
 24227 ;; This function uses a reentrant model
 24228 ;;
 24229                           
 24230                           	psect	text101
 24231  019F7E                     __ptext101:
 24232                           	opt callstack 0
 24233  019F7E                     ___flsub:
 24234                           	opt callstack 0
 24235                           
 24236                           ;stkvar	_a @ sp[(0)+-8]
 24237                           
 24238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24239                           ;incstack = 0
 24240 ;; hardware stack exceeded
 24241  019F7E  0EFB               	movlw	-5
 24242  019F80  7EE3               	btg	plusw1,7,c
 24243                           
 24244                           ;stkvar	_a @ sp[(0)+-8]
 24245  019F82  0EF8               	movlw	-8
 24246  019F84  006F FF8F FFE6     	movff	plusw1,postinc1
 24247  019F8A  006F FF8F FFE6     	movff	plusw1,postinc1
 24248  019F90  006F FF8F FFE6     	movff	plusw1,postinc1
 24249  019F96  006F FF8F FFE6     	movff	plusw1,postinc1
 24250                           
 24251                           ;stkvar	_b @ sp[(-4)+-4]
 24252  019F9C  0EF8               	movlw	-8
 24253  019F9E  006F FF8F FFE6     	movff	plusw1,postinc1
 24254  019FA4  006F FF8F FFE6     	movff	plusw1,postinc1
 24255  019FAA  006F FF8F FFE6     	movff	plusw1,postinc1
 24256  019FB0  006F FF8F FFE6     	movff	plusw1,postinc1
 24257  019FB6  ECDA  F099         	call	___fladd	;wreg free
 24258                           
 24259                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 24260  019FBA  0EF8               	movlw	248
 24261  019FBC  26E1               	addwf	fsr1l,f,c
 24262  019FBE  0EFF               	movlw	255
 24263  019FC0  22E2               	addwfc	fsr1h,f,c
 24264  019FC2  0012               	return		;funcret
 24265  019FC4                     __end_of___flsub:
 24266                           	opt callstack 0
 24267                           
 24268 ;; *************** function ___fladd *****************
 24269 ;; Defined at:
 24270 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 24271 ;; Parameters:    Size  Location     Type
 24272 ;;  b               4  [STACK] float 
 24273 ;;  a               4  [STACK] float 
 24274 ;; Auto vars:     Size  Location     Type
 24275 ;;  grs             1  [STACK] unsigned char 
 24276 ;;  bexp            1  [STACK] unsigned char 
 24277 ;;  aexp            1  [STACK] unsigned char 
 24278 ;;  signs           1  [STACK] unsigned char 
 24279 ;; Return value:  Size  Location     Type
 24280 ;;                  4  [STACK] unsigned char 
 24281 ;; Registers used:
 24282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24283 ;; Tracked objects:
 24284 ;;		On entry : 0/0
 24285 ;;		On exit  : 0/0
 24286 ;;		Unchanged: 0/0
 24287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24292 ;;Total ram usage:        0 bytes
 24293 ;; Hardware stack levels used:    1
 24294 ;; Hardware stack levels required when called:   15
 24295 ;; This function calls:
 24296 ;;		Nothing
 24297 ;; This function is called by:
 24298 ;;		_lp_filter
 24299 ;;		_calc_model_data
 24300 ;;		_calc_bsoc
 24301 ;;		_efgtoa
 24302 ;;		___flsub
 24303 ;; This function uses a reentrant model
 24304 ;;
 24305                           
 24306                           	psect	text102
 24307  0133B4                     __ptext102:
 24308                           	opt callstack 0
 24309  0133B4                     ___fladd:
 24310                           	opt callstack 0
 24311                           
 24312                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24313  0133B4  52E6               	movf	postinc1,f,c
 24314  0133B6  52E6               	movf	postinc1,f,c
 24315  0133B8  52E6               	movf	postinc1,f,c
 24316  0133BA  52E6               	movf	postinc1,f,c
 24317                           
 24318                           ;stkvar	_b @ sp[(-4)+-4]
 24319                           
 24320                           ;incstack = 0
 24321 ;; hardware stack exceeded
 24322  0133BC  0EFB               	movlw	251
 24323  0133BE  24E1               	addwf	fsr1l,w,c
 24324  0133C0  6ED9               	movwf	fsr2l,c
 24325  0133C2  0EFF               	movlw	255
 24326  0133C4  20E2               	addwfc	fsr1h,w,c
 24327  0133C6  6EDA               	movwf	fsr2h,c
 24328  0133C8  50DF               	movf	indf2,w,c
 24329  0133CA  6E0C               	movwf	(btemp+11)^0,c
 24330  0133CC  0E80               	movlw	128
 24331  0133CE  160C               	andwf	(btemp+11)^0,f,c
 24332                           
 24333                           ;stkvar	_signs @ sp[(-4)+3]
 24334  0133D0  0EFF               	movlw	-1
 24335  0133D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 24336                           
 24337                           ;stkvar	_b @ sp[(-4)+-4]
 24338  0133D8  0EFB               	movlw	251
 24339  0133DA  24E1               	addwf	fsr1l,w,c
 24340  0133DC  6ED9               	movwf	fsr2l,c
 24341  0133DE  0EFF               	movlw	255
 24342  0133E0  20E2               	addwfc	fsr1h,w,c
 24343  0133E2  6EDA               	movwf	fsr2h,c
 24344  0133E4  50DF               	movf	indf2,w,c
 24345  0133E6  6E0C               	movwf	(btemp+11)^0,c
 24346  0133E8  90D8               	bcf	status,0,c
 24347  0133EA  340C               	rlcf	(btemp+11)^0,w,c
 24348  0133EC  6E0B               	movwf	(btemp+10)^0,c
 24349                           
 24350                           ;stkvar	_bexp @ sp[(-4)+1]
 24351  0133EE  0EFD               	movlw	-3
 24352  0133F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24353                           
 24354                           ;stkvar	_b @ sp[(-4)+-4]
 24355  0133F6  0EFA               	movlw	250
 24356  0133F8  24E1               	addwf	fsr1l,w,c
 24357  0133FA  6ED9               	movwf	fsr2l,c
 24358  0133FC  0EFF               	movlw	255
 24359  0133FE  20E2               	addwfc	fsr1h,w,c
 24360  013400  6EDA               	movwf	fsr2h,c
 24361  013402  AEDF               	btfss	indf2,7,c
 24362  013404  D002               	goto	l7216
 24363                           
 24364                           ;stkvar	_bexp @ sp[(-4)+1]
 24365  013406  0EFD               	movlw	-3
 24366  013408  80E3               	bsf	plusw1,0,c
 24367  01340A                     l7216:
 24368                           
 24369                           ;stkvar	_bexp @ sp[(-4)+1]
 24370  01340A  0EFD               	movlw	-3
 24371  01340C  50E3               	movf	plusw1,w,c
 24372  01340E  B4D8               	btfsc	status,2,c
 24373  013410  D027               	goto	l7226
 24374                           
 24375                           ;stkvar	_bexp @ sp[(-4)+1]
 24376  013412  0EFD               	movlw	-3
 24377  013414  28E3               	incf	plusw1,w,c
 24378  013416  A4D8               	btfss	status,2,c
 24379  013418  D018               	goto	l7222
 24380  01341A  0E00               	movlw	0
 24381  01341C  6E09               	movwf	(btemp+8)^0,c
 24382  01341E  0E00               	movlw	0
 24383  013420  6E0A               	movwf	(btemp+9)^0,c
 24384  013422  0E00               	movlw	0
 24385  013424  6E0B               	movwf	(btemp+10)^0,c
 24386  013426  0E00               	movlw	0
 24387  013428  6E0C               	movwf	(btemp+11)^0,c
 24388                           
 24389                           ;stkvar	_b @ sp[(-4)+-4]
 24390  01342A  0EF8               	movlw	-8
 24391  01342C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24392  013432  0EF9               	movlw	-7
 24393  013434  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24394  01343A  0EFA               	movlw	-6
 24395  01343C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24396  013442  0EFB               	movlw	-5
 24397  013444  0060  F033  FFE3   	movff	btemp+11,plusw1
 24398  01344A                     l7222:
 24399                           
 24400                           ;stkvar	_b @ sp[(-4)+-4]
 24401  01344A  0EFA               	movlw	-6
 24402  01344C  8EE3               	bsf	plusw1,7,c
 24403                           
 24404                           ;stkvar	_b @ sp[(-4)+-4]
 24405  01344E  0EFB               	movlw	251
 24406  013450  24E1               	addwf	fsr1l,w,c
 24407  013452  6ED9               	movwf	fsr2l,c
 24408  013454  0EFF               	movlw	255
 24409  013456  20E2               	addwfc	fsr1h,w,c
 24410  013458  6EDA               	movwf	fsr2h,c
 24411  01345A  0E00               	movlw	0
 24412  01345C  6EDF               	movwf	indf2,c
 24413  01345E  D018               	goto	l7228
 24414  013460                     l7226:
 24415  013460  0E00               	movlw	0
 24416  013462  6E09               	movwf	(btemp+8)^0,c
 24417  013464  0E00               	movlw	0
 24418  013466  6E0A               	movwf	(btemp+9)^0,c
 24419  013468  0E00               	movlw	0
 24420  01346A  6E0B               	movwf	(btemp+10)^0,c
 24421  01346C  0E00               	movlw	0
 24422  01346E  6E0C               	movwf	(btemp+11)^0,c
 24423                           
 24424                           ;stkvar	_b @ sp[(-4)+-4]
 24425  013470  0EF8               	movlw	-8
 24426  013472  0060  F027  FFE3   	movff	btemp+8,plusw1
 24427  013478  0EF9               	movlw	-7
 24428  01347A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24429  013480  0EFA               	movlw	-6
 24430  013482  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24431  013488  0EFB               	movlw	-5
 24432  01348A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24433  013490                     l7228:
 24434                           
 24435                           ;stkvar	_a @ sp[(-4)+-8]
 24436  013490  0EF7               	movlw	247
 24437  013492  24E1               	addwf	fsr1l,w,c
 24438  013494  6ED9               	movwf	fsr2l,c
 24439  013496  0EFF               	movlw	255
 24440  013498  20E2               	addwfc	fsr1h,w,c
 24441  01349A  6EDA               	movwf	fsr2h,c
 24442  01349C  50DF               	movf	indf2,w,c
 24443  01349E  6E0C               	movwf	(btemp+11)^0,c
 24444  0134A0  0E80               	movlw	128
 24445  0134A2  160C               	andwf	(btemp+11)^0,f,c
 24446                           
 24447                           ;stkvar	_aexp @ sp[(-4)+2]
 24448  0134A4  0EFE               	movlw	-2
 24449  0134A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24450                           
 24451                           ;stkvar	_signs @ sp[(-4)+3]
 24452                           ;stkvar	_aexp @ sp[(-4)+2]
 24453  0134AC  50E1               	movf	fsr1l,w,c
 24454  0134AE  0FFE               	addlw	-2
 24455  0134B0  6ED9               	movwf	fsr2l,c
 24456  0134B2  50E2               	movf	fsr1h,w,c
 24457  0134B4  6EDA               	movwf	fsr2h,c
 24458  0134B6  0EFF               	movlw	255
 24459  0134B8  22DA               	addwfc	fsr2h,f,c
 24460  0134BA  0EFF               	movlw	-1
 24461  0134BC  50E3               	movf	plusw1,w,c
 24462  0134BE  18DE               	xorwf	postinc2,w,c
 24463  0134C0  B4D8               	btfsc	status,2,c
 24464  0134C2  D002               	goto	l7234
 24465                           
 24466                           ;stkvar	_signs @ sp[(-4)+3]
 24467  0134C4  0EFF               	movlw	-1
 24468  0134C6  8CE3               	bsf	plusw1,6,c
 24469  0134C8                     l7234:
 24470                           
 24471                           ;stkvar	_a @ sp[(-4)+-8]
 24472  0134C8  0EF7               	movlw	247
 24473  0134CA  24E1               	addwf	fsr1l,w,c
 24474  0134CC  6ED9               	movwf	fsr2l,c
 24475  0134CE  0EFF               	movlw	255
 24476  0134D0  20E2               	addwfc	fsr1h,w,c
 24477  0134D2  6EDA               	movwf	fsr2h,c
 24478  0134D4  50DF               	movf	indf2,w,c
 24479  0134D6  6E0C               	movwf	(btemp+11)^0,c
 24480  0134D8  90D8               	bcf	status,0,c
 24481  0134DA  340C               	rlcf	(btemp+11)^0,w,c
 24482  0134DC  6E0B               	movwf	(btemp+10)^0,c
 24483                           
 24484                           ;stkvar	_aexp @ sp[(-4)+2]
 24485  0134DE  0EFE               	movlw	-2
 24486  0134E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24487                           
 24488                           ;stkvar	_a @ sp[(-4)+-8]
 24489  0134E6  0EF6               	movlw	246
 24490  0134E8  24E1               	addwf	fsr1l,w,c
 24491  0134EA  6ED9               	movwf	fsr2l,c
 24492  0134EC  0EFF               	movlw	255
 24493  0134EE  20E2               	addwfc	fsr1h,w,c
 24494  0134F0  6EDA               	movwf	fsr2h,c
 24495  0134F2  AEDF               	btfss	indf2,7,c
 24496  0134F4  D002               	goto	l7240
 24497                           
 24498                           ;stkvar	_aexp @ sp[(-4)+2]
 24499  0134F6  0EFE               	movlw	-2
 24500  0134F8  80E3               	bsf	plusw1,0,c
 24501  0134FA                     l7240:
 24502                           
 24503                           ;stkvar	_aexp @ sp[(-4)+2]
 24504  0134FA  0EFE               	movlw	-2
 24505  0134FC  50E3               	movf	plusw1,w,c
 24506  0134FE  B4D8               	btfsc	status,2,c
 24507  013500  D027               	goto	l7250
 24508                           
 24509                           ;stkvar	_aexp @ sp[(-4)+2]
 24510  013502  0EFE               	movlw	-2
 24511  013504  28E3               	incf	plusw1,w,c
 24512  013506  A4D8               	btfss	status,2,c
 24513  013508  D018               	goto	l7246
 24514  01350A  0E00               	movlw	0
 24515  01350C  6E09               	movwf	(btemp+8)^0,c
 24516  01350E  0E00               	movlw	0
 24517  013510  6E0A               	movwf	(btemp+9)^0,c
 24518  013512  0E00               	movlw	0
 24519  013514  6E0B               	movwf	(btemp+10)^0,c
 24520  013516  0E00               	movlw	0
 24521  013518  6E0C               	movwf	(btemp+11)^0,c
 24522                           
 24523                           ;stkvar	_a @ sp[(-4)+-8]
 24524  01351A  0EF4               	movlw	-12
 24525  01351C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24526  013522  0EF5               	movlw	-11
 24527  013524  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24528  01352A  0EF6               	movlw	-10
 24529  01352C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24530  013532  0EF7               	movlw	-9
 24531  013534  0060  F033  FFE3   	movff	btemp+11,plusw1
 24532  01353A                     l7246:
 24533                           
 24534                           ;stkvar	_a @ sp[(-4)+-8]
 24535  01353A  0EF6               	movlw	-10
 24536  01353C  8EE3               	bsf	plusw1,7,c
 24537                           
 24538                           ;stkvar	_a @ sp[(-4)+-8]
 24539  01353E  0EF7               	movlw	247
 24540  013540  24E1               	addwf	fsr1l,w,c
 24541  013542  6ED9               	movwf	fsr2l,c
 24542  013544  0EFF               	movlw	255
 24543  013546  20E2               	addwfc	fsr1h,w,c
 24544  013548  6EDA               	movwf	fsr2h,c
 24545  01354A  0E00               	movlw	0
 24546  01354C  6EDF               	movwf	indf2,c
 24547  01354E  D018               	goto	l7252
 24548  013550                     l7250:
 24549  013550  0E00               	movlw	0
 24550  013552  6E09               	movwf	(btemp+8)^0,c
 24551  013554  0E00               	movlw	0
 24552  013556  6E0A               	movwf	(btemp+9)^0,c
 24553  013558  0E00               	movlw	0
 24554  01355A  6E0B               	movwf	(btemp+10)^0,c
 24555  01355C  0E00               	movlw	0
 24556  01355E  6E0C               	movwf	(btemp+11)^0,c
 24557                           
 24558                           ;stkvar	_a @ sp[(-4)+-8]
 24559  013560  0EF4               	movlw	-12
 24560  013562  0060  F027  FFE3   	movff	btemp+8,plusw1
 24561  013568  0EF5               	movlw	-11
 24562  01356A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24563  013570  0EF6               	movlw	-10
 24564  013572  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24565  013578  0EF7               	movlw	-9
 24566  01357A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24567  013580                     l7252:
 24568                           
 24569                           ;stkvar	_bexp @ sp[(-4)+1]
 24570                           ;stkvar	_aexp @ sp[(-4)+2]
 24571  013580  50E1               	movf	fsr1l,w,c
 24572  013582  0FFE               	addlw	-2
 24573  013584  6ED9               	movwf	fsr2l,c
 24574  013586  50E2               	movf	fsr1h,w,c
 24575  013588  6EDA               	movwf	fsr2h,c
 24576  01358A  0EFF               	movlw	255
 24577  01358C  22DA               	addwfc	fsr2h,f,c
 24578  01358E  0EFD               	movlw	-3
 24579  013590  50E3               	movf	plusw1,w,c
 24580  013592  5CDE               	subwf	postinc2,w,c
 24581  013594  B0D8               	btfsc	status,0,c
 24582  013596  D0A4               	goto	l7288
 24583                           
 24584                           ;stkvar	_signs @ sp[(-4)+3]
 24585  013598  0EFF               	movlw	-1
 24586  01359A  ACE3               	btfss	plusw1,6,c
 24587  01359C  D002               	goto	l7258
 24588                           
 24589                           ;stkvar	_signs @ sp[(-4)+3]
 24590  01359E  0EFF               	movlw	-1
 24591  0135A0  7EE3               	btg	plusw1,7,c
 24592  0135A2                     l7258:
 24593                           
 24594                           ;stkvar	_bexp @ sp[(-4)+1]
 24595                           ;stkvar	_grs @ sp[(-4)+0]
 24596  0135A2  0EFD               	movlw	-3
 24597  0135A4  006F FF8C  F001    	movff	plusw1,btemp
 24598  0135AA  0EFC               	movlw	-4
 24599  0135AC  0060  F007  FFE3   	movff	btemp,plusw1
 24600                           
 24601                           ;stkvar	_aexp @ sp[(-4)+2]
 24602                           ;stkvar	_bexp @ sp[(-4)+1]
 24603  0135B2  0EFE               	movlw	-2
 24604  0135B4  006F FF8C  F001    	movff	plusw1,btemp
 24605  0135BA  0EFD               	movlw	-3
 24606  0135BC  0060  F007  FFE3   	movff	btemp,plusw1
 24607                           
 24608                           ;stkvar	_grs @ sp[(-4)+0]
 24609                           ;stkvar	_aexp @ sp[(-4)+2]
 24610  0135C2  0EFC               	movlw	-4
 24611  0135C4  006F FF8C  F001    	movff	plusw1,btemp
 24612  0135CA  0EFE               	movlw	-2
 24613  0135CC  0060  F007  FFE3   	movff	btemp,plusw1
 24614                           
 24615                           ;stkvar	_b @ sp[(-4)+-4]
 24616                           ;stkvar	_grs @ sp[(-4)+0]
 24617  0135D2  0EF8               	movlw	-8
 24618  0135D4  006F FF8C  F001    	movff	plusw1,btemp
 24619  0135DA  0EFC               	movlw	-4
 24620  0135DC  0060  F007  FFE3   	movff	btemp,plusw1
 24621                           
 24622                           ;stkvar	_a @ sp[(-4)+-8]
 24623                           ;stkvar	_b @ sp[(-4)+-4]
 24624  0135E2  0EF4               	movlw	-12
 24625  0135E4  006F FF8C  F001    	movff	plusw1,btemp
 24626  0135EA  0EF8               	movlw	-8
 24627  0135EC  0060  F007  FFE3   	movff	btemp,plusw1
 24628                           
 24629                           ;stkvar	_grs @ sp[(-4)+0]
 24630                           ;stkvar	_a @ sp[(-4)+-8]
 24631  0135F2  0EFC               	movlw	-4
 24632  0135F4  006F FF8C  F001    	movff	plusw1,btemp
 24633  0135FA  0EF4               	movlw	-12
 24634  0135FC  0060  F007  FFE3   	movff	btemp,plusw1
 24635                           
 24636                           ;stkvar	_b @ sp[(-4)+-4]
 24637  013602  0EF9               	movlw	249
 24638  013604  24E1               	addwf	fsr1l,w,c
 24639  013606  6ED9               	movwf	fsr2l,c
 24640  013608  0EFF               	movlw	255
 24641  01360A  20E2               	addwfc	fsr1h,w,c
 24642  01360C  6EDA               	movwf	fsr2h,c
 24643  01360E  50DF               	movf	indf2,w,c
 24644  013610  6E0C               	movwf	(btemp+11)^0,c
 24645                           
 24646                           ;stkvar	_grs @ sp[(-4)+0]
 24647  013612  0EFC               	movlw	-4
 24648  013614  0060  F033  FFE3   	movff	btemp+11,plusw1
 24649                           
 24650                           ;stkvar	_a @ sp[(-4)+-8]
 24651  01361A  0EF5               	movlw	245
 24652  01361C  24E1               	addwf	fsr1l,w,c
 24653  01361E  6ED9               	movwf	fsr2l,c
 24654  013620  0EFF               	movlw	255
 24655  013622  20E2               	addwfc	fsr1h,w,c
 24656  013624  6EDA               	movwf	fsr2h,c
 24657                           
 24658                           ;stkvar	_b @ sp[(-4)+-4]
 24659  013626  0EF9               	movlw	249
 24660  013628  24E1               	addwf	fsr1l,w,c
 24661  01362A  6EE9               	movwf	fsr0l,c
 24662  01362C  0EFF               	movlw	255
 24663  01362E  20E2               	addwfc	fsr1h,w,c
 24664  013630  6EEA               	movwf	fsr0h,c
 24665  013632  006F FF7F FFEF     	movff	indf2,indf0
 24666                           
 24667                           ;stkvar	_grs @ sp[(-4)+0]
 24668                           ;stkvar	_a @ sp[(-4)+-8]
 24669  013638  0EF5               	movlw	245
 24670  01363A  24E1               	addwf	fsr1l,w,c
 24671  01363C  6ED9               	movwf	fsr2l,c
 24672  01363E  0EFF               	movlw	255
 24673  013640  20E2               	addwfc	fsr1h,w,c
 24674  013642  6EDA               	movwf	fsr2h,c
 24675  013644  0EFC               	movlw	-4
 24676  013646  006F FF8F FFDF     	movff	plusw1,indf2
 24677                           
 24678                           ;stkvar	_b @ sp[(-4)+-4]
 24679  01364C  0EFA               	movlw	250
 24680  01364E  24E1               	addwf	fsr1l,w,c
 24681  013650  6ED9               	movwf	fsr2l,c
 24682  013652  0EFF               	movlw	255
 24683  013654  20E2               	addwfc	fsr1h,w,c
 24684  013656  6EDA               	movwf	fsr2h,c
 24685  013658  50DF               	movf	indf2,w,c
 24686  01365A  6E0C               	movwf	(btemp+11)^0,c
 24687                           
 24688                           ;stkvar	_grs @ sp[(-4)+0]
 24689  01365C  0EFC               	movlw	-4
 24690  01365E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24691                           
 24692                           ;stkvar	_a @ sp[(-4)+-8]
 24693  013664  0EF6               	movlw	246
 24694  013666  24E1               	addwf	fsr1l,w,c
 24695  013668  6ED9               	movwf	fsr2l,c
 24696  01366A  0EFF               	movlw	255
 24697  01366C  20E2               	addwfc	fsr1h,w,c
 24698  01366E  6EDA               	movwf	fsr2h,c
 24699                           
 24700                           ;stkvar	_b @ sp[(-4)+-4]
 24701  013670  0EFA               	movlw	250
 24702  013672  24E1               	addwf	fsr1l,w,c
 24703  013674  6EE9               	movwf	fsr0l,c
 24704  013676  0EFF               	movlw	255
 24705  013678  20E2               	addwfc	fsr1h,w,c
 24706  01367A  6EEA               	movwf	fsr0h,c
 24707  01367C  006F FF7F FFEF     	movff	indf2,indf0
 24708                           
 24709                           ;stkvar	_grs @ sp[(-4)+0]
 24710                           ;stkvar	_a @ sp[(-4)+-8]
 24711  013682  0EF6               	movlw	246
 24712  013684  24E1               	addwf	fsr1l,w,c
 24713  013686  6ED9               	movwf	fsr2l,c
 24714  013688  0EFF               	movlw	255
 24715  01368A  20E2               	addwfc	fsr1h,w,c
 24716  01368C  6EDA               	movwf	fsr2h,c
 24717  01368E  0EFC               	movlw	-4
 24718  013690  006F FF8F FFDF     	movff	plusw1,indf2
 24719                           
 24720                           ;stkvar	_b @ sp[(-4)+-4]
 24721  013696  0EFB               	movlw	251
 24722  013698  24E1               	addwf	fsr1l,w,c
 24723  01369A  6ED9               	movwf	fsr2l,c
 24724  01369C  0EFF               	movlw	255
 24725  01369E  20E2               	addwfc	fsr1h,w,c
 24726  0136A0  6EDA               	movwf	fsr2h,c
 24727  0136A2  50DF               	movf	indf2,w,c
 24728  0136A4  6E0C               	movwf	(btemp+11)^0,c
 24729                           
 24730                           ;stkvar	_grs @ sp[(-4)+0]
 24731  0136A6  0EFC               	movlw	-4
 24732  0136A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 24733                           
 24734                           ;stkvar	_a @ sp[(-4)+-8]
 24735  0136AE  0EF7               	movlw	247
 24736  0136B0  24E1               	addwf	fsr1l,w,c
 24737  0136B2  6ED9               	movwf	fsr2l,c
 24738  0136B4  0EFF               	movlw	255
 24739  0136B6  20E2               	addwfc	fsr1h,w,c
 24740  0136B8  6EDA               	movwf	fsr2h,c
 24741                           
 24742                           ;stkvar	_b @ sp[(-4)+-4]
 24743  0136BA  0EFB               	movlw	251
 24744  0136BC  24E1               	addwf	fsr1l,w,c
 24745  0136BE  6EE9               	movwf	fsr0l,c
 24746  0136C0  0EFF               	movlw	255
 24747  0136C2  20E2               	addwfc	fsr1h,w,c
 24748  0136C4  6EEA               	movwf	fsr0h,c
 24749  0136C6  006F FF7F FFEF     	movff	indf2,indf0
 24750                           
 24751                           ;stkvar	_grs @ sp[(-4)+0]
 24752                           ;stkvar	_a @ sp[(-4)+-8]
 24753  0136CC  0EF7               	movlw	247
 24754  0136CE  24E1               	addwf	fsr1l,w,c
 24755  0136D0  6ED9               	movwf	fsr2l,c
 24756  0136D2  0EFF               	movlw	255
 24757  0136D4  20E2               	addwfc	fsr1h,w,c
 24758  0136D6  6EDA               	movwf	fsr2h,c
 24759  0136D8  0EFC               	movlw	-4
 24760  0136DA  006F FF8F FFDF     	movff	plusw1,indf2
 24761  0136E0                     l7288:
 24762                           
 24763                           ;stkvar	_grs @ sp[(-4)+0]
 24764  0136E0  0EFC               	movlw	-4
 24765  0136E2  6AE3               	clrf	plusw1,c
 24766                           
 24767                           ;stkvar	_aexp @ sp[(-4)+2]
 24768  0136E4  0EFE               	movlw	-2
 24769  0136E6  50E3               	movf	plusw1,w,c
 24770  0136E8  6E0B               	movwf	(btemp+10)^0,c
 24771  0136EA  6A0C               	clrf	(btemp+11)^0,c
 24772                           
 24773                           ;stkvar	_bexp @ sp[(-4)+1]
 24774  0136EC  0EFD               	movlw	-3
 24775  0136EE  50E3               	movf	plusw1,w,c
 24776  0136F0  5E0B               	subwf	(btemp+10)^0,f,c
 24777  0136F2  0E00               	movlw	0
 24778  0136F4  5A0C               	subwfb	(btemp+11)^0,f,c
 24779  0136F6  BE0C               	btfsc	(btemp+11)^0,7,c
 24780  0136F8  D062               	goto	l7312
 24781  0136FA  500C               	movf	(btemp+11)^0,w,c
 24782  0136FC  E104               	bnz	u5170
 24783  0136FE  0E1A               	movlw	26
 24784  013700  5C0B               	subwf	(btemp+10)^0,w,c
 24785  013702  A0D8               	btfss	status,0,c
 24786  013704  D05C               	goto	l7312
 24787  013706                     u5170:
 24788                           
 24789                           ;stkvar	_b @ sp[(-4)+-4]
 24790  013706  0EF8               	movlw	-8
 24791  013708  50E3               	movf	plusw1,w,c
 24792  01370A  E10A               	bnz	u5181
 24793  01370C  0EF9               	movlw	-7
 24794  01370E  50E3               	movf	plusw1,w,c
 24795  013710  E107               	bnz	u5181
 24796  013712  0EFA               	movlw	-6
 24797  013714  50E3               	movf	plusw1,w,c
 24798  013716  E104               	bnz	u5181
 24799  013718  0EFB               	movlw	-5
 24800  01371A  50E3               	movf	plusw1,w,c
 24801  01371C  B4D8               	btfsc	status,2,c
 24802  01371E  D003               	goto	u5180
 24803  013720                     u5181:
 24804  013720  6A0C               	clrf	(btemp+11)^0,c
 24805  013722  2A0C               	incf	(btemp+11)^0,f,c
 24806  013724  D001               	goto	u5198
 24807  013726                     u5180:
 24808  013726  6A0C               	clrf	(btemp+11)^0,c
 24809  013728                     u5198:
 24810                           
 24811                           ;stkvar	_grs @ sp[(-4)+0]
 24812  013728  0EFC               	movlw	-4
 24813  01372A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24814                           
 24815                           ;stkvar	_b @ sp[(-4)+-4]
 24816  013730  0EF8               	movlw	-8
 24817  013732  6AE3               	clrf	plusw1,c
 24818  013734  0EF9               	movlw	-7
 24819  013736  6AE3               	clrf	plusw1,c
 24820  013738  0EFA               	movlw	-6
 24821  01373A  6AE3               	clrf	plusw1,c
 24822  01373C  0EFB               	movlw	-5
 24823  01373E  6AE3               	clrf	plusw1,c
 24824                           
 24825                           ;stkvar	_aexp @ sp[(-4)+2]
 24826                           ;stkvar	_bexp @ sp[(-4)+1]
 24827  013740  0EFE               	movlw	-2
 24828  013742  006F FF8C  F001    	movff	plusw1,btemp
 24829  013748  0EFD               	movlw	-3
 24830  01374A  0060  F007  FFE3   	movff	btemp,plusw1
 24831  013750  D042               	goto	u5230
 24832  013752                     l7298:
 24833                           
 24834                           ;stkvar	_grs @ sp[(-4)+0]
 24835  013752  0EFC               	movlw	-4
 24836  013754  A0E3               	btfss	plusw1,0,c
 24837  013756  D00D               	goto	l7302
 24838                           
 24839                           ;stkvar	_grs @ sp[(-4)+0]
 24840  013758  0EFC               	movlw	-4
 24841  01375A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24842  013760  90D8               	bcf	status,0,c
 24843  013762  320C               	rrcf	(btemp+11)^0,f,c
 24844  013764  0E01               	movlw	1
 24845  013766  120C               	iorwf	(btemp+11)^0,f,c
 24846                           
 24847                           ;stkvar	_grs @ sp[(-4)+0]
 24848  013768  0EFC               	movlw	-4
 24849  01376A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24850  013770  D009               	goto	l7304
 24851  013772                     l7302:
 24852                           
 24853                           ;stkvar	_grs @ sp[(-4)+0]
 24854  013772  50E1               	movf	fsr1l,w,c
 24855  013774  0FFC               	addlw	-4
 24856  013776  6ED9               	movwf	fsr2l,c
 24857  013778  50E2               	movf	fsr1h,w,c
 24858  01377A  6EDA               	movwf	fsr2h,c
 24859  01377C  0EFF               	movlw	255
 24860  01377E  22DA               	addwfc	fsr2h,f,c
 24861  013780  90D8               	bcf	status,0,c
 24862  013782  32DF               	rrcf	indf2,f,c
 24863  013784                     l7304:
 24864                           
 24865                           ;stkvar	_b @ sp[(-4)+-4]
 24866  013784  0EF8               	movlw	-8
 24867  013786  A0E3               	btfss	plusw1,0,c
 24868  013788  D002               	goto	l7308
 24869                           
 24870                           ;stkvar	_grs @ sp[(-4)+0]
 24871  01378A  0EFC               	movlw	-4
 24872  01378C  8EE3               	bsf	plusw1,7,c
 24873  01378E                     l7308:
 24874  01378E  0E01               	movlw	1
 24875  013790  6E0C               	movwf	(btemp+11)^0,c
 24876                           
 24877                           ;stkvar	_b @ sp[(-4)+-4]
 24878  013792  50E1               	movf	fsr1l,w,c
 24879  013794  0FF8               	addlw	-8
 24880  013796  6ED9               	movwf	fsr2l,c
 24881  013798  50E2               	movf	fsr1h,w,c
 24882  01379A  6EDA               	movwf	fsr2h,c
 24883  01379C  0EFF               	movlw	255
 24884  01379E  22DA               	addwfc	fsr2h,f,c
 24885  0137A0  280C               	incf	(btemp+11)^0,w,c
 24886  0137A2  52DE               	movf	postinc2,f,c
 24887  0137A4  D008               	goto	u5220
 24888  0137A6                     u5225:
 24889  0137A6  52DE               	movf	postinc2,f,c
 24890  0137A8  90D8               	bcf	status,0,c
 24891  0137AA  BEDC               	btfsc	preinc2,7,c
 24892  0137AC  80D8               	bsf	status,0,c
 24893  0137AE  32DD               	rrcf	postdec2,f,c
 24894  0137B0  32DD               	rrcf	postdec2,f,c
 24895  0137B2  32DD               	rrcf	postdec2,f,c
 24896  0137B4  32DE               	rrcf	postinc2,f,c
 24897  0137B6                     u5220:
 24898  0137B6  2EE8               	decfsz	wreg,f,c
 24899  0137B8  D7F6               	goto	u5225
 24900                           
 24901                           ;stkvar	_bexp @ sp[(-4)+1]
 24902  0137BA  0EFD               	movlw	-3
 24903  0137BC  2AE3               	incf	plusw1,f,c
 24904  0137BE                     l7312:
 24905                           
 24906                           ;stkvar	_aexp @ sp[(-4)+2]
 24907                           ;stkvar	_bexp @ sp[(-4)+1]
 24908  0137BE  50E1               	movf	fsr1l,w,c
 24909  0137C0  0FFD               	addlw	-3
 24910  0137C2  6ED9               	movwf	fsr2l,c
 24911  0137C4  50E2               	movf	fsr1h,w,c
 24912  0137C6  6EDA               	movwf	fsr2h,c
 24913  0137C8  0EFF               	movlw	255
 24914  0137CA  22DA               	addwfc	fsr2h,f,c
 24915  0137CC  0EFE               	movlw	-2
 24916  0137CE  50E3               	movf	plusw1,w,c
 24917  0137D0  5CDE               	subwf	postinc2,w,c
 24918  0137D2  A0D8               	btfss	status,0,c
 24919  0137D4  D7BE               	goto	l7298
 24920  0137D6                     u5230:
 24921                           
 24922                           ;stkvar	_signs @ sp[(-4)+3]
 24923  0137D6  0EFF               	movlw	-1
 24924  0137D8  BCE3               	btfsc	plusw1,6,c
 24925  0137DA  D066               	goto	l7340
 24926                           
 24927                           ;stkvar	_bexp @ sp[(-4)+1]
 24928  0137DC  0EFD               	movlw	-3
 24929  0137DE  50E3               	movf	plusw1,w,c
 24930  0137E0  B4D8               	btfsc	status,2,c
 24931  0137E2  D0F2               	goto	u5330
 24932                           
 24933                           ;stkvar	_a @ sp[(-4)+-8]
 24934                           ;stkvar	_b @ sp[(-4)+-4]
 24935  0137E4  0EF8               	movlw	-8
 24936  0137E6  50E3               	movf	plusw1,w,c
 24937  0137E8  6E01               	movwf	btemp^0,c
 24938  0137EA  0EF4               	movlw	-12
 24939  0137EC  50E3               	movf	plusw1,w,c
 24940  0137EE  2601               	addwf	btemp^0,f,c
 24941  0137F0  0EF8               	movlw	-8
 24942  0137F2  0060  F007  FFE3   	movff	btemp,plusw1
 24943  0137F8  0EF9               	movlw	-7
 24944  0137FA  50E3               	movf	plusw1,w,c
 24945  0137FC  6E01               	movwf	btemp^0,c
 24946  0137FE  0EF5               	movlw	-11
 24947  013800  50E3               	movf	plusw1,w,c
 24948  013802  2201               	addwfc	btemp^0,f,c
 24949  013804  0EF9               	movlw	-7
 24950  013806  0060  F007  FFE3   	movff	btemp,plusw1
 24951  01380C  0EFA               	movlw	-6
 24952  01380E  50E3               	movf	plusw1,w,c
 24953  013810  6E01               	movwf	btemp^0,c
 24954  013812  0EF6               	movlw	-10
 24955  013814  50E3               	movf	plusw1,w,c
 24956  013816  2201               	addwfc	btemp^0,f,c
 24957  013818  0EFA               	movlw	-6
 24958  01381A  0060  F007  FFE3   	movff	btemp,plusw1
 24959  013820  0EFB               	movlw	-5
 24960  013822  50E3               	movf	plusw1,w,c
 24961  013824  6E01               	movwf	btemp^0,c
 24962  013826  0EF7               	movlw	-9
 24963  013828  50E3               	movf	plusw1,w,c
 24964  01382A  2201               	addwfc	btemp^0,f,c
 24965  01382C  0EFB               	movlw	-5
 24966  01382E  0060  F007  FFE3   	movff	btemp,plusw1
 24967                           
 24968                           ;stkvar	_b @ sp[(-4)+-4]
 24969  013834  0EFB               	movlw	-5
 24970  013836  A0E3               	btfss	plusw1,0,c
 24971  013838  D101               	goto	u5370
 24972                           
 24973                           ;stkvar	_grs @ sp[(-4)+0]
 24974  01383A  0EFC               	movlw	-4
 24975  01383C  A0E3               	btfss	plusw1,0,c
 24976  01383E  D00D               	goto	l7330
 24977                           
 24978                           ;stkvar	_grs @ sp[(-4)+0]
 24979  013840  0EFC               	movlw	-4
 24980  013842  006F FF8C  F00C    	movff	plusw1,btemp+11
 24981  013848  90D8               	bcf	status,0,c
 24982  01384A  320C               	rrcf	(btemp+11)^0,f,c
 24983  01384C  0E01               	movlw	1
 24984  01384E  120C               	iorwf	(btemp+11)^0,f,c
 24985                           
 24986                           ;stkvar	_grs @ sp[(-4)+0]
 24987  013850  0EFC               	movlw	-4
 24988  013852  0060  F033  FFE3   	movff	btemp+11,plusw1
 24989  013858  D009               	goto	l7332
 24990  01385A                     l7330:
 24991                           
 24992                           ;stkvar	_grs @ sp[(-4)+0]
 24993  01385A  50E1               	movf	fsr1l,w,c
 24994  01385C  0FFC               	addlw	-4
 24995  01385E  6ED9               	movwf	fsr2l,c
 24996  013860  50E2               	movf	fsr1h,w,c
 24997  013862  6EDA               	movwf	fsr2h,c
 24998  013864  0EFF               	movlw	255
 24999  013866  22DA               	addwfc	fsr2h,f,c
 25000  013868  90D8               	bcf	status,0,c
 25001  01386A  32DF               	rrcf	indf2,f,c
 25002  01386C                     l7332:
 25003                           
 25004                           ;stkvar	_b @ sp[(-4)+-4]
 25005  01386C  0EF8               	movlw	-8
 25006  01386E  A0E3               	btfss	plusw1,0,c
 25007  013870  D002               	goto	l7336
 25008                           
 25009                           ;stkvar	_grs @ sp[(-4)+0]
 25010  013872  0EFC               	movlw	-4
 25011  013874  8EE3               	bsf	plusw1,7,c
 25012  013876                     l7336:
 25013  013876  0E01               	movlw	1
 25014  013878  6E0C               	movwf	(btemp+11)^0,c
 25015                           
 25016                           ;stkvar	_b @ sp[(-4)+-4]
 25017  01387A  50E1               	movf	fsr1l,w,c
 25018  01387C  0FF8               	addlw	-8
 25019  01387E  6ED9               	movwf	fsr2l,c
 25020  013880  50E2               	movf	fsr1h,w,c
 25021  013882  6EDA               	movwf	fsr2h,c
 25022  013884  0EFF               	movlw	255
 25023  013886  22DA               	addwfc	fsr2h,f,c
 25024  013888  280C               	incf	(btemp+11)^0,w,c
 25025  01388A  52DE               	movf	postinc2,f,c
 25026  01388C  D008               	goto	u5290
 25027  01388E                     u5295:
 25028  01388E  52DE               	movf	postinc2,f,c
 25029  013890  90D8               	bcf	status,0,c
 25030  013892  BEDC               	btfsc	preinc2,7,c
 25031  013894  80D8               	bsf	status,0,c
 25032  013896  32DD               	rrcf	postdec2,f,c
 25033  013898  32DD               	rrcf	postdec2,f,c
 25034  01389A  32DD               	rrcf	postdec2,f,c
 25035  01389C  32DE               	rrcf	postinc2,f,c
 25036  01389E                     u5290:
 25037  01389E  2EE8               	decfsz	wreg,f,c
 25038  0138A0  D7F6               	goto	u5295
 25039                           
 25040                           ;stkvar	_bexp @ sp[(-4)+1]
 25041  0138A2  0EFD               	movlw	-3
 25042  0138A4  2AE3               	incf	plusw1,f,c
 25043  0138A6  D0CA               	goto	u5370
 25044  0138A8                     l7340:
 25045                           
 25046                           ;stkvar	_a @ sp[(-4)+-8]
 25047                           ;stkvar	_b @ sp[(-4)+-4]
 25048  0138A8  50E1               	movf	fsr1l,w,c
 25049  0138AA  0FF8               	addlw	-8
 25050  0138AC  6ED9               	movwf	fsr2l,c
 25051  0138AE  50E2               	movf	fsr1h,w,c
 25052  0138B0  6EDA               	movwf	fsr2h,c
 25053  0138B2  0EFF               	movlw	255
 25054  0138B4  22DA               	addwfc	fsr2h,f,c
 25055  0138B6  0EF4               	movlw	-12
 25056  0138B8  50E3               	movf	plusw1,w,c
 25057  0138BA  5CDE               	subwf	postinc2,w,c
 25058  0138BC  0EF5               	movlw	-11
 25059  0138BE  50E3               	movf	plusw1,w,c
 25060  0138C0  58DE               	subwfb	postinc2,w,c
 25061  0138C2  0EF6               	movlw	-10
 25062  0138C4  50E3               	movf	plusw1,w,c
 25063  0138C6  58DE               	subwfb	postinc2,w,c
 25064  0138C8  50DE               	movf	postinc2,w,c
 25065  0138CA  0A80               	xorlw	128
 25066  0138CC  6E01               	movwf	btemp^0,c
 25067  0138CE  0EF7               	movlw	-9
 25068  0138D0  50E3               	movf	plusw1,w,c
 25069  0138D2  0A80               	xorlw	128
 25070  0138D4  5801               	subwfb	btemp^0,w,c
 25071  0138D6  B0D8               	btfsc	status,0,c
 25072  0138D8  D053               	goto	l7352
 25073                           
 25074                           ;stkvar	_b @ sp[(-4)+-4]
 25075                           ;stkvar	_a @ sp[(-4)+-8]
 25076  0138DA  0EF4               	movlw	-12
 25077  0138DC  006F FF8C  F009    	movff	plusw1,btemp+8
 25078  0138E2  0EF5               	movlw	-11
 25079  0138E4  006F FF8C  F00A    	movff	plusw1,btemp+9
 25080  0138EA  0EF6               	movlw	-10
 25081  0138EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 25082  0138F2  0EF7               	movlw	-9
 25083  0138F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25084  0138FA  0EF8               	movlw	-8
 25085  0138FC  50E3               	movf	plusw1,w,c
 25086  0138FE  5E09               	subwf	(btemp+8)^0,f,c
 25087  013900  0EF9               	movlw	-7
 25088  013902  50E3               	movf	plusw1,w,c
 25089  013904  5A0A               	subwfb	(btemp+9)^0,f,c
 25090  013906  0EFA               	movlw	-6
 25091  013908  50E3               	movf	plusw1,w,c
 25092  01390A  5A0B               	subwfb	(btemp+10)^0,f,c
 25093  01390C  0EFB               	movlw	-5
 25094  01390E  50E3               	movf	plusw1,w,c
 25095  013910  5A0C               	subwfb	(btemp+11)^0,f,c
 25096  013912  0EFF               	movlw	255
 25097  013914  2409               	addwf	(btemp+8)^0,w,c
 25098  013916  6E05               	movwf	(btemp+4)^0,c
 25099  013918  0EFF               	movlw	255
 25100  01391A  200A               	addwfc	(btemp+9)^0,w,c
 25101  01391C  6E06               	movwf	(btemp+5)^0,c
 25102  01391E  0EFF               	movlw	255
 25103  013920  200B               	addwfc	(btemp+10)^0,w,c
 25104  013922  6E07               	movwf	(btemp+6)^0,c
 25105  013924  0EFF               	movlw	255
 25106  013926  200C               	addwfc	(btemp+11)^0,w,c
 25107  013928  6E08               	movwf	(btemp+7)^0,c
 25108                           
 25109                           ;stkvar	_b @ sp[(-4)+-4]
 25110  01392A  0EF8               	movlw	-8
 25111  01392C  0060  F017  FFE3   	movff	btemp+4,plusw1
 25112  013932  0EF9               	movlw	-7
 25113  013934  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25114  01393A  0EFA               	movlw	-6
 25115  01393C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25116  013942  0EFB               	movlw	-5
 25117  013944  0060  F023  FFE3   	movff	btemp+7,plusw1
 25118                           
 25119                           ;stkvar	_signs @ sp[(-4)+3]
 25120  01394A  0EFF               	movlw	-1
 25121  01394C  7EE3               	btg	plusw1,7,c
 25122                           
 25123                           ;stkvar	_grs @ sp[(-4)+0]
 25124  01394E  0EFC               	movlw	-4
 25125  013950  50E3               	movf	plusw1,w,c
 25126  013952  0800               	sublw	0
 25127  013954  6E0C               	movwf	(btemp+11)^0,c
 25128                           
 25129                           ;stkvar	_grs @ sp[(-4)+0]
 25130  013956  0EFC               	movlw	-4
 25131  013958  0060  F033  FFE3   	movff	btemp+11,plusw1
 25132                           
 25133                           ;stkvar	_grs @ sp[(-4)+0]
 25134  01395E  0EFC               	movlw	-4
 25135  013960  50E3               	movf	plusw1,w,c
 25136  013962  A4D8               	btfss	status,2,c
 25137  013964  D020               	goto	l7354
 25138                           
 25139                           ;stkvar	_b @ sp[(-4)+-4]
 25140  013966  50E1               	movf	fsr1l,w,c
 25141  013968  0FF8               	addlw	-8
 25142  01396A  6ED9               	movwf	fsr2l,c
 25143  01396C  50E2               	movf	fsr1h,w,c
 25144  01396E  6EDA               	movwf	fsr2h,c
 25145  013970  0EFF               	movlw	255
 25146  013972  22DA               	addwfc	fsr2h,f,c
 25147  013974  2ADE               	incf	postinc2,f,c
 25148  013976  0E00               	movlw	0
 25149  013978  22DE               	addwfc	postinc2,f,c
 25150  01397A  22DE               	addwfc	postinc2,f,c
 25151  01397C  22DE               	addwfc	postinc2,f,c
 25152  01397E  D013               	goto	l7354
 25153  013980                     l7352:
 25154                           
 25155                           ;stkvar	_a @ sp[(-4)+-8]
 25156                           ;stkvar	_b @ sp[(-4)+-4]
 25157  013980  50E1               	movf	fsr1l,w,c
 25158  013982  0FF8               	addlw	-8
 25159  013984  6ED9               	movwf	fsr2l,c
 25160  013986  50E2               	movf	fsr1h,w,c
 25161  013988  6EDA               	movwf	fsr2h,c
 25162  01398A  0EFF               	movlw	255
 25163  01398C  22DA               	addwfc	fsr2h,f,c
 25164  01398E  0EF4               	movlw	-12
 25165  013990  50E3               	movf	plusw1,w,c
 25166  013992  5EDE               	subwf	postinc2,f,c
 25167  013994  0EF5               	movlw	-11
 25168  013996  50E3               	movf	plusw1,w,c
 25169  013998  5ADE               	subwfb	postinc2,f,c
 25170  01399A  0EF6               	movlw	-10
 25171  01399C  50E3               	movf	plusw1,w,c
 25172  01399E  5ADE               	subwfb	postinc2,f,c
 25173  0139A0  0EF7               	movlw	-9
 25174  0139A2  50E3               	movf	plusw1,w,c
 25175  0139A4  5ADE               	subwfb	postinc2,f,c
 25176  0139A6                     l7354:
 25177                           
 25178                           ;stkvar	_b @ sp[(-4)+-4]
 25179  0139A6  0EF8               	movlw	-8
 25180  0139A8  50E3               	movf	plusw1,w,c
 25181  0139AA  E145               	bnz	l7376
 25182  0139AC  0EF9               	movlw	-7
 25183  0139AE  50E3               	movf	plusw1,w,c
 25184  0139B0  E142               	bnz	l7376
 25185  0139B2  0EFA               	movlw	-6
 25186  0139B4  50E3               	movf	plusw1,w,c
 25187  0139B6  E13F               	bnz	l7376
 25188  0139B8  0EFB               	movlw	-5
 25189  0139BA  50E3               	movf	plusw1,w,c
 25190  0139BC  A4D8               	btfss	status,2,c
 25191  0139BE  D03B               	goto	l7376
 25192                           
 25193                           ;stkvar	_grs @ sp[(-4)+0]
 25194  0139C0  0EFC               	movlw	-4
 25195  0139C2  50E3               	movf	plusw1,w,c
 25196  0139C4  A4D8               	btfss	status,2,c
 25197  0139C6  D037               	goto	l7376
 25198  0139C8                     u5330:
 25199  0139C8  0E00               	movlw	0
 25200  0139CA  6E01               	movwf	btemp^0,c
 25201  0139CC  0E00               	movlw	0
 25202  0139CE  6E02               	movwf	(btemp+1)^0,c
 25203  0139D0  0E00               	movlw	0
 25204  0139D2  6E03               	movwf	(btemp+2)^0,c
 25205  0139D4  0E00               	movlw	0
 25206  0139D6  6E04               	movwf	(btemp+3)^0,c
 25207  0139D8  D0C6               	goto	l2842
 25208  0139DA                     l7362:
 25209                           
 25210                           ;stkvar	_b @ sp[(-4)+-4]
 25211  0139DA  90D8               	bcf	status,0,c
 25212  0139DC  0EF8               	movlw	-8
 25213  0139DE  36E3               	rlcf	plusw1,f,c
 25214  0139E0  0EF9               	movlw	-7
 25215  0139E2  36E3               	rlcf	plusw1,f,c
 25216  0139E4  0EFA               	movlw	-6
 25217  0139E6  36E3               	rlcf	plusw1,f,c
 25218  0139E8  0EFB               	movlw	-5
 25219  0139EA  36E3               	rlcf	plusw1,f,c
 25220                           
 25221                           ;stkvar	_grs @ sp[(-4)+0]
 25222  0139EC  0EFC               	movlw	-4
 25223  0139EE  AEE3               	btfss	plusw1,7,c
 25224  0139F0  D002               	goto	l2854
 25225                           
 25226                           ;stkvar	_b @ sp[(-4)+-4]
 25227  0139F2  0EF8               	movlw	-8
 25228  0139F4  80E3               	bsf	plusw1,0,c
 25229  0139F6                     l2854:
 25230                           
 25231                           ;stkvar	_grs @ sp[(-4)+0]
 25232  0139F6  0EFC               	movlw	-4
 25233  0139F8  A0E3               	btfss	plusw1,0,c
 25234  0139FA  D00E               	goto	l7370
 25235                           
 25236                           ;stkvar	_grs @ sp[(-4)+0]
 25237  0139FC  0EFC               	movlw	-4
 25238  0139FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25239  013A04  90D8               	bcf	status,0,c
 25240  013A06  340C               	rlcf	(btemp+11)^0,w,c
 25241  013A08  6E0B               	movwf	(btemp+10)^0,c
 25242  013A0A  0E01               	movlw	1
 25243  013A0C  120B               	iorwf	(btemp+10)^0,f,c
 25244                           
 25245                           ;stkvar	_grs @ sp[(-4)+0]
 25246  013A0E  0EFC               	movlw	-4
 25247  013A10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25248  013A16  D009               	goto	l7372
 25249  013A18                     l7370:
 25250                           
 25251                           ;stkvar	_grs @ sp[(-4)+0]
 25252  013A18  50E1               	movf	fsr1l,w,c
 25253  013A1A  0FFC               	addlw	-4
 25254  013A1C  6ED9               	movwf	fsr2l,c
 25255  013A1E  50E2               	movf	fsr1h,w,c
 25256  013A20  6EDA               	movwf	fsr2h,c
 25257  013A22  0EFF               	movlw	255
 25258  013A24  22DA               	addwfc	fsr2h,f,c
 25259  013A26  90D8               	bcf	status,0,c
 25260  013A28  36DF               	rlcf	indf2,f,c
 25261  013A2A                     l7372:
 25262                           
 25263                           ;stkvar	_bexp @ sp[(-4)+1]
 25264  013A2A  0EFD               	movlw	-3
 25265  013A2C  50E3               	movf	plusw1,w,c
 25266  013A2E  B4D8               	btfsc	status,2,c
 25267  013A30  D002               	goto	l7376
 25268                           
 25269                           ;stkvar	_bexp @ sp[(-4)+1]
 25270  013A32  0EFD               	movlw	-3
 25271  013A34  06E3               	decf	plusw1,f,c
 25272  013A36                     l7376:
 25273                           
 25274                           ;stkvar	_b @ sp[(-4)+-4]
 25275  013A36  0EFA               	movlw	-6
 25276  013A38  AEE3               	btfss	plusw1,7,c
 25277  013A3A  D7CF               	goto	l7362
 25278  013A3C                     u5370:
 25279                           
 25280                           ;stkvar	_aexp @ sp[(-4)+2]
 25281  013A3C  0EFE               	movlw	-2
 25282  013A3E  6AE3               	clrf	plusw1,c
 25283                           
 25284                           ;stkvar	_grs @ sp[(-4)+0]
 25285  013A40  0EFC               	movlw	-4
 25286  013A42  AEE3               	btfss	plusw1,7,c
 25287  013A44  D00F               	goto	l7390
 25288                           
 25289                           ;stkvar	_grs @ sp[(-4)+0]
 25290  013A46  0EFC               	movlw	-4
 25291  013A48  006F FF8C  F00C    	movff	plusw1,btemp+11
 25292  013A4E  0E7F               	movlw	127
 25293  013A50  160C               	andwf	(btemp+11)^0,f,c
 25294  013A52  B4D8               	btfsc	status,2,c
 25295  013A54  D004               	goto	l7386
 25296  013A56                     u5390:
 25297                           
 25298                           ;stkvar	_aexp @ sp[(-4)+2]
 25299  013A56  0EFE               	movlw	-2
 25300  013A58  6AE3               	clrf	plusw1,c
 25301  013A5A  2AE3               	incf	plusw1,f,c
 25302  013A5C  D003               	goto	l7390
 25303  013A5E                     l7386:
 25304                           
 25305                           ;stkvar	_b @ sp[(-4)+-4]
 25306  013A5E  0EF8               	movlw	-8
 25307  013A60  B0E3               	btfsc	plusw1,0,c
 25308  013A62  D7F9               	goto	u5390
 25309  013A64                     l7390:
 25310                           
 25311                           ;stkvar	_aexp @ sp[(-4)+2]
 25312  013A64  0EFE               	movlw	-2
 25313  013A66  50E3               	movf	plusw1,w,c
 25314  013A68  B4D8               	btfsc	status,2,c
 25315  013A6A  D02B               	goto	l7402
 25316                           
 25317                           ;stkvar	_b @ sp[(-4)+-4]
 25318  013A6C  50E1               	movf	fsr1l,w,c
 25319  013A6E  0FF8               	addlw	-8
 25320  013A70  6ED9               	movwf	fsr2l,c
 25321  013A72  50E2               	movf	fsr1h,w,c
 25322  013A74  6EDA               	movwf	fsr2h,c
 25323  013A76  0EFF               	movlw	255
 25324  013A78  22DA               	addwfc	fsr2h,f,c
 25325  013A7A  2ADE               	incf	postinc2,f,c
 25326  013A7C  0E00               	movlw	0
 25327  013A7E  22DE               	addwfc	postinc2,f,c
 25328  013A80  22DE               	addwfc	postinc2,f,c
 25329  013A82  22DE               	addwfc	postinc2,f,c
 25330                           
 25331                           ;stkvar	_b @ sp[(-4)+-4]
 25332  013A84  0EFB               	movlw	-5
 25333  013A86  A0E3               	btfss	plusw1,0,c
 25334  013A88  D01C               	goto	l7402
 25335  013A8A  0E01               	movlw	1
 25336  013A8C  6E0C               	movwf	(btemp+11)^0,c
 25337                           
 25338                           ;stkvar	_b @ sp[(-4)+-4]
 25339  013A8E  50E1               	movf	fsr1l,w,c
 25340  013A90  0FF8               	addlw	-8
 25341  013A92  6ED9               	movwf	fsr2l,c
 25342  013A94  50E2               	movf	fsr1h,w,c
 25343  013A96  6EDA               	movwf	fsr2h,c
 25344  013A98  0EFF               	movlw	255
 25345  013A9A  22DA               	addwfc	fsr2h,f,c
 25346  013A9C  280C               	incf	(btemp+11)^0,w,c
 25347  013A9E  52DE               	movf	postinc2,f,c
 25348  013AA0  D008               	goto	u5430
 25349  013AA2                     u5435:
 25350  013AA2  52DE               	movf	postinc2,f,c
 25351  013AA4  90D8               	bcf	status,0,c
 25352  013AA6  BEDC               	btfsc	preinc2,7,c
 25353  013AA8  80D8               	bsf	status,0,c
 25354  013AAA  32DD               	rrcf	postdec2,f,c
 25355  013AAC  32DD               	rrcf	postdec2,f,c
 25356  013AAE  32DD               	rrcf	postdec2,f,c
 25357  013AB0  32DE               	rrcf	postinc2,f,c
 25358  013AB2                     u5430:
 25359  013AB2  2EE8               	decfsz	wreg,f,c
 25360  013AB4  D7F6               	goto	u5435
 25361                           
 25362                           ;stkvar	_bexp @ sp[(-4)+1]
 25363  013AB6  0EFD               	movlw	-3
 25364  013AB8  28E3               	incf	plusw1,w,c
 25365  013ABA  B4D8               	btfsc	status,2,c
 25366  013ABC  D002               	goto	l7402
 25367                           
 25368                           ;stkvar	_bexp @ sp[(-4)+1]
 25369  013ABE  0EFD               	movlw	-3
 25370  013AC0  2AE3               	incf	plusw1,f,c
 25371  013AC2                     l7402:
 25372                           
 25373                           ;stkvar	_bexp @ sp[(-4)+1]
 25374  013AC2  0EFD               	movlw	-3
 25375  013AC4  28E3               	incf	plusw1,w,c
 25376  013AC6  B4D8               	btfsc	status,2,c
 25377  013AC8  D004               	goto	u5460
 25378                           
 25379                           ;stkvar	_bexp @ sp[(-4)+1]
 25380  013ACA  0EFD               	movlw	-3
 25381  013ACC  50E3               	movf	plusw1,w,c
 25382  013ACE  A4D8               	btfss	status,2,c
 25383  013AD0  D00E               	goto	l7412
 25384  013AD2                     u5460:
 25385                           
 25386                           ;stkvar	_b @ sp[(-4)+-4]
 25387  013AD2  0EF8               	movlw	-8
 25388  013AD4  6AE3               	clrf	plusw1,c
 25389  013AD6  0EF9               	movlw	-7
 25390  013AD8  6AE3               	clrf	plusw1,c
 25391  013ADA  0EFA               	movlw	-6
 25392  013ADC  6AE3               	clrf	plusw1,c
 25393  013ADE  0EFB               	movlw	-5
 25394  013AE0  6AE3               	clrf	plusw1,c
 25395                           
 25396                           ;stkvar	_bexp @ sp[(-4)+1]
 25397  013AE2  0EFD               	movlw	-3
 25398  013AE4  50E3               	movf	plusw1,w,c
 25399  013AE6  A4D8               	btfss	status,2,c
 25400  013AE8  D002               	goto	l7412
 25401                           
 25402                           ;stkvar	_signs @ sp[(-4)+3]
 25403  013AEA  0EFF               	movlw	-1
 25404  013AEC  6AE3               	clrf	plusw1,c
 25405  013AEE                     l7412:
 25406                           
 25407                           ;stkvar	_bexp @ sp[(-4)+1]
 25408  013AEE  0EFD               	movlw	-3
 25409  013AF0  A0E3               	btfss	plusw1,0,c
 25410  013AF2  D009               	goto	l7416
 25411                           
 25412                           ;stkvar	_b @ sp[(-4)+-4]
 25413  013AF4  0EFA               	movlw	250
 25414  013AF6  24E1               	addwf	fsr1l,w,c
 25415  013AF8  6ED9               	movwf	fsr2l,c
 25416  013AFA  0EFF               	movlw	255
 25417  013AFC  20E2               	addwfc	fsr1h,w,c
 25418  013AFE  6EDA               	movwf	fsr2h,c
 25419  013B00  0E00               	movlw	0
 25420  013B02  8EDB               	bsf	plusw2,7,c
 25421  013B04  D008               	goto	l7418
 25422  013B06                     l7416:
 25423                           
 25424                           ;stkvar	_b @ sp[(-4)+-4]
 25425  013B06  0EFA               	movlw	250
 25426  013B08  24E1               	addwf	fsr1l,w,c
 25427  013B0A  6ED9               	movwf	fsr2l,c
 25428  013B0C  0EFF               	movlw	255
 25429  013B0E  20E2               	addwfc	fsr1h,w,c
 25430  013B10  6EDA               	movwf	fsr2h,c
 25431  013B12  0E7F               	movlw	127
 25432  013B14  16DF               	andwf	indf2,f,c
 25433  013B16                     l7418:
 25434                           
 25435                           ;stkvar	_b @ sp[(-4)+-4]
 25436  013B16  0EFB               	movlw	251
 25437  013B18  24E1               	addwf	fsr1l,w,c
 25438  013B1A  6ED9               	movwf	fsr2l,c
 25439  013B1C  0EFF               	movlw	255
 25440  013B1E  20E2               	addwfc	fsr1h,w,c
 25441  013B20  6EDA               	movwf	fsr2h,c
 25442                           
 25443                           ;stkvar	_bexp @ sp[(-4)+1]
 25444  013B22  0EFD               	movlw	-3
 25445  013B24  006F FF8C  F00C    	movff	plusw1,btemp+11
 25446  013B2A  90D8               	bcf	status,0,c
 25447  013B2C  300C               	rrcf	(btemp+11)^0,w,c
 25448  013B2E  6EDF               	movwf	indf2,c
 25449                           
 25450                           ;stkvar	_signs @ sp[(-4)+3]
 25451  013B30  0EFF               	movlw	-1
 25452  013B32  AEE3               	btfss	plusw1,7,c
 25453  013B34  D008               	goto	l7424
 25454                           
 25455                           ;stkvar	_b @ sp[(-4)+-4]
 25456  013B36  0EFB               	movlw	251
 25457  013B38  24E1               	addwf	fsr1l,w,c
 25458  013B3A  6ED9               	movwf	fsr2l,c
 25459  013B3C  0EFF               	movlw	255
 25460  013B3E  20E2               	addwfc	fsr1h,w,c
 25461  013B40  6EDA               	movwf	fsr2h,c
 25462  013B42  0E00               	movlw	0
 25463  013B44  8EDB               	bsf	plusw2,7,c
 25464  013B46                     l7424:
 25465                           
 25466                           ;stkvar	_b @ sp[(-4)+-4]
 25467  013B46  0EF8               	movlw	-8
 25468  013B48  006F FF8C  F001    	movff	plusw1,btemp
 25469  013B4E  0EF9               	movlw	-7
 25470  013B50  006F FF8C  F002    	movff	plusw1,btemp+1
 25471  013B56  0EFA               	movlw	-6
 25472  013B58  006F FF8C  F003    	movff	plusw1,btemp+2
 25473  013B5E  0EFB               	movlw	-5
 25474  013B60  006F FF8C  F004    	movff	plusw1,btemp+3
 25475  013B66                     l2842:
 25476                           
 25477                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 25478  013B66  0EF4               	movlw	244
 25479  013B68  26E1               	addwf	fsr1l,f,c
 25480  013B6A  0EFF               	movlw	255
 25481  013B6C  22E2               	addwfc	fsr1h,f,c
 25482  013B6E  0012               	return		;funcret
 25483  013B70                     __end_of___fladd:
 25484                           	opt callstack 0
 25485                           
 25486 ;; *************** function ___flmul *****************
 25487 ;; Defined at:
 25488 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 25489 ;; Parameters:    Size  Location     Type
 25490 ;;  b               4  [STACK] unsigned char 
 25491 ;;  a               4  [STACK] unsigned char 
 25492 ;; Auto vars:     Size  Location     Type
 25493 ;;  prod            4  [STACK] struct .
 25494 ;;  grs             4  [STACK] unsigned long 
 25495 ;;  temp            2  [STACK] struct .
 25496 ;;  bexp            1  [STACK] unsigned char 
 25497 ;;  aexp            1  [STACK] unsigned char 
 25498 ;;  sign            1  [STACK] unsigned char 
 25499 ;; Return value:  Size  Location     Type
 25500 ;;                  4  [STACK] unsigned char 
 25501 ;; Registers used:
 25502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25503 ;; Tracked objects:
 25504 ;;		On entry : 0/1
 25505 ;;		On exit  : 0/0
 25506 ;;		Unchanged: 0/0
 25507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25512 ;;Total ram usage:        0 bytes
 25513 ;; Hardware stack levels used:    1
 25514 ;; Hardware stack levels required when called:   15
 25515 ;; This function calls:
 25516 ;;		Nothing
 25517 ;; This function is called by:
 25518 ;;		_conv_raw_result
 25519 ;;		_lp_filter
 25520 ;;		_calc_model_data
 25521 ;;		_calc_bsoc
 25522 ;;		_init_bsoc
 25523 ;;		_efgtoa
 25524 ;; This function uses a reentrant model
 25525 ;;
 25526                           
 25527                           	psect	text103
 25528  012B8A                     __ptext103:
 25529                           	opt callstack 0
 25530  012B8A                     ___flmul:
 25531                           	opt callstack 0
 25532                           
 25533                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25534  012B8A  0E0D               	movlw	13
 25535  012B8C  26E1               	addwf	fsr1l,f,c
 25536  012B8E  0E00               	movlw	0
 25537  012B90  22E2               	addwfc	fsr1h,f,c
 25538                           
 25539                           ;stkvar	_b @ sp[(-13)+-4]
 25540                           
 25541                           ;incstack = 0
 25542 ;; hardware stack exceeded
 25543  012B92  0EF2               	movlw	242
 25544  012B94  24E1               	addwf	fsr1l,w,c
 25545  012B96  6ED9               	movwf	fsr2l,c
 25546  012B98  0EFF               	movlw	255
 25547  012B9A  20E2               	addwfc	fsr1h,w,c
 25548  012B9C  6EDA               	movwf	fsr2h,c
 25549  012B9E  50DF               	movf	indf2,w,c
 25550  012BA0  6E0C               	movwf	(btemp+11)^0,c
 25551  012BA2  0E80               	movlw	128
 25552  012BA4  160C               	andwf	(btemp+11)^0,f,c
 25553                           
 25554                           ;stkvar	_sign @ sp[(-13)+12]
 25555  012BA6  0EFF               	movlw	-1
 25556  012BA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25557                           
 25558                           ;stkvar	_b @ sp[(-13)+-4]
 25559  012BAE  0EF2               	movlw	242
 25560  012BB0  24E1               	addwf	fsr1l,w,c
 25561  012BB2  6ED9               	movwf	fsr2l,c
 25562  012BB4  0EFF               	movlw	255
 25563  012BB6  20E2               	addwfc	fsr1h,w,c
 25564  012BB8  6EDA               	movwf	fsr2h,c
 25565  012BBA  50DF               	movf	indf2,w,c
 25566  012BBC  6E0C               	movwf	(btemp+11)^0,c
 25567  012BBE  90D8               	bcf	status,0,c
 25568  012BC0  340C               	rlcf	(btemp+11)^0,w,c
 25569  012BC2  6E0B               	movwf	(btemp+10)^0,c
 25570                           
 25571                           ;stkvar	_bexp @ sp[(-13)+10]
 25572  012BC4  0EFD               	movlw	-3
 25573  012BC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25574                           
 25575                           ;stkvar	_b @ sp[(-13)+-4]
 25576  012BCC  0EF1               	movlw	241
 25577  012BCE  24E1               	addwf	fsr1l,w,c
 25578  012BD0  6ED9               	movwf	fsr2l,c
 25579  012BD2  0EFF               	movlw	255
 25580  012BD4  20E2               	addwfc	fsr1h,w,c
 25581  012BD6  6EDA               	movwf	fsr2h,c
 25582  012BD8  AEDF               	btfss	indf2,7,c
 25583  012BDA  D002               	goto	l7808
 25584                           
 25585                           ;stkvar	_bexp @ sp[(-13)+10]
 25586  012BDC  0EFD               	movlw	-3
 25587  012BDE  80E3               	bsf	plusw1,0,c
 25588  012BE0                     l7808:
 25589                           
 25590                           ;stkvar	_bexp @ sp[(-13)+10]
 25591  012BE0  0EFD               	movlw	-3
 25592  012BE2  50E3               	movf	plusw1,w,c
 25593  012BE4  B4D8               	btfsc	status,2,c
 25594  012BE6  D01F               	goto	l7816
 25595                           
 25596                           ;stkvar	_bexp @ sp[(-13)+10]
 25597  012BE8  0EFD               	movlw	-3
 25598  012BEA  28E3               	incf	plusw1,w,c
 25599  012BEC  A4D8               	btfss	status,2,c
 25600  012BEE  D018               	goto	l7814
 25601  012BF0  0E00               	movlw	0
 25602  012BF2  6E09               	movwf	(btemp+8)^0,c
 25603  012BF4  0E00               	movlw	0
 25604  012BF6  6E0A               	movwf	(btemp+9)^0,c
 25605  012BF8  0E00               	movlw	0
 25606  012BFA  6E0B               	movwf	(btemp+10)^0,c
 25607  012BFC  0E00               	movlw	0
 25608  012BFE  6E0C               	movwf	(btemp+11)^0,c
 25609                           
 25610                           ;stkvar	_b @ sp[(-13)+-4]
 25611  012C00  0EEF               	movlw	-17
 25612  012C02  0060  F027  FFE3   	movff	btemp+8,plusw1
 25613  012C08  0EF0               	movlw	-16
 25614  012C0A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25615  012C10  0EF1               	movlw	-15
 25616  012C12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25617  012C18  0EF2               	movlw	-14
 25618  012C1A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25619  012C20                     l7814:
 25620                           
 25621                           ;stkvar	_b @ sp[(-13)+-4]
 25622  012C20  0EF1               	movlw	-15
 25623  012C22  8EE3               	bsf	plusw1,7,c
 25624  012C24  D018               	goto	l7818
 25625  012C26                     l7816:
 25626  012C26  0E00               	movlw	0
 25627  012C28  6E09               	movwf	(btemp+8)^0,c
 25628  012C2A  0E00               	movlw	0
 25629  012C2C  6E0A               	movwf	(btemp+9)^0,c
 25630  012C2E  0E00               	movlw	0
 25631  012C30  6E0B               	movwf	(btemp+10)^0,c
 25632  012C32  0E00               	movlw	0
 25633  012C34  6E0C               	movwf	(btemp+11)^0,c
 25634                           
 25635                           ;stkvar	_b @ sp[(-13)+-4]
 25636  012C36  0EEF               	movlw	-17
 25637  012C38  0060  F027  FFE3   	movff	btemp+8,plusw1
 25638  012C3E  0EF0               	movlw	-16
 25639  012C40  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25640  012C46  0EF1               	movlw	-15
 25641  012C48  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25642  012C4E  0EF2               	movlw	-14
 25643  012C50  0060  F033  FFE3   	movff	btemp+11,plusw1
 25644  012C56                     l7818:
 25645                           
 25646                           ;stkvar	_a @ sp[(-13)+-8]
 25647  012C56  0EEE               	movlw	238
 25648  012C58  24E1               	addwf	fsr1l,w,c
 25649  012C5A  6ED9               	movwf	fsr2l,c
 25650  012C5C  0EFF               	movlw	255
 25651  012C5E  20E2               	addwfc	fsr1h,w,c
 25652  012C60  6EDA               	movwf	fsr2h,c
 25653  012C62  50DF               	movf	indf2,w,c
 25654  012C64  6E0C               	movwf	(btemp+11)^0,c
 25655  012C66  0E80               	movlw	128
 25656  012C68  160C               	andwf	(btemp+11)^0,f,c
 25657                           
 25658                           ;stkvar	_sign @ sp[(-13)+12]
 25659  012C6A  50E1               	movf	fsr1l,w,c
 25660  012C6C  0FFF               	addlw	-1
 25661  012C6E  6ED9               	movwf	fsr2l,c
 25662  012C70  50E2               	movf	fsr1h,w,c
 25663  012C72  6EDA               	movwf	fsr2h,c
 25664  012C74  0EFF               	movlw	255
 25665  012C76  22DA               	addwfc	fsr2h,f,c
 25666  012C78  500C               	movf	(btemp+11)^0,w,c
 25667  012C7A  1ADF               	xorwf	indf2,f,c
 25668                           
 25669                           ;stkvar	_a @ sp[(-13)+-8]
 25670  012C7C  0EEE               	movlw	238
 25671  012C7E  24E1               	addwf	fsr1l,w,c
 25672  012C80  6ED9               	movwf	fsr2l,c
 25673  012C82  0EFF               	movlw	255
 25674  012C84  20E2               	addwfc	fsr1h,w,c
 25675  012C86  6EDA               	movwf	fsr2h,c
 25676  012C88  50DF               	movf	indf2,w,c
 25677  012C8A  6E0C               	movwf	(btemp+11)^0,c
 25678  012C8C  90D8               	bcf	status,0,c
 25679  012C8E  340C               	rlcf	(btemp+11)^0,w,c
 25680  012C90  6E0B               	movwf	(btemp+10)^0,c
 25681                           
 25682                           ;stkvar	_aexp @ sp[(-13)+11]
 25683  012C92  0EFE               	movlw	-2
 25684  012C94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25685                           
 25686                           ;stkvar	_a @ sp[(-13)+-8]
 25687  012C9A  0EED               	movlw	237
 25688  012C9C  24E1               	addwf	fsr1l,w,c
 25689  012C9E  6ED9               	movwf	fsr2l,c
 25690  012CA0  0EFF               	movlw	255
 25691  012CA2  20E2               	addwfc	fsr1h,w,c
 25692  012CA4  6EDA               	movwf	fsr2h,c
 25693  012CA6  AEDF               	btfss	indf2,7,c
 25694  012CA8  D002               	goto	l7826
 25695                           
 25696                           ;stkvar	_aexp @ sp[(-13)+11]
 25697  012CAA  0EFE               	movlw	-2
 25698  012CAC  80E3               	bsf	plusw1,0,c
 25699  012CAE                     l7826:
 25700                           
 25701                           ;stkvar	_aexp @ sp[(-13)+11]
 25702  012CAE  0EFE               	movlw	-2
 25703  012CB0  50E3               	movf	plusw1,w,c
 25704  012CB2  B4D8               	btfsc	status,2,c
 25705  012CB4  D01F               	goto	l7834
 25706                           
 25707                           ;stkvar	_aexp @ sp[(-13)+11]
 25708  012CB6  0EFE               	movlw	-2
 25709  012CB8  28E3               	incf	plusw1,w,c
 25710  012CBA  A4D8               	btfss	status,2,c
 25711  012CBC  D018               	goto	l7832
 25712  012CBE  0E00               	movlw	0
 25713  012CC0  6E09               	movwf	(btemp+8)^0,c
 25714  012CC2  0E00               	movlw	0
 25715  012CC4  6E0A               	movwf	(btemp+9)^0,c
 25716  012CC6  0E00               	movlw	0
 25717  012CC8  6E0B               	movwf	(btemp+10)^0,c
 25718  012CCA  0E00               	movlw	0
 25719  012CCC  6E0C               	movwf	(btemp+11)^0,c
 25720                           
 25721                           ;stkvar	_a @ sp[(-13)+-8]
 25722  012CCE  0EEB               	movlw	-21
 25723  012CD0  0060  F027  FFE3   	movff	btemp+8,plusw1
 25724  012CD6  0EEC               	movlw	-20
 25725  012CD8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25726  012CDE  0EED               	movlw	-19
 25727  012CE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25728  012CE6  0EEE               	movlw	-18
 25729  012CE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25730  012CEE                     l7832:
 25731                           
 25732                           ;stkvar	_a @ sp[(-13)+-8]
 25733  012CEE  0EED               	movlw	-19
 25734  012CF0  8EE3               	bsf	plusw1,7,c
 25735  012CF2  D018               	goto	l7836
 25736  012CF4                     l7834:
 25737  012CF4  0E00               	movlw	0
 25738  012CF6  6E09               	movwf	(btemp+8)^0,c
 25739  012CF8  0E00               	movlw	0
 25740  012CFA  6E0A               	movwf	(btemp+9)^0,c
 25741  012CFC  0E00               	movlw	0
 25742  012CFE  6E0B               	movwf	(btemp+10)^0,c
 25743  012D00  0E00               	movlw	0
 25744  012D02  6E0C               	movwf	(btemp+11)^0,c
 25745                           
 25746                           ;stkvar	_a @ sp[(-13)+-8]
 25747  012D04  0EEB               	movlw	-21
 25748  012D06  0060  F027  FFE3   	movff	btemp+8,plusw1
 25749  012D0C  0EEC               	movlw	-20
 25750  012D0E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25751  012D14  0EED               	movlw	-19
 25752  012D16  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25753  012D1C  0EEE               	movlw	-18
 25754  012D1E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25755  012D24                     l7836:
 25756                           
 25757                           ;stkvar	_aexp @ sp[(-13)+11]
 25758  012D24  0EFE               	movlw	-2
 25759  012D26  50E3               	movf	plusw1,w,c
 25760  012D28  B4D8               	btfsc	status,2,c
 25761  012D2A  D004               	goto	u6400
 25762                           
 25763                           ;stkvar	_bexp @ sp[(-13)+10]
 25764  012D2C  0EFD               	movlw	-3
 25765  012D2E  50E3               	movf	plusw1,w,c
 25766  012D30  A4D8               	btfss	status,2,c
 25767  012D32  D009               	goto	l7844
 25768  012D34                     u6400:
 25769  012D34  0E00               	movlw	0
 25770  012D36  6E01               	movwf	btemp^0,c
 25771  012D38  0E00               	movlw	0
 25772  012D3A  6E02               	movwf	(btemp+1)^0,c
 25773  012D3C  0E00               	movlw	0
 25774  012D3E  6E03               	movwf	(btemp+2)^0,c
 25775  012D40  0E00               	movlw	0
 25776  012D42  6E04               	movwf	(btemp+3)^0,c
 25777  012D44  D332               	goto	l2923
 25778  012D46                     l7844:
 25779                           
 25780                           ;stkvar	_b @ sp[(-13)+-4]
 25781  012D46  0EEF               	movlw	-17
 25782  012D48  006F FF8C  F00C    	movff	plusw1,btemp+11
 25783                           
 25784                           ;stkvar	_a @ sp[(-13)+-8]
 25785  012D4E  0EED               	movlw	237
 25786  012D50  24E1               	addwf	fsr1l,w,c
 25787  012D52  6ED9               	movwf	fsr2l,c
 25788  012D54  0EFF               	movlw	255
 25789  012D56  20E2               	addwfc	fsr1h,w,c
 25790  012D58  6EDA               	movwf	fsr2h,c
 25791  012D5A  50DF               	movf	indf2,w,c
 25792  012D5C  020C               	mulwf	(btemp+11)^0,c
 25793                           
 25794                           ;stkvar	_temp @ sp[(-13)+8]
 25795  012D5E  0EFB               	movlw	-5
 25796  012D60  006F FFCF FFE3     	movff	prodl,plusw1
 25797  012D66  0EFC               	movlw	-4
 25798  012D68  006F FFD3 FFE3     	movff	prodh,plusw1
 25799                           
 25800                           ;stkvar	_temp @ sp[(-13)+8]
 25801  012D6E  0EFB               	movlw	-5
 25802  012D70  006F FF8C  F00C    	movff	plusw1,btemp+11
 25803  012D76  0060  F030  F005   	movff	btemp+11,btemp+4
 25804  012D7C  6A06               	clrf	(btemp+5)^0,c
 25805  012D7E  6A07               	clrf	(btemp+6)^0,c
 25806  012D80  6A08               	clrf	(btemp+7)^0,c
 25807                           
 25808                           ;stkvar	_grs @ sp[(-13)+4]
 25809  012D82  0EF7               	movlw	-9
 25810  012D84  0060  F017  FFE3   	movff	btemp+4,plusw1
 25811  012D8A  0EF8               	movlw	-8
 25812  012D8C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25813  012D92  0EF9               	movlw	-7
 25814  012D94  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25815  012D9A  0EFA               	movlw	-6
 25816  012D9C  0060  F023  FFE3   	movff	btemp+7,plusw1
 25817                           
 25818                           ;stkvar	_temp @ sp[(-13)+8]
 25819  012DA2  0EFC               	movlw	252
 25820  012DA4  24E1               	addwf	fsr1l,w,c
 25821  012DA6  6ED9               	movwf	fsr2l,c
 25822  012DA8  0EFF               	movlw	255
 25823  012DAA  20E2               	addwfc	fsr1h,w,c
 25824  012DAC  6EDA               	movwf	fsr2h,c
 25825  012DAE  50DF               	movf	indf2,w,c
 25826  012DB0  6E0C               	movwf	(btemp+11)^0,c
 25827  012DB2  0060  F030  F005   	movff	btemp+11,btemp+4
 25828  012DB8  6A06               	clrf	(btemp+5)^0,c
 25829  012DBA  6A07               	clrf	(btemp+6)^0,c
 25830  012DBC  6A08               	clrf	(btemp+7)^0,c
 25831                           
 25832                           ;stkvar	_prod @ sp[(-13)+0]
 25833  012DBE  0EF3               	movlw	-13
 25834  012DC0  0060  F017  FFE3   	movff	btemp+4,plusw1
 25835  012DC6  0EF4               	movlw	-12
 25836  012DC8  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25837  012DCE  0EF5               	movlw	-11
 25838  012DD0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25839  012DD6  0EF6               	movlw	-10
 25840  012DD8  0060  F023  FFE3   	movff	btemp+7,plusw1
 25841                           
 25842                           ;stkvar	_b @ sp[(-13)+-4]
 25843  012DDE  0EF0               	movlw	240
 25844  012DE0  24E1               	addwf	fsr1l,w,c
 25845  012DE2  6ED9               	movwf	fsr2l,c
 25846  012DE4  0EFF               	movlw	255
 25847  012DE6  20E2               	addwfc	fsr1h,w,c
 25848  012DE8  6EDA               	movwf	fsr2h,c
 25849  012DEA  50DF               	movf	indf2,w,c
 25850  012DEC  6E0C               	movwf	(btemp+11)^0,c
 25851                           
 25852                           ;stkvar	_a @ sp[(-13)+-8]
 25853  012DEE  0EEC               	movlw	236
 25854  012DF0  24E1               	addwf	fsr1l,w,c
 25855  012DF2  6ED9               	movwf	fsr2l,c
 25856  012DF4  0EFF               	movlw	255
 25857  012DF6  20E2               	addwfc	fsr1h,w,c
 25858  012DF8  6EDA               	movwf	fsr2h,c
 25859  012DFA  50DF               	movf	indf2,w,c
 25860  012DFC  020C               	mulwf	(btemp+11)^0,c
 25861                           
 25862                           ;stkvar	_temp @ sp[(-13)+8]
 25863  012DFE  0EFB               	movlw	-5
 25864  012E00  006F FFCF FFE3     	movff	prodl,plusw1
 25865  012E06  0EFC               	movlw	-4
 25866  012E08  006F FFD3 FFE3     	movff	prodh,plusw1
 25867                           
 25868                           ;stkvar	_grs @ sp[(-13)+4]
 25869  012E0E  50E1               	movf	fsr1l,w,c
 25870  012E10  0FF7               	addlw	-9
 25871  012E12  6ED9               	movwf	fsr2l,c
 25872  012E14  50E2               	movf	fsr1h,w,c
 25873  012E16  6EDA               	movwf	fsr2h,c
 25874  012E18  0EFF               	movlw	255
 25875  012E1A  22DA               	addwfc	fsr2h,f,c
 25876                           
 25877                           ;stkvar	_temp @ sp[(-13)+8]
 25878  012E1C  0EFB               	movlw	-5
 25879  012E1E  50E3               	movf	plusw1,w,c
 25880  012E20  26DE               	addwf	postinc2,f,c
 25881  012E22  0E00               	movlw	0
 25882  012E24  22DE               	addwfc	postinc2,f,c
 25883  012E26  22DE               	addwfc	postinc2,f,c
 25884  012E28  22DE               	addwfc	postinc2,f,c
 25885                           
 25886                           ;stkvar	_prod @ sp[(-13)+0]
 25887  012E2A  50E1               	movf	fsr1l,w,c
 25888  012E2C  0FF3               	addlw	-13
 25889  012E2E  6ED9               	movwf	fsr2l,c
 25890  012E30  50E2               	movf	fsr1h,w,c
 25891  012E32  6EDA               	movwf	fsr2h,c
 25892  012E34  0EFF               	movlw	255
 25893  012E36  22DA               	addwfc	fsr2h,f,c
 25894                           
 25895                           ;stkvar	_temp @ sp[(-13)+8]
 25896  012E38  0EFC               	movlw	252
 25897  012E3A  24E1               	addwf	fsr1l,w,c
 25898  012E3C  6EE9               	movwf	fsr0l,c
 25899  012E3E  0EFF               	movlw	255
 25900  012E40  20E2               	addwfc	fsr1h,w,c
 25901  012E42  6EEA               	movwf	fsr0h,c
 25902  012E44  50EF               	movf	indf0,w,c
 25903  012E46  26DE               	addwf	postinc2,f,c
 25904  012E48  0E00               	movlw	0
 25905  012E4A  22DE               	addwfc	postinc2,f,c
 25906  012E4C  22DE               	addwfc	postinc2,f,c
 25907  012E4E  22DE               	addwfc	postinc2,f,c
 25908                           
 25909                           ;stkvar	_b @ sp[(-13)+-4]
 25910  012E50  0EF1               	movlw	241
 25911  012E52  24E1               	addwf	fsr1l,w,c
 25912  012E54  6ED9               	movwf	fsr2l,c
 25913  012E56  0EFF               	movlw	255
 25914  012E58  20E2               	addwfc	fsr1h,w,c
 25915  012E5A  6EDA               	movwf	fsr2h,c
 25916  012E5C  50DF               	movf	indf2,w,c
 25917  012E5E  6E0C               	movwf	(btemp+11)^0,c
 25918                           
 25919                           ;stkvar	_a @ sp[(-13)+-8]
 25920  012E60  0EEB               	movlw	-21
 25921  012E62  50E3               	movf	plusw1,w,c
 25922  012E64  020C               	mulwf	(btemp+11)^0,c
 25923                           
 25924                           ;stkvar	_temp @ sp[(-13)+8]
 25925  012E66  0EFB               	movlw	-5
 25926  012E68  006F FFCF FFE3     	movff	prodl,plusw1
 25927  012E6E  0EFC               	movlw	-4
 25928  012E70  006F FFD3 FFE3     	movff	prodh,plusw1
 25929                           
 25930                           ;stkvar	_grs @ sp[(-13)+4]
 25931  012E76  50E1               	movf	fsr1l,w,c
 25932  012E78  0FF7               	addlw	-9
 25933  012E7A  6ED9               	movwf	fsr2l,c
 25934  012E7C  50E2               	movf	fsr1h,w,c
 25935  012E7E  6EDA               	movwf	fsr2h,c
 25936  012E80  0EFF               	movlw	255
 25937  012E82  22DA               	addwfc	fsr2h,f,c
 25938                           
 25939                           ;stkvar	_temp @ sp[(-13)+8]
 25940  012E84  0EFB               	movlw	-5
 25941  012E86  50E3               	movf	plusw1,w,c
 25942  012E88  26DE               	addwf	postinc2,f,c
 25943  012E8A  0E00               	movlw	0
 25944  012E8C  22DE               	addwfc	postinc2,f,c
 25945  012E8E  22DE               	addwfc	postinc2,f,c
 25946  012E90  22DE               	addwfc	postinc2,f,c
 25947                           
 25948                           ;stkvar	_prod @ sp[(-13)+0]
 25949  012E92  50E1               	movf	fsr1l,w,c
 25950  012E94  0FF3               	addlw	-13
 25951  012E96  6ED9               	movwf	fsr2l,c
 25952  012E98  50E2               	movf	fsr1h,w,c
 25953  012E9A  6EDA               	movwf	fsr2h,c
 25954  012E9C  0EFF               	movlw	255
 25955  012E9E  22DA               	addwfc	fsr2h,f,c
 25956                           
 25957                           ;stkvar	_temp @ sp[(-13)+8]
 25958  012EA0  0EFC               	movlw	252
 25959  012EA2  24E1               	addwf	fsr1l,w,c
 25960  012EA4  6EE9               	movwf	fsr0l,c
 25961  012EA6  0EFF               	movlw	255
 25962  012EA8  20E2               	addwfc	fsr1h,w,c
 25963  012EAA  6EEA               	movwf	fsr0h,c
 25964  012EAC  50EF               	movf	indf0,w,c
 25965  012EAE  26DE               	addwf	postinc2,f,c
 25966  012EB0  0E00               	movlw	0
 25967  012EB2  22DE               	addwfc	postinc2,f,c
 25968  012EB4  22DE               	addwfc	postinc2,f,c
 25969  012EB6  22DE               	addwfc	postinc2,f,c
 25970                           
 25971                           ;stkvar	_grs @ sp[(-13)+4]
 25972  012EB8  50E1               	movf	fsr1l,w,c
 25973  012EBA  0FF7               	addlw	-9
 25974  012EBC  6ED9               	movwf	fsr2l,c
 25975  012EBE  50E2               	movf	fsr1h,w,c
 25976  012EC0  6EDA               	movwf	fsr2h,c
 25977  012EC2  0EFF               	movlw	255
 25978  012EC4  22DA               	addwfc	fsr2h,f,c
 25979  012EC6  0E08               	movlw	8
 25980  012EC8                     u6415:
 25981  012EC8  90D8               	bcf	status,0,c
 25982  012ECA  36DE               	rlcf	postinc2,f,c
 25983  012ECC  36DE               	rlcf	postinc2,f,c
 25984  012ECE  36DE               	rlcf	postinc2,f,c
 25985  012ED0  36DD               	rlcf	postdec2,f,c
 25986  012ED2  52DD               	movf	postdec2,f,c
 25987  012ED4  52DD               	movf	postdec2,f,c
 25988  012ED6  2EE8               	decfsz	wreg,f,c
 25989  012ED8  D7F7               	goto	u6415
 25990                           
 25991                           ;stkvar	_b @ sp[(-13)+-4]
 25992  012EDA  0EF0               	movlw	240
 25993  012EDC  24E1               	addwf	fsr1l,w,c
 25994  012EDE  6ED9               	movwf	fsr2l,c
 25995  012EE0  0EFF               	movlw	255
 25996  012EE2  20E2               	addwfc	fsr1h,w,c
 25997  012EE4  6EDA               	movwf	fsr2h,c
 25998  012EE6  50DF               	movf	indf2,w,c
 25999  012EE8  6E0C               	movwf	(btemp+11)^0,c
 26000                           
 26001                           ;stkvar	_a @ sp[(-13)+-8]
 26002  012EEA  0EEB               	movlw	-21
 26003  012EEC  50E3               	movf	plusw1,w,c
 26004  012EEE  020C               	mulwf	(btemp+11)^0,c
 26005                           
 26006                           ;stkvar	_temp @ sp[(-13)+8]
 26007  012EF0  0EFB               	movlw	-5
 26008  012EF2  006F FFCF FFE3     	movff	prodl,plusw1
 26009  012EF8  0EFC               	movlw	-4
 26010  012EFA  006F FFD3 FFE3     	movff	prodh,plusw1
 26011                           
 26012                           ;stkvar	_temp @ sp[(-13)+8]
 26013  012F00  0EFB               	movlw	-5
 26014  012F02  006F FF8C  F00B    	movff	plusw1,btemp+10
 26015  012F08  0EFC               	movlw	-4
 26016  012F0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26017                           
 26018                           ;stkvar	_grs @ sp[(-13)+4]
 26019  012F10  50E1               	movf	fsr1l,w,c
 26020  012F12  0FF7               	addlw	-9
 26021  012F14  6ED9               	movwf	fsr2l,c
 26022  012F16  50E2               	movf	fsr1h,w,c
 26023  012F18  6EDA               	movwf	fsr2h,c
 26024  012F1A  0EFF               	movlw	255
 26025  012F1C  22DA               	addwfc	fsr2h,f,c
 26026  012F1E  500B               	movf	(btemp+10)^0,w,c
 26027  012F20  26DE               	addwf	postinc2,f,c
 26028  012F22  500C               	movf	(btemp+11)^0,w,c
 26029  012F24  22DE               	addwfc	postinc2,f,c
 26030  012F26  0E00               	movlw	0
 26031  012F28  22DE               	addwfc	postinc2,f,c
 26032  012F2A  22DE               	addwfc	postinc2,f,c
 26033                           
 26034                           ;stkvar	_b @ sp[(-13)+-4]
 26035  012F2C  0EEF               	movlw	-17
 26036  012F2E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26037                           
 26038                           ;stkvar	_a @ sp[(-13)+-8]
 26039  012F34  0EEC               	movlw	236
 26040  012F36  24E1               	addwf	fsr1l,w,c
 26041  012F38  6ED9               	movwf	fsr2l,c
 26042  012F3A  0EFF               	movlw	255
 26043  012F3C  20E2               	addwfc	fsr1h,w,c
 26044  012F3E  6EDA               	movwf	fsr2h,c
 26045  012F40  50DF               	movf	indf2,w,c
 26046  012F42  020C               	mulwf	(btemp+11)^0,c
 26047                           
 26048                           ;stkvar	_temp @ sp[(-13)+8]
 26049  012F44  0EFB               	movlw	-5
 26050  012F46  006F FFCF FFE3     	movff	prodl,plusw1
 26051  012F4C  0EFC               	movlw	-4
 26052  012F4E  006F FFD3 FFE3     	movff	prodh,plusw1
 26053                           
 26054                           ;stkvar	_temp @ sp[(-13)+8]
 26055  012F54  0EFB               	movlw	-5
 26056  012F56  006F FF8C  F00B    	movff	plusw1,btemp+10
 26057  012F5C  0EFC               	movlw	-4
 26058  012F5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26059                           
 26060                           ;stkvar	_grs @ sp[(-13)+4]
 26061  012F64  50E1               	movf	fsr1l,w,c
 26062  012F66  0FF7               	addlw	-9
 26063  012F68  6ED9               	movwf	fsr2l,c
 26064  012F6A  50E2               	movf	fsr1h,w,c
 26065  012F6C  6EDA               	movwf	fsr2h,c
 26066  012F6E  0EFF               	movlw	255
 26067  012F70  22DA               	addwfc	fsr2h,f,c
 26068  012F72  500B               	movf	(btemp+10)^0,w,c
 26069  012F74  26DE               	addwf	postinc2,f,c
 26070  012F76  500C               	movf	(btemp+11)^0,w,c
 26071  012F78  22DE               	addwfc	postinc2,f,c
 26072  012F7A  0E00               	movlw	0
 26073  012F7C  22DE               	addwfc	postinc2,f,c
 26074  012F7E  22DE               	addwfc	postinc2,f,c
 26075                           
 26076                           ;stkvar	_grs @ sp[(-13)+4]
 26077  012F80  50E1               	movf	fsr1l,w,c
 26078  012F82  0FF7               	addlw	-9
 26079  012F84  6ED9               	movwf	fsr2l,c
 26080  012F86  50E2               	movf	fsr1h,w,c
 26081  012F88  6EDA               	movwf	fsr2h,c
 26082  012F8A  0EFF               	movlw	255
 26083  012F8C  22DA               	addwfc	fsr2h,f,c
 26084  012F8E  0E08               	movlw	8
 26085  012F90                     u6425:
 26086  012F90  90D8               	bcf	status,0,c
 26087  012F92  36DE               	rlcf	postinc2,f,c
 26088  012F94  36DE               	rlcf	postinc2,f,c
 26089  012F96  36DE               	rlcf	postinc2,f,c
 26090  012F98  36DD               	rlcf	postdec2,f,c
 26091  012F9A  52DD               	movf	postdec2,f,c
 26092  012F9C  52DD               	movf	postdec2,f,c
 26093  012F9E  2EE8               	decfsz	wreg,f,c
 26094  012FA0  D7F7               	goto	u6425
 26095                           
 26096                           ;stkvar	_b @ sp[(-13)+-4]
 26097  012FA2  0EEF               	movlw	-17
 26098  012FA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26099                           
 26100                           ;stkvar	_a @ sp[(-13)+-8]
 26101  012FAA  0EEB               	movlw	-21
 26102  012FAC  50E3               	movf	plusw1,w,c
 26103  012FAE  020C               	mulwf	(btemp+11)^0,c
 26104                           
 26105                           ;stkvar	_temp @ sp[(-13)+8]
 26106  012FB0  0EFB               	movlw	-5
 26107  012FB2  006F FFCF FFE3     	movff	prodl,plusw1
 26108  012FB8  0EFC               	movlw	-4
 26109  012FBA  006F FFD3 FFE3     	movff	prodh,plusw1
 26110                           
 26111                           ;stkvar	_temp @ sp[(-13)+8]
 26112  012FC0  0EFB               	movlw	-5
 26113  012FC2  006F FF8C  F00B    	movff	plusw1,btemp+10
 26114  012FC8  0EFC               	movlw	-4
 26115  012FCA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26116                           
 26117                           ;stkvar	_grs @ sp[(-13)+4]
 26118  012FD0  50E1               	movf	fsr1l,w,c
 26119  012FD2  0FF7               	addlw	-9
 26120  012FD4  6ED9               	movwf	fsr2l,c
 26121  012FD6  50E2               	movf	fsr1h,w,c
 26122  012FD8  6EDA               	movwf	fsr2h,c
 26123  012FDA  0EFF               	movlw	255
 26124  012FDC  22DA               	addwfc	fsr2h,f,c
 26125  012FDE  500B               	movf	(btemp+10)^0,w,c
 26126  012FE0  26DE               	addwf	postinc2,f,c
 26127  012FE2  500C               	movf	(btemp+11)^0,w,c
 26128  012FE4  22DE               	addwfc	postinc2,f,c
 26129  012FE6  0E00               	movlw	0
 26130  012FE8  22DE               	addwfc	postinc2,f,c
 26131  012FEA  22DE               	addwfc	postinc2,f,c
 26132                           
 26133                           ;stkvar	_b @ sp[(-13)+-4]
 26134  012FEC  0EF0               	movlw	240
 26135  012FEE  24E1               	addwf	fsr1l,w,c
 26136  012FF0  6ED9               	movwf	fsr2l,c
 26137  012FF2  0EFF               	movlw	255
 26138  012FF4  20E2               	addwfc	fsr1h,w,c
 26139  012FF6  6EDA               	movwf	fsr2h,c
 26140  012FF8  50DF               	movf	indf2,w,c
 26141  012FFA  6E0C               	movwf	(btemp+11)^0,c
 26142                           
 26143                           ;stkvar	_a @ sp[(-13)+-8]
 26144  012FFC  0EED               	movlw	237
 26145  012FFE  24E1               	addwf	fsr1l,w,c
 26146  013000  6ED9               	movwf	fsr2l,c
 26147  013002  0EFF               	movlw	255
 26148  013004  20E2               	addwfc	fsr1h,w,c
 26149  013006  6EDA               	movwf	fsr2h,c
 26150  013008  50DF               	movf	indf2,w,c
 26151  01300A  020C               	mulwf	(btemp+11)^0,c
 26152                           
 26153                           ;stkvar	_temp @ sp[(-13)+8]
 26154  01300C  0EFB               	movlw	-5
 26155  01300E  006F FFCF FFE3     	movff	prodl,plusw1
 26156  013014  0EFC               	movlw	-4
 26157  013016  006F FFD3 FFE3     	movff	prodh,plusw1
 26158                           
 26159                           ;stkvar	_temp @ sp[(-13)+8]
 26160  01301C  0EFB               	movlw	-5
 26161  01301E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26162  013024  0EFC               	movlw	-4
 26163  013026  006F FF8C  F00C    	movff	plusw1,btemp+11
 26164                           
 26165                           ;stkvar	_prod @ sp[(-13)+0]
 26166  01302C  50E1               	movf	fsr1l,w,c
 26167  01302E  0FF3               	addlw	-13
 26168  013030  6ED9               	movwf	fsr2l,c
 26169  013032  50E2               	movf	fsr1h,w,c
 26170  013034  6EDA               	movwf	fsr2h,c
 26171  013036  0EFF               	movlw	255
 26172  013038  22DA               	addwfc	fsr2h,f,c
 26173  01303A  500B               	movf	(btemp+10)^0,w,c
 26174  01303C  26DE               	addwf	postinc2,f,c
 26175  01303E  500C               	movf	(btemp+11)^0,w,c
 26176  013040  22DE               	addwfc	postinc2,f,c
 26177  013042  0E00               	movlw	0
 26178  013044  22DE               	addwfc	postinc2,f,c
 26179  013046  22DE               	addwfc	postinc2,f,c
 26180                           
 26181                           ;stkvar	_b @ sp[(-13)+-4]
 26182  013048  0EF1               	movlw	241
 26183  01304A  24E1               	addwf	fsr1l,w,c
 26184  01304C  6ED9               	movwf	fsr2l,c
 26185  01304E  0EFF               	movlw	255
 26186  013050  20E2               	addwfc	fsr1h,w,c
 26187  013052  6EDA               	movwf	fsr2h,c
 26188  013054  50DF               	movf	indf2,w,c
 26189  013056  6E0C               	movwf	(btemp+11)^0,c
 26190                           
 26191                           ;stkvar	_a @ sp[(-13)+-8]
 26192  013058  0EEC               	movlw	236
 26193  01305A  24E1               	addwf	fsr1l,w,c
 26194  01305C  6ED9               	movwf	fsr2l,c
 26195  01305E  0EFF               	movlw	255
 26196  013060  20E2               	addwfc	fsr1h,w,c
 26197  013062  6EDA               	movwf	fsr2h,c
 26198  013064  50DF               	movf	indf2,w,c
 26199  013066  020C               	mulwf	(btemp+11)^0,c
 26200                           
 26201                           ;stkvar	_temp @ sp[(-13)+8]
 26202  013068  0EFB               	movlw	-5
 26203  01306A  006F FFCF FFE3     	movff	prodl,plusw1
 26204  013070  0EFC               	movlw	-4
 26205  013072  006F FFD3 FFE3     	movff	prodh,plusw1
 26206                           
 26207                           ;stkvar	_temp @ sp[(-13)+8]
 26208  013078  0EFB               	movlw	-5
 26209  01307A  006F FF8C  F00B    	movff	plusw1,btemp+10
 26210  013080  0EFC               	movlw	-4
 26211  013082  006F FF8C  F00C    	movff	plusw1,btemp+11
 26212                           
 26213                           ;stkvar	_prod @ sp[(-13)+0]
 26214  013088  50E1               	movf	fsr1l,w,c
 26215  01308A  0FF3               	addlw	-13
 26216  01308C  6ED9               	movwf	fsr2l,c
 26217  01308E  50E2               	movf	fsr1h,w,c
 26218  013090  6EDA               	movwf	fsr2h,c
 26219  013092  0EFF               	movlw	255
 26220  013094  22DA               	addwfc	fsr2h,f,c
 26221  013096  500B               	movf	(btemp+10)^0,w,c
 26222  013098  26DE               	addwf	postinc2,f,c
 26223  01309A  500C               	movf	(btemp+11)^0,w,c
 26224  01309C  22DE               	addwfc	postinc2,f,c
 26225  01309E  0E00               	movlw	0
 26226  0130A0  22DE               	addwfc	postinc2,f,c
 26227  0130A2  22DE               	addwfc	postinc2,f,c
 26228                           
 26229                           ;stkvar	_b @ sp[(-13)+-4]
 26230  0130A4  0EF1               	movlw	241
 26231  0130A6  24E1               	addwf	fsr1l,w,c
 26232  0130A8  6ED9               	movwf	fsr2l,c
 26233  0130AA  0EFF               	movlw	255
 26234  0130AC  20E2               	addwfc	fsr1h,w,c
 26235  0130AE  6EDA               	movwf	fsr2h,c
 26236  0130B0  50DF               	movf	indf2,w,c
 26237  0130B2  6E0C               	movwf	(btemp+11)^0,c
 26238                           
 26239                           ;stkvar	_a @ sp[(-13)+-8]
 26240  0130B4  0EED               	movlw	237
 26241  0130B6  24E1               	addwf	fsr1l,w,c
 26242  0130B8  6ED9               	movwf	fsr2l,c
 26243  0130BA  0EFF               	movlw	255
 26244  0130BC  20E2               	addwfc	fsr1h,w,c
 26245  0130BE  6EDA               	movwf	fsr2h,c
 26246  0130C0  50DF               	movf	indf2,w,c
 26247  0130C2  020C               	mulwf	(btemp+11)^0,c
 26248                           
 26249                           ;stkvar	_temp @ sp[(-13)+8]
 26250  0130C4  0EFB               	movlw	-5
 26251  0130C6  006F FFCF FFE3     	movff	prodl,plusw1
 26252  0130CC  0EFC               	movlw	-4
 26253  0130CE  006F FFD3 FFE3     	movff	prodh,plusw1
 26254                           
 26255                           ;stkvar	_temp @ sp[(-13)+8]
 26256  0130D4  0EFB               	movlw	-5
 26257  0130D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 26258  0130DC  0EFC               	movlw	-4
 26259  0130DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26260  0130E4  500B               	movf	(btemp+10)^0,w,c
 26261  0130E6  6E05               	movwf	(btemp+4)^0,c
 26262  0130E8  500C               	movf	(btemp+11)^0,w,c
 26263  0130EA  6E06               	movwf	(btemp+5)^0,c
 26264  0130EC  6A07               	clrf	(btemp+6)^0,c
 26265  0130EE  6A08               	clrf	(btemp+7)^0,c
 26266  0130F0  0060  F01C  F008   	movff	btemp+6,btemp+7
 26267  0130F6  0060  F018  F007   	movff	btemp+5,btemp+6
 26268  0130FC  0060  F014  F006   	movff	btemp+4,btemp+5
 26269  013102  6A05               	clrf	(btemp+4)^0,c
 26270                           
 26271                           ;stkvar	_prod @ sp[(-13)+0]
 26272  013104  50E1               	movf	fsr1l,w,c
 26273  013106  0FF3               	addlw	-13
 26274  013108  6ED9               	movwf	fsr2l,c
 26275  01310A  50E2               	movf	fsr1h,w,c
 26276  01310C  6EDA               	movwf	fsr2h,c
 26277  01310E  0EFF               	movlw	255
 26278  013110  22DA               	addwfc	fsr2h,f,c
 26279  013112  5005               	movf	(btemp+4)^0,w,c
 26280  013114  26DE               	addwf	postinc2,f,c
 26281  013116  5006               	movf	(btemp+5)^0,w,c
 26282  013118  22DE               	addwfc	postinc2,f,c
 26283  01311A  5007               	movf	(btemp+6)^0,w,c
 26284  01311C  22DE               	addwfc	postinc2,f,c
 26285  01311E  5008               	movf	(btemp+7)^0,w,c
 26286  013120  22DE               	addwfc	postinc2,f,c
 26287                           
 26288                           ;stkvar	_prod @ sp[(-13)+0]
 26289  013122  50E1               	movf	fsr1l,w,c
 26290  013124  0FF3               	addlw	-13
 26291  013126  6ED9               	movwf	fsr2l,c
 26292  013128  50E2               	movf	fsr1h,w,c
 26293  01312A  6EDA               	movwf	fsr2h,c
 26294  01312C  0EFF               	movlw	255
 26295  01312E  22DA               	addwfc	fsr2h,f,c
 26296                           
 26297                           ;stkvar	_grs @ sp[(-13)+4]
 26298  013130  0EFA               	movlw	250
 26299  013132  24E1               	addwf	fsr1l,w,c
 26300  013134  6EE9               	movwf	fsr0l,c
 26301  013136  0EFF               	movlw	255
 26302  013138  20E2               	addwfc	fsr1h,w,c
 26303  01313A  6EEA               	movwf	fsr0h,c
 26304  01313C  50EF               	movf	indf0,w,c
 26305  01313E  26DE               	addwf	postinc2,f,c
 26306  013140  0E00               	movlw	0
 26307  013142  22DE               	addwfc	postinc2,f,c
 26308  013144  22DE               	addwfc	postinc2,f,c
 26309  013146  22DE               	addwfc	postinc2,f,c
 26310                           
 26311                           ;stkvar	_grs @ sp[(-13)+4]
 26312  013148  50E1               	movf	fsr1l,w,c
 26313  01314A  0FF7               	addlw	-9
 26314  01314C  6ED9               	movwf	fsr2l,c
 26315  01314E  50E2               	movf	fsr1h,w,c
 26316  013150  6EDA               	movwf	fsr2h,c
 26317  013152  0EFF               	movlw	255
 26318  013154  22DA               	addwfc	fsr2h,f,c
 26319  013156  0E08               	movlw	8
 26320  013158                     u6435:
 26321  013158  90D8               	bcf	status,0,c
 26322  01315A  36DE               	rlcf	postinc2,f,c
 26323  01315C  36DE               	rlcf	postinc2,f,c
 26324  01315E  36DE               	rlcf	postinc2,f,c
 26325  013160  36DD               	rlcf	postdec2,f,c
 26326  013162  52DD               	movf	postdec2,f,c
 26327  013164  52DD               	movf	postdec2,f,c
 26328  013166  2EE8               	decfsz	wreg,f,c
 26329  013168  D7F7               	goto	u6435
 26330  01316A  0E82               	movlw	130
 26331  01316C  6E0B               	movwf	(btemp+10)^0,c
 26332  01316E  0EFF               	movlw	255
 26333  013170  6E0C               	movwf	(btemp+11)^0,c
 26334                           
 26335                           ;stkvar	_bexp @ sp[(-13)+10]
 26336  013172  0EFD               	movlw	-3
 26337  013174  50E3               	movf	plusw1,w,c
 26338  013176  6E09               	movwf	(btemp+8)^0,c
 26339  013178  6A0A               	clrf	(btemp+9)^0,c
 26340                           
 26341                           ;stkvar	_aexp @ sp[(-13)+11]
 26342  01317A  0EFE               	movlw	-2
 26343  01317C  50E3               	movf	plusw1,w,c
 26344  01317E  2609               	addwf	(btemp+8)^0,f,c
 26345  013180  0E00               	movlw	0
 26346  013182  220A               	addwfc	(btemp+9)^0,f,c
 26347  013184  500B               	movf	(btemp+10)^0,w,c
 26348  013186  2609               	addwf	(btemp+8)^0,f,c
 26349  013188  500C               	movf	(btemp+11)^0,w,c
 26350  01318A  220A               	addwfc	(btemp+9)^0,f,c
 26351                           
 26352                           ;stkvar	_temp @ sp[(-13)+8]
 26353  01318C  0EFB               	movlw	-5
 26354  01318E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26355  013194  0EFC               	movlw	-4
 26356  013196  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26357  01319C  D021               	goto	l7906
 26358  01319E                     l7896:
 26359                           
 26360                           ;stkvar	_prod @ sp[(-13)+0]
 26361  01319E  90D8               	bcf	status,0,c
 26362  0131A0  0EF3               	movlw	-13
 26363  0131A2  36E3               	rlcf	plusw1,f,c
 26364  0131A4  0EF4               	movlw	-12
 26365  0131A6  36E3               	rlcf	plusw1,f,c
 26366  0131A8  0EF5               	movlw	-11
 26367  0131AA  36E3               	rlcf	plusw1,f,c
 26368  0131AC  0EF6               	movlw	-10
 26369  0131AE  36E3               	rlcf	plusw1,f,c
 26370                           
 26371                           ;stkvar	_grs @ sp[(-13)+4]
 26372  0131B0  0EFA               	movlw	-6
 26373  0131B2  AEE3               	btfss	plusw1,7,c
 26374  0131B4  D002               	goto	l7902
 26375                           
 26376                           ;stkvar	_prod @ sp[(-13)+0]
 26377  0131B6  0EF3               	movlw	-13
 26378  0131B8  80E3               	bsf	plusw1,0,c
 26379  0131BA                     l7902:
 26380                           
 26381                           ;stkvar	_grs @ sp[(-13)+4]
 26382  0131BA  90D8               	bcf	status,0,c
 26383  0131BC  0EF7               	movlw	-9
 26384  0131BE  36E3               	rlcf	plusw1,f,c
 26385  0131C0  0EF8               	movlw	-8
 26386  0131C2  36E3               	rlcf	plusw1,f,c
 26387  0131C4  0EF9               	movlw	-7
 26388  0131C6  36E3               	rlcf	plusw1,f,c
 26389  0131C8  0EFA               	movlw	-6
 26390  0131CA  36E3               	rlcf	plusw1,f,c
 26391                           
 26392                           ;stkvar	_temp @ sp[(-13)+8]
 26393  0131CC  50E1               	movf	fsr1l,w,c
 26394  0131CE  0FFB               	addlw	-5
 26395  0131D0  6ED9               	movwf	fsr2l,c
 26396  0131D2  50E2               	movf	fsr1h,w,c
 26397  0131D4  6EDA               	movwf	fsr2h,c
 26398  0131D6  0EFF               	movlw	255
 26399  0131D8  22DA               	addwfc	fsr2h,f,c
 26400  0131DA  06DE               	decf	postinc2,f,c
 26401  0131DC  0E00               	movlw	0
 26402  0131DE  5ADD               	subwfb	postdec2,f,c
 26403  0131E0                     l7906:
 26404                           
 26405                           ;stkvar	_prod @ sp[(-13)+0]
 26406  0131E0  0EF5               	movlw	-11
 26407  0131E2  AEE3               	btfss	plusw1,7,c
 26408  0131E4  D7DC               	goto	l7896
 26409                           
 26410                           ;stkvar	_aexp @ sp[(-13)+11]
 26411  0131E6  0EFE               	movlw	-2
 26412  0131E8  6AE3               	clrf	plusw1,c
 26413                           
 26414                           ;stkvar	_grs @ sp[(-13)+4]
 26415  0131EA  0EFA               	movlw	-6
 26416  0131EC  AEE3               	btfss	plusw1,7,c
 26417  0131EE  D020               	goto	l7920
 26418                           
 26419                           ;stkvar	_grs @ sp[(-13)+4]
 26420  0131F0  50E1               	movf	fsr1l,w,c
 26421  0131F2  0FF7               	addlw	-9
 26422  0131F4  6ED9               	movwf	fsr2l,c
 26423  0131F6  50E2               	movf	fsr1h,w,c
 26424  0131F8  6EDA               	movwf	fsr2h,c
 26425  0131FA  0EFF               	movlw	255
 26426  0131FC  22DA               	addwfc	fsr2h,f,c
 26427  0131FE  0EFF               	movlw	255
 26428  013200  14DE               	andwf	postinc2,w,c
 26429  013202  6E09               	movwf	(btemp+8)^0,c
 26430  013204  0EFF               	movlw	255
 26431  013206  14DE               	andwf	postinc2,w,c
 26432  013208  6E0A               	movwf	(btemp+9)^0,c
 26433  01320A  0EFF               	movlw	255
 26434  01320C  14DE               	andwf	postinc2,w,c
 26435  01320E  6E0B               	movwf	(btemp+10)^0,c
 26436  013210  0E7F               	movlw	127
 26437  013212  14DE               	andwf	postinc2,w,c
 26438  013214  6E0C               	movwf	(btemp+11)^0,c
 26439  013216  5009               	movf	(btemp+8)^0,w,c
 26440  013218  100A               	iorwf	(btemp+9)^0,w,c
 26441  01321A  100B               	iorwf	(btemp+10)^0,w,c
 26442  01321C  100C               	iorwf	(btemp+11)^0,w,c
 26443  01321E  B4D8               	btfsc	status,2,c
 26444  013220  D004               	goto	l7916
 26445  013222                     u6470:
 26446                           
 26447                           ;stkvar	_aexp @ sp[(-13)+11]
 26448  013222  0EFE               	movlw	-2
 26449  013224  6AE3               	clrf	plusw1,c
 26450  013226  2AE3               	incf	plusw1,f,c
 26451  013228  D003               	goto	l7920
 26452  01322A                     l7916:
 26453                           
 26454                           ;stkvar	_prod @ sp[(-13)+0]
 26455  01322A  0EF3               	movlw	-13
 26456  01322C  B0E3               	btfsc	plusw1,0,c
 26457  01322E  D7F9               	goto	u6470
 26458  013230                     l7920:
 26459                           
 26460                           ;stkvar	_aexp @ sp[(-13)+11]
 26461  013230  0EFE               	movlw	-2
 26462  013232  50E3               	movf	plusw1,w,c
 26463  013234  B4D8               	btfsc	status,2,c
 26464  013236  D036               	goto	l7930
 26465                           
 26466                           ;stkvar	_prod @ sp[(-13)+0]
 26467  013238  50E1               	movf	fsr1l,w,c
 26468  01323A  0FF3               	addlw	-13
 26469  01323C  6ED9               	movwf	fsr2l,c
 26470  01323E  50E2               	movf	fsr1h,w,c
 26471  013240  6EDA               	movwf	fsr2h,c
 26472  013242  0EFF               	movlw	255
 26473  013244  22DA               	addwfc	fsr2h,f,c
 26474  013246  2ADE               	incf	postinc2,f,c
 26475  013248  0E00               	movlw	0
 26476  01324A  22DE               	addwfc	postinc2,f,c
 26477  01324C  22DE               	addwfc	postinc2,f,c
 26478  01324E  22DE               	addwfc	postinc2,f,c
 26479                           
 26480                           ;stkvar	_prod @ sp[(-13)+0]
 26481  013250  0EF6               	movlw	-10
 26482  013252  A0E3               	btfss	plusw1,0,c
 26483  013254  D027               	goto	l7930
 26484  013256  0E01               	movlw	1
 26485  013258  6E0C               	movwf	(btemp+11)^0,c
 26486                           
 26487                           ;stkvar	_prod @ sp[(-13)+0]
 26488  01325A  50E1               	movf	fsr1l,w,c
 26489  01325C  0FF3               	addlw	-13
 26490  01325E  6ED9               	movwf	fsr2l,c
 26491  013260  50E2               	movf	fsr1h,w,c
 26492  013262  6EDA               	movwf	fsr2h,c
 26493  013264  0EFF               	movlw	255
 26494  013266  22DA               	addwfc	fsr2h,f,c
 26495  013268  280C               	incf	(btemp+11)^0,w,c
 26496  01326A  52DE               	movf	postinc2,f,c
 26497  01326C  D008               	goto	u6510
 26498  01326E                     u6515:
 26499  01326E  52DE               	movf	postinc2,f,c
 26500  013270  90D8               	bcf	status,0,c
 26501  013272  BEDC               	btfsc	preinc2,7,c
 26502  013274  80D8               	bsf	status,0,c
 26503  013276  32DD               	rrcf	postdec2,f,c
 26504  013278  32DD               	rrcf	postdec2,f,c
 26505  01327A  32DD               	rrcf	postdec2,f,c
 26506  01327C  32DE               	rrcf	postinc2,f,c
 26507  01327E                     u6510:
 26508  01327E  2EE8               	decfsz	wreg,f,c
 26509  013280  D7F6               	goto	u6515
 26510                           
 26511                           ;stkvar	_temp @ sp[(-13)+8]
 26512  013282  0EFB               	movlw	-5
 26513  013284  50E3               	movf	plusw1,w,c
 26514  013286  0F01               	addlw	1
 26515  013288  6E01               	movwf	btemp^0,c
 26516  01328A  0EFB               	movlw	-5
 26517  01328C  0060  F007  FFE3   	movff	btemp,plusw1
 26518  013292  6A01               	clrf	btemp^0,c
 26519  013294  0EFC               	movlw	-4
 26520  013296  50E3               	movf	plusw1,w,c
 26521  013298  2001               	addwfc	btemp^0,w,c
 26522  01329A  6E01               	movwf	btemp^0,c
 26523  01329C  0EFC               	movlw	-4
 26524  01329E  0060  F007  FFE3   	movff	btemp,plusw1
 26525  0132A4                     l7930:
 26526                           
 26527                           ;stkvar	_temp @ sp[(-13)+8]
 26528  0132A4  0EFC               	movlw	-4
 26529  0132A6  BEE3               	btfsc	plusw1,7,c
 26530  0132A8  D020               	goto	l7934
 26531  0132AA  0EFC               	movlw	-4
 26532  0132AC  50E3               	movf	plusw1,w,c
 26533  0132AE  E104               	bnz	u6520
 26534  0132B0  0EFB               	movlw	-5
 26535  0132B2  28E3               	incf	plusw1,w,c
 26536  0132B4  A0D8               	btfss	status,0,c
 26537  0132B6  D019               	goto	l7934
 26538  0132B8                     u6520:
 26539  0132B8  0E00               	movlw	0
 26540  0132BA  6E09               	movwf	(btemp+8)^0,c
 26541  0132BC  0E00               	movlw	0
 26542  0132BE  6E0A               	movwf	(btemp+9)^0,c
 26543  0132C0  0E80               	movlw	128
 26544  0132C2  6E0B               	movwf	(btemp+10)^0,c
 26545  0132C4  0E7F               	movlw	127
 26546  0132C6  6E0C               	movwf	(btemp+11)^0,c
 26547                           
 26548                           ;stkvar	_prod @ sp[(-13)+0]
 26549  0132C8  0EF3               	movlw	-13
 26550  0132CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 26551  0132D0  0EF4               	movlw	-12
 26552  0132D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26553  0132D8  0EF5               	movlw	-11
 26554  0132DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26555  0132E0  0EF6               	movlw	-10
 26556  0132E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26557  0132E8  D044               	goto	l7950
 26558  0132EA                     l7934:
 26559                           
 26560                           ;stkvar	_temp @ sp[(-13)+8]
 26561  0132EA  0EFC               	movlw	-4
 26562  0132EC  BEE3               	btfsc	plusw1,7,c
 26563  0132EE  D007               	goto	u6530
 26564  0132F0  0EFC               	movlw	-4
 26565  0132F2  50E3               	movf	plusw1,w,c
 26566  0132F4  E10F               	bnz	l7940
 26567  0132F6  0EFB               	movlw	-5
 26568  0132F8  04E3               	decf	plusw1,w,c
 26569  0132FA  B0D8               	btfsc	status,0,c
 26570  0132FC  D00B               	goto	l7940
 26571  0132FE                     u6530:
 26572                           
 26573                           ;stkvar	_prod @ sp[(-13)+0]
 26574  0132FE  0EF3               	movlw	-13
 26575  013300  6AE3               	clrf	plusw1,c
 26576  013302  0EF4               	movlw	-12
 26577  013304  6AE3               	clrf	plusw1,c
 26578  013306  0EF5               	movlw	-11
 26579  013308  6AE3               	clrf	plusw1,c
 26580  01330A  0EF6               	movlw	-10
 26581  01330C  6AE3               	clrf	plusw1,c
 26582                           
 26583                           ;stkvar	_sign @ sp[(-13)+12]
 26584  01330E  0EFF               	movlw	-1
 26585  013310  6AE3               	clrf	plusw1,c
 26586  013312  D02F               	goto	l7950
 26587  013314                     l7940:
 26588                           
 26589                           ;stkvar	_temp @ sp[(-13)+8]
 26590                           ;stkvar	_bexp @ sp[(-13)+10]
 26591  013314  0EFB               	movlw	-5
 26592  013316  006F FF8C  F001    	movff	plusw1,btemp
 26593  01331C  0EFD               	movlw	-3
 26594  01331E  0060  F007  FFE3   	movff	btemp,plusw1
 26595                           
 26596                           ;stkvar	_prod @ sp[(-13)+0]
 26597  013324  50E1               	movf	fsr1l,w,c
 26598  013326  0FF3               	addlw	-13
 26599  013328  6ED9               	movwf	fsr2l,c
 26600  01332A  50E2               	movf	fsr1h,w,c
 26601  01332C  6EDA               	movwf	fsr2h,c
 26602  01332E  0EFF               	movlw	255
 26603  013330  22DA               	addwfc	fsr2h,f,c
 26604  013332  0EFF               	movlw	255
 26605  013334  16DE               	andwf	postinc2,f,c
 26606  013336  0EFF               	movlw	255
 26607  013338  16DE               	andwf	postinc2,f,c
 26608  01333A  0E7F               	movlw	127
 26609  01333C  16DE               	andwf	postinc2,f,c
 26610  01333E  0E00               	movlw	0
 26611  013340  16DE               	andwf	postinc2,f,c
 26612                           
 26613                           ;stkvar	_bexp @ sp[(-13)+10]
 26614  013342  0EFD               	movlw	-3
 26615  013344  A0E3               	btfss	plusw1,0,c
 26616  013346  D008               	goto	l7948
 26617                           
 26618                           ;stkvar	_prod @ sp[(-13)+0]
 26619  013348  0EF5               	movlw	245
 26620  01334A  24E1               	addwf	fsr1l,w,c
 26621  01334C  6ED9               	movwf	fsr2l,c
 26622  01334E  0EFF               	movlw	255
 26623  013350  20E2               	addwfc	fsr1h,w,c
 26624  013352  6EDA               	movwf	fsr2h,c
 26625  013354  0E00               	movlw	0
 26626  013356  8EDB               	bsf	plusw2,7,c
 26627  013358                     l7948:
 26628                           
 26629                           ;stkvar	_prod @ sp[(-13)+0]
 26630  013358  0EF6               	movlw	246
 26631  01335A  24E1               	addwf	fsr1l,w,c
 26632  01335C  6ED9               	movwf	fsr2l,c
 26633  01335E  0EFF               	movlw	255
 26634  013360  20E2               	addwfc	fsr1h,w,c
 26635  013362  6EDA               	movwf	fsr2h,c
 26636                           
 26637                           ;stkvar	_bexp @ sp[(-13)+10]
 26638  013364  0EFD               	movlw	-3
 26639  013366  006F FF8C  F00C    	movff	plusw1,btemp+11
 26640  01336C  90D8               	bcf	status,0,c
 26641  01336E  300C               	rrcf	(btemp+11)^0,w,c
 26642  013370  6EDF               	movwf	indf2,c
 26643  013372                     l7950:
 26644                           
 26645                           ;stkvar	_sign @ sp[(-13)+12]
 26646  013372  0EFF               	movlw	-1
 26647  013374  006F FF8C  F00C    	movff	plusw1,btemp+11
 26648                           
 26649                           ;stkvar	_prod @ sp[(-13)+0]
 26650  01337A  0EF6               	movlw	246
 26651  01337C  24E1               	addwf	fsr1l,w,c
 26652  01337E  6ED9               	movwf	fsr2l,c
 26653  013380  0EFF               	movlw	255
 26654  013382  20E2               	addwfc	fsr1h,w,c
 26655  013384  6EDA               	movwf	fsr2h,c
 26656  013386  500C               	movf	(btemp+11)^0,w,c
 26657  013388  12DF               	iorwf	indf2,f,c
 26658                           
 26659                           ;stkvar	_prod @ sp[(-13)+0]
 26660  01338A  0EF3               	movlw	-13
 26661  01338C  006F FF8C  F001    	movff	plusw1,btemp
 26662  013392  0EF4               	movlw	-12
 26663  013394  006F FF8C  F002    	movff	plusw1,btemp+1
 26664  01339A  0EF5               	movlw	-11
 26665  01339C  006F FF8C  F003    	movff	plusw1,btemp+2
 26666  0133A2  0EF6               	movlw	-10
 26667  0133A4  006F FF8C  F004    	movff	plusw1,btemp+3
 26668  0133AA                     l2923:
 26669                           
 26670                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26671  0133AA  0EEB               	movlw	235
 26672  0133AC  26E1               	addwf	fsr1l,f,c
 26673  0133AE  0EFF               	movlw	255
 26674  0133B0  22E2               	addwfc	fsr1h,f,c
 26675  0133B2  0012               	return		;funcret
 26676  0133B4                     __end_of___flmul:
 26677                           	opt callstack 0
 26678                           
 26679 ;; *************** function _SYSTEM_Initialize *****************
 26680 ;; Defined at:
 26681 ;;		line 50 in file "mcc_generated_files/mcc.c"
 26682 ;; Parameters:    Size  Location     Type
 26683 ;;		None
 26684 ;; Auto vars:     Size  Location     Type
 26685 ;;		None
 26686 ;; Return value:  Size  Location     Type
 26687 ;;                  1  [STACK] void 
 26688 ;; Registers used:
 26689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 26690 ;; Tracked objects:
 26691 ;;		On entry : 0/0
 26692 ;;		On exit  : 3F/3C
 26693 ;;		Unchanged: 0/0
 26694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26699 ;;Total ram usage:        0 bytes
 26700 ;; Hardware stack levels used:    1
 26701 ;; Hardware stack levels required when called:   17
 26702 ;; This function calls:
 26703 ;;		_ADCC_Initialize
 26704 ;;		_CLKREF_Initialize
 26705 ;;		_DMA1_Initialize
 26706 ;;		_DMA2_Initialize
 26707 ;;		_EXT_INT_Initialize
 26708 ;;		_FVR_Initialize
 26709 ;;		_INTERRUPT_Initialize
 26710 ;;		_OSCILLATOR_Initialize
 26711 ;;		_PIN_MANAGER_Initialize
 26712 ;;		_PMD_Initialize
 26713 ;;		_PWM8_Initialize
 26714 ;;		_SPI1_Initialize
 26715 ;;		_TMR2_Initialize
 26716 ;;		_TMR3_Initialize
 26717 ;;		_TMR5_Initialize
 26718 ;;		_TMR6_Initialize
 26719 ;;		_UART1_Initialize
 26720 ;;		_UART2_Initialize
 26721 ;; This function is called by:
 26722 ;;		_main
 26723 ;; This function uses a reentrant model
 26724 ;;
 26725                           
 26726                           	psect	text104
 26727  019EA6                     __ptext104:
 26728                           	opt callstack 0
 26729  019EA6                     _SYSTEM_Initialize:
 26730                           	opt callstack 13
 26731                           
 26732                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 26733                           
 26734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26735                           ;incstack = 0
 26736  019EA6  EC33  F0CD         	call	_INTERRUPT_Initialize	;wreg free
 26737                           
 26738                           ; BSR set to: 57
 26739                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 26740  019EAA  EC66  F0D5         	call	_PMD_Initialize	;wreg free
 26741                           
 26742                           ; BSR set to: 57
 26743                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 26744  019EAE  ECFB  F0CA         	call	_PIN_MANAGER_Initialize	;wreg free
 26745                           
 26746                           ; BSR set to: 58
 26747                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 26748  019EB2  EC5B  F0D5         	call	_OSCILLATOR_Initialize	;wreg free
 26749                           
 26750                           ; BSR set to: 57
 26751                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 26752  019EB6  ECDB  F0D5         	call	_FVR_Initialize	;wreg free
 26753                           
 26754                           ; BSR set to: 62
 26755                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 26756  019EBA  ECC8  F0CC         	call	_ADCC_Initialize	;wreg free
 26757                           
 26758                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 26759  019EBE  EC50  F0D5         	call	_PWM8_Initialize	;wreg free
 26760                           
 26761                           ; BSR set to: 63
 26762                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 26763  019EC2  EC39  F0D5         	call	_TMR2_Initialize	;wreg free
 26764                           
 26765                           ; BSR set to: 57
 26766                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 26767  019EC6  ECB4  F0D1         	call	_EXT_INT_Initialize	;wreg free
 26768                           
 26769                           ; BSR set to: 57
 26770                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 26771  019ECA  ECA2  F0D2         	call	_TMR6_Initialize	;wreg free
 26772                           
 26773                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 26774  019ECE  EC28  F0D0         	call	_TMR3_Initialize	;wreg free
 26775                           
 26776                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 26777  019ED2  EC05  F0D0         	call	_TMR5_Initialize	;wreg free
 26778                           
 26779                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 26780  019ED6  ECE2  F0CF         	call	_UART1_Initialize	;wreg free
 26781                           
 26782                           ; BSR set to: 57
 26783                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 26784  019EDA  ECFA  F0CD         	call	_UART2_Initialize	;wreg free
 26785                           
 26786                           ; BSR set to: 57
 26787                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 26788  019EDE  EC45  F0D5         	call	_SPI1_Initialize	;wreg free
 26789                           
 26790                           ; BSR set to: 61
 26791                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 26792  019EE2  EC56  F0CE         	call	_DMA2_Initialize	;wreg free
 26793                           
 26794                           ; BSR set to: 59
 26795                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 26796  019EE6  EC93  F0CC         	call	_DMA1_Initialize	;wreg free
 26797                           
 26798                           ; BSR set to: 59
 26799                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 26800  019EEA  ECAF  F0D5         	call	_CLKREF_Initialize	;wreg free
 26801                           
 26802                           ; BSR set to: 60
 26803                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26804  019EEE  0012               	return		;funcret
 26805  019EF0                     __end_of_SYSTEM_Initialize:
 26806                           	opt callstack 0
 26807                           
 26808 ;; *************** function _UART2_Initialize *****************
 26809 ;; Defined at:
 26810 ;;		line 78 in file "mcc_generated_files/uart2.c"
 26811 ;; Parameters:    Size  Location     Type
 26812 ;;		None
 26813 ;; Auto vars:     Size  Location     Type
 26814 ;;		None
 26815 ;; Return value:  Size  Location     Type
 26816 ;;                  1  [STACK] void 
 26817 ;; Registers used:
 26818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26819 ;; Tracked objects:
 26820 ;;		On entry : 3F/39
 26821 ;;		On exit  : 3F/39
 26822 ;;		Unchanged: 0/0
 26823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26828 ;;Total ram usage:        0 bytes
 26829 ;; Hardware stack levels used:    1
 26830 ;; Hardware stack levels required when called:   16
 26831 ;; This function calls:
 26832 ;;		_UART2_SetRxInterruptHandler
 26833 ;;		_UART2_SetTxInterruptHandler
 26834 ;; This function is called by:
 26835 ;;		_SYSTEM_Initialize
 26836 ;; This function uses a reentrant model
 26837 ;;
 26838                           
 26839                           	psect	text105
 26840  019BF4                     __ptext105:
 26841                           	opt callstack 0
 26842  019BF4                     _UART2_Initialize:
 26843                           	opt callstack 13
 26844                           
 26845                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 26846                           
 26847                           ; BSR set to: 60
 26848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26849                           ;incstack = 0
 26850  019BF4  0139               	movlb	57	; () banked
 26851  019BF6  9596               	bcf	150,2,b	;volatile
 26852                           
 26853                           ; BSR set to: 57
 26854                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 26855  019BF8  0ECE               	movlw	low _UART2_Receive_ISR
 26856  019BFA  6EE6               	movwf	postinc1,c
 26857  019BFC  0EA9               	movlw	high _UART2_Receive_ISR
 26858  019BFE  6EE6               	movwf	postinc1,c
 26859  019C00  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 26860  019C02  6EE6               	movwf	postinc1,c
 26861  019C04  EC1B  F0D3         	call	_UART2_SetRxInterruptHandler	;wreg free
 26862                           
 26863                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 26864  019C08  0139               	movlb	57	; () banked
 26865  019C0A  9796               	bcf	150,3,b	;volatile
 26866                           
 26867                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 26868  019C0C  0E18               	movlw	low _UART2_Transmit_ISR
 26869  019C0E  6EE6               	movwf	postinc1,c
 26870  019C10  0EA5               	movlw	high _UART2_Transmit_ISR
 26871  019C12  6EE6               	movwf	postinc1,c
 26872  019C14  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 26873  019C16  6EE6               	movwf	postinc1,c
 26874  019C18  EC07  F0D3         	call	_UART2_SetTxInterruptHandler	;wreg free
 26875                           
 26876                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 26877  019C1C  013D               	movlb	61	; () banked
 26878  019C1E  6BD4               	clrf	212,b	;volatile
 26879                           
 26880                           ; BSR set to: 61
 26881                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 26882  019C20  6BD6               	clrf	214,b	;volatile
 26883                           
 26884                           ; BSR set to: 61
 26885                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 26886  019C22  6BD8               	clrf	216,b	;volatile
 26887                           
 26888                           ; BSR set to: 61
 26889                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 26890  019C24  0EB0               	movlw	176
 26891  019C26  6FDA               	movwf	218,b	;volatile
 26892                           
 26893                           ; BSR set to: 61
 26894                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 26895  019C28  0E80               	movlw	128
 26896  019C2A  6FDB               	movwf	219,b	;volatile
 26897                           
 26898                           ; BSR set to: 61
 26899                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 26900  019C2C  6BDC               	clrf	220,b	;volatile
 26901                           
 26902                           ; BSR set to: 61
 26903                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 26904  019C2E  0E82               	movlw	130
 26905  019C30  6FDD               	movwf	221,b	;volatile
 26906                           
 26907                           ; BSR set to: 61
 26908                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 26909  019C32  0E06               	movlw	6
 26910  019C34  6FDE               	movwf	222,b	;volatile
 26911                           
 26912                           ; BSR set to: 61
 26913                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 26914  019C36  6BDF               	clrf	223,b	;volatile
 26915                           
 26916                           ; BSR set to: 61
 26917                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 26918  019C38  6BE0               	clrf	224,b	;volatile
 26919                           
 26920                           ; BSR set to: 61
 26921                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 26922  019C3A  6BE1               	clrf	225,b	;volatile
 26923                           
 26924                           ; BSR set to: 61
 26925                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 26926  019C3C  6BE2               	clrf	226,b	;volatile
 26927                           
 26928                           ; BSR set to: 61
 26929                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 26930  019C3E  6A34               	clrf	_uart2TxHead^0,c	;volatile
 26931                           
 26932                           ; BSR set to: 61
 26933                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 26934  019C40  6A33               	clrf	_uart2TxTail^0,c	;volatile
 26935                           
 26936                           ; BSR set to: 61
 26937                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 26938  019C42  0E40               	movlw	64
 26939  019C44  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 26940                           
 26941                           ; BSR set to: 61
 26942                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 26943  019C46  6A31               	clrf	_uart2RxHead^0,c	;volatile
 26944                           
 26945                           ; BSR set to: 61
 26946                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 26947  019C48  6A30               	clrf	_uart2RxTail^0,c	;volatile
 26948                           
 26949                           ; BSR set to: 61
 26950                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 26951  019C4A  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 26952                           
 26953                           ; BSR set to: 61
 26954                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 26955  019C4C  0139               	movlb	57	; () banked
 26956  019C4E  8596               	bsf	150,2,b	;volatile
 26957                           
 26958                           ; BSR set to: 57
 26959                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26960  019C50  0012               	return		;funcret
 26961  019C52                     __end_of_UART2_Initialize:
 26962                           	opt callstack 0
 26963                           
 26964 ;; *************** function _UART2_SetTxInterruptHandler *****************
 26965 ;; Defined at:
 26966 ;;		line 252 in file "mcc_generated_files/uart2.c"
 26967 ;; Parameters:    Size  Location     Type
 26968 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26969 ;;		 -> UART2_Transmit_ISR(1), 
 26970 ;; Auto vars:     Size  Location     Type
 26971 ;;		None
 26972 ;; Return value:  Size  Location     Type
 26973 ;;                  1  [STACK] void 
 26974 ;; Registers used:
 26975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26976 ;; Tracked objects:
 26977 ;;		On entry : 3F/39
 26978 ;;		On exit  : 0/0
 26979 ;;		Unchanged: 0/0
 26980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26985 ;;Total ram usage:        0 bytes
 26986 ;; Hardware stack levels used:    1
 26987 ;; Hardware stack levels required when called:   15
 26988 ;; This function calls:
 26989 ;;		Nothing
 26990 ;; This function is called by:
 26991 ;;		_UART2_Initialize
 26992 ;; This function uses a reentrant model
 26993 ;;
 26994                           
 26995                           	psect	text106
 26996  01A60E                     __ptext106:
 26997                           	opt callstack 0
 26998  01A60E                     _UART2_SetTxInterruptHandler:
 26999                           	opt callstack 13
 27000                           
 27001                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 27002                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27003                           
 27004                           ; BSR set to: 57
 27005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27006                           ;incstack = 0
 27007  01A60E  50E1               	movf	fsr1l,w,c
 27008  01A610  0FFD               	addlw	-3
 27009  01A612  6ED9               	movwf	fsr2l,c
 27010  01A614  50E2               	movf	fsr1h,w,c
 27011  01A616  6EDA               	movwf	fsr2h,c
 27012  01A618  0EFF               	movlw	255
 27013  01A61A  22DA               	addwfc	fsr2h,f,c
 27014  01A61C  006F FF78  F0AE    	movff	postinc2,_UART2_TxInterruptHandler
 27015  01A622  006F FF78  F0AF    	movff	postinc2,_UART2_TxInterruptHandler+1
 27016  01A628  006F FF74  F0B0    	movff	postdec2,_UART2_TxInterruptHandler+2
 27017                           
 27018                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27019  01A62E  52E5               	movf	postdec1,f,c
 27020  01A630  52E5               	movf	postdec1,f,c
 27021  01A632  52E5               	movf	postdec1,f,c
 27022  01A634  0012               	return		;funcret
 27023  01A636                     __end_of_UART2_SetTxInterruptHandler:
 27024                           	opt callstack 0
 27025                           
 27026 ;; *************** function _UART2_SetRxInterruptHandler *****************
 27027 ;; Defined at:
 27028 ;;		line 248 in file "mcc_generated_files/uart2.c"
 27029 ;; Parameters:    Size  Location     Type
 27030 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27031 ;;		 -> UART2_Receive_ISR(1), 
 27032 ;; Auto vars:     Size  Location     Type
 27033 ;;		None
 27034 ;; Return value:  Size  Location     Type
 27035 ;;                  1  [STACK] void 
 27036 ;; Registers used:
 27037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27038 ;; Tracked objects:
 27039 ;;		On entry : 3F/39
 27040 ;;		On exit  : 0/0
 27041 ;;		Unchanged: 0/0
 27042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27047 ;;Total ram usage:        0 bytes
 27048 ;; Hardware stack levels used:    1
 27049 ;; Hardware stack levels required when called:   15
 27050 ;; This function calls:
 27051 ;;		Nothing
 27052 ;; This function is called by:
 27053 ;;		_UART2_Initialize
 27054 ;; This function uses a reentrant model
 27055 ;;
 27056                           
 27057                           	psect	text107
 27058  01A636                     __ptext107:
 27059                           	opt callstack 0
 27060  01A636                     _UART2_SetRxInterruptHandler:
 27061                           	opt callstack 13
 27062                           
 27063                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 27064                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27065                           
 27066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27067                           ;incstack = 0
 27068  01A636  50E1               	movf	fsr1l,w,c
 27069  01A638  0FFD               	addlw	-3
 27070  01A63A  6ED9               	movwf	fsr2l,c
 27071  01A63C  50E2               	movf	fsr1h,w,c
 27072  01A63E  6EDA               	movwf	fsr2h,c
 27073  01A640  0EFF               	movlw	255
 27074  01A642  22DA               	addwfc	fsr2h,f,c
 27075  01A644  006F FF78  F0B1    	movff	postinc2,_UART2_RxInterruptHandler
 27076  01A64A  006F FF78  F0B2    	movff	postinc2,_UART2_RxInterruptHandler+1
 27077  01A650  006F FF74  F0B3    	movff	postdec2,_UART2_RxInterruptHandler+2
 27078                           
 27079                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27080  01A656  52E5               	movf	postdec1,f,c
 27081  01A658  52E5               	movf	postdec1,f,c
 27082  01A65A  52E5               	movf	postdec1,f,c
 27083  01A65C  0012               	return		;funcret
 27084  01A65E                     __end_of_UART2_SetRxInterruptHandler:
 27085                           	opt callstack 0
 27086                           
 27087 ;; *************** function _UART1_Initialize *****************
 27088 ;; Defined at:
 27089 ;;		line 75 in file "mcc_generated_files/uart1.c"
 27090 ;; Parameters:    Size  Location     Type
 27091 ;;		None
 27092 ;; Auto vars:     Size  Location     Type
 27093 ;;		None
 27094 ;; Return value:  Size  Location     Type
 27095 ;;                  1  [STACK] void 
 27096 ;; Registers used:
 27097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27098 ;; Tracked objects:
 27099 ;;		On entry : 0/39
 27100 ;;		On exit  : 3F/39
 27101 ;;		Unchanged: 0/0
 27102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27107 ;;Total ram usage:        0 bytes
 27108 ;; Hardware stack levels used:    1
 27109 ;; Hardware stack levels required when called:   16
 27110 ;; This function calls:
 27111 ;;		_UART1_SetRxInterruptHandler
 27112 ;; This function is called by:
 27113 ;;		_SYSTEM_Initialize
 27114 ;; This function uses a reentrant model
 27115 ;;
 27116                           
 27117                           	psect	text108
 27118  019FC4                     __ptext108:
 27119                           	opt callstack 0
 27120  019FC4                     _UART1_Initialize:
 27121                           	opt callstack 13
 27122                           
 27123                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 27124                           
 27125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27126                           ;incstack = 0
 27127  019FC4  0139               	movlb	57	; () banked
 27128  019FC6  9793               	bcf	147,3,b	;volatile
 27129                           
 27130                           ; BSR set to: 57
 27131                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 27132  019FC8  0E08               	movlw	low _UART1_Receive_ISR
 27133  019FCA  6EE6               	movwf	postinc1,c
 27134  019FCC  0EAA               	movlw	high _UART1_Receive_ISR
 27135  019FCE  6EE6               	movwf	postinc1,c
 27136  019FD0  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 27137  019FD2  6EE6               	movwf	postinc1,c
 27138  019FD4  EC2F  F0D3         	call	_UART1_SetRxInterruptHandler	;wreg free
 27139                           
 27140                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 27141  019FD8  013D               	movlb	61	; () banked
 27142  019FDA  6BEC               	clrf	236,b	;volatile
 27143                           
 27144                           ; BSR set to: 61
 27145                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 27146  019FDC  6BED               	clrf	237,b	;volatile
 27147                           
 27148                           ; BSR set to: 61
 27149                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 27150  019FDE  6BEE               	clrf	238,b	;volatile
 27151                           
 27152                           ; BSR set to: 61
 27153                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 27154  019FE0  6BEF               	clrf	239,b	;volatile
 27155                           
 27156                           ; BSR set to: 61
 27157                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 27158  019FE2  6BF0               	clrf	240,b	;volatile
 27159                           
 27160                           ; BSR set to: 61
 27161                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 27162  019FE4  6BF1               	clrf	241,b	;volatile
 27163                           
 27164                           ; BSR set to: 61
 27165                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 27166  019FE6  0EB0               	movlw	176
 27167  019FE8  6FF2               	movwf	242,b	;volatile
 27168                           
 27169                           ; BSR set to: 61
 27170                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 27171  019FEA  0E80               	movlw	128
 27172  019FEC  6FF3               	movwf	243,b	;volatile
 27173                           
 27174                           ; BSR set to: 61
 27175                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 27176  019FEE  6BF4               	clrf	244,b	;volatile
 27177                           
 27178                           ; BSR set to: 61
 27179                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 27180  019FF0  0E8A               	movlw	138
 27181  019FF2  6FF5               	movwf	245,b	;volatile
 27182                           
 27183                           ; BSR set to: 61
 27184                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 27185  019FF4  6BF6               	clrf	246,b	;volatile
 27186                           
 27187                           ; BSR set to: 61
 27188                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 27189  019FF6  6BF7               	clrf	247,b	;volatile
 27190                           
 27191                           ; BSR set to: 61
 27192                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 27193  019FF8  6BF8               	clrf	248,b	;volatile
 27194                           
 27195                           ; BSR set to: 61
 27196                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 27197  019FFA  6BF9               	clrf	249,b	;volatile
 27198                           
 27199                           ; BSR set to: 61
 27200                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 27201  019FFC  6BFA               	clrf	250,b	;volatile
 27202                           
 27203                           ; BSR set to: 61
 27204                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 27205  019FFE  6A37               	clrf	_uart1RxHead^0,c	;volatile
 27206                           
 27207                           ; BSR set to: 61
 27208                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 27209  01A000  6A36               	clrf	_uart1RxTail^0,c	;volatile
 27210                           
 27211                           ; BSR set to: 61
 27212                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 27213  01A002  6A35               	clrf	_uart1RxCount^0,c	;volatile
 27214                           
 27215                           ; BSR set to: 61
 27216                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 27217  01A004  0139               	movlb	57	; () banked
 27218  01A006  8793               	bsf	147,3,b	;volatile
 27219                           
 27220                           ; BSR set to: 57
 27221                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 27222  01A008  0012               	return		;funcret
 27223  01A00A                     __end_of_UART1_Initialize:
 27224                           	opt callstack 0
 27225                           
 27226 ;; *************** function _UART1_SetRxInterruptHandler *****************
 27227 ;; Defined at:
 27228 ;;		line 207 in file "mcc_generated_files/uart1.c"
 27229 ;; Parameters:    Size  Location     Type
 27230 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27231 ;;		 -> UART1_Receive_ISR(1), 
 27232 ;; Auto vars:     Size  Location     Type
 27233 ;;		None
 27234 ;; Return value:  Size  Location     Type
 27235 ;;                  1  [STACK] void 
 27236 ;; Registers used:
 27237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27238 ;; Tracked objects:
 27239 ;;		On entry : 3F/39
 27240 ;;		On exit  : 0/0
 27241 ;;		Unchanged: 0/0
 27242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27247 ;;Total ram usage:        0 bytes
 27248 ;; Hardware stack levels used:    1
 27249 ;; Hardware stack levels required when called:   15
 27250 ;; This function calls:
 27251 ;;		Nothing
 27252 ;; This function is called by:
 27253 ;;		_UART1_Initialize
 27254 ;; This function uses a reentrant model
 27255 ;;
 27256                           
 27257                           	psect	text109
 27258  01A65E                     __ptext109:
 27259                           	opt callstack 0
 27260  01A65E                     _UART1_SetRxInterruptHandler:
 27261                           	opt callstack 13
 27262                           
 27263                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 27264                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27265                           
 27266                           ; BSR set to: 57
 27267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27268                           ;incstack = 0
 27269  01A65E  50E1               	movf	fsr1l,w,c
 27270  01A660  0FFD               	addlw	-3
 27271  01A662  6ED9               	movwf	fsr2l,c
 27272  01A664  50E2               	movf	fsr1h,w,c
 27273  01A666  6EDA               	movwf	fsr2h,c
 27274  01A668  0EFF               	movlw	255
 27275  01A66A  22DA               	addwfc	fsr2h,f,c
 27276  01A66C  006F FF78  F0AB    	movff	postinc2,_UART1_RxInterruptHandler
 27277  01A672  006F FF78  F0AC    	movff	postinc2,_UART1_RxInterruptHandler+1
 27278  01A678  006F FF74  F0AD    	movff	postdec2,_UART1_RxInterruptHandler+2
 27279                           
 27280                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27281  01A67E  52E5               	movf	postdec1,f,c
 27282  01A680  52E5               	movf	postdec1,f,c
 27283  01A682  52E5               	movf	postdec1,f,c
 27284  01A684  0012               	return		;funcret
 27285  01A686                     __end_of_UART1_SetRxInterruptHandler:
 27286                           	opt callstack 0
 27287                           
 27288 ;; *************** function _TMR6_Initialize *****************
 27289 ;; Defined at:
 27290 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 27291 ;; Parameters:    Size  Location     Type
 27292 ;;		None
 27293 ;; Auto vars:     Size  Location     Type
 27294 ;;		None
 27295 ;; Return value:  Size  Location     Type
 27296 ;;                  1  [STACK] void 
 27297 ;; Registers used:
 27298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27299 ;; Tracked objects:
 27300 ;;		On entry : 3F/39
 27301 ;;		On exit  : 0/0
 27302 ;;		Unchanged: 0/0
 27303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27308 ;;Total ram usage:        0 bytes
 27309 ;; Hardware stack levels used:    1
 27310 ;; Hardware stack levels required when called:   16
 27311 ;; This function calls:
 27312 ;;		_TMR6_SetInterruptHandler
 27313 ;; This function is called by:
 27314 ;;		_SYSTEM_Initialize
 27315 ;; This function uses a reentrant model
 27316 ;;
 27317                           
 27318                           	psect	text110
 27319  01A544                     __ptext110:
 27320                           	opt callstack 0
 27321  01A544                     _TMR6_Initialize:
 27322                           	opt callstack 13
 27323                           
 27324                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 27325                           
 27326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27327                           ;incstack = 0
 27328  01A544  0E01               	movlw	1
 27329  01A546  6E96               	movwf	150,c	;volatile
 27330                           
 27331                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 27332  01A548  6A95               	clrf	149,c	;volatile
 27333                           
 27334                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 27335  01A54A  6A97               	clrf	151,c	;volatile
 27336                           
 27337                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 27338  01A54C  0E7C               	movlw	124
 27339  01A54E  6E93               	movwf	147,c	;volatile
 27340                           
 27341                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 27342  01A550  6A92               	clrf	146,c	;volatile
 27343                           
 27344                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 27345  01A552  0139               	movlb	57	; () banked
 27346  01A554  91A9               	bcf	169,0,b	;volatile
 27347                           
 27348                           ; BSR set to: 57
 27349                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 27350  01A556  8199               	bsf	153,0,b	;volatile
 27351                           
 27352                           ; BSR set to: 57
 27353                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 27354  01A558  0E58               	movlw	low _TMR6_DefaultInterruptHandler
 27355  01A55A  6EE6               	movwf	postinc1,c
 27356  01A55C  0E9E               	movlw	high _TMR6_DefaultInterruptHandler
 27357  01A55E  6EE6               	movwf	postinc1,c
 27358  01A560  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 27359  01A562  6EE6               	movwf	postinc1,c
 27360  01A564  EC43  F0D3         	call	_TMR6_SetInterruptHandler	;wreg free
 27361                           
 27362                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 27363  01A568  0EE0               	movlw	224
 27364  01A56A  6E94               	movwf	148,c	;volatile
 27365                           
 27366                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27367  01A56C  0012               	return		;funcret
 27368  01A56E                     __end_of_TMR6_Initialize:
 27369                           	opt callstack 0
 27370                           
 27371 ;; *************** function _TMR6_SetInterruptHandler *****************
 27372 ;; Defined at:
 27373 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 27374 ;; Parameters:    Size  Location     Type
 27375 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27376 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 27377 ;; Auto vars:     Size  Location     Type
 27378 ;;		None
 27379 ;; Return value:  Size  Location     Type
 27380 ;;                  1  [STACK] void 
 27381 ;; Registers used:
 27382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27383 ;; Tracked objects:
 27384 ;;		On entry : 3F/39
 27385 ;;		On exit  : 0/0
 27386 ;;		Unchanged: 0/0
 27387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27392 ;;Total ram usage:        0 bytes
 27393 ;; Hardware stack levels used:    1
 27394 ;; Hardware stack levels required when called:   15
 27395 ;; This function calls:
 27396 ;;		Nothing
 27397 ;; This function is called by:
 27398 ;;		_TMR6_Initialize
 27399 ;; This function uses a reentrant model
 27400 ;;
 27401                           
 27402                           	psect	text111
 27403  01A686                     __ptext111:
 27404                           	opt callstack 0
 27405  01A686                     _TMR6_SetInterruptHandler:
 27406                           	opt callstack 13
 27407                           
 27408                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 27409                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27410                           
 27411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27412                           ;incstack = 0
 27413  01A686  50E1               	movf	fsr1l,w,c
 27414  01A688  0FFD               	addlw	-3
 27415  01A68A  6ED9               	movwf	fsr2l,c
 27416  01A68C  50E2               	movf	fsr1h,w,c
 27417  01A68E  6EDA               	movwf	fsr2h,c
 27418  01A690  0EFF               	movlw	255
 27419  01A692  22DA               	addwfc	fsr2h,f,c
 27420  01A694  006F FF78  F0A2    	movff	postinc2,_TMR6_InterruptHandler
 27421  01A69A  006F FF78  F0A3    	movff	postinc2,_TMR6_InterruptHandler+1
 27422  01A6A0  006F FF74  F0A4    	movff	postdec2,_TMR6_InterruptHandler+2
 27423                           
 27424                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27425  01A6A6  52E5               	movf	postdec1,f,c
 27426  01A6A8  52E5               	movf	postdec1,f,c
 27427  01A6AA  52E5               	movf	postdec1,f,c
 27428  01A6AC  0012               	return		;funcret
 27429  01A6AE                     __end_of_TMR6_SetInterruptHandler:
 27430                           	opt callstack 0
 27431                           
 27432 ;; *************** function _TMR5_Initialize *****************
 27433 ;; Defined at:
 27434 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 27435 ;; Parameters:    Size  Location     Type
 27436 ;;		None
 27437 ;; Auto vars:     Size  Location     Type
 27438 ;;		None
 27439 ;; Return value:  Size  Location     Type
 27440 ;;                  1  [STACK] void 
 27441 ;; Registers used:
 27442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 27443 ;; Tracked objects:
 27444 ;;		On entry : 0/39
 27445 ;;		On exit  : 0/0
 27446 ;;		Unchanged: 0/0
 27447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27452 ;;Total ram usage:        0 bytes
 27453 ;; Hardware stack levels used:    1
 27454 ;; Hardware stack levels required when called:   16
 27455 ;; This function calls:
 27456 ;;		_TMR5_SetInterruptHandler
 27457 ;; This function is called by:
 27458 ;;		_SYSTEM_Initialize
 27459 ;; This function uses a reentrant model
 27460 ;;
 27461                           
 27462                           	psect	text112
 27463  01A00A                     __ptext112:
 27464                           	opt callstack 0
 27465  01A00A                     _TMR5_Initialize:
 27466                           	opt callstack 13
 27467                           
 27468                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 27469                           
 27470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27471                           ;incstack = 0
 27472  01A00A  6A9B               	clrf	155,c	;volatile
 27473                           
 27474                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 27475  01A00C  6A9C               	clrf	156,c	;volatile
 27476                           
 27477                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 27478  01A00E  0E01               	movlw	1
 27479  01A010  6E9D               	movwf	157,c	;volatile
 27480                           
 27481                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 27482  01A012  0E63               	movlw	99
 27483  01A014  6E99               	movwf	153,c	;volatile
 27484                           
 27485                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 27486  01A016  0EC0               	movlw	192
 27487  01A018  6E98               	movwf	152,c	;volatile
 27488                           
 27489                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 27490  01A01A  5098               	movf	152,w,c	;volatile
 27491  01A01C  006F FE64  F001    	movff	16281,btemp	;volatile
 27492  01A022  6A02               	clrf	(btemp+1)^0,c
 27493  01A024  0060  F004  F002   	movff	btemp,btemp+1
 27494  01A02A  6A01               	clrf	btemp^0,c
 27495  01A02C  1001               	iorwf	btemp^0,w,c
 27496  01A02E  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 27497  01A030  5002               	movf	(btemp+1)^0,w,c
 27498  01A032  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 27499                           
 27500                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 27501  01A034  0139               	movlb	57	; () banked
 27502  01A036  9DA8               	bcf	168,6,b	;volatile
 27503                           
 27504                           ; BSR set to: 57
 27505                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 27506  01A038  8D98               	bsf	152,6,b	;volatile
 27507                           
 27508                           ; BSR set to: 57
 27509                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 27510  01A03A  0E9C               	movlw	low _TMR5_DefaultInterruptHandler
 27511  01A03C  6EE6               	movwf	postinc1,c
 27512  01A03E  0EA3               	movlw	high _TMR5_DefaultInterruptHandler
 27513  01A040  6EE6               	movwf	postinc1,c
 27514  01A042  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 27515  01A044  6EE6               	movwf	postinc1,c
 27516  01A046  EC57  F0D3         	call	_TMR5_SetInterruptHandler	;wreg free
 27517                           
 27518                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 27519  01A04A  0E31               	movlw	49
 27520  01A04C  6E9A               	movwf	154,c	;volatile
 27521                           
 27522                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27523  01A04E  0012               	return		;funcret
 27524  01A050                     __end_of_TMR5_Initialize:
 27525                           	opt callstack 0
 27526                           
 27527 ;; *************** function _TMR5_SetInterruptHandler *****************
 27528 ;; Defined at:
 27529 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 27530 ;; Parameters:    Size  Location     Type
 27531 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27532 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 27533 ;; Auto vars:     Size  Location     Type
 27534 ;;		None
 27535 ;; Return value:  Size  Location     Type
 27536 ;;                  1  [STACK] void 
 27537 ;; Registers used:
 27538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27539 ;; Tracked objects:
 27540 ;;		On entry : 3F/39
 27541 ;;		On exit  : 0/0
 27542 ;;		Unchanged: 0/0
 27543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27548 ;;Total ram usage:        0 bytes
 27549 ;; Hardware stack levels used:    1
 27550 ;; Hardware stack levels required when called:   15
 27551 ;; This function calls:
 27552 ;;		Nothing
 27553 ;; This function is called by:
 27554 ;;		_TMR5_Initialize
 27555 ;; This function uses a reentrant model
 27556 ;;
 27557                           
 27558                           	psect	text113
 27559  01A6AE                     __ptext113:
 27560                           	opt callstack 0
 27561  01A6AE                     _TMR5_SetInterruptHandler:
 27562                           	opt callstack 13
 27563                           
 27564                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 27565                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27566                           
 27567                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27568                           ;incstack = 0
 27569  01A6AE  50E1               	movf	fsr1l,w,c
 27570  01A6B0  0FFD               	addlw	-3
 27571  01A6B2  6ED9               	movwf	fsr2l,c
 27572  01A6B4  50E2               	movf	fsr1h,w,c
 27573  01A6B6  6EDA               	movwf	fsr2h,c
 27574  01A6B8  0EFF               	movlw	255
 27575  01A6BA  22DA               	addwfc	fsr2h,f,c
 27576  01A6BC  006F FF78  F09F    	movff	postinc2,_TMR5_InterruptHandler
 27577  01A6C2  006F FF78  F0A0    	movff	postinc2,_TMR5_InterruptHandler+1
 27578  01A6C8  006F FF74  F0A1    	movff	postdec2,_TMR5_InterruptHandler+2
 27579                           
 27580                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27581  01A6CE  52E5               	movf	postdec1,f,c
 27582  01A6D0  52E5               	movf	postdec1,f,c
 27583  01A6D2  52E5               	movf	postdec1,f,c
 27584  01A6D4  0012               	return		;funcret
 27585  01A6D6                     __end_of_TMR5_SetInterruptHandler:
 27586                           	opt callstack 0
 27587                           
 27588 ;; *************** function _TMR3_Initialize *****************
 27589 ;; Defined at:
 27590 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 27591 ;; Parameters:    Size  Location     Type
 27592 ;;		None
 27593 ;; Auto vars:     Size  Location     Type
 27594 ;;		None
 27595 ;; Return value:  Size  Location     Type
 27596 ;;                  1  [STACK] void 
 27597 ;; Registers used:
 27598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 27599 ;; Tracked objects:
 27600 ;;		On entry : 0/39
 27601 ;;		On exit  : 0/0
 27602 ;;		Unchanged: 0/0
 27603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27608 ;;Total ram usage:        0 bytes
 27609 ;; Hardware stack levels used:    1
 27610 ;; Hardware stack levels required when called:   16
 27611 ;; This function calls:
 27612 ;;		_TMR3_SetInterruptHandler
 27613 ;; This function is called by:
 27614 ;;		_SYSTEM_Initialize
 27615 ;; This function uses a reentrant model
 27616 ;;
 27617                           
 27618                           	psect	text114
 27619  01A050                     __ptext114:
 27620                           	opt callstack 0
 27621  01A050                     _TMR3_Initialize:
 27622                           	opt callstack 13
 27623                           
 27624                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 27625                           
 27626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27627                           ;incstack = 0
 27628  01A050  6AA7               	clrf	167,c	;volatile
 27629                           
 27630                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 27631  01A052  6AA8               	clrf	168,c	;volatile
 27632                           
 27633                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 27634  01A054  0E01               	movlw	1
 27635  01A056  6EA9               	movwf	169,c	;volatile
 27636                           
 27637                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 27638  01A058  0E3C               	movlw	60
 27639  01A05A  6EA5               	movwf	165,c	;volatile
 27640                           
 27641                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 27642  01A05C  0EB0               	movlw	176
 27643  01A05E  6EA4               	movwf	164,c	;volatile
 27644                           
 27645                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 27646  01A060  50A4               	movf	164,w,c	;volatile
 27647  01A062  006F FE94  F001    	movff	16293,btemp	;volatile
 27648  01A068  6A02               	clrf	(btemp+1)^0,c
 27649  01A06A  0060  F004  F002   	movff	btemp,btemp+1
 27650  01A070  6A01               	clrf	btemp^0,c
 27651  01A072  1001               	iorwf	btemp^0,w,c
 27652  01A074  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 27653  01A076  5002               	movf	(btemp+1)^0,w,c
 27654  01A078  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 27655                           
 27656                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 27657  01A07A  0139               	movlb	57	; () banked
 27658  01A07C  9DA6               	bcf	166,6,b	;volatile
 27659                           
 27660                           ; BSR set to: 57
 27661                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 27662  01A07E  8D96               	bsf	150,6,b	;volatile
 27663                           
 27664                           ; BSR set to: 57
 27665                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 27666  01A080  0EE0               	movlw	low _TMR3_DefaultInterruptHandler
 27667  01A082  6EE6               	movwf	postinc1,c
 27668  01A084  0EAB               	movlw	high _TMR3_DefaultInterruptHandler
 27669  01A086  6EE6               	movwf	postinc1,c
 27670  01A088  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 27671  01A08A  6EE6               	movwf	postinc1,c
 27672  01A08C  EC6B  F0D3         	call	_TMR3_SetInterruptHandler	;wreg free
 27673                           
 27674                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 27675  01A090  0E31               	movlw	49
 27676  01A092  6EA6               	movwf	166,c	;volatile
 27677                           
 27678                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27679  01A094  0012               	return		;funcret
 27680  01A096                     __end_of_TMR3_Initialize:
 27681                           	opt callstack 0
 27682                           
 27683 ;; *************** function _TMR3_SetInterruptHandler *****************
 27684 ;; Defined at:
 27685 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 27686 ;; Parameters:    Size  Location     Type
 27687 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27688 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 27689 ;; Auto vars:     Size  Location     Type
 27690 ;;		None
 27691 ;; Return value:  Size  Location     Type
 27692 ;;                  1  [STACK] void 
 27693 ;; Registers used:
 27694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27695 ;; Tracked objects:
 27696 ;;		On entry : 0/1
 27697 ;;		On exit  : 0/0
 27698 ;;		Unchanged: 0/0
 27699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27704 ;;Total ram usage:        0 bytes
 27705 ;; Hardware stack levels used:    1
 27706 ;; Hardware stack levels required when called:   15
 27707 ;; This function calls:
 27708 ;;		Nothing
 27709 ;; This function is called by:
 27710 ;;		_TMR3_Initialize
 27711 ;;		_init_bsoc
 27712 ;; This function uses a reentrant model
 27713 ;;
 27714                           
 27715                           	psect	text115
 27716  01A6D6                     __ptext115:
 27717                           	opt callstack 0
 27718  01A6D6                     _TMR3_SetInterruptHandler:
 27719                           	opt callstack 14
 27720                           
 27721                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 27722                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27723                           
 27724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27725                           ;incstack = 0
 27726  01A6D6  50E1               	movf	fsr1l,w,c
 27727  01A6D8  0FFD               	addlw	-3
 27728  01A6DA  6ED9               	movwf	fsr2l,c
 27729  01A6DC  50E2               	movf	fsr1h,w,c
 27730  01A6DE  6EDA               	movwf	fsr2h,c
 27731  01A6E0  0EFF               	movlw	255
 27732  01A6E2  22DA               	addwfc	fsr2h,f,c
 27733  01A6E4  006F FF78  F09C    	movff	postinc2,_TMR3_InterruptHandler
 27734  01A6EA  006F FF78  F09D    	movff	postinc2,_TMR3_InterruptHandler+1
 27735  01A6F0  006F FF74  F09E    	movff	postdec2,_TMR3_InterruptHandler+2
 27736                           
 27737                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27738  01A6F6  52E5               	movf	postdec1,f,c
 27739  01A6F8  52E5               	movf	postdec1,f,c
 27740  01A6FA  52E5               	movf	postdec1,f,c
 27741  01A6FC  0012               	return		;funcret
 27742  01A6FE                     __end_of_TMR3_SetInterruptHandler:
 27743                           	opt callstack 0
 27744                           
 27745 ;; *************** function _TMR2_Initialize *****************
 27746 ;; Defined at:
 27747 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 27748 ;; Parameters:    Size  Location     Type
 27749 ;;		None
 27750 ;; Auto vars:     Size  Location     Type
 27751 ;;		None
 27752 ;; Return value:  Size  Location     Type
 27753 ;;                  1  [STACK] void 
 27754 ;; Registers used:
 27755 ;;		wreg, status,2
 27756 ;; Tracked objects:
 27757 ;;		On entry : 3F/3F
 27758 ;;		On exit  : 3F/39
 27759 ;;		Unchanged: 0/0
 27760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27765 ;;Total ram usage:        0 bytes
 27766 ;; Hardware stack levels used:    1
 27767 ;; Hardware stack levels required when called:   15
 27768 ;; This function calls:
 27769 ;;		Nothing
 27770 ;; This function is called by:
 27771 ;;		_SYSTEM_Initialize
 27772 ;; This function uses a reentrant model
 27773 ;;
 27774                           
 27775                           	psect	text116
 27776  01AA72                     __ptext116:
 27777                           	opt callstack 0
 27778  01AA72                     _TMR2_Initialize:
 27779                           	opt callstack 14
 27780                           
 27781                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 27782                           
 27783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27784                           ;incstack = 0
 27785  01AA72  0E01               	movlw	1
 27786  01AA74  6EAE               	movwf	174,c	;volatile
 27787                           
 27788                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 27789  01AA76  6AAD               	clrf	173,c	;volatile
 27790                           
 27791                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 27792  01AA78  6AAF               	clrf	175,c	;volatile
 27793                           
 27794                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 27795  01AA7A  0E63               	movlw	99
 27796  01AA7C  6EAB               	movwf	171,c	;volatile
 27797                           
 27798                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 27799  01AA7E  6AAA               	clrf	170,c	;volatile
 27800                           
 27801                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 27802  01AA80  0139               	movlb	57	; () banked
 27803  01AA82  95A4               	bcf	164,2,b	;volatile
 27804                           
 27805                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 27806  01AA84  0EC0               	movlw	192
 27807  01AA86  6EAC               	movwf	172,c	;volatile
 27808                           
 27809                           ; BSR set to: 57
 27810                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27811  01AA88  0012               	return		;funcret
 27812  01AA8A                     __end_of_TMR2_Initialize:
 27813                           	opt callstack 0
 27814                           
 27815 ;; *************** function _SPI1_Initialize *****************
 27816 ;; Defined at:
 27817 ;;		line 64 in file "mcc_generated_files/spi1.c"
 27818 ;; Parameters:    Size  Location     Type
 27819 ;;		None
 27820 ;; Auto vars:     Size  Location     Type
 27821 ;;		None
 27822 ;; Return value:  Size  Location     Type
 27823 ;;                  1  [STACK] void 
 27824 ;; Registers used:
 27825 ;;		wreg, status,2
 27826 ;; Tracked objects:
 27827 ;;		On entry : 3F/39
 27828 ;;		On exit  : 3F/3D
 27829 ;;		Unchanged: 0/0
 27830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27835 ;;Total ram usage:        0 bytes
 27836 ;; Hardware stack levels used:    1
 27837 ;; Hardware stack levels required when called:   15
 27838 ;; This function calls:
 27839 ;;		Nothing
 27840 ;; This function is called by:
 27841 ;;		_SYSTEM_Initialize
 27842 ;; This function uses a reentrant model
 27843 ;;
 27844                           
 27845                           	psect	text117
 27846  01AA8A                     __ptext117:
 27847                           	opt callstack 0
 27848  01AA8A                     _SPI1_Initialize:
 27849                           	opt callstack 14
 27850                           
 27851                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 27852                           
 27853                           ; BSR set to: 57
 27854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27855                           ;incstack = 0
 27856  01AA8A  0E40               	movlw	64
 27857  01AA8C  013D               	movlb	61	; () banked
 27858  01AA8E  6F15               	movwf	21,b	;volatile
 27859                           
 27860                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 27861  01AA90  0E03               	movlw	3
 27862  01AA92  6F16               	movwf	22,b	;volatile
 27863                           
 27864                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 27865  01AA94  0E4F               	movlw	79
 27866  01AA96  6F19               	movwf	25,b	;volatile
 27867                           
 27868                           ; BSR set to: 61
 27869                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 27870  01AA98  6B1C               	clrf	28,b	;volatile
 27871                           
 27872                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 27873  01AA9A  0E83               	movlw	131
 27874  01AA9C  6F14               	movwf	20,b	;volatile
 27875                           
 27876                           ; BSR set to: 61
 27877                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27878  01AA9E  0012               	return		;funcret
 27879  01AAA0                     __end_of_SPI1_Initialize:
 27880                           	opt callstack 0
 27881                           
 27882 ;; *************** function _PWM8_Initialize *****************
 27883 ;; Defined at:
 27884 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 27885 ;; Parameters:    Size  Location     Type
 27886 ;;		None
 27887 ;; Auto vars:     Size  Location     Type
 27888 ;;		None
 27889 ;; Return value:  Size  Location     Type
 27890 ;;                  1  [STACK] void 
 27891 ;; Registers used:
 27892 ;;		wreg, status,2
 27893 ;; Tracked objects:
 27894 ;;		On entry : 0/3E
 27895 ;;		On exit  : 3F/3F
 27896 ;;		Unchanged: 0/0
 27897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27902 ;;Total ram usage:        0 bytes
 27903 ;; Hardware stack levels used:    1
 27904 ;; Hardware stack levels required when called:   15
 27905 ;; This function calls:
 27906 ;;		Nothing
 27907 ;; This function is called by:
 27908 ;;		_SYSTEM_Initialize
 27909 ;; This function uses a reentrant model
 27910 ;;
 27911                           
 27912                           	psect	text118
 27913  01AAA0                     __ptext118:
 27914                           	opt callstack 0
 27915  01AAA0                     _PWM8_Initialize:
 27916                           	opt callstack 14
 27917                           
 27918                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 27919                           
 27920                           ; BSR set to: 61
 27921                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27922                           ;incstack = 0
 27923  01AAA0  0E80               	movlw	128
 27924  01AAA2  6E62               	movwf	98,c	;volatile
 27925                           
 27926                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 27927  01AAA4  6A61               	clrf	97,c	;volatile
 27928                           
 27929                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 27930  01AAA6  0E40               	movlw	64
 27931  01AAA8  6E60               	movwf	96,c	;volatile
 27932                           
 27933                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 27934  01AAAA  013F               	movlb	63	; () banked
 27935  01AAAC  515F               	movf	95,w,b	;volatile
 27936  01AAAE  0B3F               	andlw	-193
 27937  01AAB0  0940               	iorlw	64
 27938  01AAB2  6F5F               	movwf	95,b	;volatile
 27939                           
 27940                           ; BSR set to: 63
 27941                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27942  01AAB4  0012               	return		;funcret
 27943  01AAB6                     __end_of_PWM8_Initialize:
 27944                           	opt callstack 0
 27945                           
 27946 ;; *************** function _PMD_Initialize *****************
 27947 ;; Defined at:
 27948 ;;		line 90 in file "mcc_generated_files/mcc.c"
 27949 ;; Parameters:    Size  Location     Type
 27950 ;;		None
 27951 ;; Auto vars:     Size  Location     Type
 27952 ;;		None
 27953 ;; Return value:  Size  Location     Type
 27954 ;;                  1  [STACK] void 
 27955 ;; Registers used:
 27956 ;;		None
 27957 ;; Tracked objects:
 27958 ;;		On entry : 3F/39
 27959 ;;		On exit  : 3F/39
 27960 ;;		Unchanged: 0/0
 27961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27966 ;;Total ram usage:        0 bytes
 27967 ;; Hardware stack levels used:    1
 27968 ;; Hardware stack levels required when called:   15
 27969 ;; This function calls:
 27970 ;;		Nothing
 27971 ;; This function is called by:
 27972 ;;		_SYSTEM_Initialize
 27973 ;; This function uses a reentrant model
 27974 ;;
 27975                           
 27976                           	psect	text119
 27977  01AACC                     __ptext119:
 27978                           	opt callstack 0
 27979  01AACC                     _PMD_Initialize:
 27980                           	opt callstack 14
 27981                           
 27982                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 27983                           
 27984                           ; BSR set to: 63
 27985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27986                           ;incstack = 0
 27987  01AACC  0139               	movlb	57	; () banked
 27988  01AACE  6BC0               	clrf	192,b	;volatile
 27989                           
 27990                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 27991  01AAD0  6BC1               	clrf	193,b	;volatile
 27992                           
 27993                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 27994  01AAD2  6BC2               	clrf	194,b	;volatile
 27995                           
 27996                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 27997  01AAD4  6BC3               	clrf	195,b	;volatile
 27998                           
 27999                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 28000  01AAD6  6BC4               	clrf	196,b	;volatile
 28001                           
 28002                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 28003  01AAD8  6BC5               	clrf	197,b	;volatile
 28004                           
 28005                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 28006  01AADA  6BC6               	clrf	198,b	;volatile
 28007                           
 28008                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 28009  01AADC  6BC7               	clrf	199,b	;volatile
 28010                           
 28011                           ; BSR set to: 57
 28012                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 28013  01AADE  0012               	return		;funcret
 28014  01AAE0                     __end_of_PMD_Initialize:
 28015                           	opt callstack 0
 28016                           
 28017 ;; *************** function _PIN_MANAGER_Initialize *****************
 28018 ;; Defined at:
 28019 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 28020 ;; Parameters:    Size  Location     Type
 28021 ;;		None
 28022 ;; Auto vars:     Size  Location     Type
 28023 ;;		None
 28024 ;; Return value:  Size  Location     Type
 28025 ;;                  1  [STACK] void 
 28026 ;; Registers used:
 28027 ;;		wreg, status,2
 28028 ;; Tracked objects:
 28029 ;;		On entry : 3F/39
 28030 ;;		On exit  : 3F/3A
 28031 ;;		Unchanged: 0/0
 28032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28037 ;;Total ram usage:        0 bytes
 28038 ;; Hardware stack levels used:    1
 28039 ;; Hardware stack levels required when called:   15
 28040 ;; This function calls:
 28041 ;;		Nothing
 28042 ;; This function is called by:
 28043 ;;		_SYSTEM_Initialize
 28044 ;; This function uses a reentrant model
 28045 ;;
 28046                           
 28047                           	psect	text120
 28048  0195F6                     __ptext120:
 28049                           	opt callstack 0
 28050  0195F6                     _PIN_MANAGER_Initialize:
 28051                           	opt callstack 14
 28052                           
 28053                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 28054                           
 28055                           ; BSR set to: 57
 28056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28057                           ;incstack = 0
 28058  0195F6  0E07               	movlw	7
 28059  0195F8  6EBE               	movwf	190,c	;volatile
 28060                           
 28061                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 28062  0195FA  0E80               	movlw	128
 28063  0195FC  6EBD               	movwf	189,c	;volatile
 28064                           
 28065                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 28066  0195FE  6ABA               	clrf	186,c	;volatile
 28067                           
 28068                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 28069  019600  6ABF               	clrf	191,c	;volatile
 28070                           
 28071                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 28072  019602  6ABB               	clrf	187,c	;volatile
 28073                           
 28074                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 28075  019604  0E07               	movlw	7
 28076  019606  6EBC               	movwf	188,c	;volatile
 28077                           
 28078                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 28079  019608  6AC6               	clrf	198,c	;volatile
 28080                           
 28081                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 28082  01960A  0E0F               	movlw	15
 28083  01960C  6EC7               	movwf	199,c	;volatile
 28084                           
 28085                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 28086  01960E  68C2               	setf	194,c	;volatile
 28087                           
 28088                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 28089  019610  0EBF               	movlw	191
 28090  019612  6EC3               	movwf	195,c	;volatile
 28091                           
 28092                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 28093  019614  0E90               	movlw	144
 28094  019616  6EC4               	movwf	196,c	;volatile
 28095                           
 28096                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 28097  019618  0E0C               	movlw	12
 28098  01961A  6EC5               	movwf	197,c	;volatile
 28099                           
 28100                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 28101  01961C  013A               	movlb	58	; () banked
 28102  01961E  6B70               	clrf	112,b	;volatile
 28103                           
 28104                           ; BSR set to: 58
 28105                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 28106  019620  6B60               	clrf	96,b	;volatile
 28107                           
 28108                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 28109  019622  0E3C               	movlw	60
 28110  019624  6F50               	movwf	80,b	;volatile
 28111                           
 28112                           ; BSR set to: 58
 28113                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 28114  019626  6B80               	clrf	128,b	;volatile
 28115                           
 28116                           ; BSR set to: 58
 28117                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 28118  019628  6B90               	clrf	144,b	;volatile
 28119                           
 28120                           ; BSR set to: 58
 28121                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 28122  01962A  6940               	setf	64,b	;volatile
 28123                           
 28124                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 28125  01962C  0E0C               	movlw	12
 28126  01962E  6F71               	movwf	113,b	;volatile
 28127                           
 28128                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 28129  019630  0E0F               	movlw	15
 28130  019632  6F91               	movwf	145,b	;volatile
 28131                           
 28132                           ; BSR set to: 58
 28133                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 28134  019634  6B81               	clrf	129,b	;volatile
 28135                           
 28136                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 28137  019636  0E83               	movlw	131
 28138  019638  6F51               	movwf	81,b	;volatile
 28139                           
 28140                           ; BSR set to: 58
 28141                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 28142  01963A  6B41               	clrf	65,b	;volatile
 28143                           
 28144                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 28145  01963C  0E97               	movlw	151
 28146  01963E  6F61               	movwf	97,b	;volatile
 28147                           
 28148                           ; BSR set to: 58
 28149                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 28150  019640  6B82               	clrf	130,b	;volatile
 28151                           
 28152                           ; BSR set to: 58
 28153                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 28154  019642  6B92               	clrf	146,b	;volatile
 28155                           
 28156                           ; BSR set to: 58
 28157                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 28158  019644  6B42               	clrf	66,b	;volatile
 28159                           
 28160                           ; BSR set to: 58
 28161                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 28162  019646  6B52               	clrf	82,b	;volatile
 28163                           
 28164                           ; BSR set to: 58
 28165                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 28166  019648  6B62               	clrf	98,b	;volatile
 28167                           
 28168                           ; BSR set to: 58
 28169                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 28170  01964A  6B72               	clrf	114,b	;volatile
 28171                           
 28172                           ; BSR set to: 58
 28173                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 28174  01964C  6943               	setf	67,b	;volatile
 28175                           
 28176                           ; BSR set to: 58
 28177                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 28178  01964E  6953               	setf	83,b	;volatile
 28179                           
 28180                           ; BSR set to: 58
 28181                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 28182  019650  6963               	setf	99,b	;volatile
 28183                           
 28184                           ; BSR set to: 58
 28185                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 28186  019652  6973               	setf	115,b	;volatile
 28187                           
 28188                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 28189  019654  0E07               	movlw	7
 28190  019656  6F83               	movwf	131,b	;volatile
 28191                           
 28192                           ; BSR set to: 58
 28193                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 28194  019658  6993               	setf	147,b	;volatile
 28195                           
 28196                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 28197  01965A  0E0F               	movlw	15
 28198  01965C  6FE8               	movwf	232,b	;volatile
 28199                           
 28200                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 28201  01965E  0E13               	movlw	19
 28202  019660  6FDE               	movwf	222,b	;volatile
 28203                           
 28204                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 28205  019662  0E16               	movlw	22
 28206  019664  6F0E               	movwf	14,b	;volatile
 28207                           
 28208                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 28209  019666  0E1E               	movlw	30
 28210  019668  6F13               	movwf	19,b	;volatile
 28211                           
 28212                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 28213  01966A  0E08               	movlw	8
 28214  01966C  6FC0               	movwf	192,b	;volatile
 28215                           
 28216                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 28217  01966E  0E10               	movlw	16
 28218  019670  6F19               	movwf	25,b	;volatile
 28219                           
 28220                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 28221  019672  0E09               	movlw	9
 28222  019674  6FC1               	movwf	193,b	;volatile
 28223                           
 28224                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 28225  019676  0E1F               	movlw	31
 28226  019678  6F15               	movwf	21,b	;volatile
 28227                           
 28228                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 28229  01967A  0E13               	movlw	19
 28230  01967C  6F16               	movwf	22,b	;volatile
 28231                           
 28232                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 28233  01967E  0E17               	movlw	23
 28234  019680  6FE5               	movwf	229,b	;volatile
 28235                           
 28236                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 28237  019682  0E14               	movlw	20
 28238  019684  6FDF               	movwf	223,b	;volatile
 28239                           
 28240                           ; BSR set to: 58
 28241                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 28242  019686  0012               	return		;funcret
 28243  019688                     __end_of_PIN_MANAGER_Initialize:
 28244                           	opt callstack 0
 28245                           
 28246 ;; *************** function _OSCILLATOR_Initialize *****************
 28247 ;; Defined at:
 28248 ;;		line 72 in file "mcc_generated_files/mcc.c"
 28249 ;; Parameters:    Size  Location     Type
 28250 ;;		None
 28251 ;; Auto vars:     Size  Location     Type
 28252 ;;		None
 28253 ;; Return value:  Size  Location     Type
 28254 ;;                  1  [STACK] void 
 28255 ;; Registers used:
 28256 ;;		wreg, status,2
 28257 ;; Tracked objects:
 28258 ;;		On entry : 3F/3A
 28259 ;;		On exit  : 3F/39
 28260 ;;		Unchanged: 0/0
 28261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28266 ;;Total ram usage:        0 bytes
 28267 ;; Hardware stack levels used:    1
 28268 ;; Hardware stack levels required when called:   15
 28269 ;; This function calls:
 28270 ;;		Nothing
 28271 ;; This function is called by:
 28272 ;;		_SYSTEM_Initialize
 28273 ;; This function uses a reentrant model
 28274 ;;
 28275                           
 28276                           	psect	text121
 28277  01AAB6                     __ptext121:
 28278                           	opt callstack 0
 28279  01AAB6                     _OSCILLATOR_Initialize:
 28280                           	opt callstack 14
 28281                           
 28282                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 28283                           
 28284                           ; BSR set to: 58
 28285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28286                           ;incstack = 0
 28287  01AAB6  0E20               	movlw	32
 28288  01AAB8  0139               	movlb	57	; () banked
 28289  01AABA  6FD9               	movwf	217,b	;volatile
 28290                           
 28291                           ; BSR set to: 57
 28292                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 28293  01AABC  6BDB               	clrf	219,b	;volatile
 28294                           
 28295                           ; BSR set to: 57
 28296                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 28297  01AABE  6BDD               	clrf	221,b	;volatile
 28298                           
 28299                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 28300  01AAC0  0E02               	movlw	2
 28301  01AAC2  6FDF               	movwf	223,b	;volatile
 28302                           
 28303                           ; BSR set to: 57
 28304                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 28305  01AAC4  6BDE               	clrf	222,b	;volatile
 28306  01AAC6                     l169:
 28307                           
 28308                           ; BSR set to: 57
 28309                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 28310  01AAC6  B1DC               	btfsc	220,0,b	;volatile
 28311  01AAC8  0012               	return	
 28312  01AACA  D7FD               	goto	l169
 28313  01AACC                     __end_of_OSCILLATOR_Initialize:
 28314                           	opt callstack 0
 28315                           
 28316 ;; *************** function _INTERRUPT_Initialize *****************
 28317 ;; Defined at:
 28318 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28319 ;; Parameters:    Size  Location     Type
 28320 ;;		None
 28321 ;; Auto vars:     Size  Location     Type
 28322 ;;  state           1  [STACK] _Bool 
 28323 ;; Return value:  Size  Location     Type
 28324 ;;                  1  [STACK] void 
 28325 ;; Registers used:
 28326 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 28327 ;; Tracked objects:
 28328 ;;		On entry : 0/0
 28329 ;;		On exit  : 3F/39
 28330 ;;		Unchanged: 0/0
 28331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28336 ;;Total ram usage:        0 bytes
 28337 ;; Hardware stack levels used:    1
 28338 ;; Hardware stack levels required when called:   15
 28339 ;; This function calls:
 28340 ;;		Nothing
 28341 ;; This function is called by:
 28342 ;;		_SYSTEM_Initialize
 28343 ;; This function uses a reentrant model
 28344 ;;
 28345                           
 28346                           	psect	text122
 28347  019A66                     __ptext122:
 28348                           	opt callstack 0
 28349  019A66                     _INTERRUPT_Initialize:
 28350                           	opt callstack 0
 28351                           
 28352                           ; BSR set to: 57
 28353                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28354  019A66  52E6               	movf	postinc1,f,c
 28355                           
 28356                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 28357                           
 28358                           ;incstack = 0
 28359  019A68  8AD2               	bsf	210,5,c	;volatile
 28360                           
 28361                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 28362  019A6A  AED2               	btfss	16338,7,c	;volatile
 28363  019A6C  D003               	goto	u8780
 28364  019A6E  6A0C               	clrf	(btemp+11)^0,c
 28365  019A70  2A0C               	incf	(btemp+11)^0,f,c
 28366  019A72  D001               	goto	u8798
 28367  019A74                     u8780:
 28368  019A74  6A0C               	clrf	(btemp+11)^0,c
 28369  019A76                     u8798:
 28370                           
 28371                           ;stkvar	_state @ sp[(-1)+0]
 28372  019A76  0EFF               	movlw	-1
 28373  019A78  0060  F033  FFE3   	movff	btemp+11,plusw1
 28374                           
 28375                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 28376  019A7E  9ED2               	bcf	16338,7,c	;volatile
 28377                           
 28378                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 28379  019A80  0E55               	movlw	85
 28380  019A82  6ED4               	movwf	212,c	;volatile
 28381                           
 28382                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 28383  019A84  0EAA               	movlw	170
 28384  019A86  6ED4               	movwf	212,c	;volatile
 28385                           
 28386                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 28387  019A88  90D4               	bcf	212,0,c	;volatile
 28388                           
 28389                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 28390  019A8A  0138               	movlb	56	; () banked
 28391  019A8C  6B9F               	clrf	159,b	;volatile
 28392                           
 28393                           ; BSR set to: 56
 28394                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 28395  019A8E  6B9E               	clrf	158,b	;volatile
 28396                           
 28397                           ; BSR set to: 56
 28398                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 28399  019A90  0E08               	movlw	8
 28400  019A92  6F9D               	movwf	157,b	;volatile
 28401                           
 28402                           ; BSR set to: 56
 28403                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 28404  019A94  0E55               	movlw	85
 28405  019A96  6ED4               	movwf	212,c	;volatile
 28406                           
 28407                           ; BSR set to: 56
 28408                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 28409  019A98  0EAA               	movlw	170
 28410  019A9A  6ED4               	movwf	212,c	;volatile
 28411                           
 28412                           ; BSR set to: 56
 28413                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 28414  019A9C  80D4               	bsf	212,0,c	;volatile
 28415                           
 28416                           ; BSR set to: 56
 28417                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 28418                           ;stkvar	_state @ sp[(-1)+0]
 28419  019A9E  0EFF               	movlw	-1
 28420  019AA0  B0E3               	btfsc	plusw1,0,c
 28421  019AA2  D002               	bra	u8805
 28422  019AA4  9ED2               	bcf	16338,7,c	;volatile
 28423  019AA6  D001               	bra	u8806
 28424  019AA8                     u8805:
 28425  019AA8  8ED2               	bsf	16338,7,c	;volatile
 28426  019AAA                     u8806:
 28427                           
 28428                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 28429  019AAA  0139               	movlb	57	; () banked
 28430  019AAC  8782               	bsf	130,3,b	;volatile
 28431                           
 28432                           ; BSR set to: 57
 28433                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 28434  019AAE  8382               	bsf	130,1,b	;volatile
 28435                           
 28436                           ; BSR set to: 57
 28437                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 28438  019AB0  8182               	bsf	130,0,b	;volatile
 28439                           
 28440                           ; BSR set to: 57
 28441                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 28442  019AB2  8582               	bsf	130,2,b	;volatile
 28443                           
 28444                           ; BSR set to: 57
 28445                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 28446  019AB4  8786               	bsf	134,3,b	;volatile
 28447                           
 28448                           ; BSR set to: 57
 28449                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 28450  019AB6  8586               	bsf	134,2,b	;volatile
 28451                           
 28452                           ; BSR set to: 57
 28453                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 28454  019AB8  8783               	bsf	131,3,b	;volatile
 28455                           
 28456                           ; BSR set to: 57
 28457                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 28458  019ABA  8181               	bsf	129,0,b	;volatile
 28459                           
 28460                           ; BSR set to: 57
 28461                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 28462  019ABC  9185               	bcf	133,0,b	;volatile
 28463                           
 28464                           ; BSR set to: 57
 28465                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 28466  019ABE  8189               	bsf	137,0,b	;volatile
 28467                           
 28468                           ; BSR set to: 57
 28469                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 28470  019AC0  9D88               	bcf	136,6,b	;volatile
 28471                           
 28472                           ; BSR set to: 57
 28473                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 28474  019AC2  9D86               	bcf	134,6,b	;volatile
 28475                           
 28476                           ; BSR set to: 57
 28477                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 28478  019AC4  8581               	bsf	129,2,b	;volatile
 28479                           
 28480                           ; BSR set to: 57
 28481                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 28482  019AC6  8781               	bsf	129,3,b	;volatile
 28483                           
 28484                           ; BSR set to: 57
 28485                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 28486  019AC8  52E5               	movf	postdec1,f,c
 28487  019ACA  0012               	return		;funcret
 28488  019ACC                     __end_of_INTERRUPT_Initialize:
 28489                           	opt callstack 0
 28490                           
 28491 ;; *************** function _FVR_Initialize *****************
 28492 ;; Defined at:
 28493 ;;		line 58 in file "mcc_generated_files/fvr.c"
 28494 ;; Parameters:    Size  Location     Type
 28495 ;;		None
 28496 ;; Auto vars:     Size  Location     Type
 28497 ;;		None
 28498 ;; Return value:  Size  Location     Type
 28499 ;;                  1  [STACK] void 
 28500 ;; Registers used:
 28501 ;;		wreg, status,2
 28502 ;; Tracked objects:
 28503 ;;		On entry : 3F/39
 28504 ;;		On exit  : 3F/3E
 28505 ;;		Unchanged: 0/0
 28506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28511 ;;Total ram usage:        0 bytes
 28512 ;; Hardware stack levels used:    1
 28513 ;; Hardware stack levels required when called:   15
 28514 ;; This function calls:
 28515 ;;		Nothing
 28516 ;; This function is called by:
 28517 ;;		_SYSTEM_Initialize
 28518 ;; This function uses a reentrant model
 28519 ;;
 28520                           
 28521                           	psect	text123
 28522  01ABB6                     __ptext123:
 28523                           	opt callstack 0
 28524  01ABB6                     _FVR_Initialize:
 28525                           	opt callstack 14
 28526                           
 28527                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 28528                           
 28529                           ; BSR set to: 57
 28530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28531                           ;incstack = 0
 28532  01ABB6  0EAF               	movlw	175
 28533  01ABB8  013E               	movlb	62	; () banked
 28534  01ABBA  6FC1               	movwf	193,b	;volatile
 28535                           
 28536                           ; BSR set to: 62
 28537                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 28538  01ABBC  0012               	return		;funcret
 28539  01ABBE                     __end_of_FVR_Initialize:
 28540                           	opt callstack 0
 28541                           
 28542 ;; *************** function _EXT_INT_Initialize *****************
 28543 ;; Defined at:
 28544 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 28545 ;; Parameters:    Size  Location     Type
 28546 ;;		None
 28547 ;; Auto vars:     Size  Location     Type
 28548 ;;		None
 28549 ;; Return value:  Size  Location     Type
 28550 ;;                  1  [STACK] void 
 28551 ;; Registers used:
 28552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28553 ;; Tracked objects:
 28554 ;;		On entry : 3F/39
 28555 ;;		On exit  : 3F/39
 28556 ;;		Unchanged: 0/0
 28557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28562 ;;Total ram usage:        0 bytes
 28563 ;; Hardware stack levels used:    1
 28564 ;; Hardware stack levels required when called:   16
 28565 ;; This function calls:
 28566 ;;		_INT0_SetInterruptHandler
 28567 ;;		_INT1_SetInterruptHandler
 28568 ;; This function is called by:
 28569 ;;		_SYSTEM_Initialize
 28570 ;; This function uses a reentrant model
 28571 ;;
 28572                           
 28573                           	psect	text124
 28574  01A368                     __ptext124:
 28575                           	opt callstack 0
 28576  01A368                     _EXT_INT_Initialize:
 28577                           	opt callstack 13
 28578                           
 28579                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 28580                           
 28581                           ; BSR set to: 62
 28582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28583                           ;incstack = 0
 28584  01A368  0139               	movlb	57	; () banked
 28585  01A36A  91A1               	bcf	161,0,b	;volatile
 28586                           
 28587                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 28588  01A36C  90D2               	bcf	210,0,c	;volatile
 28589                           
 28590                           ; BSR set to: 57
 28591                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 28592  01A36E  0EE2               	movlw	low _INT0_DefaultInterruptHandler
 28593  01A370  6EE6               	movwf	postinc1,c
 28594  01A372  0EAB               	movlw	high _INT0_DefaultInterruptHandler
 28595  01A374  6EE6               	movwf	postinc1,c
 28596  01A376  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 28597  01A378  6EE6               	movwf	postinc1,c
 28598  01A37A  EC93  F0D3         	call	_INT0_SetInterruptHandler	;wreg free
 28599                           
 28600                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 28601  01A37E  0139               	movlb	57	; () banked
 28602  01A380  8191               	bsf	145,0,b	;volatile
 28603                           
 28604                           ; BSR set to: 57
 28605                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 28606  01A382  91A5               	bcf	165,0,b	;volatile
 28607                           
 28608                           ; BSR set to: 57
 28609                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 28610  01A384  92D2               	bcf	210,1,c	;volatile
 28611                           
 28612                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 28613  01A386  0EDE               	movlw	low _INT1_DefaultInterruptHandler
 28614  01A388  6EE6               	movwf	postinc1,c
 28615  01A38A  0EAB               	movlw	high _INT1_DefaultInterruptHandler
 28616  01A38C  6EE6               	movwf	postinc1,c
 28617  01A38E  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 28618  01A390  6EE6               	movwf	postinc1,c
 28619  01A392  EC7F  F0D3         	call	_INT1_SetInterruptHandler	;wreg free
 28620                           
 28621                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 28622  01A396  0139               	movlb	57	; () banked
 28623  01A398  8195               	bsf	149,0,b	;volatile
 28624                           
 28625                           ; BSR set to: 57
 28626                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28627  01A39A  0012               	return		;funcret
 28628  01A39C                     __end_of_EXT_INT_Initialize:
 28629                           	opt callstack 0
 28630                           
 28631 ;; *************** function _INT1_SetInterruptHandler *****************
 28632 ;; Defined at:
 28633 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 28634 ;; Parameters:    Size  Location     Type
 28635 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28636 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 28637 ;; Auto vars:     Size  Location     Type
 28638 ;;		None
 28639 ;; Return value:  Size  Location     Type
 28640 ;;                  1  [STACK] void 
 28641 ;; Registers used:
 28642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28643 ;; Tracked objects:
 28644 ;;		On entry : 3F/39
 28645 ;;		On exit  : 0/0
 28646 ;;		Unchanged: 0/0
 28647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28652 ;;Total ram usage:        0 bytes
 28653 ;; Hardware stack levels used:    1
 28654 ;; Hardware stack levels required when called:   15
 28655 ;; This function calls:
 28656 ;;		Nothing
 28657 ;; This function is called by:
 28658 ;;		_EXT_INT_Initialize
 28659 ;;		_start_switch_handler
 28660 ;; This function uses a reentrant model
 28661 ;;
 28662                           
 28663                           	psect	text125
 28664  01A6FE                     __ptext125:
 28665                           	opt callstack 0
 28666  01A6FE                     _INT1_SetInterruptHandler:
 28667                           	opt callstack 14
 28668                           
 28669                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 28670                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28671                           
 28672                           ; BSR set to: 57
 28673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28674                           ;incstack = 0
 28675  01A6FE  50E1               	movf	fsr1l,w,c
 28676  01A700  0FFD               	addlw	-3
 28677  01A702  6ED9               	movwf	fsr2l,c
 28678  01A704  50E2               	movf	fsr1h,w,c
 28679  01A706  6EDA               	movwf	fsr2h,c
 28680  01A708  0EFF               	movlw	255
 28681  01A70A  22DA               	addwfc	fsr2h,f,c
 28682  01A70C  006F FF78  F0B4    	movff	postinc2,_INT1_InterruptHandler
 28683  01A712  006F FF78  F0B5    	movff	postinc2,_INT1_InterruptHandler+1
 28684  01A718  006F FF74  F0B6    	movff	postdec2,_INT1_InterruptHandler+2
 28685                           
 28686                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28687  01A71E  52E5               	movf	postdec1,f,c
 28688  01A720  52E5               	movf	postdec1,f,c
 28689  01A722  52E5               	movf	postdec1,f,c
 28690  01A724  0012               	return		;funcret
 28691  01A726                     __end_of_INT1_SetInterruptHandler:
 28692                           	opt callstack 0
 28693                           
 28694 ;; *************** function _INT0_SetInterruptHandler *****************
 28695 ;; Defined at:
 28696 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 28697 ;; Parameters:    Size  Location     Type
 28698 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28699 ;;		 -> INT0_DefaultInterruptHandler(1), 
 28700 ;; Auto vars:     Size  Location     Type
 28701 ;;		None
 28702 ;; Return value:  Size  Location     Type
 28703 ;;                  1  [STACK] void 
 28704 ;; Registers used:
 28705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28706 ;; Tracked objects:
 28707 ;;		On entry : 3F/39
 28708 ;;		On exit  : 0/0
 28709 ;;		Unchanged: 0/0
 28710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28715 ;;Total ram usage:        0 bytes
 28716 ;; Hardware stack levels used:    1
 28717 ;; Hardware stack levels required when called:   15
 28718 ;; This function calls:
 28719 ;;		Nothing
 28720 ;; This function is called by:
 28721 ;;		_EXT_INT_Initialize
 28722 ;; This function uses a reentrant model
 28723 ;;
 28724                           
 28725                           	psect	text126
 28726  01A726                     __ptext126:
 28727                           	opt callstack 0
 28728  01A726                     _INT0_SetInterruptHandler:
 28729                           	opt callstack 13
 28730                           
 28731                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 28732                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28733                           
 28734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28735                           ;incstack = 0
 28736  01A726  50E1               	movf	fsr1l,w,c
 28737  01A728  0FFD               	addlw	-3
 28738  01A72A  6ED9               	movwf	fsr2l,c
 28739  01A72C  50E2               	movf	fsr1h,w,c
 28740  01A72E  6EDA               	movwf	fsr2h,c
 28741  01A730  0EFF               	movlw	255
 28742  01A732  22DA               	addwfc	fsr2h,f,c
 28743  01A734  006F FF78  F0B7    	movff	postinc2,_INT0_InterruptHandler
 28744  01A73A  006F FF78  F0B8    	movff	postinc2,_INT0_InterruptHandler+1
 28745  01A740  006F FF74  F0B9    	movff	postdec2,_INT0_InterruptHandler+2
 28746                           
 28747                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28748  01A746  52E5               	movf	postdec1,f,c
 28749  01A748  52E5               	movf	postdec1,f,c
 28750  01A74A  52E5               	movf	postdec1,f,c
 28751  01A74C  0012               	return		;funcret
 28752  01A74E                     __end_of_INT0_SetInterruptHandler:
 28753                           	opt callstack 0
 28754                           
 28755 ;; *************** function _DMA2_Initialize *****************
 28756 ;; Defined at:
 28757 ;;		line 61 in file "mcc_generated_files/dma2.c"
 28758 ;; Parameters:    Size  Location     Type
 28759 ;;		None
 28760 ;; Auto vars:     Size  Location     Type
 28761 ;;		None
 28762 ;; Return value:  Size  Location     Type
 28763 ;;                  1  [STACK] void 
 28764 ;; Registers used:
 28765 ;;		wreg, status,2
 28766 ;; Tracked objects:
 28767 ;;		On entry : 3F/3D
 28768 ;;		On exit  : 3F/3B
 28769 ;;		Unchanged: 0/0
 28770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28775 ;;Total ram usage:        0 bytes
 28776 ;; Hardware stack levels used:    1
 28777 ;; Hardware stack levels required when called:   15
 28778 ;; This function calls:
 28779 ;;		Nothing
 28780 ;; This function is called by:
 28781 ;;		_SYSTEM_Initialize
 28782 ;; This function uses a reentrant model
 28783 ;;
 28784                           
 28785                           	psect	text127
 28786  019CAC                     __ptext127:
 28787                           	opt callstack 0
 28788  019CAC                     _DMA2_Initialize:
 28789                           	opt callstack 14
 28790                           
 28791                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 28792                           
 28793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28794                           ;incstack = 0
 28795  019CAC  0E00               	movlw	0
 28796  019CAE  013B               	movlb	59	; () banked
 28797  019CB0  6FD9               	movwf	217,b	;volatile
 28798  019CB2  0E10               	movlw	16
 28799  019CB4  6FDA               	movwf	218,b	;volatile
 28800  019CB6  0E00               	movlw	0
 28801  019CB8  6FDB               	movwf	219,b	;volatile
 28802                           
 28803                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 28804  019CBA  0E3F               	movlw	63
 28805  019CBC  6FD1               	movwf	209,b	;volatile
 28806  019CBE  0EBB               	movlw	187
 28807  019CC0  6FD0               	movwf	208,b	;volatile
 28808                           
 28809                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 28810  019CC2  0E03               	movlw	3
 28811  019CC4  6FDD               	movwf	221,b	;volatile
 28812                           
 28813                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 28814  019CC6  0E00               	movlw	0
 28815  019CC8  6FD8               	movwf	216,b	;volatile
 28816  019CCA  0E01               	movlw	1
 28817  019CCC  6FD7               	movwf	215,b	;volatile
 28818                           
 28819                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 28820  019CCE  0E00               	movlw	0
 28821  019CD0  6FCF               	movwf	207,b	;volatile
 28822  019CD2  0E01               	movlw	1
 28823  019CD4  6FCE               	movwf	206,b	;volatile
 28824                           
 28825                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 28826  019CD6  0E1C               	movlw	28
 28827  019CD8  6FDF               	movwf	223,b	;volatile
 28828                           
 28829                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 28830  019CDA  0E3D               	movlw	61
 28831  019CDC  6FDE               	movwf	222,b	;volatile
 28832                           
 28833                           ; BSR set to: 59
 28834                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 28835  019CDE  0139               	movlb	57	; () banked
 28836  019CE0  97A5               	bcf	165,3,b	;volatile
 28837                           
 28838                           ; BSR set to: 57
 28839                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 28840  019CE2  95A5               	bcf	165,2,b	;volatile
 28841                           
 28842                           ; BSR set to: 57
 28843                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 28844  019CE4  9BA5               	bcf	165,5,b	;volatile
 28845                           
 28846                           ; BSR set to: 57
 28847                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 28848  019CE6  99A5               	bcf	165,4,b	;volatile
 28849                           
 28850                           ; BSR set to: 57
 28851                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 28852  019CE8  9795               	bcf	149,3,b	;volatile
 28853                           
 28854                           ; BSR set to: 57
 28855                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 28856  019CEA  9595               	bcf	149,2,b	;volatile
 28857                           
 28858                           ; BSR set to: 57
 28859                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 28860  019CEC  9B95               	bcf	149,5,b	;volatile
 28861                           
 28862                           ; BSR set to: 57
 28863                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 28864  019CEE  9995               	bcf	149,4,b	;volatile
 28865  019CF0  9ED2               	bcf	16338,7,c	;# 
 28866  019CF2  0139               	banksel	14831	;# 
 28867  019CF4  0E55               	movlw	85	;# 
 28868  019CF6  6FEF               	movwf	14831,b	;# 
 28869  019CF8  0EAA               	movlw	170	;# 
 28870  019CFA  6FEF               	movwf	14831,b	;# 
 28871  019CFC  81EF               	bsf	14831,0,b	;# 
 28872  019CFE  8ED2               	bsf	16338,7,c	;# 
 28873                           
 28874                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 28875  019D00  013B               	movlb	59	; () banked
 28876  019D02  6BDC               	clrf	220,b	;volatile
 28877                           
 28878                           ; BSR set to: 59
 28879                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28880  019D04  0012               	return		;funcret
 28881  019D06                     __end_of_DMA2_Initialize:
 28882                           	opt callstack 0
 28883                           
 28884 ;; *************** function _DMA1_Initialize *****************
 28885 ;; Defined at:
 28886 ;;		line 86 in file "mcc_generated_files/dma1.c"
 28887 ;; Parameters:    Size  Location     Type
 28888 ;;		None
 28889 ;; Auto vars:     Size  Location     Type
 28890 ;;		None
 28891 ;; Return value:  Size  Location     Type
 28892 ;;                  1  [STACK] void 
 28893 ;; Registers used:
 28894 ;;		wreg, status,2
 28895 ;; Tracked objects:
 28896 ;;		On entry : 3F/3B
 28897 ;;		On exit  : 3F/3B
 28898 ;;		Unchanged: 0/0
 28899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28904 ;;Total ram usage:        0 bytes
 28905 ;; Hardware stack levels used:    1
 28906 ;; Hardware stack levels required when called:   15
 28907 ;; This function calls:
 28908 ;;		Nothing
 28909 ;; This function is called by:
 28910 ;;		_SYSTEM_Initialize
 28911 ;; This function uses a reentrant model
 28912 ;;
 28913                           
 28914                           	psect	text128
 28915  019926                     __ptext128:
 28916                           	opt callstack 0
 28917  019926                     _DMA1_Initialize:
 28918                           	opt callstack 14
 28919                           
 28920                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 28921                           
 28922                           ; BSR set to: 59
 28923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28924                           ;incstack = 0
 28925  019926  0E00               	movlw	0
 28926  019928  013B               	movlb	59	; () banked
 28927  01992A  6FF9               	movwf	249,b	;volatile
 28928  01992C  0E10               	movlw	16
 28929  01992E  6FFA               	movwf	250,b	;volatile
 28930  019930  0E00               	movlw	0
 28931  019932  6FFB               	movwf	251,b	;volatile
 28932                           
 28933                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 28934  019934  0E3D               	movlw	61
 28935  019936  6FF1               	movwf	241,b	;volatile
 28936  019938  0E11               	movlw	17
 28937  01993A  6FF0               	movwf	240,b	;volatile
 28938                           
 28939                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 28940  01993C  0E03               	movlw	3
 28941  01993E  6FFD               	movwf	253,b	;volatile
 28942                           
 28943                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 28944  019940  0E00               	movlw	0
 28945  019942  6FF8               	movwf	248,b	;volatile
 28946  019944  0E01               	movlw	1
 28947  019946  6FF7               	movwf	247,b	;volatile
 28948                           
 28949                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 28950  019948  0E00               	movlw	0
 28951  01994A  6FEF               	movwf	239,b	;volatile
 28952  01994C  0E01               	movlw	1
 28953  01994E  6FEE               	movwf	238,b	;volatile
 28954                           
 28955                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 28956  019950  0E15               	movlw	21
 28957  019952  6FFF               	movwf	255,b	;volatile
 28958                           
 28959                           ; BSR set to: 59
 28960                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 28961  019954  6BFE               	clrf	254,b	;volatile
 28962                           
 28963                           ; BSR set to: 59
 28964                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 28965  019956  0139               	movlb	57	; () banked
 28966  019958  93A2               	bcf	162,1,b	;volatile
 28967                           
 28968                           ; BSR set to: 57
 28969                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 28970  01995A  91A2               	bcf	162,0,b	;volatile
 28971                           
 28972                           ; BSR set to: 57
 28973                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 28974  01995C  97A2               	bcf	162,3,b	;volatile
 28975                           
 28976                           ; BSR set to: 57
 28977                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 28978  01995E  95A2               	bcf	162,2,b	;volatile
 28979                           
 28980                           ; BSR set to: 57
 28981                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 28982  019960  8392               	bsf	146,1,b	;volatile
 28983                           
 28984                           ; BSR set to: 57
 28985                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 28986  019962  8192               	bsf	146,0,b	;volatile
 28987                           
 28988                           ; BSR set to: 57
 28989                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 28990  019964  8792               	bsf	146,3,b	;volatile
 28991                           
 28992                           ; BSR set to: 57
 28993                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 28994  019966  8592               	bsf	146,2,b	;volatile
 28995                           
 28996                           ; BSR set to: 57
 28997                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 28998  019968  6BF1               	clrf	241,b	;volatile
 28999                           
 29000                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 29001  01996A  0E01               	movlw	1
 29002  01996C  6FF2               	movwf	242,b	;volatile
 29003                           
 29004                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 29005  01996E  0E04               	movlw	4
 29006  019970  6FF3               	movwf	243,b	;volatile
 29007                           
 29008                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 29009  019972  0E02               	movlw	2
 29010  019974  6FF4               	movwf	244,b	;volatile
 29011                           
 29012                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 29013  019976  0E03               	movlw	3
 29014  019978  6FF7               	movwf	247,b	;volatile
 29015  01997A  9ED2               	bcf	16338,7,c	;# 
 29016  01997C  0139               	banksel	14831	;# 
 29017  01997E  0E55               	movlw	85	;# 
 29018  019980  6FEF               	movwf	14831,b	;# 
 29019  019982  0EAA               	movlw	170	;# 
 29020  019984  6FEF               	movwf	14831,b	;# 
 29021  019986  81EF               	bsf	14831,0,b	;# 
 29022  019988  8ED2               	bsf	16338,7,c	;# 
 29023                           
 29024                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 29025  01998A  013B               	movlb	59	; () banked
 29026  01998C  6BFC               	clrf	252,b	;volatile
 29027                           
 29028                           ; BSR set to: 59
 29029                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29030  01998E  0012               	return		;funcret
 29031  019990                     __end_of_DMA1_Initialize:
 29032                           	opt callstack 0
 29033                           
 29034 ;; *************** function _CLKREF_Initialize *****************
 29035 ;; Defined at:
 29036 ;;		line 58 in file "mcc_generated_files/clkref.c"
 29037 ;; Parameters:    Size  Location     Type
 29038 ;;		None
 29039 ;; Auto vars:     Size  Location     Type
 29040 ;;		None
 29041 ;; Return value:  Size  Location     Type
 29042 ;;                  1  [STACK] void 
 29043 ;; Registers used:
 29044 ;;		wreg, status,2
 29045 ;; Tracked objects:
 29046 ;;		On entry : 3F/3B
 29047 ;;		On exit  : 3F/3C
 29048 ;;		Unchanged: 0/0
 29049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29054 ;;Total ram usage:        0 bytes
 29055 ;; Hardware stack levels used:    1
 29056 ;; Hardware stack levels required when called:   15
 29057 ;; This function calls:
 29058 ;;		Nothing
 29059 ;; This function is called by:
 29060 ;;		_SYSTEM_Initialize
 29061 ;; This function uses a reentrant model
 29062 ;;
 29063                           
 29064                           	psect	text129
 29065  01AB5E                     __ptext129:
 29066                           	opt callstack 0
 29067  01AB5E                     _CLKREF_Initialize:
 29068                           	opt callstack 14
 29069                           
 29070                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 29071                           
 29072                           ; BSR set to: 59
 29073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29074                           ;incstack = 0
 29075  01AB5E  013C               	movlb	60	; () banked
 29076  01AB60  6BE6               	clrf	230,b	;volatile
 29077                           
 29078                           ; BSR set to: 60
 29079                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 29080  01AB62  0E94               	movlw	148
 29081  01AB64  6FE5               	movwf	229,b	;volatile
 29082                           
 29083                           ; BSR set to: 60
 29084                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29085  01AB66  0012               	return		;funcret
 29086  01AB68                     __end_of_CLKREF_Initialize:
 29087                           	opt callstack 0
 29088                           
 29089 ;; *************** function _ADCC_Initialize *****************
 29090 ;; Defined at:
 29091 ;;		line 65 in file "mcc_generated_files/adcc.c"
 29092 ;; Parameters:    Size  Location     Type
 29093 ;;		None
 29094 ;; Auto vars:     Size  Location     Type
 29095 ;;		None
 29096 ;; Return value:  Size  Location     Type
 29097 ;;                  1  [STACK] void 
 29098 ;; Registers used:
 29099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29100 ;; Tracked objects:
 29101 ;;		On entry : 3F/3E
 29102 ;;		On exit  : 0/0
 29103 ;;		Unchanged: 0/0
 29104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29109 ;;Total ram usage:        0 bytes
 29110 ;; Hardware stack levels used:    1
 29111 ;; Hardware stack levels required when called:   16
 29112 ;; This function calls:
 29113 ;;		_ADCC_SetADIInterruptHandler
 29114 ;;		_ADCC_SetADTIInterruptHandler
 29115 ;; This function is called by:
 29116 ;;		_SYSTEM_Initialize
 29117 ;; This function uses a reentrant model
 29118 ;;
 29119                           
 29120                           	psect	text130
 29121  019990                     __ptext130:
 29122                           	opt callstack 0
 29123  019990                     _ADCC_Initialize:
 29124                           	opt callstack 13
 29125                           
 29126                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 29127                           
 29128                           ; BSR set to: 60
 29129                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29130                           ;incstack = 0
 29131  019990  013E               	movlb	62	; () banked
 29132  019992  6BDE               	clrf	222,b	;volatile
 29133                           
 29134                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 29135  019994  6BDF               	clrf	223,b	;volatile
 29136                           
 29137                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 29138  019996  6BE0               	clrf	224,b	;volatile
 29139                           
 29140                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 29141  019998  6BE1               	clrf	225,b	;volatile
 29142                           
 29143                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 29144  01999A  6BE4               	clrf	228,b	;volatile
 29145                           
 29146                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 29147  01999C  6BE5               	clrf	229,b	;volatile
 29148                           
 29149                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 29150  01999E  6BEA               	clrf	234,b	;volatile
 29151                           
 29152                           ; BSR set to: 62
 29153                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 29154  0199A0  0E40               	movlw	64
 29155  0199A2  6FEC               	movwf	236,b	;volatile
 29156                           
 29157                           ; BSR set to: 62
 29158                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 29159  0199A4  6BF1               	clrf	241,b	;volatile
 29160                           
 29161                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 29162  0199A6  0E20               	movlw	32
 29163  0199A8  6FF3               	movwf	243,b	;volatile
 29164                           
 29165                           ; BSR set to: 62
 29166                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 29167  0199AA  6BF4               	clrf	244,b	;volatile
 29168                           
 29169                           ; BSR set to: 62
 29170                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 29171  0199AC  6BF5               	clrf	245,b	;volatile
 29172                           
 29173                           ; BSR set to: 62
 29174                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 29175  0199AE  6BF6               	clrf	246,b	;volatile
 29176                           
 29177                           ; BSR set to: 62
 29178                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 29179  0199B0  6BF7               	clrf	247,b	;volatile
 29180                           
 29181                           ; BSR set to: 62
 29182                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 29183  0199B2  6BF9               	clrf	249,b	;volatile
 29184                           
 29185                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 29186  0199B4  0E5B               	movlw	91
 29187  0199B6  6FFA               	movwf	250,b	;volatile
 29188                           
 29189                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 29190  0199B8  0E27               	movlw	39
 29191  0199BA  6FFB               	movwf	251,b	;volatile
 29192                           
 29193                           ; BSR set to: 62
 29194                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 29195  0199BC  6BFC               	clrf	252,b	;volatile
 29196                           
 29197                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 29198  0199BE  0E02               	movlw	2
 29199  0199C0  6FFD               	movwf	253,b	;volatile
 29200                           
 29201                           ; BSR set to: 62
 29202                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 29203  0199C2  6BFE               	clrf	254,b	;volatile
 29204                           
 29205                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 29206  0199C4  0E07               	movlw	7
 29207  0199C6  6FFF               	movwf	255,b	;volatile
 29208                           
 29209                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 29210  0199C8  0E84               	movlw	132
 29211  0199CA  6FF8               	movwf	248,b	;volatile
 29212                           
 29213                           ; BSR set to: 62
 29214                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 29215  0199CC  0139               	movlb	57	; () banked
 29216  0199CE  95A1               	bcf	161,2,b	;volatile
 29217                           
 29218                           ; BSR set to: 57
 29219                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 29220  0199D0  8591               	bsf	145,2,b	;volatile
 29221                           
 29222                           ; BSR set to: 57
 29223                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 29224  0199D2  0EE4               	movlw	low _ADCC_DefaultInterruptHandler
 29225  0199D4  6EE6               	movwf	postinc1,c
 29226  0199D6  0EAB               	movlw	high _ADCC_DefaultInterruptHandler
 29227  0199D8  6EE6               	movwf	postinc1,c
 29228  0199DA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 29229  0199DC  6EE6               	movwf	postinc1,c
 29230  0199DE  ECBB  F0D3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 29231                           
 29232                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 29233  0199E2  0139               	movlb	57	; () banked
 29234  0199E4  97A1               	bcf	161,3,b	;volatile
 29235                           
 29236                           ; BSR set to: 57
 29237                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 29238  0199E6  8791               	bsf	145,3,b	;volatile
 29239                           
 29240                           ; BSR set to: 57
 29241                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 29242  0199E8  0EE4               	movlw	low _ADCC_DefaultInterruptHandler
 29243  0199EA  6EE6               	movwf	postinc1,c
 29244  0199EC  0EAB               	movlw	high _ADCC_DefaultInterruptHandler
 29245  0199EE  6EE6               	movwf	postinc1,c
 29246  0199F0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 29247  0199F2  6EE6               	movwf	postinc1,c
 29248  0199F4  ECA7  F0D3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 29249                           
 29250                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29251  0199F8  0012               	return		;funcret
 29252  0199FA                     __end_of_ADCC_Initialize:
 29253                           	opt callstack 0
 29254                           
 29255 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 29256 ;; Defined at:
 29257 ;;		line 336 in file "mcc_generated_files/adcc.c"
 29258 ;; Parameters:    Size  Location     Type
 29259 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29260 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 29261 ;; Auto vars:     Size  Location     Type
 29262 ;;		None
 29263 ;; Return value:  Size  Location     Type
 29264 ;;                  1  [STACK] void 
 29265 ;; Registers used:
 29266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29267 ;; Tracked objects:
 29268 ;;		On entry : 0/0
 29269 ;;		On exit  : 0/0
 29270 ;;		Unchanged: 0/0
 29271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29276 ;;Total ram usage:        0 bytes
 29277 ;; Hardware stack levels used:    1
 29278 ;; Hardware stack levels required when called:   15
 29279 ;; This function calls:
 29280 ;;		Nothing
 29281 ;; This function is called by:
 29282 ;;		_ADCC_Initialize
 29283 ;;		_start_adc_scan
 29284 ;; This function uses a reentrant model
 29285 ;;
 29286                           
 29287                           	psect	text131
 29288  01A74E                     __ptext131:
 29289                           	opt callstack 0
 29290  01A74E                     _ADCC_SetADTIInterruptHandler:
 29291                           	opt callstack 14
 29292                           
 29293                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 29294                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29295                           
 29296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29297                           ;incstack = 0
 29298  01A74E  50E1               	movf	fsr1l,w,c
 29299  01A750  0FFD               	addlw	-3
 29300  01A752  6ED9               	movwf	fsr2l,c
 29301  01A754  50E2               	movf	fsr1h,w,c
 29302  01A756  6EDA               	movwf	fsr2h,c
 29303  01A758  0EFF               	movlw	255
 29304  01A75A  22DA               	addwfc	fsr2h,f,c
 29305  01A75C  006F FF78  F0A5    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 29306  01A762  006F FF78  F0A6    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 29307  01A768  006F FF74  F0A7    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 29308                           
 29309                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 29310  01A76E  52E5               	movf	postdec1,f,c
 29311  01A770  52E5               	movf	postdec1,f,c
 29312  01A772  52E5               	movf	postdec1,f,c
 29313  01A774  0012               	return		;funcret
 29314  01A776                     __end_of_ADCC_SetADTIInterruptHandler:
 29315                           	opt callstack 0
 29316                           
 29317 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 29318 ;; Defined at:
 29319 ;;		line 323 in file "mcc_generated_files/adcc.c"
 29320 ;; Parameters:    Size  Location     Type
 29321 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29322 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 29323 ;; Auto vars:     Size  Location     Type
 29324 ;;		None
 29325 ;; Return value:  Size  Location     Type
 29326 ;;                  1  [STACK] void 
 29327 ;; Registers used:
 29328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29329 ;; Tracked objects:
 29330 ;;		On entry : 6/0
 29331 ;;		On exit  : 0/0
 29332 ;;		Unchanged: 0/0
 29333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29338 ;;Total ram usage:        0 bytes
 29339 ;; Hardware stack levels used:    1
 29340 ;; Hardware stack levels required when called:   15
 29341 ;; This function calls:
 29342 ;;		Nothing
 29343 ;; This function is called by:
 29344 ;;		_ADCC_Initialize
 29345 ;;		_start_adc_scan
 29346 ;; This function uses a reentrant model
 29347 ;;
 29348                           
 29349                           	psect	text132
 29350  01A776                     __ptext132:
 29351                           	opt callstack 0
 29352  01A776                     _ADCC_SetADIInterruptHandler:
 29353                           	opt callstack 14
 29354                           
 29355                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 29356                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29357                           
 29358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29359                           ;incstack = 0
 29360  01A776  50E1               	movf	fsr1l,w,c
 29361  01A778  0FFD               	addlw	-3
 29362  01A77A  6ED9               	movwf	fsr2l,c
 29363  01A77C  50E2               	movf	fsr1h,w,c
 29364  01A77E  6EDA               	movwf	fsr2h,c
 29365  01A780  0EFF               	movlw	255
 29366  01A782  22DA               	addwfc	fsr2h,f,c
 29367  01A784  006F FF78  F0A8    	movff	postinc2,_ADCC_ADI_InterruptHandler
 29368  01A78A  006F FF78  F0A9    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 29369  01A790  006F FF74  F0AA    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 29370                           
 29371                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29372  01A796  52E5               	movf	postdec1,f,c
 29373  01A798  52E5               	movf	postdec1,f,c
 29374  01A79A  52E5               	movf	postdec1,f,c
 29375  01A79C  0012               	return		;funcret
 29376  01A79E                     __end_of_ADCC_SetADIInterruptHandler:
 29377                           	opt callstack 0
 29378                           
 29379 ;; *************** function _INT1_ISR *****************
 29380 ;; Defined at:
 29381 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 29382 ;; Parameters:    Size  Location     Type
 29383 ;;		None
 29384 ;; Auto vars:     Size  Location     Type
 29385 ;;		None
 29386 ;; Return value:  Size  Location     Type
 29387 ;;                  1    wreg      void 
 29388 ;; Registers used:
 29389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 29390 ;; Tracked objects:
 29391 ;;		On entry : 0/0
 29392 ;;		On exit  : 0/0
 29393 ;;		Unchanged: 0/0
 29394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29398 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29399 ;;Total ram usage:        4 bytes
 29400 ;; Hardware stack levels used:    1
 29401 ;; Hardware stack levels required when called:    5
 29402 ;; This function calls:
 29403 ;;		_INT1_CallBack
 29404 ;; This function is called by:
 29405 ;;		Interrupt level 1
 29406 ;; This function uses a non-reentrant model
 29407 ;;
 29408                           
 29409                           	psect	text133
 29410  01A21C                     __ptext133:
 29411                           	opt callstack 0
 29412  01A21C                     _INT1_ISR:
 29413                           	opt callstack 12
 29414                           
 29415                           ;incstack = 0
 29416  01A21C  006F FF60  F03E    	movff	status,??_INT1_ISR
 29417  01A222  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 29418  01A228  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 29419  01A22E  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 29420  01A234  EE16  F061         	lfsr	1,___intlo_sp
 29421                           
 29422                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 29423  01A238  0139               	movlb	57	; () banked
 29424  01A23A  91A5               	bcf	165,0,b	;volatile
 29425                           
 29426                           ; BSR set to: 57
 29427                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 29428  01A23C  EC30  F0D4         	call	_INT1_CallBack	;wreg free
 29429  01A240  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 29430  01A246  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 29431  01A24C  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 29432  01A252  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 29433  01A258  0011               	retfie		f
 29434  01A25A                     __end_of_INT1_ISR:
 29435                           	opt callstack 0
 29436                           
 29437 ;; *************** function _INT1_CallBack *****************
 29438 ;; Defined at:
 29439 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 29440 ;; Parameters:    Size  Location     Type
 29441 ;;		None
 29442 ;; Auto vars:     Size  Location     Type
 29443 ;;		None
 29444 ;; Return value:  Size  Location     Type
 29445 ;;                  1  [STACK] void 
 29446 ;; Registers used:
 29447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 29448 ;; Tracked objects:
 29449 ;;		On entry : 3F/39
 29450 ;;		On exit  : 0/0
 29451 ;;		Unchanged: 0/0
 29452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29457 ;;Total ram usage:        0 bytes
 29458 ;; Hardware stack levels used:    1
 29459 ;; Hardware stack levels required when called:    4
 29460 ;; This function calls:
 29461 ;;		Absolute function
 29462 ;;		_INT1_DefaultInterruptHandler
 29463 ;;		_switch_handler
 29464 ;; This function is called by:
 29465 ;;		_INT1_ISR
 29466 ;; This function uses a reentrant model
 29467 ;;
 29468                           
 29469                           	psect	text134
 29470  01A860                     __ptext134:
 29471                           	opt callstack 0
 29472  01A860                     _INT1_CallBack:
 29473                           	opt callstack 12
 29474                           
 29475                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 29476                           
 29477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29478                           ;incstack = 0
 29479  01A860  0100               	movlb	0	; () banked
 29480  01A862  51B4               	movf	_INT1_InterruptHandler& (0+255),w,b
 29481  01A864  11B5               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 29482  01A866  11B6               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 29483  01A868  B4D8               	btfsc	status,2,c
 29484  01A86A  0012               	return	
 29485                           
 29486                           ; BSR set to: 0
 29487                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 29488  01A86C  D801               	call	u934_28
 29489  01A86E  0012               	return	
 29490  01A870                     u934_28:
 29491  01A870  0005               	push	
 29492  01A872  6EFA               	movwf	pclath,c
 29493  01A874  51B4               	movf	_INT1_InterruptHandler& (0+255),w,b
 29494  01A876  6EFD               	movwf	tosl,c
 29495  01A878  51B5               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 29496  01A87A  6EFE               	movwf	tosh,c
 29497  01A87C  51B6               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 29498  01A87E  6EFF               	movwf	tosu,c
 29499  01A880  50FA               	movf	pclath,w,c
 29500  01A882  0012               	return		;indir
 29501  01A884                     __end_of_INT1_CallBack:
 29502                           	opt callstack 0
 29503                           
 29504 ;; *************** function _INT1_DefaultInterruptHandler *****************
 29505 ;; Defined at:
 29506 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 29507 ;; Parameters:    Size  Location     Type
 29508 ;;		None
 29509 ;; Auto vars:     Size  Location     Type
 29510 ;;		None
 29511 ;; Return value:  Size  Location     Type
 29512 ;;                  1  [STACK] void 
 29513 ;; Registers used:
 29514 ;;		None
 29515 ;; Tracked objects:
 29516 ;;		On entry : 3F/0
 29517 ;;		On exit  : 0/0
 29518 ;;		Unchanged: 0/0
 29519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29524 ;;Total ram usage:        0 bytes
 29525 ;; Hardware stack levels used:    1
 29526 ;; Hardware stack levels required when called:    3
 29527 ;; This function calls:
 29528 ;;		Nothing
 29529 ;; This function is called by:
 29530 ;;		_EXT_INT_Initialize
 29531 ;;		_INT1_CallBack
 29532 ;; This function uses a reentrant model
 29533 ;;
 29534                           
 29535                           	psect	text135
 29536  01ABDE                     __ptext135:
 29537                           	opt callstack 0
 29538  01ABDE                     _INT1_DefaultInterruptHandler:
 29539                           	opt callstack 12
 29540                           
 29541                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29542                           
 29543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29544                           ;incstack = 0
 29545  01ABDE  0012               	return		;funcret
 29546  01ABE0                     __end_of_INT1_DefaultInterruptHandler:
 29547                           	opt callstack 0
 29548                           
 29549 ;; *************** function _switch_handler *****************
 29550 ;; Defined at:
 29551 ;;		line 58 in file "dio.c"
 29552 ;; Parameters:    Size  Location     Type
 29553 ;;		None
 29554 ;; Auto vars:     Size  Location     Type
 29555 ;;  i               1  [STACK] unsigned char 
 29556 ;;  sw_value        1  [STACK] unsigned char 
 29557 ;; Return value:  Size  Location     Type
 29558 ;;                  1  [STACK] void 
 29559 ;; Registers used:
 29560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 29561 ;; Tracked objects:
 29562 ;;		On entry : 3F/0
 29563 ;;		On exit  : 0/0
 29564 ;;		Unchanged: 0/0
 29565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29570 ;;Total ram usage:        0 bytes
 29571 ;; Hardware stack levels used:    1
 29572 ;; Hardware stack levels required when called:    3
 29573 ;; This function calls:
 29574 ;;		Nothing
 29575 ;; This function is called by:
 29576 ;;		_start_switch_handler
 29577 ;;		_INT1_CallBack
 29578 ;; This function uses a reentrant model
 29579 ;;
 29580                           
 29581                           	psect	text136
 29582  018234                     __ptext136:
 29583                           	opt callstack 0
 29584  018234                     _switch_handler:
 29585                           	opt callstack 0
 29586                           
 29587                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29588  018234  52E6               	movf	postinc1,f,c
 29589  018236  52E6               	movf	postinc1,f,c
 29590                           
 29591                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 29592                           ;stkvar	_i @ sp[(-2)+0]
 29593                           
 29594                           ;incstack = 0
 29595  018238  0EFE               	movlw	-2
 29596  01823A  6AE3               	clrf	plusw1,c
 29597  01823C  9EBD               	bcf	189,7,c	;volatile
 29598                           
 29599                           ;dio.c: 72:  __nop();
 29600  01823E  F000               	nop	
 29601                           
 29602                           ;dio.c: 73:  __nop();
 29603  018240  F000               	nop	
 29604                           
 29605                           ;dio.c: 74:  __nop();
 29606  018242  F000               	nop	
 29607  018244  D019               	goto	l9912
 29608  018246                     l9900:
 29609                           
 29610                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 29611  018246  A6CF               	btfss	207,3,c	;volatile
 29612  018248  D011               	goto	u910_20
 29613  01824A  D00D               	goto	u910_21
 29614  01824C                     u907_28:
 29615                           
 29616                           ;stkvar	_sw_value @ sp[(-2)+1]
 29617  01824C  0EFF               	movlw	-1
 29618  01824E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29619                           
 29620                           ;dio.c: 80:    break;
 29621  018254  D027               	goto	l9914
 29622  018256                     l9902:
 29623                           
 29624                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 29625  018256  A4CF               	btfss	207,2,c	;volatile
 29626  018258  D009               	goto	u910_20
 29627  01825A  D005               	goto	u910_21
 29628  01825C                     l9904:
 29629                           
 29630                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 29631  01825C  A2CF               	btfss	207,1,c	;volatile
 29632  01825E  D006               	goto	u910_20
 29633  018260  D002               	goto	u910_21
 29634  018262                     l9906:
 29635                           
 29636                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 29637  018262  A0CF               	btfss	207,0,c	;volatile
 29638  018264  D003               	goto	u910_20
 29639  018266                     u910_21:
 29640  018266  6A0C               	clrf	(btemp+11)^0,c
 29641  018268  2A0C               	incf	(btemp+11)^0,f,c
 29642  01826A  D7F0               	goto	u907_28
 29643  01826C                     u910_20:
 29644  01826C  6A0C               	clrf	(btemp+11)^0,c
 29645  01826E  D7EE               	goto	u907_28
 29646  018270                     l9908:
 29647                           
 29648                           ;dio.c: 91:    sw_value = 1;
 29649                           ;stkvar	_sw_value @ sp[(-2)+1]
 29650  018270  0EFF               	movlw	-1
 29651  018272  6AE3               	clrf	plusw1,c
 29652  018274  2AE3               	incf	plusw1,f,c
 29653                           
 29654                           ;dio.c: 92:    break;
 29655  018276  D016               	goto	l9914
 29656  018278                     l9912:
 29657                           
 29658                           ;stkvar	_i @ sp[(-2)+0]
 29659  018278  0EFE               	movlw	-2
 29660  01827A  50E3               	movf	plusw1,w,c
 29661  01827C  6E0B               	movwf	(btemp+10)^0,c
 29662  01827E  6A0C               	clrf	(btemp+11)^0,c
 29663                           
 29664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29665                           ; Switch size 1, requested type "simple"
 29666                           ; Number of cases is 1, Range of values is 0 to 0
 29667                           ; switch strategies available:
 29668                           ; Name         Instructions Cycles
 29669                           ; simple_byte            4     3 (average)
 29670                           ;	Chosen strategy is simple_byte
 29671  018280  500C               	movf	(btemp+11)^0,w,c
 29672  018282  0A00               	xorlw	0	; case 0
 29673  018284  A4D8               	btfss	status,2,c
 29674  018286  D7F4               	goto	l9908
 29675                           
 29676                           ; Switch size 1, requested type "simple"
 29677                           ; Number of cases is 4, Range of values is 0 to 3
 29678                           ; switch strategies available:
 29679                           ; Name         Instructions Cycles
 29680                           ; simple_byte           13     7 (average)
 29681                           ;	Chosen strategy is simple_byte
 29682  018288  500B               	movf	(btemp+10)^0,w,c
 29683  01828A  0A00               	xorlw	0	; case 0
 29684  01828C  B4D8               	btfsc	status,2,c
 29685  01828E  D7E9               	goto	l9906
 29686  018290  0A01               	xorlw	1	; case 1
 29687  018292  B4D8               	btfsc	status,2,c
 29688  018294  D7E3               	goto	l9904
 29689  018296  0A03               	xorlw	3	; case 2
 29690  018298  B4D8               	btfsc	status,2,c
 29691  01829A  D7DD               	goto	l9902
 29692  01829C  0A01               	xorlw	1	; case 3
 29693  01829E  B4D8               	btfsc	status,2,c
 29694  0182A0  D7D2               	goto	l9900
 29695  0182A2  D7E6               	goto	l9908
 29696  0182A4                     l9914:
 29697                           
 29698                           ;dio.c: 96:   if (sw_value) {
 29699                           ;stkvar	_sw_value @ sp[(-2)+1]
 29700  0182A4  0EFF               	movlw	-1
 29701  0182A6  50E3               	movf	plusw1,w,c
 29702  0182A8  B4D8               	btfsc	status,2,c
 29703  0182AA  D018               	goto	l9920
 29704                           
 29705                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 29706                           ;stkvar	_i @ sp[(-2)+0]
 29707  0182AC  0EFE               	movlw	-2
 29708  0182AE  50E3               	movf	plusw1,w,c
 29709  0182B0  0D05               	mullw	5
 29710  0182B2  0EBC               	movlw	low _S
 29711  0182B4  24F3               	addwf	243,w,c
 29712  0182B6  6ED9               	movwf	fsr2l,c
 29713  0182B8  0E02               	movlw	high _S
 29714  0182BA  20F4               	addwfc	prodh,w,c
 29715  0182BC  6EDA               	movwf	fsr2h,c
 29716  0182BE  04DE               	decf	postinc2,w,c
 29717  0182C0  A4D8               	btfss	status,2,c
 29718  0182C2  D049               	goto	l9928
 29719                           
 29720                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 29721                           ;stkvar	_i @ sp[(-2)+0]
 29722  0182C4  0EFE               	movlw	-2
 29723  0182C6  50E3               	movf	plusw1,w,c
 29724  0182C8  0D05               	mullw	5
 29725  0182CA  0EBC               	movlw	low _S
 29726  0182CC  24F3               	addwf	243,w,c
 29727  0182CE  6ED9               	movwf	fsr2l,c
 29728  0182D0  0E02               	movlw	high _S
 29729  0182D2  20F4               	addwfc	prodh,w,c
 29730  0182D4  6EDA               	movwf	fsr2h,c
 29731  0182D6  0E00               	movlw	0
 29732  0182D8  6EDF               	movwf	indf2,c
 29733  0182DA  D03D               	goto	l9928
 29734  0182DC                     l9920:
 29735                           
 29736                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 29737                           ;stkvar	_i @ sp[(-2)+0]
 29738  0182DC  0EFE               	movlw	-2
 29739  0182DE  50E3               	movf	plusw1,w,c
 29740  0182E0  0D05               	mullw	5
 29741  0182E2  0EBC               	movlw	low _S
 29742  0182E4  24F3               	addwf	243,w,c
 29743  0182E6  6ED9               	movwf	fsr2l,c
 29744  0182E8  0E02               	movlw	high _S
 29745  0182EA  20F4               	addwfc	prodh,w,c
 29746  0182EC  6EDA               	movwf	fsr2h,c
 29747  0182EE  50DF               	movf	indf2,w,c
 29748  0182F0  A4D8               	btfss	status,2,c
 29749  0182F2  D031               	goto	l9928
 29750                           
 29751                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 29752                           ;stkvar	_i @ sp[(-2)+0]
 29753  0182F4  0EFE               	movlw	-2
 29754  0182F6  50E3               	movf	plusw1,w,c
 29755  0182F8  0D05               	mullw	5
 29756  0182FA  0EBC               	movlw	low _S
 29757  0182FC  24F3               	addwf	243,w,c
 29758  0182FE  6ED9               	movwf	fsr2l,c
 29759  018300  0E02               	movlw	high _S
 29760  018302  20F4               	addwfc	prodh,w,c
 29761  018304  6EDA               	movwf	fsr2h,c
 29762  018306  0E01               	movlw	1
 29763  018308  6EDF               	movwf	indf2,c
 29764                           
 29765                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 29766  01830A  EE20  F2B8         	lfsr	2,_V+184	;volatile
 29767                           
 29768                           ;stkvar	_i @ sp[(-2)+0]
 29769  01830E  0EFE               	movlw	-2
 29770  018310  50E3               	movf	plusw1,w,c
 29771  018312  0D05               	mullw	5
 29772  018314  0EBD               	movlw	low (_S+1)
 29773  018316  24F3               	addwf	243,w,c
 29774  018318  6EE9               	movwf	fsr0l,c
 29775  01831A  0E02               	movlw	high (_S+1)
 29776  01831C  20F4               	addwfc	prodh,w,c
 29777  01831E  6EEA               	movwf	fsr0h,c
 29778  018320  006F FF7B FFEE     	movff	postinc2,postinc0
 29779  018326  006F FF7B FFEE     	movff	postinc2,postinc0
 29780  01832C  006F FF7B FFEE     	movff	postinc2,postinc0
 29781  018332  006F FF7B FFEE     	movff	postinc2,postinc0
 29782                           
 29783                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 29784                           ;stkvar	_i @ sp[(-2)+0]
 29785  018338  0EFE               	movlw	-2
 29786  01833A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29787  018340  0E01               	movlw	1
 29788  018342  6E0B               	movwf	(btemp+10)^0,c
 29789  018344  2A0C               	incf	(btemp+11)^0,f,c
 29790  018346  D002               	goto	u914_24
 29791  018348                     u914_25:
 29792  018348  90D8               	bcf	status,0,c
 29793  01834A  360B               	rlcf	(btemp+10)^0,f,c
 29794  01834C                     u914_24:
 29795  01834C  2E0C               	decfsz	(btemp+11)^0,f,c
 29796  01834E  D7FC               	goto	u914_25
 29797  018350  500B               	movf	(btemp+10)^0,w,c
 29798  018352  0102               	movlb	2	; () banked
 29799  018354  13E4               	iorwf	(_S+40)& (0+255),f,b	;volatile
 29800  018356                     l9928:
 29801                           
 29802                           ;dio.c: 107:  } while (++i < 4);
 29803                           ;stkvar	_i @ sp[(-2)+0]
 29804  018356  0EFE               	movlw	-2
 29805  018358  2AE3               	incf	plusw1,f,c
 29806  01835A  0EFE               	movlw	-2
 29807  01835C  006F FF8C  F001    	movff	plusw1,btemp
 29808  018362  0E03               	movlw	3
 29809  018364  6401               	cpfsgt	btemp^0,c
 29810  018366  D788               	goto	l9912
 29811                           
 29812                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 29813  018368  8EBD               	bsf	189,7,c	;volatile
 29814                           
 29815                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29816  01836A  52E5               	movf	postdec1,f,c
 29817  01836C  52E5               	movf	postdec1,f,c
 29818  01836E  0012               	return		;funcret
 29819  018370                     __end_of_switch_handler:
 29820                           	opt callstack 0
 29821                           
 29822 ;; *************** function _TMR5_ISR *****************
 29823 ;; Defined at:
 29824 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 29825 ;; Parameters:    Size  Location     Type
 29826 ;;		None
 29827 ;; Auto vars:     Size  Location     Type
 29828 ;;		None
 29829 ;; Return value:  Size  Location     Type
 29830 ;;                  1    wreg      void 
 29831 ;; Registers used:
 29832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 29833 ;; Tracked objects:
 29834 ;;		On entry : 0/0
 29835 ;;		On exit  : 0/0
 29836 ;;		Unchanged: 0/0
 29837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29840 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29841 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29842 ;;Total ram usage:        4 bytes
 29843 ;; Hardware stack levels used:    1
 29844 ;; Hardware stack levels required when called:    5
 29845 ;; This function calls:
 29846 ;;		_TMR5_CallBack
 29847 ;;		_TMR5_WriteTimer
 29848 ;; This function is called by:
 29849 ;;		Interrupt level 1
 29850 ;; This function uses a non-reentrant model
 29851 ;;
 29852                           
 29853                           	psect	text137
 29854  019D08                     __ptext137:
 29855                           	opt callstack 0
 29856  019D08                     _TMR5_ISR:
 29857                           	opt callstack 12
 29858                           
 29859                           ;incstack = 0
 29860  019D08  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 29861  019D0E  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 29862  019D14  EE16  F061         	lfsr	1,___intlo_sp
 29863                           
 29864                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 29865  019D18  0139               	movlb	57	; () banked
 29866  019D1A  9DA8               	bcf	168,6,b	;volatile
 29867                           
 29868                           ; BSR set to: 57
 29869                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 29870  019D1C  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 29871  019D22  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 29872  019D28  ECCE  F0D0         	call	_TMR5_WriteTimer	;wreg free
 29873                           
 29874                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 29875  019D2C  0102               	movlb	2	; () banked
 29876  019D2E  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 29877  019D30  6E42               	movwf	??_TMR5_ISR^0,c
 29878  019D32  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 29879  019D34  0E05               	movlw	5
 29880  019D36  2642               	addwf	??_TMR5_ISR^0,f,c
 29881  019D38  0E00               	movlw	0
 29882  019D3A  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 29883  019D3C  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 29884  019D3E  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 29885  019D40  5042               	movf	??_TMR5_ISR^0,w,c
 29886  019D42  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 29887  019D44  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 29888  019D46  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 29889  019D48  A0D8               	btfss	status,0,c
 29890  019D4A  D004               	goto	i1l1017
 29891                           
 29892                           ; BSR set to: 2
 29893                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 29894  019D4C  EC42  F0D4         	call	_TMR5_CallBack	;wreg free
 29895                           
 29896                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 29897  019D50  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 29898  019D52  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 29899  019D54                     i1l1017:
 29900  019D54  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 29901  019D5A  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 29902  019D60  0011               	retfie		f
 29903  019D62                     __end_of_TMR5_ISR:
 29904                           	opt callstack 0
 29905                           
 29906 ;; *************** function _TMR5_WriteTimer *****************
 29907 ;; Defined at:
 29908 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 29909 ;; Parameters:    Size  Location     Type
 29910 ;;  timerVal        2  [STACK] unsigned short 
 29911 ;; Auto vars:     Size  Location     Type
 29912 ;;		None
 29913 ;; Return value:  Size  Location     Type
 29914 ;;                  1  [STACK] void 
 29915 ;; Registers used:
 29916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29917 ;; Tracked objects:
 29918 ;;		On entry : 3F/39
 29919 ;;		On exit  : 0/0
 29920 ;;		Unchanged: 0/0
 29921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29926 ;;Total ram usage:        0 bytes
 29927 ;; Hardware stack levels used:    1
 29928 ;; Hardware stack levels required when called:    3
 29929 ;; This function calls:
 29930 ;;		Nothing
 29931 ;; This function is called by:
 29932 ;;		_TMR5_ISR
 29933 ;; This function uses a reentrant model
 29934 ;;
 29935                           
 29936                           	psect	text138
 29937  01A19C                     __ptext138:
 29938                           	opt callstack 0
 29939  01A19C                     _TMR5_WriteTimer:
 29940                           	opt callstack 13
 29941                           
 29942                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 29943                           
 29944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29945                           ;incstack = 0
 29946  01A19C  A49A               	btfss	154,2,c	;volatile
 29947  01A19E  D00F               	goto	l10110
 29948                           
 29949                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 29950  01A1A0  909A               	bcf	154,0,c	;volatile
 29951                           
 29952                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 29953                           ;stkvar	_timerVal @ sp[(0)+-2]
 29954  01A1A2  0EFF               	movlw	255
 29955  01A1A4  24E1               	addwf	fsr1l,w,c
 29956  01A1A6  6ED9               	movwf	fsr2l,c
 29957  01A1A8  0EFF               	movlw	255
 29958  01A1AA  20E2               	addwfc	fsr1h,w,c
 29959  01A1AC  6EDA               	movwf	fsr2h,c
 29960  01A1AE  50DF               	movf	indf2,w,c
 29961  01A1B0  6E99               	movwf	153,c	;volatile
 29962                           
 29963                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 29964                           ;stkvar	_timerVal @ sp[(0)+-2]
 29965  01A1B2  0EFE               	movlw	-2
 29966  01A1B4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 29967                           
 29968                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 29969  01A1BA  809A               	bsf	154,0,c	;volatile
 29970                           
 29971                           ;mcc_generated_files/tmr5.c: 142:  } else {
 29972  01A1BC  D00C               	goto	l1000
 29973  01A1BE                     l10110:
 29974                           
 29975                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 29976                           ;stkvar	_timerVal @ sp[(0)+-2]
 29977  01A1BE  0EFF               	movlw	255
 29978  01A1C0  24E1               	addwf	fsr1l,w,c
 29979  01A1C2  6ED9               	movwf	fsr2l,c
 29980  01A1C4  0EFF               	movlw	255
 29981  01A1C6  20E2               	addwfc	fsr1h,w,c
 29982  01A1C8  6EDA               	movwf	fsr2h,c
 29983  01A1CA  50DF               	movf	indf2,w,c
 29984  01A1CC  6E99               	movwf	153,c	;volatile
 29985                           
 29986                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 29987                           ;stkvar	_timerVal @ sp[(0)+-2]
 29988  01A1CE  0EFE               	movlw	-2
 29989  01A1D0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 29990  01A1D6                     l1000:
 29991                           
 29992                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 29993  01A1D6  52E5               	movf	postdec1,f,c
 29994  01A1D8  52E5               	movf	postdec1,f,c
 29995  01A1DA  0012               	return		;funcret
 29996  01A1DC                     __end_of_TMR5_WriteTimer:
 29997                           	opt callstack 0
 29998                           
 29999 ;; *************** function _TMR5_CallBack *****************
 30000 ;; Defined at:
 30001 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 30002 ;; Parameters:    Size  Location     Type
 30003 ;;		None
 30004 ;; Auto vars:     Size  Location     Type
 30005 ;;		None
 30006 ;; Return value:  Size  Location     Type
 30007 ;;                  1  [STACK] void 
 30008 ;; Registers used:
 30009 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 30010 ;; Tracked objects:
 30011 ;;		On entry : 3F/2
 30012 ;;		On exit  : 0/0
 30013 ;;		Unchanged: 0/0
 30014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30019 ;;Total ram usage:        0 bytes
 30020 ;; Hardware stack levels used:    1
 30021 ;; Hardware stack levels required when called:    4
 30022 ;; This function calls:
 30023 ;;		Absolute function
 30024 ;;		_TMR5_DefaultInterruptHandler
 30025 ;; This function is called by:
 30026 ;;		_TMR5_ISR
 30027 ;; This function uses a reentrant model
 30028 ;;
 30029                           
 30030                           	psect	text139
 30031  01A884                     __ptext139:
 30032                           	opt callstack 0
 30033  01A884                     _TMR5_CallBack:
 30034                           	opt callstack 12
 30035                           
 30036                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 30037                           
 30038                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30039                           ;incstack = 0
 30040  01A884  0100               	movlb	0	; () banked
 30041  01A886  519F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 30042  01A888  11A0               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 30043  01A88A  11A1               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 30044  01A88C  B4D8               	btfsc	status,2,c
 30045  01A88E  0012               	return	
 30046                           
 30047                           ; BSR set to: 0
 30048                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 30049  01A890  D801               	call	u943_28
 30050  01A892  0012               	return	
 30051  01A894                     u943_28:
 30052  01A894  0005               	push	
 30053  01A896  6EFA               	movwf	pclath,c
 30054  01A898  519F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 30055  01A89A  6EFD               	movwf	tosl,c
 30056  01A89C  51A0               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 30057  01A89E  6EFE               	movwf	tosh,c
 30058  01A8A0  51A1               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 30059  01A8A2  6EFF               	movwf	tosu,c
 30060  01A8A4  50FA               	movf	pclath,w,c
 30061  01A8A6  0012               	return		;indir
 30062  01A8A8                     __end_of_TMR5_CallBack:
 30063                           	opt callstack 0
 30064                           
 30065 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 30066 ;; Defined at:
 30067 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 30068 ;; Parameters:    Size  Location     Type
 30069 ;;		None
 30070 ;; Auto vars:     Size  Location     Type
 30071 ;;		None
 30072 ;; Return value:  Size  Location     Type
 30073 ;;                  1  [STACK] void 
 30074 ;; Registers used:
 30075 ;;		wreg, status,2, status,0, btemp+11
 30076 ;; Tracked objects:
 30077 ;;		On entry : 3F/0
 30078 ;;		On exit  : 3F/2
 30079 ;;		Unchanged: 0/0
 30080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30085 ;;Total ram usage:        0 bytes
 30086 ;; Hardware stack levels used:    1
 30087 ;; Hardware stack levels required when called:    3
 30088 ;; This function calls:
 30089 ;;		Nothing
 30090 ;; This function is called by:
 30091 ;;		_TMR5_Initialize
 30092 ;;		_TMR5_CallBack
 30093 ;; This function uses a reentrant model
 30094 ;;
 30095                           
 30096                           	psect	text140
 30097  01A39C                     __ptext140:
 30098                           	opt callstack 0
 30099  01A39C                     _TMR5_DefaultInterruptHandler:
 30100                           	opt callstack 12
 30101                           
 30102                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 30103                           
 30104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30105                           ;incstack = 0
 30106  01A39C  A0BE               	btfss	190,0,c	;volatile
 30107  01A39E  D002               	goto	u884_20
 30108  01A3A0  0E01               	movlw	1
 30109  01A3A2  D001               	goto	u884_26
 30110  01A3A4                     u884_20:
 30111  01A3A4  0E00               	movlw	0
 30112  01A3A6                     u884_26:
 30113  01A3A6  0AFF               	xorlw	255
 30114  01A3A8  6E0C               	movwf	(btemp+11)^0,c
 30115  01A3AA  50BE               	movf	190,w,c	;volatile
 30116  01A3AC  180C               	xorwf	(btemp+11)^0,w,c
 30117  01A3AE  0BFE               	andlw	-2
 30118  01A3B0  180C               	xorwf	(btemp+11)^0,w,c
 30119  01A3B2  6EBE               	movwf	190,c	;volatile
 30120                           
 30121                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 30122  01A3B4  0E01               	movlw	1
 30123  01A3B6  0102               	movlb	2	; () banked
 30124  01A3B8  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 30125  01A3BA  0E00               	movlw	0
 30126  01A3BC  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 30127  01A3BE  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 30128  01A3C0  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 30129                           
 30130                           ; BSR set to: 2
 30131                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 30132  01A3C2  0E01               	movlw	1
 30133  01A3C4  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 30134  01A3C6  0E00               	movlw	0
 30135  01A3C8  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 30136  01A3CA  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 30137  01A3CC  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 30138                           
 30139                           ; BSR set to: 2
 30140                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30141  01A3CE  0012               	return		;funcret
 30142  01A3D0                     __end_of_TMR5_DefaultInterruptHandler:
 30143                           	opt callstack 0
 30144                           
 30145 ;; *************** function _TMR3_ISR *****************
 30146 ;; Defined at:
 30147 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 30148 ;; Parameters:    Size  Location     Type
 30149 ;;		None
 30150 ;; Auto vars:     Size  Location     Type
 30151 ;;		None
 30152 ;; Return value:  Size  Location     Type
 30153 ;;                  1    wreg      void 
 30154 ;; Registers used:
 30155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 30156 ;; Tracked objects:
 30157 ;;		On entry : 0/0
 30158 ;;		On exit  : 3F/0
 30159 ;;		Unchanged: 0/0
 30160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30163 ;;      Temps:          0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30164 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30165 ;;Total ram usage:       25 bytes
 30166 ;; Hardware stack levels used:    1
 30167 ;; Hardware stack levels required when called:   14
 30168 ;; This function calls:
 30169 ;;		_TMR3_CallBack
 30170 ;;		_TMR3_WriteTimer
 30171 ;; This function is called by:
 30172 ;;		Interrupt level 1
 30173 ;; This function uses a non-reentrant model
 30174 ;;
 30175                           
 30176                           	psect	text141
 30177  017E44                     __ptext141:
 30178                           	opt callstack 0
 30179  017E44                     _TMR3_ISR:
 30180                           	opt callstack 3
 30181                           
 30182                           ; BSR set to: 2
 30183                           ;incstack = 0
 30184  017E44  006F FF60  F2E5    	movff	status,??_TMR3_ISR
 30185  017E4A  006F FFD8  F2E6    	movff	tblptrl,??_TMR3_ISR+1
 30186  017E50  006F FFDC  F2E7    	movff	tblptrh,??_TMR3_ISR+2
 30187  017E56  006F FFE0  F2E8    	movff	tblptru,??_TMR3_ISR+3
 30188  017E5C  006F FFD4  F2E9    	movff	tablat,??_TMR3_ISR+4
 30189  017E62  0060  F004  F2EA   	movff	btemp,??_TMR3_ISR+5
 30190  017E68  0060  F008  F2EB   	movff	btemp+1,??_TMR3_ISR+6
 30191  017E6E  0060  F00C  F2EC   	movff	btemp+2,??_TMR3_ISR+7
 30192  017E74  0060  F010  F2ED   	movff	btemp+3,??_TMR3_ISR+8
 30193  017E7A  0060  F014  F2EE   	movff	btemp+4,??_TMR3_ISR+9
 30194  017E80  0060  F018  F2EF   	movff	btemp+5,??_TMR3_ISR+10
 30195  017E86  0060  F01C  F2F0   	movff	btemp+6,??_TMR3_ISR+11
 30196  017E8C  0060  F020  F2F1   	movff	btemp+7,??_TMR3_ISR+12
 30197  017E92  0060  F024  F2F2   	movff	btemp+8,??_TMR3_ISR+13
 30198  017E98  0060  F028  F2F3   	movff	btemp+9,??_TMR3_ISR+14
 30199  017E9E  0060  F02C  F2F4   	movff	btemp+10,??_TMR3_ISR+15
 30200  017EA4  0060  F030  F2F5   	movff	btemp+11,??_TMR3_ISR+16
 30201  017EAA  0060  F044  F2F6   	movff	btemp+16,??_TMR3_ISR+17
 30202  017EB0  0060  F048  F2F7   	movff	btemp+17,??_TMR3_ISR+18
 30203  017EB6  0060  F04C  F2F8   	movff	btemp+18,??_TMR3_ISR+19
 30204  017EBC  0060  F050  F2F9   	movff	btemp+19,??_TMR3_ISR+20
 30205  017EC2  0060  F054  F2FA   	movff	btemp+20,??_TMR3_ISR+21
 30206  017EC8  0060  F058  F2FB   	movff	btemp+21,??_TMR3_ISR+22
 30207  017ECE  0060  F05C  F2FC   	movff	btemp+22,??_TMR3_ISR+23
 30208  017ED4  0060  F060  F2FD   	movff	btemp+23,??_TMR3_ISR+24
 30209  017EDA  EE16  F061         	lfsr	1,___intlo_sp
 30210                           
 30211                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 30212  017EDE  0139               	movlb	57	; () banked
 30213  017EE0  9DA6               	bcf	166,6,b	;volatile
 30214                           
 30215                           ; BSR set to: 57
 30216                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 30217  017EE2  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 30218  017EE8  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 30219  017EEE  ECEE  F0D0         	call	_TMR3_WriteTimer	;wreg free
 30220                           
 30221                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 30222  017EF2  0100               	movlb	0	; () banked
 30223  017EF4  4BBC               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 30224  017EF6  2BBD               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 30225  017EF8  51BD               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 30226  017EFA  E104               	bnz	i1u1171_20
 30227  017EFC  0E28               	movlw	40
 30228  017EFE  5DBC               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 30229  017F00  A0D8               	btfss	status,0,c
 30230  017F02  D005               	goto	i1l1205
 30231  017F04                     i1u1171_20:
 30232                           
 30233                           ; BSR set to: 0
 30234                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 30235  017F04  EC54  F0D4         	call	_TMR3_CallBack	;wreg free
 30236                           
 30237                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 30238  017F08  0100               	movlb	0	; () banked
 30239  017F0A  6BBC               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 30240  017F0C  6BBD               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 30241  017F0E                     i1l1205:
 30242                           
 30243                           ; BSR set to: 0
 30244  017F0E  0060  FBF4  F018   	movff	??_TMR3_ISR+24,btemp+23
 30245  017F14  0060  FBF0  F017   	movff	??_TMR3_ISR+23,btemp+22
 30246  017F1A  0060  FBEC  F016   	movff	??_TMR3_ISR+22,btemp+21
 30247  017F20  0060  FBE8  F015   	movff	??_TMR3_ISR+21,btemp+20
 30248  017F26  0060  FBE4  F014   	movff	??_TMR3_ISR+20,btemp+19
 30249  017F2C  0060  FBE0  F013   	movff	??_TMR3_ISR+19,btemp+18
 30250  017F32  0060  FBDC  F012   	movff	??_TMR3_ISR+18,btemp+17
 30251  017F38  0060  FBD8  F011   	movff	??_TMR3_ISR+17,btemp+16
 30252  017F3E  0060  FBD4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 30253  017F44  0060  FBD0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 30254  017F4A  0060  FBCC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 30255  017F50  0060  FBC8  F009   	movff	??_TMR3_ISR+13,btemp+8
 30256  017F56  0060  FBC4  F008   	movff	??_TMR3_ISR+12,btemp+7
 30257  017F5C  0060  FBC0  F007   	movff	??_TMR3_ISR+11,btemp+6
 30258  017F62  0060  FBBC  F006   	movff	??_TMR3_ISR+10,btemp+5
 30259  017F68  0060  FBB8  F005   	movff	??_TMR3_ISR+9,btemp+4
 30260  017F6E  0060  FBB4  F004   	movff	??_TMR3_ISR+8,btemp+3
 30261  017F74  0060  FBB0  F003   	movff	??_TMR3_ISR+7,btemp+2
 30262  017F7A  0060  FBAC  F002   	movff	??_TMR3_ISR+6,btemp+1
 30263  017F80  0060  FBA8  F001   	movff	??_TMR3_ISR+5,btemp
 30264  017F86  0060  FBA7  FFF5   	movff	??_TMR3_ISR+4,tablat
 30265  017F8C  0060  FBA3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 30266  017F92  0060  FB9F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 30267  017F98  0060  FB9B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 30268  017F9E  0060  FB97  FFD8   	movff	??_TMR3_ISR,status
 30269  017FA4  0011               	retfie		f
 30270  017FA6                     __end_of_TMR3_ISR:
 30271                           	opt callstack 0
 30272                           
 30273 ;; *************** function _TMR3_WriteTimer *****************
 30274 ;; Defined at:
 30275 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 30276 ;; Parameters:    Size  Location     Type
 30277 ;;  timerVal        2  [STACK] unsigned short 
 30278 ;; Auto vars:     Size  Location     Type
 30279 ;;		None
 30280 ;; Return value:  Size  Location     Type
 30281 ;;                  1  [STACK] void 
 30282 ;; Registers used:
 30283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30284 ;; Tracked objects:
 30285 ;;		On entry : 3F/39
 30286 ;;		On exit  : 0/0
 30287 ;;		Unchanged: 0/0
 30288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30293 ;;Total ram usage:        0 bytes
 30294 ;; Hardware stack levels used:    1
 30295 ;; Hardware stack levels required when called:    3
 30296 ;; This function calls:
 30297 ;;		Nothing
 30298 ;; This function is called by:
 30299 ;;		_TMR3_ISR
 30300 ;; This function uses a reentrant model
 30301 ;;
 30302                           
 30303                           	psect	text142
 30304  01A1DC                     __ptext142:
 30305                           	opt callstack 0
 30306  01A1DC                     _TMR3_WriteTimer:
 30307                           	opt callstack 13
 30308                           
 30309                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 30310                           
 30311                           ; BSR set to: 0
 30312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30313                           ;incstack = 0
 30314  01A1DC  A4A6               	btfss	166,2,c	;volatile
 30315  01A1DE  D00F               	goto	l10128
 30316                           
 30317                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 30318  01A1E0  90A6               	bcf	166,0,c	;volatile
 30319                           
 30320                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 30321                           ;stkvar	_timerVal @ sp[(0)+-2]
 30322  01A1E2  0EFF               	movlw	255
 30323  01A1E4  24E1               	addwf	fsr1l,w,c
 30324  01A1E6  6ED9               	movwf	fsr2l,c
 30325  01A1E8  0EFF               	movlw	255
 30326  01A1EA  20E2               	addwfc	fsr1h,w,c
 30327  01A1EC  6EDA               	movwf	fsr2h,c
 30328  01A1EE  50DF               	movf	indf2,w,c
 30329  01A1F0  6EA5               	movwf	165,c	;volatile
 30330                           
 30331                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 30332                           ;stkvar	_timerVal @ sp[(0)+-2]
 30333  01A1F2  0EFE               	movlw	-2
 30334  01A1F4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 30335                           
 30336                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 30337  01A1FA  80A6               	bsf	166,0,c	;volatile
 30338                           
 30339                           ;mcc_generated_files/tmr3.c: 141:     }
 30340  01A1FC  D00C               	goto	l1188
 30341  01A1FE                     l10128:
 30342                           
 30343                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 30344                           ;stkvar	_timerVal @ sp[(0)+-2]
 30345  01A1FE  0EFF               	movlw	255
 30346  01A200  24E1               	addwf	fsr1l,w,c
 30347  01A202  6ED9               	movwf	fsr2l,c
 30348  01A204  0EFF               	movlw	255
 30349  01A206  20E2               	addwfc	fsr1h,w,c
 30350  01A208  6EDA               	movwf	fsr2h,c
 30351  01A20A  50DF               	movf	indf2,w,c
 30352  01A20C  6EA5               	movwf	165,c	;volatile
 30353                           
 30354                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 30355                           ;stkvar	_timerVal @ sp[(0)+-2]
 30356  01A20E  0EFE               	movlw	-2
 30357  01A210  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 30358  01A216                     l1188:
 30359                           
 30360                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 30361  01A216  52E5               	movf	postdec1,f,c
 30362  01A218  52E5               	movf	postdec1,f,c
 30363  01A21A  0012               	return		;funcret
 30364  01A21C                     __end_of_TMR3_WriteTimer:
 30365                           	opt callstack 0
 30366                           
 30367 ;; *************** function _TMR3_CallBack *****************
 30368 ;; Defined at:
 30369 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 30370 ;; Parameters:    Size  Location     Type
 30371 ;;		None
 30372 ;; Auto vars:     Size  Location     Type
 30373 ;;		None
 30374 ;; Return value:  Size  Location     Type
 30375 ;;                  1  [STACK] void 
 30376 ;; Registers used:
 30377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 30378 ;; Tracked objects:
 30379 ;;		On entry : 3F/0
 30380 ;;		On exit  : 0/0
 30381 ;;		Unchanged: 0/0
 30382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30387 ;;Total ram usage:        0 bytes
 30388 ;; Hardware stack levels used:    1
 30389 ;; Hardware stack levels required when called:   13
 30390 ;; This function calls:
 30391 ;;		Absolute function
 30392 ;;		_TMR3_DefaultInterruptHandler
 30393 ;;		_calc_bsoc
 30394 ;; This function is called by:
 30395 ;;		_TMR3_ISR
 30396 ;; This function uses a reentrant model
 30397 ;;
 30398                           
 30399                           	psect	text143
 30400  01A8A8                     __ptext143:
 30401                           	opt callstack 0
 30402  01A8A8                     _TMR3_CallBack:
 30403                           	opt callstack 3
 30404                           
 30405                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 30406                           
 30407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30408                           ;incstack = 0
 30409  01A8A8  0100               	movlb	0	; () banked
 30410  01A8AA  519C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 30411  01A8AC  119D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 30412  01A8AE  119E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 30413  01A8B0  B4D8               	btfsc	status,2,c
 30414  01A8B2  0012               	return	
 30415                           
 30416                           ; BSR set to: 0
 30417                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 30418  01A8B4  D801               	call	u1162_28
 30419  01A8B6  0012               	return	
 30420  01A8B8                     u1162_28:
 30421  01A8B8  0005               	push	
 30422  01A8BA  6EFA               	movwf	pclath,c
 30423  01A8BC  519C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 30424  01A8BE  6EFD               	movwf	tosl,c
 30425  01A8C0  519D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 30426  01A8C2  6EFE               	movwf	tosh,c
 30427  01A8C4  519E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 30428  01A8C6  6EFF               	movwf	tosu,c
 30429  01A8C8  50FA               	movf	pclath,w,c
 30430  01A8CA  0012               	return		;indir
 30431  01A8CC                     __end_of_TMR3_CallBack:
 30432                           	opt callstack 0
 30433                           
 30434 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 30435 ;; Defined at:
 30436 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 30437 ;; Parameters:    Size  Location     Type
 30438 ;;		None
 30439 ;; Auto vars:     Size  Location     Type
 30440 ;;		None
 30441 ;; Return value:  Size  Location     Type
 30442 ;;                  1  [STACK] void 
 30443 ;; Registers used:
 30444 ;;		None
 30445 ;; Tracked objects:
 30446 ;;		On entry : 3F/0
 30447 ;;		On exit  : 0/0
 30448 ;;		Unchanged: 0/0
 30449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30454 ;;Total ram usage:        0 bytes
 30455 ;; Hardware stack levels used:    1
 30456 ;; Hardware stack levels required when called:    3
 30457 ;; This function calls:
 30458 ;;		Nothing
 30459 ;; This function is called by:
 30460 ;;		_TMR3_Initialize
 30461 ;;		_TMR3_CallBack
 30462 ;; This function uses a reentrant model
 30463 ;;
 30464                           
 30465                           	psect	text144
 30466  01ABE0                     __ptext144:
 30467                           	opt callstack 0
 30468  01ABE0                     _TMR3_DefaultInterruptHandler:
 30469                           	opt callstack 12
 30470                           
 30471                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30472                           
 30473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30474                           ;incstack = 0
 30475  01ABE0  0012               	return		;funcret
 30476  01ABE2                     __end_of_TMR3_DefaultInterruptHandler:
 30477                           	opt callstack 0
 30478                           
 30479 ;; *************** function _calc_bsoc *****************
 30480 ;; Defined at:
 30481 ;;		line 39 in file "bsoc.c"
 30482 ;; Parameters:    Size  Location     Type
 30483 ;;		None
 30484 ;; Auto vars:     Size  Location     Type
 30485 ;;  log_ptr         2  [STACK] PTR unsigned char 
 30486 ;;		 -> port_data(512), 
 30487 ;; Return value:  Size  Location     Type
 30488 ;;                  1  [STACK] void 
 30489 ;; Registers used:
 30490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 30491 ;; Tracked objects:
 30492 ;;		On entry : 3F/0
 30493 ;;		On exit  : 3F/1
 30494 ;;		Unchanged: 0/0
 30495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30500 ;;Total ram usage:        0 bytes
 30501 ;; Hardware stack levels used:    1
 30502 ;; Hardware stack levels required when called:   12
 30503 ;; This function calls:
 30504 ;;		_StartTimer
 30505 ;;		___fladd
 30506 ;;		___fldiv
 30507 ;;		___flge
 30508 ;;		___flmul
 30509 ;;		___flneg
 30510 ;;		___fltol
 30511 ;;		_port_data_dma_ptr
 30512 ;;		_send_port_data_dma
 30513 ;;		_sprintf
 30514 ;;		_strlen
 30515 ;; This function is called by:
 30516 ;;		_init_bsoc
 30517 ;;		_TMR3_CallBack
 30518 ;; This function uses a reentrant model
 30519 ;;
 30520                           
 30521                           	psect	text145
 30522  013B70                     __ptext145:
 30523                           	opt callstack 0
 30524  013B70                     _calc_bsoc:
 30525                           	opt callstack 0
 30526                           
 30527                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30528  013B70  52E6               	movf	postinc1,f,c
 30529  013B72  52E6               	movf	postinc1,f,c
 30530                           
 30531                           ;incstack = 0
 30532                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 30533  013B74  82BE               	bsf	190,1,c	;volatile
 30534                           
 30535                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 30536  013B76  0E00               	movlw	0
 30537  013B78  6EE6               	movwf	postinc1,c
 30538  013B7A  0E00               	movlw	0
 30539  013B7C  6EE6               	movwf	postinc1,c
 30540  013B7E  0E61               	movlw	97
 30541  013B80  6EE6               	movwf	postinc1,c
 30542  013B82  0E45               	movlw	69
 30543  013B84  6EE6               	movwf	postinc1,c
 30544  013B86  0060  F513  FFE6   	movff	_C+68,postinc1
 30545  013B8C  0060  F517  FFE6   	movff	_C+69,postinc1
 30546  013B92  0060  F51B  FFE6   	movff	_C+70,postinc1
 30547  013B98  0060  F51F  FFE6   	movff	_C+71,postinc1
 30548  013B9E  ECFB  F0A0         	call	___fldiv	;wreg free
 30549  013BA2  0060  F007  FFE6   	movff	btemp,postinc1
 30550  013BA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30551  013BAE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30552  013BB4  0060  F013  FFE6   	movff	btemp+3,postinc1
 30553  013BBA  0060  F633  FFE6   	movff	_C+140,postinc1
 30554  013BC0  0060  F637  FFE6   	movff	_C+141,postinc1
 30555  013BC6  0060  F63B  FFE6   	movff	_C+142,postinc1
 30556  013BCC  0060  F63F  FFE6   	movff	_C+143,postinc1
 30557  013BD2  ECDA  F099         	call	___fladd	;wreg free
 30558  013BD6  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 30559  013BDC  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 30560  013BE2  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 30561  013BE8  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 30562                           
 30563                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 30564  013BEE  0060  F633  FFE6   	movff	_C+140,postinc1
 30565  013BF4  0060  F637  FFE6   	movff	_C+141,postinc1
 30566  013BFA  0060  F63B  FFE6   	movff	_C+142,postinc1
 30567  013C00  0060  F63F  FFE6   	movff	_C+143,postinc1
 30568  013C06  0060  F623  FFE6   	movff	_C+136,postinc1
 30569  013C0C  0060  F627  FFE6   	movff	_C+137,postinc1
 30570  013C12  0060  F62B  FFE6   	movff	_C+138,postinc1
 30571  013C18  0060  F62F  FFE6   	movff	_C+139,postinc1
 30572  013C1E  EC70  F0BE         	call	___flge	;wreg free
 30573  013C22  B001               	btfsc	btemp& (0+255),0,c
 30574  013C24  D008               	goto	l11894
 30575                           
 30576                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 30577  013C26  C188  F18C         	movff	_C+136,_C+140	;volatile
 30578  013C2A  C189  F18D         	movff	_C+137,_C+141	;volatile
 30579  013C2E  C18A  F18E         	movff	_C+138,_C+142	;volatile
 30580  013C32  C18B  F18F         	movff	_C+139,_C+143	;volatile
 30581  013C36                     l11894:
 30582                           
 30583                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 30584  013C36  0ECD               	movlw	205
 30585  013C38  6EE6               	movwf	postinc1,c
 30586  013C3A  0ECC               	movlw	204
 30587  013C3C  6EE6               	movwf	postinc1,c
 30588  013C3E  0ECC               	movlw	204
 30589  013C40  6EE6               	movwf	postinc1,c
 30590  013C42  0E3D               	movlw	61
 30591  013C44  6EE6               	movwf	postinc1,c
 30592  013C46  0060  F633  FFE6   	movff	_C+140,postinc1
 30593  013C4C  0060  F637  FFE6   	movff	_C+141,postinc1
 30594  013C52  0060  F63B  FFE6   	movff	_C+142,postinc1
 30595  013C58  0060  F63F  FFE6   	movff	_C+143,postinc1
 30596  013C5E  EC70  F0BE         	call	___flge	;wreg free
 30597  013C62  B001               	btfsc	btemp& (0+255),0,c
 30598  013C64  D009               	goto	l11898
 30599                           
 30600                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 30601  013C66  0ECD               	movlw	205
 30602  013C68  0101               	movlb	1	; () banked
 30603  013C6A  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 30604  013C6C  0ECC               	movlw	204
 30605  013C6E  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 30606  013C70  0ECC               	movlw	204
 30607  013C72  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 30608  013C74  0E3D               	movlw	61
 30609  013C76  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 30610  013C78                     l11898:
 30611                           
 30612                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 30613  013C78  0E00               	movlw	0
 30614  013C7A  6EE6               	movwf	postinc1,c
 30615  013C7C  0E00               	movlw	0
 30616  013C7E  6EE6               	movwf	postinc1,c
 30617  013C80  0E61               	movlw	97
 30618  013C82  6EE6               	movwf	postinc1,c
 30619  013C84  0E45               	movlw	69
 30620  013C86  6EE6               	movwf	postinc1,c
 30621  013C88  0060  F523  FFE6   	movff	_C+72,postinc1
 30622  013C8E  0060  F527  FFE6   	movff	_C+73,postinc1
 30623  013C94  0060  F52B  FFE6   	movff	_C+74,postinc1
 30624  013C9A  0060  F52F  FFE6   	movff	_C+75,postinc1
 30625  013CA0  ECFB  F0A0         	call	___fldiv	;wreg free
 30626  013CA4  0060  F007  FFE6   	movff	btemp,postinc1
 30627  013CAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30628  013CB0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30629  013CB6  0060  F013  FFE6   	movff	btemp+3,postinc1
 30630  013CBC  0060  F643  FFE6   	movff	_C+144,postinc1
 30631  013CC2  0060  F647  FFE6   	movff	_C+145,postinc1
 30632  013CC8  0060  F64B  FFE6   	movff	_C+146,postinc1
 30633  013CCE  0060  F64F  FFE6   	movff	_C+147,postinc1
 30634  013CD4  ECDA  F099         	call	___fladd	;wreg free
 30635  013CD8  0060  F004  F190   	movff	btemp,_C+144	;volatile
 30636  013CDE  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 30637  013CE4  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 30638  013CEA  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 30639                           
 30640                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 30641  013CF0  0E00               	movlw	0
 30642  013CF2  6EE6               	movwf	postinc1,c
 30643  013CF4  0E00               	movlw	0
 30644  013CF6  6EE6               	movwf	postinc1,c
 30645  013CF8  0E61               	movlw	97
 30646  013CFA  6EE6               	movwf	postinc1,c
 30647  013CFC  0E45               	movlw	69
 30648  013CFE  6EE6               	movwf	postinc1,c
 30649  013D00  0060  F5E3  FFE6   	movff	_C+120,postinc1
 30650  013D06  0060  F5E7  FFE6   	movff	_C+121,postinc1
 30651  013D0C  0060  F5EB  FFE6   	movff	_C+122,postinc1
 30652  013D12  0060  F5EF  FFE6   	movff	_C+123,postinc1
 30653  013D18  ECFB  F0A0         	call	___fldiv	;wreg free
 30654  013D1C  0060  F007  FFE6   	movff	btemp,postinc1
 30655  013D22  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30656  013D28  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30657  013D2E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30658  013D34  0060  F683  FFE6   	movff	_C+160,postinc1
 30659  013D3A  0060  F687  FFE6   	movff	_C+161,postinc1
 30660  013D40  0060  F68B  FFE6   	movff	_C+162,postinc1
 30661  013D46  0060  F68F  FFE6   	movff	_C+163,postinc1
 30662  013D4C  ECDA  F099         	call	___fladd	;wreg free
 30663  013D50  0060  F004  F1A0   	movff	btemp,_C+160	;volatile
 30664  013D56  0060  F008  F1A1   	movff	btemp+1,_C+161	;volatile
 30665  013D5C  0060  F00C  F1A2   	movff	btemp+2,_C+162	;volatile
 30666  013D62  0060  F010  F1A3   	movff	btemp+3,_C+163	;volatile
 30667                           
 30668                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 30669  013D68  0E00               	movlw	0
 30670  013D6A  6EE6               	movwf	postinc1,c
 30671  013D6C  0E00               	movlw	0
 30672  013D6E  6EE6               	movwf	postinc1,c
 30673  013D70  0E61               	movlw	97
 30674  013D72  6EE6               	movwf	postinc1,c
 30675  013D74  0E45               	movlw	69
 30676  013D76  6EE6               	movwf	postinc1,c
 30677  013D78  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30678  013D7E  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30679  013D84  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30680  013D8A  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30681  013D90  ECFB  F0A0         	call	___fldiv	;wreg free
 30682  013D94  0060  F007  FFE6   	movff	btemp,postinc1
 30683  013D9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30684  013DA0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30685  013DA6  0060  F013  FFE6   	movff	btemp+3,postinc1
 30686  013DAC  0060  F693  FFE6   	movff	_C+164,postinc1
 30687  013DB2  0060  F697  FFE6   	movff	_C+165,postinc1
 30688  013DB8  0060  F69B  FFE6   	movff	_C+166,postinc1
 30689  013DBE  0060  F69F  FFE6   	movff	_C+167,postinc1
 30690  013DC4  ECDA  F099         	call	___fladd	;wreg free
 30691  013DC8  0060  F004  F1A4   	movff	btemp,_C+164	;volatile
 30692  013DCE  0060  F008  F1A5   	movff	btemp+1,_C+165	;volatile
 30693  013DD4  0060  F00C  F1A6   	movff	btemp+2,_C+166	;volatile
 30694  013DDA  0060  F010  F1A7   	movff	btemp+3,_C+167	;volatile
 30695                           
 30696                           ;bsoc.c: 54:  if (C.p_bat > 0.0)
 30697  013DE0  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30698  013DE6  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30699  013DEC  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30700  013DF2  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30701  013DF8  0E00               	movlw	0
 30702  013DFA  6EE6               	movwf	postinc1,c
 30703  013DFC  0E00               	movlw	0
 30704  013DFE  6EE6               	movwf	postinc1,c
 30705  013E00  0E00               	movlw	0
 30706  013E02  6EE6               	movwf	postinc1,c
 30707  013E04  0E00               	movlw	0
 30708  013E06  6EE6               	movwf	postinc1,c
 30709  013E08  EC70  F0BE         	call	___flge	;wreg free
 30710  013E0C  B001               	btfsc	btemp& (0+255),0,c
 30711  013E0E  D03C               	goto	l11908
 30712                           
 30713                           ;bsoc.c: 55:   C.bkwi += (C.p_bat / 3600.0);
 30714  013E10  0E00               	movlw	0
 30715  013E12  6EE6               	movwf	postinc1,c
 30716  013E14  0E00               	movlw	0
 30717  013E16  6EE6               	movwf	postinc1,c
 30718  013E18  0E61               	movlw	97
 30719  013E1A  6EE6               	movwf	postinc1,c
 30720  013E1C  0E45               	movlw	69
 30721  013E1E  6EE6               	movwf	postinc1,c
 30722  013E20  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30723  013E26  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30724  013E2C  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30725  013E32  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30726  013E38  ECFB  F0A0         	call	___fldiv	;wreg free
 30727  013E3C  0060  F007  FFE6   	movff	btemp,postinc1
 30728  013E42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30729  013E48  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30730  013E4E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30731  013E54  0060  F663  FFE6   	movff	_C+152,postinc1
 30732  013E5A  0060  F667  FFE6   	movff	_C+153,postinc1
 30733  013E60  0060  F66B  FFE6   	movff	_C+154,postinc1
 30734  013E66  0060  F66F  FFE6   	movff	_C+155,postinc1
 30735  013E6C  ECDA  F099         	call	___fladd	;wreg free
 30736  013E70  0060  F004  F198   	movff	btemp,_C+152	;volatile
 30737  013E76  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 30738  013E7C  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 30739  013E82  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 30740  013E88                     l11908:
 30741                           
 30742                           ;bsoc.c: 56:  if (C.p_bat < 0.0)
 30743  013E88  0101               	movlb	1	; () banked
 30744  013E8A  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 30745  013E8C  D03C               	goto	l11912
 30746                           
 30747                           ; BSR set to: 1
 30748                           ;bsoc.c: 57:   C.bkwo += (C.p_bat / 3600.0);
 30749  013E8E  0E00               	movlw	0
 30750  013E90  6EE6               	movwf	postinc1,c
 30751  013E92  0E00               	movlw	0
 30752  013E94  6EE6               	movwf	postinc1,c
 30753  013E96  0E61               	movlw	97
 30754  013E98  6EE6               	movwf	postinc1,c
 30755  013E9A  0E45               	movlw	69
 30756  013E9C  6EE6               	movwf	postinc1,c
 30757  013E9E  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30758  013EA4  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30759  013EAA  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30760  013EB0  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30761  013EB6  ECFB  F0A0         	call	___fldiv	;wreg free
 30762  013EBA  0060  F007  FFE6   	movff	btemp,postinc1
 30763  013EC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30764  013EC6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30765  013ECC  0060  F013  FFE6   	movff	btemp+3,postinc1
 30766  013ED2  0060  F673  FFE6   	movff	_C+156,postinc1
 30767  013ED8  0060  F677  FFE6   	movff	_C+157,postinc1
 30768  013EDE  0060  F67B  FFE6   	movff	_C+158,postinc1
 30769  013EE4  0060  F67F  FFE6   	movff	_C+159,postinc1
 30770  013EEA  ECDA  F099         	call	___fladd	;wreg free
 30771  013EEE  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 30772  013EF4  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 30773  013EFA  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 30774  013F00  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 30775  013F06                     l11912:
 30776                           
 30777                           ;bsoc.c: 59:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 30778  013F06  0E00               	movlw	0
 30779  013F08  6EE6               	movwf	postinc1,c
 30780  013F0A  0E00               	movlw	0
 30781  013F0C  6EE6               	movwf	postinc1,c
 30782  013F0E  0EC8               	movlw	200
 30783  013F10  6EE6               	movwf	postinc1,c
 30784  013F12  0E42               	movlw	66
 30785  013F14  6EE6               	movwf	postinc1,c
 30786  013F16  0060  F623  FFE6   	movff	_C+136,postinc1
 30787  013F1C  0060  F627  FFE6   	movff	_C+137,postinc1
 30788  013F22  0060  F62B  FFE6   	movff	_C+138,postinc1
 30789  013F28  0060  F62F  FFE6   	movff	_C+139,postinc1
 30790  013F2E  0060  F633  FFE6   	movff	_C+140,postinc1
 30791  013F34  0060  F637  FFE6   	movff	_C+141,postinc1
 30792  013F3A  0060  F63B  FFE6   	movff	_C+142,postinc1
 30793  013F40  0060  F63F  FFE6   	movff	_C+143,postinc1
 30794  013F46  ECFB  F0A0         	call	___fldiv	;wreg free
 30795  013F4A  0060  F007  FFE6   	movff	btemp,postinc1
 30796  013F50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30797  013F56  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30798  013F5C  0060  F013  FFE6   	movff	btemp+3,postinc1
 30799  013F62  ECC5  F095         	call	___flmul	;wreg free
 30800  013F66  0060  F007  FFE6   	movff	btemp,postinc1
 30801  013F6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30802  013F72  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30803  013F78  0060  F013  FFE6   	movff	btemp+3,postinc1
 30804  013F7E  ECFF  F0BC         	call	___fltol	;wreg free
 30805  013F82  0060  F004  F00B   	movff	btemp,btemp+10
 30806  013F88  0060  F008  F00C   	movff	btemp+1,btemp+11
 30807  013F8E  0E01               	movlw	1
 30808  013F90  240B               	addwf	(btemp+10)^0,w,c
 30809  013F92  0101               	movlb	1	; () banked
 30810  013F94  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 30811  013F96  0E00               	movlw	0
 30812  013F98  200C               	addwfc	(btemp+11)^0,w,c
 30813  013F9A  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 30814                           
 30815                           ; BSR set to: 1
 30816                           ;bsoc.c: 60:  if (C.soc > 100)
 30817  013F9C  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
 30818  013F9E  E104               	bnz	u1158_20
 30819  013FA0  0E65               	movlw	101
 30820  013FA2  5DAA               	subwf	(_C+170)& (0+255),w,b	;volatile
 30821  013FA4  A0D8               	btfss	status,0,c
 30822  013FA6  D004               	goto	l11918
 30823  013FA8                     u1158_20:
 30824                           
 30825                           ; BSR set to: 1
 30826                           ;bsoc.c: 61:   C.soc = 100;
 30827  013FA8  0E00               	movlw	0
 30828  013FAA  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 30829  013FAC  0E64               	movlw	100
 30830  013FAE  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 30831  013FB0                     l11918:
 30832                           
 30833                           ; BSR set to: 1
 30834                           ;bsoc.c: 63:  if (C.c_bat < 0.0) {
 30835  013FB0  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 30836  013FB2  D043               	goto	l11922
 30837                           
 30838                           ; BSR set to: 1
 30839                           ;bsoc.c: 64:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 30840  013FB4  0060  F513  FFE6   	movff	_C+68,postinc1
 30841  013FBA  0060  F517  FFE6   	movff	_C+69,postinc1
 30842  013FC0  0060  F51B  FFE6   	movff	_C+70,postinc1
 30843  013FC6  0060  F51F  FFE6   	movff	_C+71,postinc1
 30844  013FCC  0060  F633  FFE6   	movff	_C+140,postinc1
 30845  013FD2  0060  F637  FFE6   	movff	_C+141,postinc1
 30846  013FD8  0060  F63B  FFE6   	movff	_C+142,postinc1
 30847  013FDE  0060  F63F  FFE6   	movff	_C+143,postinc1
 30848  013FE4  ECFB  F0A0         	call	___fldiv	;wreg free
 30849  013FE8  0060  F007  FFE6   	movff	btemp,postinc1
 30850  013FEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30851  013FF4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30852  013FFA  0060  F013  FFE6   	movff	btemp+3,postinc1
 30853  014000  EC78  F0CF         	call	___flneg	;wreg free
 30854  014004  0060  F007  FFE6   	movff	btemp,postinc1
 30855  01400A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30856  014010  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30857  014016  0060  F013  FFE6   	movff	btemp+3,postinc1
 30858  01401C  ECFF  F0BC         	call	___fltol	;wreg free
 30859  014020  0060  F004  F00B   	movff	btemp,btemp+10
 30860  014026  0060  F008  F00C   	movff	btemp+1,btemp+11
 30861  01402C  0060  F02C  F1A8   	movff	btemp+10,_C+168	;volatile
 30862  014032  0060  F030  F1A9   	movff	btemp+11,_C+169	;volatile
 30863                           
 30864                           ;bsoc.c: 65:  } else {
 30865  014038  D004               	goto	l11924
 30866  01403A                     l11922:
 30867                           
 30868                           ; BSR set to: 1
 30869                           ;bsoc.c: 66:   C.runtime = 120;
 30870  01403A  0E00               	movlw	0
 30871  01403C  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 30872  01403E  0E78               	movlw	120
 30873  014040  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 30874  014042                     l11924:
 30875                           
 30876                           ;bsoc.c: 68:  if (C.runtime > 120)
 30877  014042  0101               	movlb	1	; () banked
 30878  014044  51A9               	movf	(_C+169)& (0+255),w,b	;volatile
 30879  014046  E104               	bnz	u1160_20
 30880  014048  0E79               	movlw	121
 30881  01404A  5DA8               	subwf	(_C+168)& (0+255),w,b	;volatile
 30882  01404C  A0D8               	btfss	status,0,c
 30883  01404E  D004               	goto	l11928
 30884  014050                     u1160_20:
 30885                           
 30886                           ; BSR set to: 1
 30887                           ;bsoc.c: 69:   C.runtime = 120;
 30888  014050  0E00               	movlw	0
 30889  014052  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 30890  014054  0E78               	movlw	120
 30891  014056  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 30892  014058                     l11928:
 30893                           
 30894                           ; BSR set to: 1
 30895                           ;bsoc.c: 71:  V.lowint_count++;
 30896  014058  0E01               	movlw	1
 30897  01405A  0102               	movlb	2	; () banked
 30898  01405C  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 30899  01405E  0E00               	movlw	0
 30900  014060  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 30901  014062  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 30902  014064  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 30903                           
 30904                           ; BSR set to: 2
 30905                           ;bsoc.c: 73:  log_ptr = port_data_dma_ptr();
 30906  014066  ECB4  F0D5         	call	_port_data_dma_ptr	;wreg free
 30907                           
 30908                           ;stkvar	_log_ptr @ sp[(-2)+0]
 30909  01406A  0EFF               	movlw	-1
 30910  01406C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30911  014072  0EFE               	movlw	-2
 30912  014074  0060  F007  FFE3   	movff	btemp,plusw1
 30913                           
 30914                           ;bsoc.c: 74:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d\r\n",
 30915  01407A  0060  F6A3  FFE6   	movff	_C+168,postinc1
 30916  014080  0060  F6A7  FFE6   	movff	_C+169,postinc1
 30917  014086  0060  F6AB  FFE6   	movff	_C+170,postinc1
 30918  01408C  0060  F6AF  FFE6   	movff	_C+171,postinc1
 30919  014092  0060  F643  FFE6   	movff	_C+144,postinc1
 30920  014098  0060  F647  FFE6   	movff	_C+145,postinc1
 30921  01409E  0060  F64B  FFE6   	movff	_C+146,postinc1
 30922  0140A4  0060  F64F  FFE6   	movff	_C+147,postinc1
 30923  0140AA  0060  F633  FFE6   	movff	_C+140,postinc1
 30924  0140B0  0060  F637  FFE6   	movff	_C+141,postinc1
 30925  0140B6  0060  F63B  FFE6   	movff	_C+142,postinc1
 30926  0140BC  0060  F63F  FFE6   	movff	_C+143,postinc1
 30927  0140C2  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30928  0140C8  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30929  0140CE  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30930  0140D4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30931  0140DA  0060  F5C3  FFE6   	movff	_C+112,postinc1
 30932  0140E0  0060  F5C7  FFE6   	movff	_C+113,postinc1
 30933  0140E6  0060  F5CB  FFE6   	movff	_C+114,postinc1
 30934  0140EC  0060  F5CF  FFE6   	movff	_C+115,postinc1
 30935  0140F2  0060  F5E3  FFE6   	movff	_C+120,postinc1
 30936  0140F8  0060  F5E7  FFE6   	movff	_C+121,postinc1
 30937  0140FE  0060  F5EB  FFE6   	movff	_C+122,postinc1
 30938  014104  0060  F5EF  FFE6   	movff	_C+123,postinc1
 30939  01410A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30940  014110  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30941  014116  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30942  01411C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30943  014122  0060  F593  FFE6   	movff	_C+100,postinc1
 30944  014128  0060  F597  FFE6   	movff	_C+101,postinc1
 30945  01412E  0060  F59B  FFE6   	movff	_C+102,postinc1
 30946  014134  0060  F59F  FFE6   	movff	_C+103,postinc1
 30947  01413A  0060  F533  FFE6   	movff	_C+76,postinc1
 30948  014140  0060  F537  FFE6   	movff	_C+77,postinc1
 30949  014146  0060  F53B  FFE6   	movff	_C+78,postinc1
 30950  01414C  0060  F53F  FFE6   	movff	_C+79,postinc1
 30951  014152  0060  F543  FFE6   	movff	_C+80,postinc1
 30952  014158  0060  F547  FFE6   	movff	_C+81,postinc1
 30953  01415E  0060  F54B  FFE6   	movff	_C+82,postinc1
 30954  014164  0060  F54F  FFE6   	movff	_C+83,postinc1
 30955  01416A  0060  F553  FFE6   	movff	_C+84,postinc1
 30956  014170  0060  F557  FFE6   	movff	_C+85,postinc1
 30957  014176  0060  F55B  FFE6   	movff	_C+86,postinc1
 30958  01417C  0060  F55F  FFE6   	movff	_C+87,postinc1
 30959  014182  0060  FA07  FFE6   	movff	_V+129,postinc1
 30960  014188  0060  FA0B  FFE6   	movff	_V+130,postinc1
 30961  01418E  0060  FA0F  FFE6   	movff	_V+131,postinc1
 30962  014194  0060  FA13  FFE6   	movff	_V+132,postinc1
 30963  01419A  0ECD               	movlw	low STR_47
 30964  01419C  6EE6               	movwf	postinc1,c
 30965  01419E  0EFD               	movlw	high STR_47
 30966  0141A0  6EE6               	movwf	postinc1,c
 30967                           
 30968                           ;stkvar	_log_ptr @ sp[(-52)+0]
 30969  0141A2  0ECC               	movlw	-52
 30970  0141A4  006F FF8F FFE6     	movff	plusw1,postinc1
 30971  0141AA  006F FF8F FFE6     	movff	plusw1,postinc1
 30972  0141B0  0E34               	movlw	52
 30973  0141B2  6EE6               	movwf	postinc1,c
 30974  0141B4  EC06  F0C5         	call	_sprintf	;wreg free
 30975                           
 30976                           ; BSR set to: 0
 30977                           ;bsoc.c: 79:  StartTimer(TMR_DISPLAY, 125);
 30978  0141B8  0E7D               	movlw	125
 30979  0141BA  6EE6               	movwf	postinc1,c
 30980  0141BC  0E00               	movlw	0
 30981  0141BE  6EE6               	movwf	postinc1,c
 30982  0141C0  0E0A               	movlw	10
 30983  0141C2  6EE6               	movwf	postinc1,c
 30984  0141C4  EC8E  F0D0         	call	_StartTimer	;wreg free
 30985                           
 30986                           ;bsoc.c: 80:  send_port_data_dma(strlen((char*) log_ptr));
 30987                           ;stkvar	_log_ptr @ sp[(-2)+0]
 30988  0141C8  0EFE               	movlw	-2
 30989  0141CA  006F FF8F FFE6     	movff	plusw1,postinc1
 30990  0141D0  006F FF8F FFE6     	movff	plusw1,postinc1
 30991  0141D6  ECCC  F0C9         	call	_strlen	;wreg free
 30992  0141DA  0060  F007  FFE6   	movff	btemp,postinc1
 30993  0141E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30994  0141E6  EC03  F0CF         	call	_send_port_data_dma	;wreg free
 30995                           
 30996                           ; BSR set to: 59
 30997                           ;bsoc.c: 81:  C.update = 0;
 30998  0141EA  0101               	movlb	1	; () banked
 30999  0141EC  6BAC               	clrf	(_C+172)& (0+255),b	;volatile
 31000                           
 31001                           ; BSR set to: 1
 31002  0141EE  92BE               	bcf	190,1,c	;volatile
 31003                           
 31004                           ; BSR set to: 1
 31005                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 31006  0141F0  52E5               	movf	postdec1,f,c
 31007  0141F2  52E5               	movf	postdec1,f,c
 31008  0141F4  0012               	return		;funcret
 31009  0141F6                     __end_of_calc_bsoc:
 31010                           	opt callstack 0
 31011                           
 31012 ;; *************** function _send_port_data_dma *****************
 31013 ;; Defined at:
 31014 ;;		line 258 in file "eadog.c"
 31015 ;; Parameters:    Size  Location     Type
 31016 ;;  dsize           2  [STACK] unsigned short 
 31017 ;; Auto vars:     Size  Location     Type
 31018 ;;		None
 31019 ;; Return value:  Size  Location     Type
 31020 ;;                  1  [STACK] void 
 31021 ;; Registers used:
 31022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 31023 ;; Tracked objects:
 31024 ;;		On entry : 0/0
 31025 ;;		On exit  : 3F/3B
 31026 ;;		Unchanged: 0/0
 31027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31032 ;;Total ram usage:        0 bytes
 31033 ;; Hardware stack levels used:    1
 31034 ;; Hardware stack levels required when called:    3
 31035 ;; This function calls:
 31036 ;;		Nothing
 31037 ;; This function is called by:
 31038 ;;		_calc_bsoc
 31039 ;; This function uses a reentrant model
 31040 ;;
 31041                           
 31042                           	psect	text146
 31043  019E06                     __ptext146:
 31044                           	opt callstack 0
 31045  019E06                     _send_port_data_dma:
 31046                           	opt callstack 11
 31047                           
 31048                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 31049                           ;stkvar	_dsize @ sp[(0)+-2]
 31050                           
 31051                           ; BSR set to: 1
 31052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31053                           ;incstack = 0
 31054  019E06  0EFE               	movlw	-2
 31055  019E08  04E3               	decf	plusw1,w,c
 31056  019E0A  0EFF               	movlw	-1
 31057  019E0C  006F FF8C  F001    	movff	plusw1,btemp
 31058  019E12  0E02               	movlw	2
 31059  019E14  5A01               	subwfb	btemp^0,f,c
 31060  019E16  A0D8               	btfss	status,0,c
 31061  019E18  D00C               	goto	l9230
 31062                           
 31063                           ;eadog.c: 261:   dsize = 512;
 31064  019E1A  0E00               	movlw	0
 31065  019E1C  6E0B               	movwf	(btemp+10)^0,c
 31066  019E1E  0E02               	movlw	2
 31067  019E20  6E0C               	movwf	(btemp+11)^0,c
 31068                           
 31069                           ;stkvar	_dsize @ sp[(0)+-2]
 31070  019E22  0EFE               	movlw	-2
 31071  019E24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31072  019E2A  0EFF               	movlw	-1
 31073  019E2C  0060  F033  FFE3   	movff	btemp+11,plusw1
 31074  019E32                     l9230:
 31075                           
 31076                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 31077  019E32  013B               	movlb	59	; () banked
 31078  019E34  9FDC               	bcf	220,7,b	;volatile
 31079                           
 31080                           ; BSR set to: 59
 31081                           ;eadog.c: 264:  DMA2SSZ = dsize;
 31082                           ;stkvar	_dsize @ sp[(0)+-2]
 31083  019E36  0EFE               	movlw	-2
 31084  019E38  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 31085  019E3E  0EFF               	movlw	-1
 31086  019E40  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 31087                           
 31088                           ; BSR set to: 59
 31089                           ;eadog.c: 265:  DMA2DSZ = 1;
 31090  019E46  0E00               	movlw	0
 31091  019E48  6FCF               	movwf	207,b	;volatile
 31092  019E4A  0E01               	movlw	1
 31093  019E4C  6FCE               	movwf	206,b	;volatile
 31094                           
 31095                           ; BSR set to: 59
 31096                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 31097  019E4E  8FDC               	bsf	220,7,b	;volatile
 31098                           
 31099                           ; BSR set to: 59
 31100                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 31101  019E50  8DDC               	bsf	220,6,b	;volatile
 31102                           
 31103                           ; BSR set to: 59
 31104                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 31105  019E52  52E5               	movf	postdec1,f,c
 31106  019E54  52E5               	movf	postdec1,f,c
 31107  019E56  0012               	return		;funcret
 31108  019E58                     __end_of_send_port_data_dma:
 31109                           	opt callstack 0
 31110                           
 31111 ;; *************** function _port_data_dma_ptr *****************
 31112 ;; Defined at:
 31113 ;;		line 273 in file "eadog.c"
 31114 ;; Parameters:    Size  Location     Type
 31115 ;;		None
 31116 ;; Auto vars:     Size  Location     Type
 31117 ;;		None
 31118 ;; Return value:  Size  Location     Type
 31119 ;;                  2  [STACK] PTR unsigned char 
 31120 ;; Registers used:
 31121 ;;		wreg, status,2, status,0, btemp, btemp+1
 31122 ;; Tracked objects:
 31123 ;;		On entry : 3F/2
 31124 ;;		On exit  : 0/0
 31125 ;;		Unchanged: 0/0
 31126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31131 ;;Total ram usage:        0 bytes
 31132 ;; Hardware stack levels used:    1
 31133 ;; Hardware stack levels required when called:    3
 31134 ;; This function calls:
 31135 ;;		Nothing
 31136 ;; This function is called by:
 31137 ;;		_calc_bsoc
 31138 ;; This function uses a reentrant model
 31139 ;;
 31140                           
 31141                           	psect	text147
 31142  01AB68                     __ptext147:
 31143                           	opt callstack 0
 31144  01AB68                     _port_data_dma_ptr:
 31145                           	opt callstack 11
 31146                           
 31147                           ;eadog.c: 275:  return port_data;
 31148                           
 31149                           ; BSR set to: 59
 31150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31151                           ;incstack = 0
 31152  01AB68  0EFF               	movlw	low _port_data
 31153  01AB6A  6E01               	movwf	btemp^0,c
 31154  01AB6C  0E05               	movlw	high _port_data
 31155  01AB6E  6E02               	movwf	(btemp+1)^0,c
 31156                           
 31157                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31158  01AB70  0012               	return		;funcret
 31159  01AB72                     __end_of_port_data_dma_ptr:
 31160                           	opt callstack 0
 31161                           
 31162 ;; *************** function _INT0_ISR *****************
 31163 ;; Defined at:
 31164 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 31165 ;; Parameters:    Size  Location     Type
 31166 ;;		None
 31167 ;; Auto vars:     Size  Location     Type
 31168 ;;		None
 31169 ;; Return value:  Size  Location     Type
 31170 ;;                  1    wreg      void 
 31171 ;; Registers used:
 31172 ;;		wreg, status,2, status,0, pclath, tosl
 31173 ;; Tracked objects:
 31174 ;;		On entry : 0/0
 31175 ;;		On exit  : 0/0
 31176 ;;		Unchanged: 0/0
 31177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31182 ;;Total ram usage:        0 bytes
 31183 ;; Hardware stack levels used:    1
 31184 ;; Hardware stack levels required when called:    2
 31185 ;; This function calls:
 31186 ;;		_INT0_CallBack
 31187 ;; This function is called by:
 31188 ;;		Interrupt level 2
 31189 ;; This function uses a non-reentrant model
 31190 ;;
 31191                           
 31192                           	psect	text148
 31193  01AB40                     __ptext148:
 31194                           	opt callstack 0
 31195  01AB40                     _INT0_ISR:
 31196                           	opt callstack 3
 31197                           
 31198                           ;incstack = 0
 31199  01AB40  EE14  F0C2         	lfsr	1,___inthi_sp
 31200                           
 31201                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 31202  01AB44  0139               	movlb	57	; () banked
 31203  01AB46  91A1               	bcf	161,0,b	;volatile
 31204                           
 31205                           ; BSR set to: 57
 31206                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 31207  01AB48  EC66  F0D4         	call	_INT0_CallBack	;wreg free
 31208  01AB4C  0011               	retfie		f
 31209  01AB4E                     __end_of_INT0_ISR:
 31210                           	opt callstack 0
 31211                           
 31212 ;; *************** function _INT0_CallBack *****************
 31213 ;; Defined at:
 31214 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 31215 ;; Parameters:    Size  Location     Type
 31216 ;;		None
 31217 ;; Auto vars:     Size  Location     Type
 31218 ;;		None
 31219 ;; Return value:  Size  Location     Type
 31220 ;;                  1  [STACK] void 
 31221 ;; Registers used:
 31222 ;;		wreg, status,2, status,0, pclath, tosl
 31223 ;; Tracked objects:
 31224 ;;		On entry : 3F/39
 31225 ;;		On exit  : 0/0
 31226 ;;		Unchanged: 0/0
 31227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31232 ;;Total ram usage:        0 bytes
 31233 ;; Hardware stack levels used:    1
 31234 ;; Hardware stack levels required when called:    1
 31235 ;; This function calls:
 31236 ;;		Absolute function
 31237 ;;		_INT0_DefaultInterruptHandler
 31238 ;; This function is called by:
 31239 ;;		_INT0_ISR
 31240 ;; This function uses a reentrant model
 31241 ;;
 31242                           
 31243                           	psect	text149
 31244  01A8CC                     __ptext149:
 31245                           	opt callstack 0
 31246  01A8CC                     _INT0_CallBack:
 31247                           	opt callstack 3
 31248                           
 31249                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 31250                           
 31251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31252                           ;incstack = 0
 31253  01A8CC  0100               	movlb	0	; () banked
 31254  01A8CE  51B7               	movf	_INT0_InterruptHandler& (0+255),w,b
 31255  01A8D0  11B8               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 31256  01A8D2  11B9               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 31257  01A8D4  B4D8               	btfsc	status,2,c
 31258  01A8D6  0012               	return	
 31259                           
 31260                           ; BSR set to: 0
 31261                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 31262  01A8D8  D801               	call	u932_48
 31263  01A8DA  0012               	return	
 31264  01A8DC                     u932_48:
 31265  01A8DC  0005               	push	
 31266  01A8DE  6EFA               	movwf	pclath,c
 31267  01A8E0  51B7               	movf	_INT0_InterruptHandler& (0+255),w,b
 31268  01A8E2  6EFD               	movwf	tosl,c
 31269  01A8E4  51B8               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 31270  01A8E6  6EFE               	movwf	tosh,c
 31271  01A8E8  51B9               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 31272  01A8EA  6EFF               	movwf	tosu,c
 31273  01A8EC  50FA               	movf	pclath,w,c
 31274  01A8EE  0012               	return		;indir
 31275  01A8F0                     __end_of_INT0_CallBack:
 31276                           	opt callstack 0
 31277                           
 31278 ;; *************** function _INT0_DefaultInterruptHandler *****************
 31279 ;; Defined at:
 31280 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 31281 ;; Parameters:    Size  Location     Type
 31282 ;;		None
 31283 ;; Auto vars:     Size  Location     Type
 31284 ;;		None
 31285 ;; Return value:  Size  Location     Type
 31286 ;;                  1  [STACK] void 
 31287 ;; Registers used:
 31288 ;;		None
 31289 ;; Tracked objects:
 31290 ;;		On entry : 3F/0
 31291 ;;		On exit  : 0/0
 31292 ;;		Unchanged: 0/0
 31293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31298 ;;Total ram usage:        0 bytes
 31299 ;; Hardware stack levels used:    1
 31300 ;; This function calls:
 31301 ;;		Nothing
 31302 ;; This function is called by:
 31303 ;;		_EXT_INT_Initialize
 31304 ;;		_INT0_CallBack
 31305 ;; This function uses a reentrant model
 31306 ;;
 31307                           
 31308                           	psect	text150
 31309  01ABE2                     __ptext150:
 31310                           	opt callstack 0
 31311  01ABE2                     _INT0_DefaultInterruptHandler:
 31312                           	opt callstack 3
 31313                           
 31314                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31315                           
 31316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31317                           ;incstack = 0
 31318  01ABE2  0012               	return		;funcret
 31319  01ABE4                     __end_of_INT0_DefaultInterruptHandler:
 31320                           	opt callstack 0
 31321                           
 31322 ;; *************** function _Default_ISR *****************
 31323 ;; Defined at:
 31324 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 31325 ;; Parameters:    Size  Location     Type
 31326 ;;		None
 31327 ;; Auto vars:     Size  Location     Type
 31328 ;;		None
 31329 ;; Return value:  Size  Location     Type
 31330 ;;                  1    wreg      void 
 31331 ;; Registers used:
 31332 ;;		None
 31333 ;; Tracked objects:
 31334 ;;		On entry : 0/0
 31335 ;;		On exit  : 0/0
 31336 ;;		Unchanged: 0/0
 31337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31342 ;;Total ram usage:        0 bytes
 31343 ;; Hardware stack levels used:    1
 31344 ;; This function calls:
 31345 ;;		Nothing
 31346 ;; This function is called by:
 31347 ;;		Interrupt level 2
 31348 ;; This function uses a non-reentrant model
 31349 ;;
 31350                           
 31351                           	psect	text151
 31352  01ABD8                     __ptext151:
 31353                           	opt callstack 0
 31354  01ABD8                     _Default_ISR:
 31355                           	opt callstack 5
 31356                           
 31357                           ;incstack = 0
 31358  01ABD8  EE14  F0C2         	lfsr	1,___inthi_sp
 31359  01ABDC  0011               	retfie		f
 31360  01ABDE                     __end_of_Default_ISR:
 31361                           	opt callstack 0
 31362                           
 31363 ;; *************** function _ADCC_ISR *****************
 31364 ;; Defined at:
 31365 ;;		line 314 in file "mcc_generated_files/adcc.c"
 31366 ;; Parameters:    Size  Location     Type
 31367 ;;		None
 31368 ;; Auto vars:     Size  Location     Type
 31369 ;;		None
 31370 ;; Return value:  Size  Location     Type
 31371 ;;                  1    wreg      void 
 31372 ;; Registers used:
 31373 ;;		wreg, status,2, status,0, pclath, tosl
 31374 ;; Tracked objects:
 31375 ;;		On entry : 0/0
 31376 ;;		On exit  : 0/0
 31377 ;;		Unchanged: 0/0
 31378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31383 ;;Total ram usage:        0 bytes
 31384 ;; Hardware stack levels used:    1
 31385 ;; Hardware stack levels required when called:    1
 31386 ;; This function calls:
 31387 ;;		Absolute function
 31388 ;;		_ADCC_DefaultInterruptHandler
 31389 ;;		_adc_int_handler
 31390 ;; This function is called by:
 31391 ;;		Interrupt level 2
 31392 ;; This function uses a non-reentrant model
 31393 ;;
 31394                           
 31395                           	psect	text152
 31396  01A4EC                     __ptext152:
 31397                           	opt callstack 0
 31398  01A4EC                     _ADCC_ISR:
 31399                           	opt callstack 4
 31400                           
 31401                           ;incstack = 0
 31402  01A4EC  EE14  F0C2         	lfsr	1,___inthi_sp
 31403                           
 31404                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 31405  01A4F0  0139               	movlb	57	; () banked
 31406  01A4F2  95A1               	bcf	161,2,b	;volatile
 31407                           
 31408                           ; BSR set to: 57
 31409                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 31410  01A4F4  0100               	movlb	0	; () banked
 31411  01A4F6  51A8               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 31412  01A4F8  11A9               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 31413  01A4FA  11AA               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 31414  01A4FC  B4D8               	btfsc	status,2,c
 31415  01A4FE  0011               	retfie		f
 31416                           
 31417                           ; BSR set to: 0
 31418                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 31419  01A500  D801               	call	i2u971_48
 31420  01A502  0011               	retfie		f
 31421  01A504                     i2u971_48:
 31422  01A504  0005               	push	
 31423  01A506  6EFA               	movwf	pclath,c
 31424  01A508  51A8               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 31425  01A50A  6EFD               	movwf	tosl,c
 31426  01A50C  51A9               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 31427  01A50E  6EFE               	movwf	tosh,c
 31428  01A510  51AA               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 31429  01A512  6EFF               	movwf	tosu,c
 31430  01A514  50FA               	movf	pclath,w,c
 31431  01A516  0012               	return		;indir
 31432  01A518                     __end_of_ADCC_ISR:
 31433                           	opt callstack 0
 31434                           
 31435 ;; *************** function _adc_int_t_handler *****************
 31436 ;; Defined at:
 31437 ;;		line 128 in file "daq.c"
 31438 ;; Parameters:    Size  Location     Type
 31439 ;;		None
 31440 ;; Auto vars:     Size  Location     Type
 31441 ;;		None
 31442 ;; Return value:  Size  Location     Type
 31443 ;;                  1  [STACK] void 
 31444 ;; Registers used:
 31445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 31446 ;; Tracked objects:
 31447 ;;		On entry : 3F/0
 31448 ;;		On exit  : 1/0
 31449 ;;		Unchanged: 0/0
 31450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31455 ;;Total ram usage:        0 bytes
 31456 ;; Hardware stack levels used:    1
 31457 ;; Hardware stack levels required when called:    1
 31458 ;; This function calls:
 31459 ;;		_ADCC_DischargeSampleCapacitor
 31460 ;;		_ADCC_StartConversion
 31461 ;; This function is called by:
 31462 ;;		_start_adc_scan
 31463 ;;		_ADCC_ThresholdISR
 31464 ;; This function uses a reentrant model
 31465 ;;
 31466                           
 31467                           	psect	text153
 31468  0198A8                     __ptext153:
 31469                           	opt callstack 0
 31470  0198A8                     _adc_int_t_handler:
 31471                           	opt callstack 3
 31472                           
 31473                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 31474                           
 31475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31476                           ;incstack = 0
 31477  0198A8  013E               	movlb	62	; () banked
 31478  0198AA  51E6               	movf	230,w,b	;volatile
 31479  0198AC  006F FB9C  F001    	movff	16103,btemp	;volatile
 31480  0198B2  6A02               	clrf	(btemp+1)^0,c
 31481  0198B4  0060  F004  F002   	movff	btemp,btemp+1
 31482  0198BA  6A01               	clrf	btemp^0,c
 31483  0198BC  2601               	addwf	btemp^0,f,c
 31484  0198BE  0E00               	movlw	0
 31485  0198C0  2202               	addwfc	(btemp+1)^0,f,c
 31486  0198C2  0100               	movlb	0	; () banked
 31487  0198C4  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
 31488  0198C6  0D02               	mullw	2
 31489  0198C8  50F3               	movf	243,w,c
 31490  0198CA  0FC6               	addlw	low _R
 31491  0198CC  6ED9               	movwf	fsr2l,c
 31492  0198CE  6ADA               	clrf	fsr2h,c
 31493  0198D0  0060  F007  FFDE   	movff	btemp,postinc2
 31494  0198D6  0060  F00B  FFDD   	movff	btemp+1,postdec2
 31495  0198DC                     l10414:
 31496                           
 31497                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 31498  0198DC  0100               	movlb	0	; () banked
 31499  0198DE  2BEA               	incf	(_R+36)& (0+255),f,b	;volatile
 31500  0198E0  0E0D               	movlw	13
 31501  0198E2  65EA               	cpfsgt	(_R+36)& (0+255),b	;volatile
 31502  0198E4  D003               	goto	l10420
 31503                           
 31504                           ; BSR set to: 0
 31505                           ;daq.c: 136:    R.done = 1;
 31506  0198E6  0E01               	movlw	1
 31507  0198E8  6FED               	movwf	(_R+39)& (0+255),b	;volatile
 31508  0198EA  0012               	return	
 31509  0198EC                     l10420:
 31510                           
 31511                           ; BSR set to: 0
 31512                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 31513  0198EC  0060  F3A8  F00C   	movff	_R+36,btemp+11	;volatile
 31514  0198F2  EE20  F0EB         	lfsr	2,_R+37	;volatile
 31515  0198F6  006F FF78  F009    	movff	postinc2,btemp+8
 31516  0198FC  006F FF74  F00A    	movff	postdec2,btemp+9
 31517  019902  2A0C               	incf	(btemp+11)^0,f,c
 31518  019904  D003               	goto	u968_44
 31519  019906                     u968_45:
 31520  019906  90D8               	bcf	status,0,c
 31521  019908  320A               	rrcf	(btemp+9)^0,f,c
 31522  01990A  3209               	rrcf	(btemp+8)^0,f,c
 31523  01990C                     u968_44:
 31524  01990C  2E0C               	decfsz	(btemp+11)^0,f,c
 31525  01990E  D7FB               	goto	u968_45
 31526  019910  A009               	btfss	(btemp+8)^0,0,c
 31527  019912  D7E4               	goto	l10414
 31528                           
 31529                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 31530  019914  ECCB  F0D5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 31531                           
 31532                           ; BSR set to: 62
 31533                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 31534  019918  0100               	movlb	0	; () banked
 31535  01991A  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
 31536  01991C  0B0F               	andlw	15
 31537  01991E  6EE6               	movwf	postinc1,c
 31538  019920  EC70  F0D5         	call	_ADCC_StartConversion	;wreg free
 31539                           
 31540                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31541  019924  0012               	return		;funcret
 31542  019926                     __end_of_adc_int_t_handler:
 31543                           	opt callstack 0
 31544                           
 31545 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 31546 ;; Defined at:
 31547 ;;		line 339 in file "mcc_generated_files/adcc.c"
 31548 ;; Parameters:    Size  Location     Type
 31549 ;;		None
 31550 ;; Auto vars:     Size  Location     Type
 31551 ;;		None
 31552 ;; Return value:  Size  Location     Type
 31553 ;;                  1  [STACK] void 
 31554 ;; Registers used:
 31555 ;;		None
 31556 ;; Tracked objects:
 31557 ;;		On entry : 3F/0
 31558 ;;		On exit  : 0/0
 31559 ;;		Unchanged: 0/0
 31560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31565 ;;Total ram usage:        0 bytes
 31566 ;; Hardware stack levels used:    1
 31567 ;; This function calls:
 31568 ;;		Nothing
 31569 ;; This function is called by:
 31570 ;;		_ADCC_Initialize
 31571 ;;		_ADCC_ISR
 31572 ;;		_ADCC_ThresholdISR
 31573 ;; This function uses a reentrant model
 31574 ;;
 31575                           
 31576                           	psect	text154
 31577  01ABE4                     __ptext154:
 31578                           	opt callstack 0
 31579  01ABE4                     _ADCC_DefaultInterruptHandler:
 31580                           	opt callstack 4
 31581                           
 31582                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31583                           
 31584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31585                           ;incstack = 0
 31586  01ABE4  0012               	return		;funcret
 31587  01ABE6                     __end_of_ADCC_DefaultInterruptHandler:
 31588                           	opt callstack 0
 31589                           
 31590 ;; *************** function _adc_int_handler *****************
 31591 ;; Defined at:
 31592 ;;		line 118 in file "daq.c"
 31593 ;; Parameters:    Size  Location     Type
 31594 ;;		None
 31595 ;; Auto vars:     Size  Location     Type
 31596 ;;		None
 31597 ;; Return value:  Size  Location     Type
 31598 ;;                  1  [STACK] void 
 31599 ;; Registers used:
 31600 ;;		None
 31601 ;; Tracked objects:
 31602 ;;		On entry : 3F/0
 31603 ;;		On exit  : 0/0
 31604 ;;		Unchanged: 0/0
 31605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31610 ;;Total ram usage:        0 bytes
 31611 ;; Hardware stack levels used:    1
 31612 ;; This function calls:
 31613 ;;		Nothing
 31614 ;; This function is called by:
 31615 ;;		_start_adc_scan
 31616 ;;		_ADCC_ISR
 31617 ;; This function uses a reentrant model
 31618 ;;
 31619                           
 31620                           	psect	text155
 31621  01ABE6                     __ptext155:
 31622                           	opt callstack 0
 31623  01ABE6                     _adc_int_handler:
 31624                           	opt callstack 4
 31625                           
 31626                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31627                           
 31628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31629                           ;incstack = 0
 31630  01ABE6  0012               	return		;funcret
 31631  01ABE8                     __end_of_adc_int_handler:
 31632                           	opt callstack 0
 31633                           
 31634 ;; *************** function _ADCC_ThresholdISR *****************
 31635 ;; Defined at:
 31636 ;;		line 327 in file "mcc_generated_files/adcc.c"
 31637 ;; Parameters:    Size  Location     Type
 31638 ;;		None
 31639 ;; Auto vars:     Size  Location     Type
 31640 ;;		None
 31641 ;; Return value:  Size  Location     Type
 31642 ;;                  1    wreg      void 
 31643 ;; Registers used:
 31644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 31645 ;; Tracked objects:
 31646 ;;		On entry : 0/0
 31647 ;;		On exit  : 0/0
 31648 ;;		Unchanged: 0/0
 31649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31652 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31653 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31654 ;;Total ram usage:        5 bytes
 31655 ;; Hardware stack levels used:    1
 31656 ;; Hardware stack levels required when called:    2
 31657 ;; This function calls:
 31658 ;;		Absolute function
 31659 ;;		_ADCC_DefaultInterruptHandler
 31660 ;;		_adc_int_t_handler
 31661 ;; This function is called by:
 31662 ;;		Interrupt level 2
 31663 ;; This function uses a non-reentrant model
 31664 ;;
 31665                           
 31666                           	psect	text156
 31667  0199FC                     __ptext156:
 31668                           	opt callstack 0
 31669  0199FC                     _ADCC_ThresholdISR:
 31670                           	opt callstack 3
 31671                           
 31672                           ;incstack = 0
 31673  0199FC  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 31674  019A02  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 31675  019A08  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 31676  019A0E  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 31677  019A14  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 31678  019A1A  EE14  F0C2         	lfsr	1,___inthi_sp
 31679                           
 31680                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 31681  019A1E  0139               	movlb	57	; () banked
 31682  019A20  97A1               	bcf	161,3,b	;volatile
 31683                           
 31684                           ; BSR set to: 57
 31685                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 31686  019A22  0100               	movlb	0	; () banked
 31687  019A24  51A5               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31688  019A26  11A6               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31689  019A28  11A7               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31690  019A2A  B4D8               	btfsc	status,2,c
 31691  019A2C  D00C               	goto	i2u973_49
 31692                           
 31693                           ; BSR set to: 0
 31694                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 31695  019A2E  D801               	call	i2u973_48
 31696  019A30  D00A               	goto	i2u973_49
 31697  019A32                     i2u973_48:
 31698  019A32  0005               	push	
 31699  019A34  6EFA               	movwf	pclath,c
 31700  019A36  51A5               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31701  019A38  6EFD               	movwf	tosl,c
 31702  019A3A  51A6               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31703  019A3C  6EFE               	movwf	tosh,c
 31704  019A3E  51A7               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31705  019A40  6EFF               	movwf	tosu,c
 31706  019A42  50FA               	movf	pclath,w,c
 31707  019A44  0012               	return		;indir
 31708  019A46                     i2u973_49:
 31709  019A46  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 31710  019A4C  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 31711  019A52  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 31712  019A58  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 31713  019A5E  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 31714  019A64  0011               	retfie		f
 31715  019A66                     __end_of_ADCC_ThresholdISR:
 31716                           	opt callstack 0
 31717                           
 31718 ;; *************** function _UART1_rx_vect_isr *****************
 31719 ;; Defined at:
 31720 ;;		line 181 in file "mcc_generated_files/uart1.c"
 31721 ;; Parameters:    Size  Location     Type
 31722 ;;		None
 31723 ;; Auto vars:     Size  Location     Type
 31724 ;;		None
 31725 ;; Return value:  Size  Location     Type
 31726 ;;                  1    wreg      void 
 31727 ;; Registers used:
 31728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31729 ;; Tracked objects:
 31730 ;;		On entry : 0/0
 31731 ;;		On exit  : 0/0
 31732 ;;		Unchanged: 0/0
 31733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31738 ;;Total ram usage:        0 bytes
 31739 ;; Hardware stack levels used:    1
 31740 ;; Hardware stack levels required when called:    1
 31741 ;; This function calls:
 31742 ;;		Absolute function
 31743 ;;		_UART1_Receive_ISR
 31744 ;; This function is called by:
 31745 ;;		Interrupt level 2
 31746 ;; This function uses a non-reentrant model
 31747 ;;
 31748                           
 31749                           	psect	text157
 31750  01A7A0                     __ptext157:
 31751                           	opt callstack 0
 31752  01A7A0                     _UART1_rx_vect_isr:
 31753                           	opt callstack 4
 31754                           
 31755                           ;incstack = 0
 31756  01A7A0  EE14  F0C2         	lfsr	1,___inthi_sp
 31757                           
 31758                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 31759  01A7A4  0100               	movlb	0	; () banked
 31760  01A7A6  51AB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31761  01A7A8  11AC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31762  01A7AA  11AD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31763  01A7AC  B4D8               	btfsc	status,2,c
 31764  01A7AE  0011               	retfie		f
 31765                           
 31766                           ; BSR set to: 0
 31767                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 31768  01A7B0  D801               	call	i2u975_48
 31769  01A7B2  0011               	retfie		f
 31770  01A7B4                     i2u975_48:
 31771  01A7B4  0005               	push	
 31772  01A7B6  6EFA               	movwf	pclath,c
 31773  01A7B8  51AB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31774  01A7BA  6EFD               	movwf	tosl,c
 31775  01A7BC  51AC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31776  01A7BE  6EFE               	movwf	tosh,c
 31777  01A7C0  51AD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31778  01A7C2  6EFF               	movwf	tosu,c
 31779  01A7C4  50FA               	movf	pclath,w,c
 31780  01A7C6  0012               	return		;indir
 31781  01A7C8                     __end_of_UART1_rx_vect_isr:
 31782                           	opt callstack 0
 31783                           
 31784 ;; *************** function _UART1_Receive_ISR *****************
 31785 ;; Defined at:
 31786 ;;		line 192 in file "mcc_generated_files/uart1.c"
 31787 ;; Parameters:    Size  Location     Type
 31788 ;;		None
 31789 ;; Auto vars:     Size  Location     Type
 31790 ;;		None
 31791 ;; Return value:  Size  Location     Type
 31792 ;;                  1  [STACK] void 
 31793 ;; Registers used:
 31794 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31795 ;; Tracked objects:
 31796 ;;		On entry : 3F/0
 31797 ;;		On exit  : 0/0
 31798 ;;		Unchanged: 0/0
 31799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31804 ;;Total ram usage:        0 bytes
 31805 ;; Hardware stack levels used:    1
 31806 ;; This function calls:
 31807 ;;		Nothing
 31808 ;; This function is called by:
 31809 ;;		_UART1_Initialize
 31810 ;;		_UART1_rx_vect_isr
 31811 ;; This function uses a reentrant model
 31812 ;;
 31813                           
 31814                           	psect	text158
 31815  01AA08                     __ptext158:
 31816                           	opt callstack 0
 31817  01AA08                     _UART1_Receive_ISR:
 31818                           	opt callstack 4
 31819                           
 31820                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 31821                           
 31822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31823                           ;incstack = 0
 31824  01AA08  5037               	movf	_uart1RxHead^0,w,c
 31825  01AA0A  0F6C               	addlw	low _uart1RxBuffer
 31826  01AA0C  6ED9               	movwf	fsr2l,c
 31827  01AA0E  6ADA               	clrf	fsr2h,c
 31828  01AA10  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 31829  01AA16  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 31830                           
 31831                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 31832  01AA18  0E07               	movlw	7
 31833  01AA1A  6437               	cpfsgt	_uart1RxHead^0,c
 31834  01AA1C  D001               	goto	l10072
 31835                           
 31836                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 31837  01AA1E  6A37               	clrf	_uart1RxHead^0,c	;volatile
 31838  01AA20                     l10072:
 31839                           
 31840                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 31841  01AA20  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 31842                           
 31843                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31844  01AA22  0012               	return		;funcret
 31845  01AA24                     __end_of_UART1_Receive_ISR:
 31846                           	opt callstack 0
 31847                           
 31848 ;; *************** function _UART2_tx_vect_isr *****************
 31849 ;; Defined at:
 31850 ;;		line 195 in file "mcc_generated_files/uart2.c"
 31851 ;; Parameters:    Size  Location     Type
 31852 ;;		None
 31853 ;; Auto vars:     Size  Location     Type
 31854 ;;		None
 31855 ;; Return value:  Size  Location     Type
 31856 ;;                  1    wreg      void 
 31857 ;; Registers used:
 31858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31859 ;; Tracked objects:
 31860 ;;		On entry : 0/0
 31861 ;;		On exit  : 0/0
 31862 ;;		Unchanged: 0/0
 31863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31868 ;;Total ram usage:        0 bytes
 31869 ;; Hardware stack levels used:    1
 31870 ;; Hardware stack levels required when called:    1
 31871 ;; This function calls:
 31872 ;;		Absolute function
 31873 ;;		_UART2_Transmit_ISR
 31874 ;; This function is called by:
 31875 ;;		Interrupt level 2
 31876 ;; This function uses a non-reentrant model
 31877 ;;
 31878                           
 31879                           	psect	text159
 31880  01A7C8                     __ptext159:
 31881                           	opt callstack 0
 31882  01A7C8                     _UART2_tx_vect_isr:
 31883                           	opt callstack 4
 31884                           
 31885                           ;incstack = 0
 31886  01A7C8  EE14  F0C2         	lfsr	1,___inthi_sp
 31887                           
 31888                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 31889  01A7CC  0100               	movlb	0	; () banked
 31890  01A7CE  51AE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31891  01A7D0  11AF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31892  01A7D2  11B0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31893  01A7D4  B4D8               	btfsc	status,2,c
 31894  01A7D6  0011               	retfie		f
 31895                           
 31896                           ; BSR set to: 0
 31897                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 31898  01A7D8  D801               	call	i2u977_48
 31899  01A7DA  0011               	retfie		f
 31900  01A7DC                     i2u977_48:
 31901  01A7DC  0005               	push	
 31902  01A7DE  6EFA               	movwf	pclath,c
 31903  01A7E0  51AE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31904  01A7E2  6EFD               	movwf	tosl,c
 31905  01A7E4  51AF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31906  01A7E6  6EFE               	movwf	tosh,c
 31907  01A7E8  51B0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31908  01A7EA  6EFF               	movwf	tosu,c
 31909  01A7EC  50FA               	movf	pclath,w,c
 31910  01A7EE  0012               	return		;indir
 31911  01A7F0                     __end_of_UART2_tx_vect_isr:
 31912                           	opt callstack 0
 31913                           
 31914 ;; *************** function _UART2_Transmit_ISR *****************
 31915 ;; Defined at:
 31916 ;;		line 213 in file "mcc_generated_files/uart2.c"
 31917 ;; Parameters:    Size  Location     Type
 31918 ;;		None
 31919 ;; Auto vars:     Size  Location     Type
 31920 ;;		None
 31921 ;; Return value:  Size  Location     Type
 31922 ;;                  1  [STACK] void 
 31923 ;; Registers used:
 31924 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31925 ;; Tracked objects:
 31926 ;;		On entry : 3F/0
 31927 ;;		On exit  : 3B/39
 31928 ;;		Unchanged: 0/0
 31929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31934 ;;Total ram usage:        0 bytes
 31935 ;; Hardware stack levels used:    1
 31936 ;; This function calls:
 31937 ;;		Nothing
 31938 ;; This function is called by:
 31939 ;;		_UART2_Initialize
 31940 ;;		_UART2_tx_vect_isr
 31941 ;; This function uses a reentrant model
 31942 ;;
 31943                           
 31944                           	psect	text160
 31945  01A518                     __ptext160:
 31946                           	opt callstack 0
 31947  01A518                     _UART2_Transmit_ISR:
 31948                           	opt callstack 4
 31949                           
 31950                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 31951                           
 31952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31953                           ;incstack = 0
 31954  01A518  0E40               	movlw	64
 31955  01A51A  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 31956  01A51C  D010               	goto	l673
 31957                           
 31958                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 31959  01A51E  0E54               	movlw	low _uart2TxBuffer
 31960  01A520  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 31961  01A522  6ED9               	movwf	fsr2l,c
 31962  01A524  6ADA               	clrf	fsr2h,c
 31963  01A526  0E03               	movlw	high _uart2TxBuffer
 31964  01A528  22DA               	addwfc	fsr2h,f,c
 31965  01A52A  50DF               	movf	indf2,w,c
 31966  01A52C  013D               	movlb	61	; () banked
 31967  01A52E  6FD2               	movwf	210,b	;volatile
 31968                           
 31969                           ; BSR set to: 61
 31970  01A530  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 31971                           
 31972                           ; BSR set to: 61
 31973                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 31974  01A532  0E3F               	movlw	63
 31975  01A534  6433               	cpfsgt	_uart2TxTail^0,c
 31976  01A536  D001               	goto	l10084
 31977                           
 31978                           ; BSR set to: 61
 31979                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 31980  01A538  6A33               	clrf	_uart2TxTail^0,c	;volatile
 31981  01A53A                     l10084:
 31982                           
 31983                           ; BSR set to: 61
 31984                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 31985  01A53A  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 31986                           
 31987                           ;mcc_generated_files/uart2.c: 224:     }
 31988  01A53C  0012               	return	
 31989  01A53E                     l673:
 31990                           
 31991                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 31992  01A53E  0139               	movlb	57	; () banked
 31993  01A540  9796               	bcf	150,3,b	;volatile
 31994                           
 31995                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31996  01A542  0012               	return		;funcret
 31997  01A544                     __end_of_UART2_Transmit_ISR:
 31998                           	opt callstack 0
 31999                           
 32000 ;; *************** function _UART2_rx_vect_isr *****************
 32001 ;; Defined at:
 32002 ;;		line 203 in file "mcc_generated_files/uart2.c"
 32003 ;; Parameters:    Size  Location     Type
 32004 ;;		None
 32005 ;; Auto vars:     Size  Location     Type
 32006 ;;		None
 32007 ;; Return value:  Size  Location     Type
 32008 ;;                  1    wreg      void 
 32009 ;; Registers used:
 32010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 32011 ;; Tracked objects:
 32012 ;;		On entry : 0/0
 32013 ;;		On exit  : 0/0
 32014 ;;		Unchanged: 0/0
 32015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32020 ;;Total ram usage:        0 bytes
 32021 ;; Hardware stack levels used:    1
 32022 ;; Hardware stack levels required when called:    1
 32023 ;; This function calls:
 32024 ;;		Absolute function
 32025 ;;		_UART2_Receive_ISR
 32026 ;; This function is called by:
 32027 ;;		Interrupt level 2
 32028 ;; This function uses a non-reentrant model
 32029 ;;
 32030                           
 32031                           	psect	text161
 32032  01A7F0                     __ptext161:
 32033                           	opt callstack 0
 32034  01A7F0                     _UART2_rx_vect_isr:
 32035                           	opt callstack 4
 32036                           
 32037                           ;incstack = 0
 32038  01A7F0  EE14  F0C2         	lfsr	1,___inthi_sp
 32039                           
 32040                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 32041  01A7F4  0100               	movlb	0	; () banked
 32042  01A7F6  51B1               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 32043  01A7F8  11B2               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 32044  01A7FA  11B3               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 32045  01A7FC  B4D8               	btfsc	status,2,c
 32046  01A7FE  0011               	retfie		f
 32047                           
 32048                           ; BSR set to: 0
 32049                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 32050  01A800  D801               	call	i2u979_48
 32051  01A802  0011               	retfie		f
 32052  01A804                     i2u979_48:
 32053  01A804  0005               	push	
 32054  01A806  6EFA               	movwf	pclath,c
 32055  01A808  51B1               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 32056  01A80A  6EFD               	movwf	tosl,c
 32057  01A80C  51B2               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 32058  01A80E  6EFE               	movwf	tosh,c
 32059  01A810  51B3               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 32060  01A812  6EFF               	movwf	tosu,c
 32061  01A814  50FA               	movf	pclath,w,c
 32062  01A816  0012               	return		;indir
 32063  01A818                     __end_of_UART2_rx_vect_isr:
 32064                           	opt callstack 0
 32065                           
 32066 ;; *************** function _UART2_Receive_ISR *****************
 32067 ;; Defined at:
 32068 ;;		line 233 in file "mcc_generated_files/uart2.c"
 32069 ;; Parameters:    Size  Location     Type
 32070 ;;		None
 32071 ;; Auto vars:     Size  Location     Type
 32072 ;;		None
 32073 ;; Return value:  Size  Location     Type
 32074 ;;                  1  [STACK] void 
 32075 ;; Registers used:
 32076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32077 ;; Tracked objects:
 32078 ;;		On entry : 3F/0
 32079 ;;		On exit  : 0/0
 32080 ;;		Unchanged: 0/0
 32081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32086 ;;Total ram usage:        0 bytes
 32087 ;; Hardware stack levels used:    1
 32088 ;; This function calls:
 32089 ;;		Nothing
 32090 ;; This function is called by:
 32091 ;;		_UART2_Initialize
 32092 ;;		_UART2_rx_vect_isr
 32093 ;; This function uses a reentrant model
 32094 ;;
 32095                           
 32096                           	psect	text162
 32097  01A9CE                     __ptext162:
 32098                           	opt callstack 0
 32099  01A9CE                     _UART2_Receive_ISR:
 32100                           	opt callstack 4
 32101                           
 32102                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 32103                           
 32104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32105                           ;incstack = 0
 32106  01A9CE  0E00               	movlw	low _uart2RxBuffer
 32107  01A9D0  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 32108  01A9D2  6ED9               	movwf	fsr2l,c
 32109  01A9D4  6ADA               	clrf	fsr2h,c
 32110  01A9D6  0E05               	movlw	high _uart2RxBuffer
 32111  01A9D8  22DA               	addwfc	fsr2h,f,c
 32112  01A9DA  006F F743 FFDF     	movff	15824,indf2	;volatile
 32113  01A9E0  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 32114                           
 32115                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 32116  01A9E2  2831               	incf	_uart2RxHead^0,w,c
 32117  01A9E4  B4D8               	btfsc	status,2,c
 32118                           
 32119                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 32120  01A9E6  6A31               	clrf	_uart2RxHead^0,c	;volatile
 32121                           
 32122                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 32123  01A9E8  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 32124                           
 32125                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32126  01A9EA  0012               	return		;funcret
 32127  01A9EC                     __end_of_UART2_Receive_ISR:
 32128                           	opt callstack 0
 32129                           
 32130 ;; *************** function _TMR6_ISR *****************
 32131 ;; Defined at:
 32132 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 32133 ;; Parameters:    Size  Location     Type
 32134 ;;		None
 32135 ;; Auto vars:     Size  Location     Type
 32136 ;;		None
 32137 ;; Return value:  Size  Location     Type
 32138 ;;                  1    wreg      void 
 32139 ;; Registers used:
 32140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 32141 ;; Tracked objects:
 32142 ;;		On entry : 0/0
 32143 ;;		On exit  : 0/0
 32144 ;;		Unchanged: 0/0
 32145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32150 ;;Total ram usage:        1 bytes
 32151 ;; Hardware stack levels used:    1
 32152 ;; Hardware stack levels required when called:    2
 32153 ;; This function calls:
 32154 ;;		_TMR6_CallBack
 32155 ;; This function is called by:
 32156 ;;		Interrupt level 2
 32157 ;; This function uses a non-reentrant model
 32158 ;;
 32159                           
 32160                           	psect	text163
 32161  01AA40                     __ptext163:
 32162                           	opt callstack 0
 32163  01AA40                     _TMR6_ISR:
 32164                           	opt callstack 3
 32165                           
 32166                           ;incstack = 0
 32167  01AA40  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 32168  01AA46  EE14  F0C2         	lfsr	1,___inthi_sp
 32169                           
 32170                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 32171  01AA4A  0139               	movlb	57	; () banked
 32172  01AA4C  91A9               	bcf	169,0,b	;volatile
 32173                           
 32174                           ; BSR set to: 57
 32175                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 32176  01AA4E  EC78  F0D4         	call	_TMR6_CallBack	;wreg free
 32177  01AA52  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 32178  01AA58  0011               	retfie		f
 32179  01AA5A                     __end_of_TMR6_ISR:
 32180                           	opt callstack 0
 32181                           
 32182 ;; *************** function _TMR6_CallBack *****************
 32183 ;; Defined at:
 32184 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 32185 ;; Parameters:    Size  Location     Type
 32186 ;;		None
 32187 ;; Auto vars:     Size  Location     Type
 32188 ;;		None
 32189 ;; Return value:  Size  Location     Type
 32190 ;;                  1  [STACK] void 
 32191 ;; Registers used:
 32192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 32193 ;; Tracked objects:
 32194 ;;		On entry : 3F/39
 32195 ;;		On exit  : 0/0
 32196 ;;		Unchanged: 0/0
 32197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32202 ;;Total ram usage:        0 bytes
 32203 ;; Hardware stack levels used:    1
 32204 ;; Hardware stack levels required when called:    1
 32205 ;; This function calls:
 32206 ;;		Absolute function
 32207 ;;		_TMR6_DefaultInterruptHandler
 32208 ;; This function is called by:
 32209 ;;		_TMR6_ISR
 32210 ;; This function uses a reentrant model
 32211 ;;
 32212                           
 32213                           	psect	text164
 32214  01A8F0                     __ptext164:
 32215                           	opt callstack 0
 32216  01A8F0                     _TMR6_CallBack:
 32217                           	opt callstack 3
 32218                           
 32219                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 32220                           
 32221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32222                           ;incstack = 0
 32223  01A8F0  0100               	movlb	0	; () banked
 32224  01A8F2  51A2               	movf	_TMR6_InterruptHandler& (0+255),w,b
 32225  01A8F4  11A3               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 32226  01A8F6  11A4               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 32227  01A8F8  B4D8               	btfsc	status,2,c
 32228  01A8FA  0012               	return	
 32229                           
 32230                           ; BSR set to: 0
 32231                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 32232  01A8FC  D801               	call	u940_48
 32233  01A8FE  0012               	return	
 32234  01A900                     u940_48:
 32235  01A900  0005               	push	
 32236  01A902  6EFA               	movwf	pclath,c
 32237  01A904  51A2               	movf	_TMR6_InterruptHandler& (0+255),w,b
 32238  01A906  6EFD               	movwf	tosl,c
 32239  01A908  51A3               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 32240  01A90A  6EFE               	movwf	tosh,c
 32241  01A90C  51A4               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 32242  01A90E  6EFF               	movwf	tosu,c
 32243  01A910  50FA               	movf	pclath,w,c
 32244  01A912  0012               	return		;indir
 32245  01A914                     __end_of_TMR6_CallBack:
 32246                           	opt callstack 0
 32247                           
 32248 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 32249 ;; Defined at:
 32250 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 32251 ;; Parameters:    Size  Location     Type
 32252 ;;		None
 32253 ;; Auto vars:     Size  Location     Type
 32254 ;;  i               1  [STACK] unsigned char 
 32255 ;; Return value:  Size  Location     Type
 32256 ;;                  1  [STACK] void 
 32257 ;; Registers used:
 32258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 32259 ;; Tracked objects:
 32260 ;;		On entry : 3F/0
 32261 ;;		On exit  : 0/0
 32262 ;;		Unchanged: 0/0
 32263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32268 ;;Total ram usage:        0 bytes
 32269 ;; Hardware stack levels used:    1
 32270 ;; This function calls:
 32271 ;;		Nothing
 32272 ;; This function is called by:
 32273 ;;		_TMR6_Initialize
 32274 ;;		_TMR6_CallBack
 32275 ;; This function uses a reentrant model
 32276 ;;
 32277                           
 32278                           	psect	text165
 32279  019E58                     __ptext165:
 32280                           	opt callstack 0
 32281  019E58                     _TMR6_DefaultInterruptHandler:
 32282                           	opt callstack 0
 32283                           
 32284                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32285  019E58  52E6               	movf	postinc1,f,c
 32286                           
 32287                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 32288                           ;stkvar	_i @ sp[(-1)+0]
 32289                           
 32290                           ;incstack = 0
 32291  019E5A  0EFF               	movlw	-1
 32292  019E5C  6AE3               	clrf	plusw1,c
 32293  019E5E                     l9672:
 32294                           
 32295                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 32296                           ;stkvar	_i @ sp[(-1)+0]
 32297  019E5E  0EFF               	movlw	-1
 32298  019E60  50E3               	movf	plusw1,w,c
 32299  019E62  0D02               	mullw	2
 32300  019E64  0EDF               	movlw	low _tickCount
 32301  019E66  24F3               	addwf	243,w,c
 32302  019E68  6ED9               	movwf	fsr2l,c
 32303  019E6A  0E01               	movlw	high _tickCount
 32304  019E6C  20F4               	addwfc	prodh,w,c
 32305  019E6E  6EDA               	movwf	fsr2h,c
 32306  019E70  50DE               	movf	postinc2,w,c
 32307  019E72  10DE               	iorwf	postinc2,w,c
 32308  019E74  B4D8               	btfsc	status,2,c
 32309  019E76  D00C               	goto	l9676
 32310                           
 32311                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 32312                           ;stkvar	_i @ sp[(-1)+0]
 32313  019E78  0EFF               	movlw	-1
 32314  019E7A  50E3               	movf	plusw1,w,c
 32315  019E7C  0D02               	mullw	2
 32316  019E7E  0EDF               	movlw	low _tickCount
 32317  019E80  24F3               	addwf	243,w,c
 32318  019E82  6ED9               	movwf	fsr2l,c
 32319  019E84  0E01               	movlw	high _tickCount
 32320  019E86  20F4               	addwfc	prodh,w,c
 32321  019E88  6EDA               	movwf	fsr2h,c
 32322  019E8A  06DE               	decf	postinc2,f,c
 32323  019E8C  0E00               	movlw	0
 32324  019E8E  5ADD               	subwfb	postdec2,f,c
 32325  019E90                     l9676:
 32326                           
 32327                           ;mcc_generated_files/tmr6.c: 207:  }
 32328                           ;stkvar	_i @ sp[(-1)+0]
 32329  019E90  0EFF               	movlw	-1
 32330  019E92  2AE3               	incf	plusw1,f,c
 32331                           
 32332                           ;stkvar	_i @ sp[(-1)+0]
 32333  019E94  0EFF               	movlw	-1
 32334  019E96  006F FF8C  F001    	movff	plusw1,btemp
 32335  019E9C  0E0B               	movlw	11
 32336  019E9E  6401               	cpfsgt	btemp^0,c
 32337  019EA0  D7DE               	goto	l9672
 32338                           
 32339                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32340  019EA2  52E5               	movf	postdec1,f,c
 32341  019EA4  0012               	return		;funcret
 32342  019EA6                     __end_of_TMR6_DefaultInterruptHandler:
 32343                           	opt callstack 0
 32344                           
 32345 ;; *************** function _DMA1_DMASCNT_ISR *****************
 32346 ;; Defined at:
 32347 ;;		line 126 in file "mcc_generated_files/dma1.c"
 32348 ;; Parameters:    Size  Location     Type
 32349 ;;		None
 32350 ;; Auto vars:     Size  Location     Type
 32351 ;;		None
 32352 ;; Return value:  Size  Location     Type
 32353 ;;                  1    wreg      void 
 32354 ;; Registers used:
 32355 ;;		None
 32356 ;; Tracked objects:
 32357 ;;		On entry : 0/0
 32358 ;;		On exit  : 3F/0
 32359 ;;		Unchanged: 0/0
 32360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32365 ;;Total ram usage:        0 bytes
 32366 ;; Hardware stack levels used:    1
 32367 ;; This function calls:
 32368 ;;		Nothing
 32369 ;; This function is called by:
 32370 ;;		Interrupt level 2
 32371 ;; This function uses a non-reentrant model
 32372 ;;
 32373                           
 32374                           	psect	text166
 32375  01AB50                     __ptext166:
 32376                           	opt callstack 0
 32377  01AB50                     _DMA1_DMASCNT_ISR:
 32378                           	opt callstack 5
 32379                           
 32380                           ;incstack = 0
 32381  01AB50  EE14  F0C2         	lfsr	1,___inthi_sp
 32382                           
 32383                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 32384  01AB54  0139               	movlb	57	; () banked
 32385  01AB56  91A2               	bcf	162,0,b	;volatile
 32386                           
 32387                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 32388  01AB58  0100               	movlb	0	; () banked
 32389  01AB5A  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 32390                           
 32391                           ; BSR set to: 0
 32392  01AB5C  0011               	retfie		f
 32393  01AB5E                     __end_of_DMA1_DMASCNT_ISR:
 32394                           	opt callstack 0
 32395                           
 32396 ;; *************** function _DMA1_DMADCNT_ISR *****************
 32397 ;; Defined at:
 32398 ;;		line 134 in file "mcc_generated_files/dma1.c"
 32399 ;; Parameters:    Size  Location     Type
 32400 ;;		None
 32401 ;; Auto vars:     Size  Location     Type
 32402 ;;		None
 32403 ;; Return value:  Size  Location     Type
 32404 ;;                  1    wreg      void 
 32405 ;; Registers used:
 32406 ;;		None
 32407 ;; Tracked objects:
 32408 ;;		On entry : 0/0
 32409 ;;		On exit  : 3F/39
 32410 ;;		Unchanged: 0/0
 32411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32416 ;;Total ram usage:        0 bytes
 32417 ;; Hardware stack levels used:    1
 32418 ;; This function calls:
 32419 ;;		Nothing
 32420 ;; This function is called by:
 32421 ;;		Interrupt level 2
 32422 ;; This function uses a non-reentrant model
 32423 ;;
 32424                           
 32425                           	psect	text167
 32426  01AB74                     __ptext167:
 32427                           	opt callstack 0
 32428  01AB74                     _DMA1_DMADCNT_ISR:
 32429                           	opt callstack 5
 32430                           
 32431                           ; BSR set to: 0
 32432                           ;incstack = 0
 32433  01AB74  EE14  F0C2         	lfsr	1,___inthi_sp
 32434                           
 32435                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 32436  01AB78  0139               	movlb	57	; () banked
 32437  01AB7A  93A2               	bcf	162,1,b	;volatile
 32438                           
 32439                           ; BSR set to: 57
 32440  01AB7C  0011               	retfie		f
 32441  01AB7E                     __end_of_DMA1_DMADCNT_ISR:
 32442                           	opt callstack 0
 32443                           
 32444 ;; *************** function _DMA1_DMAA_ISR *****************
 32445 ;; Defined at:
 32446 ;;		line 144 in file "mcc_generated_files/dma1.c"
 32447 ;; Parameters:    Size  Location     Type
 32448 ;;		None
 32449 ;; Auto vars:     Size  Location     Type
 32450 ;;		None
 32451 ;; Return value:  Size  Location     Type
 32452 ;;                  1    wreg      void 
 32453 ;; Registers used:
 32454 ;;		None
 32455 ;; Tracked objects:
 32456 ;;		On entry : 0/0
 32457 ;;		On exit  : 3F/39
 32458 ;;		Unchanged: 0/0
 32459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32464 ;;Total ram usage:        0 bytes
 32465 ;; Hardware stack levels used:    1
 32466 ;; This function calls:
 32467 ;;		Nothing
 32468 ;; This function is called by:
 32469 ;;		Interrupt level 2
 32470 ;; This function uses a non-reentrant model
 32471 ;;
 32472                           
 32473                           	psect	text168
 32474  01AB80                     __ptext168:
 32475                           	opt callstack 0
 32476  01AB80                     _DMA1_DMAA_ISR:
 32477                           	opt callstack 5
 32478                           
 32479                           ; BSR set to: 57
 32480                           ;incstack = 0
 32481  01AB80  EE14  F0C2         	lfsr	1,___inthi_sp
 32482                           
 32483                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 32484  01AB84  0139               	movlb	57	; () banked
 32485  01AB86  97A2               	bcf	162,3,b	;volatile
 32486                           
 32487                           ; BSR set to: 57
 32488  01AB88  0011               	retfie		f
 32489  01AB8A                     __end_of_DMA1_DMAA_ISR:
 32490                           	opt callstack 0
 32491                           
 32492 ;; *************** function _DMA1_DMAOR_ISR *****************
 32493 ;; Defined at:
 32494 ;;		line 155 in file "mcc_generated_files/dma1.c"
 32495 ;; Parameters:    Size  Location     Type
 32496 ;;		None
 32497 ;; Auto vars:     Size  Location     Type
 32498 ;;		None
 32499 ;; Return value:  Size  Location     Type
 32500 ;;                  1    wreg      void 
 32501 ;; Registers used:
 32502 ;;		None
 32503 ;; Tracked objects:
 32504 ;;		On entry : 0/0
 32505 ;;		On exit  : 3F/39
 32506 ;;		Unchanged: 0/0
 32507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32512 ;;Total ram usage:        0 bytes
 32513 ;; Hardware stack levels used:    1
 32514 ;; This function calls:
 32515 ;;		Nothing
 32516 ;; This function is called by:
 32517 ;;		Interrupt level 2
 32518 ;; This function uses a non-reentrant model
 32519 ;;
 32520                           
 32521                           	psect	text169
 32522  01AB8C                     __ptext169:
 32523                           	opt callstack 0
 32524  01AB8C                     _DMA1_DMAOR_ISR:
 32525                           	opt callstack 5
 32526                           
 32527                           ; BSR set to: 57
 32528                           ;incstack = 0
 32529  01AB8C  EE14  F0C2         	lfsr	1,___inthi_sp
 32530                           
 32531                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 32532  01AB90  0139               	movlb	57	; () banked
 32533  01AB92  95A2               	bcf	162,2,b	;volatile
 32534                           
 32535                           ; BSR set to: 57
 32536  01AB94  0011               	retfie		f
 32537  01AB96                     __end_of_DMA1_DMAOR_ISR:
 32538                           	opt callstack 0
 32539                           
 32540                           ;
 32541                           ; Interrupt Vector Table @ 0x8
 32542                           ;
 32543                           
 32544                           	psect	ivt0x8
 32545  000008                     __pivt0x8:
 32546                           	opt callstack 0
 32547  000008                     ivt0x8_base:
 32548                           	opt callstack 0
 32549                           
 32550                           ; Vector 0 : SWINT
 32551  000008  6AF6               	dw	_Default_ISR shr (0+2)
 32552                           
 32553                           ; Vector 1 : HLVD
 32554  00000A  6AF6               	dw	_Default_ISR shr (0+2)
 32555                           
 32556                           ; Vector 2 : OSF
 32557  00000C  6AF6               	dw	_Default_ISR shr (0+2)
 32558                           
 32559                           ; Vector 3 : CSW
 32560  00000E  6AF6               	dw	_Default_ISR shr (0+2)
 32561                           
 32562                           ; Vector 4 : NVM
 32563  000010  6AF6               	dw	_Default_ISR shr (0+2)
 32564                           
 32565                           ; Vector 5 : SCAN
 32566  000012  6AF6               	dw	_Default_ISR shr (0+2)
 32567                           
 32568                           ; Vector 6 : CRC
 32569  000014  6AF6               	dw	_Default_ISR shr (0+2)
 32570                           
 32571                           ; Vector 7 : IOC
 32572  000016  6AF6               	dw	_Default_ISR shr (0+2)
 32573                           
 32574                           ; Vector 8 : INT0
 32575  000018  6AD0               	dw	_INT0_ISR shr (0+2)
 32576                           
 32577                           ; Vector 9 : ZCD
 32578  00001A  6AF6               	dw	_Default_ISR shr (0+2)
 32579                           
 32580                           ; Vector 10 : AD
 32581  00001C  693B               	dw	_ADCC_ISR shr (0+2)
 32582                           
 32583                           ; Vector 11 : ADT
 32584  00001E  667F               	dw	_ADCC_ThresholdISR shr (0+2)
 32585                           
 32586                           ; Vector 12 : CMP1
 32587  000020  6AF6               	dw	_Default_ISR shr (0+2)
 32588                           
 32589                           ; Vector 13 : SMT1
 32590  000022  6AF6               	dw	_Default_ISR shr (0+2)
 32591                           
 32592                           ; Vector 14 : SMT1PRA
 32593  000024  6AF6               	dw	_Default_ISR shr (0+2)
 32594                           
 32595                           ; Vector 15 : SMT1PRW
 32596  000026  6AF6               	dw	_Default_ISR shr (0+2)
 32597                           
 32598                           ; Vector 16 : DMA1SCNT
 32599  000028  6AD4               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 32600                           
 32601                           ; Vector 17 : DMA1DCNT
 32602  00002A  6ADD               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 32603                           
 32604                           ; Vector 18 : DMA1OR
 32605  00002C  6AE3               	dw	_DMA1_DMAOR_ISR shr (0+2)
 32606                           
 32607                           ; Vector 19 : DMA1A
 32608  00002E  6AE0               	dw	_DMA1_DMAA_ISR shr (0+2)
 32609                           
 32610                           ; Vector 20 : SPI1RX
 32611  000030  6AF6               	dw	_Default_ISR shr (0+2)
 32612                           
 32613                           ; Vector 21 : SPI1TX
 32614  000032  6AF6               	dw	_Default_ISR shr (0+2)
 32615                           
 32616                           ; Vector 22 : SPI1
 32617  000034  6AF6               	dw	_Default_ISR shr (0+2)
 32618                           
 32619                           ; Vector 23 : I2C1RX
 32620  000036  6AF6               	dw	_Default_ISR shr (0+2)
 32621                           
 32622                           ; Vector 24 : I2C1TX
 32623  000038  6AF6               	dw	_Default_ISR shr (0+2)
 32624                           
 32625                           ; Vector 25 : I2C1
 32626  00003A  6AF6               	dw	_Default_ISR shr (0+2)
 32627                           
 32628                           ; Vector 26 : I2C1E
 32629  00003C  6AF6               	dw	_Default_ISR shr (0+2)
 32630                           
 32631                           ; Vector 27 : U1RX
 32632  00003E  69E8               	dw	_UART1_rx_vect_isr shr (0+2)
 32633                           
 32634                           ; Vector 28 : U1TX
 32635  000040  6AF6               	dw	_Default_ISR shr (0+2)
 32636                           
 32637                           ; Vector 29 : U1E
 32638  000042  6AF6               	dw	_Default_ISR shr (0+2)
 32639                           
 32640                           ; Vector 30 : U1
 32641  000044  6AF6               	dw	_Default_ISR shr (0+2)
 32642                           
 32643                           ; Vector 31 : TMR0
 32644  000046  6AF6               	dw	_Default_ISR shr (0+2)
 32645                           
 32646                           ; Vector 32 : TMR1
 32647  000048  6AF6               	dw	_Default_ISR shr (0+2)
 32648                           
 32649                           ; Vector 33 : TMR1G
 32650  00004A  6AF6               	dw	_Default_ISR shr (0+2)
 32651                           
 32652                           ; Vector 34 : TMR2
 32653  00004C  6AF6               	dw	_Default_ISR shr (0+2)
 32654                           
 32655                           ; Vector 35 : CCP1
 32656  00004E  6AF6               	dw	_Default_ISR shr (0+2)
 32657                           
 32658                           ; Vector 36 : Undefined
 32659  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 32660                           
 32661                           ; Vector 37 : NCO1
 32662  000052  6AF6               	dw	_Default_ISR shr (0+2)
 32663                           
 32664                           ; Vector 38 : CWG1
 32665  000054  6AF6               	dw	_Default_ISR shr (0+2)
 32666                           
 32667                           ; Vector 39 : CLC1
 32668  000056  6AF6               	dw	_Default_ISR shr (0+2)
 32669                           
 32670                           ; Vector 40 : INT1
 32671  000058  6887               	dw	_INT1_ISR shr (0+2)
 32672                           
 32673                           ; Vector 41 : CMP2
 32674  00005A  6AF6               	dw	_Default_ISR shr (0+2)
 32675                           
 32676                           ; Vector 42 : DMA2SCNT
 32677  00005C  6AF6               	dw	_Default_ISR shr (0+2)
 32678                           
 32679                           ; Vector 43 : DMA2DCNT
 32680  00005E  6AF6               	dw	_Default_ISR shr (0+2)
 32681                           
 32682                           ; Vector 44 : DMA2OR
 32683  000060  6AF6               	dw	_Default_ISR shr (0+2)
 32684                           
 32685                           ; Vector 45 : DMA2A
 32686  000062  6AF6               	dw	_Default_ISR shr (0+2)
 32687                           
 32688                           ; Vector 46 : I2C2RX
 32689  000064  6AF6               	dw	_Default_ISR shr (0+2)
 32690                           
 32691                           ; Vector 47 : I2C2TX
 32692  000066  6AF6               	dw	_Default_ISR shr (0+2)
 32693                           
 32694                           ; Vector 48 : I2C2
 32695  000068  6AF6               	dw	_Default_ISR shr (0+2)
 32696                           
 32697                           ; Vector 49 : I2C2E
 32698  00006A  6AF6               	dw	_Default_ISR shr (0+2)
 32699                           
 32700                           ; Vector 50 : U2RX
 32701  00006C  69FC               	dw	_UART2_rx_vect_isr shr (0+2)
 32702                           
 32703                           ; Vector 51 : U2TX
 32704  00006E  69F2               	dw	_UART2_tx_vect_isr shr (0+2)
 32705                           
 32706                           ; Vector 52 : U2E
 32707  000070  6AF6               	dw	_Default_ISR shr (0+2)
 32708                           
 32709                           ; Vector 53 : U2
 32710  000072  6AF6               	dw	_Default_ISR shr (0+2)
 32711                           
 32712                           ; Vector 54 : TMR3
 32713  000074  5F91               	dw	_TMR3_ISR shr (0+2)
 32714                           
 32715                           ; Vector 55 : TMR3G
 32716  000076  6AF6               	dw	_Default_ISR shr (0+2)
 32717                           
 32718                           ; Vector 56 : TMR4
 32719  000078  6AF6               	dw	_Default_ISR shr (0+2)
 32720                           
 32721                           ; Vector 57 : CCP2
 32722  00007A  6AF6               	dw	_Default_ISR shr (0+2)
 32723                           
 32724                           ; Vector 58 : Undefined
 32725  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 32726                           
 32727                           ; Vector 59 : CWG2
 32728  00007E  6AF6               	dw	_Default_ISR shr (0+2)
 32729                           
 32730                           ; Vector 60 : CLC2
 32731  000080  6AF6               	dw	_Default_ISR shr (0+2)
 32732                           
 32733                           ; Vector 61 : INT2
 32734  000082  6AF6               	dw	_Default_ISR shr (0+2)
 32735                           
 32736                           ; Vector 62 : Undefined
 32737  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 32738                           
 32739                           ; Vector 63 : Undefined
 32740  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 32741                           
 32742                           ; Vector 64 : Undefined
 32743  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 32744                           
 32745                           ; Vector 65 : Undefined
 32746  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 32747                           
 32748                           ; Vector 66 : Undefined
 32749  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 32750                           
 32751                           ; Vector 67 : Undefined
 32752  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 32753                           
 32754                           ; Vector 68 : Undefined
 32755  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 32756                           
 32757                           ; Vector 69 : Undefined
 32758  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 32759                           
 32760                           ; Vector 70 : TMR5
 32761  000094  6742               	dw	_TMR5_ISR shr (0+2)
 32762                           
 32763                           ; Vector 71 : TMR5G
 32764  000096  6AF6               	dw	_Default_ISR shr (0+2)
 32765                           
 32766                           ; Vector 72 : TMR6
 32767  000098  6A90               	dw	_TMR6_ISR shr (0+2)
 32768                           
 32769                           ; Vector 73 : CCP3
 32770  00009A  6AF6               	dw	_Default_ISR shr (0+2)
 32771                           
 32772                           ; Vector 74 : CWG3
 32773  00009C  6AF6               	dw	_Default_ISR shr (0+2)
 32774                           
 32775                           ; Vector 75 : CLC3
 32776  00009E  6AF6               	dw	_Default_ISR shr (0+2)
 32777                           
 32778                           ; Vector 76 : Undefined
 32779  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 32780                           
 32781                           ; Vector 77 : Undefined
 32782  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 32783                           
 32784                           ; Vector 78 : Undefined
 32785  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 32786                           
 32787                           ; Vector 79 : Undefined
 32788  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 32789                           
 32790                           ; Vector 80 : CCP4
 32791  0000A8  6AF6               	dw	_Default_ISR shr (0+2)
 32792                           
 32793                           ; Vector 81 : CLC4
 32794  0000AA  6AF6               	dw	_Default_ISR shr (0+2)
 32795  0000AC                     ivt0x8_undefint:
 32796                           	opt callstack 0
 32797  0000AC  00FF               	reset	
 32798                           
 32799                           	psect	text170
 32800  000000                     __ptext170:
 32801                           	opt callstack 0
 32802                           
 32803                           	psect	rparam
 32804  0000                     
 32805                           	psect	temp
 32806  000001                     btemp:
 32807                           	opt callstack 0
 32808  000001                     	ds	32
 32809  0000                     wtemp0	set	btemp
 32810  0000                     wtemp1	set	btemp+2
 32811  0000                     wtemp2	set	btemp+4
 32812  0000                     wtemp3	set	btemp+6
 32813  0000                     wtemp4	set	btemp+8
 32814  0000                     wtemp5	set	btemp+10
 32815  0000                     wtemp8	set	btemp+1
 32816  0000                     ttemp0	set	btemp
 32817  0000                     ttemp1	set	btemp+3
 32818  0000                     ttemp2	set	btemp+6
 32819  0000                     ttemp3	set	btemp+9
 32820  0000                     ttemp5	set	btemp+1
 32821  0000                     ttemp6	set	btemp+4
 32822  0000                     ttemp7	set	btemp+8
 32823  0000                     ltemp0	set	btemp
 32824  0000                     ltemp1	set	btemp+4
 32825  0000                     ltemp2	set	btemp+8
 32826  0000                     lltemp0	set	btemp
 32827  0000                     lltemp1	set	btemp+8
 32828  0000                     lltemp2	set	btemp+16
 32829  0000                     lltemp3	set	btemp+24
 32830                           tosu	equ	0x3FFF
 32831                           tosh	equ	0x3FFE
 32832                           tosl	equ	0x3FFD
 32833                           stkptr	equ	0x3FFC
 32834                           pclatu	equ	0x3FFB
 32835                           pclath	equ	0x3FFA
 32836                           pcl	equ	0x3FF9
 32837                           tblptru	equ	0x3FF8
 32838                           tblptrh	equ	0x3FF7
 32839                           tblptrl	equ	0x3FF6
 32840                           tablat	equ	0x3FF5
 32841                           prodh	equ	0x3FF4
 32842                           prodl	equ	0x3FF3
 32843                           indf0	equ	0x3FEF
 32844                           postinc0	equ	0x3FEE
 32845                           postdec0	equ	0x3FED
 32846                           preinc0	equ	0x3FEC
 32847                           plusw0	equ	0x3FEB
 32848                           fsr0h	equ	0x3FEA
 32849                           fsr0l	equ	0x3FE9
 32850                           wreg	equ	0x3FE8
 32851                           indf1	equ	0x3FE7
 32852                           postinc1	equ	0x3FE6
 32853                           postdec1	equ	0x3FE5
 32854                           preinc1	equ	0x3FE4
 32855                           plusw1	equ	0x3FE3
 32856                           fsr1h	equ	0x3FE2
 32857                           fsr1l	equ	0x3FE1
 32858                           bsr	equ	0x3FE0
 32859                           indf2	equ	0x3FDF
 32860                           postinc2	equ	0x3FDE
 32861                           postdec2	equ	0x3FDD
 32862                           preinc2	equ	0x3FDC
 32863                           plusw2	equ	0x3FDB
 32864                           fsr2h	equ	0x3FDA
 32865                           fsr2l	equ	0x3FD9
 32866                           status	equ	0x3FD8


Data Sizes:
    Strings     562
    Constant    372
    Data        977
    BSS         1097
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     156
    BANK1           256      0     247
    BANK2           256     25     254
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_84(CODE[1]), STR_46(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_81(CODE[3]), STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[3]), 
		 -> STR_62(CODE[3]), STR_58(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_81(CODE[3]), STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[3]), 
		 -> STR_62(CODE[3]), STR_58(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[19]), STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), 
		 -> STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), 
		 -> STR_21(CODE[19]), STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), 
		 -> STR_9(CODE[22]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[19]), STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), 
		 -> STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), 
		 -> STR_21(CODE[19]), STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), 
		 -> STR_9(CODE[22]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_29(CODE[9]), STR_28(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[6]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_29(CODE[9]), STR_28(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[6]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[4]), STR_52(CODE[4]), STR_49(CODE[4]), STR_48(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[4]), STR_52(CODE[4]), STR_49(CODE[4]), STR_48(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[19]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), 
		 -> STR_21(CODE[19]), STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), 
		 -> STR_9(CODE[22]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5866_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[19]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[19]), 
		 -> STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[22]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[19]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[19]), 
		 -> STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[22]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 79
		 -> STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[19]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[19]), 
		 -> STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[22]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_29(CODE[9]), STR_28(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_29(CODE[9]), STR_28(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_29(CODE[9]), 
		 -> STR_28(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4403tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_29(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_28(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  357440
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                             ___flge
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (2) _fabsf                                                8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35433
                                              0 BANK2     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35343
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35343
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___flge
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     19      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F7       7       96.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9C       5       97.5%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     51F      58        0.0%
DATA                 0      0     841       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 12 05:40:32 2019

                     _SPI1_Exchange8bit A956                __end_of_set_display_info A9B0  
                                     _C 0100                                       _D 07FF  
                                     _H 00F5                                       _P 0098  
                                     _R 00C6                                       _S 02BC  
                                     _T FD29                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler A6D6            __end_of_start_switch_handler A956  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FDB9                  __end_of_FVR_Initialize ABBE  
                           __CFG_LVP$ON 000000                                     l169 AAC6  
                                   l807 A964                                     l673 A53E  
                                   _GIE 01FE97                                     _abs 9F38  
                                   _pad 86DA                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize AA72                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack A8CC                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0092                           _INT1_CallBack A860  
                          __CFG_ZCD$OFF 000000                                    l1000 A1D6  
                                  l2104 123A                                    l1314 224E  
                                  l2133 066A                                    l2222 50E0  
                                  l1326 24FA                                    l2207 5BA8  
                                  l1343 2B4E                                    l2048 8736  
                                  l1424 9C5C                                    l1336 2598  
                                  l1328 2500                                    l3025 6938  
                                  l1338 265E                                    l1339 276C  
                       _timer3ReloadVal 0027                                    l1188 A216  
                                  l2068 4CFA                                    l2148 0B1A  
                                  l2272 21E6                                    l1642 A276  
                                  l2602 7B66                                    l2186 627A  
                                  l1651 6E54                                    l1564 92EA  
                                  l1652 6FB0                                    l3094 85B8  
                                  l1583 A2E0                                    l1568 95EE  
                                  l3361 6D98                                    l1747 4C16  
                                  l1659 88FA                                    l2564 8F70  
                  _ADCC_StartConversion AAE0                                    l2575 7E38  
                                  l2568 7D64                                    l3376 989E  
                                  l2842 3B66                                    l1794 756A  
                                  l2923 33AA                                    l1699 A9AC  
                                  l3389 981A                                    l2854 39F6  
                                  l1889 9714                                    l1898 8C14  
                                  l2963 71AE                                    l8004 80DA  
                                  l8020 85F4                                    l7302 3772  
                                  l7222 344A                                    l8102 7A50  
                                  l2887 4766                                    l7304 3784  
                                  l7312 37BE                                    l7240 34FA  
                                  l7216 340A                                    l8024 860C  
                                  l8016 85E2                                    l8120 7AEE  
                                  l7402 3AC2                                    l7330 385A  
                                  l7250 3550                                    l7234 34C8  
                                  l7226 3460                                    l2994 9F78  
                                  l8042 86C0                                    l8034 868C  
                                  l8050 8EF8                                    l2986 7700  
                                  l7412 3AEE                                    l7332 386C  
                                  l7340 38A8                                    l7308 378E  
                                  l7252 3580                                    l7228 3490  
                                  l7500 988E                                    l7246 353A  
                                  l7190 93E0                                    l8054 8F3A  
                                  l8126 7AFE                                    l8118 7AD2  
                                  l8142 7758                                    l7424 3B46  
                                  l7416 3B06                                    l7352 3980  
                                  l7336 3876                                    l8072 7DB2  
                                  l8128 7B14                                    l7418 3B16  
                                  l7370 3A18                                    l7362 39DA  
                                  l7354 39A6                                    l7258 35A2  
                                  l8066 7D22                                    l8058 8F6E  
                                  l7530 5A84                                    l7514 5916  
                                  l8154 782A                                    l7372 3A2A  
                                  l8084 7E36                                    l8076 7E00  
                                  l9300 718E                                    l7188 93BE  
                                  l8092 9F0E                                    l9230 9E32  
                                  l7390 3A64                                    l8190 9DF6  
                                  l7534 5ACC                                    l8174 81DA  
                                  l8166 812E                                    l9222 A4D0  
                                  l7376 3A36                                    l7288 36E0  
                                  l7704 4442                                    l7632 6AD4  
                                  l7624 6A28                                    l7616 69A0  
                                  l7472 769E                                    l7528 5A34  
                                  l7386 3A5E                                    l7298 3752  
                                  l7730 456E                                    l7722 4508  
                                  l7714 44D2                                    l7458 9F68  
                                  l7482 76F8                                    l7538 5B3A  
                                  l7724 451A                                    l7732 4572  
                                  l7652 424C                                    l7572 64B0  
                                  l7476 76A2                                    l7556 980A  
                                  l7902 31BA                                    l7814 2C20  
                                  l7662 42A2                                    l9270 708E  
                                  l9190 A2EA                                    l7920 3230  
                                  l7832 2CEE                                    l7816 2C26  
                                  l7808 2BE0                                    l7744 45BC  
                                  l7672 432A                                    l7664 42D2  
                                  l9280 70F8                                    l9272 70AC  
                                  l7584 654A                                    l7930 32A4  
                                  l7906 31E0                                    l7834 2CF4  
                                  l7826 2CAE                                    l7818 2C56  
                                  l7762 4632                                    l7738 45A0  
                                  l7690 43EE                                    l7682 4380  
                                  l7658 428C                                    l9290 712C  
                                  l9282 710E                                    l9266 706A  
                                  l9258 6FFE                                    l9098 A606  
                                  l7578 6504                                    l7940 3314  
                                  l7916 322A                                    l7844 2D46  
                                  l7836 2D24                                    l7772 46A6  
                                  l7748 45E2                                    l7684 43B0  
                                  l9268 7078                                    l8812 67AA  
                                  l7596 661C                                    l7950 3372  
                                  l7934 32EA                                    l7790 473A  
                                  l7758 462C                                    l7678 436A  
                                  l9278 70DA                                    l8822 688C  
                                  l8814 67C2                                    l8806 677E  
                                  l7792 474A                                    l7784 4712  
                                  l7696 4428                                    l8832 6928  
                                  l8816 67E6                                    l9730 73F0  
                                  l7778 46E2                                    l8818 6824  
                                  l7970 7FCA                                    l8850 6C76  
                                  l9900 8246                                    l7948 3358  
                                  l9812 4772                                    l9902 8256  
                                  l9742 7430                                    l7982 8000  
                                  l9672 9E5E                                    l9920 82DC  
                                  l9904 825C                                    l9912 8278  
                                  l7896 319E                                    l9840 49CC  
                                  l9832 499A                                    l7976 7FE0  
                                  l8848 6C0A                                    l9906 8262  
                                  l9914 82A4                                    l9738 741C  
                                  l9818 47A2                                    l9676 9E90  
                                  l9908 8270                                    l9852 4B48  
                                  l9844 4A68                                    l9828 48C0  
                                  l8796 66E8                                    l7996 80A6  
                                  l9940 96CE                                    l8798 670A  
                                  STR_1 FF51                                    l9928 8356  
                                  l9776 A28C                                    STR_2 FFA3  
                                  STR_3 FFD1                                    l9858 4BE4  
                                  l9866 4BF6                                    STR_4 FF40  
                                  STR_5 FF62                                    STR_6 FFA3  
                                  STR_7 FFD1                                    STR_8 FF2F  
                                  STR_9 FE34                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5030 940E                                    u6010 69F0  
                                  u5220 37B6                                    u6020 6A22  
                                  u5060 A454                                    u5037 9400  
                                  u5230 37D6                                    u6030 6A54  
                                  u5070 A456                                    u7000 9DF2  
                                  u5225 37A6                                    u5330 39C8  
                                  u5170 3706                                    u6210 459A  
                                  u6050 6B0C                                    _T6PR 003F93  
                                  u5180 3726                                    u6300 46BA  
                                  u5500 A424                                    _PMD0 0039C0  
                                  u5181 3720                                    _PMD1 0039C1  
                                  u5430 3AB2                                    u6310 46F6  
                                  u6070 6B5E                                    u5510 A426  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u6400 2D34                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u5370 3A3C  
                                  u5290 389E                                    u6250 4624  
                                  _PMD6 0039C6                                    u5435 3AA2  
                                  _PMD7 0039C7                                    u5460 3AD2  
                                  u5620 76F0                                    u5700 58FA  
                                  u6510 327E                                    u5390 3A56  
                                  u5198 3728                                    u5630 76F2  
                                  u6415 2EC8                                    u5295 388E  
                                  u5615 76D2                                    u6520 32B8  
                                  u5560 9F4C                                    u6600 80C6  
                                  u5800 A0D0                                    u6425 2F90  
                                  u6530 32FE                                    u6290 4680  
                                  u5570 7622                                    u8210 6CA4  
                                  u5810 97C8                                    u6515 326E  
                                  u6435 3158                                    u9004 49B4  
                                  u8140 677A                                    u5740 59DA  
                                  u5660 984C                                    u5820 97CA  
                                  u9005 49AE                                    u5901 650A  
                                  u5725 5934                                    u6470 3222  
                                  u5910 6544                                    u6710 8F6A  
                                  u5726 593A                                    u5670 984E  
                                  u6295 4670                                    u5575 7618  
                                  u5727 5948                                    u9024 4A82  
                                  u5840 A484                                    u8160 68D2  
                                  u5920 6576                                    u6800 7A7E  
                                  u5760 5AB2                                    u9200 9700  
                                  u9025 4A7C                                    u5745 59D0  
                                  u8217 6C96                                    u9050 4AAC  
                                  u5850 A486                                    u8170 68D4  
                                  u6650 8638                                    u5690 58AE  
                                  u8250 6D3E                                    u9060 A920  
                                  u9044 4AA4                                    u5940 6654  
                                  u6580 802C                                    u8260 6D6C  
                                  u6900 7784                                    u9045 4A9E  
                                  u6805 7A74                                    u5765 5AA8  
                                  u5870 64AA                                    u6670 86AC  
                                  u5790 A0CE                                    u5695 58A4  
                                  u8255 6D38                                    u5960 66A6  
                                  u6920 7862                                    u8257 6D2A  
                                  u9066 A922                                    u5890 6500  
                                  u6770 9F0A                                    u6850 7B1C  
                                  u9218 9702                                    u9170 96BA  
                                  u8267 6D5E                                    u6780 7A30  
                                  u6940 8128                                    u5990 699A  
                                  u6870 7B46                                    u6790 7A44  
                                  u6950 815A                                    u6785 7A26  
                                  u6881 7718                                    u6890 7752  
                                  u6970 8212                                    u8740 7122  
                                  u9188 96BC                                    u8805 9AA8  
                                  u8645 A10A                                    u8806 9AAA  
                                  u6990 9DD2                                    _PLLR 01CEE0  
                                  u9475 AB0C                                    u8780 9A74  
                                  u9476 AB0E                                    u9485 AAFC  
                                  u9486 AAFE                                    u8880 73CE  
                                  u8944 478C                                    u8945 4786  
                                  u8964 47BC                                    u8965 47B6  
                                  u8798 9A76                                    u8984 47DE  
                                  u8985 47D8                                    u9970 84C2  
                                  u9990 853E                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR A518  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FDC9                                    _cp_l FDC5  
                                  _atoi 66CE                                    _ctoa 9718  
                                  _main 21F0                                    _dtoa 4C1C  
                                  _nanf 9B92                                    _seed 00BE  
                                  _prec 0023                                    _nout 00BA  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 6190  
                                  btemp 0001                                    _utoa 5B64  
                                  _xtoa 509C                  __end_of_check_adc_scan ABB6  
                         ___fpclassifyf 7574                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 002B               __end_of_SPI1_Exchange8bit A974  
             __size_of_clear_hid_pflags 0024                         _TMR3_Initialize A050  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr A7A0  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0038  
                      __end_of_INT0_ISR AB4E                        __end_of_INT1_ISR A25A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 92F2  
         __end_of_OSCILLATOR_Initialize AACC                                   l10012 9542  
                                 l10110 A1BE                                   l11000 6112  
                                 l10008 94DA                                   l11012 9736  
                                 l11014 9762                                   l11110 00F0  
                                 l10072 AA20                                   l10128 A1FE  
                                 l11050 4D52                                   l11130 0216  
                                 l10314 8B22                                   l10084 A53A  
                                 l10420 98EC                                   l10308 57EC  
                                 l10244 79D8                                   l11060 4F64  
                                 l11300 0D24                                   l11204 05F6  
                                 l11132 022C                                   l12100 2238  
                                 l10414 98DC                                   l11046 4D34  
                                 l11038 4CEA                                   l11222 06B8  
                                 l11206 0602                                   l11118 0146  
                                 l10326 8B7E                                   l10408 A194  
                                 l11080 5016                                   l11232 077A  
                                 l11128 01EA                                   l11136 0258  
                                 l11400 61FC                                   l10264 903C  
                                 l10336 8BEE                                   l12104 2256  
                                 l11242 0926                                   l11226 06F0  
                                 l11162 0396                                   l11146 02FC  
                                 l11154 032A                                   l12050 6F4C  
                                 l12106 2268                                   l11084 5052  
                                 l11308 0D90                                   l11316 0EA2  
                                 l11172 04D2                                   l11420 62EC  
                                 l12036 6E24                                   l10268 907A  
                                 l11342 0FD6                                   l11190 058E  
                                 l11166 0406                                   l11430 63A6  
                                 l12222 28AC                                   l12206 258A  
                                 l11344 0FF0                                   l11328 0F3A  
                                 l11280 0C32                                   l11264 0B12  
                                 l11256 0A48                                   l11184 0554  
                                 l11168 0470                                   l11424 631C  
                                 l11416 62B0                                   l11512 51A6  
                                 l11504 5146                                   l12232 2A28  
                                 l12240 2A72                                   l11354 1092  
                                 l11266 0B34                                   l11098 00AC  
                                 l11434 63D2                                   l11610 14E2  
                                 l12250 2AB6                                   l12218 284A  
                                 l12234 2A52                                   l11380 119A  
                                 l11364 10E2                                   l11292 0CBA  
                                 l11196 0594                                   l11188 057C  
                                 l11460 5BF4                                   l11452 5B98  
                                 l11612 14F8                                   l12156 2422  
                                 l11438 640E                                   l11470 5DEA  
                                 l11552 540C                                   l11528 529C  
                                 l11536 5322                                   l11704 1C88  
                                 l11608 14A8                                   l12264 2AFE  
                                 l12256 2AC8                                   l12184 2504  
                                 l10922 84CE                                   l11714 1DAA  
                                 l11650 1834                                   l12258 2AE0  
                                 l12186 2532                                   l12098 2230  
                                 l11492 50D0                                   l11724 1E60  
                                 l11628 165C                                   l12268 2B24  
                                 PRLOCK 0039EF                                   l10934 944A  
                                 l10950 8740                                   l11670 1A46  
                                 l11662 198E                                   l11646 17E0  
                                 l11638 16F4                                   l11590 1376  
                                 l11822 91C8                                   l12278 2B78  
                                 l12198 2566                                   l11912 3F06  
                                 l10944 8706                                   l11752 2114  
                                 l11824 920A                                   l11808 934A  
                                 l11922 403A                                   l10938 9488  
                                 l10954 877C                                   l11498 510A  
                                 l11762 2172                                   l11738 1FDC  
                                 l11674 1A7A                                   l11586 1326  
                                 l11924 4042                                   l11908 3E88  
                                 l10948 872E                                   l10964 8E2A  
                                 l11588 1360                                   l10980 5F3C  
                                 l11918 3FB0                                   l10958 87C6  
                                 l11758 216E                                   l11694 1BDA  
                                 l11854 8812                                   l11928 4058  
                                 l11768 2192                                   l10992 6064  
                                 l10986 5FFA                                   l11894 3C36  
                                 l11898 3C78                         __end_of___aodiv 66CE  
                          _Volts_to_SOC 94D2                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 3B70  
                                 _ADCLK 003EFF                         __end_of___aomod 6B82  
                                 _ADPCH 003EF1                         __end_of___fldiv 4770  
                                 _ADREF 003EFD                         __end_of___awdiv 80F4  
                       __end_of___flneg 9F38                                   STR_10 FF84  
                                 STR_12 FF73                                   STR_20 FE4A  
                                 STR_13 FEAA                                   STR_21 FE97  
                                 STR_22 FF84                                   STR_14 FED0  
                                 STR_30 FE71                                   STR_31 FE71  
                                 STR_23 FF84                                   STR_15 FEBD  
                                 STR_24 FF73                                   STR_32 FFBE  
                                 STR_16 FF1C                                   STR_40 FE5E  
                                 STR_33 FFBE                                   STR_25 FFFC  
                                 STR_17 FEF6                           __CFG_WDTE$OFF 000000  
                                 STR_26 FFF9                                   STR_34 FF94  
                                 STR_18 FF09                                   STR_35 FF94  
                                 STR_19 FEE3                                   STR_36 FF94  
                                 STR_60 FFF0                                   STR_52 FFDB  
                                 STR_28 FFB2                         __end_of___awmod 86DA  
                                 STR_53 FFE3                                   STR_29 FFC8  
                                 STR_37 FE1C                                   STR_46 FE1B  
                                 STR_62 FFF0                                   STR_70 FFF3  
                                 STR_39 FE84                                   STR_47 FDCD  
                                 STR_72 FFF3                                   STR_56 FFEA  
                                 STR_48 FFD7                                   _ADRPT 003EEC  
                                 STR_81 FFE7                                   STR_65 FFED  
                                 STR_49 FFDF                                   STR_58 FFEA  
                                 STR_67 FFED                                   STR_75 FFF6  
                                 STR_77 FFF6                                   STR_79 FFE7  
                       __end_of___flmul 33B4                         __end_of___flsub 9FC4  
                       __end_of___fltol 7B70                                   u10110 6186  
                                 u10210 4D20                                   u10050 8EA4  
                                 u11010 50B6                                   u10220 4F78  
                                 u10140 4C4C                                   u10150 4C4E  
                                 u11110 531E                                   u10231 4FA8  
                                 u10240 4FBE                                   u10400 02A8  
                                 u10320 00DA                                   u11120 533E  
                                 u11040 519E                                   u10241 4FBC  
                                 u10057 8E96                                   u10250 4FD2  
                                 u10170 4CBE                                   u11050 51F2  
                                 u11131 536E                                   u11115 5300  
                                 u10260 4FD6                                   u10500 05C6  
                                 u11140 5384                                   u11060 51F4  
                                 u11220 13BE                                   u11141 5382  
                                 u10190 4CD0                                   u10350 0194  
                                 u11150 5398                                   u11230 13C0  
                                 u10280 4FEC                                   u10440 050E  
                                 u10360 0196                                   u11160 539C  
                                 u11080 5252                                   u11400 1B36  
                                 u11240 13E6                                   u10610 0A18  
                                 u11090 5254                         __end_of___lodiv 788A  
                                 u10540 0648                                   u11340 1748  
                                 u11500 932A                                   u10710 0EE4  
                                 u10470 0562                                   u10390 02A6  
                                 u11270 1540                                   u10800 1170  
                                 u11360 18BC                                   u11280 1542  
                                 u11290 1568                                   _U1P1H 003DED  
                                 u11460 1EB4                                   u11700 6F9E  
                                 _U1P2H 003DEF                                   u10910 6434  
                                 u11390 1B34                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u11480 2064                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10770 10B8  
                                 u10930 5B7E                                   _U1P3L 003DF0  
                                 u10790 116E                                   u10870 6312  
                                 u11750 24D4                                   _U2P1L 003DD4  
                                 u10880 6358                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10961 5E2C  
                                 u10970 5E42                                   u11690 6F9C  
                                 _U2P3L 003DD8                                   u10971 5E40  
                                 u10980 5E56                                   u10990 5E5A  
                                 u10887 634A                                   _T5CLK 003F9D  
                       __end_of___lomod 8234                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00A5                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 003D                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR ABD8  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 7FA6                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 9D62  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR AA5A  
                          _DMA1CON1bits 003BFD                                   _fabsf 90EE  
                                 _flags 0025                __size_of_calc_model_data 03A2  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 849E              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha A0DA                                   _fputs 943A  
                       __end_of_isdigit A490                         __end_of_ivln2_h FDC5  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand A334  
                                 _width 0021                                   _putch AA24  
                       __end_of_islower A430                         __end_of_isspace 9E06  
              _INT1_SetInterruptHandler A6FE                         __end_of_isupper A460  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler A686             _UART1_SetRxInterruptHandler A65E  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 8B16  
                       __end_of_tolower 98A8                         __end_of_strncmp 6DA2  
                       __end_of_toupper 9824               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr A7C8                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize A00A                   __end_of_ringBufS_init A5E6  
                       __initialization 88FE                       _UART2_rx_vect_isr A7F0  
                          __end_of_cp_h FDCD                            __end_of_cp_l FDC9  
                          __end_of_atoi 6942                            __end_of_ctoa 97A0  
                          __end_of_main 2B8A                            __end_of_dtoa 509C  
                          __end_of_nanf 9BF4                            __end_of_stoa 644E  
                          __end_of_utoa 5EA4                            __end_of_xtoa 5456  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0038  
               __end_of_TMR2_Initialize AA8A                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button A19C                _TMR5_SetInterruptHandler A6AE  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 009C                       _port_data_dma_ptr AB68  
                   ??_UART2_rx_vect_isr 003D                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize A544                         _PWM8_Initialize AAA0  
                      _UART1_Initialize 9FC4                       _UART2_tx_vect_isr A7C8  
                    _UART2_Transmit_ISR A518                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 9ACC                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue A0DA                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0038  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1017 9D54  
                                _RB6PPS 003A0E                                  i1l1205 7F0E  
                  _start_switch_handler A936                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize A096  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright AB30                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u910_20 826C  
                                u910_21 8266                                  u914_24 834C  
                                u914_25 8348                                  u907_28 824C  
                                u940_48 A900                                  u932_48 A8DC  
                                u934_28 A870                                  u943_28 A894  
                                u884_20 A3A4                    __size_of_hid_display 0102  
                                u884_26 A3A6                                  u968_44 990C  
                                u968_45 9906                        __end_of___xxtofl 71B8  
 __end_of_ADCC_DischargeSampleCapacitor AB9E  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor AB96                __end_of_send_lcd_cmd_dma 9DB4  
                       _TMR3_WriteTimer A1DC                     ??_UART2_tx_vect_isr 003D  
             __end_of_UART2_rx_vect_isr A818              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize AB5E                        _UART2_Initialize 9BF4  
                                _WaitMs A2C8                         _conv_raw_result 4770  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 7CE0                                  ___fleq 8EB6  
                     _ADCC_ThresholdISR 99FC                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 9564                                  _efgtoa 0000  
                                _floorf 57F8                      ?_ADCC_ThresholdISR 0038  
                                _memset 5EA4                    __size_of_help_button 0038  
                                clear_0 8992                                  clear_1 89A6  
                                clear_2 89B8                                  clear_3 89C4  
                                clear_4 89D0                                  clear_5 89DC  
                                clear_6 89E8                                  clear_7 89F4  
             __end_of_port_data_dma_ptr AB72                                  _printf 9B30  
                    _eaDogM_WriteString 92F2                                  _strcpy 8DE2  
                             ?_ADCC_ISR 0038                                  _strlen 9398  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize 9990                          _PMD_Initialize AACC  
             __end_of_UART2_tx_vect_isr A7F0                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0038  
                __end_of_start_adc_scan 9B30                            __mediumconst FC58  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 9CAC  
                      __end_of_vfprintf 9248                              _StartTimer A11C  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize A050  
                     _SYSTEM_Initialize 9EA6                              __accesstop 0060  
               __end_of__initialization 8A06                               ?_INT0_ISR 0038  
                             ?_INT1_ISR 0038                    __end_of_display_help ABAE  
                  __end_of_display_info ABA6               __end_of_CLKREF_Initialize AB68  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer A19C                   _set_temp_display_help AB12  
                      _clear_hid_pflags A83C                   __end_of_TMR3_CallBack A8CC  
             __end_of_ADCC_ThresholdISR 9A66                      __size_of_calc_bsoc 0686  
                __end_of_ringBufS_flush 95F6                          __pcstackCOMRAM 0038  
                            ___inthi_sp 10C2                              ___intlo_sp 1861  
                          __pidataBANK0 A292                            __pidataBANK1 8D02  
                          __pidataBANK2 8F7A             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf 919C                               ?_TMR3_ISR 0038  
                             ?_TMR5_ISR 0038                               ?_TMR6_ISR 0038  
                        ivt0x8_undefint 00AC                           __end_of_fputc 85C2  
                         __end_of_fputs 94D2                           __end_of_srand A368  
                 __end_of_TMR5_CallBack A8A8                           __end_of_putch AA3E  
               __end_of_PWM8_Initialize AAB6                 __end_of_TMR6_Initialize A56E  
                     _adc_int_t_handler 98A8                  __end_of_PMD_Initialize AAE0  
                            __end_of_bp FDC1                              ??_ADCC_ISR 0038  
                 __end_of_TMR6_CallBack A914             __size_of_EXT_INT_Initialize 0034  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR AB80  
                 TMR3_ISR@CountCallBack 00BC                          _clear_adc_scan ABBE  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B1               __end_of_SYSTEM_Initialize 9EF0  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer A21C                              __pbssBANK0 0060  
                            __pbssBANK1 01DF                              __pbssBANK2 02BC  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 6DA2  
               __end_of_conv_raw_result 4C1C                   _INT0_InterruptHandler 00B7  
                            ??_INT0_ISR 0038                              ??_INT1_ISR 003E  
                     __end_of_TimerDone A60E                        _DMA1_DMADCNT_ISR AB74  
                    __size_of_init_bsoc 0170              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma A3D0                   __end_of_wait_lcd_done AA08  
      __end_of_TMR3_SetInterruptHandler A6FE                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler A6AE                              ??_TMR3_ISR 02E5  
               __end_of_ADCC_Initialize 99FA                              ??_TMR5_ISR 0042  
             __end_of_adc_int_t_handler 9926                              ??_TMR6_ISR 003D  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler A776   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler A74E                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR AA08                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan ABC4  
                        ?_DMA1_DMAA_ISR 0038                        _DMA1_DMASCNT_ISR AB50  
                               u1160_20 4050                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 u1162_28 A8B8  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               u1158_20 3FA8                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0038  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 41F6  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch A4BE  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer A1DC  
               __size_of_switch_handler 013C                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one AB12              __end_of_set_load_relay_two AB02  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 788A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim AA5A                                 __Lparam 0000  
              __end_of_UART1_Initialize A00A                       __end_of_hid_input 9718  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 644E  
                               ___fladd 33B4                                 ___aomod 6942  
                               ___fldiv 41F6                                 ___awdiv 7FA6  
                               ___flneg 9EF0                                 ___awmod 85C2  
                               ___flmul 2B8A                                 ___flsub 9F7E  
                               ___fltol 79FE                                 ___lodiv 770A  
                               ___lomod 80F4               __end_of_UART1_Receive_ISR AA24  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 8D02                                 __pcinit 88FE  
              __end_of_mode_lamp_bright AB3E                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand AB22  
                               __ramtop 2000                                 __ptext0 21F0  
                               __ptext1 A818                                 __ptext2 A936  
                               __ptext3 9ACC                                 __ptext4 AAE0  
                               __ptext5 AB96                                 __ptext6 A334  
                               __ptext7 AAF2                                 __ptext8 AB02  
                               __ptext9 A3D0                       _UART2_Receive_ISR A9CE  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize AAB6                            __size_of_abs 0046  
                               us608999 6B70                            __size_of_pad 0114  
                     __end_of_init_bsoc 7CE0                                 _isalpha A096  
                               _isdigit A460                                 _ivln2_h FDC1  
                               us597999 66B8                                 us693999 7874  
                             _T3CONbits 003FA6                                 us698999 8224  
                               _mode_sw 002E                       __end_of_lp_filter 7574  
                               _islower A400                                 _isspace 9DB4  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 9C52                                 _isupper A430  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 8A0C  
                               _tolower 9824                   __size_of_display_help 0008  
                               _utctime 0090                   __size_of_display_info 0008  
                               _strncmp 6B82                                 _toupper 97A0  
                  end_of_initialization 8A06               __size_of_convert_adc_data 00B8  
                    _check_enter_button A15C                               i1u1171_20 7F04  
   __end_of_UART2_SetRxInterruptHandler A65E             _UART2_SetRxInterruptHandler A636  
                     __end_of_set_vterm A992                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd ABD0  
             __end_of_UART2_Receive_ISR A9EC                          wdtdelay@dcount 0094  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 003E  
                 _INT1_InterruptHandler 00B4                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc ABD6                _TMR3_SetInterruptHandler A6D6  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler A686  
                          _display_help ABA6                   _TMR5_InterruptHandler 009F  
                          _display_info AB9E    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags A860                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler A79E             _ADCC_SetADIInterruptHandler A776  
                            _update_lcd 87EE                         _calc_model_data 5456  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc A818                         _DMA1_Initialize 9926  
                            _start_bsoc A914                         _SPI1_Initialize AA8A  
                 __end_of_get_vterm_ptr A4BE                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs A2FE  
          __end_of_INTERRUPT_Initialize 9ACC                              _vterm_dump 8370  
                        __end_of___flge 7E42                          __end_of___fleq 8F7A  
  __end_of_INT0_DefaultInterruptHandler ABE4   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler ABE2              __size_of_UART1_Receive_ISR 001C  
                       _DMA2_Initialize 9CAC                           __pidataBIGRAM 71B8  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 5B64  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0074  
                        __end_of_memset 6190                          __end_of_printf 9B92  
              __end_of_DMA1_DMADCNT_ISR AB7E             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack A8F0                          __end_of_strcpy 8EB6  
                        __end_of_strlen 943A                     start_initialization 88FE  
  __end_of_TMR5_DefaultInterruptHandler A3D0   __size_of_TMR5_DefaultInterruptHandler 0034  
          _TMR5_DefaultInterruptHandler A39C         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 9F7E                   __end_of_INT1_CallBack A884  
             __size_of_set_display_info 001E                             __end_of_pad 87EE  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd A5BE  
                        _switch_handler 8234           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 006C  
                 __end_of___fpclassifyf 770A                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR AB5E                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR AB8C                     __end_of_hid_display 8C18  
            __end_of_send_port_data_dma 9E58                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone A5E6                           _ringBufS_init A5BE  
                           __pdataBANK0 00C6                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize A39C  
               __end_of_calc_model_data 57F8                     __end_of_help_button A292  
       __end_of_eaDogM_WriteStringAtPos A334                     __end_of_BVSOC_TABLE FD29  
                  calc_model_data@bcror 0088                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize 9990                    calc_model_data@bvror 008C  
                           __pbssCOMRAM 0021        __end_of_INT0_SetInterruptHandler A74E  
                         __pcstackBANK2 02E5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8370  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize AAA0  
              _UART1_RxInterruptHandler 00AB                _UART2_TxInterruptHandler 00AE  
                             __end_of_T FDB9                        _convert_adc_data 9036  
                             _calc_bsoc 3B70               __size_of_ringBufS_put_dma 00AA  
                          _init_display 8C18                  __end_of_DMA1_DMAOR_ISR AB96  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A2  
                    calc_ror_data@bcror 0080                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 9D06                      calc_ror_data@bvror 0084  
                _PIN_MANAGER_Initialize 95F6                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set ABCA                           __pmediumconst FC58  
                             __ptext100 73B8                               __ptext101 9F7E  
                             __ptext110 A544                               __ptext102 33B4  
                             __ptext111 A686                               __ptext103 2B8A  
                             __ptext120 95F6                               __ptext112 A00A  
                             __ptext104 9EA6                               __ptext121 AAB6  
                             __ptext113 A6AE                               __ptext105 9BF4  
                             __ptext130 9990                               __ptext122 9A66  
                             __ptext114 A050                               __ptext106 A60E  
                             __ptext131 A74E                               __ptext123 ABB6  
                             __ptext115 A6D6                               __ptext107 A636  
                             __ptext140 A39C                               __ptext132 A776  
                             __ptext124 A368                               __ptext116 AA72  
                             __ptext108 9FC4                               __ptext141 7E44  
                             __ptext133 A21C                               __ptext125 A6FE  
                             __ptext117 AA8A                               __ptext109 A65E  
                             __ptext150 ABE2                               __ptext142 A1DC  
                             __ptext134 A860                               __ptext126 A726  
                             __ptext118 AAA0                               __ptext151 ABD8  
                             __ptext143 A8A8                               __ptext135 ABDE  
                             __ptext127 9CAC                               __ptext119 AACC  
                             __ptext160 A518                               __ptext152 A4EC  
                             __ptext144 ABE0                               __ptext136 8234  
                             __ptext128 9926                               __ptext161 A7F0  
                             __ptext153 98A8                               __ptext145 3B70  
                             __ptext137 9D08                               __ptext129 AB5E  
                             __ptext170 0000                               __ptext162 A9CE  
                             __ptext154 ABE4                               __ptext146 9E06  
                             __ptext138 A19C                               __ptext163 AA40  
                             __ptext155 ABE6                               __ptext147 AB68  
                             __ptext139 A884                               __ptext164 A8F0  
                             __ptext156 99FC                               __ptext148 AB40  
                             __ptext165 9E58                               __ptext157 A7A0  
                             __ptext149 A8CC                               __ptext166 AB50  
                             __ptext158 AA08                               __ptext167 AB74  
                             __ptext159 A7C8                               __ptext168 AB80  
                             __ptext169 AB8C                               _hid_input 9688  
                    __end_of_StartTimer A15C                      _set_load_relay_one AB02  
                    _set_load_relay_two AAF2                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR A4EC  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 0078  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7B70                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 73B8  
                           _hid_display 8B16                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 9A66  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0038                                _INT0_ISR AB40  
                              _INT1_ISR A21C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01DF                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack A8A8                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u971_48 A504  
              __size_of_TMR5_Initialize 0046                                i2u973_48 9A32  
                              i2u973_49 9A46                                i2u975_48 A7B4  
                              i2u977_48 A7DC                                i2u979_48 A804  
                             _set_vterm A974                     __size_of_update_lcd 0110  
                           _help_button A25A                                _TMR3_ISR 7E44  
                           _BVSOC_TABLE FC59                                _TMR5_ISR 9D08  
                              _TMR6_ISR AA40                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack A884                              _ADCON0bits 003EF8  
                    __end_of_check_help 6FB4                               _start_lcd ABCA  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack A8F0                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc ABD0  
                      _set_display_info A992                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 8912                               copy_data1 8938  
                             copy_data2 895A                               copy_data3 897C  
              _INT0_SetInterruptHandler A726                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler A636             _UART2_SetTxInterruptHandler A60E  
                          _uart1RxCount 0035                            _uart2RxCount 002F  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done A9EC                            _send_lcd_cmd A596  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler ABE6  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                      __end_of_get_switch A4EA  
                 __end_of_DMA1_DMAA_ISR AB8A                      ___fpclassifyf@F463 007C  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 6FB4                       ?_DMA1_DMADCNT_ISR 0038  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand AB30                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 003E                                __ptext10 8C18  
                              __ptext11 A56E                                __ptext20 AB22  
                              __ptext12 A596                                __ptext21 9036  
                              __ptext13 A956                                __ptext30 A2FE  
                              __ptext22 A83C                                __ptext14 A5BE  
                              __ptext31 9D62                                __ptext23 ABBE  
                              __ptext15 7B70                                __ptext40 919C  
                              __ptext32 A9EC                                __ptext24 6DA2  
                              __ptext16 94D2                                __ptext41 1244  
                              __ptext33 9C52                                __ptext25 8370  
                              __ptext17 8B16                                __ptext50 6190  
                              __ptext42 509C                                __ptext34 92F2  
                              __ptext26 8A0C                                __ptext18 9688  
                              __ptext51 0000                                __ptext43 97A0  
                              __ptext35 ABC4                                __ptext27 A490  
                              __ptext19 A4BE                                __ptext60 85C2  
                              __ptext52 9824                                __ptext44 A400  
                              __ptext36 ABCA                                __ptext28 A2C8  
                              __ptext61 7FA6                                __ptext53 A430  
                              __ptext45 A096                                __ptext37 9564  
                              __ptext29 87EE                                __ptext70 849E  
                              __ptext62 4C1C                                __ptext54 8DE2  
                              __ptext46 5B64                                __ptext38 5EA4  
                              __ptext71 AA24                                __ptext63 9F38  
                              __ptext55 57F8                                __ptext47 80F4  
                              __ptext39 9B30                                __ptext80 AB30  
                              __ptext72 9248                                __ptext64 6942  
                              __ptext56 7574                                __ptext48 770A  
                              __ptext81 A0DA                                __ptext73 66CE  
                              __ptext65 644E                                __ptext57 79FE  
                              __ptext49 6B82                                __ptext90 90EE  
                              __ptext82 A25A                                __ptext74 9DB4  
                              __ptext66 9718                                __ptext58 9EF0  
                              __ptext91 4770                                __ptext83 A5E6  
                              __ptext75 A460                                __ptext67 86DA  
                              __ptext59 8EB6                                __ptext92 9B92  
                              __ptext84 A11C                                __ptext76 A974  
                              __ptext68 9398                                __ptext93 A9B0  
                              __ptext85 AB9E                                __ptext77 AB12  
                              __ptext69 943A                                __ptext94 6FB4  
                              __ptext86 ABA6                                __ptext78 A992  
                              __ptext95 41F6                                __ptext87 A15C  
                              __ptext79 AA5A                                __ptext96 7CE0  
                              __ptext88 ABAE                                __ptext97 5456  
                              __ptext89 788A                                __ptext98 ABD0  
                              __ptext99 A914                        __size_of_isupper 0030  
                              us1013999 4C36                                us1103999 511C  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1082999 61A2                                us1094999 5BCA  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 9248                    __end_of_Volts_to_SOC 9564  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 099A                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0038                   __end_of_init_port_dma A400  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00A8                               stoa@F1166 00EE  
                    ??_DMA1_DMASCNT_ISR 003E            __end_of_ADCC_StartConversion AAF2  
                              _spi_link 0060                                _wdtdelay 9C52  
            __end_of_UART2_Transmit_ISR A544                                _vfprintf 919C  
              __end_of_convert_adc_data 90EE              __end_of_PWM8_LoadDutyValue A11C  
  __end_of_TMR3_DefaultInterruptHandler ABE2   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler ABE0    __end_of_INT1_DefaultInterruptHandler ABE0  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler ABDE  
                    _send_port_data_dma 9E06                           ??_Default_ISR 0038  
                           _uart1RxHead 0037                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0031                             _uart1RxTail 0036  
                        _get_raw_result A9B0                             _uart2TxHead 0034  
                           _uart2RxTail 0030                             _uart2TxTail 0033  
                          _wait_lcd_set ABC4                        Volts_to_SOC@slot 002D  
                    _EXT_INT_Initialize A368    __end_of_TMR6_DefaultInterruptHandler 9EA6  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler 9E58  
  __end_of_ADCC_DefaultInterruptHandler ABE6   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler ABE4                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long A56E  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help AB22  
                 __end_of_calc_ror_data 79FE                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 9398                   __end_of_mode_lamp_dim AA72  
               __end_of_adc_int_handler ABE8                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 88FE  
                _uart2TxBufferRemaining 0032                      __end_of_static_soc A83C  
                    __end_of_start_bsoc A936                          _FVR_Initialize ABB6  
                __end_of_get_raw_result A9CE                        _send_lcd_cmd_dma 9D62  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0029  
      __end_of_INT1_SetInterruptHandler A726               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 003E               __end_of_send_lcd_cmd_long A596  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR ABDE  
        __end_of_PIN_MANAGER_Initialize 9688               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 849E                 _eaDogM_WriteStringAtPos A2FE  
                         _get_vterm_ptr A490                          _check_adc_scan ABAE  
             __size_of_UART2_Initialize 005E  
