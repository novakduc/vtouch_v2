

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 19 16:49:12 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=4,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=4,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=4,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=4,class=CODE,delta=1
   111                           	psect	text90,global,reloc=4,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=4,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=4,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=4,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=4,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=4,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=4,class=CODE,delta=1
   125                           	psect	text104,global,reloc=4,class=CODE,delta=1
   126                           	psect	text105,global,reloc=4,class=CODE,delta=1
   127                           	psect	text106,global,reloc=4,class=CODE,delta=1
   128                           	psect	text107,global,reloc=4,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   133                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   136                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   137  0000                     
   138                           ; Version 2.05
   139                           ; Generated 20/12/2018 GMT
   140                           ; 
   141                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   142                           ; All rights reserved.
   143                           ; 
   144                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   145                           ; 
   146                           ; Redistribution and use in source and binary forms, with or without modification, are
   147                           ; permitted provided that the following conditions are met:
   148                           ; 
   149                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   150                           ;        conditions and the following disclaimer.
   151                           ; 
   152                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   153                           ;        of conditions and the following disclaimer in the documentation and/or other
   154                           ;        materials provided with the distribution.
   155                           ; 
   156                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   157                           ;        software without specific prior written permission.
   158                           ; 
   159                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   160                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   161                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   162                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   163                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   164                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   165                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   166                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   167                           ; 
   168                           ; 
   169                           ; Code-generator required, PIC18F57K42 Definitions
   170                           ; 
   171                           ; SFR Addresses
   172  0000                     
   173 ;;_mode	offset	0
   174 ;;_rxData	offset	0
   175 ;;_t_link	offset=-1 (param)
   176 ;;_k	offset	0
   177 ;;_checksum	offset	2
   178 ;;_i	offset	4
   179 ;;_byte_block	offset=-2 (param)
   180 ;;_length	offset=-3 (param)
   181 ;;_fake	offset=-4 (param)
   182 ;;_s_uart	offset=-5 (param)
   183 ;;_i	offset	0
   184 ;;_sum	offset	2
   185 ;;_byte_block	offset=-2 (param)
   186 ;;_byte_count	offset=-4 (param)
   187 ;;_bufData	offset=-1 (param)
   188 ;;_txData	offset=-1 (param)
   189 ;;_bufData	offset=-1 (param)
   190 ;;_stream	offset=-6 (param)
   191 ;;_function	offset=-7 (param)
   192 ;;_f	offset	0
   193 ;;_ap	offset	5
   194 ;;_s	offset=-2 (param)
   195 ;;_fmt	offset=-3 (param)
   196 ;;_rxData	offset	0
   197 ;;_r_link	offset=-1 (param)
   198 ;;_txData	offset=-1 (param)
   199 ;;_rxData	offset	0
   200 ;;_m_link	offset=-1 (param)
   201 ;;_byte_block	offset=-1 (param)
   202 ;;_clear	offset=-2 (param)
   203 ;;_numMilliseconds	offset=-2 (param)
   204 ;;_timer	offset=-1 (param)
   205 ;;_timer	offset=-1 (param)
   206 ;;_count	offset=-3 (param)
   207 ;;_readValue	offset	0
   208 ;;_readValue	offset	0
   209 ;;_cmd	offset=-1 (param)
   210 ;;_cmd	offset=-1 (param)
   211 ;;_data	offset=-1 (param)
   212 ;;__this	offset=-2 (param)
   213 ;;_r	offset=-1 (param)
   214 ;;_c	offset=-2 (param)
   215 ;;_strPtr	offset=-3 (param)
   216 ;;_strPtr	offset=-1 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_strPtr	offset=-1 (param)
   219 ;;_delay	offset=-4 (param)
   220 ;;__this	offset=-2 (param)
   221 ;;_clearBuffer	offset=-3 (param)
   222 ;;_s	offset	0
   223 ;;_k	offset	2
   224 ;;_dest	offset=-2 (param)
   225 ;;_c	offset=-4 (param)
   226 ;;_n	offset=-6 (param)
   227 ;;_ap	offset	0
   228 ;;_fmt	offset=-2 (param)
   229 ;;_cfmt	offset	0
   230 ;;_fp	offset=-2 (param)
   231 ;;_fmt	offset=-3 (param)
   232 ;;_ap	offset=-5 (param)
   233 ;;_ll	offset	0
   234 ;;_cp	offset	8
   235 ;;_c	offset	10
   236 ;;_fp	offset=-2 (param)
   237 ;;_fmt	offset=-4 (param)
   238 ;;_ap	offset=-6 (param)
   239 ;;_r	offset	0
   240 ;;_l	offset	1
   241 ;;__l	offset=-1 (param)
   242 ;;__r	offset=-2 (param)
   243 ;;_n	offset=-4 (param)
   244 ;;_nuls	offset	0
   245 ;;_l	offset	7
   246 ;;_p	offset	9
   247 ;;_cp	offset	11
   248 ;;_w	offset	13
   249 ;;_i	offset	15
   250 ;;_fp	offset=-2 (param)
   251 ;;_s	offset=-4 (param)
   252 ;;_dtoa$3806	offset	0
   253 ;;_n	offset	2
   254 ;;_i	offset	10
   255 ;;_s	offset	12
   256 ;;_w	offset	14
   257 ;;_p	offset	16
   258 ;;_fp	offset=-2 (param)
   259 ;;_d	offset=-10 (param)
   260 ;;_a	offset=-2 (param)
   261 ;;_sign	offset	0
   262 ;;_counter	offset	1
   263 ;;_dividend	offset=-8 (param)
   264 ;;_divisor	offset=-16 (param)
   265 ;;_quotient	offset	0
   266 ;;_sign	offset	8
   267 ;;_counter	offset	9
   268 ;;_dividend	offset=-8 (param)
   269 ;;_divisor	offset=-16 (param)
   270 ;;_w	offset	0
   271 ;;_fp	offset=-2 (param)
   272 ;;_c	offset=-3 (param)
   273 ;;_w	offset	0
   274 ;;_i	offset	2
   275 ;;_fp	offset=-2 (param)
   276 ;;_buf	offset=-4 (param)
   277 ;;_p	offset=-6 (param)
   278 ;;_a	offset	0
   279 ;;_s	offset=-2 (param)
   280 ;;_i	offset	0
   281 ;;_c	offset	2
   282 ;;_s	offset=-2 (param)
   283 ;;_fp	offset=-4 (param)
   284 ;;_c	offset=-2 (param)
   285 ;;_fp	offset=-4 (param)
   286 ;;_c	offset=-1 (param)
   287 ;;__this	offset=-2 (param)
   288 ;;_c	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_InterruptHandler	offset=-3 (param)
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_InterruptHandler	offset=-3 (param)
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_state	offset	0
   296 ;;_InterruptHandler	offset=-3 (param)
   297 ;;_InterruptHandler	offset=-3 (param)
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_i	offset	0
   301 ;;_timerVal	offset=-2 (param)
   302                           
   303                           	psect	idataCOMRAM
   304  0061D6                     __pidataCOMRAM:
   305                           	opt callstack 0
   306                           
   307                           ;initializer for r_protocol@retry
   308  0061D6  03                 	db	3
   309                           
   310                           	psect	idataBANK0
   311  0055C8                     __pidataBANK0:
   312                           	opt callstack 0
   313                           
   314                           ;initializer for stoa@F1142
   315  0055C8  28                 	db	40
   316  0055C9  6E                 	db	110
   317  0055CA  75                 	db	117
   318  0055CB  6C                 	db	108
   319  0055CC  6C                 	db	108
   320  0055CD  29                 	db	41
   321  0055CE  00                 	db	0
   322                           
   323                           ;initializer for _V
   324  0055CF  00                 	db	0
   325  0055D0  00                 	db	0
   326  0055D1  00                 	db	0
   327  0055D2  00                 	db	0
   328  0055D3  00                 	db	0
   329  0055D4  00                 	db	0
   330  0055D5  00                 	db	0
   331  0055D6  00                 	db	0
   332  0055D7  00                 	db	0
   333  0055D8  00                 	db	0
   334  0055D9  00                 	db	0
   335  0055DA  00                 	db	0
   336  0055DB  00                 	db	0
   337  0055DC  00                 	db	0
   338  0055DD  00                 	db	0
   339  0055DE  00                 	db	0
   340  0055DF  00                 	db	0
   341  0055E0  00                 	db	0
   342  0055E1  00                 	db	0
   343  0055E2  00                 	db	0
   344  0055E3  00                 	db	0
   345  0055E4  00                 	db	0
   346  0055E5  00                 	db	0
   347  0055E6  00                 	db	0
   348  0055E7  00                 	db	0
   349  0055E8  00                 	db	0
   350  0055E9  00                 	db	0
   351  0055EA  00                 	db	0
   352  0055EB  00                 	db	0
   353  0055EC  00                 	db	0
   354  0055ED  00                 	db	0
   355  0055EE  00                 	db	0
   356  0055EF  00                 	db	0
   357  0055F0  00                 	db	0
   358  0055F1  00                 	db	0
   359  0055F2  00                 	db	0
   360  0055F3  00                 	db	0
   361  0055F4  00                 	db	0
   362  0055F5  00                 	db	0
   363  0055F6  00                 	db	0
   364  0055F7  00                 	db	0
   365  0055F8  00                 	db	0
   366  0055F9  00                 	db	0
   367  0055FA  00                 	db	0
   368  0055FB  00                 	db	0
   369  0055FC  00                 	db	0
   370  0055FD  00                 	db	0
   371  0055FE  00                 	db	0
   372  0055FF  00                 	db	0
   373  005600  00                 	db	0
   374  005601  00                 	db	0
   375  005602  00                 	db	0
   376  005603  00                 	db	0
   377  005604  00                 	db	0
   378  005605  00                 	db	0
   379  005606  00                 	db	0
   380  005607  00                 	db	0
   381  005608  00                 	db	0
   382  005609  00                 	db	0
   383  00560A  00                 	db	0
   384  00560B  00                 	db	0
   385  00560C  00                 	db	0
   386  00560D  00                 	db	0
   387  00560E  00                 	db	0
   388  00560F  00                 	db	0
   389  005610  00                 	db	0
   390  005611  00                 	db	0
   391  005612  00                 	db	0
   392  005613  00                 	db	0
   393  005614  0000               	dw	0
   394  005616  0000               	dw	0
   395  005618  0000               	dw	0
   396  00561A  0000               	dw	0
   397  00561C  00                 	db	0
   398  00561D  00                 	db	0
   399  00561E  00                 	db	0
   400  00561F  00                 	db	0
   401  005620  00                 	db	0
   402  005621  0000               	dw	0
   403  005623  0000               	dw	0
   404  005625  00                 	db	0
   405  005626  00                 	db	0
   406  005627  01                 	db	1
   407                           
   408                           	psect	idataBANK1
   409  004EB2                     __pidataBANK1:
   410                           	opt callstack 0
   411                           
   412                           ;initializer for _H10
   413  004EB2  0000               	dw	0
   414  004EB4  0001               	dw	1
   415  004EB6  0000               	dw	0
   416  004EB8  01                 	db	1
   417  004EB9  80                 	db	128
   418  004EBA  01                 	db	1
   419  004EBB  81                 	db	129
   420  004EBC  00                 	db	0
   421  004EBD  00                 	db	0
   422  004EBE  0A                 	db	10
   423  004EBF  0000               	dw	0
   424  004EC1  00                 	db	0
   425  004EC2  00                 	db	0
   426  004EC3  00                 	db	0
   427  004EC4  00                 	db	0
   428  004EC5  00                 	db	0
   429  004EC6  00                 	db	0
   430  004EC7  00                 	db	0
   431  004EC8  00                 	db	0
   432  004EC9  00                 	db	0
   433  004ECA  00                 	db	0
   434  004ECB  0A                 	db	10
   435  004ECC  0000               	dw	0
   436  004ECE  0001               	dw	1
   437  004ED0  0000               	dw	0
   438  004ED2  01                 	db	1
   439  004ED3  80                 	db	128
   440  004ED4  00                 	db	0
   441  004ED5  01                 	db	1
   442  004ED6  00                 	db	0
   443  004ED7  00                 	db	0
   444  004ED8  0A                 	db	10
   445  004ED9  0000               	dw	0
   446  004EDB  0001               	dw	1
   447  004EDD  0000               	dw	0
   448  004EDF  01                 	db	1
   449  004EE0  80                 	db	128
   450  004EE1  01                 	db	1
   451  004EE2  81                 	db	129
   452  004EE3  00                 	db	0
   453  004EE4  80                 	db	128
   454  004EE5  0A                 	db	10
   455  004EE6  0000               	dw	0
   456  004EE8  0001               	dw	1
   457  004EEA  0000               	dw	0
   458  004EEC  01                 	db	1
   459  004EED  80                 	db	128
   460  004EEE  11                 	db	17
   461  004EEF  82                 	db	130
   462  004EF0  00                 	db	0
   463  004EF1  00                 	db	0
   464  004EF2  0A                 	db	10
   465                           
   466                           ;initializer for _H12
   467  004EF3  0000               	dw	0
   468  004EF5  00                 	db	0
   469  004EF6  01                 	db	1
   470  004EF7  0001               	dw	1
   471  004EF9  0000               	dw	0
   472  004EFB  01                 	db	1
   473  004EFC  80                 	db	128
   474  004EFD  02                 	db	2
   475  004EFE  01                 	db	1
   476  004EFF  00                 	db	0
   477  004F00  00                 	db	0
   478  004F01  0C                 	db	12
   479  004F02  0000               	dw	0
   480  004F04  00                 	db	0
   481  004F05  01                 	db	1
   482  004F06  0001               	dw	1
   483  004F08  0000               	dw	0
   484  004F0A  01                 	db	1
   485  004F0B  80                 	db	128
   486  004F0C  0D                 	db	13
   487  004F0D  81                 	db	129
   488  004F0E  00                 	db	0
   489  004F0F  00                 	db	0
   490  004F10  0C                 	db	12
   491                           
   492                           ;initializer for _H24
   493  004F11  0000               	dw	0
   494  004F13  41                 	db	65
   495  004F14  20                 	db	32
   496  004F15  30                 	db	48
   497  004F16  31                 	db	49
   498  004F17  30                 	db	48
   499  004F18  39                 	db	57
   500  004F19  31                 	db	49
   501  004F1A  31                 	db	49
   502  004F1B  30                 	db	48
   503  004F1C  38                 	db	56
   504  004F1D  34                 	db	52
   505  004F1E  36                 	db	54
   506  004F1F  30                 	db	48
   507  004F20  30                 	db	48
   508  004F21  0001               	dw	1
   509  004F23  0000               	dw	0
   510  004F25  01                 	db	1
   511  004F26  80                 	db	128
   512  004F27  12                 	db	18
   513  004F28  02                 	db	2
   514  004F29  00                 	db	0
   515  004F2A  00                 	db	0
   516  004F2B  18                 	db	24
   517                           
   518                           ;initializer for _H17
   519  004F2C  0000               	dw	0
   520  004F2E  00                 	db	0
   521  004F2F  01                 	db	1
   522  004F30  00                 	db	0
   523  004F31  01                 	db	1
   524  004F32  21                 	db	33
   525  004F33  02                 	db	2
   526  004F34  01                 	db	1
   527  004F35  0001               	dw	1
   528  004F37  0000               	dw	0
   529  004F39  01                 	db	1
   530  004F3A  80                 	db	128
   531  004F3B  0E                 	db	14
   532  004F3C  01                 	db	1
   533  004F3D  00                 	db	0
   534  004F3E  00                 	db	0
   535  004F3F  11                 	db	17
   536                           
   537                           ;initializer for _H14
   538  004F40  0000               	dw	0
   539  004F42  00                 	db	0
   540  004F43  41                 	db	65
   541  004F44  11                 	db	17
   542  004F45  01                 	db	1
   543  004F46  0001               	dw	1
   544  004F48  0000               	dw	0
   545  004F4A  01                 	db	1
   546  004F4B  80                 	db	128
   547  004F4C  04                 	db	4
   548  004F4D  01                 	db	1
   549  004F4E  00                 	db	0
   550  004F4F  00                 	db	0
   551  004F50  0E                 	db	14
   552                           
   553                           ;initializer for _H13
   554  004F51  0000               	dw	0
   555  004F53  00                 	db	0
   556  004F54  01                 	db	1
   557  004F55  21                 	db	33
   558  004F56  0001               	dw	1
   559  004F58  0000               	dw	0
   560  004F5A  01                 	db	1
   561  004F5B  80                 	db	128
   562  004F5C  0C                 	db	12
   563  004F5D  06                 	db	6
   564  004F5E  00                 	db	0
   565  004F5F  00                 	db	0
   566  004F60  0D                 	db	13
   567                           
   568                           	psect	idataBANK3
   569  005A8E                     __pidataBANK3:
   570                           	opt callstack 0
   571                           
   572                           ;initializer for _H53
   573  005A8E  0000               	dw	0
   574  005A90  00                 	db	0
   575  005A91  00                 	db	0
   576  005A92  00                 	db	0
   577  005A93  00                 	db	0
   578  005A94  00                 	db	0
   579  005A95  00                 	db	0
   580  005A96  00                 	db	0
   581  005A97  00                 	db	0
   582  005A98  00                 	db	0
   583  005A99  00                 	db	0
   584  005A9A  00                 	db	0
   585  005A9B  00                 	db	0
   586  005A9C  00                 	db	0
   587  005A9D  00                 	db	0
   588  005A9E  00                 	db	0
   589  005A9F  00                 	db	0
   590  005AA0  00                 	db	0
   591  005AA1  00                 	db	0
   592  005AA2  00                 	db	0
   593  005AA3  00                 	db	0
   594  005AA4  00                 	db	0
   595  005AA5  00                 	db	0
   596  005AA6  00                 	db	0
   597  005AA7  00                 	db	0
   598  005AA8  00                 	db	0
   599  005AA9  00                 	db	0
   600  005AAA  00                 	db	0
   601  005AAB  00                 	db	0
   602  005AAC  00                 	db	0
   603  005AAD  00                 	db	0
   604  005AAE  00                 	db	0
   605  005AAF  00                 	db	0
   606  005AB0  00                 	db	0
   607  005AB1  00                 	db	0
   608  005AB2  00                 	db	0
   609  005AB3  00                 	db	0
   610  005AB4  00                 	db	0
   611  005AB5  00                 	db	0
   612  005AB6  00                 	db	0
   613  005AB7  46                 	db	70
   614  005AB8  01                 	db	1
   615  005AB9  41                 	db	65
   616  005ABA  00                 	db	0
   617  005ABB  0001               	dw	1
   618  005ABD  0000               	dw	0
   619  005ABF  01                 	db	1
   620  005AC0  80                 	db	128
   621  005AC1  03                 	db	3
   622  005AC2  8A                 	db	138
   623  005AC3  00                 	db	0
   624  005AC4  00                 	db	0
   625  005AC5  35                 	db	53
   626  0000                     _IVTADL	set	14493
   627  0000                     _IVTADH	set	14494
   628  0000                     _IVTADU	set	14495
   629  0000                     _PIE8bits	set	14744
   630  0000                     _PIR8bits	set	14760
   631  0000                     _SCANPR	set	14839
   632  0000                     _DMA2PR	set	14836
   633  0000                     _DMA1PR	set	14835
   634  0000                     _MAINPR	set	14834
   635  0000                     _ISRPR	set	14833
   636  0000                     _PIE2bits	set	14738
   637  0000                     _PIR2bits	set	14754
   638  0000                     _PIE9bits	set	14745
   639  0000                     _PIR9bits	set	14761
   640  0000                     _PIE6bits	set	14742
   641  0000                     _PIE3bits	set	14739
   642  0000                     _PMD7	set	14791
   643  0000                     _PMD6	set	14790
   644  0000                     _PMD5	set	14789
   645  0000                     _PMD4	set	14788
   646  0000                     _PMD3	set	14787
   647  0000                     _PMD2	set	14786
   648  0000                     _PMD1	set	14785
   649  0000                     _PMD0	set	14784
   650  0000                     _OSCTUNE	set	14814
   651  0000                     _OSCFRQ	set	14815
   652  0000                     _OSCEN	set	14813
   653  0000                     _OSCCON3	set	14811
   654  0000                     _OSCCON1	set	14809
   655  0000                     _IPR8bits	set	14728
   656  0000                     _IPR9bits	set	14729
   657  0000                     _IPR7bits	set	14727
   658  0000                     _IPR5bits	set	14725
   659  0000                     _IPR1bits	set	14721
   660  0000                     _IPR3bits	set	14723
   661  0000                     _IPR6bits	set	14726
   662  0000                     _IPR2bits	set	14722
   663  0000                     _PIE7bits	set	14743
   664  0000                     _PIE5bits	set	14741
   665  0000                     _PIE1bits	set	14737
   666  0000                     _PIR7bits	set	14759
   667  0000                     _PIR5bits	set	14757
   668  0000                     _PIR1bits	set	14753
   669  0000                     _PLLR	set	118496
   670  0000                     _SPI1SDIPPS	set	15071
   671  0000                     _RC6PPS	set	14870
   672  0000                     _RC5PPS	set	14869
   673  0000                     _RA6PPS	set	14854
   674  0000                     _RA5PPS	set	14853
   675  0000                     _RA4PPS	set	14852
   676  0000                     _SPI1SCKPPS	set	15070
   677  0000                     _U1RXPPS	set	15077
   678  0000                     _INT1PPS	set	15041
   679  0000                     _INT2PPS	set	15042
   680  0000                     _INT0PPS	set	15040
   681  0000                     _RC3PPS	set	14867
   682  0000                     _RB6PPS	set	14862
   683  0000                     _U2RXPPS	set	15080
   684  0000                     _SLRCONF	set	14995
   685  0000                     _SLRCONE	set	14979
   686  0000                     _SLRCOND	set	14963
   687  0000                     _SLRCONC	set	14947
   688  0000                     _SLRCONB	set	14931
   689  0000                     _SLRCONA	set	14915
   690  0000                     _ODCOND	set	14962
   691  0000                     _ODCONC	set	14946
   692  0000                     _ODCONB	set	14930
   693  0000                     _ODCONA	set	14914
   694  0000                     _ODCONF	set	14994
   695  0000                     _ODCONE	set	14978
   696  0000                     _WPUC	set	14945
   697  0000                     _WPUA	set	14913
   698  0000                     _WPUB	set	14929
   699  0000                     _WPUE	set	14977
   700  0000                     _WPUF	set	14993
   701  0000                     _WPUD	set	14961
   702  0000                     _ANSELA	set	14912
   703  0000                     _ANSELF	set	14992
   704  0000                     _ANSELE	set	14976
   705  0000                     _ANSELB	set	14928
   706  0000                     _ANSELC	set	14944
   707  0000                     _ANSELD	set	14960
   708  0000                     _DMA1SSA	set	15353
   709  0000                     _DMA1DSZ	set	15342
   710  0000                     _DMA1SSZ	set	15351
   711  0000                     _DMA1DSA	set	15344
   712  0000                     _DMA1CON0bits	set	15356
   713  0000                     _DMA1CON1bits	set	15357
   714  0000                     _DMA1CON0	set	15356
   715  0000                     _DMA1AIRQ	set	15358
   716  0000                     _DMA1SIRQ	set	15359
   717  0000                     _DMA1CON1	set	15357
   718  0000                     _CLC1CON	set	15476
   719  0000                     _CLC1GLS3	set	15485
   720  0000                     _CLC1GLS2	set	15484
   721  0000                     _CLC1GLS1	set	15483
   722  0000                     _CLC1GLS0	set	15482
   723  0000                     _CLC1SEL3	set	15481
   724  0000                     _CLC1SEL2	set	15480
   725  0000                     _CLC1SEL1	set	15479
   726  0000                     _CLC1SEL0	set	15478
   727  0000                     _CLC1POL	set	15477
   728  0000                     _CLKRCON	set	15589
   729  0000                     _CLKRCLK	set	15590
   730  0000                     _MD1CARL	set	15613
   731  0000                     _MD1CARH	set	15614
   732  0000                     _MD1SRC	set	15612
   733  0000                     _MD1CON1bits	set	15611
   734  0000                     _MD1CON0bits	set	15610
   735  0000                     _SPI1INTFbits	set	15642
   736  0000                     _SPI1RXB	set	15632
   737  0000                     _SPI1TXB	set	15633
   738  0000                     _SPI1TCNTL	set	15634
   739  0000                     _SPI1CON0	set	15636
   740  0000                     _SPI1CLK	set	15644
   741  0000                     _SPI1BAUD	set	15641
   742  0000                     _SPI1CON2	set	15638
   743  0000                     _SPI1CON1	set	15637
   744  0000                     _U2RXB	set	15824
   745  0000                     _U2TXB	set	15826
   746  0000                     _U2ERRIE	set	15842
   747  0000                     _U2ERRIR	set	15841
   748  0000                     _U2UIR	set	15840
   749  0000                     _U2FIFO	set	15839
   750  0000                     _U2BRGH	set	15838
   751  0000                     _U2BRGL	set	15837
   752  0000                     _U2CON2	set	15836
   753  0000                     _U2CON1	set	15835
   754  0000                     _U2CON0	set	15834
   755  0000                     _U2P3L	set	15832
   756  0000                     _U2P2L	set	15830
   757  0000                     _U2P1L	set	15828
   758  0000                     _U1RXB	set	15848
   759  0000                     _U1TXB	set	15850
   760  0000                     _U1ERRIE	set	15866
   761  0000                     _U1ERRIR	set	15865
   762  0000                     _U1UIR	set	15864
   763  0000                     _U1FIFO	set	15863
   764  0000                     _U1BRGH	set	15862
   765  0000                     _U1BRGL	set	15861
   766  0000                     _U1CON2	set	15860
   767  0000                     _U1CON1	set	15859
   768  0000                     _U1CON0	set	15858
   769  0000                     _U1P3H	set	15857
   770  0000                     _U1P3L	set	15856
   771  0000                     _U1P2H	set	15855
   772  0000                     _U1P2L	set	15854
   773  0000                     _U1P1H	set	15853
   774  0000                     _U1P1L	set	15852
   775  0000                     _ADCON0	set	16120
   776  0000                     _ADCLK	set	16127
   777  0000                     _ADACT	set	16126
   778  0000                     _ADREF	set	16125
   779  0000                     _ADSTAT	set	16124
   780  0000                     _ADCON3	set	16123
   781  0000                     _ADCON2	set	16122
   782  0000                     _ADCON1	set	16121
   783  0000                     _ADPREH	set	16119
   784  0000                     _ADPREL	set	16118
   785  0000                     _ADCAP	set	16117
   786  0000                     _ADACQH	set	16116
   787  0000                     _ADACQL	set	16115
   788  0000                     _ADPCH	set	16113
   789  0000                     _ADRPT	set	16108
   790  0000                     _ADACCU	set	16106
   791  0000                     _ADSTPTH	set	16101
   792  0000                     _ADSTPTL	set	16100
   793  0000                     _ADUTHH	set	16097
   794  0000                     _ADUTHL	set	16096
   795  0000                     _ADLTHH	set	16095
   796  0000                     _ADLTHL	set	16094
   797  0000                     _NCO1CONbits	set	16190
   798  0000                     _NCO1INCL	set	16187
   799  0000                     _NCO1INCH	set	16188
   800  0000                     _NCO1INCU	set	16189
   801  0000                     _NCO1ACCL	set	16184
   802  0000                     _NCO1ACCH	set	16185
   803  0000                     _NCO1ACCU	set	16186
   804  0000                     _NCO1CLK	set	16191
   805  0000                     _NCO1CON	set	16190
   806  0000                     _LATCbits	set	16316
   807  0000                     _LATDbits	set	16317
   808  0000                     _PORTBbits	set	16331
   809  0000                     _LATEbits	set	16318
   810  0000                     _T5CONbits	set	16282
   811  0000                     _T5CON	set	16282
   812  0000                     _TMR5L	set	16280
   813  0000                     _TMR5H	set	16281
   814  0000                     _T5CLK	set	16285
   815  0000                     _T5GATE	set	16284
   816  0000                     _T5GCON	set	16283
   817  0000                     _T6CON	set	16276
   818  0000                     _T6TMR	set	16274
   819  0000                     _T6PR	set	16275
   820  0000                     _T6RST	set	16279
   821  0000                     _T6HLT	set	16277
   822  0000                     _T6CLKCON	set	16278
   823  0000                     _TRISD	set	16325
   824  0000                     _TRISC	set	16324
   825  0000                     _TRISB	set	16323
   826  0000                     _TRISA	set	16322
   827  0000                     _TRISF	set	16327
   828  0000                     _TRISE	set	16326
   829  0000                     _LATC	set	16316
   830  0000                     _LATB	set	16315
   831  0000                     _LATF	set	16319
   832  0000                     _LATA	set	16314
   833  0000                     _LATD	set	16317
   834  0000                     _LATE	set	16318
   835  0000                     _IVTLOCKbits	set	16340
   836  0000                     _IVTLOCK	set	16340
   837  0000                     _INTCON0bits	set	16338
   838  0000                     _GIE	set	130711
   839                           
   840                           	psect	smallconst
   841  002000                     __psmallconst:
   842                           	opt callstack 0
   843  002000  00                 	db	0
   844  002001                     STR_15:
   845  002001  20                 	db	32
   846  002002  52                 	db	82	;'R'
   847  002003  25                 	db	37
   848  002004  64                 	db	100	;'d'
   849  002005  20                 	db	32
   850  002006  54                 	db	84	;'T'
   851  002007  25                 	db	37
   852  002008  64                 	db	100	;'d'
   853  002009  20                 	db	32
   854  00200A  46                 	db	70	;'F'
   855  00200B  52                 	db	82	;'R'
   856  00200C  25                 	db	37
   857  00200D  64                 	db	100	;'d'
   858  00200E  20                 	db	32
   859  00200F  46                 	db	70	;'F'
   860  002010  53                 	db	83	;'S'
   861  002011  25                 	db	37
   862  002012  64                 	db	100	;'d'
   863  002013  20                 	db	32
   864  002014  23                 	db	35
   865  002015  00                 	db	0
   866  002016                     STR_9:
   867  002016  45                 	db	69	;'E'
   868  002017  20                 	db	32
   869  002018  52                 	db	82	;'R'
   870  002019  25                 	db	37
   871  00201A  64                 	db	100	;'d'
   872  00201B  20                 	db	32
   873  00201C  54                 	db	84	;'T'
   874  00201D  25                 	db	37
   875  00201E  64                 	db	100	;'d'
   876  00201F  20                 	db	32
   877  002020  45                 	db	69	;'E'
   878  002021  25                 	db	37
   879  002022  64                 	db	100	;'d'
   880  002023  20                 	db	32
   881  002024  41                 	db	65	;'A'
   882  002025  25                 	db	37
   883  002026  64                 	db	100	;'d'
   884  002027  20                 	db	32
   885  002028  23                 	db	35
   886  002029  00                 	db	0
   887  00202A                     STR_11:
   888  00202A  20                 	db	32
   889  00202B  4C                 	db	76	;'L'
   890  00202C  4F                 	db	79	;'O'
   891  00202D  47                 	db	71	;'G'
   892  00202E  20                 	db	32
   893  00202F  4D                 	db	77	;'M'
   894  002030  4F                 	db	79	;'O'
   895  002031  44                 	db	68	;'D'
   896  002032  45                 	db	69	;'E'
   897  002033  20                 	db	32
   898  002034  25                 	db	37
   899  002035  64                 	db	100	;'d'
   900  002036  20                 	db	32
   901  002037  20                 	db	32
   902  002038  20                 	db	32
   903  002039  20                 	db	32
   904  00203A  20                 	db	32
   905  00203B  23                 	db	35
   906  00203C  00                 	db	0
   907  00203D                     STR_5:
   908  00203D  20                 	db	32
   909  00203E  48                 	db	72	;'H'
   910  00203F  4F                 	db	79	;'O'
   911  002040  53                 	db	83	;'S'
   912  002041  54                 	db	84	;'T'
   913  002042  20                 	db	32
   914  002043  4D                 	db	77	;'M'
   915  002044  4F                 	db	79	;'O'
   916  002045  44                 	db	68	;'D'
   917  002046  45                 	db	69	;'E'
   918  002047  20                 	db	32
   919  002048  25                 	db	37
   920  002049  6C                 	db	108	;'l'
   921  00204A  64                 	db	100	;'d'
   922  00204B  20                 	db	32
   923  00204C  20                 	db	32
   924  00204D  20                 	db	32
   925  00204E  23                 	db	35
   926  00204F  00                 	db	0
   927  002050                     STR_12:
   928  002050  20                 	db	32
   929  002051  53                 	db	83	;'S'
   930  002052  25                 	db	37
   931  002053  64                 	db	100	;'d'
   932  002054  46                 	db	70	;'F'
   933  002055  25                 	db	37
   934  002056  64                 	db	100	;'d'
   935  002057  20                 	db	32
   936  002058  23                 	db	35
   937  002059  25                 	db	37
   938  00205A  6C                 	db	108	;'l'
   939  00205B  64                 	db	100	;'d'
   940  00205C  20                 	db	32
   941  00205D  20                 	db	32
   942  00205E  20                 	db	32
   943  00205F  20                 	db	32
   944  002060  00                 	db	0
   945  002061                     STR_1:
   946  002061  20                 	db	32
   947  002062  52                 	db	82	;'R'
   948  002063  56                 	db	86	;'V'
   949  002064  49                 	db	73	;'I'
   950  002065  20                 	db	32
   951  002066  48                 	db	72	;'H'
   952  002067  4F                 	db	79	;'O'
   953  002068  53                 	db	83	;'S'
   954  002069  54                 	db	84	;'T'
   955  00206A  20                 	db	32
   956  00206B  54                 	db	84	;'T'
   957  00206C  45                 	db	69	;'E'
   958  00206D  53                 	db	83	;'S'
   959  00206E  54                 	db	84	;'T'
   960  00206F  45                 	db	69	;'E'
   961  002070  52                 	db	82	;'R'
   962  002071  00                 	db	0
   963  002072                     STR_4:
   964  002072  20                 	db	32
   965  002073  46                 	db	70	;'F'
   966  002074  47                 	db	71	;'G'
   967  002075  42                 	db	66	;'B'
   968  002076  40                 	db	64	;'@'
   969  002077  4D                 	db	77	;'M'
   970  002078  43                 	db	67	;'C'
   971  002079  48                 	db	72	;'H'
   972  00207A  50                 	db	80	;'P'
   973  00207B  20                 	db	32
   974  00207C  46                 	db	70	;'F'
   975  00207D  41                 	db	65	;'A'
   976  00207E  42                 	db	66	;'B'
   977  00207F  34                 	db	52	;'4'
   978  002080  00                 	db	0
   979  002081                     STR_6:
   980  002081  20                 	db	32
   981  002082  53                 	db	83	;'S'
   982  002083  25                 	db	37
   983  002084  64                 	db	100	;'d'
   984  002085  46                 	db	70	;'F'
   985  002086  25                 	db	37
   986  002087  64                 	db	100	;'d'
   987  002088  20                 	db	32
   988  002089  23                 	db	35
   989  00208A  20                 	db	32
   990  00208B  20                 	db	32
   991  00208C  20                 	db	32
   992  00208D  20                 	db	32
   993  00208E  00                 	db	0
   994  00208F                     STR_2:
   995  00208F  20                 	db	32
   996  002090  56                 	db	86	;'V'
   997  002091  65                 	db	101	;'e'
   998  002092  72                 	db	114	;'r'
   999  002093  73                 	db	115	;'s'
  1000  002094  69                 	db	105	;'i'
  1001  002095  6F                 	db	111	;'o'
  1002  002096  6E                 	db	110	;'n'
  1003  002097  20                 	db	32
  1004  002098  25                 	db	37
  1005  002099  73                 	db	115	;'s'
  1006  00209A  00                 	db	0
  1007  00209B                     STR_8:
  1008  00209B  20                 	db	32
  1009  00209C  4F                 	db	79	;'O'
  1010  00209D  4B                 	db	75	;'K'
  1011  00209E  20                 	db	32
  1012  00209F  23                 	db	35
  1013  0020A0  00                 	db	0
  1014  0020A1                     STR_7:
  1015  0020A1  20                 	db	32
  1016  0020A2  4F                 	db	79	;'O'
  1017  0020A3  4B                 	db	75	;'K'
  1018  0020A4  51                 	db	81	;'Q'
  1019  0020A5  23                 	db	35
  1020  0020A6  00                 	db	0
  1021  0020A7                     STR_3:
  1022  0020A7  30                 	db	48	;'0'
  1023  0020A8  2E                 	db	46
  1024  0020A9  37                 	db	55	;'7'
  1025  0020AA  34                 	db	52	;'4'
  1026  0020AB  41                 	db	65	;'A'
  1027  0020AC  00                 	db	0
  1028  0020AD                     STR_19:
  1029  0020AD  6C                 	db	108	;'l'
  1030  0020AE  64                 	db	100	;'d'
  1031  0020AF  00                 	db	0
  1032  0020B0                     STR_23:
  1033  0020B0  6C                 	db	108	;'l'
  1034  0020B1  69                 	db	105	;'i'
  1035  0020B2  00                 	db	0
  1036  0020B3                     STR_17:
  1037  0020B3  25                 	db	37
  1038  0020B4  63                 	db	99	;'c'
  1039  0020B5  00                 	db	0
  1040  0000                     
  1041                           ; #config settings
  1042  0020B6  00                 	db	0	; dummy byte at the end
  1043  0000                     
  1044                           	psect	cinit
  1045  004D1A                     __pcinit:
  1046                           	opt callstack 0
  1047  004D1A                     start_initialization:
  1048                           	opt callstack 0
  1049  004D1A                     __initialization:
  1050                           	opt callstack 0
  1051                           
  1052                           ; Initialize objects allocated to BANK3 (56 bytes)
  1053                           ; load TBLPTR registers with __pidataBANK3
  1054  004D1A  0E8E               	movlw	low __pidataBANK3
  1055  004D1C  6EF6               	movwf	tblptrl,c
  1056  004D1E  0E5A               	movlw	high __pidataBANK3
  1057  004D20  6EF7               	movwf	tblptrh,c
  1058  004D22  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1059  004D24  6EF8               	movwf	tblptru,c
  1060  004D26  EE00  F386         	lfsr	0,__pdataBANK3
  1061  004D2A  EE20 F038          	lfsr	2,56
  1062  004D2E                     copy_data0:
  1063  004D2E  0009               	tblrd		*+
  1064  004D30  006F FFD7 FFEE     	movff	tablat,postinc0
  1065  004D36  50DD               	movf	postdec2,w,c
  1066  004D38  50D9               	movf	fsr2l,w,c
  1067  004D3A  E1F9               	bnz	copy_data0
  1068                           
  1069                           ; Initialize objects allocated to BANK1 (175 bytes)
  1070                           ; load TBLPTR registers with __pidataBANK1
  1071  004D3C  0EB2               	movlw	low __pidataBANK1
  1072  004D3E  6EF6               	movwf	tblptrl,c
  1073  004D40  0E4E               	movlw	high __pidataBANK1
  1074  004D42  6EF7               	movwf	tblptrh,c
  1075  004D44  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1076  004D46  6EF8               	movwf	tblptru,c
  1077  004D48  EE00  F100         	lfsr	0,__pdataBANK1
  1078  004D4C  EE20 F0AF          	lfsr	2,175
  1079  004D50                     copy_data1:
  1080  004D50  0009               	tblrd		*+
  1081  004D52  006F FFD7 FFEE     	movff	tablat,postinc0
  1082  004D58  50DD               	movf	postdec2,w,c
  1083  004D5A  50D9               	movf	fsr2l,w,c
  1084  004D5C  E1F9               	bnz	copy_data1
  1085                           
  1086                           ; Initialize objects allocated to BANK0 (96 bytes)
  1087                           ; load TBLPTR registers with __pidataBANK0
  1088  004D5E  0EC8               	movlw	low __pidataBANK0
  1089  004D60  6EF6               	movwf	tblptrl,c
  1090  004D62  0E55               	movlw	high __pidataBANK0
  1091  004D64  6EF7               	movwf	tblptrh,c
  1092  004D66  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1093  004D68  6EF8               	movwf	tblptru,c
  1094  004D6A  EE00  F060         	lfsr	0,__pdataBANK0
  1095  004D6E  EE20 F060          	lfsr	2,96
  1096  004D72                     copy_data2:
  1097  004D72  0009               	tblrd		*+
  1098  004D74  006F FFD7 FFEE     	movff	tablat,postinc0
  1099  004D7A  50DD               	movf	postdec2,w,c
  1100  004D7C  50D9               	movf	fsr2l,w,c
  1101  004D7E  E1F9               	bnz	copy_data2
  1102                           
  1103                           ; Initialize objects allocated to COMRAM (1 bytes)
  1104                           ; load TBLPTR registers with __pidataCOMRAM
  1105  004D80  0ED6               	movlw	low __pidataCOMRAM
  1106  004D82  6EF6               	movwf	tblptrl,c
  1107  004D84  0E61               	movlw	high __pidataCOMRAM
  1108  004D86  6EF7               	movwf	tblptrh,c
  1109  004D88  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1110  004D8A  6EF8               	movwf	tblptru,c
  1111  004D8C  0009               	tblrd		*+	;fetch initializer
  1112  004D8E  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1113                           
  1114                           ; Clear objects allocated to BANK3 (134 bytes)
  1115  004D94  EE00  F300         	lfsr	0,__pbssBANK3
  1116  004D98  0E86               	movlw	134
  1117  004D9A                     clear_0:
  1118  004D9A  6AEE               	clrf	postinc0,c
  1119  004D9C  06E8               	decf	wreg,f,c
  1120  004D9E  E1FD               	bnz	clear_0
  1121                           
  1122                           ; Clear objects allocated to BANK2 (256 bytes)
  1123  004DA0  EE00  F200         	lfsr	0,__pbssBANK2
  1124  004DA4  EE20 F100          	lfsr	2,256
  1125  004DA8                     clear_1:
  1126  004DA8  6AEE               	clrf	postinc0,c
  1127  004DAA  50DD               	movf	postdec2,w,c
  1128  004DAC  50D9               	movf	fsr2l,w,c
  1129  004DAE  E1FC               	bnz	clear_1
  1130  004DB0  50DA               	movf	fsr2h,w,c
  1131  004DB2  E1FA               	bnz	clear_1
  1132                           
  1133                           ; Clear objects allocated to BANK1 (32 bytes)
  1134  004DB4  EE00  F1AF         	lfsr	0,__pbssBANK1
  1135  004DB8  0E20               	movlw	32
  1136  004DBA                     clear_2:
  1137  004DBA  6AEE               	clrf	postinc0,c
  1138  004DBC  06E8               	decf	wreg,f,c
  1139  004DBE  E1FD               	bnz	clear_2
  1140                           
  1141                           ; Clear objects allocated to BANK0 (58 bytes)
  1142  004DC0  EE00  F0C0         	lfsr	0,__pbssBANK0
  1143  004DC4  0E3A               	movlw	58
  1144  004DC6                     clear_3:
  1145  004DC6  6AEE               	clrf	postinc0,c
  1146  004DC8  06E8               	decf	wreg,f,c
  1147  004DCA  E1FD               	bnz	clear_3
  1148                           
  1149                           ; Clear objects allocated to COMRAM (58 bytes)
  1150  004DCC  EE00  F001         	lfsr	0,__pbssCOMRAM
  1151  004DD0  0E3A               	movlw	58
  1152  004DD2                     clear_4:
  1153  004DD2  6AEE               	clrf	postinc0,c
  1154  004DD4  06E8               	decf	wreg,f,c
  1155  004DD6  E1FD               	bnz	clear_4
  1156                           
  1157                           ;
  1158                           ; Setup IVTBASE
  1159                           ;
  1160  004DD8  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1161  004DDA  6ED5               	movwf	213,c
  1162  004DDC  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1163  004DDE  6ED6               	movwf	214,c
  1164  004DE0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1165  004DE2  6ED7               	movwf	215,c
  1166  004DE4                     end_of_initialization:
  1167                           	opt callstack 0
  1168  004DE4                     __end_of__initialization:
  1169                           	opt callstack 0
  1170  004DE4  0100               	movlb	0
  1171  004DE6  EF5C  F010         	goto	_main	;jump to C main() function
  1172                           
  1173                           	psect	bssCOMRAM
  1174  000001                     __pbssCOMRAM:
  1175                           	opt callstack 0
  1176  000001                     secs_II_message@block:
  1177                           	opt callstack 0
  1178  000001                     	ds	7
  1179  000008                     _ADCC_ADI_InterruptHandler:
  1180                           	opt callstack 0
  1181  000008                     	ds	3
  1182  00000B                     _UART1_TxInterruptHandler:
  1183                           	opt callstack 0
  1184  00000B                     	ds	3
  1185  00000E                     _UART1_RxInterruptHandler:
  1186                           	opt callstack 0
  1187  00000E                     	ds	3
  1188  000011                     _UART2_TxInterruptHandler:
  1189                           	opt callstack 0
  1190  000011                     	ds	3
  1191  000014                     _UART2_RxInterruptHandler:
  1192                           	opt callstack 0
  1193  000014                     	ds	3
  1194  000017                     _INT2_InterruptHandler:
  1195                           	opt callstack 0
  1196  000017                     	ds	3
  1197  00001A                     _INT1_InterruptHandler:
  1198                           	opt callstack 0
  1199  00001A                     	ds	3
  1200  00001D                     _INT0_InterruptHandler:
  1201                           	opt callstack 0
  1202  00001D                     	ds	3
  1203  000020                     _width:
  1204                           	opt callstack 0
  1205  000020                     	ds	2
  1206  000022                     _prec:
  1207                           	opt callstack 0
  1208  000022                     	ds	2
  1209  000024                     _flags:
  1210                           	opt callstack 0
  1211  000024                     	ds	2
  1212  000026                     TMR5_ISR@CountCallBack:
  1213                           	opt callstack 0
  1214  000026                     	ds	2
  1215  000028                     _timer5ReloadVal:
  1216                           	opt callstack 0
  1217  000028                     	ds	2
  1218  00002A                     t_protocol@requeue:
  1219                           	opt callstack 0
  1220  00002A                     	ds	1
  1221  00002B                     t_protocol@retry:
  1222                           	opt callstack 0
  1223  00002B                     	ds	1
  1224  00002C                     r_protocol@rxData_l:
  1225                           	opt callstack 0
  1226  00002C                     	ds	1
  1227  00002D                     m_protocol@rxData_l:
  1228                           	opt callstack 0
  1229  00002D                     	ds	1
  1230  00002E                     _mode_sw:
  1231                           	opt callstack 0
  1232  00002E                     	ds	1
  1233  00002F                     _uart2RxCount:
  1234                           	opt callstack 0
  1235  00002F                     	ds	1
  1236  000030                     _uart2RxTail:
  1237                           	opt callstack 0
  1238  000030                     	ds	1
  1239  000031                     _uart2RxHead:
  1240                           	opt callstack 0
  1241  000031                     	ds	1
  1242  000032                     _uart2TxBufferRemaining:
  1243                           	opt callstack 0
  1244  000032                     	ds	1
  1245  000033                     _uart2TxTail:
  1246                           	opt callstack 0
  1247  000033                     	ds	1
  1248  000034                     _uart2TxHead:
  1249                           	opt callstack 0
  1250  000034                     	ds	1
  1251  000035                     _uart1RxCount:
  1252                           	opt callstack 0
  1253  000035                     	ds	1
  1254  000036                     _uart1RxTail:
  1255                           	opt callstack 0
  1256  000036                     	ds	1
  1257  000037                     _uart1RxHead:
  1258                           	opt callstack 0
  1259  000037                     	ds	1
  1260  000038                     _uart1TxBufferRemaining:
  1261                           	opt callstack 0
  1262  000038                     	ds	1
  1263  000039                     _uart1TxTail:
  1264                           	opt callstack 0
  1265  000039                     	ds	1
  1266  00003A                     _uart1TxHead:
  1267                           	opt callstack 0
  1268  00003A                     	ds	1
  1269                           
  1270                           	psect	dataCOMRAM
  1271  00005D                     __pdataCOMRAM:
  1272                           	opt callstack 0
  1273  00005D                     r_protocol@retry:
  1274                           	opt callstack 0
  1275  00005D                     	ds	1
  1276                           
  1277                           	psect	bssBANK0
  1278  0000C0                     __pbssBANK0:
  1279                           	opt callstack 0
  1280  0000C0                     _r_block:
  1281                           	opt callstack 0
  1282  0000C0                     	ds	13
  1283  0000CD                     _spi_link:
  1284                           	opt callstack 0
  1285  0000CD                     	ds	12
  1286  0000D9                     _tickCount:
  1287                           	opt callstack 0
  1288  0000D9                     	ds	12
  1289  0000E5                     t_protocol@block:
  1290                           	opt callstack 0
  1291  0000E5                     	ds	7
  1292  0000EC                     wdtdelay@dcount:
  1293                           	opt callstack 0
  1294  0000EC                     	ds	4
  1295  0000F0                     _TMR5_InterruptHandler:
  1296                           	opt callstack 0
  1297  0000F0                     	ds	3
  1298  0000F3                     _TMR6_InterruptHandler:
  1299                           	opt callstack 0
  1300  0000F3                     	ds	3
  1301  0000F6                     _nout:
  1302                           	opt callstack 0
  1303  0000F6                     	ds	2
  1304  0000F8                     run_checksum@sum:
  1305                           	opt callstack 0
  1306  0000F8                     	ds	2
  1307                           
  1308                           	psect	dataBANK0
  1309  000060                     __pdataBANK0:
  1310                           	opt callstack 0
  1311  000060                     stoa@F1142:
  1312                           	opt callstack 0
  1313  000060                     	ds	7
  1314  000067                     _V:
  1315                           	opt callstack 0
  1316  000067                     	ds	89
  1317                           
  1318                           	psect	bssBANK1
  1319  0001AF                     __pbssBANK1:
  1320                           	opt callstack 0
  1321  0001AF                     _dbuf:
  1322                           	opt callstack 0
  1323  0001AF                     	ds	32
  1324                           
  1325                           	psect	dataBANK1
  1326  000100                     __pdataBANK1:
  1327                           	opt callstack 0
  1328  000100                     _H10:
  1329                           	opt callstack 0
  1330  000100                     	ds	65
  1331  000141                     _H12:
  1332                           	opt callstack 0
  1333  000141                     	ds	30
  1334  00015F                     _H24:
  1335                           	opt callstack 0
  1336  00015F                     	ds	27
  1337  00017A                     _H17:
  1338                           	opt callstack 0
  1339  00017A                     	ds	20
  1340  00018E                     _H14:
  1341                           	opt callstack 0
  1342  00018E                     	ds	17
  1343  00019F                     _H13:
  1344                           	opt callstack 0
  1345  00019F                     	ds	16
  1346                           
  1347                           	psect	bssBANK2
  1348  000200                     __pbssBANK2:
  1349                           	opt callstack 0
  1350  000200                     _uart2RxBuffer:
  1351                           	opt callstack 0
  1352  000200                     	ds	64
  1353  000240                     _uart2TxBuffer:
  1354                           	opt callstack 0
  1355  000240                     	ds	64
  1356  000280                     _uart1RxBuffer:
  1357                           	opt callstack 0
  1358  000280                     	ds	64
  1359  0002C0                     _uart1TxBuffer:
  1360                           	opt callstack 0
  1361  0002C0                     	ds	64
  1362                           
  1363                           	psect	bssBANK3
  1364  000300                     __pbssBANK3:
  1365                           	opt callstack 0
  1366  000300                     _ring_buf2:
  1367                           	opt callstack 0
  1368  000300                     	ds	67
  1369  000343                     _ring_buf1:
  1370                           	opt callstack 0
  1371  000343                     	ds	67
  1372                           
  1373                           	psect	dataBANK3
  1374  000386                     __pdataBANK3:
  1375                           	opt callstack 0
  1376  000386                     _H53:
  1377                           	opt callstack 0
  1378  000386                     	ds	56
  1379                           
  1380                           	psect	cstackCOMRAM
  1381  00005B                     __pcstackCOMRAM:
  1382                           	opt callstack 0
  1383  00005B                     ??_TMR6_ISR:
  1384  00005B                     
  1385                           ; 1 bytes @ 0x0
  1386  00005B                     	ds	1
  1387  00005C                     ??_TMR5_ISR:
  1388                           
  1389                           ; 1 bytes @ 0x1
  1390  00005C                     	ds	1
  1391                           
  1392 ;;
  1393 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1394 ;;
  1395 ;; *************** function _main *****************
  1396 ;; Defined at:
  1397 ;;		line 283 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  mode            1  [STACK] enum E16896
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1  [STACK] void 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 4/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels required when called:   14
  1417 ;; This function calls:
  1418 ;;		_SYSTEM_Initialize
  1419 ;;		_WaitMs
  1420 ;;		_eaDogM_WriteCommand
  1421 ;;		_eaDogM_WriteStringAtPos
  1422 ;;		_init_display
  1423 ;;		_m_protocol
  1424 ;;		_r_protocol
  1425 ;;		_sprintf
  1426 ;;		_t_protocol
  1427 ;;		_wait_lcd_done
  1428 ;; This function is called by:
  1429 ;;		Startup code after reset
  1430 ;; This function uses a reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text0
  1434  0020B8                     __ptext0:
  1435                           	opt callstack 0
  1436  0020B8                     _main:
  1437                           	opt callstack 0
  1438                           
  1439                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1440  0020B8  52E6               	movf	postinc1,f,c
  1441                           
  1442                           ;main.c: 285:  UI_STATES mode;;main.c: 288:  SYSTEM_Initialize();
  1443                           
  1444                           ;incstack = 0
  1445  0020BA  EC4C  F02C         	call	_SYSTEM_Initialize	;wreg free
  1446                           
  1447                           ; BSR set to: 60
  1448                           ;main.c: 291:  (INTCON0bits.GIEH = 1);
  1449  0020BE  8ED2               	bsf	16338,7,c	;volatile
  1450                           
  1451                           ; BSR set to: 60
  1452                           ;main.c: 294:  (INTCON0bits.GIEL = 1);
  1453  0020C0  8CD2               	bsf	16338,6,c	;volatile
  1454                           
  1455                           ; BSR set to: 60
  1456                           ;main.c: 296:  V.ui_state = UI_STATE_INIT;
  1457  0020C2  0100               	movlb	0	; () banked
  1458  0020C4  6B68               	clrf	(_V+1)& (0+255),b
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;main.c: 301:  WaitMs(300);
  1462  0020C6  0E2C               	movlw	44
  1463  0020C8  6EE6               	movwf	postinc1,c
  1464  0020CA  0E01               	movlw	1
  1465  0020CC  6EE6               	movwf	postinc1,c
  1466  0020CE  ECE5  F02D         	call	_WaitMs	;wreg free
  1467                           
  1468                           ;main.c: 302:  if (PORTBbits.RB0) {
  1469  0020D2  A0CB               	btfss	16331,0,c	;volatile
  1470  0020D4  D004               	goto	l8312
  1471                           
  1472                           ;main.c: 303:   mode = UI_STATE_HOST;
  1473                           ;stkvar	_mode @ sp[(-1)+0]
  1474  0020D6  0EFF               	movlw	-1
  1475  0020D8  6AE3               	clrf	plusw1,c
  1476  0020DA  2AE3               	incf	plusw1,f,c
  1477                           
  1478                           ;main.c: 304:  } else {
  1479  0020DC  D004               	goto	l8314
  1480  0020DE                     l8312:
  1481                           
  1482                           ;main.c: 305:   mode = UI_STATE_LOG;
  1483                           ;stkvar	_mode @ sp[(-1)+0]
  1484  0020DE  0EFF               	movlw	-1
  1485  0020E0  6AE3               	clrf	plusw1,c
  1486  0020E2  80E3               	bsf	plusw1,0,c
  1487  0020E4  82E3               	bsf	plusw1,1,c	;indir
  1488  0020E6                     l8314:
  1489                           
  1490                           ;main.c: 308:  if (mode == UI_STATE_HOST) {
  1491                           ;stkvar	_mode @ sp[(-1)+0]
  1492  0020E6  0EFF               	movlw	-1
  1493  0020E8  04E3               	decf	plusw1,w,c
  1494  0020EA  A4D8               	btfss	status,2,c
  1495  0020EC  D003               	goto	l1220
  1496                           
  1497                           ;main.c: 309:   do { LATDbits.LATD0 = 1; } while(0);
  1498  0020EE  80BD               	bsf	16317,0,c	;volatile
  1499                           
  1500                           ;main.c: 310:   do { LATDbits.LATD1 = 1; } while(0);
  1501  0020F0  82BD               	bsf	16317,1,c	;volatile
  1502  0020F2  D1FF               	goto	l8476
  1503  0020F4                     l1220:
  1504  0020F4  90BD               	bcf	16317,0,c	;volatile
  1505                           
  1506                           ;main.c: 313:   do { LATDbits.LATD1 = 0; } while(0);
  1507  0020F6  92BD               	bcf	16317,1,c	;volatile
  1508  0020F8  D1FC               	goto	l8476
  1509  0020FA                     l8316:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 319:    init_display();
  1513  0020FA  ECAF  F025         	call	_init_display	;wreg free
  1514                           
  1515                           ; BSR set to: 61
  1516                           ;main.c: 320:    eaDogM_WriteCommand(0b00001100);
  1517  0020FE  0E0C               	movlw	12
  1518  002100  6EE6               	movwf	postinc1,c
  1519  002102  EC90  F030         	call	_eaDogM_WriteCommand	;wreg free
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;main.c: 322:    V.ui_state = mode;
  1523                           ;stkvar	_mode @ sp[(-1)+0]
  1524  002106  0EFF               	movlw	-1
  1525  002108  006F FF8C  F068    	movff	plusw1,_V+1
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;main.c: 323:    V.s_state = SEQ_STATE_INIT;
  1529  00210E  6B67               	clrf	_V& (0+255),b
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;main.c: 352:    sprintf(V.buf, " RVI HOST TESTER");
  1533  002110  0E61               	movlw	STR_1& (0+255)
  1534  002112  6EE6               	movwf	postinc1,c
  1535  002114  0E67               	movlw	_V& (0+255)
  1536  002116  0F05               	addlw	5
  1537  002118  6EE6               	movwf	postinc1,c
  1538  00211A  0E02               	movlw	2
  1539  00211C  6EE6               	movwf	postinc1,c
  1540  00211E  ECF5  F026         	call	_sprintf	;wreg free
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;main.c: 353:    wait_lcd_done();
  1544  002122  EC1F  F030         	call	_wait_lcd_done	;wreg free
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 354:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1548  002126  0E67               	movlw	_V& (0+255)
  1549  002128  0F05               	addlw	5
  1550  00212A  6EE6               	movwf	postinc1,c
  1551  00212C  0E00               	movlw	0
  1552  00212E  6EE6               	movwf	postinc1,c
  1553  002130  0E00               	movlw	0
  1554  002132  6EE6               	movwf	postinc1,c
  1555  002134  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1556                           
  1557                           ; BSR set to: 59
  1558                           ;main.c: 355:    sprintf(V.buf, " Version %s", "0.74A");
  1559  002138  0EA7               	movlw	STR_3& (0+255)
  1560  00213A  6E46               	movwf	btemp+11,c
  1561  00213C  0060  F11B  FFE6   	movff	btemp+11,postinc1
  1562  002142  0E20               	movlw	high __smallconst
  1563  002144  6EE6               	movwf	postinc1,c
  1564  002146  0E8F               	movlw	STR_2& (0+255)
  1565  002148  6EE6               	movwf	postinc1,c
  1566  00214A  0E67               	movlw	_V& (0+255)
  1567  00214C  0F05               	addlw	5
  1568  00214E  6EE6               	movwf	postinc1,c
  1569  002150  0E04               	movlw	4
  1570  002152  6EE6               	movwf	postinc1,c
  1571  002154  ECF5  F026         	call	_sprintf	;wreg free
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;main.c: 356:    wait_lcd_done();
  1575  002158  EC1F  F030         	call	_wait_lcd_done	;wreg free
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;main.c: 357:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1579  00215C  0E67               	movlw	_V& (0+255)
  1580  00215E  0F05               	addlw	5
  1581  002160  6EE6               	movwf	postinc1,c
  1582  002162  0E00               	movlw	0
  1583  002164  6EE6               	movwf	postinc1,c
  1584  002166  0E01               	movlw	1
  1585  002168  6EE6               	movwf	postinc1,c
  1586  00216A  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1587                           
  1588                           ; BSR set to: 59
  1589                           ;main.c: 358:    sprintf(V.buf, " FGB@MCHP FAB4");
  1590  00216E  0E72               	movlw	STR_4& (0+255)
  1591  002170  6EE6               	movwf	postinc1,c
  1592  002172  0E67               	movlw	_V& (0+255)
  1593  002174  0F05               	addlw	5
  1594  002176  6EE6               	movwf	postinc1,c
  1595  002178  0E02               	movlw	2
  1596  00217A  6EE6               	movwf	postinc1,c
  1597  00217C  ECF5  F026         	call	_sprintf	;wreg free
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 359:    wait_lcd_done();
  1601  002180  EC1F  F030         	call	_wait_lcd_done	;wreg free
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;main.c: 360:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1605  002184  0E67               	movlw	_V& (0+255)
  1606  002186  0F05               	addlw	5
  1607  002188  6EE6               	movwf	postinc1,c
  1608  00218A  0E00               	movlw	0
  1609  00218C  6EE6               	movwf	postinc1,c
  1610  00218E  0E02               	movlw	2
  1611  002190  6EE6               	movwf	postinc1,c
  1612  002192  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1613                           
  1614                           ; BSR set to: 59
  1615                           ;main.c: 362:    WaitMs(3000);
  1616  002196  0EB8               	movlw	184
  1617  002198  6EE6               	movwf	postinc1,c
  1618  00219A  0E0B               	movlw	11
  1619  00219C  6EE6               	movwf	postinc1,c
  1620  00219E  ECE5  F02D         	call	_WaitMs	;wreg free
  1621                           
  1622                           ;main.c: 363:    break;
  1623  0021A2  D1BB               	goto	l1263
  1624  0021A4                     l1230:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 367:     V.r_l_state = LINK_STATE_IDLE;
  1628  0021A4  6B6A               	clrf	(_V+3)& (0+255),b
  1629                           
  1630                           ;main.c: 368:     V.t_l_state = LINK_STATE_IDLE;
  1631  0021A6  6B6B               	clrf	(_V+4)& (0+255),b
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;main.c: 369:     V.s_state = SEQ_STATE_RX;
  1635  0021A8  0E01               	movlw	1
  1636  0021AA  6F67               	movwf	_V& (0+255),b
  1637                           
  1638                           ;main.c: 370:     if (!V.error && !V.abort) {
  1639  0021AC  51B6               	movf	(_V+79)& (0+255),w,b
  1640  0021AE  A4D8               	btfss	status,2,c
  1641  0021B0  D0DC               	goto	l8416
  1642                           
  1643                           ; BSR set to: 0
  1644  0021B2  51B7               	movf	(_V+80)& (0+255),w,b
  1645  0021B4  A4D8               	btfss	status,2,c
  1646  0021B6  D0D9               	goto	l8416
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;main.c: 371:      sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1650  0021B8  0060  F2B3  FFE6   	movff	_V+69,postinc1
  1651  0021BE  0060  F2B7  FFE6   	movff	_V+70,postinc1
  1652  0021C4  0060  F2BB  FFE6   	movff	_V+71,postinc1
  1653  0021CA  0060  F2BF  FFE6   	movff	_V+72,postinc1
  1654  0021D0  0E3D               	movlw	STR_5& (0+255)
  1655  0021D2  6EE6               	movwf	postinc1,c
  1656  0021D4  0E67               	movlw	_V& (0+255)
  1657  0021D6  0F05               	addlw	5
  1658  0021D8  6EE6               	movwf	postinc1,c
  1659  0021DA  0E06               	movlw	6
  1660  0021DC  6EE6               	movwf	postinc1,c
  1661  0021DE  ECF5  F026         	call	_sprintf	;wreg free
  1662  0021E2                     l8350:
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;main.c: 372:      V.buf[16] = 0;
  1666  0021E2  6B7C               	clrf	(_V+21)& (0+255),b
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;main.c: 373:      wait_lcd_done();
  1670  0021E4  EC1F  F030         	call	_wait_lcd_done	;wreg free
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;main.c: 374:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1674  0021E8  0E67               	movlw	_V& (0+255)
  1675  0021EA  0F05               	addlw	5
  1676  0021EC  6EE6               	movwf	postinc1,c
  1677  0021EE  0E00               	movlw	0
  1678  0021F0  6EE6               	movwf	postinc1,c
  1679  0021F2  0E02               	movlw	2
  1680  0021F4  6EE6               	movwf	postinc1,c
  1681  0021F6  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1682  0021FA  D0B7               	goto	l8416
  1683  0021FC                     l8356:
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;main.c: 385:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1687  0021FC  0E67               	movlw	_V& (0+255)
  1688  0021FE  0F03               	addlw	3
  1689  002200  6EE6               	movwf	postinc1,c
  1690  002202  EC22  F01B         	call	_r_protocol	;wreg free
  1691  002206  0E04               	movlw	4
  1692  002208  183B               	xorwf	btemp,w,c
  1693  00220A  A4D8               	btfss	status,2,c
  1694  00220C  D029               	goto	l8374
  1695                           
  1696                           ;main.c: 386:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1697  00220E  0100               	movlb	0	; () banked
  1698  002210  51B5               	movf	(_V+78)& (0+255),w,b
  1699  002212  6EE6               	movwf	postinc1,c
  1700  002214  0E00               	movlw	0
  1701  002216  6EE6               	movwf	postinc1,c
  1702  002218  51B4               	movf	(_V+77)& (0+255),w,b
  1703  00221A  6EE6               	movwf	postinc1,c
  1704  00221C  0E00               	movlw	0
  1705  00221E  6EE6               	movwf	postinc1,c
  1706  002220  0E81               	movlw	STR_6& (0+255)
  1707  002222  6EE6               	movwf	postinc1,c
  1708  002224  0E67               	movlw	_V& (0+255)
  1709  002226  0F05               	addlw	5
  1710  002228  6EE6               	movwf	postinc1,c
  1711  00222A  0E06               	movlw	6
  1712  00222C  6EE6               	movwf	postinc1,c
  1713  00222E  ECF5  F026         	call	_sprintf	;wreg free
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;main.c: 387:      V.buf[11] = 0;
  1717  002232  6B77               	clrf	(_V+16)& (0+255),b
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;main.c: 388:      wait_lcd_done();
  1721  002234  EC1F  F030         	call	_wait_lcd_done	;wreg free
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;main.c: 389:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1725  002238  0E67               	movlw	_V& (0+255)
  1726  00223A  0F05               	addlw	5
  1727  00223C  6EE6               	movwf	postinc1,c
  1728  00223E  0E00               	movlw	0
  1729  002240  6EE6               	movwf	postinc1,c
  1730  002242  0E00               	movlw	0
  1731  002244  6EE6               	movwf	postinc1,c
  1732  002246  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1733                           
  1734                           ; BSR set to: 59
  1735                           ;main.c: 393:      if (V.wbit) {
  1736  00224A  0100               	movlb	0	; () banked
  1737  00224C  A3BD               	btfss	(_V+86)& (0+255),1,b
  1738  00224E  D006               	goto	l8372
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;main.c: 394:       V.s_state = SEQ_STATE_TX;
  1742  002250  0E02               	movlw	2
  1743  002252  6F67               	movwf	_V& (0+255),b
  1744                           
  1745                           ;main.c: 395:       V.failed_send = 0;
  1746  002254  0E87               	movlw	-121
  1747  002256  17BD               	andwf	(_V+86)& (0+255),f,b
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;main.c: 396:       V.t_l_state = LINK_STATE_IDLE;
  1751  002258  6B6B               	clrf	(_V+4)& (0+255),b
  1752                           
  1753                           ;main.c: 397:      } else {
  1754  00225A  D002               	goto	l8374
  1755  00225C                     l8372:
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;main.c: 398:       V.s_state = SEQ_STATE_TRIGGER;
  1759  00225C  0E03               	movlw	3
  1760  00225E  6F67               	movwf	_V& (0+255),b
  1761  002260                     l8374:
  1762                           
  1763                           ;main.c: 401:     if (V.r_l_state == LINK_STATE_ERROR)
  1764  002260  0E06               	movlw	6
  1765  002262  0100               	movlb	0	; () banked
  1766  002264  196A               	xorwf	(_V+3)& (0+255),w,b
  1767  002266  A4D8               	btfss	status,2,c
  1768  002268  D080               	goto	l8416
  1769  00226A                     u5270:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;main.c: 402:      V.s_state = SEQ_STATE_ERROR;
  1773  00226A  0E06               	movlw	6
  1774  00226C  6F67               	movwf	_V& (0+255),b
  1775  00226E  D07D               	goto	l8416
  1776  002270                     l8378:
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;main.c: 408:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1780  002270  0E67               	movlw	_V& (0+255)
  1781  002272  0F04               	addlw	4
  1782  002274  6EE6               	movwf	postinc1,c
  1783  002276  EC29  F01F         	call	_t_protocol	;wreg free
  1784  00227A  0E04               	movlw	4
  1785  00227C  183B               	xorwf	btemp,w,c
  1786  00227E  A4D8               	btfss	status,2,c
  1787  002280  D003               	goto	l8382
  1788                           
  1789                           ;main.c: 409:      V.s_state = SEQ_STATE_TRIGGER;
  1790  002282  0E03               	movlw	3
  1791  002284  0100               	movlb	0	; () banked
  1792  002286  6F67               	movwf	_V& (0+255),b
  1793  002288                     l8382:
  1794                           
  1795                           ;main.c: 411:     if (V.t_l_state == LINK_STATE_ERROR)
  1796  002288  0E06               	movlw	6
  1797  00228A  0100               	movlb	0	; () banked
  1798  00228C  196B               	xorwf	(_V+4)& (0+255),w,b
  1799  00228E  B4D8               	btfsc	status,2,c
  1800  002290  D7EC               	goto	u5270
  1801  002292  D06B               	goto	l8416
  1802  002294                     l1241:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;main.c: 415:     if (V.queue) {
  1806  002294  A9BE               	btfss	(_V+87)& (0+255),4,b
  1807  002296  D01C               	goto	l8396
  1808                           
  1809                           ; BSR set to: 0
  1810  002298  A4BE               	btfss	16318,2,c	;volatile
  1811  00229A  D002               	goto	u5310
  1812  00229C  0E01               	movlw	1
  1813  00229E  D001               	goto	u5316
  1814  0022A0                     u5310:
  1815  0022A0  0E00               	movlw	0
  1816  0022A2                     u5316:
  1817  0022A2  0AFF               	xorlw	255
  1818  0022A4  6E46               	movwf	btemp+11,c
  1819  0022A6  4646               	rlncf	btemp+11,f,c
  1820  0022A8  4646               	rlncf	btemp+11,f,c
  1821  0022AA  50BE               	movf	16318,w,c	;volatile
  1822  0022AC  1846               	xorwf	btemp+11,w,c
  1823  0022AE  0BFB               	andlw	-5
  1824  0022B0  1846               	xorwf	btemp+11,w,c
  1825  0022B2  6EBE               	movwf	16318,c	;volatile
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;main.c: 417:      V.r_l_state = LINK_STATE_IDLE;
  1829  0022B4  6B6A               	clrf	(_V+3)& (0+255),b
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;main.c: 418:      V.t_l_state = LINK_STATE_IDLE;
  1833  0022B6  6B6B               	clrf	(_V+4)& (0+255),b
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 419:      V.s_state = SEQ_STATE_TX;
  1837  0022B8  0E02               	movlw	2
  1838  0022BA  6F67               	movwf	_V& (0+255),b
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;main.c: 420:      sprintf(V.buf, " OKQ#");
  1842  0022BC  0EA1               	movlw	STR_7& (0+255)
  1843  0022BE  6EE6               	movwf	postinc1,c
  1844  0022C0  0E67               	movlw	_V& (0+255)
  1845  0022C2  0F05               	addlw	5
  1846  0022C4  6EE6               	movwf	postinc1,c
  1847  0022C6  0E02               	movlw	2
  1848  0022C8  6EE6               	movwf	postinc1,c
  1849  0022CA  ECF5  F026         	call	_sprintf	;wreg free
  1850                           
  1851                           ;main.c: 421:     } else {
  1852  0022CE  D00B               	goto	l8400
  1853  0022D0                     l8396:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;main.c: 422:      V.s_state = SEQ_STATE_DONE;
  1857  0022D0  0E05               	movlw	5
  1858  0022D2  6F67               	movwf	_V& (0+255),b
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;main.c: 423:      sprintf(V.buf, " OK #");
  1862  0022D4  0E9B               	movlw	STR_8& (0+255)
  1863  0022D6  6EE6               	movwf	postinc1,c
  1864  0022D8  0E67               	movlw	_V& (0+255)
  1865  0022DA  0F05               	addlw	5
  1866  0022DC  6EE6               	movwf	postinc1,c
  1867  0022DE  0E02               	movlw	2
  1868  0022E0  6EE6               	movwf	postinc1,c
  1869  0022E2  ECF5  F026         	call	_sprintf	;wreg free
  1870  0022E6                     l8400:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;main.c: 425:     wait_lcd_done();
  1874  0022E6  EC1F  F030         	call	_wait_lcd_done	;wreg free
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;main.c: 426:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1878  0022EA  0E67               	movlw	_V& (0+255)
  1879  0022EC  0F05               	addlw	5
  1880  0022EE  6EE6               	movwf	postinc1,c
  1881  0022F0  0E0B               	movlw	11
  1882  0022F2  6EE6               	movwf	postinc1,c
  1883  0022F4  0E00               	movlw	0
  1884  0022F6  6EE6               	movwf	postinc1,c
  1885  0022F8  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1886                           
  1887                           ;main.c: 427:     break;
  1888  0022FC  D036               	goto	l8416
  1889  0022FE                     l1246:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main.c: 429:     V.s_state = SEQ_STATE_INIT;
  1893  0022FE  6B67               	clrf	_V& (0+255),b
  1894                           
  1895                           ;main.c: 430:     break;
  1896  002300  D034               	goto	l8416
  1897  002302                     l1248:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;main.c: 433:     V.s_state = SEQ_STATE_INIT;
  1901  002302  6B67               	clrf	_V& (0+255),b
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;main.c: 434:     sprintf(V.buf, "E R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.erro
      +                          r, V.abort);
  1905  002304  51B7               	movf	(_V+80)& (0+255),w,b
  1906  002306  6EE6               	movwf	postinc1,c
  1907  002308  0E00               	movlw	0
  1908  00230A  6EE6               	movwf	postinc1,c
  1909  00230C  51B6               	movf	(_V+79)& (0+255),w,b
  1910  00230E  6EE6               	movwf	postinc1,c
  1911  002310  0E00               	movlw	0
  1912  002312  6EE6               	movwf	postinc1,c
  1913  002314  516B               	movf	(_V+4)& (0+255),w,b
  1914  002316  6EE6               	movwf	postinc1,c
  1915  002318  0E00               	movlw	0
  1916  00231A  6EE6               	movwf	postinc1,c
  1917  00231C  516A               	movf	(_V+3)& (0+255),w,b
  1918  00231E  6EE6               	movwf	postinc1,c
  1919  002320  0E00               	movlw	0
  1920  002322  6EE6               	movwf	postinc1,c
  1921  002324  0E16               	movlw	STR_9& (0+255)
  1922  002326  6EE6               	movwf	postinc1,c
  1923  002328  0E67               	movlw	_V& (0+255)
  1924  00232A  0F05               	addlw	5
  1925  00232C  6EE6               	movwf	postinc1,c
  1926  00232E  0E0A               	movlw	10
  1927  002330  6EE6               	movwf	postinc1,c
  1928  002332  ECF5  F026         	call	_sprintf	;wreg free
  1929  002336  D755               	goto	l8350
  1930  002338                     l8414:
  1931                           
  1932                           ; BSR set to: 0
  1933  002338  5167               	movf	_V& (0+255),w,b
  1934  00233A  6E45               	movwf	btemp+10,c
  1935  00233C  6A46               	clrf	btemp+11,c
  1936                           
  1937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1938                           ; Switch size 1, requested type "simple"
  1939                           ; Number of cases is 1, Range of values is 0 to 0
  1940                           ; switch strategies available:
  1941                           ; Name         Instructions Cycles
  1942                           ; simple_byte            4     3 (average)
  1943                           ;	Chosen strategy is simple_byte
  1944  00233E  5046               	movf	btemp+11,w,c
  1945  002340  0A00               	xorlw	0	; case 0
  1946  002342  A4D8               	btfss	status,2,c
  1947  002344  D7DE               	goto	l1248
  1948                           
  1949                           ; BSR set to: 0
  1950                           ; Switch size 1, requested type "simple"
  1951                           ; Number of cases is 6, Range of values is 0 to 6
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte           19    10 (average)
  1955                           ;	Chosen strategy is simple_byte
  1956  002346  5045               	movf	btemp+10,w,c
  1957  002348  0A00               	xorlw	0	; case 0
  1958  00234A  B4D8               	btfsc	status,2,c
  1959  00234C  D72B               	goto	l1230
  1960  00234E  0A01               	xorlw	1	; case 1
  1961  002350  B4D8               	btfsc	status,2,c
  1962  002352  D754               	goto	l8356
  1963  002354  0A03               	xorlw	3	; case 2
  1964  002356  B4D8               	btfsc	status,2,c
  1965  002358  D78B               	goto	l8378
  1966  00235A  0A01               	xorlw	1	; case 3
  1967  00235C  B4D8               	btfsc	status,2,c
  1968  00235E  D79A               	goto	l1241
  1969  002360  0A06               	xorlw	6	; case 5
  1970  002362  B4D8               	btfsc	status,2,c
  1971  002364  D7CC               	goto	l1246
  1972  002366  0A03               	xorlw	3	; case 6
  1973  002368  D7CC               	goto	l1248
  1974  00236A                     l8416:
  1975                           
  1976                           ;main.c: 440:    if (!V.error && !V.abort) {
  1977  00236A  0100               	movlb	0	; () banked
  1978  00236C  51B6               	movf	(_V+79)& (0+255),w,b
  1979  00236E  A4D8               	btfss	status,2,c
  1980  002370  D0D4               	goto	l1263
  1981                           
  1982                           ; BSR set to: 0
  1983  002372  51B7               	movf	(_V+80)& (0+255),w,b
  1984  002374  A4D8               	btfss	status,2,c
  1985  002376  D0D1               	goto	l1263
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;main.c: 441:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1989  002378  0060  F2B3  FFE6   	movff	_V+69,postinc1
  1990  00237E  0060  F2B7  FFE6   	movff	_V+70,postinc1
  1991  002384  0060  F2BB  FFE6   	movff	_V+71,postinc1
  1992  00238A  0060  F2BF  FFE6   	movff	_V+72,postinc1
  1993  002390  0E3D               	movlw	STR_5& (0+255)
  1994  002392  6EE6               	movwf	postinc1,c
  1995  002394  0E67               	movlw	_V& (0+255)
  1996  002396  0F05               	addlw	5
  1997  002398  6EE6               	movwf	postinc1,c
  1998  00239A  0E06               	movlw	6
  1999  00239C  6EE6               	movwf	postinc1,c
  2000  00239E  ECF5  F026         	call	_sprintf	;wreg free
  2001  0023A2                     l8422:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;main.c: 442:     V.buf[16] = 0;
  2005  0023A2  6B7C               	clrf	(_V+21)& (0+255),b
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;main.c: 443:     wait_lcd_done();
  2009  0023A4  EC1F  F030         	call	_wait_lcd_done	;wreg free
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;main.c: 444:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2013  0023A8  0E67               	movlw	_V& (0+255)
  2014  0023AA  0F05               	addlw	5
  2015  0023AC  6EE6               	movwf	postinc1,c
  2016  0023AE  0E00               	movlw	0
  2017  0023B0  6EE6               	movwf	postinc1,c
  2018  0023B2  0E02               	movlw	2
  2019  0023B4  6EE6               	movwf	postinc1,c
  2020  0023B6  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2021  0023BA  D0AF               	goto	l1263
  2022  0023BC                     l1252:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;main.c: 450:     V.m_l_state = LINK_STATE_IDLE;
  2026  0023BC  6B69               	clrf	(_V+2)& (0+255),b
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;main.c: 451:     V.s_state = SEQ_STATE_RX;
  2030  0023BE  0E01               	movlw	1
  2031  0023C0  6F67               	movwf	_V& (0+255),b
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;main.c: 452:     sprintf(V.buf, " LOG MODE %d     #", V.uart);
  2035  0023C2  51BF               	movf	(_V+88)& (0+255),w,b
  2036  0023C4  6EE6               	movwf	postinc1,c
  2037  0023C6  0E00               	movlw	0
  2038  0023C8  6EE6               	movwf	postinc1,c
  2039  0023CA  0E2A               	movlw	STR_11& (0+255)
  2040  0023CC  6EE6               	movwf	postinc1,c
  2041  0023CE  0E67               	movlw	_V& (0+255)
  2042  0023D0  0F05               	addlw	5
  2043  0023D2  6EE6               	movwf	postinc1,c
  2044  0023D4  0E04               	movlw	4
  2045  0023D6  6EE6               	movwf	postinc1,c
  2046  0023D8  ECF5  F026         	call	_sprintf	;wreg free
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;main.c: 453:     V.buf[16] = 0;
  2050  0023DC  6B7C               	clrf	(_V+21)& (0+255),b
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;main.c: 454:     wait_lcd_done();
  2054  0023DE  EC1F  F030         	call	_wait_lcd_done	;wreg free
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;main.c: 455:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2058  0023E2  0E67               	movlw	_V& (0+255)
  2059  0023E4  0F05               	addlw	5
  2060  0023E6  6EE6               	movwf	postinc1,c
  2061  0023E8  0E00               	movlw	0
  2062  0023EA  6EE6               	movwf	postinc1,c
  2063  0023EC  0E02               	movlw	2
  2064  0023EE  6EE6               	movwf	postinc1,c
  2065  0023F0  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2066                           
  2067                           ;main.c: 464:     break;
  2068  0023F4  D06D               	goto	l8466
  2069  0023F6                     l8438:
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;main.c: 469:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2073  0023F6  0E67               	movlw	_V& (0+255)
  2074  0023F8  0F02               	addlw	2
  2075  0023FA  6EE6               	movwf	postinc1,c
  2076  0023FC  EC75  F017         	call	_m_protocol	;wreg free
  2077  002400  0E04               	movlw	4
  2078  002402  183B               	xorwf	btemp,w,c
  2079  002404  A4D8               	btfss	status,2,c
  2080  002406  D02D               	goto	l8450
  2081                           
  2082                           ;main.c: 470:      sprintf(V.buf, " S%dF%d #%ld    ", V.stream, V.function, V.ticks);
  2083  002408  0060  F2B3  FFE6   	movff	_V+69,postinc1
  2084  00240E  0060  F2B7  FFE6   	movff	_V+70,postinc1
  2085  002414  0060  F2BB  FFE6   	movff	_V+71,postinc1
  2086  00241A  0060  F2BF  FFE6   	movff	_V+72,postinc1
  2087  002420  0100               	movlb	0	; () banked
  2088  002422  51B5               	movf	(_V+78)& (0+255),w,b
  2089  002424  6EE6               	movwf	postinc1,c
  2090  002426  0E00               	movlw	0
  2091  002428  6EE6               	movwf	postinc1,c
  2092  00242A  51B4               	movf	(_V+77)& (0+255),w,b
  2093  00242C  6EE6               	movwf	postinc1,c
  2094  00242E  0E00               	movlw	0
  2095  002430  6EE6               	movwf	postinc1,c
  2096  002432  0E50               	movlw	STR_12& (0+255)
  2097  002434  6EE6               	movwf	postinc1,c
  2098  002436  0E67               	movlw	_V& (0+255)
  2099  002438  0F05               	addlw	5
  2100  00243A  6EE6               	movwf	postinc1,c
  2101  00243C  0E0A               	movlw	10
  2102  00243E  6EE6               	movwf	postinc1,c
  2103  002440  ECF5  F026         	call	_sprintf	;wreg free
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;main.c: 471:      V.buf[11] = 0;
  2107  002444  6B77               	clrf	(_V+16)& (0+255),b
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;main.c: 472:      wait_lcd_done();
  2111  002446  EC1F  F030         	call	_wait_lcd_done	;wreg free
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;main.c: 473:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2115  00244A  0E67               	movlw	_V& (0+255)
  2116  00244C  0F05               	addlw	5
  2117  00244E  6EE6               	movwf	postinc1,c
  2118  002450  0E00               	movlw	0
  2119  002452  6EE6               	movwf	postinc1,c
  2120  002454  05BF               	decf	(_V+88)& (0+255),w,b
  2121  002456  6EE6               	movwf	postinc1,c
  2122  002458  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2123                           
  2124                           ; BSR set to: 59
  2125                           ;main.c: 474:      V.s_state = SEQ_STATE_TRIGGER;
  2126  00245C  0E03               	movlw	3
  2127  00245E  0100               	movlb	0	; () banked
  2128  002460  6F67               	movwf	_V& (0+255),b
  2129  002462                     l8450:
  2130                           
  2131                           ;main.c: 476:     if (V.m_l_state == LINK_STATE_ERROR)
  2132  002462  0E06               	movlw	6
  2133  002464  0100               	movlb	0	; () banked
  2134  002466  1969               	xorwf	(_V+2)& (0+255),w,b
  2135  002468  A4D8               	btfss	status,2,c
  2136  00246A  D032               	goto	l8466
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;main.c: 477:      V.s_state = SEQ_STATE_ERROR;
  2140  00246C  0E06               	movlw	6
  2141  00246E  6F67               	movwf	_V& (0+255),b
  2142  002470  D02F               	goto	l8466
  2143  002472                     l8454:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;main.c: 480:     V.s_state = SEQ_STATE_DONE;
  2147  002472  0E05               	movlw	5
  2148  002474  6F67               	movwf	_V& (0+255),b
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 481:     sprintf(V.buf, " OK #");
  2152  002476  0E9B               	movlw	STR_8& (0+255)
  2153  002478  6EE6               	movwf	postinc1,c
  2154  00247A  0E67               	movlw	_V& (0+255)
  2155  00247C  0F05               	addlw	5
  2156  00247E  6EE6               	movwf	postinc1,c
  2157  002480  0E02               	movlw	2
  2158  002482  6EE6               	movwf	postinc1,c
  2159  002484  ECF5  F026         	call	_sprintf	;wreg free
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;main.c: 482:     wait_lcd_done();
  2163  002488  EC1F  F030         	call	_wait_lcd_done	;wreg free
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;main.c: 483:     eaDogM_WriteStringAtPos(V.uart - 1, 11, V.buf);
  2167  00248C  0E67               	movlw	_V& (0+255)
  2168  00248E  0F05               	addlw	5
  2169  002490  6EE6               	movwf	postinc1,c
  2170  002492  0E0B               	movlw	11
  2171  002494  6EE6               	movwf	postinc1,c
  2172  002496  05BF               	decf	(_V+88)& (0+255),w,b
  2173  002498  6EE6               	movwf	postinc1,c
  2174  00249A  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2175                           
  2176                           ;main.c: 484:     break;
  2177  00249E  D018               	goto	l8466
  2178  0024A0                     l1258:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;main.c: 486:     V.s_state = SEQ_STATE_INIT;
  2182  0024A0  6B67               	clrf	_V& (0+255),b
  2183                           
  2184                           ;main.c: 487:     break;
  2185  0024A2  D016               	goto	l8466
  2186  0024A4                     l8464:
  2187                           
  2188                           ; BSR set to: 0
  2189  0024A4  5167               	movf	_V& (0+255),w,b
  2190  0024A6  6E45               	movwf	btemp+10,c
  2191  0024A8  6A46               	clrf	btemp+11,c
  2192                           
  2193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2194                           ; Switch size 1, requested type "simple"
  2195                           ; Number of cases is 1, Range of values is 0 to 0
  2196                           ; switch strategies available:
  2197                           ; Name         Instructions Cycles
  2198                           ; simple_byte            4     3 (average)
  2199                           ;	Chosen strategy is simple_byte
  2200  0024AA  5046               	movf	btemp+11,w,c
  2201  0024AC  0A00               	xorlw	0	; case 0
  2202  0024AE  A4D8               	btfss	status,2,c
  2203  0024B0  D7F7               	goto	l1258
  2204                           
  2205                           ; BSR set to: 0
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 5, Range of values is 0 to 6
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte           16     9 (average)
  2211                           ;	Chosen strategy is simple_byte
  2212  0024B2  5045               	movf	btemp+10,w,c
  2213  0024B4  0A00               	xorlw	0	; case 0
  2214  0024B6  B4D8               	btfsc	status,2,c
  2215  0024B8  D781               	goto	l1252
  2216  0024BA  0A01               	xorlw	1	; case 1
  2217  0024BC  B4D8               	btfsc	status,2,c
  2218  0024BE  D79B               	goto	l8438
  2219  0024C0  0A02               	xorlw	2	; case 3
  2220  0024C2  B4D8               	btfsc	status,2,c
  2221  0024C4  D7D6               	goto	l8454
  2222  0024C6  0A06               	xorlw	6	; case 5
  2223  0024C8  B4D8               	btfsc	status,2,c
  2224  0024CA  D7EA               	goto	l1258
  2225  0024CC  0A03               	xorlw	3	; case 6
  2226  0024CE  D7E8               	goto	l1258
  2227  0024D0                     l8466:
  2228                           
  2229                           ;main.c: 493:    sprintf(V.buf, " LOG MODE %d     #", V.uart);
  2230  0024D0  0100               	movlb	0	; () banked
  2231  0024D2  51BF               	movf	(_V+88)& (0+255),w,b
  2232  0024D4  6EE6               	movwf	postinc1,c
  2233  0024D6  0E00               	movlw	0
  2234  0024D8  6EE6               	movwf	postinc1,c
  2235  0024DA  0E2A               	movlw	STR_11& (0+255)
  2236  0024DC  6EE6               	movwf	postinc1,c
  2237  0024DE  0E67               	movlw	_V& (0+255)
  2238  0024E0  0F05               	addlw	5
  2239  0024E2  6EE6               	movwf	postinc1,c
  2240  0024E4  0E04               	movlw	4
  2241  0024E6  6EE6               	movwf	postinc1,c
  2242  0024E8  ECF5  F026         	call	_sprintf	;wreg free
  2243  0024EC  D75A               	goto	l8422
  2244  0024EE                     l1262:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;main.c: 500:    V.ui_state = UI_STATE_INIT;
  2248  0024EE  6B68               	clrf	(_V+1)& (0+255),b
  2249                           
  2250                           ;main.c: 501:    break;
  2251  0024F0  D014               	goto	l1263
  2252  0024F2                     l8476:
  2253  0024F2  0100               	movlb	0	; () banked
  2254  0024F4  5168               	movf	(_V+1)& (0+255),w,b
  2255  0024F6  6E45               	movwf	btemp+10,c
  2256  0024F8  6A46               	clrf	btemp+11,c
  2257                           
  2258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2259                           ; Switch size 1, requested type "simple"
  2260                           ; Number of cases is 1, Range of values is 0 to 0
  2261                           ; switch strategies available:
  2262                           ; Name         Instructions Cycles
  2263                           ; simple_byte            4     3 (average)
  2264                           ;	Chosen strategy is simple_byte
  2265  0024FA  5046               	movf	btemp+11,w,c
  2266  0024FC  0A00               	xorlw	0	; case 0
  2267  0024FE  A4D8               	btfss	status,2,c
  2268  002500  D7F6               	goto	l1262
  2269                           
  2270                           ; BSR set to: 0
  2271                           ; Switch size 1, requested type "simple"
  2272                           ; Number of cases is 4, Range of values is 0 to 4
  2273                           ; switch strategies available:
  2274                           ; Name         Instructions Cycles
  2275                           ; simple_byte           13     7 (average)
  2276                           ;	Chosen strategy is simple_byte
  2277  002502  5045               	movf	btemp+10,w,c
  2278  002504  0A00               	xorlw	0	; case 0
  2279  002506  B4D8               	btfsc	status,2,c
  2280  002508  D5F8               	goto	l8316
  2281  00250A  0A01               	xorlw	1	; case 1
  2282  00250C  B4D8               	btfsc	status,2,c
  2283  00250E  D714               	goto	l8414
  2284  002510  0A02               	xorlw	2	; case 3
  2285  002512  B4D8               	btfsc	status,2,c
  2286  002514  D7C7               	goto	l8464
  2287  002516  0A07               	xorlw	7	; case 4
  2288  002518  D7EA               	goto	l1262
  2289  00251A                     l1263:
  2290  00251A  82BE               	bsf	16318,1,c	;volatile
  2291                           
  2292                           ;main.c: 504:   if (V.ticks) {
  2293  00251C  0100               	movlb	0	; () banked
  2294  00251E  51AC               	movf	(_V+69)& (0+255),w,b
  2295  002520  11AD               	iorwf	(_V+70)& (0+255),w,b
  2296  002522  11AE               	iorwf	(_V+71)& (0+255),w,b
  2297  002524  11AF               	iorwf	(_V+72)& (0+255),w,b
  2298  002526  B4D8               	btfsc	status,2,c
  2299  002528  D016               	goto	l8484
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;main.c: 505:    if (V.failed_receive) {
  2303  00252A  51BE               	movf	(_V+87)& (0+255),w,b
  2304  00252C  0B0F               	andlw	15
  2305  00252E  0900               	iorlw	0
  2306  002530  B4D8               	btfsc	status,2,c
  2307  002532  D003               	goto	l1272
  2308                           
  2309                           ; BSR set to: 0
  2310                           
  2311                           ;main.c: 506:     do { LATDbits.LATD4 = 0; } while(0);
  2312  002534  98BD               	bcf	16317,4,c	;volatile
  2313                           
  2314                           ; BSR set to: 0
  2315                           
  2316                           ;main.c: 507:     do { LATDbits.LATD5 = 1; } while(0);
  2317  002536  8ABD               	bsf	16317,5,c	;volatile
  2318  002538  D002               	goto	l8482
  2319  00253A                     l1272:
  2320                           
  2321                           ; BSR set to: 0
  2322  00253A  88BD               	bsf	16317,4,c	;volatile
  2323                           
  2324                           ; BSR set to: 0
  2325                           
  2326                           ;main.c: 510:     do { LATDbits.LATD5 = 0; } while(0);
  2327  00253C  9ABD               	bcf	16317,5,c	;volatile
  2328  00253E                     l8482:
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;main.c: 512:    if (V.failed_send) {
  2332  00253E  31BD               	rrcf	(_V+86)& (0+255),w,b
  2333  002540  32E8               	rrcf	wreg,f,c
  2334  002542  32E8               	rrcf	wreg,f,c
  2335  002544  0B0F               	andlw	15
  2336  002546  0900               	iorlw	0
  2337  002548  B4D8               	btfsc	status,2,c
  2338  00254A  D003               	goto	l1282
  2339                           
  2340                           ; BSR set to: 0
  2341                           
  2342                           ;main.c: 513:     do { LATDbits.LATD6 = 0; } while(0);
  2343  00254C  9CBD               	bcf	16317,6,c	;volatile
  2344                           
  2345                           ; BSR set to: 0
  2346                           
  2347                           ;main.c: 514:     do { LATDbits.LATD7 = 1; } while(0);
  2348  00254E  8EBD               	bsf	16317,7,c	;volatile
  2349  002550  D002               	goto	l8484
  2350  002552                     l1282:
  2351                           
  2352                           ; BSR set to: 0
  2353  002552  8CBD               	bsf	16317,6,c	;volatile
  2354                           
  2355                           ; BSR set to: 0
  2356                           
  2357                           ;main.c: 517:     do { LATDbits.LATD7 = 0; } while(0);
  2358  002554  9EBD               	bcf	16317,7,c	;volatile
  2359  002556                     l8484:
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;main.c: 520:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2363  002556  31BD               	rrcf	(_V+86)& (0+255),w,b
  2364  002558  32E8               	rrcf	wreg,f,c
  2365  00255A  32E8               	rrcf	wreg,f,c
  2366  00255C  0B0F               	andlw	15
  2367  00255E  6EE6               	movwf	postinc1,c
  2368  002560  0E00               	movlw	0
  2369  002562  6EE6               	movwf	postinc1,c
  2370  002564  51BE               	movf	(_V+87)& (0+255),w,b
  2371  002566  0B0F               	andlw	15
  2372  002568  6EE6               	movwf	postinc1,c
  2373  00256A  0E00               	movlw	0
  2374  00256C  6EE6               	movwf	postinc1,c
  2375  00256E  516B               	movf	(_V+4)& (0+255),w,b
  2376  002570  6EE6               	movwf	postinc1,c
  2377  002572  0E00               	movlw	0
  2378  002574  6EE6               	movwf	postinc1,c
  2379  002576  516A               	movf	(_V+3)& (0+255),w,b
  2380  002578  6EE6               	movwf	postinc1,c
  2381  00257A  0E00               	movlw	0
  2382  00257C  6EE6               	movwf	postinc1,c
  2383  00257E  0E01               	movlw	STR_15& (0+255)
  2384  002580  6EE6               	movwf	postinc1,c
  2385  002582  0E67               	movlw	_V& (0+255)
  2386  002584  0F05               	addlw	5
  2387  002586  6EE6               	movwf	postinc1,c
  2388  002588  0E0A               	movlw	10
  2389  00258A  6EE6               	movwf	postinc1,c
  2390  00258C  ECF5  F026         	call	_sprintf	;wreg free
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;main.c: 521:   V.buf[16] = 0;
  2394  002590  6B7C               	clrf	(_V+21)& (0+255),b
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;main.c: 522:   wait_lcd_done();
  2398  002592  EC1F  F030         	call	_wait_lcd_done	;wreg free
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;main.c: 523:   if (mode != UI_STATE_LOG)
  2402                           ;stkvar	_mode @ sp[(-1)+0]
  2403  002596  0EFF               	movlw	-1
  2404  002598  006F FF8C  F03B    	movff	plusw1,btemp
  2405  00259E  0E03               	movlw	3
  2406  0025A0  183B               	xorwf	btemp,w,c
  2407  0025A2  B4D8               	btfsc	status,2,c
  2408  0025A4  D009               	goto	l8494
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;main.c: 524:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2412  0025A6  0E67               	movlw	_V& (0+255)
  2413  0025A8  0F05               	addlw	5
  2414  0025AA  6EE6               	movwf	postinc1,c
  2415  0025AC  0E00               	movlw	0
  2416  0025AE  6EE6               	movwf	postinc1,c
  2417  0025B0  0E01               	movlw	1
  2418  0025B2  6EE6               	movwf	postinc1,c
  2419  0025B4  EC79  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2420  0025B8                     l8494:
  2421  0025B8  92BE               	bcf	16318,1,c	;volatile
  2422  0025BA  D79B               	goto	l8476
  2423  0025BC                     __end_of_main:
  2424                           	opt callstack 0
  2425                           
  2426 ;; *************** function _t_protocol *****************
  2427 ;; Defined at:
  2428 ;;		line 302 in file "gemsecs.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  t_link          1  [STACK] PTR enum E16163
  2431 ;;		 -> V(89), 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  rxData          1  [STACK] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1  [STACK] enum E16903
  2436 ;; Registers used:
  2437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2447 ;;Total ram usage:        0 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    5
  2450 ;; This function calls:
  2451 ;;		_StartTimer
  2452 ;;		_TimerDone
  2453 ;;		_UART1_Read
  2454 ;;		_UART1_Write
  2455 ;;		_UART1_is_rx_ready
  2456 ;;		_UART1_put_buffer
  2457 ;;		_secs_II_message
  2458 ;;		_secs_send
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text1
  2465  003E52                     __ptext1:
  2466                           	opt callstack 0
  2467  003E52                     _t_protocol:
  2468                           	opt callstack 0
  2469                           
  2470                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2471  003E52  52E6               	movf	postinc1,f,c
  2472                           
  2473                           ;gemsecs.c: 302: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 303: {;gemsecs.
      +                          c: 304:  uint8_t rxData;;gemsecs.c: 305:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          306:  static response_type block;;gemsecs.c: 308:  switch (*t_link) {
  2474                           
  2475                           ;incstack = 0
  2476  003E54  D10D               	goto	l8282
  2477  003E56                     l1655:
  2478                           
  2479                           ;gemsecs.c: 310:   V.error = LINK_ERROR_NONE;
  2480  003E56  0100               	movlb	0	; () banked
  2481  003E58  6BB6               	clrf	(_V+79)& (0+255),b
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;gemsecs.c: 311:   retry = 3;
  2485  003E5A  0E03               	movlw	3
  2486  003E5C  6E2B               	movwf	t_protocol@retry,c
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;gemsecs.c: 312:   UART1_Write(0x05);
  2490  003E5E  0E05               	movlw	5
  2491  003E60  6EE6               	movwf	postinc1,c
  2492  003E62  ECAC  F02C         	call	_UART1_Write	;wreg free
  2493                           
  2494                           ; BSR set to: 57
  2495                           ;gemsecs.c: 313:   StartTimer(TMR_T2, 2000);
  2496  003E66  0ED0               	movlw	208
  2497  003E68  6EE6               	movwf	postinc1,c
  2498  003E6A  0E07               	movlw	7
  2499  003E6C  6EE6               	movwf	postinc1,c
  2500  003E6E  0E02               	movlw	2
  2501  003E70  6EE6               	movwf	postinc1,c
  2502  003E72  EC29  F02D         	call	_StartTimer	;wreg free
  2503                           
  2504                           ;gemsecs.c: 314:   *t_link = LINK_STATE_ENQ;
  2505                           ;stkvar	_t_link @ sp[(-1)+-1]
  2506  003E76  0EFE               	movlw	-2
  2507  003E78  50E3               	movf	plusw1,w,c
  2508  003E7A  6ED9               	movwf	fsr2l,c
  2509  003E7C  6ADA               	clrf	fsr2h,c
  2510  003E7E  0E01               	movlw	1
  2511  003E80  D0F5               	goto	L5
  2512  003E82                     l8198:
  2513                           
  2514                           ;gemsecs.c: 321:   if (TimerDone(TMR_T2)) {
  2515  003E82  0E02               	movlw	2
  2516  003E84  6EE6               	movwf	postinc1,c
  2517  003E86  EC9B  F02F         	call	_TimerDone	;wreg free
  2518  003E8A  503B               	movf	btemp,w,c
  2519  003E8C  B4D8               	btfsc	status,2,c
  2520  003E8E  D01A               	goto	l8208
  2521                           
  2522                           ;gemsecs.c: 322:    if (!retry--) {
  2523  003E90  062B               	decf	t_protocol@retry,f,c
  2524  003E92  282B               	incf	t_protocol@retry,w,c
  2525  003E94  A4D8               	btfss	status,2,c
  2526  003E96  D00D               	goto	l8206
  2527                           
  2528                           ;gemsecs.c: 323:     V.error = LINK_ERROR_T2;
  2529  003E98  0E02               	movlw	2
  2530  003E9A  0100               	movlb	0	; () banked
  2531  003E9C  6FB6               	movwf	(_V+79)& (0+255),b
  2532                           
  2533                           ;gemsecs.c: 324:     V.failed_send = 1;
  2534  003E9E  51BD               	movf	(_V+86)& (0+255),w,b
  2535  003EA0  0B87               	andlw	-121
  2536  003EA2  0908               	iorlw	8
  2537  003EA4  6FBD               	movwf	(_V+86)& (0+255),b
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;gemsecs.c: 325:     *t_link = LINK_STATE_NAK;
  2541                           ;stkvar	_t_link @ sp[(-1)+-1]
  2542  003EA6  0EFE               	movlw	-2
  2543  003EA8  50E3               	movf	plusw1,w,c
  2544  003EAA  6ED9               	movwf	fsr2l,c
  2545  003EAC  6ADA               	clrf	fsr2h,c
  2546  003EAE  0E05               	movlw	5
  2547  003EB0  D0DD               	goto	L5
  2548  003EB2                     l8206:
  2549                           
  2550                           ;gemsecs.c: 327:     StartTimer(TMR_T2, 2000);
  2551  003EB2  0ED0               	movlw	208
  2552  003EB4  6EE6               	movwf	postinc1,c
  2553  003EB6  0E07               	movlw	7
  2554  003EB8  6EE6               	movwf	postinc1,c
  2555  003EBA  0E02               	movlw	2
  2556  003EBC  6EE6               	movwf	postinc1,c
  2557  003EBE  EC29  F02D         	call	_StartTimer	;wreg free
  2558  003EC2  D0F7               	goto	l8284
  2559  003EC4                     l8208:
  2560                           
  2561                           ;gemsecs.c: 330:    if (UART1_is_rx_ready()) {
  2562  003EC4  ECD9  F030         	call	_UART1_is_rx_ready	;wreg free
  2563  003EC8  503B               	movf	btemp,w,c
  2564  003ECA  B4D8               	btfsc	status,2,c
  2565  003ECC  D0F2               	goto	l8284
  2566                           
  2567                           ;gemsecs.c: 331:     rxData = UART1_Read();
  2568  003ECE  ECEA  F02C         	call	_UART1_Read	;wreg free
  2569                           
  2570                           ;stkvar	_rxData @ sp[(-1)+0]
  2571  003ED2  0EFF               	movlw	-1
  2572  003ED4  0060  F0EF  FFE3   	movff	btemp,plusw1
  2573                           
  2574                           ; BSR set to: 57
  2575                           ;gemsecs.c: 332:     if (rxData == 0x04) {
  2576                           ;stkvar	_rxData @ sp[(-1)+0]
  2577  003EDA  0EFF               	movlw	-1
  2578  003EDC  006F FF8C  F03B    	movff	plusw1,btemp
  2579  003EE2  0E04               	movlw	4
  2580  003EE4  183B               	xorwf	btemp,w,c
  2581  003EE6  A4D8               	btfss	status,2,c
  2582  003EE8  D00E               	goto	l8218
  2583                           
  2584                           ; BSR set to: 57
  2585                           ;gemsecs.c: 333:      StartTimer(TMR_T3, 5000);
  2586  003EEA  0E88               	movlw	136
  2587  003EEC  6EE6               	movwf	postinc1,c
  2588  003EEE  0E13               	movlw	19
  2589  003EF0  6EE6               	movwf	postinc1,c
  2590  003EF2  0E03               	movlw	3
  2591  003EF4  6EE6               	movwf	postinc1,c
  2592  003EF6  EC29  F02D         	call	_StartTimer	;wreg free
  2593                           
  2594                           ;gemsecs.c: 334:      *t_link = LINK_STATE_EOT;
  2595                           ;stkvar	_t_link @ sp[(-1)+-1]
  2596  003EFA  0EFE               	movlw	-2
  2597  003EFC  50E3               	movf	plusw1,w,c
  2598  003EFE  6ED9               	movwf	fsr2l,c
  2599  003F00  6ADA               	clrf	fsr2h,c
  2600  003F02  0E02               	movlw	2
  2601  003F04  6EDF               	movwf	indf2,c
  2602  003F06                     l8218:
  2603                           
  2604                           ;gemsecs.c: 336:     if (rxData == 0x05) {
  2605                           ;stkvar	_rxData @ sp[(-1)+0]
  2606  003F06  0EFF               	movlw	-1
  2607  003F08  006F FF8C  F03B    	movff	plusw1,btemp
  2608  003F0E  0E05               	movlw	5
  2609  003F10  183B               	xorwf	btemp,w,c
  2610  003F12  A4D8               	btfss	status,2,c
  2611  003F14  D0CE               	goto	l8284
  2612                           
  2613                           ;gemsecs.c: 337:      UART1_put_buffer(0x04);
  2614  003F16  0E04               	movlw	4
  2615  003F18  6EE6               	movwf	postinc1,c
  2616  003F1A  ECD0  F02D         	call	_UART1_put_buffer	;wreg free
  2617  003F1E                     l8222:
  2618                           
  2619                           ;gemsecs.c: 338:      *t_link = LINK_STATE_DONE;
  2620                           ;stkvar	_t_link @ sp[(-1)+-1]
  2621  003F1E  0EFE               	movlw	-2
  2622  003F20  50E3               	movf	plusw1,w,c
  2623  003F22  6ED9               	movwf	fsr2l,c
  2624  003F24  6ADA               	clrf	fsr2h,c
  2625  003F26  0E04               	movlw	4
  2626  003F28  D0A1               	goto	L5
  2627  003F2A                     l8224:
  2628                           
  2629                           ;gemsecs.c: 344:   if (!requeue)
  2630  003F2A  502A               	movf	t_protocol@requeue,w,c
  2631  003F2C  A4D8               	btfss	status,2,c
  2632  003F2E  D010               	goto	l8228
  2633                           
  2634                           ;gemsecs.c: 345:    block = secs_II_message(V.stream, V.function);
  2635  003F30  0100               	movlb	0	; () banked
  2636  003F32  51B5               	movf	(_V+78)& (0+255),w,b
  2637  003F34  6EE6               	movwf	postinc1,c
  2638  003F36  51B4               	movf	(_V+77)& (0+255),w,b
  2639  003F38  6EE6               	movwf	postinc1,c
  2640  003F3A  EC96  F021         	call	_secs_II_message	;wreg free
  2641  003F3E  EE20  F0E5         	lfsr	2,t_protocol@block
  2642  003F42  0E06               	movlw	6
  2643  003F44                     u5121:
  2644  003F44  52E5               	movf	postdec1,f,c
  2645  003F46  006F FF9F FFDB     	movff	indf1,plusw2
  2646  003F4C  06E8               	decf	wreg,f,c
  2647  003F4E  E2FA               	bc	u5121
  2648  003F50                     l8228:
  2649                           
  2650                           ;gemsecs.c: 347:   if (V.abort == LINK_ERROR_ABORT) {
  2651  003F50  0E07               	movlw	7
  2652  003F52  0100               	movlb	0	; () banked
  2653  003F54  19B7               	xorwf	(_V+80)& (0+255),w,b
  2654  003F56  A4D8               	btfss	status,2,c
  2655  003F58  D019               	goto	l8236
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;gemsecs.c: 348:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  2659  003F5A  0E01               	movlw	1
  2660  003F5C  6EE6               	movwf	postinc1,c
  2661  003F5E  0E00               	movlw	0
  2662  003F60  6EE6               	movwf	postinc1,c
  2663  003F62  51E7               	movf	(t_protocol@block+2)& (0+255),w,b
  2664  003F64  6EE6               	movwf	postinc1,c
  2665  003F66  0060  F397  FFE6   	movff	t_protocol@block,postinc1
  2666  003F6C  0060  F39B  FFE6   	movff	t_protocol@block+1,postinc1
  2667  003F72  EC62  F020         	call	_secs_send	;wreg free
  2668                           
  2669                           ;gemsecs.c: 349:    V.failed_send = 2;
  2670  003F76  0100               	movlb	0	; () banked
  2671  003F78  51BD               	movf	(_V+86)& (0+255),w,b
  2672  003F7A  0B87               	andlw	-121
  2673  003F7C  0910               	iorlw	16
  2674  003F7E  6FBD               	movwf	(_V+86)& (0+255),b
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;gemsecs.c: 350:    *t_link = LINK_STATE_ERROR;
  2678                           ;stkvar	_t_link @ sp[(-1)+-1]
  2679  003F80  0EFE               	movlw	-2
  2680  003F82  50E3               	movf	plusw1,w,c
  2681  003F84  6ED9               	movwf	fsr2l,c
  2682  003F86  6ADA               	clrf	fsr2h,c
  2683  003F88  0E06               	movlw	6
  2684  003F8A  D070               	goto	L5
  2685  003F8C                     l8236:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;gemsecs.c: 352:    if (!requeue) {
  2689  003F8C  502A               	movf	t_protocol@requeue,w,c
  2690  003F8E  A4D8               	btfss	status,2,c
  2691  003F90  D014               	goto	l1669
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;gemsecs.c: 353:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  2695  003F92  0E01               	movlw	1
  2696  003F94  6EE6               	movwf	postinc1,c
  2697  003F96  0E00               	movlw	0
  2698  003F98  6EE6               	movwf	postinc1,c
  2699  003F9A  51E7               	movf	(t_protocol@block+2)& (0+255),w,b
  2700  003F9C  6EE6               	movwf	postinc1,c
  2701  003F9E  0060  F397  FFE6   	movff	t_protocol@block,postinc1
  2702  003FA4  0060  F39B  FFE6   	movff	t_protocol@block+1,postinc1
  2703  003FAA  EC62  F020         	call	_secs_send	;wreg free
  2704                           
  2705                           ;gemsecs.c: 354:     if (V.queue)
  2706  003FAE  0100               	movlb	0	; () banked
  2707  003FB0  A9BE               	btfss	(_V+87)& (0+255),4,b
  2708  003FB2  D013               	goto	l8246
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;gemsecs.c: 355:      requeue = 1;
  2712  003FB4  0E01               	movlw	1
  2713  003FB6  6E2A               	movwf	t_protocol@requeue,c
  2714  003FB8  D010               	goto	l8246
  2715  003FBA                     l1669:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;gemsecs.c: 357:     requeue = 0;
  2719  003FBA  6A2A               	clrf	t_protocol@requeue,c
  2720                           
  2721                           ;gemsecs.c: 358:     V.queue = 0;
  2722  003FBC  99BE               	bcf	(_V+87)& (0+255),4,b
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;gemsecs.c: 359:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  2726  003FBE  0E01               	movlw	1
  2727  003FC0  6EE6               	movwf	postinc1,c
  2728  003FC2  0E00               	movlw	0
  2729  003FC4  6EE6               	movwf	postinc1,c
  2730  003FC6  51EA               	movf	(t_protocol@block+5)& (0+255),w,b
  2731  003FC8  6EE6               	movwf	postinc1,c
  2732  003FCA  0060  F3A3  FFE6   	movff	t_protocol@block+3,postinc1
  2733  003FD0  0060  F3A7  FFE6   	movff	t_protocol@block+4,postinc1
  2734  003FD6  EC62  F020         	call	_secs_send	;wreg free
  2735  003FDA                     l8246:
  2736                           
  2737                           ;gemsecs.c: 361:    if (V.error == LINK_ERROR_NONE) {
  2738  003FDA  0100               	movlb	0	; () banked
  2739  003FDC  51B6               	movf	(_V+79)& (0+255),w,b
  2740  003FDE  A4D8               	btfss	status,2,c
  2741  003FE0  D006               	goto	l8250
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;gemsecs.c: 362:     *t_link = LINK_STATE_ACK;
  2745                           ;stkvar	_t_link @ sp[(-1)+-1]
  2746  003FE2  0EFE               	movlw	-2
  2747  003FE4  50E3               	movf	plusw1,w,c
  2748  003FE6  6ED9               	movwf	fsr2l,c
  2749  003FE8  6ADA               	clrf	fsr2h,c
  2750  003FEA  0E03               	movlw	3
  2751  003FEC  D03F               	goto	L5
  2752  003FEE                     l8250:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;gemsecs.c: 364:     V.failed_send = 3;
  2756  003FEE  51BD               	movf	(_V+86)& (0+255),w,b
  2757  003FF0  0B87               	andlw	-121
  2758  003FF2  0918               	iorlw	24
  2759  003FF4  D7C4               	goto	L6
  2760  003FF6                     l8254:
  2761                           
  2762                           ;gemsecs.c: 374:   if (TimerDone(TMR_T3)) {
  2763  003FF6  0E03               	movlw	3
  2764  003FF8  6EE6               	movwf	postinc1,c
  2765  003FFA  EC9B  F02F         	call	_TimerDone	;wreg free
  2766  003FFE  503B               	movf	btemp,w,c
  2767  004000  B4D8               	btfsc	status,2,c
  2768  004002  D007               	goto	l8260
  2769                           
  2770                           ;gemsecs.c: 375:    V.error = LINK_ERROR_T3;
  2771  004004  0E03               	movlw	3
  2772  004006  0100               	movlb	0	; () banked
  2773  004008  6FB6               	movwf	(_V+79)& (0+255),b
  2774                           
  2775                           ;gemsecs.c: 376:    V.failed_send = 4;
  2776  00400A  51BD               	movf	(_V+86)& (0+255),w,b
  2777  00400C  0B87               	andlw	-121
  2778  00400E  0920               	iorlw	32
  2779  004010  D749               	goto	L7
  2780  004012                     l8260:
  2781                           
  2782                           ;gemsecs.c: 379:    if (UART1_is_rx_ready()) {
  2783  004012  ECD9  F030         	call	_UART1_is_rx_ready	;wreg free
  2784  004016  503B               	movf	btemp,w,c
  2785  004018  B4D8               	btfsc	status,2,c
  2786  00401A  D04B               	goto	l8284
  2787                           
  2788                           ;gemsecs.c: 380:     rxData = UART1_Read();
  2789  00401C  ECEA  F02C         	call	_UART1_Read	;wreg free
  2790                           
  2791                           ;stkvar	_rxData @ sp[(-1)+0]
  2792  004020  0EFF               	movlw	-1
  2793  004022  0060  F0EF  FFE3   	movff	btemp,plusw1
  2794                           
  2795                           ; BSR set to: 57
  2796                           ;gemsecs.c: 381:     if (rxData == 0x06) {
  2797                           ;stkvar	_rxData @ sp[(-1)+0]
  2798  004028  0EFF               	movlw	-1
  2799  00402A  006F FF8C  F03B    	movff	plusw1,btemp
  2800  004030  0E06               	movlw	6
  2801  004032  183B               	xorwf	btemp,w,c
  2802  004034  A4D8               	btfss	status,2,c
  2803  004036  D03D               	goto	l8284
  2804                           
  2805                           ; BSR set to: 57
  2806                           ;gemsecs.c: 382:      V.failed_send = 0;
  2807  004038  0E87               	movlw	-121
  2808  00403A  0100               	movlb	0	; () banked
  2809  00403C  17BD               	andwf	(_V+86)& (0+255),f,b
  2810  00403E  D76F               	goto	l8222
  2811  004040                     l8270:
  2812                           
  2813                           ;gemsecs.c: 389:   *t_link = LINK_STATE_ERROR;
  2814                           ;stkvar	_t_link @ sp[(-1)+-1]
  2815  004040  0EFE               	movlw	-2
  2816  004042  50E3               	movf	plusw1,w,c
  2817  004044  6ED9               	movwf	fsr2l,c
  2818  004046  6ADA               	clrf	fsr2h,c
  2819  004048  0E06               	movlw	6
  2820  00404A  6EDF               	movwf	indf2,c
  2821                           
  2822                           ;gemsecs.c: 390:   while ((uart1RxCount)) {
  2823  00404C  D002               	goto	l8274
  2824  00404E                     l8272:
  2825                           
  2826                           ;gemsecs.c: 391:    UART1_Read();
  2827  00404E  ECEA  F02C         	call	_UART1_Read	;wreg free
  2828  004052                     l8274:
  2829                           
  2830                           ;gemsecs.c: 390:   while ((uart1RxCount)) {
  2831  004052  5035               	movf	_uart1RxCount,w,c	;volatile
  2832  004054  B4D8               	btfsc	status,2,c
  2833  004056  D02D               	goto	l8284
  2834  004058  D7FA               	goto	l8272
  2835  00405A                     l8276:
  2836                           
  2837                           ;gemsecs.c: 397:   V.failed_send = 0;
  2838  00405A  0E87               	movlw	-121
  2839  00405C  0100               	movlb	0	; () banked
  2840  00405E  17BD               	andwf	(_V+86)& (0+255),f,b
  2841                           
  2842                           ;gemsecs.c: 398:   break;
  2843  004060  D028               	goto	l8284
  2844  004062                     l8278:
  2845                           
  2846                           ;gemsecs.c: 400:   *t_link = LINK_STATE_IDLE;
  2847                           ;stkvar	_t_link @ sp[(-1)+-1]
  2848  004062  0EFE               	movlw	-2
  2849  004064  50E3               	movf	plusw1,w,c
  2850  004066  6ED9               	movwf	fsr2l,c
  2851  004068  6ADA               	clrf	fsr2h,c
  2852  00406A  0E00               	movlw	0
  2853  00406C                     L5:
  2854  00406C  6EDF               	movwf	indf2,c
  2855                           
  2856                           ;gemsecs.c: 402:   break;
  2857  00406E  D021               	goto	l8284
  2858  004070                     l8282:
  2859                           
  2860                           ;stkvar	_t_link @ sp[(-1)+-1]
  2861  004070  0EFE               	movlw	-2
  2862  004072  50E3               	movf	plusw1,w,c
  2863  004074  6ED9               	movwf	fsr2l,c
  2864  004076  6ADA               	clrf	fsr2h,c
  2865  004078  50DF               	movf	indf2,w,c
  2866  00407A  6E45               	movwf	btemp+10,c
  2867  00407C  6A46               	clrf	btemp+11,c
  2868                           
  2869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2870                           ; Switch size 1, requested type "simple"
  2871                           ; Number of cases is 1, Range of values is 0 to 0
  2872                           ; switch strategies available:
  2873                           ; Name         Instructions Cycles
  2874                           ; simple_byte            4     3 (average)
  2875                           ;	Chosen strategy is simple_byte
  2876  00407E  5046               	movf	btemp+11,w,c
  2877  004080  0A00               	xorlw	0	; case 0
  2878  004082  A4D8               	btfss	status,2,c
  2879  004084  D7EE               	goto	l8278
  2880                           
  2881                           ; Switch size 1, requested type "simple"
  2882                           ; Number of cases is 7, Range of values is 0 to 6
  2883                           ; switch strategies available:
  2884                           ; Name         Instructions Cycles
  2885                           ; simple_byte           22    12 (average)
  2886                           ;	Chosen strategy is simple_byte
  2887  004086  5045               	movf	btemp+10,w,c
  2888  004088  0A00               	xorlw	0	; case 0
  2889  00408A  B4D8               	btfsc	status,2,c
  2890  00408C  D6E4               	goto	l1655
  2891  00408E  0A01               	xorlw	1	; case 1
  2892  004090  B4D8               	btfsc	status,2,c
  2893  004092  D6F7               	goto	l8198
  2894  004094  0A03               	xorlw	3	; case 2
  2895  004096  B4D8               	btfsc	status,2,c
  2896  004098  D748               	goto	l8224
  2897  00409A  0A01               	xorlw	1	; case 3
  2898  00409C  B4D8               	btfsc	status,2,c
  2899  00409E  D7AB               	goto	l8254
  2900  0040A0  0A07               	xorlw	7	; case 4
  2901  0040A2  B4D8               	btfsc	status,2,c
  2902  0040A4  D7DA               	goto	l8276
  2903  0040A6  0A01               	xorlw	1	; case 5
  2904  0040A8  B4D8               	btfsc	status,2,c
  2905  0040AA  D7CA               	goto	l8270
  2906  0040AC  0A03               	xorlw	3	; case 6
  2907  0040AE  A4D8               	btfss	status,2,c
  2908  0040B0  D7D8               	goto	l8278
  2909  0040B2                     l8284:
  2910                           
  2911                           ;gemsecs.c: 405:  return *t_link;
  2912                           ;stkvar	_t_link @ sp[(-1)+-1]
  2913  0040B2  0EFE               	movlw	-2
  2914  0040B4  50E3               	movf	plusw1,w,c
  2915  0040B6  6ED9               	movwf	fsr2l,c
  2916  0040B8  6ADA               	clrf	fsr2h,c
  2917  0040BA  50DF               	movf	indf2,w,c
  2918  0040BC  6E3B               	movwf	btemp,c
  2919                           
  2920                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2921  0040BE  52E5               	movf	postdec1,f,c
  2922  0040C0  52E5               	movf	postdec1,f,c
  2923  0040C2  0012               	return		;funcret
  2924  0040C4                     __end_of_t_protocol:
  2925                           	opt callstack 0
  2926                           
  2927 ;; *************** function _secs_send *****************
  2928 ;; Defined at:
  2929 ;;		line 409 in file "gemsecs.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  byte_block      2  [STACK] PTR unsigned char 
  2932 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2933 ;;		 -> H13(16), H12(30), H10(65), 
  2934 ;;  length          1  [STACK] unsigned char 
  2935 ;;  fake            1  [STACK] _Bool 
  2936 ;;  s_uart          1  [STACK] unsigned char 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  k               2  [STACK] PTR unsigned char 
  2939 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2940 ;;		 -> H13(16), H12(30), H10(65), 
  2941 ;;  checksum        2  [STACK] unsigned short 
  2942 ;;  i               1  [STACK] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1  [STACK] _Bool 
  2945 ;; Registers used:
  2946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  2947 ;; Tracked objects:
  2948 ;;		On entry : 3F/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    4
  2959 ;; This function calls:
  2960 ;;		_UART1_Write
  2961 ;;		_UART1_is_tx_ready
  2962 ;;		_UART1_put_buffer
  2963 ;;		_UART2_Write
  2964 ;;		_UART2_is_tx_ready
  2965 ;;		_UART2_put_buffer
  2966 ;;		_block_checksum
  2967 ;; This function is called by:
  2968 ;;		_t_protocol
  2969 ;; This function uses a reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text2
  2973  0040C4                     __ptext2:
  2974                           	opt callstack 0
  2975  0040C4                     _secs_send:
  2976                           	opt callstack 0
  2977                           
  2978                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2979  0040C4  0E05               	movlw	5
  2980  0040C6  26E1               	addwf	fsr1l,f,c
  2981  0040C8  0E00               	movlw	0
  2982  0040CA  22E2               	addwfc	fsr1h,f,c
  2983                           
  2984                           ;gemsecs.c: 409: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 410: {;gemsecs.c: 411:  uint8_t i, *k;;gemsecs.c: 412:  uint16_t ch
      +                          ecksum;;gemsecs.c: 414:  k = (uint8_t *) byte_block;
  2985                           ;stkvar	_byte_block @ sp[(-5)+-2]
  2986                           
  2987                           ;incstack = 0
  2988  0040CC  0EF9               	movlw	-7
  2989  0040CE  006F FF8C  F045    	movff	plusw1,btemp+10
  2990  0040D4  0EFA               	movlw	-6
  2991  0040D6  006F FF8C  F046    	movff	plusw1,btemp+11
  2992                           
  2993                           ;stkvar	_k @ sp[(-5)+0]
  2994  0040DC  0EFC               	movlw	-4
  2995  0040DE  0060  F11B  FFE3   	movff	btemp+11,plusw1
  2996  0040E4  0EFB               	movlw	-5
  2997  0040E6  0060  F117  FFE3   	movff	btemp+10,plusw1
  2998                           
  2999                           ;gemsecs.c: 416:  ++V.ticks;
  3000  0040EC  0E01               	movlw	1
  3001  0040EE  0100               	movlb	0	; () banked
  3002  0040F0  27AC               	addwf	(_V+69)& (0+255),f,b
  3003  0040F2  0E00               	movlw	0
  3004  0040F4  23AD               	addwfc	(_V+70)& (0+255),f,b
  3005  0040F6  23AE               	addwfc	(_V+71)& (0+255),f,b
  3006  0040F8  23AF               	addwfc	(_V+72)& (0+255),f,b
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;gemsecs.c: 417:  V.error = LINK_ERROR_NONE;
  3010  0040FA  6BB6               	clrf	(_V+79)& (0+255),b
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;gemsecs.c: 418:  if ((length - 3) != k[length - 1]) {
  3014                           ;stkvar	_length @ sp[(-5)+-3]
  3015  0040FC  0EF8               	movlw	-8
  3016  0040FE  50E3               	movf	plusw1,w,c
  3017  004100  6E45               	movwf	btemp+10,c
  3018  004102  6A46               	clrf	btemp+11,c
  3019                           
  3020                           ;stkvar	_k @ sp[(-5)+0]
  3021  004104  0EFB               	movlw	-5
  3022  004106  50E3               	movf	plusw1,w,c
  3023  004108  2645               	addwf	btemp+10,f,c
  3024  00410A  0EFC               	movlw	-4
  3025  00410C  50E3               	movf	plusw1,w,c
  3026  00410E  2246               	addwfc	btemp+11,f,c
  3027  004110  0EFF               	movlw	255
  3028  004112  2445               	addwf	btemp+10,w,c
  3029  004114  6ED9               	movwf	fsr2l,c
  3030  004116  0EFF               	movlw	255
  3031  004118  2046               	addwfc	btemp+11,w,c
  3032  00411A  6EDA               	movwf	fsr2h,c
  3033  00411C  50DF               	movf	indf2,w,c
  3034  00411E  6E45               	movwf	btemp+10,c
  3035  004120  6A46               	clrf	btemp+11,c
  3036  004122  0EFD               	movlw	253
  3037  004124  6E43               	movwf	btemp+8,c
  3038  004126  0EFF               	movlw	255
  3039  004128  6E44               	movwf	btemp+9,c
  3040                           
  3041                           ;stkvar	_length @ sp[(-5)+-3]
  3042  00412A  0EF8               	movlw	-8
  3043  00412C  50E3               	movf	plusw1,w,c
  3044  00412E  6E41               	movwf	btemp+6,c
  3045  004130  6A42               	clrf	btemp+7,c
  3046  004132  5043               	movf	btemp+8,w,c
  3047  004134  2641               	addwf	btemp+6,f,c
  3048  004136  5044               	movf	btemp+9,w,c
  3049  004138  2242               	addwfc	btemp+7,f,c
  3050  00413A  5045               	movf	btemp+10,w,c
  3051  00413C  1841               	xorwf	btemp+6,w,c
  3052  00413E  E104               	bnz	u4970
  3053  004140  5046               	movf	btemp+11,w,c
  3054  004142  1842               	xorwf	btemp+7,w,c
  3055  004144  B4D8               	btfsc	status,2,c
  3056  004146  D003               	goto	l8018
  3057  004148                     u4970:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;gemsecs.c: 419:   V.error = LINK_ERROR_SEND;
  3061  004148  0E08               	movlw	8
  3062  00414A  6FB6               	movwf	(_V+79)& (0+255),b
  3063  00414C  D0EA               	goto	l1690
  3064  00414E                     l8018:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;gemsecs.c: 428:  checksum = block_checksum(&k[2], length - 3);
  3068  00414E  0EFD               	movlw	253
  3069  004150  6E45               	movwf	btemp+10,c
  3070  004152  0EFF               	movlw	255
  3071  004154  6E46               	movwf	btemp+11,c
  3072                           
  3073                           ;stkvar	_length @ sp[(-5)+-3]
  3074  004156  0EF8               	movlw	-8
  3075  004158  50E3               	movf	plusw1,w,c
  3076  00415A  6E43               	movwf	btemp+8,c
  3077  00415C  6A44               	clrf	btemp+9,c
  3078  00415E  5045               	movf	btemp+10,w,c
  3079  004160  2643               	addwf	btemp+8,f,c
  3080  004162  5046               	movf	btemp+11,w,c
  3081  004164  2244               	addwfc	btemp+9,f,c
  3082  004166  0060  F10F  FFE6   	movff	btemp+8,postinc1
  3083  00416C  0060  F113  FFE6   	movff	btemp+9,postinc1
  3084                           
  3085                           ;stkvar	_k @ sp[(-7)+0]
  3086  004172  0EF9               	movlw	-7
  3087  004174  50E3               	movf	plusw1,w,c
  3088  004176  0F02               	addlw	2
  3089  004178  6E45               	movwf	btemp+10,c
  3090  00417A  0EFA               	movlw	-6
  3091  00417C  006F FF8C  F046    	movff	plusw1,btemp+11
  3092  004182  0E00               	movlw	0
  3093  004184  2246               	addwfc	btemp+11,f,c
  3094  004186  0060  F117  FFE6   	movff	btemp+10,postinc1
  3095  00418C  0060  F11B  FFE6   	movff	btemp+11,postinc1
  3096  004192  EC24  F026         	call	_block_checksum	;wreg free
  3097                           
  3098                           ;stkvar	_checksum @ sp[(-5)+2]
  3099  004196  0EFD               	movlw	-3
  3100  004198  0060  F0EF  FFE3   	movff	btemp,plusw1
  3101  00419E  0EFE               	movlw	-2
  3102  0041A0  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  3103                           
  3104                           ;gemsecs.c: 429:  k[0] = checksum & 0xff;
  3105                           ;stkvar	_checksum @ sp[(-5)+2]
  3106                           ;stkvar	_k @ sp[(-5)+0]
  3107  0041A6  0EFB               	movlw	-5
  3108  0041A8  006F FF8F FFD9     	movff	plusw1,fsr2l
  3109  0041AE  0EFC               	movlw	-4
  3110  0041B0  006F FF8F FFDA     	movff	plusw1,fsr2h
  3111  0041B6  0EFD               	movlw	-3
  3112  0041B8  006F FF8F FFDF     	movff	plusw1,indf2
  3113                           
  3114                           ;gemsecs.c: 430:  k[1] = (checksum >> 8)&0xff;
  3115                           ;stkvar	_checksum @ sp[(-5)+2]
  3116  0041BE  0EFE               	movlw	254
  3117  0041C0  24E1               	addwf	fsr1l,w,c
  3118  0041C2  6ED9               	movwf	fsr2l,c
  3119  0041C4  0EFF               	movlw	255
  3120  0041C6  20E2               	addwfc	fsr1h,w,c
  3121  0041C8  6EDA               	movwf	fsr2h,c
  3122                           
  3123                           ;stkvar	_k @ sp[(-5)+0]
  3124  0041CA  0EFB               	movlw	-5
  3125  0041CC  006F FF8C  F045    	movff	plusw1,btemp+10
  3126  0041D2  0EFC               	movlw	-4
  3127  0041D4  006F FF8C  F046    	movff	plusw1,btemp+11
  3128  0041DA  0E01               	movlw	1
  3129  0041DC  2445               	addwf	btemp+10,w,c
  3130  0041DE  6EE9               	movwf	fsr0l,c
  3131  0041E0  0E00               	movlw	0
  3132  0041E2  2046               	addwfc	btemp+11,w,c
  3133  0041E4  6EEA               	movwf	fsr0h,c
  3134  0041E6  006F FF7F FFEF     	movff	indf2,indf0
  3135                           
  3136                           ;gemsecs.c: 431:  V.t_checksum = checksum;
  3137                           ;stkvar	_checksum @ sp[(-5)+2]
  3138  0041EC  0EFD               	movlw	-3
  3139  0041EE  006F FF8C  F0BB    	movff	plusw1,_V+84
  3140  0041F4  0EFE               	movlw	-2
  3141  0041F6  006F FF8C  F0BC    	movff	plusw1,_V+85
  3142                           
  3143                           ;gemsecs.c: 433:  switch (s_uart) {
  3144  0041FC  D082               	goto	l8064
  3145  0041FE                     l8026:
  3146  0041FE  ECCD  F030         	call	_UART2_is_tx_ready	;wreg free
  3147  004202  0E3F               	movlw	63
  3148  004204  643B               	cpfsgt	btemp,c
  3149  004206  D7FB               	goto	l8026
  3150                           
  3151                           ;gemsecs.c: 436:   for (i = length; i > 0; i--) {
  3152                           ;stkvar	_length @ sp[(-5)+-3]
  3153                           ;stkvar	_i @ sp[(-5)+4]
  3154  004208  0EF8               	movlw	-8
  3155  00420A  006F FF8C  F03B    	movff	plusw1,btemp
  3156  004210  0EFF               	movlw	-1
  3157  004212  0060  F0EF  FFE3   	movff	btemp,plusw1
  3158  004218                     l8030:
  3159                           
  3160                           ;stkvar	_i @ sp[(-5)+4]
  3161  004218  0EFF               	movlw	-1
  3162  00421A  50E3               	movf	plusw1,w,c
  3163  00421C  B4D8               	btfsc	status,2,c
  3164  00421E  D081               	goto	l1690
  3165                           
  3166                           ;gemsecs.c: 437:    if (fake) {
  3167                           ;stkvar	_fake @ sp[(-5)+-4]
  3168  004220  0EF7               	movlw	-9
  3169  004222  50E3               	movf	plusw1,w,c
  3170  004224  B4D8               	btfsc	status,2,c
  3171  004226  D015               	goto	l8038
  3172                           
  3173                           ;gemsecs.c: 438:     UART2_put_buffer(k[i - 1]);
  3174                           ;stkvar	_i @ sp[(-5)+4]
  3175  004228  0EFF               	movlw	-1
  3176  00422A  50E3               	movf	plusw1,w,c
  3177  00422C  6E45               	movwf	btemp+10,c
  3178  00422E  6A46               	clrf	btemp+11,c
  3179                           
  3180                           ;stkvar	_k @ sp[(-5)+0]
  3181  004230  0EFB               	movlw	-5
  3182  004232  50E3               	movf	plusw1,w,c
  3183  004234  2645               	addwf	btemp+10,f,c
  3184  004236  0EFC               	movlw	-4
  3185  004238  50E3               	movf	plusw1,w,c
  3186  00423A  2246               	addwfc	btemp+11,f,c
  3187  00423C  0EFF               	movlw	255
  3188  00423E  2445               	addwf	btemp+10,w,c
  3189  004240  6ED9               	movwf	fsr2l,c
  3190  004242  0EFF               	movlw	255
  3191  004244  2046               	addwfc	btemp+11,w,c
  3192  004246  6EDA               	movwf	fsr2h,c
  3193  004248  50DF               	movf	indf2,w,c
  3194  00424A  6EE6               	movwf	postinc1,c
  3195  00424C  ECBB  F02D         	call	_UART2_put_buffer	;wreg free
  3196                           
  3197                           ;gemsecs.c: 439:    } else {
  3198  004250  D014               	goto	l8040
  3199  004252                     l8038:
  3200                           
  3201                           ;gemsecs.c: 441:     UART2_Write(k[i - 1]);
  3202                           ;stkvar	_i @ sp[(-5)+4]
  3203  004252  0EFF               	movlw	-1
  3204  004254  50E3               	movf	plusw1,w,c
  3205  004256  6E45               	movwf	btemp+10,c
  3206  004258  6A46               	clrf	btemp+11,c
  3207                           
  3208                           ;stkvar	_k @ sp[(-5)+0]
  3209  00425A  0EFB               	movlw	-5
  3210  00425C  50E3               	movf	plusw1,w,c
  3211  00425E  2645               	addwf	btemp+10,f,c
  3212  004260  0EFC               	movlw	-4
  3213  004262  50E3               	movf	plusw1,w,c
  3214  004264  2246               	addwfc	btemp+11,f,c
  3215  004266  0EFF               	movlw	255
  3216  004268  2445               	addwf	btemp+10,w,c
  3217  00426A  6ED9               	movwf	fsr2l,c
  3218  00426C  0EFF               	movlw	255
  3219  00426E  2046               	addwfc	btemp+11,w,c
  3220  004270  6EDA               	movwf	fsr2h,c
  3221  004272  50DF               	movf	indf2,w,c
  3222  004274  6EE6               	movwf	postinc1,c
  3223  004276  EC8D  F02C         	call	_UART2_Write	;wreg free
  3224  00427A                     l8040:
  3225                           
  3226                           ; BSR set to: 57
  3227                           ;gemsecs.c: 443:   }
  3228                           ;stkvar	_i @ sp[(-5)+4]
  3229  00427A  0EFF               	movlw	-1
  3230  00427C  06E3               	decf	plusw1,f,c
  3231  00427E  D7CC               	goto	l8030
  3232  004280                     l8044:
  3233  004280  ECD1  F030         	call	_UART1_is_tx_ready	;wreg free
  3234  004284  0E3F               	movlw	63
  3235  004286  643B               	cpfsgt	btemp,c
  3236  004288  D7FB               	goto	l8044
  3237                           
  3238                           ;gemsecs.c: 448:   for (i = length; i > 0; i--) {
  3239                           ;stkvar	_length @ sp[(-5)+-3]
  3240                           ;stkvar	_i @ sp[(-5)+4]
  3241  00428A  0EF8               	movlw	-8
  3242  00428C  006F FF8C  F03B    	movff	plusw1,btemp
  3243  004292  0EFF               	movlw	-1
  3244  004294  0060  F0EF  FFE3   	movff	btemp,plusw1
  3245  00429A                     l8048:
  3246                           
  3247                           ;stkvar	_i @ sp[(-5)+4]
  3248  00429A  0EFF               	movlw	-1
  3249  00429C  50E3               	movf	plusw1,w,c
  3250  00429E  B4D8               	btfsc	status,2,c
  3251  0042A0  D040               	goto	l1690
  3252                           
  3253                           ;gemsecs.c: 449:    if (fake) {
  3254                           ;stkvar	_fake @ sp[(-5)+-4]
  3255  0042A2  0EF7               	movlw	-9
  3256  0042A4  50E3               	movf	plusw1,w,c
  3257  0042A6  B4D8               	btfsc	status,2,c
  3258  0042A8  D015               	goto	l8056
  3259                           
  3260                           ;gemsecs.c: 450:     UART1_put_buffer(k[i - 1]);
  3261                           ;stkvar	_i @ sp[(-5)+4]
  3262  0042AA  0EFF               	movlw	-1
  3263  0042AC  50E3               	movf	plusw1,w,c
  3264  0042AE  6E45               	movwf	btemp+10,c
  3265  0042B0  6A46               	clrf	btemp+11,c
  3266                           
  3267                           ;stkvar	_k @ sp[(-5)+0]
  3268  0042B2  0EFB               	movlw	-5
  3269  0042B4  50E3               	movf	plusw1,w,c
  3270  0042B6  2645               	addwf	btemp+10,f,c
  3271  0042B8  0EFC               	movlw	-4
  3272  0042BA  50E3               	movf	plusw1,w,c
  3273  0042BC  2246               	addwfc	btemp+11,f,c
  3274  0042BE  0EFF               	movlw	255
  3275  0042C0  2445               	addwf	btemp+10,w,c
  3276  0042C2  6ED9               	movwf	fsr2l,c
  3277  0042C4  0EFF               	movlw	255
  3278  0042C6  2046               	addwfc	btemp+11,w,c
  3279  0042C8  6EDA               	movwf	fsr2h,c
  3280  0042CA  50DF               	movf	indf2,w,c
  3281  0042CC  6EE6               	movwf	postinc1,c
  3282  0042CE  ECD0  F02D         	call	_UART1_put_buffer	;wreg free
  3283                           
  3284                           ;gemsecs.c: 451:    } else {
  3285  0042D2  D014               	goto	l8058
  3286  0042D4                     l8056:
  3287                           
  3288                           ;gemsecs.c: 453:     UART1_Write(k[i - 1]);
  3289                           ;stkvar	_i @ sp[(-5)+4]
  3290  0042D4  0EFF               	movlw	-1
  3291  0042D6  50E3               	movf	plusw1,w,c
  3292  0042D8  6E45               	movwf	btemp+10,c
  3293  0042DA  6A46               	clrf	btemp+11,c
  3294                           
  3295                           ;stkvar	_k @ sp[(-5)+0]
  3296  0042DC  0EFB               	movlw	-5
  3297  0042DE  50E3               	movf	plusw1,w,c
  3298  0042E0  2645               	addwf	btemp+10,f,c
  3299  0042E2  0EFC               	movlw	-4
  3300  0042E4  50E3               	movf	plusw1,w,c
  3301  0042E6  2246               	addwfc	btemp+11,f,c
  3302  0042E8  0EFF               	movlw	255
  3303  0042EA  2445               	addwf	btemp+10,w,c
  3304  0042EC  6ED9               	movwf	fsr2l,c
  3305  0042EE  0EFF               	movlw	255
  3306  0042F0  2046               	addwfc	btemp+11,w,c
  3307  0042F2  6EDA               	movwf	fsr2h,c
  3308  0042F4  50DF               	movf	indf2,w,c
  3309  0042F6  6EE6               	movwf	postinc1,c
  3310  0042F8  ECAC  F02C         	call	_UART1_Write	;wreg free
  3311  0042FC                     l8058:
  3312                           
  3313                           ; BSR set to: 57
  3314                           ;gemsecs.c: 455:   }
  3315                           ;stkvar	_i @ sp[(-5)+4]
  3316  0042FC  0EFF               	movlw	-1
  3317  0042FE  06E3               	decf	plusw1,f,c
  3318  004300  D7CC               	goto	l8048
  3319  004302                     l8064:
  3320                           
  3321                           ;stkvar	_s_uart @ sp[(-5)+-5]
  3322  004302  0EF6               	movlw	-10
  3323  004304  50E3               	movf	plusw1,w,c
  3324  004306  6E45               	movwf	btemp+10,c
  3325  004308  6A46               	clrf	btemp+11,c
  3326                           
  3327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3328                           ; Switch size 1, requested type "simple"
  3329                           ; Number of cases is 1, Range of values is 0 to 0
  3330                           ; switch strategies available:
  3331                           ; Name         Instructions Cycles
  3332                           ; simple_byte            4     3 (average)
  3333                           ;	Chosen strategy is simple_byte
  3334  00430A  5046               	movf	btemp+11,w,c
  3335  00430C  0A00               	xorlw	0	; case 0
  3336  00430E  A4D8               	btfss	status,2,c
  3337  004310  D7B7               	goto	l8044
  3338                           
  3339                           ; Switch size 1, requested type "simple"
  3340                           ; Number of cases is 2, Range of values is 1 to 2
  3341                           ; switch strategies available:
  3342                           ; Name         Instructions Cycles
  3343                           ; simple_byte            7     4 (average)
  3344                           ;	Chosen strategy is simple_byte
  3345  004312  5045               	movf	btemp+10,w,c
  3346  004314  0A01               	xorlw	1	; case 1
  3347  004316  B4D8               	btfsc	status,2,c
  3348  004318  D7B3               	goto	l8044
  3349  00431A  0A03               	xorlw	3	; case 2
  3350  00431C  B4D8               	btfsc	status,2,c
  3351  00431E  D76F               	goto	l8026
  3352  004320  D7AF               	goto	l8044
  3353  004322                     l1690:
  3354                           
  3355                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  3356  004322  0EF6               	movlw	246
  3357  004324  26E1               	addwf	fsr1l,f,c
  3358  004326  0EFF               	movlw	255
  3359  004328  22E2               	addwfc	fsr1h,f,c
  3360  00432A  0012               	return		;funcret
  3361  00432C                     __end_of_secs_send:
  3362                           	opt callstack 0
  3363                           
  3364 ;; *************** function _block_checksum *****************
  3365 ;; Defined at:
  3366 ;;		line 18 in file "gemsecs.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  byte_block      2  [STACK] PTR unsigned char 
  3369 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3370 ;;		 -> H13(16), H12(30), H10(65), 
  3371 ;;  byte_count      2  [STACK] unsigned short 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  i               2  [STACK] unsigned short 
  3374 ;;  sum             2  [STACK] unsigned short 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2  [STACK] unsigned short 
  3377 ;; Registers used:
  3378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3379 ;; Tracked objects:
  3380 ;;		On entry : 3F/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3388 ;;Total ram usage:        0 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    3
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_secs_send
  3395 ;; This function uses a reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text3
  3399  004C48                     __ptext3:
  3400                           	opt callstack 0
  3401  004C48                     _block_checksum:
  3402                           	opt callstack 0
  3403                           
  3404                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3405  004C48  52E6               	movf	postinc1,f,c
  3406  004C4A  52E6               	movf	postinc1,f,c
  3407  004C4C  52E6               	movf	postinc1,f,c
  3408  004C4E  52E6               	movf	postinc1,f,c
  3409                           
  3410                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  3411                           ;stkvar	_sum @ sp[(-4)+2]
  3412                           
  3413                           ;incstack = 0
  3414  004C50  0EFE               	movlw	-2
  3415  004C52  6AE3               	clrf	plusw1,c
  3416  004C54  0EFF               	movlw	-1
  3417  004C56  6AE3               	clrf	plusw1,c
  3418                           
  3419                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  3420                           ;stkvar	_i @ sp[(-4)+0]
  3421  004C58  0EFC               	movlw	-4
  3422  004C5A  6AE3               	clrf	plusw1,c
  3423  004C5C  0EFD               	movlw	-3
  3424  004C5E  6AE3               	clrf	plusw1,c
  3425  004C60  D039               	goto	l7926
  3426  004C62                     l7922:
  3427                           
  3428                           ;gemsecs.c: 23:   sum += byte_block[i];
  3429                           ;stkvar	_i @ sp[(-4)+0]
  3430  004C62  0EFC               	movlw	-4
  3431  004C64  006F FF8C  F045    	movff	plusw1,btemp+10
  3432  004C6A  0EFD               	movlw	-3
  3433  004C6C  006F FF8C  F046    	movff	plusw1,btemp+11
  3434                           
  3435                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3436  004C72  0EFA               	movlw	-6
  3437  004C74  006F FF8C  F043    	movff	plusw1,btemp+8
  3438  004C7A  0EFB               	movlw	-5
  3439  004C7C  006F FF8C  F044    	movff	plusw1,btemp+9
  3440  004C82  5045               	movf	btemp+10,w,c
  3441  004C84  2443               	addwf	btemp+8,w,c
  3442  004C86  6ED9               	movwf	fsr2l,c
  3443  004C88  5046               	movf	btemp+11,w,c
  3444  004C8A  2044               	addwfc	btemp+9,w,c
  3445  004C8C  6EDA               	movwf	fsr2h,c
  3446  004C8E  50DF               	movf	indf2,w,c
  3447  004C90  6E46               	movwf	btemp+11,c
  3448                           
  3449                           ;stkvar	_sum @ sp[(-4)+2]
  3450  004C92  0EFE               	movlw	-2
  3451  004C94  50E3               	movf	plusw1,w,c
  3452  004C96  2446               	addwf	btemp+11,w,c
  3453  004C98  6E3B               	movwf	btemp,c
  3454  004C9A  0EFE               	movlw	-2
  3455  004C9C  0060  F0EF  FFE3   	movff	btemp,plusw1
  3456  004CA2  6A3B               	clrf	btemp,c
  3457  004CA4  0EFF               	movlw	-1
  3458  004CA6  50E3               	movf	plusw1,w,c
  3459  004CA8  223B               	addwfc	btemp,f,c
  3460  004CAA  0EFF               	movlw	-1
  3461  004CAC  0060  F0EF  FFE3   	movff	btemp,plusw1
  3462                           
  3463                           ;gemsecs.c: 24:  }
  3464                           ;stkvar	_i @ sp[(-4)+0]
  3465  004CB2  0EFC               	movlw	-4
  3466  004CB4  50E3               	movf	plusw1,w,c
  3467  004CB6  0F01               	addlw	1
  3468  004CB8  6E3B               	movwf	btemp,c
  3469  004CBA  0EFC               	movlw	-4
  3470  004CBC  0060  F0EF  FFE3   	movff	btemp,plusw1
  3471  004CC2  6A3B               	clrf	btemp,c
  3472  004CC4  0EFD               	movlw	-3
  3473  004CC6  50E3               	movf	plusw1,w,c
  3474  004CC8  203B               	addwfc	btemp,w,c
  3475  004CCA  6E3B               	movwf	btemp,c
  3476  004CCC  0EFD               	movlw	-3
  3477  004CCE  0060  F0EF  FFE3   	movff	btemp,plusw1
  3478  004CD4                     l7926:
  3479                           
  3480                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3481  004CD4  0EF8               	movlw	-8
  3482  004CD6  006F FF8C  F045    	movff	plusw1,btemp+10
  3483  004CDC  0EF9               	movlw	-7
  3484  004CDE  006F FF8C  F046    	movff	plusw1,btemp+11
  3485                           
  3486                           ;stkvar	_i @ sp[(-4)+0]
  3487  004CE4  0EFC               	movlw	-4
  3488  004CE6  006F FF8C  F043    	movff	plusw1,btemp+8
  3489  004CEC  0EFD               	movlw	-3
  3490  004CEE  006F FF8C  F044    	movff	plusw1,btemp+9
  3491  004CF4  5045               	movf	btemp+10,w,c
  3492  004CF6  5C43               	subwf	btemp+8,w,c
  3493  004CF8  5046               	movf	btemp+11,w,c
  3494  004CFA  5844               	subwfb	btemp+9,w,c
  3495  004CFC  A0D8               	btfss	status,0,c
  3496  004CFE  D7B1               	goto	l7922
  3497                           
  3498                           ;gemsecs.c: 25:  return sum;
  3499                           ;stkvar	_sum @ sp[(-4)+2]
  3500  004D00  0EFE               	movlw	-2
  3501  004D02  006F FF8C  F03B    	movff	plusw1,btemp
  3502  004D08  0EFF               	movlw	-1
  3503  004D0A  006F FF8C  F03C    	movff	plusw1,btemp+1
  3504                           
  3505                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3506  004D10  0EF8               	movlw	248
  3507  004D12  26E1               	addwf	fsr1l,f,c
  3508  004D14  0EFF               	movlw	255
  3509  004D16  22E2               	addwfc	fsr1h,f,c
  3510  004D18  0012               	return		;funcret
  3511  004D1A                     __end_of_block_checksum:
  3512                           	opt callstack 0
  3513                           
  3514 ;; *************** function _UART2_put_buffer *****************
  3515 ;; Defined at:
  3516 ;;		line 257 in file "mcc_generated_files/uart2.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  bufData         1  [STACK] unsigned char 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1  [STACK] void 
  3523 ;; Registers used:
  3524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 3F/39
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3534 ;;Total ram usage:        0 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    3
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_secs_send
  3541 ;; This function uses a reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text4
  3545  005B76                     __ptext4:
  3546                           	opt callstack 0
  3547  005B76                     _UART2_put_buffer:
  3548                           	opt callstack 25
  3549                           
  3550                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  3551                           
  3552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3553                           ;incstack = 0
  3554  005B76  0139               	movlb	57	; () banked
  3555  005B78  9596               	bcf	150,2,b	;volatile
  3556                           
  3557                           ; BSR set to: 57
  3558                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  3559                           ;stkvar	_bufData @ sp[(0)+-1]
  3560  005B7A  0E00               	movlw	low _uart2RxBuffer
  3561  005B7C  2431               	addwf	_uart2RxHead,w,c	;volatile
  3562  005B7E  6ED9               	movwf	fsr2l,c
  3563  005B80  6ADA               	clrf	fsr2h,c
  3564  005B82  0E02               	movlw	high _uart2RxBuffer
  3565  005B84  22DA               	addwfc	fsr2h,f,c
  3566  005B86  0EFF               	movlw	-1
  3567  005B88  006F FF8F FFDF     	movff	plusw1,indf2
  3568                           
  3569                           ; BSR set to: 57
  3570  005B8E  2A31               	incf	_uart2RxHead,f,c	;volatile
  3571                           
  3572                           ; BSR set to: 57
  3573                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  3574  005B90  0E3F               	movlw	63
  3575  005B92  6431               	cpfsgt	_uart2RxHead,c
  3576  005B94  D001               	goto	l5788
  3577                           
  3578                           ; BSR set to: 57
  3579                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  3580  005B96  6A31               	clrf	_uart2RxHead,c	;volatile
  3581  005B98                     l5788:
  3582                           
  3583                           ; BSR set to: 57
  3584                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  3585  005B98  2A2F               	incf	_uart2RxCount,f,c	;volatile
  3586                           
  3587                           ; BSR set to: 57
  3588                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  3589  005B9A  8596               	bsf	150,2,b	;volatile
  3590                           
  3591                           ; BSR set to: 57
  3592                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3593  005B9C  52E5               	movf	postdec1,f,c
  3594  005B9E  0012               	return		;funcret
  3595  005BA0                     __end_of_UART2_put_buffer:
  3596                           	opt callstack 0
  3597                           
  3598 ;; *************** function _UART2_is_tx_ready *****************
  3599 ;; Defined at:
  3600 ;;		line 142 in file "mcc_generated_files/uart2.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1  [STACK] unsigned char 
  3607 ;; Registers used:
  3608 ;;		btemp
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    3
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_secs_send
  3625 ;; This function uses a reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text5
  3629  00619A                     __ptext5:
  3630                           	opt callstack 0
  3631  00619A                     _UART2_is_tx_ready:
  3632                           	opt callstack 25
  3633                           
  3634                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  3635                           
  3636                           ; BSR set to: 57
  3637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3638                           ;incstack = 0
  3639  00619A  0060  F0C8  F03B   	movff	_uart2TxBufferRemaining,btemp	;volatile
  3640                           
  3641                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3642  0061A0  0012               	return		;funcret
  3643  0061A2                     __end_of_UART2_is_tx_ready:
  3644                           	opt callstack 0
  3645                           
  3646 ;; *************** function _UART2_Write *****************
  3647 ;; Defined at:
  3648 ;;		line 172 in file "mcc_generated_files/uart2.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  txData          1  [STACK] unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1  [STACK] void 
  3655 ;; Registers used:
  3656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 3F/39
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    3
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_secs_send
  3673 ;; This function uses a reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text6
  3677  00591A                     __ptext6:
  3678                           	opt callstack 0
  3679  00591A                     _UART2_Write:
  3680                           	opt callstack 25
  3681                           
  3682                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  3683                           
  3684                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  3685                           
  3686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3687                           ;incstack = 0
  3688  00591A  5032               	movf	_uart2TxBufferRemaining,w,c	;volatile
  3689  00591C  B4D8               	btfsc	status,2,c
  3690  00591E  D7FD               	goto	_UART2_Write
  3691                           
  3692                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  3693  005920  0139               	movlb	57	; () banked
  3694  005922  B796               	btfsc	150,3,b	;volatile
  3695  005924  D005               	goto	l699
  3696                           
  3697                           ; BSR set to: 57
  3698                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  3699                           ;stkvar	_txData @ sp[(0)+-1]
  3700  005926  0EFF               	movlw	-1
  3701  005928  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  3702                           
  3703                           ;mcc_generated_files/uart2.c: 181:     }
  3704  00592E  D011               	goto	l5776
  3705  005930                     l699:
  3706                           
  3707                           ; BSR set to: 57
  3708                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  3709  005930  9796               	bcf	150,3,b	;volatile
  3710                           
  3711                           ; BSR set to: 57
  3712                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  3713                           ;stkvar	_txData @ sp[(0)+-1]
  3714  005932  0E40               	movlw	low _uart2TxBuffer
  3715  005934  2434               	addwf	_uart2TxHead,w,c	;volatile
  3716  005936  6ED9               	movwf	fsr2l,c
  3717  005938  6ADA               	clrf	fsr2h,c
  3718  00593A  0E02               	movlw	high _uart2TxBuffer
  3719  00593C  22DA               	addwfc	fsr2h,f,c
  3720  00593E  0EFF               	movlw	-1
  3721  005940  006F FF8F FFDF     	movff	plusw1,indf2
  3722                           
  3723                           ; BSR set to: 57
  3724  005946  2A34               	incf	_uart2TxHead,f,c	;volatile
  3725                           
  3726                           ; BSR set to: 57
  3727                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  3728  005948  0E3F               	movlw	63
  3729  00594A  6434               	cpfsgt	_uart2TxHead,c
  3730  00594C  D001               	goto	l5774
  3731                           
  3732                           ; BSR set to: 57
  3733                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  3734  00594E  6A34               	clrf	_uart2TxHead,c	;volatile
  3735  005950                     l5774:
  3736                           
  3737                           ; BSR set to: 57
  3738                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  3739  005950  0632               	decf	_uart2TxBufferRemaining,f,c	;volatile
  3740  005952                     l5776:
  3741                           
  3742                           ; BSR set to: 57
  3743                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  3744  005952  8796               	bsf	150,3,b	;volatile
  3745                           
  3746                           ; BSR set to: 57
  3747                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3748  005954  52E5               	movf	postdec1,f,c
  3749  005956  0012               	return		;funcret
  3750  005958                     __end_of_UART2_Write:
  3751                           	opt callstack 0
  3752                           
  3753 ;; *************** function _UART1_put_buffer *****************
  3754 ;; Defined at:
  3755 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  bufData         1  [STACK] unsigned char 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1  [STACK] void 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/39
  3766 ;;		On exit  : 3F/39
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3773 ;;Total ram usage:        0 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    3
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_t_protocol
  3780 ;;		_secs_send
  3781 ;; This function uses a reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text7
  3785  005BA0                     __ptext7:
  3786                           	opt callstack 0
  3787  005BA0                     _UART1_put_buffer:
  3788                           	opt callstack 25
  3789                           
  3790                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3791                           
  3792                           ; BSR set to: 57
  3793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3794                           ;incstack = 0
  3795  005BA0  0139               	movlb	57	; () banked
  3796  005BA2  9793               	bcf	147,3,b	;volatile
  3797                           
  3798                           ; BSR set to: 57
  3799                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3800                           ;stkvar	_bufData @ sp[(0)+-1]
  3801  005BA4  0E80               	movlw	low _uart1RxBuffer
  3802  005BA6  2437               	addwf	_uart1RxHead,w,c	;volatile
  3803  005BA8  6ED9               	movwf	fsr2l,c
  3804  005BAA  6ADA               	clrf	fsr2h,c
  3805  005BAC  0E02               	movlw	high _uart1RxBuffer
  3806  005BAE  22DA               	addwfc	fsr2h,f,c
  3807  005BB0  0EFF               	movlw	-1
  3808  005BB2  006F FF8F FFDF     	movff	plusw1,indf2
  3809                           
  3810                           ; BSR set to: 57
  3811  005BB8  2A37               	incf	_uart1RxHead,f,c	;volatile
  3812                           
  3813                           ; BSR set to: 57
  3814                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3815  005BBA  0E3F               	movlw	63
  3816  005BBC  6437               	cpfsgt	_uart1RxHead,c
  3817  005BBE  D001               	goto	l5752
  3818                           
  3819                           ; BSR set to: 57
  3820                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3821  005BC0  6A37               	clrf	_uart1RxHead,c	;volatile
  3822  005BC2                     l5752:
  3823                           
  3824                           ; BSR set to: 57
  3825                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3826  005BC2  2A35               	incf	_uart1RxCount,f,c	;volatile
  3827                           
  3828                           ; BSR set to: 57
  3829                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3830  005BC4  8793               	bsf	147,3,b	;volatile
  3831                           
  3832                           ; BSR set to: 57
  3833                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3834  005BC6  52E5               	movf	postdec1,f,c
  3835  005BC8  0012               	return		;funcret
  3836  005BCA                     __end_of_UART1_put_buffer:
  3837                           	opt callstack 0
  3838                           
  3839 ;; *************** function _UART1_is_tx_ready *****************
  3840 ;; Defined at:
  3841 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1  [STACK] unsigned char 
  3848 ;; Registers used:
  3849 ;;		btemp
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    3
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_secs_send
  3866 ;; This function uses a reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text8
  3870  0061A2                     __ptext8:
  3871                           	opt callstack 0
  3872  0061A2                     _UART1_is_tx_ready:
  3873                           	opt callstack 25
  3874                           
  3875                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3876                           
  3877                           ; BSR set to: 57
  3878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3879                           ;incstack = 0
  3880  0061A2  0060  F0E0  F03B   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3881                           
  3882                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3883  0061A8  0012               	return		;funcret
  3884  0061AA                     __end_of_UART1_is_tx_ready:
  3885                           	opt callstack 0
  3886                           
  3887 ;; *************** function _secs_II_message *****************
  3888 ;; Defined at:
  3889 ;;		line 465 in file "gemsecs.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  stream          1  [STACK] unsigned char 
  3892 ;;  function        1  [STACK] unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  7  [STACK] struct response_type
  3897 ;; Registers used:
  3898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3899 ;; Tracked objects:
  3900 ;;		On entry : 3F/0
  3901 ;;		On exit  : 3E/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    3
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_t_protocol
  3915 ;; This function uses a reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text9
  3919  00432C                     __ptext9:
  3920                           	opt callstack 0
  3921  00432C                     _secs_II_message:
  3922                           	opt callstack 0
  3923                           
  3924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3925  00432C  0E05               	movlw	5
  3926  00432E  26E1               	addwf	fsr1l,f,c
  3927  004330  0E00               	movlw	0
  3928  004332  22E2               	addwfc	fsr1h,f,c
  3929                           
  3930                           ;gemsecs.c: 465: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 466: {;gemsecs.c: 467:  static response_type block;;gemsecs.c: 469:  V.abort = LINK_
      +                          ERROR_NONE;
  3931                           
  3932                           ;incstack = 0
  3933  004334  0100               	movlb	0	; () banked
  3934  004336  6BB7               	clrf	(_V+80)& (0+255),b
  3935                           
  3936                           ;gemsecs.c: 470:  V.queue = 0;
  3937  004338  99BE               	bcf	(_V+87)& (0+255),4,b
  3938                           
  3939                           ;gemsecs.c: 471:  block.respond = 0;
  3940  00433A  9007               	bcf	secs_II_message@block+6,0,c
  3941                           
  3942                           ;gemsecs.c: 473:  switch (stream) {
  3943  00433C  D0F3               	goto	l6238
  3944  00433E                     l6106:
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;gemsecs.c: 477:    block.header = (uint8_t*) & H12[0];
  3948  00433E  0E41               	movlw	low _H12
  3949  004340  6E01               	movwf	secs_II_message@block,c
  3950  004342  0E01               	movlw	high _H12
  3951  004344  6E02               	movwf	secs_II_message@block+1,c
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;gemsecs.c: 478:    block.length = sizeof(header12);
  3955  004346  0E0F               	movlw	15
  3956  004348  6E03               	movwf	secs_II_message@block+2,c
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;gemsecs.c: 479:    H12[0].block.block.systemb = V.systemb;
  3960  00434A  C0B0  F145         	movff	_V+73,_H12+4
  3961  00434E  C0B1  F146         	movff	_V+74,_H12+5
  3962  004352  C0B2  F147         	movff	_V+75,_H12+6
  3963  004356  C0B3  F148         	movff	_V+76,_H12+7
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;gemsecs.c: 480:    H10[0].block.block.systemb = V.systemb;
  3967  00435A  C0B0  F102         	movff	_V+73,_H10+2
  3968  00435E  C0B1  F103         	movff	_V+74,_H10+3
  3969  004362  C0B2  F104         	movff	_V+75,_H10+4
  3970  004366  C0B3  F105         	movff	_V+76,_H10+5
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;gemsecs.c: 481:    block.respond = 1;
  3974  00436A  8007               	bsf	secs_II_message@block+6,0,c
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;gemsecs.c: 482:    block.reply = (uint8_t*) & H10[0];
  3978  00436C  0E00               	movlw	low _H10
  3979  00436E  6E04               	movwf	secs_II_message@block+3,c
  3980  004370  0E01               	movlw	high _H10
  3981  004372  6E05               	movwf	secs_II_message@block+4,c
  3982                           
  3983                           ;gemsecs.c: 483:    block.reply_length = sizeof(header10);
  3984  004374  0E0D               	movlw	13
  3985  004376                     L8:
  3986  004376  6E06               	movwf	secs_II_message@block+5,c
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;gemsecs.c: 484:    V.queue = 1;
  3990  004378  89BE               	bsf	(_V+87)& (0+255),4,b
  3991                           
  3992                           ;gemsecs.c: 485:    break;
  3993  00437A  D0ED               	goto	l6240
  3994  00437C                     l6120:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;gemsecs.c: 487:    block.header = (uint8_t*) & H14[0];
  3998  00437C  0E8E               	movlw	low _H14
  3999  00437E  6E01               	movwf	secs_II_message@block,c
  4000  004380  0E01               	movlw	high _H14
  4001  004382  6E02               	movwf	secs_II_message@block+1,c
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;gemsecs.c: 488:    block.length = sizeof(header14);
  4005  004384  0E11               	movlw	17
  4006  004386  6E03               	movwf	secs_II_message@block+2,c
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;gemsecs.c: 489:    H14[0].block.block.systemb = V.systemb;
  4010  004388  C0B0  F194         	movff	_V+73,_H14+6
  4011  00438C  C0B1  F195         	movff	_V+74,_H14+7
  4012  004390  C0B2  F196         	movff	_V+75,_H14+8
  4013  004394  C0B3  F197         	movff	_V+76,_H14+9
  4014                           
  4015                           ;gemsecs.c: 490:    break;
  4016  004398  D0DE               	goto	l6240
  4017  00439A                     l6126:
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;gemsecs.c: 492:    block.header = (uint8_t*) & H17[0];
  4021  00439A  0E7A               	movlw	low _H17
  4022  00439C  6E01               	movwf	secs_II_message@block,c
  4023  00439E  0E01               	movlw	high _H17
  4024  0043A0  6E02               	movwf	secs_II_message@block+1,c
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;gemsecs.c: 493:    block.length = sizeof(header17);
  4028  0043A2  0E14               	movlw	20
  4029  0043A4  6E03               	movwf	secs_II_message@block+2,c
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;gemsecs.c: 494:    H17[0].block.block.systemb = V.systemb;
  4033  0043A6  C0B0  F183         	movff	_V+73,_H17+9
  4034  0043AA  C0B1  F184         	movff	_V+74,_H17+10
  4035  0043AE  C0B2  F185         	movff	_V+75,_H17+11
  4036  0043B2  C0B3  F186         	movff	_V+76,_H17+12
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;gemsecs.c: 495:    H12[1].block.block.systemb = V.systemb;
  4040  0043B6  C0B0  F154         	movff	_V+73,_H12+19
  4041  0043BA  C0B1  F155         	movff	_V+74,_H12+20
  4042  0043BE  C0B2  F156         	movff	_V+75,_H12+21
  4043  0043C2  C0B3  F157         	movff	_V+76,_H12+22
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;gemsecs.c: 496:    block.respond = 1;
  4047  0043C6  8007               	bsf	secs_II_message@block+6,0,c
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;gemsecs.c: 497:    block.reply = (uint8_t*) & H12[1];
  4051  0043C8  0E50               	movlw	low (_H12+15)
  4052  0043CA  6E04               	movwf	secs_II_message@block+3,c
  4053  0043CC  0E01               	movlw	high (_H12+15)
  4054  0043CE  6E05               	movwf	secs_II_message@block+4,c
  4055                           
  4056                           ;gemsecs.c: 498:    block.reply_length = sizeof(header12);
  4057  0043D0  0E0F               	movlw	15
  4058  0043D2  D7D1               	goto	L8
  4059  0043D4                     l6140:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;gemsecs.c: 502:    block.header = (uint8_t*) & H10[2];
  4063  0043D4  0E1A               	movlw	low (_H10+26)
  4064  0043D6  6E01               	movwf	secs_II_message@block,c
  4065  0043D8  0E01               	movlw	high (_H10+26)
  4066  0043DA  6E02               	movwf	secs_II_message@block+1,c
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;gemsecs.c: 503:    block.length = sizeof(header10);
  4070  0043DC  0E0D               	movlw	13
  4071  0043DE  6E03               	movwf	secs_II_message@block+2,c
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;gemsecs.c: 504:    H10[2].block.block.systemb = V.systemb;
  4075  0043E0  C0B0  F11C         	movff	_V+73,_H10+28
  4076  0043E4  C0B1  F11D         	movff	_V+74,_H10+29
  4077  0043E8  C0B2  F11E         	movff	_V+75,_H10+30
  4078  0043EC  C0B3  F11F         	movff	_V+76,_H10+31
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;gemsecs.c: 505:    V.abort = LINK_ERROR_ABORT;
  4082  0043F0  0E07               	movlw	7
  4083  0043F2  6FB7               	movwf	(_V+80)& (0+255),b
  4084                           
  4085                           ;gemsecs.c: 506:    break;
  4086  0043F4  D0B0               	goto	l6240
  4087  0043F6                     l6150:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;stkvar	_function @ sp[(0)+-7]
  4091  0043F6  0EF9               	movlw	-7
  4092  0043F8  50E3               	movf	plusw1,w,c
  4093  0043FA  6E45               	movwf	btemp+10,c
  4094  0043FC  6A46               	clrf	btemp+11,c
  4095                           
  4096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4097                           ; Switch size 1, requested type "simple"
  4098                           ; Number of cases is 1, Range of values is 0 to 0
  4099                           ; switch strategies available:
  4100                           ; Name         Instructions Cycles
  4101                           ; simple_byte            4     3 (average)
  4102                           ;	Chosen strategy is simple_byte
  4103  0043FE  5046               	movf	btemp+11,w,c
  4104  004400  0A00               	xorlw	0	; case 0
  4105  004402  A4D8               	btfss	status,2,c
  4106  004404  D7E7               	goto	l6140
  4107                           
  4108                           ; BSR set to: 0
  4109                           ; Switch size 1, requested type "simple"
  4110                           ; Number of cases is 3, Range of values is 1 to 13
  4111                           ; switch strategies available:
  4112                           ; Name         Instructions Cycles
  4113                           ; simple_byte           10     6 (average)
  4114                           ;	Chosen strategy is simple_byte
  4115  004406  5045               	movf	btemp+10,w,c
  4116  004408  0A01               	xorlw	1	; case 1
  4117  00440A  B4D8               	btfsc	status,2,c
  4118  00440C  D798               	goto	l6106
  4119  00440E  0A02               	xorlw	2	; case 3
  4120  004410  B4D8               	btfsc	status,2,c
  4121  004412  D7B4               	goto	l6120
  4122  004414  0A0E               	xorlw	14	; case 13
  4123  004416  B4D8               	btfsc	status,2,c
  4124  004418  D7C0               	goto	l6126
  4125  00441A  D7DC               	goto	l6140
  4126  00441C                     l6152:
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;gemsecs.c: 512:    block.header = (uint8_t*) & H24[0];
  4130  00441C  0E5F               	movlw	low _H24
  4131  00441E  6E01               	movwf	secs_II_message@block,c
  4132  004420  0E01               	movlw	high _H24
  4133  004422  6E02               	movwf	secs_II_message@block+1,c
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;gemsecs.c: 513:    block.length = sizeof(header24);
  4137  004424  0E1B               	movlw	27
  4138  004426  6E03               	movwf	secs_II_message@block+2,c
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;gemsecs.c: 514:    H24[0].block.block.systemb = V.systemb;
  4142  004428  C0B0  F16F         	movff	_V+73,_H24+16
  4143  00442C  C0B1  F170         	movff	_V+74,_H24+17
  4144  004430  C0B2  F171         	movff	_V+75,_H24+18
  4145  004434  C0B3  F172         	movff	_V+76,_H24+19
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;gemsecs.c: 515:    H24[0].data[12] = 12;
  4149  004438  0E0C               	movlw	12
  4150  00443A  0101               	movlb	1	; () banked
  4151  00443C  6F6D               	movwf	(_H24+14)& (0+255),b
  4152                           
  4153                           ;gemsecs.c: 516:    break;
  4154  00443E  D08B               	goto	l6240
  4155  004440                     l6170:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;stkvar	_function @ sp[(0)+-7]
  4159  004440  0EF9               	movlw	-7
  4160  004442  50E3               	movf	plusw1,w,c
  4161  004444  6E45               	movwf	btemp+10,c
  4162  004446  6A46               	clrf	btemp+11,c
  4163                           
  4164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4165                           ; Switch size 1, requested type "simple"
  4166                           ; Number of cases is 1, Range of values is 0 to 0
  4167                           ; switch strategies available:
  4168                           ; Name         Instructions Cycles
  4169                           ; simple_byte            4     3 (average)
  4170                           ;	Chosen strategy is simple_byte
  4171  004448  5046               	movf	btemp+11,w,c
  4172  00444A  0A00               	xorlw	0	; case 0
  4173  00444C  A4D8               	btfss	status,2,c
  4174  00444E  D7C2               	goto	l6140
  4175                           
  4176                           ; BSR set to: 0
  4177                           ; Switch size 1, requested type "simple"
  4178                           ; Number of cases is 1, Range of values is 17 to 17
  4179                           ; switch strategies available:
  4180                           ; Name         Instructions Cycles
  4181                           ; simple_byte            4     3 (average)
  4182                           ;	Chosen strategy is simple_byte
  4183  004450  5045               	movf	btemp+10,w,c
  4184  004452  0A11               	xorlw	17	; case 17
  4185  004454  B4D8               	btfsc	status,2,c
  4186  004456  D7E2               	goto	l6152
  4187  004458  D7BD               	goto	l6140
  4188  00445A                     l6172:
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;gemsecs.c: 528:    block.header = (uint8_t*) & H13[0];
  4192  00445A  0E9F               	movlw	low _H13
  4193  00445C  6E01               	movwf	secs_II_message@block,c
  4194  00445E  0E01               	movlw	high _H13
  4195  004460  6E02               	movwf	secs_II_message@block+1,c
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;gemsecs.c: 529:    block.length = sizeof(header13);
  4199  004462  0E10               	movlw	16
  4200  004464  6E03               	movwf	secs_II_message@block+2,c
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;gemsecs.c: 530:    H13[0].block.block.systemb = V.systemb;
  4204  004466  C0B0  F1A4         	movff	_V+73,_H13+5
  4205  00446A  C0B1  F1A5         	movff	_V+74,_H13+6
  4206  00446E  C0B2  F1A6         	movff	_V+75,_H13+7
  4207  004472  C0B3  F1A7         	movff	_V+76,_H13+8
  4208                           
  4209                           ;gemsecs.c: 531:    break;
  4210  004476  D06F               	goto	l6240
  4211  004478                     l6188:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;stkvar	_function @ sp[(0)+-7]
  4215  004478  0EF9               	movlw	-7
  4216  00447A  50E3               	movf	plusw1,w,c
  4217  00447C  6E45               	movwf	btemp+10,c
  4218  00447E  6A46               	clrf	btemp+11,c
  4219                           
  4220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4221                           ; Switch size 1, requested type "simple"
  4222                           ; Number of cases is 1, Range of values is 0 to 0
  4223                           ; switch strategies available:
  4224                           ; Name         Instructions Cycles
  4225                           ; simple_byte            4     3 (average)
  4226                           ;	Chosen strategy is simple_byte
  4227  004480  5046               	movf	btemp+11,w,c
  4228  004482  0A00               	xorlw	0	; case 0
  4229  004484  A4D8               	btfss	status,2,c
  4230  004486  D7A6               	goto	l6140
  4231                           
  4232                           ; BSR set to: 0
  4233                           ; Switch size 1, requested type "simple"
  4234                           ; Number of cases is 1, Range of values is 11 to 11
  4235                           ; switch strategies available:
  4236                           ; Name         Instructions Cycles
  4237                           ; simple_byte            4     3 (average)
  4238                           ;	Chosen strategy is simple_byte
  4239  004488  5045               	movf	btemp+10,w,c
  4240  00448A  0A0B               	xorlw	11	; case 11
  4241  00448C  B4D8               	btfsc	status,2,c
  4242  00448E  D7E5               	goto	l6172
  4243  004490  D7A1               	goto	l6140
  4244  004492                     l6200:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;stkvar	_function @ sp[(0)+-7]
  4248  004492  0EF9               	movlw	-7
  4249  004494  50E3               	movf	plusw1,w,c
  4250  004496  6E45               	movwf	btemp+10,c
  4251  004498  6A46               	clrf	btemp+11,c
  4252                           
  4253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4254                           ; Switch size 1, requested type "simple"
  4255                           ; Number of cases is 1, Range of values is 0 to 0
  4256                           ; switch strategies available:
  4257                           ; Name         Instructions Cycles
  4258                           ; simple_byte            4     3 (average)
  4259                           ;	Chosen strategy is simple_byte
  4260  00449A  5046               	movf	btemp+11,w,c
  4261  00449C  0A00               	xorlw	0	; case 0
  4262  00449E  A4D8               	btfss	status,2,c
  4263  0044A0  D799               	goto	l6140
  4264                           
  4265                           ; BSR set to: 0
  4266                           ; Switch size 1, requested type "simple"
  4267                           ; Number of cases is 7, Range of values is 1 to 13
  4268                           ; switch strategies available:
  4269                           ; Name         Instructions Cycles
  4270                           ; simple_byte           22    12 (average)
  4271                           ;	Chosen strategy is simple_byte
  4272  0044A2  5045               	movf	btemp+10,w,c
  4273  0044A4  0A01               	xorlw	1	; case 1
  4274  0044A6  B4D8               	btfsc	status,2,c
  4275  0044A8  D056               	goto	l6240
  4276  0044AA  0A02               	xorlw	2	; case 3
  4277  0044AC  B4D8               	btfsc	status,2,c
  4278  0044AE  D053               	goto	l6240
  4279  0044B0  0A06               	xorlw	6	; case 5
  4280  0044B2  B4D8               	btfsc	status,2,c
  4281  0044B4  D050               	goto	l6240
  4282  0044B6  0A02               	xorlw	2	; case 7
  4283  0044B8  B4D8               	btfsc	status,2,c
  4284  0044BA  D04D               	goto	l6240
  4285  0044BC  0A0E               	xorlw	14	; case 9
  4286  0044BE  B4D8               	btfsc	status,2,c
  4287  0044C0  D04A               	goto	l6240
  4288  0044C2  0A02               	xorlw	2	; case 11
  4289  0044C4  B4D8               	btfsc	status,2,c
  4290  0044C6  D047               	goto	l6240
  4291  0044C8  0A06               	xorlw	6	; case 13
  4292  0044CA  B4D8               	btfsc	status,2,c
  4293  0044CC  D044               	goto	l6240
  4294  0044CE  D782               	goto	l6140
  4295  0044D0                     l6202:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;gemsecs.c: 567:    block.header = (uint8_t*) & H12[0];
  4299  0044D0  0E41               	movlw	low _H12
  4300  0044D2  6E01               	movwf	secs_II_message@block,c
  4301  0044D4  0E01               	movlw	high _H12
  4302  0044D6  6E02               	movwf	secs_II_message@block+1,c
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;gemsecs.c: 568:    block.length = sizeof(header12);
  4306  0044D8  0E0F               	movlw	15
  4307  0044DA  6E03               	movwf	secs_II_message@block+2,c
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;gemsecs.c: 569:    H12[0].block.block.systemb = V.systemb;
  4311  0044DC  C0B0  F145         	movff	_V+73,_H12+4
  4312  0044E0  C0B1  F146         	movff	_V+74,_H12+5
  4313  0044E4  C0B2  F147         	movff	_V+75,_H12+6
  4314  0044E8  C0B3  F148         	movff	_V+76,_H12+7
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;gemsecs.c: 570:    H53[0].block.block.systemb = V.systemb;
  4318  0044EC  C0B0  F3B3         	movff	_V+73,_H53+45
  4319  0044F0  C0B1  F3B4         	movff	_V+74,_H53+46
  4320  0044F4  C0B2  F3B5         	movff	_V+75,_H53+47
  4321  0044F8  C0B3  F3B6         	movff	_V+76,_H53+48
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;gemsecs.c: 571:    block.respond = 1;
  4325  0044FC  8007               	bsf	secs_II_message@block+6,0,c
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;gemsecs.c: 572:    block.reply = (uint8_t*) & H53[0];
  4329  0044FE  0E86               	movlw	low _H53
  4330  004500  6E04               	movwf	secs_II_message@block+3,c
  4331  004502  0E03               	movlw	high _H53
  4332  004504  6E05               	movwf	secs_II_message@block+4,c
  4333                           
  4334                           ;gemsecs.c: 573:    block.reply_length = sizeof(header53);
  4335  004506  0E38               	movlw	56
  4336  004508  D736               	goto	L8
  4337  00450A                     l6226:
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;stkvar	_function @ sp[(0)+-7]
  4341  00450A  0EF9               	movlw	-7
  4342  00450C  50E3               	movf	plusw1,w,c
  4343  00450E  6E45               	movwf	btemp+10,c
  4344  004510  6A46               	clrf	btemp+11,c
  4345                           
  4346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4347                           ; Switch size 1, requested type "simple"
  4348                           ; Number of cases is 1, Range of values is 0 to 0
  4349                           ; switch strategies available:
  4350                           ; Name         Instructions Cycles
  4351                           ; simple_byte            4     3 (average)
  4352                           ;	Chosen strategy is simple_byte
  4353  004512  5046               	movf	btemp+11,w,c
  4354  004514  0A00               	xorlw	0	; case 0
  4355  004516  A4D8               	btfss	status,2,c
  4356  004518  D75D               	goto	l6140
  4357                           
  4358                           ; BSR set to: 0
  4359                           ; Switch size 1, requested type "simple"
  4360                           ; Number of cases is 1, Range of values is 1 to 1
  4361                           ; switch strategies available:
  4362                           ; Name         Instructions Cycles
  4363                           ; simple_byte            4     3 (average)
  4364                           ;	Chosen strategy is simple_byte
  4365  00451A  5045               	movf	btemp+10,w,c
  4366  00451C  0A01               	xorlw	1	; case 1
  4367  00451E  B4D8               	btfsc	status,2,c
  4368  004520  D7D7               	goto	l6202
  4369  004522  D758               	goto	l6140
  4370  004524                     l6238:
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;stkvar	_stream @ sp[(0)+-6]
  4374  004524  0EFA               	movlw	-6
  4375  004526  50E3               	movf	plusw1,w,c
  4376  004528  6E45               	movwf	btemp+10,c
  4377  00452A  6A46               	clrf	btemp+11,c
  4378                           
  4379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4380                           ; Switch size 1, requested type "simple"
  4381                           ; Number of cases is 1, Range of values is 0 to 0
  4382                           ; switch strategies available:
  4383                           ; Name         Instructions Cycles
  4384                           ; simple_byte            4     3 (average)
  4385                           ;	Chosen strategy is simple_byte
  4386  00452C  5046               	movf	btemp+11,w,c
  4387  00452E  0A00               	xorlw	0	; case 0
  4388  004530  A4D8               	btfss	status,2,c
  4389  004532  D750               	goto	l6140
  4390                           
  4391                           ; BSR set to: 0
  4392                           ; Switch size 1, requested type "simple"
  4393                           ; Number of cases is 5, Range of values is 1 to 10
  4394                           ; switch strategies available:
  4395                           ; Name         Instructions Cycles
  4396                           ; simple_byte           16     9 (average)
  4397                           ;	Chosen strategy is simple_byte
  4398  004534  5045               	movf	btemp+10,w,c
  4399  004536  0A01               	xorlw	1	; case 1
  4400  004538  B4D8               	btfsc	status,2,c
  4401  00453A  D75D               	goto	l6150
  4402  00453C  0A03               	xorlw	3	; case 2
  4403  00453E  B4D8               	btfsc	status,2,c
  4404  004540  D77F               	goto	l6170
  4405  004542  0A04               	xorlw	4	; case 6
  4406  004544  B4D8               	btfsc	status,2,c
  4407  004546  D798               	goto	l6188
  4408  004548  0A0F               	xorlw	15	; case 9
  4409  00454A  B4D8               	btfsc	status,2,c
  4410  00454C  D7A2               	goto	l6200
  4411  00454E  0A03               	xorlw	3	; case 10
  4412  004550  B4D8               	btfsc	status,2,c
  4413  004552  D7DB               	goto	l6226
  4414  004554  D73F               	goto	l6140
  4415  004556                     l6240:
  4416                           
  4417                           ;gemsecs.c: 592:  return(block);
  4418  004556  EE20  F001         	lfsr	2,secs_II_message@block
  4419                           
  4420                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  4421  00455A  0E07               	movlw	7
  4422  00455C  6E3B               	movwf	btemp,c
  4423  00455E  0EF9               	movlw	-7
  4424  004560                     us334999:
  4425  004560  006F FF7B FFE3     	movff	postinc2,plusw1
  4426  004566  28E8               	incf	wreg,w,c
  4427  004568  2E3B               	decfsz	btemp,f,c
  4428  00456A  D7FA               	bra	us334999
  4429                           
  4430                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  4431  00456C  0012               	return		;funcret
  4432  00456E                     __end_of_secs_II_message:
  4433                           	opt callstack 0
  4434                           
  4435 ;; *************** function _sprintf *****************
  4436 ;; Defined at:
  4437 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  s               1  [STACK] PTR unsigned char 
  4440 ;;		 -> V(89), 
  4441 ;;  fmt             1  [STACK] PTR const unsigned char 
  4442 ;;		 -> STR_15(21), STR_14(19), STR_13(6), STR_12(17), 
  4443 ;;		 -> STR_11(19), STR_10(19), STR_9(20), STR_8(6), 
  4444 ;;		 -> STR_7(6), STR_6(14), STR_5(19), STR_4(15), 
  4445 ;;		 -> STR_2(12), STR_1(17), 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  f               5  [STACK] struct _IO_FILE
  4448 ;;  ap              2  [STACK] PTR void [1]
  4449 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4450 ;;  ret             2    0        int 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  2  [STACK] int 
  4453 ;; Registers used:
  4454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4455 ;; Tracked objects:
  4456 ;;		On entry : 4/0
  4457 ;;		On exit  : 3F/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:   11
  4467 ;; This function calls:
  4468 ;;		_vfprintf
  4469 ;; This function is called by:
  4470 ;;		_main
  4471 ;; This function uses a reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text10
  4475  004DEA                     __ptext10:
  4476                           	opt callstack 0
  4477  004DEA                     _sprintf:
  4478                           	opt callstack 0
  4479                           
  4480                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4481  004DEA  0E07               	movlw	7
  4482  004DEC  26E1               	addwf	fsr1l,f,c
  4483  004DEE  0E00               	movlw	0
  4484  004DF0  22E2               	addwfc	fsr1h,f,c
  4485                           
  4486                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  4487                           
  4488                           ;incstack = 0
  4489  004DF2  0EF6               	movlw	246
  4490  004DF4  24E1               	addwf	fsr1l,w,c
  4491  004DF6  6E45               	movwf	btemp+10,c
  4492  004DF8  0EFF               	movlw	255
  4493  004DFA  20E2               	addwfc	fsr1h,w,c
  4494  004DFC  6E46               	movwf	btemp+11,c
  4495                           
  4496                           ;stkvar	_ap @ sp[(-7)+5]
  4497  004DFE  0EFF               	movlw	-1
  4498  004E00  0060  F11B  FFE3   	movff	btemp+11,plusw1
  4499  004E06  0EFE               	movlw	-2
  4500  004E08  0060  F117  FFE3   	movff	btemp+10,plusw1
  4501                           
  4502                           ;stkvar	_s @ sp[(-7)+-2]
  4503  004E0E  0EF7               	movlw	-9
  4504  004E10  006F FF8C  F046    	movff	plusw1,btemp+11
  4505                           
  4506                           ;stkvar	_f @ sp[(-7)+0]
  4507  004E16  0EF9               	movlw	-7
  4508  004E18  0060  F11B  FFE3   	movff	btemp+11,plusw1
  4509                           
  4510                           ;stkvar	_f @ sp[(-7)+0]
  4511  004E1E  0EFA               	movlw	250
  4512  004E20  24E1               	addwf	fsr1l,w,c
  4513  004E22  6ED9               	movwf	fsr2l,c
  4514  004E24  0EFF               	movlw	255
  4515  004E26  20E2               	addwfc	fsr1h,w,c
  4516  004E28  6EDA               	movwf	fsr2h,c
  4517  004E2A  0E00               	movlw	0
  4518  004E2C  6EDE               	movwf	postinc2,c
  4519  004E2E  0E00               	movlw	0
  4520  004E30  6EDD               	movwf	postdec2,c
  4521                           
  4522                           ;stkvar	_f @ sp[(-7)+0]
  4523  004E32  0EFC               	movlw	252
  4524  004E34  24E1               	addwf	fsr1l,w,c
  4525  004E36  6ED9               	movwf	fsr2l,c
  4526  004E38  0EFF               	movlw	255
  4527  004E3A  20E2               	addwfc	fsr1h,w,c
  4528  004E3C  6EDA               	movwf	fsr2h,c
  4529  004E3E  0E00               	movlw	0
  4530  004E40  6EDE               	movwf	postinc2,c
  4531  004E42  0E00               	movlw	0
  4532  004E44  6EDD               	movwf	postdec2,c
  4533                           
  4534                           ;stkvar	_ap @ sp[(-7)+5]
  4535  004E46  0EFE               	movlw	254
  4536  004E48  24E1               	addwf	fsr1l,w,c
  4537  004E4A  6E3B               	movwf	btemp,c
  4538  004E4C  0EFF               	movlw	255
  4539  004E4E  20E2               	addwfc	fsr1h,w,c
  4540  004E50  6E3C               	movwf	btemp+1,c
  4541  004E52  0060  F0EF  FFE6   	movff	btemp,postinc1
  4542  004E58  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  4543                           
  4544                           ;stkvar	_fmt @ sp[(-9)+-3]
  4545  004E5E  0EF4               	movlw	-12
  4546  004E60  50E3               	movf	plusw1,w,c
  4547  004E62  6EE6               	movwf	postinc1,c
  4548                           
  4549                           ;stkvar	_f @ sp[(-10)+0]
  4550  004E64  0EF6               	movlw	246
  4551  004E66  24E1               	addwf	fsr1l,w,c
  4552  004E68  6E3B               	movwf	btemp,c
  4553  004E6A  0EFF               	movlw	255
  4554  004E6C  20E2               	addwfc	fsr1h,w,c
  4555  004E6E  6E3C               	movwf	btemp+1,c
  4556  004E70  0060  F0EF  FFE6   	movff	btemp,postinc1
  4557  004E76  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  4558  004E7C  ECF4  F028         	call	_vfprintf	;wreg free
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;stkvar	_f @ sp[(-7)+0]
  4562  004E80  0EFA               	movlw	250
  4563  004E82  24E1               	addwf	fsr1l,w,c
  4564  004E84  6ED9               	movwf	fsr2l,c
  4565  004E86  0EFF               	movlw	255
  4566  004E88  20E2               	addwfc	fsr1h,w,c
  4567  004E8A  6EDA               	movwf	fsr2h,c
  4568  004E8C  50DF               	movf	indf2,w,c
  4569  004E8E  6E46               	movwf	btemp+11,c
  4570                           
  4571                           ;stkvar	_s @ sp[(-7)+-2]
  4572  004E90  0EF7               	movlw	-9
  4573  004E92  50E3               	movf	plusw1,w,c
  4574  004E94  2446               	addwf	btemp+11,w,c
  4575  004E96  6ED9               	movwf	fsr2l,c
  4576  004E98  6ADA               	clrf	fsr2h,c
  4577  004E9A  0E00               	movlw	0
  4578  004E9C  6EDF               	movwf	indf2,c
  4579                           
  4580                           ; BSR set to: 0
  4581                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  4582  004E9E  0EF9               	movlw	249
  4583  004EA0  26E1               	addwf	fsr1l,f,c
  4584  004EA2  0EFF               	movlw	255
  4585  004EA4  22E2               	addwfc	fsr1h,f,c
  4586  004EA6  52E5               	movf	postdec1,f,c
  4587  004EA8  50E7               	movf	indf1,w,c
  4588  004EAA  5EE1               	subwf	fsr1l,f,c
  4589  004EAC  0E00               	movlw	0
  4590  004EAE  5AE2               	subwfb	fsr1h,f,c
  4591  004EB0  0012               	return		;funcret
  4592  004EB2                     __end_of_sprintf:
  4593                           	opt callstack 0
  4594                           
  4595 ;; *************** function _r_protocol *****************
  4596 ;; Defined at:
  4597 ;;		line 197 in file "gemsecs.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  r_link          1  [STACK] PTR enum E16163
  4600 ;;		 -> V(89), 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  rxData          1  [STACK] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1  [STACK] enum E16903
  4605 ;; Registers used:
  4606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    5
  4619 ;; This function calls:
  4620 ;;		_StartTimer
  4621 ;;		_TimerDone
  4622 ;;		_UART1_Read
  4623 ;;		_UART1_Write
  4624 ;;		_UART1_is_rx_ready
  4625 ;;		_WaitMs
  4626 ;;		_run_checksum
  4627 ;; This function is called by:
  4628 ;;		_main
  4629 ;; This function uses a reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text11
  4633  003644                     __ptext11:
  4634                           	opt callstack 0
  4635  003644                     _r_protocol:
  4636                           	opt callstack 0
  4637                           
  4638                           ; BSR set to: 0
  4639                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4640  003644  52E6               	movf	postinc1,f,c
  4641                           
  4642                           ;gemsecs.c: 197: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 198: {;gemsecs.
      +                          c: 199:  uint8_t rxData;;gemsecs.c: 200:  static uint8_t rxData_l = 0, retry = 3;;gemsec
      +                          s.c: 202:  switch (*r_link) {
  4643                           
  4644                           ;incstack = 0
  4645  003646  D13C               	goto	l6630
  4646  003648                     l6524:
  4647                           
  4648                           ;gemsecs.c: 204:   if (UART1_is_rx_ready()) {
  4649  003648  ECD9  F030         	call	_UART1_is_rx_ready	;wreg free
  4650  00364C  503B               	movf	btemp,w,c
  4651  00364E  B4D8               	btfsc	status,2,c
  4652  003650  D158               	goto	l6632
  4653                           
  4654                           ;gemsecs.c: 205:    rxData = UART1_Read();
  4655  003652  ECEA  F02C         	call	_UART1_Read	;wreg free
  4656                           
  4657                           ;stkvar	_rxData @ sp[(-1)+0]
  4658  003656  0EFF               	movlw	-1
  4659  003658  0060  F0EF  FFE3   	movff	btemp,plusw1
  4660                           
  4661                           ; BSR set to: 57
  4662                           ;gemsecs.c: 206:    if (rxData == 0x05) {
  4663                           ;stkvar	_rxData @ sp[(-1)+0]
  4664  00365E  0EFF               	movlw	-1
  4665  003660  006F FF8C  F03B    	movff	plusw1,btemp
  4666  003666  0E05               	movlw	5
  4667  003668  183B               	xorwf	btemp,w,c
  4668  00366A  A4D8               	btfss	status,2,c
  4669  00366C  D14A               	goto	l6632
  4670                           
  4671                           ; BSR set to: 57
  4672                           ;gemsecs.c: 207:     V.error = LINK_ERROR_NONE;
  4673  00366E  0100               	movlb	0	; () banked
  4674  003670  6BB6               	clrf	(_V+79)& (0+255),b
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;gemsecs.c: 208:     *r_link = LINK_STATE_ENQ;
  4678                           ;stkvar	_r_link @ sp[(-1)+-1]
  4679  003672  0EFE               	movlw	-2
  4680  003674  50E3               	movf	plusw1,w,c
  4681  003676  6ED9               	movwf	fsr2l,c
  4682  003678  6ADA               	clrf	fsr2h,c
  4683  00367A  0E01               	movlw	1
  4684  00367C  D108               	goto	L13
  4685  00367E                     l1618:
  4686                           
  4687                           ;gemsecs.c: 213:   rxData_l = 0;
  4688  00367E  6A2C               	clrf	r_protocol@rxData_l,c
  4689                           
  4690                           ;gemsecs.c: 214:   UART1_Write(0x04);
  4691  003680  0E04               	movlw	4
  4692  003682  6EE6               	movwf	postinc1,c
  4693  003684  ECAC  F02C         	call	_UART1_Write	;wreg free
  4694                           
  4695                           ; BSR set to: 57
  4696                           ;gemsecs.c: 215:   StartTimer(TMR_T2, 2000);
  4697  003688  0ED0               	movlw	208
  4698  00368A  6EE6               	movwf	postinc1,c
  4699  00368C  0E07               	movlw	7
  4700  00368E  6EE6               	movwf	postinc1,c
  4701  003690  0E02               	movlw	2
  4702  003692  6EE6               	movwf	postinc1,c
  4703  003694  EC29  F02D         	call	_StartTimer	;wreg free
  4704                           
  4705                           ;gemsecs.c: 216:   *r_link = LINK_STATE_EOT;
  4706                           ;stkvar	_r_link @ sp[(-1)+-1]
  4707  003698  0EFE               	movlw	-2
  4708  00369A  50E3               	movf	plusw1,w,c
  4709  00369C  6ED9               	movwf	fsr2l,c
  4710  00369E  6ADA               	clrf	fsr2h,c
  4711  0036A0  0E02               	movlw	2
  4712  0036A2  D0F5               	goto	L13
  4713  0036A4                     l6540:
  4714                           
  4715                           ;gemsecs.c: 224:   if (TimerDone(TMR_T2)) {
  4716  0036A4  0E02               	movlw	2
  4717  0036A6  6EE6               	movwf	postinc1,c
  4718  0036A8  EC9B  F02F         	call	_TimerDone	;wreg free
  4719  0036AC  503B               	movf	btemp,w,c
  4720  0036AE  B4D8               	btfsc	status,2,c
  4721  0036B0  D017               	goto	l6550
  4722                           
  4723                           ;gemsecs.c: 225:    if (!retry--) {
  4724  0036B2  065D               	decf	r_protocol@retry,f,c
  4725  0036B4  285D               	incf	r_protocol@retry,w,c
  4726  0036B6  A4D8               	btfss	status,2,c
  4727  0036B8  D00D               	goto	l6548
  4728                           
  4729                           ;gemsecs.c: 226:     V.error = LINK_ERROR_T2;
  4730  0036BA  0E02               	movlw	2
  4731  0036BC  0100               	movlb	0	; () banked
  4732  0036BE  6FB6               	movwf	(_V+79)& (0+255),b
  4733                           
  4734                           ;gemsecs.c: 227:     V.failed_receive = 1;
  4735  0036C0  51BE               	movf	(_V+87)& (0+255),w,b
  4736  0036C2  0BF0               	andlw	-16
  4737  0036C4  0901               	iorlw	1
  4738  0036C6  6FBE               	movwf	(_V+87)& (0+255),b
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;gemsecs.c: 228:     *r_link = LINK_STATE_NAK;
  4742                           ;stkvar	_r_link @ sp[(-1)+-1]
  4743  0036C8  0EFE               	movlw	-2
  4744  0036CA  50E3               	movf	plusw1,w,c
  4745  0036CC  6ED9               	movwf	fsr2l,c
  4746  0036CE  6ADA               	clrf	fsr2h,c
  4747  0036D0  0E05               	movlw	5
  4748  0036D2  D0DD               	goto	L13
  4749  0036D4                     l6548:
  4750                           
  4751                           ;gemsecs.c: 230:     *r_link = LINK_STATE_IDLE;
  4752                           ;stkvar	_r_link @ sp[(-1)+-1]
  4753  0036D4  0EFE               	movlw	-2
  4754  0036D6  50E3               	movf	plusw1,w,c
  4755  0036D8  6ED9               	movwf	fsr2l,c
  4756  0036DA  6ADA               	clrf	fsr2h,c
  4757  0036DC  0E00               	movlw	0
  4758  0036DE  D0D7               	goto	L13
  4759  0036E0                     l6550:
  4760                           
  4761                           ;gemsecs.c: 233:    if (UART1_is_rx_ready()) {
  4762  0036E0  ECD9  F030         	call	_UART1_is_rx_ready	;wreg free
  4763  0036E4  503B               	movf	btemp,w,c
  4764  0036E6  B4D8               	btfsc	status,2,c
  4765  0036E8  D10C               	goto	l6632
  4766                           
  4767                           ;gemsecs.c: 234:     rxData = UART1_Read();
  4768  0036EA  ECEA  F02C         	call	_UART1_Read	;wreg free
  4769                           
  4770                           ;stkvar	_rxData @ sp[(-1)+0]
  4771  0036EE  0EFF               	movlw	-1
  4772  0036F0  0060  F0EF  FFE3   	movff	btemp,plusw1
  4773                           
  4774                           ; BSR set to: 57
  4775                           ;gemsecs.c: 235:     if (rxData_l == 0) {
  4776  0036F6  502C               	movf	r_protocol@rxData_l,w,c
  4777  0036F8  A4D8               	btfss	status,2,c
  4778  0036FA  D00C               	goto	l6562
  4779                           
  4780                           ; BSR set to: 57
  4781                           ;gemsecs.c: 236:      r_block.length = rxData;
  4782                           ;stkvar	_rxData @ sp[(-1)+0]
  4783  0036FC  0EFF               	movlw	-1
  4784  0036FE  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  4785                           
  4786                           ; BSR set to: 57
  4787                           ;gemsecs.c: 237:      run_checksum(0, 1);
  4788  003704  0E01               	movlw	1
  4789  003706  6EE6               	movwf	postinc1,c
  4790  003708  0E00               	movlw	0
  4791  00370A  6EE6               	movwf	postinc1,c
  4792  00370C  EC63  F02D         	call	_run_checksum	;wreg free
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;gemsecs.c: 238:      rxData_l++;
  4796  003710  2A2C               	incf	r_protocol@rxData_l,f,c
  4797                           
  4798                           ;gemsecs.c: 239:     } else {
  4799  003712  D0F7               	goto	l6632
  4800  003714                     l6562:
  4801                           
  4802                           ; BSR set to: 57
  4803                           ;gemsecs.c: 243:      if (rxData_l <= sizeof(block10))
  4804  003714  0E0B               	movlw	11
  4805  003716  602C               	cpfslt	r_protocol@rxData_l,c
  4806  003718  D00C               	goto	l6566
  4807                           
  4808                           ; BSR set to: 57
  4809                           ;gemsecs.c: 244:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4810                           ;stkvar	_rxData @ sp[(-1)+0]
  4811  00371A  502C               	movf	r_protocol@rxData_l,w,c
  4812  00371C  0819               	sublw	low (_H10+25)
  4813  00371E  6ED9               	movwf	fsr2l,c
  4814  003720  0E00               	movlw	0
  4815  003722  A0D8               	btfss	status,0,c
  4816  003724  2AE8               	incf	wreg,f,c
  4817  003726  0801               	sublw	high (_H10+25)
  4818  003728  6EDA               	movwf	fsr2h,c
  4819  00372A  0EFF               	movlw	-1
  4820  00372C  006F FF8F FFDF     	movff	plusw1,indf2
  4821  003732                     l6566:
  4822                           
  4823                           ; BSR set to: 57
  4824                           ;gemsecs.c: 245:      if (rxData_l <= r_block.length)
  4825  003732  502C               	movf	r_protocol@rxData_l,w,c
  4826  003734  0100               	movlb	0	; () banked
  4827  003736  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  4828  003738  A0D8               	btfss	status,0,c
  4829  00373A  D00D               	goto	l6570
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;gemsecs.c: 246:       V.r_checksum = run_checksum(rxData, 0);
  4833  00373C  0E00               	movlw	0
  4834  00373E  6EE6               	movwf	postinc1,c
  4835                           
  4836                           ;stkvar	_rxData @ sp[(-2)+0]
  4837  003740  0EFE               	movlw	-2
  4838  003742  50E3               	movf	plusw1,w,c
  4839  003744  6EE6               	movwf	postinc1,c
  4840  003746  EC63  F02D         	call	_run_checksum	;wreg free
  4841  00374A  0060  F0EC  F0B9   	movff	btemp,_V+82
  4842  003750  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  4843  003756                     l6570:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;gemsecs.c: 248:      if (rxData_l == r_block.length + 1)
  4847  003756  502C               	movf	r_protocol@rxData_l,w,c
  4848  003758  6E45               	movwf	btemp+10,c
  4849  00375A  6A46               	clrf	btemp+11,c
  4850  00375C  51CC               	movf	(_r_block+12)& (0+255),w,b
  4851  00375E  6E43               	movwf	btemp+8,c
  4852  003760  6A44               	clrf	btemp+9,c
  4853  003762  0E01               	movlw	1
  4854  003764  2643               	addwf	btemp+8,f,c
  4855  003766  0E00               	movlw	0
  4856  003768  2244               	addwfc	btemp+9,f,c
  4857  00376A  5045               	movf	btemp+10,w,c
  4858  00376C  1843               	xorwf	btemp+8,w,c
  4859  00376E  E109               	bnz	l6574
  4860  003770  5046               	movf	btemp+11,w,c
  4861  003772  1844               	xorwf	btemp+9,w,c
  4862  003774  A4D8               	btfss	status,2,c
  4863  003776  D005               	goto	l6574
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;gemsecs.c: 249:       H10[1].checksum = (uint16_t) rxData << 8;
  4867                           ;stkvar	_rxData @ sp[(-1)+0]
  4868  003778  0EFF               	movlw	-1
  4869  00377A  50E3               	movf	plusw1,w,c
  4870  00377C  0101               	movlb	1	; () banked
  4871  00377E  6F0E               	movwf	(_H10+14)& (0+255),b
  4872  003780  6B0D               	clrf	(_H10+13)& (0+255),b
  4873  003782                     l6574:
  4874                           
  4875                           ;gemsecs.c: 250:      if (rxData_l == r_block.length + 2)
  4876  003782  502C               	movf	r_protocol@rxData_l,w,c
  4877  003784  6E45               	movwf	btemp+10,c
  4878  003786  6A46               	clrf	btemp+11,c
  4879  003788  0100               	movlb	0	; () banked
  4880  00378A  51CC               	movf	(_r_block+12)& (0+255),w,b
  4881  00378C  6E43               	movwf	btemp+8,c
  4882  00378E  6A44               	clrf	btemp+9,c
  4883  003790  0E02               	movlw	2
  4884  003792  2643               	addwf	btemp+8,f,c
  4885  003794  0E00               	movlw	0
  4886  003796  2244               	addwfc	btemp+9,f,c
  4887  003798  5045               	movf	btemp+10,w,c
  4888  00379A  1843               	xorwf	btemp+8,w,c
  4889  00379C  E10A               	bnz	l6578
  4890  00379E  5046               	movf	btemp+11,w,c
  4891  0037A0  1844               	xorwf	btemp+9,w,c
  4892  0037A2  A4D8               	btfss	status,2,c
  4893  0037A4  D006               	goto	l6578
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;gemsecs.c: 251:       H10[1].checksum += rxData;
  4897                           ;stkvar	_rxData @ sp[(-1)+0]
  4898  0037A6  0EFF               	movlw	-1
  4899  0037A8  50E3               	movf	plusw1,w,c
  4900  0037AA  0101               	movlb	1	; () banked
  4901  0037AC  270D               	addwf	(_H10+13)& (0+255),f,b
  4902  0037AE  0E00               	movlw	0
  4903  0037B0  230E               	addwfc	(_H10+14)& (0+255),f,b
  4904  0037B2                     l6578:
  4905                           
  4906                           ;gemsecs.c: 253:      rxData_l++;
  4907  0037B2  2A2C               	incf	r_protocol@rxData_l,f,c
  4908                           
  4909                           ;gemsecs.c: 254:      if (rxData_l > (r_block.length + 2)) {
  4910  0037B4  502C               	movf	r_protocol@rxData_l,w,c
  4911  0037B6  6E45               	movwf	btemp+10,c
  4912  0037B8  6A46               	clrf	btemp+11,c
  4913  0037BA  0100               	movlb	0	; () banked
  4914  0037BC  51CC               	movf	(_r_block+12)& (0+255),w,b
  4915  0037BE  6E43               	movwf	btemp+8,c
  4916  0037C0  6A44               	clrf	btemp+9,c
  4917  0037C2  0E02               	movlw	2
  4918  0037C4  2643               	addwf	btemp+8,f,c
  4919  0037C6  0E00               	movlw	0
  4920  0037C8  2244               	addwfc	btemp+9,f,c
  4921  0037CA  5045               	movf	btemp+10,w,c
  4922  0037CC  5C43               	subwf	btemp+8,w,c
  4923  0037CE  5044               	movf	btemp+9,w,c
  4924  0037D0  0A80               	xorlw	128
  4925  0037D2  6E3B               	movwf	btemp,c
  4926  0037D4  5046               	movf	btemp+11,w,c
  4927  0037D6  0A80               	xorlw	128
  4928  0037D8  583B               	subwfb	btemp,w,c
  4929  0037DA  B0D8               	btfsc	status,0,c
  4930  0037DC  D092               	goto	l6632
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;gemsecs.c: 255:       if (V.r_checksum == H10[1].checksum) {
  4934  0037DE  0101               	movlb	1	; () banked
  4935  0037E0  510D               	movf	(_H10+13)& (0+255),w,b
  4936  0037E2  0100               	movlb	0	; () banked
  4937  0037E4  19B9               	xorwf	(_V+82)& (0+255),w,b
  4938  0037E6  E10E               	bnz	l6588
  4939  0037E8  0101               	movlb	1	; () banked
  4940  0037EA  510E               	movf	(_H10+14)& (0+255),w,b
  4941  0037EC  0100               	movlb	0	; () banked
  4942  0037EE  19BA               	xorwf	(_V+83)& (0+255),w,b
  4943  0037F0  A4D8               	btfss	status,2,c
  4944  0037F2  D008               	goto	l6588
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;gemsecs.c: 256:        *r_link = LINK_STATE_ACK;
  4948                           ;stkvar	_r_link @ sp[(-1)+-1]
  4949  0037F4  0EFE               	movlw	-2
  4950  0037F6  50E3               	movf	plusw1,w,c
  4951  0037F8  6ED9               	movwf	fsr2l,c
  4952  0037FA  6ADA               	clrf	fsr2h,c
  4953  0037FC  0E03               	movlw	3
  4954  0037FE  D047               	goto	L13
  4955  003800                     l6586:
  4956  003800  ECEA  F02C         	call	_UART1_Read	;wreg free
  4957  003804                     l6588:
  4958                           
  4959                           ;gemsecs.c: 258:        while (UART1_is_rx_ready())
  4960  003804  ECD9  F030         	call	_UART1_is_rx_ready	;wreg free
  4961  003808  503B               	movf	btemp,w,c
  4962  00380A  A4D8               	btfss	status,2,c
  4963  00380C  D7F9               	goto	l6586
  4964                           
  4965                           ;gemsecs.c: 260:        WaitMs(500);
  4966  00380E  0EF4               	movlw	244
  4967  003810  6EE6               	movwf	postinc1,c
  4968  003812  0E01               	movlw	1
  4969  003814  6EE6               	movwf	postinc1,c
  4970  003816  ECE5  F02D         	call	_WaitMs	;wreg free
  4971                           
  4972                           ;gemsecs.c: 261:        V.error = LINK_ERROR_CHECKSUM;
  4973  00381A  0E05               	movlw	5
  4974  00381C  0100               	movlb	0	; () banked
  4975  00381E  6FB6               	movwf	(_V+79)& (0+255),b
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;gemsecs.c: 262:        V.failed_receive = 2;
  4979  003820  51BE               	movf	(_V+87)& (0+255),w,b
  4980  003822  0BF0               	andlw	-16
  4981  003824  0902               	iorlw	2
  4982  003826  D74F               	goto	L14
  4983  003828                     l6598:
  4984                           
  4985                           ;gemsecs.c: 271:   V.stream = H10[1].block.block.stream;
  4986  003828  0101               	movlb	1	; () banked
  4987  00382A  5116               	movf	(_H10+22)& (0+255),w,b
  4988  00382C  0B7F               	andlw	127
  4989  00382E  0100               	movlb	0	; () banked
  4990  003830  6FB4               	movwf	(_V+77)& (0+255),b
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;gemsecs.c: 272:   V.function = H10[1].block.block.function;
  4994  003832  C115  F0B5         	movff	_H10+21,_V+78
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;gemsecs.c: 273:   V.systemb = H10[1].block.block.systemb;
  4998  003836  C10F  F0B0         	movff	_H10+15,_V+73
  4999  00383A  C110  F0B1         	movff	_H10+16,_V+74
  5000  00383E  C111  F0B2         	movff	_H10+17,_V+75
  5001  003842  C112  F0B3         	movff	_H10+18,_V+76
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;gemsecs.c: 274:   V.rbit = H10[1].block.block.rbit;
  5005  003846  0101               	movlb	1	; () banked
  5006  003848  AF18               	btfss	(_H10+24)& (0+255),7,b
  5007  00384A  D003               	bra	u3655
  5008  00384C  0100               	movlb	0	; () banked
  5009  00384E  81BD               	bsf	(_V+86)& (0+255),0,b
  5010  003850  D002               	bra	u3657
  5011  003852                     u3655:
  5012  003852  0100               	movlb	0	; () banked
  5013  003854  91BD               	bcf	(_V+86)& (0+255),0,b
  5014  003856                     u3657:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;gemsecs.c: 275:   V.wbit = H10[1].block.block.wbit;
  5018  003856  0101               	movlb	1	; () banked
  5019  003858  AF16               	btfss	(_H10+22)& (0+255),7,b
  5020  00385A  D003               	bra	u3665
  5021  00385C  0100               	movlb	0	; () banked
  5022  00385E  83BD               	bsf	(_V+86)& (0+255),1,b
  5023  003860  D002               	bra	u3667
  5024  003862                     u3665:
  5025  003862  0100               	movlb	0	; () banked
  5026  003864  93BD               	bcf	(_V+86)& (0+255),1,b
  5027  003866                     u3667:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;gemsecs.c: 276:   V.ebit = H10[1].block.block.ebit;
  5031  003866  0101               	movlb	1	; () banked
  5032  003868  AF14               	btfss	(_H10+20)& (0+255),7,b
  5033  00386A  D003               	bra	u3675
  5034  00386C  0100               	movlb	0	; () banked
  5035  00386E  85BD               	bsf	(_V+86)& (0+255),2,b
  5036  003870  D002               	bra	u3677
  5037  003872                     u3675:
  5038  003872  0100               	movlb	0	; () banked
  5039  003874  95BD               	bcf	(_V+86)& (0+255),2,b
  5040  003876                     u3677:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;gemsecs.c: 277:   UART1_Write(0x06);
  5044  003876  0E06               	movlw	6
  5045  003878  6EE6               	movwf	postinc1,c
  5046  00387A  ECAC  F02C         	call	_UART1_Write	;wreg free
  5047                           
  5048                           ; BSR set to: 57
  5049                           ;gemsecs.c: 278:   V.failed_receive = 0;
  5050  00387E  0EF0               	movlw	-16
  5051  003880  0100               	movlb	0	; () banked
  5052  003882  17BE               	andwf	(_V+87)& (0+255),f,b
  5053                           
  5054                           ;gemsecs.c: 279:   *r_link = LINK_STATE_DONE;
  5055                           ;stkvar	_r_link @ sp[(-1)+-1]
  5056  003884  0EFE               	movlw	-2
  5057  003886  50E3               	movf	plusw1,w,c
  5058  003888  6ED9               	movwf	fsr2l,c
  5059  00388A  6ADA               	clrf	fsr2h,c
  5060  00388C  0E04               	movlw	4
  5061  00388E                     L13:
  5062  00388E  6EDF               	movwf	indf2,c
  5063                           
  5064                           ;gemsecs.c: 280:   break;
  5065  003890  D038               	goto	l6632
  5066  003892                     l6614:
  5067                           
  5068                           ;gemsecs.c: 282:   UART1_Write(0x15);
  5069  003892  0E15               	movlw	21
  5070  003894  6EE6               	movwf	postinc1,c
  5071  003896  ECAC  F02C         	call	_UART1_Write	;wreg free
  5072                           
  5073                           ; BSR set to: 57
  5074                           ;gemsecs.c: 283:   *r_link = LINK_STATE_ERROR;
  5075                           ;stkvar	_r_link @ sp[(-1)+-1]
  5076  00389A  0EFE               	movlw	-2
  5077  00389C  50E3               	movf	plusw1,w,c
  5078  00389E  6ED9               	movwf	fsr2l,c
  5079  0038A0  6ADA               	clrf	fsr2h,c
  5080  0038A2  0E06               	movlw	6
  5081  0038A4  6EDF               	movwf	indf2,c
  5082                           
  5083                           ;gemsecs.c: 284:   while ((uart1RxCount)) {
  5084  0038A6  D002               	goto	l6620
  5085  0038A8                     l6618:
  5086                           
  5087                           ; BSR set to: 57
  5088                           ;gemsecs.c: 285:    UART1_Read();
  5089  0038A8  ECEA  F02C         	call	_UART1_Read	;wreg free
  5090  0038AC                     l6620:
  5091                           
  5092                           ; BSR set to: 57
  5093                           ;gemsecs.c: 284:   while ((uart1RxCount)) {
  5094  0038AC  5035               	movf	_uart1RxCount,w,c	;volatile
  5095  0038AE  A4D8               	btfss	status,2,c
  5096  0038B0  D7FB               	goto	l6618
  5097                           
  5098                           ; BSR set to: 57
  5099                           ;gemsecs.c: 287:   retry = 3;
  5100  0038B2  0E03               	movlw	3
  5101  0038B4  6E5D               	movwf	r_protocol@retry,c
  5102                           
  5103                           ;gemsecs.c: 288:   break;
  5104  0038B6  D025               	goto	l6632
  5105  0038B8                     l6624:
  5106                           
  5107                           ;gemsecs.c: 292:   V.failed_receive = 0;
  5108  0038B8  0EF0               	movlw	-16
  5109  0038BA  0100               	movlb	0	; () banked
  5110  0038BC  17BE               	andwf	(_V+87)& (0+255),f,b
  5111  0038BE  D70A               	goto	l6548
  5112  0038C0                     l6630:
  5113                           
  5114                           ;stkvar	_r_link @ sp[(-1)+-1]
  5115  0038C0  0EFE               	movlw	-2
  5116  0038C2  50E3               	movf	plusw1,w,c
  5117  0038C4  6ED9               	movwf	fsr2l,c
  5118  0038C6  6ADA               	clrf	fsr2h,c
  5119  0038C8  50DF               	movf	indf2,w,c
  5120  0038CA  6E45               	movwf	btemp+10,c
  5121  0038CC  6A46               	clrf	btemp+11,c
  5122                           
  5123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5124                           ; Switch size 1, requested type "simple"
  5125                           ; Number of cases is 1, Range of values is 0 to 0
  5126                           ; switch strategies available:
  5127                           ; Name         Instructions Cycles
  5128                           ; simple_byte            4     3 (average)
  5129                           ;	Chosen strategy is simple_byte
  5130  0038CE  5046               	movf	btemp+11,w,c
  5131  0038D0  0A00               	xorlw	0	; case 0
  5132  0038D2  A4D8               	btfss	status,2,c
  5133  0038D4  D6FF               	goto	l6548
  5134                           
  5135                           ; Switch size 1, requested type "simple"
  5136                           ; Number of cases is 7, Range of values is 0 to 6
  5137                           ; switch strategies available:
  5138                           ; Name         Instructions Cycles
  5139                           ; simple_byte           22    12 (average)
  5140                           ;	Chosen strategy is simple_byte
  5141  0038D6  5045               	movf	btemp+10,w,c
  5142  0038D8  0A00               	xorlw	0	; case 0
  5143  0038DA  B4D8               	btfsc	status,2,c
  5144  0038DC  D6B5               	goto	l6524
  5145  0038DE  0A01               	xorlw	1	; case 1
  5146  0038E0  B4D8               	btfsc	status,2,c
  5147  0038E2  D6CD               	goto	l1618
  5148  0038E4  0A03               	xorlw	3	; case 2
  5149  0038E6  B4D8               	btfsc	status,2,c
  5150  0038E8  D6DD               	goto	l6540
  5151  0038EA  0A01               	xorlw	1	; case 3
  5152  0038EC  B4D8               	btfsc	status,2,c
  5153  0038EE  D79C               	goto	l6598
  5154  0038F0  0A07               	xorlw	7	; case 4
  5155  0038F2  B4D8               	btfsc	status,2,c
  5156  0038F4  D7E1               	goto	l6624
  5157  0038F6  0A01               	xorlw	1	; case 5
  5158  0038F8  B4D8               	btfsc	status,2,c
  5159  0038FA  D7CB               	goto	l6614
  5160  0038FC  0A03               	xorlw	3	; case 6
  5161  0038FE  A4D8               	btfss	status,2,c
  5162  003900  D6E9               	goto	l6548
  5163  003902                     l6632:
  5164                           
  5165                           ;gemsecs.c: 299:  return *r_link;
  5166                           ;stkvar	_r_link @ sp[(-1)+-1]
  5167  003902  0EFE               	movlw	-2
  5168  003904  50E3               	movf	plusw1,w,c
  5169  003906  6ED9               	movwf	fsr2l,c
  5170  003908  6ADA               	clrf	fsr2h,c
  5171  00390A  50DF               	movf	indf2,w,c
  5172  00390C  6E3B               	movwf	btemp,c
  5173                           
  5174                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5175  00390E  52E5               	movf	postdec1,f,c
  5176  003910  52E5               	movf	postdec1,f,c
  5177  003912  0012               	return		;funcret
  5178  003914                     __end_of_r_protocol:
  5179                           	opt callstack 0
  5180                           
  5181 ;; *************** function _UART1_Write *****************
  5182 ;; Defined at:
  5183 ;;		line 179 in file "mcc_generated_files/uart1.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  txData          1  [STACK] unsigned char 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1  [STACK] void 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 3F/39
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    3
  5204 ;; This function calls:
  5205 ;;		Nothing
  5206 ;; This function is called by:
  5207 ;;		_r_protocol
  5208 ;;		_t_protocol
  5209 ;;		_secs_send
  5210 ;; This function uses a reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text12
  5214  005958                     __ptext12:
  5215                           	opt callstack 0
  5216  005958                     _UART1_Write:
  5217                           	opt callstack 25
  5218                           
  5219                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5220                           
  5221                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5222                           
  5223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5224                           ;incstack = 0
  5225  005958  5038               	movf	_uart1TxBufferRemaining,w,c	;volatile
  5226  00595A  B4D8               	btfsc	status,2,c
  5227  00595C  D7FD               	goto	_UART1_Write
  5228                           
  5229                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  5230  00595E  0139               	movlb	57	; () banked
  5231  005960  B993               	btfsc	147,4,b	;volatile
  5232  005962  D005               	goto	l579
  5233                           
  5234                           ; BSR set to: 57
  5235                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  5236                           ;stkvar	_txData @ sp[(0)+-1]
  5237  005964  0EFF               	movlw	-1
  5238  005966  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  5239                           
  5240                           ;mcc_generated_files/uart1.c: 186:  } else {
  5241  00596C  D011               	goto	l5740
  5242  00596E                     l579:
  5243                           
  5244                           ; BSR set to: 57
  5245                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  5246  00596E  9993               	bcf	147,4,b	;volatile
  5247                           
  5248                           ; BSR set to: 57
  5249                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  5250                           ;stkvar	_txData @ sp[(0)+-1]
  5251  005970  0EC0               	movlw	low _uart1TxBuffer
  5252  005972  243A               	addwf	_uart1TxHead,w,c	;volatile
  5253  005974  6ED9               	movwf	fsr2l,c
  5254  005976  6ADA               	clrf	fsr2h,c
  5255  005978  0E02               	movlw	high _uart1TxBuffer
  5256  00597A  22DA               	addwfc	fsr2h,f,c
  5257  00597C  0EFF               	movlw	-1
  5258  00597E  006F FF8F FFDF     	movff	plusw1,indf2
  5259                           
  5260                           ; BSR set to: 57
  5261  005984  2A3A               	incf	_uart1TxHead,f,c	;volatile
  5262                           
  5263                           ; BSR set to: 57
  5264                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  5265  005986  0E3F               	movlw	63
  5266  005988  643A               	cpfsgt	_uart1TxHead,c
  5267  00598A  D001               	goto	l5738
  5268                           
  5269                           ; BSR set to: 57
  5270                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  5271  00598C  6A3A               	clrf	_uart1TxHead,c	;volatile
  5272  00598E                     l5738:
  5273                           
  5274                           ; BSR set to: 57
  5275                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  5276  00598E  0638               	decf	_uart1TxBufferRemaining,f,c	;volatile
  5277  005990                     l5740:
  5278                           
  5279                           ; BSR set to: 57
  5280                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  5281  005990  8993               	bsf	147,4,b	;volatile
  5282                           
  5283                           ; BSR set to: 57
  5284                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5285  005992  52E5               	movf	postdec1,f,c
  5286  005994  0012               	return		;funcret
  5287  005996                     __end_of_UART1_Write:
  5288                           	opt callstack 0
  5289                           
  5290 ;; *************** function _m_protocol *****************
  5291 ;; Defined at:
  5292 ;;		line 42 in file "gemsecs.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  m_link          1  [STACK] PTR enum E16163
  5295 ;;		 -> V(89), 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  rxData          1  [STACK] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1  [STACK] enum E16903
  5300 ;; Registers used:
  5301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5311 ;;Total ram usage:        0 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    5
  5314 ;; This function calls:
  5315 ;;		_StartTimer
  5316 ;;		_TimerDone
  5317 ;;		_UART1_Read
  5318 ;;		_UART1_is_rx_ready
  5319 ;;		_UART2_Read
  5320 ;;		_UART2_is_rx_ready
  5321 ;;		_WaitMs
  5322 ;;		_run_checksum
  5323 ;; This function is called by:
  5324 ;;		_main
  5325 ;; This function uses a reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text13
  5329  002EEA                     __ptext13:
  5330                           	opt callstack 0
  5331  002EEA                     _m_protocol:
  5332                           	opt callstack 0
  5333                           
  5334                           ; BSR set to: 57
  5335                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5336  002EEA  52E6               	movf	postinc1,f,c
  5337                           
  5338                           ;gemsecs.c: 42: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0;;gemsecs.c: 47:  switch
      +                           (*m_link) {
  5339                           
  5340                           ;incstack = 0
  5341  002EEC  D20B               	goto	l6916
  5342  002EEE                     l6750:
  5343                           
  5344                           ;gemsecs.c: 52:   if (UART1_is_rx_ready()) {
  5345  002EEE  ECD9  F030         	call	_UART1_is_rx_ready	;wreg free
  5346  002EF2  503B               	movf	btemp,w,c
  5347  002EF4  B4D8               	btfsc	status,2,c
  5348  002EF6  D021               	goto	l6764
  5349                           
  5350                           ;gemsecs.c: 53:    rxData = UART1_Read();
  5351  002EF8  ECEA  F02C         	call	_UART1_Read	;wreg free
  5352                           
  5353                           ;stkvar	_rxData @ sp[(-1)+0]
  5354  002EFC  0EFF               	movlw	-1
  5355  002EFE  0060  F0EF  FFE3   	movff	btemp,plusw1
  5356                           
  5357                           ; BSR set to: 57
  5358                           ;gemsecs.c: 54:    if (rxData == 0x05) {
  5359                           ;stkvar	_rxData @ sp[(-1)+0]
  5360  002F04  0EFF               	movlw	-1
  5361  002F06  006F FF8C  F03B    	movff	plusw1,btemp
  5362  002F0C  0E05               	movlw	5
  5363  002F0E  183B               	xorwf	btemp,w,c
  5364  002F10  A4D8               	btfss	status,2,c
  5365  002F12  D013               	goto	l6764
  5366                           
  5367                           ; BSR set to: 57
  5368                           ;gemsecs.c: 55:     V.uart = 1;
  5369  002F14  0E01               	movlw	1
  5370  002F16  0100               	movlb	0	; () banked
  5371  002F18  6FBF               	movwf	(_V+88)& (0+255),b
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;gemsecs.c: 56:     StartTimer(TMR_T2, 2000);
  5375  002F1A  0ED0               	movlw	208
  5376  002F1C  6EE6               	movwf	postinc1,c
  5377  002F1E  0E07               	movlw	7
  5378  002F20  6EE6               	movwf	postinc1,c
  5379  002F22  0E02               	movlw	2
  5380  002F24  6EE6               	movwf	postinc1,c
  5381  002F26  EC29  F02D         	call	_StartTimer	;wreg free
  5382                           
  5383                           ;gemsecs.c: 57:     V.error = LINK_ERROR_NONE;
  5384  002F2A  0100               	movlb	0	; () banked
  5385  002F2C  6BB6               	clrf	(_V+79)& (0+255),b
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;gemsecs.c: 58:     *m_link = LINK_STATE_ENQ;
  5389                           ;stkvar	_m_link @ sp[(-1)+-1]
  5390  002F2E  0EFE               	movlw	-2
  5391  002F30  50E3               	movf	plusw1,w,c
  5392  002F32  6ED9               	movwf	fsr2l,c
  5393  002F34  6ADA               	clrf	fsr2h,c
  5394  002F36  0E01               	movlw	1
  5395  002F38  6EDF               	movwf	indf2,c
  5396  002F3A                     l6764:
  5397                           
  5398                           ;gemsecs.c: 61:   if (UART2_is_rx_ready()) {
  5399  002F3A  ECD5  F030         	call	_UART2_is_rx_ready	;wreg free
  5400  002F3E  503B               	movf	btemp,w,c
  5401  002F40  B4D8               	btfsc	status,2,c
  5402  002F42  D201               	goto	l6918
  5403                           
  5404                           ;gemsecs.c: 62:    rxData = UART2_Read();
  5405  002F44  ECCB  F02C         	call	_UART2_Read	;wreg free
  5406                           
  5407                           ;stkvar	_rxData @ sp[(-1)+0]
  5408  002F48  0EFF               	movlw	-1
  5409  002F4A  0060  F0EF  FFE3   	movff	btemp,plusw1
  5410                           
  5411                           ; BSR set to: 57
  5412                           ;gemsecs.c: 63:    if (rxData == 0x05) {
  5413                           ;stkvar	_rxData @ sp[(-1)+0]
  5414  002F50  0EFF               	movlw	-1
  5415  002F52  006F FF8C  F03B    	movff	plusw1,btemp
  5416  002F58  0E05               	movlw	5
  5417  002F5A  183B               	xorwf	btemp,w,c
  5418  002F5C  A4D8               	btfss	status,2,c
  5419  002F5E  D1F3               	goto	l6918
  5420                           
  5421                           ; BSR set to: 57
  5422                           ;gemsecs.c: 64:     V.uart = 2;
  5423  002F60  0E02               	movlw	2
  5424  002F62  0100               	movlb	0	; () banked
  5425  002F64  6FBF               	movwf	(_V+88)& (0+255),b
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;gemsecs.c: 65:     StartTimer(TMR_T2, 2000);
  5429  002F66  0ED0               	movlw	208
  5430  002F68  6EE6               	movwf	postinc1,c
  5431  002F6A  0E07               	movlw	7
  5432  002F6C  6EE6               	movwf	postinc1,c
  5433  002F6E  0E02               	movlw	2
  5434  002F70  6EE6               	movwf	postinc1,c
  5435  002F72  EC29  F02D         	call	_StartTimer	;wreg free
  5436                           
  5437                           ;gemsecs.c: 66:     V.error = LINK_ERROR_NONE;
  5438  002F76  0100               	movlb	0	; () banked
  5439  002F78  6BB6               	clrf	(_V+79)& (0+255),b
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;gemsecs.c: 67:     *m_link = LINK_STATE_ENQ;
  5443                           ;stkvar	_m_link @ sp[(-1)+-1]
  5444  002F7A  0EFE               	movlw	-2
  5445  002F7C  50E3               	movf	plusw1,w,c
  5446  002F7E  6ED9               	movwf	fsr2l,c
  5447  002F80  6ADA               	clrf	fsr2h,c
  5448  002F82  0E01               	movlw	1
  5449  002F84  D1BD               	goto	L20
  5450  002F86                     l1565:
  5451                           
  5452                           ;gemsecs.c: 79:   V.error = LINK_ERROR_NONE;
  5453  002F86  0100               	movlb	0	; () banked
  5454  002F88  6BB6               	clrf	(_V+79)& (0+255),b
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;gemsecs.c: 80:   *m_link = LINK_STATE_EOT;
  5458                           ;stkvar	_m_link @ sp[(-1)+-1]
  5459  002F8A  0EFE               	movlw	-2
  5460  002F8C  50E3               	movf	plusw1,w,c
  5461  002F8E  6ED9               	movwf	fsr2l,c
  5462  002F90  6ADA               	clrf	fsr2h,c
  5463  002F92  0E02               	movlw	2
  5464  002F94  6EDF               	movwf	indf2,c
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;gemsecs.c: 81:   StartTimer(TMR_T2, 2000);
  5468  002F96  0ED0               	movlw	208
  5469  002F98  6EE6               	movwf	postinc1,c
  5470  002F9A  0E07               	movlw	7
  5471  002F9C  6EE6               	movwf	postinc1,c
  5472  002F9E  0E02               	movlw	2
  5473  002FA0  6EE6               	movwf	postinc1,c
  5474  002FA2  EC29  F02D         	call	_StartTimer	;wreg free
  5475                           
  5476                           ;gemsecs.c: 82:   break;
  5477  002FA6  D1CF               	goto	l6918
  5478  002FA8                     l6782:
  5479                           
  5480                           ;gemsecs.c: 84:   if (TimerDone(TMR_T2)) {
  5481  002FA8  0E02               	movlw	2
  5482  002FAA  6EE6               	movwf	postinc1,c
  5483  002FAC  EC9B  F02F         	call	_TimerDone	;wreg free
  5484  002FB0  503B               	movf	btemp,w,c
  5485  002FB2  B4D8               	btfsc	status,2,c
  5486  002FB4  D00D               	goto	l6788
  5487                           
  5488                           ;gemsecs.c: 85:    V.error = LINK_ERROR_T2;
  5489  002FB6  0E02               	movlw	2
  5490  002FB8  0100               	movlb	0	; () banked
  5491  002FBA  6FB6               	movwf	(_V+79)& (0+255),b
  5492                           
  5493                           ;gemsecs.c: 86:    V.failed_receive = 2;
  5494  002FBC  51BE               	movf	(_V+87)& (0+255),w,b
  5495  002FBE  0BF0               	andlw	-16
  5496  002FC0  0902               	iorlw	2
  5497  002FC2  6FBE               	movwf	(_V+87)& (0+255),b
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;gemsecs.c: 87:    *m_link = LINK_STATE_NAK;
  5501                           ;stkvar	_m_link @ sp[(-1)+-1]
  5502  002FC4  0EFE               	movlw	-2
  5503  002FC6  50E3               	movf	plusw1,w,c
  5504  002FC8  6ED9               	movwf	fsr2l,c
  5505  002FCA  6ADA               	clrf	fsr2h,c
  5506  002FCC  0E05               	movlw	5
  5507  002FCE  D198               	goto	L20
  5508  002FD0                     l6788:
  5509                           
  5510                           ;gemsecs.c: 89:    if (UART1_is_rx_ready()) {
  5511  002FD0  ECD9  F030         	call	_UART1_is_rx_ready	;wreg free
  5512  002FD4  503B               	movf	btemp,w,c
  5513  002FD6  B4D8               	btfsc	status,2,c
  5514  002FD8  D0A5               	goto	l6836
  5515                           
  5516                           ;gemsecs.c: 90:     rxData = UART1_Read();
  5517  002FDA  ECEA  F02C         	call	_UART1_Read	;wreg free
  5518                           
  5519                           ;stkvar	_rxData @ sp[(-1)+0]
  5520  002FDE  0EFF               	movlw	-1
  5521  002FE0  0060  F0EF  FFE3   	movff	btemp,plusw1
  5522                           
  5523                           ; BSR set to: 57
  5524                           ;gemsecs.c: 91:     if (rxData_l == 0) {
  5525  002FE6  502D               	movf	m_protocol@rxData_l,w,c
  5526  002FE8  A4D8               	btfss	status,2,c
  5527  002FEA  D00C               	goto	l6800
  5528                           
  5529                           ; BSR set to: 57
  5530                           ;gemsecs.c: 92:      r_block.length = rxData;
  5531                           ;stkvar	_rxData @ sp[(-1)+0]
  5532  002FEC  0EFF               	movlw	-1
  5533  002FEE  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  5534                           
  5535                           ; BSR set to: 57
  5536                           ;gemsecs.c: 93:      run_checksum(0, 1);
  5537  002FF4  0E01               	movlw	1
  5538  002FF6  6EE6               	movwf	postinc1,c
  5539  002FF8  0E00               	movlw	0
  5540  002FFA  6EE6               	movwf	postinc1,c
  5541  002FFC  EC63  F02D         	call	_run_checksum	;wreg free
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;gemsecs.c: 94:      rxData_l++;
  5545  003000  2A2D               	incf	m_protocol@rxData_l,f,c
  5546                           
  5547                           ;gemsecs.c: 95:     } else {
  5548  003002  D090               	goto	l6836
  5549  003004                     l6800:
  5550                           
  5551                           ; BSR set to: 57
  5552                           ;gemsecs.c: 99:      if (rxData_l <= sizeof(block10))
  5553  003004  0E0B               	movlw	11
  5554  003006  602D               	cpfslt	m_protocol@rxData_l,c
  5555  003008  D00C               	goto	l6804
  5556                           
  5557                           ; BSR set to: 57
  5558                           ;gemsecs.c: 100:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5559                           ;stkvar	_rxData @ sp[(-1)+0]
  5560  00300A  502D               	movf	m_protocol@rxData_l,w,c
  5561  00300C  0819               	sublw	low (_H10+25)
  5562  00300E  6ED9               	movwf	fsr2l,c
  5563  003010  0E00               	movlw	0
  5564  003012  A0D8               	btfss	status,0,c
  5565  003014  2AE8               	incf	wreg,f,c
  5566  003016  0801               	sublw	high (_H10+25)
  5567  003018  6EDA               	movwf	fsr2h,c
  5568  00301A  0EFF               	movlw	-1
  5569  00301C  006F FF8F FFDF     	movff	plusw1,indf2
  5570  003022                     l6804:
  5571                           
  5572                           ; BSR set to: 57
  5573                           ;gemsecs.c: 101:      if (rxData_l <= r_block.length)
  5574  003022  502D               	movf	m_protocol@rxData_l,w,c
  5575  003024  0100               	movlb	0	; () banked
  5576  003026  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  5577  003028  A0D8               	btfss	status,0,c
  5578  00302A  D00D               	goto	l6808
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;gemsecs.c: 102:       V.r_checksum = run_checksum(rxData, 0);
  5582  00302C  0E00               	movlw	0
  5583  00302E  6EE6               	movwf	postinc1,c
  5584                           
  5585                           ;stkvar	_rxData @ sp[(-2)+0]
  5586  003030  0EFE               	movlw	-2
  5587  003032  50E3               	movf	plusw1,w,c
  5588  003034  6EE6               	movwf	postinc1,c
  5589  003036  EC63  F02D         	call	_run_checksum	;wreg free
  5590  00303A  0060  F0EC  F0B9   	movff	btemp,_V+82
  5591  003040  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  5592  003046                     l6808:
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;gemsecs.c: 104:      if (rxData_l == r_block.length + 1)
  5596  003046  502D               	movf	m_protocol@rxData_l,w,c
  5597  003048  6E45               	movwf	btemp+10,c
  5598  00304A  6A46               	clrf	btemp+11,c
  5599  00304C  51CC               	movf	(_r_block+12)& (0+255),w,b
  5600  00304E  6E43               	movwf	btemp+8,c
  5601  003050  6A44               	clrf	btemp+9,c
  5602  003052  0E01               	movlw	1
  5603  003054  2643               	addwf	btemp+8,f,c
  5604  003056  0E00               	movlw	0
  5605  003058  2244               	addwfc	btemp+9,f,c
  5606  00305A  5045               	movf	btemp+10,w,c
  5607  00305C  1843               	xorwf	btemp+8,w,c
  5608  00305E  E109               	bnz	l6812
  5609  003060  5046               	movf	btemp+11,w,c
  5610  003062  1844               	xorwf	btemp+9,w,c
  5611  003064  A4D8               	btfss	status,2,c
  5612  003066  D005               	goto	l6812
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;gemsecs.c: 105:       H10[1].checksum = (uint16_t) rxData << 8;
  5616                           ;stkvar	_rxData @ sp[(-1)+0]
  5617  003068  0EFF               	movlw	-1
  5618  00306A  50E3               	movf	plusw1,w,c
  5619  00306C  0101               	movlb	1	; () banked
  5620  00306E  6F0E               	movwf	(_H10+14)& (0+255),b
  5621  003070  6B0D               	clrf	(_H10+13)& (0+255),b
  5622  003072                     l6812:
  5623                           
  5624                           ;gemsecs.c: 106:      if (rxData_l == r_block.length + 2)
  5625  003072  502D               	movf	m_protocol@rxData_l,w,c
  5626  003074  6E45               	movwf	btemp+10,c
  5627  003076  6A46               	clrf	btemp+11,c
  5628  003078  0100               	movlb	0	; () banked
  5629  00307A  51CC               	movf	(_r_block+12)& (0+255),w,b
  5630  00307C  6E43               	movwf	btemp+8,c
  5631  00307E  6A44               	clrf	btemp+9,c
  5632  003080  0E02               	movlw	2
  5633  003082  2643               	addwf	btemp+8,f,c
  5634  003084  0E00               	movlw	0
  5635  003086  2244               	addwfc	btemp+9,f,c
  5636  003088  5045               	movf	btemp+10,w,c
  5637  00308A  1843               	xorwf	btemp+8,w,c
  5638  00308C  E10A               	bnz	l6816
  5639  00308E  5046               	movf	btemp+11,w,c
  5640  003090  1844               	xorwf	btemp+9,w,c
  5641  003092  A4D8               	btfss	status,2,c
  5642  003094  D006               	goto	l6816
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;gemsecs.c: 107:       H10[1].checksum += rxData;
  5646                           ;stkvar	_rxData @ sp[(-1)+0]
  5647  003096  0EFF               	movlw	-1
  5648  003098  50E3               	movf	plusw1,w,c
  5649  00309A  0101               	movlb	1	; () banked
  5650  00309C  270D               	addwf	(_H10+13)& (0+255),f,b
  5651  00309E  0E00               	movlw	0
  5652  0030A0  230E               	addwfc	(_H10+14)& (0+255),f,b
  5653  0030A2                     l6816:
  5654                           
  5655                           ;gemsecs.c: 109:      rxData_l++;
  5656  0030A2  2A2D               	incf	m_protocol@rxData_l,f,c
  5657                           
  5658                           ;gemsecs.c: 110:      if (rxData_l > (r_block.length + 2)) {
  5659  0030A4  502D               	movf	m_protocol@rxData_l,w,c
  5660  0030A6  6E45               	movwf	btemp+10,c
  5661  0030A8  6A46               	clrf	btemp+11,c
  5662  0030AA  0100               	movlb	0	; () banked
  5663  0030AC  51CC               	movf	(_r_block+12)& (0+255),w,b
  5664  0030AE  6E43               	movwf	btemp+8,c
  5665  0030B0  6A44               	clrf	btemp+9,c
  5666  0030B2  0E02               	movlw	2
  5667  0030B4  2643               	addwf	btemp+8,f,c
  5668  0030B6  0E00               	movlw	0
  5669  0030B8  2244               	addwfc	btemp+9,f,c
  5670  0030BA  5045               	movf	btemp+10,w,c
  5671  0030BC  5C43               	subwf	btemp+8,w,c
  5672  0030BE  5044               	movf	btemp+9,w,c
  5673  0030C0  0A80               	xorlw	128
  5674  0030C2  6E3B               	movwf	btemp,c
  5675  0030C4  5046               	movf	btemp+11,w,c
  5676  0030C6  0A80               	xorlw	128
  5677  0030C8  583B               	subwfb	btemp,w,c
  5678  0030CA  B0D8               	btfsc	status,0,c
  5679  0030CC  D02B               	goto	l6836
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;gemsecs.c: 111:       if (V.r_checksum == H10[1].checksum) {
  5683  0030CE  0101               	movlb	1	; () banked
  5684  0030D0  510D               	movf	(_H10+13)& (0+255),w,b
  5685  0030D2  0100               	movlb	0	; () banked
  5686  0030D4  19B9               	xorwf	(_V+82)& (0+255),w,b
  5687  0030D6  E10E               	bnz	l6826
  5688  0030D8  0101               	movlb	1	; () banked
  5689  0030DA  510E               	movf	(_H10+14)& (0+255),w,b
  5690  0030DC  0100               	movlb	0	; () banked
  5691  0030DE  19BA               	xorwf	(_V+83)& (0+255),w,b
  5692  0030E0  A4D8               	btfss	status,2,c
  5693  0030E2  D008               	goto	l6826
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;gemsecs.c: 112:        *m_link = LINK_STATE_ACK;
  5697                           ;stkvar	_m_link @ sp[(-1)+-1]
  5698  0030E4  0EFE               	movlw	-2
  5699  0030E6  50E3               	movf	plusw1,w,c
  5700  0030E8  6ED9               	movwf	fsr2l,c
  5701  0030EA  6ADA               	clrf	fsr2h,c
  5702  0030EC  0E03               	movlw	3
  5703  0030EE  D019               	goto	L17
  5704  0030F0                     l6824:
  5705  0030F0  ECEA  F02C         	call	_UART1_Read	;wreg free
  5706  0030F4                     l6826:
  5707                           
  5708                           ;gemsecs.c: 114:        while (UART1_is_rx_ready())
  5709  0030F4  ECD9  F030         	call	_UART1_is_rx_ready	;wreg free
  5710  0030F8  503B               	movf	btemp,w,c
  5711  0030FA  A4D8               	btfss	status,2,c
  5712  0030FC  D7F9               	goto	l6824
  5713                           
  5714                           ;gemsecs.c: 116:        WaitMs(500);
  5715  0030FE  0EF4               	movlw	244
  5716  003100  6EE6               	movwf	postinc1,c
  5717  003102  0E01               	movlw	1
  5718  003104  6EE6               	movwf	postinc1,c
  5719  003106  ECE5  F02D         	call	_WaitMs	;wreg free
  5720                           
  5721                           ;gemsecs.c: 117:        V.error = LINK_ERROR_CHECKSUM;
  5722  00310A  0E05               	movlw	5
  5723  00310C  0100               	movlb	0	; () banked
  5724  00310E  6FB6               	movwf	(_V+79)& (0+255),b
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;gemsecs.c: 118:        V.failed_receive = 3;
  5728  003110  51BE               	movf	(_V+87)& (0+255),w,b
  5729  003112  0BF0               	andlw	-16
  5730  003114  0903               	iorlw	3
  5731  003116  6FBE               	movwf	(_V+87)& (0+255),b
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;gemsecs.c: 119:        *m_link = LINK_STATE_NAK;
  5735                           ;stkvar	_m_link @ sp[(-1)+-1]
  5736  003118  0EFE               	movlw	-2
  5737  00311A  50E3               	movf	plusw1,w,c
  5738  00311C  6ED9               	movwf	fsr2l,c
  5739  00311E  6ADA               	clrf	fsr2h,c
  5740  003120  0E05               	movlw	5
  5741  003122                     L17:
  5742  003122  6EDF               	movwf	indf2,c
  5743  003124                     l6836:
  5744                           
  5745                           ;gemsecs.c: 125:    if (UART2_is_rx_ready()) {
  5746  003124  ECD5  F030         	call	_UART2_is_rx_ready	;wreg free
  5747  003128  503B               	movf	btemp,w,c
  5748  00312A  B4D8               	btfsc	status,2,c
  5749  00312C  D10C               	goto	l6918
  5750                           
  5751                           ;gemsecs.c: 126:     rxData = UART2_Read();
  5752  00312E  ECCB  F02C         	call	_UART2_Read	;wreg free
  5753                           
  5754                           ;stkvar	_rxData @ sp[(-1)+0]
  5755  003132  0EFF               	movlw	-1
  5756  003134  0060  F0EF  FFE3   	movff	btemp,plusw1
  5757                           
  5758                           ; BSR set to: 57
  5759                           ;gemsecs.c: 127:     if (rxData_l == 0) {
  5760  00313A  502D               	movf	m_protocol@rxData_l,w,c
  5761  00313C  A4D8               	btfss	status,2,c
  5762  00313E  D00C               	goto	l6848
  5763                           
  5764                           ; BSR set to: 57
  5765                           ;gemsecs.c: 128:      r_block.length = rxData;
  5766                           ;stkvar	_rxData @ sp[(-1)+0]
  5767  003140  0EFF               	movlw	-1
  5768  003142  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  5769                           
  5770                           ; BSR set to: 57
  5771                           ;gemsecs.c: 129:      run_checksum(0, 1);
  5772  003148  0E01               	movlw	1
  5773  00314A  6EE6               	movwf	postinc1,c
  5774  00314C  0E00               	movlw	0
  5775  00314E  6EE6               	movwf	postinc1,c
  5776  003150  EC63  F02D         	call	_run_checksum	;wreg free
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;gemsecs.c: 130:      rxData_l++;
  5780  003154  2A2D               	incf	m_protocol@rxData_l,f,c
  5781                           
  5782                           ;gemsecs.c: 131:     } else {
  5783  003156  D0F7               	goto	l6918
  5784  003158                     l6848:
  5785                           
  5786                           ; BSR set to: 57
  5787                           ;gemsecs.c: 135:      if (rxData_l <= sizeof(block10))
  5788  003158  0E0B               	movlw	11
  5789  00315A  602D               	cpfslt	m_protocol@rxData_l,c
  5790  00315C  D00C               	goto	l6852
  5791                           
  5792                           ; BSR set to: 57
  5793                           ;gemsecs.c: 136:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5794                           ;stkvar	_rxData @ sp[(-1)+0]
  5795  00315E  502D               	movf	m_protocol@rxData_l,w,c
  5796  003160  0819               	sublw	low (_H10+25)
  5797  003162  6ED9               	movwf	fsr2l,c
  5798  003164  0E00               	movlw	0
  5799  003166  A0D8               	btfss	status,0,c
  5800  003168  2AE8               	incf	wreg,f,c
  5801  00316A  0801               	sublw	high (_H10+25)
  5802  00316C  6EDA               	movwf	fsr2h,c
  5803  00316E  0EFF               	movlw	-1
  5804  003170  006F FF8F FFDF     	movff	plusw1,indf2
  5805  003176                     l6852:
  5806                           
  5807                           ; BSR set to: 57
  5808                           ;gemsecs.c: 137:      if (rxData_l <= r_block.length)
  5809  003176  502D               	movf	m_protocol@rxData_l,w,c
  5810  003178  0100               	movlb	0	; () banked
  5811  00317A  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  5812  00317C  A0D8               	btfss	status,0,c
  5813  00317E  D00D               	goto	l6856
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;gemsecs.c: 138:       V.r_checksum = run_checksum(rxData, 0);
  5817  003180  0E00               	movlw	0
  5818  003182  6EE6               	movwf	postinc1,c
  5819                           
  5820                           ;stkvar	_rxData @ sp[(-2)+0]
  5821  003184  0EFE               	movlw	-2
  5822  003186  50E3               	movf	plusw1,w,c
  5823  003188  6EE6               	movwf	postinc1,c
  5824  00318A  EC63  F02D         	call	_run_checksum	;wreg free
  5825  00318E  0060  F0EC  F0B9   	movff	btemp,_V+82
  5826  003194  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  5827  00319A                     l6856:
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;gemsecs.c: 140:      if (rxData_l == r_block.length + 1)
  5831  00319A  502D               	movf	m_protocol@rxData_l,w,c
  5832  00319C  6E45               	movwf	btemp+10,c
  5833  00319E  6A46               	clrf	btemp+11,c
  5834  0031A0  51CC               	movf	(_r_block+12)& (0+255),w,b
  5835  0031A2  6E43               	movwf	btemp+8,c
  5836  0031A4  6A44               	clrf	btemp+9,c
  5837  0031A6  0E01               	movlw	1
  5838  0031A8  2643               	addwf	btemp+8,f,c
  5839  0031AA  0E00               	movlw	0
  5840  0031AC  2244               	addwfc	btemp+9,f,c
  5841  0031AE  5045               	movf	btemp+10,w,c
  5842  0031B0  1843               	xorwf	btemp+8,w,c
  5843  0031B2  E109               	bnz	l6860
  5844  0031B4  5046               	movf	btemp+11,w,c
  5845  0031B6  1844               	xorwf	btemp+9,w,c
  5846  0031B8  A4D8               	btfss	status,2,c
  5847  0031BA  D005               	goto	l6860
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;gemsecs.c: 141:       H10[1].checksum = (uint16_t) rxData << 8;
  5851                           ;stkvar	_rxData @ sp[(-1)+0]
  5852  0031BC  0EFF               	movlw	-1
  5853  0031BE  50E3               	movf	plusw1,w,c
  5854  0031C0  0101               	movlb	1	; () banked
  5855  0031C2  6F0E               	movwf	(_H10+14)& (0+255),b
  5856  0031C4  6B0D               	clrf	(_H10+13)& (0+255),b
  5857  0031C6                     l6860:
  5858                           
  5859                           ;gemsecs.c: 142:      if (rxData_l == r_block.length + 2)
  5860  0031C6  502D               	movf	m_protocol@rxData_l,w,c
  5861  0031C8  6E45               	movwf	btemp+10,c
  5862  0031CA  6A46               	clrf	btemp+11,c
  5863  0031CC  0100               	movlb	0	; () banked
  5864  0031CE  51CC               	movf	(_r_block+12)& (0+255),w,b
  5865  0031D0  6E43               	movwf	btemp+8,c
  5866  0031D2  6A44               	clrf	btemp+9,c
  5867  0031D4  0E02               	movlw	2
  5868  0031D6  2643               	addwf	btemp+8,f,c
  5869  0031D8  0E00               	movlw	0
  5870  0031DA  2244               	addwfc	btemp+9,f,c
  5871  0031DC  5045               	movf	btemp+10,w,c
  5872  0031DE  1843               	xorwf	btemp+8,w,c
  5873  0031E0  E10A               	bnz	l6864
  5874  0031E2  5046               	movf	btemp+11,w,c
  5875  0031E4  1844               	xorwf	btemp+9,w,c
  5876  0031E6  A4D8               	btfss	status,2,c
  5877  0031E8  D006               	goto	l6864
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;gemsecs.c: 143:       H10[1].checksum += rxData;
  5881                           ;stkvar	_rxData @ sp[(-1)+0]
  5882  0031EA  0EFF               	movlw	-1
  5883  0031EC  50E3               	movf	plusw1,w,c
  5884  0031EE  0101               	movlb	1	; () banked
  5885  0031F0  270D               	addwf	(_H10+13)& (0+255),f,b
  5886  0031F2  0E00               	movlw	0
  5887  0031F4  230E               	addwfc	(_H10+14)& (0+255),f,b
  5888  0031F6                     l6864:
  5889                           
  5890                           ;gemsecs.c: 145:      rxData_l++;
  5891  0031F6  2A2D               	incf	m_protocol@rxData_l,f,c
  5892                           
  5893                           ;gemsecs.c: 146:      if (rxData_l > (r_block.length + 2)) {
  5894  0031F8  502D               	movf	m_protocol@rxData_l,w,c
  5895  0031FA  6E45               	movwf	btemp+10,c
  5896  0031FC  6A46               	clrf	btemp+11,c
  5897  0031FE  0100               	movlb	0	; () banked
  5898  003200  51CC               	movf	(_r_block+12)& (0+255),w,b
  5899  003202  6E43               	movwf	btemp+8,c
  5900  003204  6A44               	clrf	btemp+9,c
  5901  003206  0E02               	movlw	2
  5902  003208  2643               	addwf	btemp+8,f,c
  5903  00320A  0E00               	movlw	0
  5904  00320C  2244               	addwfc	btemp+9,f,c
  5905  00320E  5045               	movf	btemp+10,w,c
  5906  003210  5C43               	subwf	btemp+8,w,c
  5907  003212  5044               	movf	btemp+9,w,c
  5908  003214  0A80               	xorlw	128
  5909  003216  6E3B               	movwf	btemp,c
  5910  003218  5046               	movf	btemp+11,w,c
  5911  00321A  0A80               	xorlw	128
  5912  00321C  583B               	subwfb	btemp,w,c
  5913  00321E  B0D8               	btfsc	status,0,c
  5914  003220  D092               	goto	l6918
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;gemsecs.c: 147:       if (V.r_checksum == H10[1].checksum) {
  5918  003222  0101               	movlb	1	; () banked
  5919  003224  510D               	movf	(_H10+13)& (0+255),w,b
  5920  003226  0100               	movlb	0	; () banked
  5921  003228  19B9               	xorwf	(_V+82)& (0+255),w,b
  5922  00322A  E10E               	bnz	l6874
  5923  00322C  0101               	movlb	1	; () banked
  5924  00322E  510E               	movf	(_H10+14)& (0+255),w,b
  5925  003230  0100               	movlb	0	; () banked
  5926  003232  19BA               	xorwf	(_V+83)& (0+255),w,b
  5927  003234  A4D8               	btfss	status,2,c
  5928  003236  D008               	goto	l6874
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;gemsecs.c: 148:        *m_link = LINK_STATE_ACK;
  5932                           ;stkvar	_m_link @ sp[(-1)+-1]
  5933  003238  0EFE               	movlw	-2
  5934  00323A  50E3               	movf	plusw1,w,c
  5935  00323C  6ED9               	movwf	fsr2l,c
  5936  00323E  6ADA               	clrf	fsr2h,c
  5937  003240  0E03               	movlw	3
  5938  003242  D05E               	goto	L20
  5939  003244                     l6872:
  5940  003244  ECCB  F02C         	call	_UART2_Read	;wreg free
  5941  003248                     l6874:
  5942                           
  5943                           ;gemsecs.c: 150:        while (UART2_is_rx_ready())
  5944  003248  ECD5  F030         	call	_UART2_is_rx_ready	;wreg free
  5945  00324C  503B               	movf	btemp,w,c
  5946  00324E  A4D8               	btfss	status,2,c
  5947  003250  D7F9               	goto	l6872
  5948                           
  5949                           ;gemsecs.c: 152:        WaitMs(500);
  5950  003252  0EF4               	movlw	244
  5951  003254  6EE6               	movwf	postinc1,c
  5952  003256  0E01               	movlw	1
  5953  003258  6EE6               	movwf	postinc1,c
  5954  00325A  ECE5  F02D         	call	_WaitMs	;wreg free
  5955                           
  5956                           ;gemsecs.c: 153:        V.error = LINK_ERROR_CHECKSUM;
  5957  00325E  0E05               	movlw	5
  5958  003260  0100               	movlb	0	; () banked
  5959  003262  6FB6               	movwf	(_V+79)& (0+255),b
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;gemsecs.c: 154:        V.failed_receive = 4;
  5963  003264  51BE               	movf	(_V+87)& (0+255),w,b
  5964  003266  0BF0               	andlw	-16
  5965  003268  0904               	iorlw	4
  5966  00326A  D6AB               	goto	L19
  5967  00326C                     l6884:
  5968                           
  5969                           ;gemsecs.c: 166:   V.stream = H10[1].block.block.stream;
  5970  00326C  0101               	movlb	1	; () banked
  5971  00326E  5116               	movf	(_H10+22)& (0+255),w,b
  5972  003270  0B7F               	andlw	127
  5973  003272  0100               	movlb	0	; () banked
  5974  003274  6FB4               	movwf	(_V+77)& (0+255),b
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;gemsecs.c: 167:   V.function = H10[1].block.block.function;
  5978  003276  C115  F0B5         	movff	_H10+21,_V+78
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;gemsecs.c: 168:   V.systemb = H10[1].block.block.systemb;
  5982  00327A  C10F  F0B0         	movff	_H10+15,_V+73
  5983  00327E  C110  F0B1         	movff	_H10+16,_V+74
  5984  003282  C111  F0B2         	movff	_H10+17,_V+75
  5985  003286  C112  F0B3         	movff	_H10+18,_V+76
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;gemsecs.c: 169:   V.rbit = H10[1].block.block.rbit;
  5989  00328A  0101               	movlb	1	; () banked
  5990  00328C  AF18               	btfss	(_H10+24)& (0+255),7,b
  5991  00328E  D003               	bra	u4075
  5992  003290  0100               	movlb	0	; () banked
  5993  003292  81BD               	bsf	(_V+86)& (0+255),0,b
  5994  003294  D002               	bra	u4077
  5995  003296                     u4075:
  5996  003296  0100               	movlb	0	; () banked
  5997  003298  91BD               	bcf	(_V+86)& (0+255),0,b
  5998  00329A                     u4077:
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;gemsecs.c: 170:   V.wbit = H10[1].block.block.wbit;
  6002  00329A  0101               	movlb	1	; () banked
  6003  00329C  AF16               	btfss	(_H10+22)& (0+255),7,b
  6004  00329E  D003               	bra	u4085
  6005  0032A0  0100               	movlb	0	; () banked
  6006  0032A2  83BD               	bsf	(_V+86)& (0+255),1,b
  6007  0032A4  D002               	bra	u4087
  6008  0032A6                     u4085:
  6009  0032A6  0100               	movlb	0	; () banked
  6010  0032A8  93BD               	bcf	(_V+86)& (0+255),1,b
  6011  0032AA                     u4087:
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;gemsecs.c: 171:   V.ebit = H10[1].block.block.ebit;
  6015  0032AA  0101               	movlb	1	; () banked
  6016  0032AC  AF14               	btfss	(_H10+20)& (0+255),7,b
  6017  0032AE  D003               	bra	u4095
  6018  0032B0  0100               	movlb	0	; () banked
  6019  0032B2  85BD               	bsf	(_V+86)& (0+255),2,b
  6020  0032B4  D002               	bra	u4097
  6021  0032B6                     u4095:
  6022  0032B6  0100               	movlb	0	; () banked
  6023  0032B8  95BD               	bcf	(_V+86)& (0+255),2,b
  6024  0032BA                     u4097:
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;gemsecs.c: 172:   V.failed_receive = 0;
  6028  0032BA  0EF0               	movlw	-16
  6029  0032BC  17BE               	andwf	(_V+87)& (0+255),f,b
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;gemsecs.c: 173:   *m_link = LINK_STATE_DONE;
  6033                           ;stkvar	_m_link @ sp[(-1)+-1]
  6034  0032BE  0EFE               	movlw	-2
  6035  0032C0  50E3               	movf	plusw1,w,c
  6036  0032C2  6ED9               	movwf	fsr2l,c
  6037  0032C4  6ADA               	clrf	fsr2h,c
  6038  0032C6  0E04               	movlw	4
  6039  0032C8  D01B               	goto	L20
  6040  0032CA                     l6900:
  6041                           
  6042                           ;gemsecs.c: 176:   *m_link = LINK_STATE_ERROR;
  6043                           ;stkvar	_m_link @ sp[(-1)+-1]
  6044  0032CA  0EFE               	movlw	-2
  6045  0032CC  50E3               	movf	plusw1,w,c
  6046  0032CE  6ED9               	movwf	fsr2l,c
  6047  0032D0  6ADA               	clrf	fsr2h,c
  6048  0032D2  0E06               	movlw	6
  6049  0032D4  6EDF               	movwf	indf2,c
  6050                           
  6051                           ;gemsecs.c: 177:   while ((uart1RxCount)) {
  6052  0032D6  D002               	goto	l6904
  6053  0032D8                     l6902:
  6054                           
  6055                           ;gemsecs.c: 178:    UART1_Read();
  6056  0032D8  ECEA  F02C         	call	_UART1_Read	;wreg free
  6057  0032DC                     l6904:
  6058                           
  6059                           ;gemsecs.c: 177:   while ((uart1RxCount)) {
  6060  0032DC  5035               	movf	_uart1RxCount,w,c	;volatile
  6061  0032DE  B4D8               	btfsc	status,2,c
  6062  0032E0  D003               	goto	l6908
  6063  0032E2  D7FA               	goto	l6902
  6064  0032E4                     l6906:
  6065                           
  6066                           ;gemsecs.c: 181:    UART2_Read();
  6067  0032E4  ECCB  F02C         	call	_UART2_Read	;wreg free
  6068  0032E8                     l6908:
  6069                           
  6070                           ;gemsecs.c: 180:   while ((uart2RxCount)) {
  6071  0032E8  502F               	movf	_uart2RxCount,w,c	;volatile
  6072  0032EA  B4D8               	btfsc	status,2,c
  6073  0032EC  D02C               	goto	l6918
  6074  0032EE  D7FA               	goto	l6906
  6075  0032F0                     l6910:
  6076                           
  6077                           ;gemsecs.c: 187:   V.failed_receive = 0;
  6078  0032F0  0EF0               	movlw	-16
  6079  0032F2  0100               	movlb	0	; () banked
  6080  0032F4  17BE               	andwf	(_V+87)& (0+255),f,b
  6081  0032F6                     l6912:
  6082                           
  6083                           ;gemsecs.c: 189:   *m_link = LINK_STATE_IDLE;
  6084                           ;stkvar	_m_link @ sp[(-1)+-1]
  6085  0032F6  0EFE               	movlw	-2
  6086  0032F8  50E3               	movf	plusw1,w,c
  6087  0032FA  6ED9               	movwf	fsr2l,c
  6088  0032FC  6ADA               	clrf	fsr2h,c
  6089  0032FE  0E00               	movlw	0
  6090  003300                     L20:
  6091  003300  6EDF               	movwf	indf2,c
  6092                           
  6093                           ;gemsecs.c: 191:   break;
  6094  003302  D021               	goto	l6918
  6095  003304                     l6916:
  6096                           
  6097                           ;stkvar	_m_link @ sp[(-1)+-1]
  6098  003304  0EFE               	movlw	-2
  6099  003306  50E3               	movf	plusw1,w,c
  6100  003308  6ED9               	movwf	fsr2l,c
  6101  00330A  6ADA               	clrf	fsr2h,c
  6102  00330C  50DF               	movf	indf2,w,c
  6103  00330E  6E45               	movwf	btemp+10,c
  6104  003310  6A46               	clrf	btemp+11,c
  6105                           
  6106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6107                           ; Switch size 1, requested type "simple"
  6108                           ; Number of cases is 1, Range of values is 0 to 0
  6109                           ; switch strategies available:
  6110                           ; Name         Instructions Cycles
  6111                           ; simple_byte            4     3 (average)
  6112                           ;	Chosen strategy is simple_byte
  6113  003312  5046               	movf	btemp+11,w,c
  6114  003314  0A00               	xorlw	0	; case 0
  6115  003316  A4D8               	btfss	status,2,c
  6116  003318  D7EE               	goto	l6912
  6117                           
  6118                           ; Switch size 1, requested type "simple"
  6119                           ; Number of cases is 7, Range of values is 0 to 6
  6120                           ; switch strategies available:
  6121                           ; Name         Instructions Cycles
  6122                           ; simple_byte           22    12 (average)
  6123                           ;	Chosen strategy is simple_byte
  6124  00331A  5045               	movf	btemp+10,w,c
  6125  00331C  0A00               	xorlw	0	; case 0
  6126  00331E  B4D8               	btfsc	status,2,c
  6127  003320  D5E6               	goto	l6750
  6128  003322  0A01               	xorlw	1	; case 1
  6129  003324  B4D8               	btfsc	status,2,c
  6130  003326  D62F               	goto	l1565
  6131  003328  0A03               	xorlw	3	; case 2
  6132  00332A  B4D8               	btfsc	status,2,c
  6133  00332C  D63D               	goto	l6782
  6134  00332E  0A01               	xorlw	1	; case 3
  6135  003330  B4D8               	btfsc	status,2,c
  6136  003332  D79C               	goto	l6884
  6137  003334  0A07               	xorlw	7	; case 4
  6138  003336  B4D8               	btfsc	status,2,c
  6139  003338  D7DB               	goto	l6910
  6140  00333A  0A01               	xorlw	1	; case 5
  6141  00333C  B4D8               	btfsc	status,2,c
  6142  00333E  D7C5               	goto	l6900
  6143  003340  0A03               	xorlw	3	; case 6
  6144  003342  A4D8               	btfss	status,2,c
  6145  003344  D7D8               	goto	l6912
  6146  003346                     l6918:
  6147                           
  6148                           ;gemsecs.c: 194:  return *m_link;
  6149                           ;stkvar	_m_link @ sp[(-1)+-1]
  6150  003346  0EFE               	movlw	-2
  6151  003348  50E3               	movf	plusw1,w,c
  6152  00334A  6ED9               	movwf	fsr2l,c
  6153  00334C  6ADA               	clrf	fsr2h,c
  6154  00334E  50DF               	movf	indf2,w,c
  6155  003350  6E3B               	movwf	btemp,c
  6156                           
  6157                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6158  003352  52E5               	movf	postdec1,f,c
  6159  003354  52E5               	movf	postdec1,f,c
  6160  003356  0012               	return		;funcret
  6161  003358                     __end_of_m_protocol:
  6162                           	opt callstack 0
  6163                           
  6164 ;; *************** function _run_checksum *****************
  6165 ;; Defined at:
  6166 ;;		line 31 in file "gemsecs.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  byte_block      1  [STACK] unsigned char 
  6169 ;;  clear           1  [STACK] _Bool 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  2  [STACK] unsigned short 
  6174 ;; Registers used:
  6175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  6176 ;; Tracked objects:
  6177 ;;		On entry : 6/39
  6178 ;;		On exit  : 3F/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6185 ;;Total ram usage:        0 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    3
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_m_protocol
  6192 ;;		_r_protocol
  6193 ;; This function uses a reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text14
  6197  005AC6                     __ptext14:
  6198                           	opt callstack 0
  6199  005AC6                     _run_checksum:
  6200                           	opt callstack 26
  6201                           
  6202                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  6203                           ;stkvar	_clear @ sp[(0)+-2]
  6204                           
  6205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6206                           ;incstack = 0
  6207  005AC6  0EFE               	movlw	-2
  6208  005AC8  50E3               	movf	plusw1,w,c
  6209  005ACA  B4D8               	btfsc	status,2,c
  6210  005ACC  D003               	goto	l6098
  6211                           
  6212                           ;gemsecs.c: 36:   sum = 0;
  6213  005ACE  0100               	movlb	0	; () banked
  6214  005AD0  6BF8               	clrf	run_checksum@sum& (0+255),b
  6215  005AD2  6BF9               	clrf	(run_checksum@sum+1)& (0+255),b
  6216  005AD4                     l6098:
  6217                           
  6218                           ;gemsecs.c: 38:  sum += byte_block;
  6219                           ;stkvar	_byte_block @ sp[(0)+-1]
  6220  005AD4  0EFF               	movlw	-1
  6221  005AD6  50E3               	movf	plusw1,w,c
  6222  005AD8  0100               	movlb	0	; () banked
  6223  005ADA  27F8               	addwf	run_checksum@sum& (0+255),f,b
  6224  005ADC  0E00               	movlw	0
  6225  005ADE  23F9               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;gemsecs.c: 39:  return sum;
  6229  005AE0  0060  F3E0  F03B   	movff	run_checksum@sum,btemp
  6230  005AE6  0060  F3E4  F03C   	movff	run_checksum@sum+1,btemp+1
  6231                           
  6232                           ; BSR set to: 0
  6233                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  6234  005AEC  52E5               	movf	postdec1,f,c
  6235  005AEE  52E5               	movf	postdec1,f,c
  6236  005AF0  0012               	return		;funcret
  6237  005AF2                     __end_of_run_checksum:
  6238                           	opt callstack 0
  6239                           
  6240 ;; *************** function _WaitMs *****************
  6241 ;; Defined at:
  6242 ;;		line 31 in file "timers.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  numMilliseco    2  [STACK] unsigned short 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1  [STACK] void 
  6249 ;; Registers used:
  6250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6260 ;;Total ram usage:        0 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:    4
  6263 ;; This function calls:
  6264 ;;		_StartTimer
  6265 ;;		_TimerDone
  6266 ;; This function is called by:
  6267 ;;		_main
  6268 ;;		_m_protocol
  6269 ;;		_r_protocol
  6270 ;; This function uses a reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text15
  6274  005BCA                     __ptext15:
  6275                           	opt callstack 0
  6276  005BCA                     _WaitMs:
  6277                           	opt callstack 25
  6278                           
  6279                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  6280                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6281                           
  6282                           ; BSR set to: 0
  6283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6284                           ;incstack = 0
  6285  005BCA  0EFE               	movlw	-2
  6286  005BCC  006F FF8F FFE6     	movff	plusw1,postinc1
  6287  005BD2  006F FF8F FFE6     	movff	plusw1,postinc1
  6288  005BD8  0E00               	movlw	0
  6289  005BDA  6EE6               	movwf	postinc1,c
  6290  005BDC  EC29  F02D         	call	_StartTimer	;wreg free
  6291  005BE0                     l6036:
  6292                           
  6293                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6294  005BE0  0E00               	movlw	0
  6295  005BE2  6EE6               	movwf	postinc1,c
  6296  005BE4  EC9B  F02F         	call	_TimerDone	;wreg free
  6297  005BE8  503B               	movf	btemp,w,c
  6298  005BEA  B4D8               	btfsc	status,2,c
  6299  005BEC  D7F9               	goto	l6036
  6300                           
  6301                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6302  005BEE  52E5               	movf	postdec1,f,c
  6303  005BF0  52E5               	movf	postdec1,f,c
  6304  005BF2  0012               	return		;funcret
  6305  005BF4                     __end_of_WaitMs:
  6306                           	opt callstack 0
  6307                           
  6308 ;; *************** function _TimerDone *****************
  6309 ;; Defined at:
  6310 ;;		line 20 in file "timers.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  timer           1  [STACK] unsigned char 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;		None
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  1  [STACK] _Bool 
  6317 ;; Registers used:
  6318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6328 ;;Total ram usage:        0 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:    3
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_m_protocol
  6335 ;;		_r_protocol
  6336 ;;		_t_protocol
  6337 ;;		_WaitMs
  6338 ;; This function uses a reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text16
  6342  005F36                     __ptext16:
  6343                           	opt callstack 0
  6344  005F36                     _TimerDone:
  6345                           	opt callstack 26
  6346                           
  6347                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  6348                           ;stkvar	_timer @ sp[(0)+-1]
  6349                           
  6350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6351                           ;incstack = 0
  6352  005F36  0EFF               	movlw	-1
  6353  005F38  50E3               	movf	plusw1,w,c
  6354  005F3A  0D02               	mullw	2
  6355  005F3C  50F3               	movf	prodl,w,c
  6356  005F3E  0FD9               	addlw	low _tickCount
  6357  005F40  6ED9               	movwf	fsr2l,c
  6358  005F42  6ADA               	clrf	fsr2h,c
  6359  005F44  50DE               	movf	postinc2,w,c
  6360  005F46  10DE               	iorwf	postinc2,w,c
  6361  005F48  A4D8               	btfss	status,2,c
  6362  005F4A  D002               	goto	l5842
  6363                           
  6364                           ;timers.c: 23:   return 1;
  6365  005F4C  0E01               	movlw	1
  6366  005F4E  D001               	goto	L21
  6367  005F50                     l5842:
  6368                           
  6369                           ;timers.c: 25:  return 0;
  6370  005F50  0E00               	movlw	0
  6371  005F52                     L21:
  6372  005F52  6E3B               	movwf	btemp,c
  6373                           
  6374                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6375  005F54  52E5               	movf	postdec1,f,c
  6376  005F56  0012               	return		;funcret
  6377  005F58                     __end_of_TimerDone:
  6378                           	opt callstack 0
  6379                           
  6380 ;; *************** function _StartTimer *****************
  6381 ;; Defined at:
  6382 ;;		line 12 in file "timers.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  timer           1  [STACK] unsigned char 
  6385 ;;  count           2  [STACK] unsigned short 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1  [STACK] void 
  6390 ;; Registers used:
  6391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/39
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6401 ;;Total ram usage:        0 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    3
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_m_protocol
  6408 ;;		_r_protocol
  6409 ;;		_t_protocol
  6410 ;;		_WaitMs
  6411 ;; This function uses a reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text17
  6415  005A52                     __ptext17:
  6416                           	opt callstack 0
  6417  005A52                     _StartTimer:
  6418                           	opt callstack 26
  6419                           
  6420                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  6421                           ;stkvar	_count @ sp[(0)+-3]
  6422                           
  6423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6424                           ;incstack = 0
  6425  005A52  0EFD               	movlw	-3
  6426  005A54  006F FF8C  F045    	movff	plusw1,btemp+10
  6427  005A5A  0EFE               	movlw	-2
  6428  005A5C  006F FF8C  F046    	movff	plusw1,btemp+11
  6429  005A62  90D8               	bcf	status,0,c
  6430  005A64  3445               	rlcf	btemp+10,w,c
  6431  005A66  6E43               	movwf	btemp+8,c
  6432  005A68  3446               	rlcf	btemp+11,w,c
  6433  005A6A  6E44               	movwf	btemp+9,c
  6434                           
  6435                           ;stkvar	_timer @ sp[(0)+-1]
  6436  005A6C  0EFF               	movlw	-1
  6437  005A6E  50E3               	movf	plusw1,w,c
  6438  005A70  0D02               	mullw	2
  6439  005A72  50F3               	movf	prodl,w,c
  6440  005A74  0FD9               	addlw	low _tickCount
  6441  005A76  6ED9               	movwf	fsr2l,c
  6442  005A78  6ADA               	clrf	fsr2h,c
  6443  005A7A  0060  F10F  FFDE   	movff	btemp+8,postinc2
  6444  005A80  0060  F113  FFDD   	movff	btemp+9,postdec2
  6445                           
  6446                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  6447  005A86  52E5               	movf	postdec1,f,c
  6448  005A88  52E5               	movf	postdec1,f,c
  6449  005A8A  52E5               	movf	postdec1,f,c
  6450  005A8C  0012               	return		;funcret
  6451  005A8E                     __end_of_StartTimer:
  6452                           	opt callstack 0
  6453                           
  6454 ;; *************** function _UART2_is_rx_ready *****************
  6455 ;; Defined at:
  6456 ;;		line 137 in file "mcc_generated_files/uart2.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1  [STACK] unsigned char 
  6463 ;; Registers used:
  6464 ;;		btemp
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    3
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_m_protocol
  6481 ;; This function uses a reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text18
  6485  0061AA                     __ptext18:
  6486                           	opt callstack 0
  6487  0061AA                     _UART2_is_rx_ready:
  6488                           	opt callstack 26
  6489                           
  6490                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  6491                           
  6492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6493                           ;incstack = 0
  6494  0061AA  0060  F0BC  F03B   	movff	_uart2RxCount,btemp	;volatile
  6495                           
  6496                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6497  0061B0  0012               	return		;funcret
  6498  0061B2                     __end_of_UART2_is_rx_ready:
  6499                           	opt callstack 0
  6500                           
  6501 ;; *************** function _UART2_Read *****************
  6502 ;; Defined at:
  6503 ;;		line 152 in file "mcc_generated_files/uart2.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  readValue       1  [STACK] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1  [STACK] unsigned char 
  6510 ;; Registers used:
  6511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 3F/39
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6521 ;;Total ram usage:        0 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    3
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_m_protocol
  6528 ;; This function uses a reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text19
  6532  005996                     __ptext19:
  6533                           	opt callstack 0
  6534  005996                     _UART2_Read:
  6535                           	opt callstack 0
  6536                           
  6537                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6538  005996  52E6               	movf	postinc1,f,c
  6539  005998                     
  6540                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6541                           
  6542                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6543  005998  502F               	movf	_uart2RxCount,w,c	;volatile
  6544  00599A  B4D8               	btfsc	status,2,c
  6545  00599C  D7FD               	goto	l5998
  6546                           
  6547                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  6548  00599E  0E00               	movlw	low _uart2RxBuffer
  6549  0059A0  2430               	addwf	_uart2RxTail,w,c	;volatile
  6550  0059A2  6ED9               	movwf	fsr2l,c
  6551  0059A4  6ADA               	clrf	fsr2h,c
  6552  0059A6  0E02               	movlw	high _uart2RxBuffer
  6553  0059A8  22DA               	addwfc	fsr2h,f,c
  6554  0059AA  50DF               	movf	indf2,w,c
  6555  0059AC  6E46               	movwf	btemp+11,c
  6556                           
  6557                           ;stkvar	_readValue @ sp[(-1)+0]
  6558  0059AE  0EFF               	movlw	-1
  6559  0059B0  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6560  0059B6  2A30               	incf	_uart2RxTail,f,c	;volatile
  6561                           
  6562                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  6563  0059B8  0E3F               	movlw	63
  6564  0059BA  6430               	cpfsgt	_uart2RxTail,c
  6565  0059BC  D001               	goto	l692
  6566                           
  6567                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  6568  0059BE  6A30               	clrf	_uart2RxTail,c	;volatile
  6569  0059C0                     l692:
  6570                           
  6571                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  6572  0059C0  0139               	movlb	57	; () banked
  6573  0059C2  9596               	bcf	150,2,b	;volatile
  6574                           
  6575                           ; BSR set to: 57
  6576                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  6577  0059C4  062F               	decf	_uart2RxCount,f,c	;volatile
  6578                           
  6579                           ; BSR set to: 57
  6580                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  6581  0059C6  8596               	bsf	150,2,b	;volatile
  6582                           
  6583                           ; BSR set to: 57
  6584                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  6585                           ;stkvar	_readValue @ sp[(-1)+0]
  6586  0059C8  0EFF               	movlw	-1
  6587  0059CA  006F FF8C  F03B    	movff	plusw1,btemp
  6588                           
  6589                           ; BSR set to: 57
  6590                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6591  0059D0  52E5               	movf	postdec1,f,c
  6592  0059D2  0012               	return		;funcret
  6593  0059D4                     __end_of_UART2_Read:
  6594                           	opt callstack 0
  6595                           
  6596 ;; *************** function _UART1_is_rx_ready *****************
  6597 ;; Defined at:
  6598 ;;		line 146 in file "mcc_generated_files/uart1.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;		None
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;		None
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1  [STACK] unsigned char 
  6605 ;; Registers used:
  6606 ;;		btemp
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6616 ;;Total ram usage:        0 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    3
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_m_protocol
  6623 ;;		_r_protocol
  6624 ;;		_t_protocol
  6625 ;; This function uses a reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text20
  6629  0061B2                     __ptext20:
  6630                           	opt callstack 0
  6631  0061B2                     _UART1_is_rx_ready:
  6632                           	opt callstack 26
  6633                           
  6634                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  6635                           
  6636                           ; BSR set to: 57
  6637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6638                           ;incstack = 0
  6639  0061B2  0060  F0D4  F03B   	movff	_uart1RxCount,btemp	;volatile
  6640                           
  6641                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6642  0061B8  0012               	return		;funcret
  6643  0061BA                     __end_of_UART1_is_rx_ready:
  6644                           	opt callstack 0
  6645                           
  6646 ;; *************** function _UART1_Read *****************
  6647 ;; Defined at:
  6648 ;;		line 161 in file "mcc_generated_files/uart1.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;		None
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;  readValue       1  [STACK] unsigned char 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1  [STACK] unsigned char 
  6655 ;; Registers used:
  6656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 3F/39
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6666 ;;Total ram usage:        0 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    3
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_m_protocol
  6673 ;;		_r_protocol
  6674 ;;		_t_protocol
  6675 ;; This function uses a reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text21
  6679  0059D4                     __ptext21:
  6680                           	opt callstack 0
  6681  0059D4                     _UART1_Read:
  6682                           	opt callstack 0
  6683                           
  6684                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6685  0059D4  52E6               	movf	postinc1,f,c
  6686  0059D6                     
  6687                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6688                           
  6689                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6690  0059D6  5035               	movf	_uart1RxCount,w,c	;volatile
  6691  0059D8  B4D8               	btfsc	status,2,c
  6692  0059DA  D7FD               	goto	l5974
  6693                           
  6694                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  6695  0059DC  0E80               	movlw	low _uart1RxBuffer
  6696  0059DE  2436               	addwf	_uart1RxTail,w,c	;volatile
  6697  0059E0  6ED9               	movwf	fsr2l,c
  6698  0059E2  6ADA               	clrf	fsr2h,c
  6699  0059E4  0E02               	movlw	high _uart1RxBuffer
  6700  0059E6  22DA               	addwfc	fsr2h,f,c
  6701  0059E8  50DF               	movf	indf2,w,c
  6702  0059EA  6E46               	movwf	btemp+11,c
  6703                           
  6704                           ;stkvar	_readValue @ sp[(-1)+0]
  6705  0059EC  0EFF               	movlw	-1
  6706  0059EE  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6707  0059F4  2A36               	incf	_uart1RxTail,f,c	;volatile
  6708                           
  6709                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  6710  0059F6  0E3F               	movlw	63
  6711  0059F8  6436               	cpfsgt	_uart1RxTail,c
  6712  0059FA  D001               	goto	l572
  6713                           
  6714                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  6715  0059FC  6A36               	clrf	_uart1RxTail,c	;volatile
  6716  0059FE                     l572:
  6717                           
  6718                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  6719  0059FE  0139               	movlb	57	; () banked
  6720  005A00  9793               	bcf	147,3,b	;volatile
  6721                           
  6722                           ; BSR set to: 57
  6723                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  6724  005A02  0635               	decf	_uart1RxCount,f,c	;volatile
  6725                           
  6726                           ; BSR set to: 57
  6727                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  6728  005A04  8793               	bsf	147,3,b	;volatile
  6729                           
  6730                           ; BSR set to: 57
  6731                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  6732                           ;stkvar	_readValue @ sp[(-1)+0]
  6733  005A06  0EFF               	movlw	-1
  6734  005A08  006F FF8C  F03B    	movff	plusw1,btemp
  6735                           
  6736                           ; BSR set to: 57
  6737                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6738  005A0E  52E5               	movf	postdec1,f,c
  6739  005A10  0012               	return		;funcret
  6740  005A12                     __end_of_UART1_Read:
  6741                           	opt callstack 0
  6742                           
  6743 ;; *************** function _init_display *****************
  6744 ;; Defined at:
  6745 ;;		line 35 in file "eadog.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1  [STACK] void 
  6752 ;; Registers used:
  6753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 3F/3D
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6763 ;;Total ram usage:        0 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    5
  6766 ;; This function calls:
  6767 ;;		_ringBufS_init
  6768 ;;		_send_lcd_cmd
  6769 ;;		_send_lcd_cmd_long
  6770 ;;		_wdtdelay
  6771 ;; This function is called by:
  6772 ;;		_main
  6773 ;; This function uses a reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text22
  6777  004B5E                     __ptext22:
  6778                           	opt callstack 0
  6779  004B5E                     _init_display:
  6780                           	opt callstack 25
  6781                           
  6782                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  6783                           
  6784                           ; BSR set to: 57
  6785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6786                           ;incstack = 0
  6787  004B5E  0E43               	movlw	low _ring_buf1
  6788  004B60  0100               	movlb	0	; () banked
  6789  004B62  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6790  004B64  0E03               	movlw	high _ring_buf1
  6791  004B66  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6792                           
  6793                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  6794  004B68  0E00               	movlw	low _ring_buf2
  6795  004B6A  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6796  004B6C  0E03               	movlw	high _ring_buf2
  6797  004B6E  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  6801  004B70  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  6802  004B76  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  6803  004B7C  EC37  F02E         	call	_ringBufS_init	;wreg free
  6804                           
  6805                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  6806  004B80  0060  F347  FFE6   	movff	_spi_link+4,postinc1
  6807  004B86  0060  F34B  FFE6   	movff	_spi_link+5,postinc1
  6808  004B8C  EC37  F02E         	call	_ringBufS_init	;wreg free
  6809                           
  6810                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  6811  004B90  80BE               	bsf	16318,0,c	;volatile
  6812  004B92  84BC               	bsf	16316,2,c	;volatile
  6813                           
  6814                           ;eadog.c: 44:  wdtdelay(350000);
  6815  004B94  0E30               	movlw	48
  6816  004B96  6EE6               	movwf	postinc1,c
  6817  004B98  0E57               	movlw	87
  6818  004B9A  6EE6               	movwf	postinc1,c
  6819  004B9C  0E05               	movlw	5
  6820  004B9E  6EE6               	movwf	postinc1,c
  6821  004BA0  0E00               	movlw	0
  6822  004BA2  6EE6               	movwf	postinc1,c
  6823  004BA4  EC43  F02B         	call	_wdtdelay	;wreg free
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  6827  004BA8  0E39               	movlw	57
  6828  004BAA  6EE6               	movwf	postinc1,c
  6829  004BAC  EC23  F02E         	call	_send_lcd_cmd	;wreg free
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  6833  004BB0  0E1D               	movlw	29
  6834  004BB2  6EE6               	movwf	postinc1,c
  6835  004BB4  EC23  F02E         	call	_send_lcd_cmd	;wreg free
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  6839  004BB8  0E50               	movlw	80
  6840  004BBA  6EE6               	movwf	postinc1,c
  6841  004BBC  EC23  F02E         	call	_send_lcd_cmd	;wreg free
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  6845  004BC0  0E6C               	movlw	108
  6846  004BC2  6EE6               	movwf	postinc1,c
  6847  004BC4  EC23  F02E         	call	_send_lcd_cmd	;wreg free
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  6851  004BC8  0E76               	movlw	118
  6852  004BCA  6EE6               	movwf	postinc1,c
  6853  004BCC  EC23  F02E         	call	_send_lcd_cmd	;wreg free
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  6857  004BD0  0E38               	movlw	56
  6858  004BD2  6EE6               	movwf	postinc1,c
  6859  004BD4  EC0F  F02E         	call	_send_lcd_cmd_long	;wreg free
  6860                           
  6861                           ; BSR set to: 0
  6862                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  6863  004BD8  0E0F               	movlw	15
  6864  004BDA  6EE6               	movwf	postinc1,c
  6865  004BDC  EC23  F02E         	call	_send_lcd_cmd	;wreg free
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  6869  004BE0  0E01               	movlw	1
  6870  004BE2  6EE6               	movwf	postinc1,c
  6871  004BE4  EC0F  F02E         	call	_send_lcd_cmd_long	;wreg free
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  6875  004BE8  0E02               	movlw	2
  6876  004BEA  6EE6               	movwf	postinc1,c
  6877  004BEC  EC23  F02E         	call	_send_lcd_cmd	;wreg free
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  6881  004BF0  0E06               	movlw	6
  6882  004BF2  6EE6               	movwf	postinc1,c
  6883  004BF4  EC23  F02E         	call	_send_lcd_cmd	;wreg free
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;eadog.c: 55:  wdtdelay(30);
  6887  004BF8  0E1E               	movlw	30
  6888  004BFA  6EE6               	movwf	postinc1,c
  6889  004BFC  0E00               	movlw	0
  6890  004BFE  6EE6               	movwf	postinc1,c
  6891  004C00  0E00               	movlw	0
  6892  004C02  6EE6               	movwf	postinc1,c
  6893  004C04  0E00               	movlw	0
  6894  004C06  6EE6               	movwf	postinc1,c
  6895  004C08  EC43  F02B         	call	_wdtdelay	;wreg free
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  6899  004C0C  0E02               	movlw	2
  6900  004C0E  013D               	movlb	61	; () banked
  6901  004C10  6F16               	movwf	22,b	;volatile
  6902                           
  6903                           ; BSR set to: 61
  6904                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  6905  004C12  0E40               	movlw	64
  6906  004C14  6F15               	movwf	21,b	;volatile
  6907                           
  6908                           ; BSR set to: 61
  6909                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  6910  004C16  0E83               	movlw	131
  6911  004C18  6F14               	movwf	20,b	;volatile
  6912                           
  6913                           ; BSR set to: 61
  6914                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  6915  004C1A  931A               	bcf	26,1,b	;volatile
  6916                           
  6917                           ; BSR set to: 61
  6918                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  6919  004C1C  0E3F               	movlw	-193
  6920  004C1E  013B               	movlb	59	; () banked
  6921  004C20  17FD               	andwf	253,f,b	;volatile
  6922                           
  6923                           ; BSR set to: 59
  6924                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  6925  004C22  9BFD               	bcf	253,5,b	;volatile
  6926                           
  6927                           ; BSR set to: 59
  6928                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  6929  004C24  51FD               	movf	253,w,b	;volatile
  6930  004C26  0BF9               	andlw	-7
  6931  004C28  0902               	iorlw	2
  6932  004C2A  6FFD               	movwf	253,b	;volatile
  6933                           
  6934                           ; BSR set to: 59
  6935                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  6936  004C2C  0EE7               	movlw	-25
  6937  004C2E  17FD               	andwf	253,f,b	;volatile
  6938                           
  6939                           ; BSR set to: 59
  6940                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  6941  004C30  81FD               	bsf	253,0,b	;volatile
  6942                           
  6943                           ; BSR set to: 59
  6944                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  6945  004C32  0E43               	movlw	low _ring_buf1
  6946  004C34  6FF9               	movwf	249,b	;volatile
  6947  004C36  0E03               	movlw	high _ring_buf1
  6948  004C38  6FFA               	movwf	250,b	;volatile
  6949  004C3A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6950  004C3C  6FFB               	movwf	251,b	;volatile
  6951                           
  6952                           ; BSR set to: 59
  6953                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  6954  004C3E  9BFC               	bcf	252,5,b	;volatile
  6955                           
  6956                           ; BSR set to: 59
  6957                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  6958  004C40  013D               	movlb	61	; () banked
  6959  004C42  831A               	bsf	26,1,b	;volatile
  6960                           
  6961                           ; BSR set to: 61
  6962                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  6963  004C44  90BE               	bcf	16318,0,c	;volatile
  6964                           
  6965                           ; BSR set to: 61
  6966                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6967  004C46  0012               	return		;funcret
  6968  004C48                     __end_of_init_display:
  6969                           	opt callstack 0
  6970                           
  6971 ;; *************** function _send_lcd_cmd_long *****************
  6972 ;; Defined at:
  6973 ;;		line 97 in file "eadog.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  cmd             1  [STACK] unsigned char 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1  [STACK] void 
  6980 ;; Registers used:
  6981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6982 ;; Tracked objects:
  6983 ;;		On entry : 3F/0
  6984 ;;		On exit  : 3F/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6991 ;;Total ram usage:        0 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; Hardware stack levels required when called:    4
  6994 ;; This function calls:
  6995 ;;		_SPI1_Exchange8bit
  6996 ;;		_wdtdelay
  6997 ;; This function is called by:
  6998 ;;		_init_display
  6999 ;; This function uses a reentrant model
  7000 ;;
  7001                           
  7002                           	psect	text23
  7003  005C1E                     __ptext23:
  7004                           	opt callstack 0
  7005  005C1E                     _send_lcd_cmd_long:
  7006                           	opt callstack 25
  7007                           
  7008                           ; BSR set to: 61
  7009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7010                           ;incstack = 0
  7011                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  7012  005C1E  92BC               	bcf	16316,1,c	;volatile
  7013                           
  7014                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  7015  005C20  94BC               	bcf	16316,2,c	;volatile
  7016                           
  7017                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  7018                           ;stkvar	_cmd @ sp[(0)+-1]
  7019  005C22  0EFF               	movlw	-1
  7020  005C24  50E3               	movf	plusw1,w,c
  7021  005C26  6EE6               	movwf	postinc1,c
  7022  005C28  EC10  F030         	call	_SPI1_Exchange8bit	;wreg free
  7023                           
  7024                           ; BSR set to: 57
  7025                           ;eadog.c: 102:  wdtdelay(800);
  7026  005C2C  0E20               	movlw	32
  7027  005C2E  6EE6               	movwf	postinc1,c
  7028  005C30  0E03               	movlw	3
  7029  005C32  6EE6               	movwf	postinc1,c
  7030  005C34  0E00               	movlw	0
  7031  005C36  6EE6               	movwf	postinc1,c
  7032  005C38  0E00               	movlw	0
  7033  005C3A  6EE6               	movwf	postinc1,c
  7034  005C3C  EC43  F02B         	call	_wdtdelay	;wreg free
  7035                           
  7036                           ; BSR set to: 0
  7037  005C40  82BC               	bsf	16316,1,c	;volatile
  7038                           
  7039                           ; BSR set to: 0
  7040                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7041  005C42  52E5               	movf	postdec1,f,c
  7042  005C44  0012               	return		;funcret
  7043  005C46                     __end_of_send_lcd_cmd_long:
  7044                           	opt callstack 0
  7045                           
  7046 ;; *************** function _send_lcd_cmd *****************
  7047 ;; Defined at:
  7048 ;;		line 85 in file "eadog.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  cmd             1  [STACK] unsigned char 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1  [STACK] void 
  7055 ;; Registers used:
  7056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7057 ;; Tracked objects:
  7058 ;;		On entry : 3F/0
  7059 ;;		On exit  : 3F/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7066 ;;Total ram usage:        0 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    4
  7069 ;; This function calls:
  7070 ;;		_SPI1_Exchange8bit
  7071 ;;		_wdtdelay
  7072 ;; This function is called by:
  7073 ;;		_init_display
  7074 ;; This function uses a reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text24
  7078  005C46                     __ptext24:
  7079                           	opt callstack 0
  7080  005C46                     _send_lcd_cmd:
  7081                           	opt callstack 25
  7082                           
  7083                           ; BSR set to: 0
  7084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7085                           ;incstack = 0
  7086                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  7087  005C46  92BC               	bcf	16316,1,c	;volatile
  7088                           
  7089                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  7090  005C48  94BC               	bcf	16316,2,c	;volatile
  7091                           
  7092                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  7093                           ;stkvar	_cmd @ sp[(0)+-1]
  7094  005C4A  0EFF               	movlw	-1
  7095  005C4C  50E3               	movf	plusw1,w,c
  7096  005C4E  6EE6               	movwf	postinc1,c
  7097  005C50  EC10  F030         	call	_SPI1_Exchange8bit	;wreg free
  7098                           
  7099                           ; BSR set to: 57
  7100                           ;eadog.c: 90:  wdtdelay(30);
  7101  005C54  0E1E               	movlw	30
  7102  005C56  6EE6               	movwf	postinc1,c
  7103  005C58  0E00               	movlw	0
  7104  005C5A  6EE6               	movwf	postinc1,c
  7105  005C5C  0E00               	movlw	0
  7106  005C5E  6EE6               	movwf	postinc1,c
  7107  005C60  0E00               	movlw	0
  7108  005C62  6EE6               	movwf	postinc1,c
  7109  005C64  EC43  F02B         	call	_wdtdelay	;wreg free
  7110                           
  7111                           ; BSR set to: 0
  7112  005C68  82BC               	bsf	16316,1,c	;volatile
  7113                           
  7114                           ; BSR set to: 0
  7115                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7116  005C6A  52E5               	movf	postdec1,f,c
  7117  005C6C  0012               	return		;funcret
  7118  005C6E                     __end_of_send_lcd_cmd:
  7119                           	opt callstack 0
  7120                           
  7121 ;; *************** function _SPI1_Exchange8bit *****************
  7122 ;; Defined at:
  7123 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  data            1  [STACK] unsigned char 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;		None
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1  [STACK] unsigned char 
  7130 ;; Registers used:
  7131 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 3F/39
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7141 ;;Total ram usage:        0 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    3
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_send_lcd_cmd
  7148 ;;		_send_lcd_cmd_long
  7149 ;; This function uses a reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text25
  7153  006020                     __ptext25:
  7154                           	opt callstack 0
  7155  006020                     _SPI1_Exchange8bit:
  7156                           	opt callstack 25
  7157                           
  7158                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7159                           
  7160                           ; BSR set to: 0
  7161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7162                           ;incstack = 0
  7163  006020  0E01               	movlw	1
  7164  006022  013D               	movlb	61	; () banked
  7165  006024  6F12               	movwf	18,b	;volatile
  7166                           
  7167                           ; BSR set to: 61
  7168                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7169                           ;stkvar	_data @ sp[(0)+-1]
  7170  006026  0EFF               	movlw	-1
  7171  006028  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7172  00602E                     l851:
  7173                           
  7174                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7175  00602E  0139               	movlb	57	; () banked
  7176  006030  A9A2               	btfss	162,4,b	;volatile
  7177  006032  D7FD               	goto	l851
  7178                           
  7179                           ; BSR set to: 57
  7180                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7181  006034  006F F440  F03B    	movff	15632,btemp	;volatile
  7182                           
  7183                           ; BSR set to: 57
  7184                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7185  00603A  52E5               	movf	postdec1,f,c
  7186  00603C  0012               	return		;funcret
  7187  00603E                     __end_of_SPI1_Exchange8bit:
  7188                           	opt callstack 0
  7189                           
  7190 ;; *************** function _ringBufS_init *****************
  7191 ;; Defined at:
  7192 ;;		line 22 in file "ringbufs.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;  _this           2  [STACK] PTR volatile struct ring
  7195 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;		None
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1  [STACK] void 
  7200 ;; Registers used:
  7201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7211 ;;Total ram usage:        0 bytes
  7212 ;; Hardware stack levels used:    1
  7213 ;; Hardware stack levels required when called:    4
  7214 ;; This function calls:
  7215 ;;		_memset
  7216 ;; This function is called by:
  7217 ;;		_init_display
  7218 ;; This function uses a reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text26
  7222  005C6E                     __ptext26:
  7223                           	opt callstack 0
  7224  005C6E                     _ringBufS_init:
  7225                           	opt callstack 25
  7226                           
  7227                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7228                           
  7229                           ; BSR set to: 57
  7230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7231                           ;incstack = 0
  7232  005C6E  0E43               	movlw	67
  7233  005C70  6EE6               	movwf	postinc1,c
  7234  005C72  0E00               	movlw	0
  7235  005C74  6EE6               	movwf	postinc1,c
  7236  005C76  0E00               	movlw	0
  7237  005C78  6EE6               	movwf	postinc1,c
  7238  005C7A  0E00               	movlw	0
  7239  005C7C  6EE6               	movwf	postinc1,c
  7240                           
  7241                           ;stkvar	__this @ sp[(-4)+-2]
  7242  005C7E  0EFA               	movlw	-6
  7243  005C80  006F FF8F FFE6     	movff	plusw1,postinc1
  7244  005C86  006F FF8F FFE6     	movff	plusw1,postinc1
  7245  005C8C  ECAC  F019         	call	_memset	;wreg free
  7246                           
  7247                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7248  005C90  52E5               	movf	postdec1,f,c
  7249  005C92  52E5               	movf	postdec1,f,c
  7250  005C94  0012               	return		;funcret
  7251  005C96                     __end_of_ringBufS_init:
  7252                           	opt callstack 0
  7253                           
  7254 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7255 ;; Defined at:
  7256 ;;		line 221 in file "eadog.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  r               1  [STACK] unsigned char 
  7259 ;;  c               1  [STACK] unsigned char 
  7260 ;;  strPtr          1  [STACK] PTR unsigned char 
  7261 ;;		 -> V(89), 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1  [STACK] void 
  7266 ;; Registers used:
  7267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  7268 ;; Tracked objects:
  7269 ;;		On entry : 3F/0
  7270 ;;		On exit  : 3F/3B
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7277 ;;Total ram usage:        0 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:   13
  7280 ;; This function calls:
  7281 ;;		_eaDogM_WriteString
  7282 ;;		_send_lcd_cmd_dma
  7283 ;; This function is called by:
  7284 ;;		_main
  7285 ;; This function uses a reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text27
  7289  005AF2                     __ptext27:
  7290                           	opt callstack 0
  7291  005AF2                     _eaDogM_WriteStringAtPos:
  7292                           	opt callstack 17
  7293                           
  7294                           ;eadog.c: 221: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           222: {;eadog.c: 223:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7295                           ;stkvar	_c @ sp[(0)+-2]
  7296                           
  7297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7298                           ;incstack = 0
  7299  005AF2  0EFE               	movlw	-2
  7300  005AF4  006F FF8C  F046    	movff	plusw1,btemp+11
  7301                           
  7302                           ;stkvar	_r @ sp[(0)+-1]
  7303  005AFA  0EFF               	movlw	-1
  7304  005AFC  50E3               	movf	plusw1,w,c
  7305  005AFE  0D10               	mullw	16
  7306  005B00  50F3               	movf	prodl,w,c
  7307  005B02  2446               	addwf	btemp+11,w,c
  7308  005B04  0F80               	addlw	128
  7309  005B06  6EE6               	movwf	postinc1,c
  7310  005B08  EC71  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;eadog.c: 224:  eaDogM_WriteString(strPtr);
  7314                           ;stkvar	_strPtr @ sp[(0)+-3]
  7315  005B0C  0EFD               	movlw	-3
  7316  005B0E  50E3               	movf	plusw1,w,c
  7317  005B10  6EE6               	movwf	postinc1,c
  7318  005B12  ECA6  F028         	call	_eaDogM_WriteString	;wreg free
  7319                           
  7320                           ; BSR set to: 59
  7321                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  7322  005B16  52E5               	movf	postdec1,f,c
  7323  005B18  52E5               	movf	postdec1,f,c
  7324  005B1A  52E5               	movf	postdec1,f,c
  7325  005B1C  0012               	return		;funcret
  7326  005B1E                     __end_of_eaDogM_WriteStringAtPos:
  7327                           	opt callstack 0
  7328                           
  7329 ;; *************** function _eaDogM_WriteString *****************
  7330 ;; Defined at:
  7331 ;;		line 167 in file "eadog.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  strPtr          1  [STACK] PTR unsigned char 
  7334 ;;		 -> V(89), 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;		None
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1  [STACK] void 
  7339 ;; Registers used:
  7340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7341 ;; Tracked objects:
  7342 ;;		On entry : 3F/0
  7343 ;;		On exit  : 3F/3B
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7350 ;;Total ram usage:        0 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:   12
  7353 ;; This function calls:
  7354 ;;		_printf
  7355 ;;		_ringBufS_flush
  7356 ;;		_start_lcd
  7357 ;;		_strlen
  7358 ;;		_wait_lcd_set
  7359 ;; This function is called by:
  7360 ;;		_eaDogM_WriteStringAtPos
  7361 ;; This function uses a reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text28
  7365  00514C                     __ptext28:
  7366                           	opt callstack 0
  7367  00514C                     _eaDogM_WriteString:
  7368                           	opt callstack 17
  7369                           
  7370                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  7371                           
  7372                           ; BSR set to: 59
  7373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7374                           ;incstack = 0
  7375  00514C  ECDD  F030         	call	_wait_lcd_set	;wreg free
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  7379  005150  0E00               	movlw	0
  7380  005152  6EE6               	movwf	postinc1,c
  7381  005154  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  7382  00515A  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  7383  005160  EC8C  F029         	call	_ringBufS_flush	;wreg free
  7384  005164  94BC               	bcf	16316,2,c	;volatile
  7385                           
  7386                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7387                           ;stkvar	_strPtr @ sp[(0)+-1]
  7388  005166  0EFF               	movlw	-1
  7389  005168  006F FF8C  F046    	movff	plusw1,btemp+11
  7390  00516E  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7391  005174  0E00               	movlw	0
  7392  005176  6EE6               	movwf	postinc1,c
  7393  005178  EC06  F028         	call	_strlen	;wreg free
  7394  00517C  503C               	movf	btemp+1,w,c
  7395  00517E  E104               	bnz	u4960
  7396  005180  0E41               	movlw	65
  7397  005182  5C3B               	subwf	btemp,w,c
  7398  005184  A0D8               	btfss	status,0,c
  7399  005186  D008               	goto	l7996
  7400  005188                     u4960:
  7401                           
  7402                           ;stkvar	_strPtr @ sp[(0)+-1]
  7403  005188  0EFF               	movlw	-1
  7404  00518A  50E3               	movf	plusw1,w,c
  7405  00518C  6ED9               	movwf	fsr2l,c
  7406  00518E  6ADA               	clrf	fsr2h,c
  7407  005190  0E40               	movlw	64
  7408  005192  26D9               	addwf	fsr2l,f,c
  7409  005194  0E00               	movlw	0
  7410  005196  6EDF               	movwf	indf2,c
  7411  005198                     l7996:
  7412                           
  7413                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  7414  005198  013B               	movlb	59	; () banked
  7415  00519A  9FFC               	bcf	252,7,b	;volatile
  7416                           
  7417                           ; BSR set to: 59
  7418                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  7419                           ;stkvar	_strPtr @ sp[(0)+-1]
  7420  00519C  0EFF               	movlw	-1
  7421  00519E  006F FF8C  F046    	movff	plusw1,btemp+11
  7422  0051A4  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7423  0051AA  0E00               	movlw	0
  7424  0051AC  6EE6               	movwf	postinc1,c
  7425  0051AE  EC06  F028         	call	_strlen	;wreg free
  7426  0051B2  0060  F0EF  FBF7   	movff	btemp,15351	;volatile
  7427  0051B8  0060  F0F3  FBF8   	movff	btemp+1,15352	;volatile
  7428                           
  7429                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  7430  0051BE  013B               	movlb	59	; () banked
  7431  0051C0  8FFC               	bsf	252,7,b	;volatile
  7432                           
  7433                           ; BSR set to: 59
  7434                           ;eadog.c: 177:  printf("%s", strPtr);
  7435                           ;stkvar	_strPtr @ sp[(0)+-1]
  7436  0051C2  0EFF               	movlw	-1
  7437  0051C4  006F FF8C  F046    	movff	plusw1,btemp+11
  7438  0051CA  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7439  0051D0  0E00               	movlw	0
  7440  0051D2  6EE6               	movwf	postinc1,c
  7441  0051D4  0E98               	movlw	(STR_2+9)& (0+255)
  7442  0051D6  6EE6               	movwf	postinc1,c
  7443  0051D8  0E03               	movlw	3
  7444  0051DA  6EE6               	movwf	postinc1,c
  7445  0051DC  ECB3  F02A         	call	_printf	;wreg free
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;eadog.c: 178:  start_lcd();
  7449  0051E0  ECE0  F030         	call	_start_lcd	;wreg free
  7450                           
  7451                           ; BSR set to: 59
  7452                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7453  0051E4  52E5               	movf	postdec1,f,c
  7454  0051E6  0012               	return		;funcret
  7455  0051E8                     __end_of_eaDogM_WriteString:
  7456                           	opt callstack 0
  7457                           
  7458 ;; *************** function _eaDogM_WriteCommand *****************
  7459 ;; Defined at:
  7460 ;;		line 143 in file "eadog.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  cmd             1  [STACK] unsigned char 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;		None
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  1  [STACK] void 
  7467 ;; Registers used:
  7468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7469 ;; Tracked objects:
  7470 ;;		On entry : 3F/3D
  7471 ;;		On exit  : 3F/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7478 ;;Total ram usage:        0 bytes
  7479 ;; Hardware stack levels used:    1
  7480 ;; Hardware stack levels required when called:   13
  7481 ;; This function calls:
  7482 ;;		_send_lcd_cmd_dma
  7483 ;; This function is called by:
  7484 ;;		_main
  7485 ;; This function uses a reentrant model
  7486 ;;
  7487                           
  7488                           	psect	text29
  7489  006120                     __ptext29:
  7490                           	opt callstack 0
  7491  006120                     _eaDogM_WriteCommand:
  7492                           	opt callstack 17
  7493                           
  7494                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  7495                           ;stkvar	_cmd @ sp[(0)+-1]
  7496                           
  7497                           ; BSR set to: 59
  7498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7499                           ;incstack = 0
  7500  006120  0EFF               	movlw	-1
  7501  006122  50E3               	movf	plusw1,w,c
  7502  006124  6EE6               	movwf	postinc1,c
  7503  006126  EC71  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7504                           
  7505                           ; BSR set to: 0
  7506                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7507  00612A  52E5               	movf	postdec1,f,c
  7508  00612C  0012               	return		;funcret
  7509  00612E                     __end_of_eaDogM_WriteCommand:
  7510                           	opt callstack 0
  7511                           
  7512 ;; *************** function _send_lcd_cmd_dma *****************
  7513 ;; Defined at:
  7514 ;;		line 187 in file "eadog.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  strPtr          1  [STACK] unsigned char 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1  [STACK] void 
  7521 ;; Registers used:
  7522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 3F/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7532 ;;Total ram usage:        0 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:   12
  7535 ;; This function calls:
  7536 ;;		_printf
  7537 ;;		_ringBufS_flush
  7538 ;;		_start_lcd
  7539 ;;		_wait_lcd_done
  7540 ;;		_wait_lcd_set
  7541 ;; This function is called by:
  7542 ;;		_eaDogM_WriteCommand
  7543 ;;		_eaDogM_WriteStringAtPos
  7544 ;; This function uses a reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text30
  7548  0056E2                     __ptext30:
  7549                           	opt callstack 0
  7550  0056E2                     _send_lcd_cmd_dma:
  7551                           	opt callstack 17
  7552                           
  7553                           ;eadog.c: 187: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 188: {;eadog.c: 189:  wait
      +                          _lcd_set();
  7554                           
  7555                           ; BSR set to: 0
  7556                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7557                           ;incstack = 0
  7558  0056E2  ECDD  F030         	call	_wait_lcd_set	;wreg free
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;eadog.c: 191:  ringBufS_flush(spi_link.tx1a, 0);
  7562  0056E6  0E00               	movlw	0
  7563  0056E8  6EE6               	movwf	postinc1,c
  7564  0056EA  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  7565  0056F0  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  7566  0056F6  EC8C  F029         	call	_ringBufS_flush	;wreg free
  7567  0056FA  92BC               	bcf	16316,1,c	;volatile
  7568  0056FC  94BC               	bcf	16316,2,c	;volatile
  7569                           
  7570                           ;eadog.c: 194:  DMA1CON0bits.EN = 0;
  7571  0056FE  013B               	movlb	59	; () banked
  7572  005700  9FFC               	bcf	252,7,b	;volatile
  7573                           
  7574                           ; BSR set to: 59
  7575                           ;eadog.c: 195:  DMA1SSZ = 1;
  7576  005702  0E00               	movlw	0
  7577  005704  6FF8               	movwf	248,b	;volatile
  7578  005706  0E01               	movlw	1
  7579  005708  6FF7               	movwf	247,b	;volatile
  7580                           
  7581                           ; BSR set to: 59
  7582                           ;eadog.c: 196:  DMA1CON0bits.EN = 1;
  7583  00570A  8FFC               	bsf	252,7,b	;volatile
  7584                           
  7585                           ; BSR set to: 59
  7586                           ;eadog.c: 197:  printf("%c", strPtr);
  7587                           ;stkvar	_strPtr @ sp[(0)+-1]
  7588  00570C  0EFF               	movlw	-1
  7589  00570E  50E3               	movf	plusw1,w,c
  7590  005710  6EE6               	movwf	postinc1,c
  7591  005712  0E00               	movlw	0
  7592  005714  6EE6               	movwf	postinc1,c
  7593  005716  0EB3               	movlw	STR_17& (0+255)
  7594  005718  6EE6               	movwf	postinc1,c
  7595  00571A  0E03               	movlw	3
  7596  00571C  6EE6               	movwf	postinc1,c
  7597  00571E  ECB3  F02A         	call	_printf	;wreg free
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;eadog.c: 198:  start_lcd();
  7601  005722  ECE0  F030         	call	_start_lcd	;wreg free
  7602                           
  7603                           ; BSR set to: 59
  7604                           ;eadog.c: 199:  wait_lcd_done();
  7605  005726  EC1F  F030         	call	_wait_lcd_done	;wreg free
  7606                           
  7607                           ; BSR set to: 0
  7608  00572A  82BC               	bsf	16316,1,c	;volatile
  7609                           
  7610                           ; BSR set to: 0
  7611                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7612  00572C  52E5               	movf	postdec1,f,c
  7613  00572E  0012               	return		;funcret
  7614  005730                     __end_of_send_lcd_cmd_dma:
  7615                           	opt callstack 0
  7616                           
  7617 ;; *************** function _wait_lcd_set *****************
  7618 ;; Defined at:
  7619 ;;		line 114 in file "eadog.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;		None
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;		None
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  1  [STACK] void 
  7626 ;; Registers used:
  7627 ;;		None
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 3F/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7637 ;;Total ram usage:        0 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:    3
  7640 ;; This function calls:
  7641 ;;		Nothing
  7642 ;; This function is called by:
  7643 ;;		_eaDogM_WriteString
  7644 ;;		_send_lcd_cmd_dma
  7645 ;; This function uses a reentrant model
  7646 ;;
  7647                           
  7648                           	psect	text31
  7649  0061BA                     __ptext31:
  7650                           	opt callstack 0
  7651  0061BA                     _wait_lcd_set:
  7652                           	opt callstack 25
  7653                           
  7654                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  7655                           
  7656                           ; BSR set to: 0
  7657                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7658                           ;incstack = 0
  7659  0061BA  0100               	movlb	0	; () banked
  7660  0061BC  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
  7661                           
  7662                           ; BSR set to: 0
  7663                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7664  0061BE  0012               	return		;funcret
  7665  0061C0                     __end_of_wait_lcd_set:
  7666                           	opt callstack 0
  7667                           
  7668 ;; *************** function _wait_lcd_done *****************
  7669 ;; Defined at:
  7670 ;;		line 124 in file "eadog.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;		None
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1  [STACK] void 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7679 ;; Tracked objects:
  7680 ;;		On entry : 4/0
  7681 ;;		On exit  : 3F/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7688 ;;Total ram usage:        0 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    4
  7691 ;; This function calls:
  7692 ;;		_wdtdelay
  7693 ;; This function is called by:
  7694 ;;		_main
  7695 ;;		_send_lcd_cmd_dma
  7696 ;; This function uses a reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text32
  7700  00603E                     __ptext32:
  7701                           	opt callstack 0
  7702  00603E                     _wait_lcd_done:
  7703                           	opt callstack 26
  7704                           
  7705                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  7706                           
  7707                           ; BSR set to: 0
  7708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7709                           ;incstack = 0
  7710  00603E  0100               	movlb	0	; () banked
  7711  006040  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
  7712  006042  D7FD               	goto	_wait_lcd_done
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;eadog.c: 127:  wdtdelay(50);
  7716  006044  0E32               	movlw	50
  7717  006046  6EE6               	movwf	postinc1,c
  7718  006048  0E00               	movlw	0
  7719  00604A  6EE6               	movwf	postinc1,c
  7720  00604C  0E00               	movlw	0
  7721  00604E  6EE6               	movwf	postinc1,c
  7722  006050  0E00               	movlw	0
  7723  006052  6EE6               	movwf	postinc1,c
  7724  006054  EC43  F02B         	call	_wdtdelay	;wreg free
  7725                           
  7726                           ; BSR set to: 0
  7727                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7728  006058  0012               	return		;funcret
  7729  00605A                     __end_of_wait_lcd_done:
  7730                           	opt callstack 0
  7731                           
  7732 ;; *************** function _wdtdelay *****************
  7733 ;; Defined at:
  7734 ;;		line 21 in file "eadog.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  delay           4  [STACK] unsigned long 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1  [STACK] void 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 3F/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7752 ;;Total ram usage:        0 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    3
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		_init_display
  7759 ;;		_send_lcd_cmd
  7760 ;;		_send_lcd_cmd_long
  7761 ;;		_wait_lcd_done
  7762 ;; This function uses a reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text33
  7766  005686                     __ptext33:
  7767                           	opt callstack 0
  7768  005686                     _wdtdelay:
  7769                           	opt callstack 26
  7770                           
  7771                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  7772                           
  7773                           ; BSR set to: 0
  7774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7775                           ;incstack = 0
  7776  005686  0100               	movlb	0	; () banked
  7777  005688  6BEC               	clrf	wdtdelay@dcount& (0+255),b
  7778  00568A  6BED               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7779  00568C  6BEE               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7780  00568E  6BEF               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7781  005690  D009               	goto	l5664
  7782  005692                     l1345:
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;eadog.c: 26:   __nop();
  7786  005692  F000               	nop	
  7787  005694  0004               	clrwdt		;# 
  7788                           
  7789                           ;eadog.c: 28:  };
  7790  005696  0E01               	movlw	1
  7791  005698  0100               	movlb	0	; () banked
  7792  00569A  27EC               	addwf	wdtdelay@dcount& (0+255),f,b
  7793  00569C  0E00               	movlw	0
  7794  00569E  23ED               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7795  0056A0  23EE               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7796  0056A2  23EF               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7797  0056A4                     l5664:
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;stkvar	_delay @ sp[(0)+-4]
  7801  0056A4  0EFC               	movlw	-4
  7802  0056A6  006F FF8C  F03B    	movff	plusw1,btemp
  7803  0056AC  51EC               	movf	wdtdelay@dcount& (0+255),w,b
  7804  0056AE  5C3B               	subwf	btemp,w,c
  7805  0056B0  0EFD               	movlw	-3
  7806  0056B2  006F FF8C  F03B    	movff	plusw1,btemp
  7807  0056B8  51ED               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7808  0056BA  583B               	subwfb	btemp,w,c
  7809  0056BC  0EFE               	movlw	-2
  7810  0056BE  006F FF8C  F03B    	movff	plusw1,btemp
  7811  0056C4  51EE               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7812  0056C6  583B               	subwfb	btemp,w,c
  7813  0056C8  0EFF               	movlw	-1
  7814  0056CA  006F FF8C  F03B    	movff	plusw1,btemp
  7815  0056D0  51EF               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7816  0056D2  583B               	subwfb	btemp,w,c
  7817  0056D4  B0D8               	btfsc	status,0,c
  7818  0056D6  D7DD               	goto	l1345
  7819                           
  7820                           ; BSR set to: 0
  7821                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7822  0056D8  52E5               	movf	postdec1,f,c
  7823  0056DA  52E5               	movf	postdec1,f,c
  7824  0056DC  52E5               	movf	postdec1,f,c
  7825  0056DE  52E5               	movf	postdec1,f,c
  7826  0056E0  0012               	return		;funcret
  7827  0056E2                     __end_of_wdtdelay:
  7828                           	opt callstack 0
  7829                           
  7830 ;; *************** function _start_lcd *****************
  7831 ;; Defined at:
  7832 ;;		line 109 in file "eadog.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1  [STACK] void 
  7839 ;; Registers used:
  7840 ;;		None
  7841 ;; Tracked objects:
  7842 ;;		On entry : 3F/0
  7843 ;;		On exit  : 3F/3B
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7850 ;;Total ram usage:        0 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    3
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		_eaDogM_WriteString
  7857 ;;		_send_lcd_cmd_dma
  7858 ;; This function uses a reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text34
  7862  0061C0                     __ptext34:
  7863                           	opt callstack 0
  7864  0061C0                     _start_lcd:
  7865                           	opt callstack 25
  7866                           
  7867                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  7868                           
  7869                           ; BSR set to: 0
  7870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7871                           ;incstack = 0
  7872  0061C0  013B               	movlb	59	; () banked
  7873  0061C2  8DFC               	bsf	252,6,b	;volatile
  7874                           
  7875                           ; BSR set to: 59
  7876                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7877  0061C4  0012               	return		;funcret
  7878  0061C6                     __end_of_start_lcd:
  7879                           	opt callstack 0
  7880                           
  7881 ;; *************** function _ringBufS_flush *****************
  7882 ;; Defined at:
  7883 ;;		line 76 in file "ringbufs.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7886 ;;		 -> ring_buf1(67), 
  7887 ;;  clearBuffer     1  [STACK] const char 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;		None
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1  [STACK] void 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7894 ;; Tracked objects:
  7895 ;;		On entry : 3F/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7903 ;;Total ram usage:        0 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    4
  7906 ;; This function calls:
  7907 ;;		_memset
  7908 ;; This function is called by:
  7909 ;;		_eaDogM_WriteString
  7910 ;;		_send_lcd_cmd_dma
  7911 ;; This function uses a reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text35
  7915  005318                     __ptext35:
  7916                           	opt callstack 0
  7917  005318                     _ringBufS_flush:
  7918                           	opt callstack 24
  7919                           
  7920                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7921                           ;stkvar	__this @ sp[(0)+-2]
  7922                           
  7923                           ; BSR set to: 59
  7924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7925                           ;incstack = 0
  7926  005318  0EFE               	movlw	-2
  7927  00531A  006F FF8C  F045    	movff	plusw1,btemp+10
  7928  005320  0EFF               	movlw	-1
  7929  005322  006F FF8C  F046    	movff	plusw1,btemp+11
  7930  005328  0E42               	movlw	66
  7931  00532A  2445               	addwf	btemp+10,w,c
  7932  00532C  6ED9               	movwf	fsr2l,c
  7933  00532E  0E00               	movlw	0
  7934  005330  2046               	addwfc	btemp+11,w,c
  7935  005332  6EDA               	movwf	fsr2h,c
  7936  005334  0E00               	movlw	0
  7937  005336  6EDF               	movwf	indf2,c
  7938                           
  7939                           ;ringbufs.c: 79:  _this->head = 0;
  7940                           ;stkvar	__this @ sp[(0)+-2]
  7941  005338  0EFE               	movlw	-2
  7942  00533A  006F FF8C  F045    	movff	plusw1,btemp+10
  7943  005340  0EFF               	movlw	-1
  7944  005342  006F FF8C  F046    	movff	plusw1,btemp+11
  7945  005348  0E40               	movlw	64
  7946  00534A  2445               	addwf	btemp+10,w,c
  7947  00534C  6ED9               	movwf	fsr2l,c
  7948  00534E  0E00               	movlw	0
  7949  005350  2046               	addwfc	btemp+11,w,c
  7950  005352  6EDA               	movwf	fsr2h,c
  7951  005354  0E00               	movlw	0
  7952  005356  6EDF               	movwf	indf2,c
  7953                           
  7954                           ;ringbufs.c: 80:  _this->tail = 0;
  7955                           ;stkvar	__this @ sp[(0)+-2]
  7956  005358  0EFE               	movlw	-2
  7957  00535A  006F FF8C  F045    	movff	plusw1,btemp+10
  7958  005360  0EFF               	movlw	-1
  7959  005362  006F FF8C  F046    	movff	plusw1,btemp+11
  7960  005368  0E41               	movlw	65
  7961  00536A  2445               	addwf	btemp+10,w,c
  7962  00536C  6ED9               	movwf	fsr2l,c
  7963  00536E  0E00               	movlw	0
  7964  005370  2046               	addwfc	btemp+11,w,c
  7965  005372  6EDA               	movwf	fsr2h,c
  7966  005374  0E00               	movlw	0
  7967  005376  6EDF               	movwf	indf2,c
  7968                           
  7969                           ;ringbufs.c: 81:  if (clearBuffer) {
  7970                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7971  005378  0EFD               	movlw	-3
  7972  00537A  50E3               	movf	plusw1,w,c
  7973  00537C  B4D8               	btfsc	status,2,c
  7974  00537E  D011               	goto	l1481
  7975                           
  7976                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7977  005380  0E40               	movlw	64
  7978  005382  6EE6               	movwf	postinc1,c
  7979  005384  0E00               	movlw	0
  7980  005386  6EE6               	movwf	postinc1,c
  7981  005388  0E00               	movlw	0
  7982  00538A  6EE6               	movwf	postinc1,c
  7983  00538C  0E00               	movlw	0
  7984  00538E  6EE6               	movwf	postinc1,c
  7985                           
  7986                           ;stkvar	__this @ sp[(-4)+-2]
  7987  005390  0EFA               	movlw	-6
  7988  005392  006F FF8F FFE6     	movff	plusw1,postinc1
  7989  005398  006F FF8F FFE6     	movff	plusw1,postinc1
  7990  00539E  ECAC  F019         	call	_memset	;wreg free
  7991  0053A2                     l1481:
  7992                           
  7993                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7994  0053A2  52E5               	movf	postdec1,f,c
  7995  0053A4  52E5               	movf	postdec1,f,c
  7996  0053A6  52E5               	movf	postdec1,f,c
  7997  0053A8  0012               	return		;funcret
  7998  0053AA                     __end_of_ringBufS_flush:
  7999                           	opt callstack 0
  8000                           
  8001 ;; *************** function _memset *****************
  8002 ;; Defined at:
  8003 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;  dest            2  [STACK] PTR void 
  8006 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8007 ;;  c               2  [STACK] int 
  8008 ;;  n               2  [STACK] unsigned int 
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;  s               2  [STACK] PTR unsigned char 
  8011 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8012 ;;  k               2  [STACK] unsigned int 
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  2  [STACK] PTR void 
  8015 ;; Registers used:
  8016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8026 ;;Total ram usage:        0 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; Hardware stack levels required when called:    3
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_ringBufS_init
  8033 ;;		_ringBufS_flush
  8034 ;; This function uses a reentrant model
  8035 ;;
  8036                           
  8037                           	psect	text36
  8038  003358                     __ptext36:
  8039                           	opt callstack 0
  8040  003358                     _memset:
  8041                           	opt callstack 0
  8042                           
  8043                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8044  003358  52E6               	movf	postinc1,f,c
  8045  00335A  52E6               	movf	postinc1,f,c
  8046  00335C  52E6               	movf	postinc1,f,c
  8047  00335E  52E6               	movf	postinc1,f,c
  8048                           
  8049                           ;stkvar	_dest @ sp[(-4)+-2]
  8050                           
  8051                           ;incstack = 0
  8052  003360  0EFA               	movlw	-6
  8053  003362  006F FF8C  F045    	movff	plusw1,btemp+10
  8054  003368  0EFB               	movlw	-5
  8055  00336A  006F FF8C  F046    	movff	plusw1,btemp+11
  8056                           
  8057                           ;stkvar	_s @ sp[(-4)+0]
  8058  003370  0EFD               	movlw	-3
  8059  003372  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8060  003378  0EFC               	movlw	-4
  8061  00337A  0060  F117  FFE3   	movff	btemp+10,plusw1
  8062                           
  8063                           ;stkvar	_n @ sp[(-4)+-6]
  8064  003380  0EF6               	movlw	-10
  8065  003382  006F FF8C  F03B    	movff	plusw1,btemp
  8066  003388  0EF7               	movlw	-9
  8067  00338A  50E3               	movf	plusw1,w,c
  8068  00338C  103B               	iorwf	btemp,w,c
  8069  00338E  B4D8               	btfsc	status,2,c
  8070  003390  D154               	goto	u4900
  8071                           
  8072                           ;stkvar	_c @ sp[(-4)+-4]
  8073                           ;stkvar	_s @ sp[(-4)+0]
  8074  003392  0EFC               	movlw	-4
  8075  003394  006F FF8F FFD9     	movff	plusw1,fsr2l
  8076  00339A  0EFD               	movlw	-3
  8077  00339C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8078  0033A2  0EF8               	movlw	-8
  8079  0033A4  006F FF8F FFDF     	movff	plusw1,indf2
  8080                           
  8081                           ;stkvar	_c @ sp[(-4)+-4]
  8082                           ;stkvar	_n @ sp[(-4)+-6]
  8083                           ;stkvar	_s @ sp[(-4)+0]
  8084  0033AA  0EFC               	movlw	-4
  8085  0033AC  006F FF8C  F045    	movff	plusw1,btemp+10
  8086  0033B2  0EFD               	movlw	-3
  8087  0033B4  006F FF8C  F046    	movff	plusw1,btemp+11
  8088  0033BA  0EF6               	movlw	-10
  8089  0033BC  50E3               	movf	plusw1,w,c
  8090  0033BE  2645               	addwf	btemp+10,f,c
  8091  0033C0  0EF7               	movlw	-9
  8092  0033C2  50E3               	movf	plusw1,w,c
  8093  0033C4  2246               	addwfc	btemp+11,f,c
  8094  0033C6  0EFF               	movlw	255
  8095  0033C8  2445               	addwf	btemp+10,w,c
  8096  0033CA  6ED9               	movwf	fsr2l,c
  8097  0033CC  0EFF               	movlw	255
  8098  0033CE  2046               	addwfc	btemp+11,w,c
  8099  0033D0  6EDA               	movwf	fsr2h,c
  8100  0033D2  0EF8               	movlw	-8
  8101  0033D4  006F FF8F FFDF     	movff	plusw1,indf2
  8102                           
  8103                           ;stkvar	_n @ sp[(-4)+-6]
  8104  0033DA  0EF7               	movlw	-9
  8105  0033DC  50E3               	movf	plusw1,w,c
  8106  0033DE  E108               	bnz	l7866
  8107  0033E0  0EF6               	movlw	-10
  8108  0033E2  006F FF8C  F03B    	movff	plusw1,btemp
  8109  0033E8  0E03               	movlw	3
  8110  0033EA  5E3B               	subwf	btemp,f,c
  8111  0033EC  A0D8               	btfss	status,0,c
  8112  0033EE  D125               	goto	u4900
  8113  0033F0                     l7866:
  8114                           
  8115                           ;stkvar	_c @ sp[(-4)+-4]
  8116                           ;stkvar	_s @ sp[(-4)+0]
  8117  0033F0  0EFC               	movlw	-4
  8118  0033F2  006F FF8C  F045    	movff	plusw1,btemp+10
  8119  0033F8  0EFD               	movlw	-3
  8120  0033FA  006F FF8C  F046    	movff	plusw1,btemp+11
  8121  003400  0E01               	movlw	1
  8122  003402  2445               	addwf	btemp+10,w,c
  8123  003404  6ED9               	movwf	fsr2l,c
  8124  003406  0E00               	movlw	0
  8125  003408  2046               	addwfc	btemp+11,w,c
  8126  00340A  6EDA               	movwf	fsr2h,c
  8127  00340C  0EF8               	movlw	-8
  8128  00340E  006F FF8F FFDF     	movff	plusw1,indf2
  8129                           
  8130                           ;stkvar	_c @ sp[(-4)+-4]
  8131                           ;stkvar	_s @ sp[(-4)+0]
  8132  003414  0EFC               	movlw	-4
  8133  003416  006F FF8C  F045    	movff	plusw1,btemp+10
  8134  00341C  0EFD               	movlw	-3
  8135  00341E  006F FF8C  F046    	movff	plusw1,btemp+11
  8136  003424  0E02               	movlw	2
  8137  003426  2445               	addwf	btemp+10,w,c
  8138  003428  6ED9               	movwf	fsr2l,c
  8139  00342A  0E00               	movlw	0
  8140  00342C  2046               	addwfc	btemp+11,w,c
  8141  00342E  6EDA               	movwf	fsr2h,c
  8142  003430  0EF8               	movlw	-8
  8143  003432  006F FF8F FFDF     	movff	plusw1,indf2
  8144                           
  8145                           ;stkvar	_c @ sp[(-4)+-4]
  8146                           ;stkvar	_n @ sp[(-4)+-6]
  8147                           ;stkvar	_s @ sp[(-4)+0]
  8148  003438  0EFC               	movlw	-4
  8149  00343A  006F FF8C  F045    	movff	plusw1,btemp+10
  8150  003440  0EFD               	movlw	-3
  8151  003442  006F FF8C  F046    	movff	plusw1,btemp+11
  8152  003448  0EF6               	movlw	-10
  8153  00344A  50E3               	movf	plusw1,w,c
  8154  00344C  2645               	addwf	btemp+10,f,c
  8155  00344E  0EF7               	movlw	-9
  8156  003450  50E3               	movf	plusw1,w,c
  8157  003452  2246               	addwfc	btemp+11,f,c
  8158  003454  0EFE               	movlw	254
  8159  003456  2445               	addwf	btemp+10,w,c
  8160  003458  6ED9               	movwf	fsr2l,c
  8161  00345A  0EFF               	movlw	255
  8162  00345C  2046               	addwfc	btemp+11,w,c
  8163  00345E  6EDA               	movwf	fsr2h,c
  8164  003460  0EF8               	movlw	-8
  8165  003462  006F FF8F FFDF     	movff	plusw1,indf2
  8166                           
  8167                           ;stkvar	_c @ sp[(-4)+-4]
  8168                           ;stkvar	_n @ sp[(-4)+-6]
  8169                           ;stkvar	_s @ sp[(-4)+0]
  8170  003468  0EFC               	movlw	-4
  8171  00346A  006F FF8C  F045    	movff	plusw1,btemp+10
  8172  003470  0EFD               	movlw	-3
  8173  003472  006F FF8C  F046    	movff	plusw1,btemp+11
  8174  003478  0EF6               	movlw	-10
  8175  00347A  50E3               	movf	plusw1,w,c
  8176  00347C  2645               	addwf	btemp+10,f,c
  8177  00347E  0EF7               	movlw	-9
  8178  003480  50E3               	movf	plusw1,w,c
  8179  003482  2246               	addwfc	btemp+11,f,c
  8180  003484  0EFD               	movlw	253
  8181  003486  2445               	addwf	btemp+10,w,c
  8182  003488  6ED9               	movwf	fsr2l,c
  8183  00348A  0EFF               	movlw	255
  8184  00348C  2046               	addwfc	btemp+11,w,c
  8185  00348E  6EDA               	movwf	fsr2h,c
  8186  003490  0EF8               	movlw	-8
  8187  003492  006F FF8F FFDF     	movff	plusw1,indf2
  8188                           
  8189                           ;stkvar	_n @ sp[(-4)+-6]
  8190  003498  0EF7               	movlw	-9
  8191  00349A  50E3               	movf	plusw1,w,c
  8192  00349C  E108               	bnz	l7872
  8193  00349E  0EF6               	movlw	-10
  8194  0034A0  006F FF8C  F03B    	movff	plusw1,btemp
  8195  0034A6  0E07               	movlw	7
  8196  0034A8  5E3B               	subwf	btemp,f,c
  8197  0034AA  A0D8               	btfss	status,0,c
  8198  0034AC  D0C6               	goto	u4900
  8199  0034AE                     l7872:
  8200                           
  8201                           ;stkvar	_c @ sp[(-4)+-4]
  8202                           ;stkvar	_s @ sp[(-4)+0]
  8203  0034AE  0EFC               	movlw	-4
  8204  0034B0  006F FF8C  F045    	movff	plusw1,btemp+10
  8205  0034B6  0EFD               	movlw	-3
  8206  0034B8  006F FF8C  F046    	movff	plusw1,btemp+11
  8207  0034BE  0E03               	movlw	3
  8208  0034C0  2445               	addwf	btemp+10,w,c
  8209  0034C2  6ED9               	movwf	fsr2l,c
  8210  0034C4  0E00               	movlw	0
  8211  0034C6  2046               	addwfc	btemp+11,w,c
  8212  0034C8  6EDA               	movwf	fsr2h,c
  8213  0034CA  0EF8               	movlw	-8
  8214  0034CC  006F FF8F FFDF     	movff	plusw1,indf2
  8215                           
  8216                           ;stkvar	_c @ sp[(-4)+-4]
  8217                           ;stkvar	_n @ sp[(-4)+-6]
  8218                           ;stkvar	_s @ sp[(-4)+0]
  8219  0034D2  0EFC               	movlw	-4
  8220  0034D4  006F FF8C  F045    	movff	plusw1,btemp+10
  8221  0034DA  0EFD               	movlw	-3
  8222  0034DC  006F FF8C  F046    	movff	plusw1,btemp+11
  8223  0034E2  0EF6               	movlw	-10
  8224  0034E4  50E3               	movf	plusw1,w,c
  8225  0034E6  2645               	addwf	btemp+10,f,c
  8226  0034E8  0EF7               	movlw	-9
  8227  0034EA  50E3               	movf	plusw1,w,c
  8228  0034EC  2246               	addwfc	btemp+11,f,c
  8229  0034EE  0EFC               	movlw	252
  8230  0034F0  2445               	addwf	btemp+10,w,c
  8231  0034F2  6ED9               	movwf	fsr2l,c
  8232  0034F4  0EFF               	movlw	255
  8233  0034F6  2046               	addwfc	btemp+11,w,c
  8234  0034F8  6EDA               	movwf	fsr2h,c
  8235  0034FA  0EF8               	movlw	-8
  8236  0034FC  006F FF8F FFDF     	movff	plusw1,indf2
  8237                           
  8238                           ;stkvar	_n @ sp[(-4)+-6]
  8239  003502  0EF7               	movlw	-9
  8240  003504  50E3               	movf	plusw1,w,c
  8241  003506  E108               	bnz	l7878
  8242  003508  0EF6               	movlw	-10
  8243  00350A  006F FF8C  F03B    	movff	plusw1,btemp
  8244  003510  0E09               	movlw	9
  8245  003512  5E3B               	subwf	btemp,f,c
  8246  003514  A0D8               	btfss	status,0,c
  8247  003516  D091               	goto	u4900
  8248  003518                     l7878:
  8249                           
  8250                           ;stkvar	_s @ sp[(-4)+0]
  8251  003518  0EFC               	movlw	-4
  8252  00351A  006F FF8C  F045    	movff	plusw1,btemp+10
  8253  003520  1E45               	comf	btemp+10,f,c
  8254  003522  0EFD               	movlw	-3
  8255  003524  006F FF8C  F046    	movff	plusw1,btemp+11
  8256  00352A  1E46               	comf	btemp+11,f,c
  8257  00352C  2A45               	incf	btemp+10,f,c
  8258  00352E  B4D8               	btfsc	status,2,c
  8259  003530  2A46               	incf	btemp+11,f,c
  8260  003532  0E03               	movlw	3
  8261  003534  1645               	andwf	btemp+10,f,c
  8262  003536  0E00               	movlw	0
  8263  003538  1646               	andwf	btemp+11,f,c
  8264                           
  8265                           ;stkvar	_k @ sp[(-4)+2]
  8266  00353A  0EFE               	movlw	-2
  8267  00353C  0060  F117  FFE3   	movff	btemp+10,plusw1
  8268  003542  0EFF               	movlw	-1
  8269  003544  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8270                           
  8271                           ;stkvar	_k @ sp[(-4)+2]
  8272                           ;stkvar	_s @ sp[(-4)+0]
  8273  00354A  0EFC               	movlw	-4
  8274  00354C  50E3               	movf	plusw1,w,c
  8275  00354E  6E3B               	movwf	btemp,c
  8276  003550  0EFE               	movlw	-2
  8277  003552  50E3               	movf	plusw1,w,c
  8278  003554  263B               	addwf	btemp,f,c
  8279  003556  0EFC               	movlw	-4
  8280  003558  0060  F0EF  FFE3   	movff	btemp,plusw1
  8281  00355E  0EFD               	movlw	-3
  8282  003560  50E3               	movf	plusw1,w,c
  8283  003562  6E3B               	movwf	btemp,c
  8284  003564  0EFF               	movlw	-1
  8285  003566  50E3               	movf	plusw1,w,c
  8286  003568  223B               	addwfc	btemp,f,c
  8287  00356A  0EFD               	movlw	-3
  8288  00356C  0060  F0EF  FFE3   	movff	btemp,plusw1
  8289                           
  8290                           ;stkvar	_k @ sp[(-4)+2]
  8291                           ;stkvar	_n @ sp[(-4)+-6]
  8292  003572  0EF6               	movlw	-10
  8293  003574  50E3               	movf	plusw1,w,c
  8294  003576  6E3B               	movwf	btemp,c
  8295  003578  0EFE               	movlw	-2
  8296  00357A  50E3               	movf	plusw1,w,c
  8297  00357C  5E3B               	subwf	btemp,f,c
  8298  00357E  0EF6               	movlw	-10
  8299  003580  0060  F0EF  FFE3   	movff	btemp,plusw1
  8300  003586  0EF7               	movlw	-9
  8301  003588  50E3               	movf	plusw1,w,c
  8302  00358A  6E3B               	movwf	btemp,c
  8303  00358C  0EFF               	movlw	-1
  8304  00358E  50E3               	movf	plusw1,w,c
  8305  003590  5A3B               	subwfb	btemp,f,c
  8306  003592  0EF7               	movlw	-9
  8307  003594  0060  F0EF  FFE3   	movff	btemp,plusw1
  8308  00359A  0EFC               	movlw	252
  8309  00359C  6E45               	movwf	btemp+10,c
  8310  00359E  0EFF               	movlw	255
  8311  0035A0  6E46               	movwf	btemp+11,c
  8312                           
  8313                           ;stkvar	_n @ sp[(-4)+-6]
  8314  0035A2  0EF6               	movlw	-10
  8315  0035A4  006F FF8C  F03B    	movff	plusw1,btemp
  8316  0035AA  5045               	movf	btemp+10,w,c
  8317  0035AC  163B               	andwf	btemp,f,c
  8318  0035AE  0EF6               	movlw	-10
  8319  0035B0  0060  F0EF  FFE3   	movff	btemp,plusw1
  8320  0035B6  0EF7               	movlw	-9
  8321  0035B8  006F FF8C  F03B    	movff	plusw1,btemp
  8322  0035BE  5046               	movf	btemp+11,w,c
  8323  0035C0  163B               	andwf	btemp,f,c
  8324  0035C2  0EF7               	movlw	-9
  8325  0035C4  D02E               	goto	L22
  8326  0035C6                     l7886:
  8327                           
  8328                           ;stkvar	_c @ sp[(-4)+-4]
  8329                           ;stkvar	_s @ sp[(-4)+0]
  8330  0035C6  0EFC               	movlw	-4
  8331  0035C8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8332  0035CE  0EFD               	movlw	-3
  8333  0035D0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8334  0035D6  0EF8               	movlw	-8
  8335  0035D8  006F FF8F FFDF     	movff	plusw1,indf2
  8336                           
  8337                           ;stkvar	_n @ sp[(-4)+-6]
  8338  0035DE  0EF6               	movlw	-10
  8339  0035E0  006F FF8C  F03B    	movff	plusw1,btemp
  8340  0035E6  0E01               	movlw	1
  8341  0035E8  5E3B               	subwf	btemp,f,c
  8342  0035EA  0EF6               	movlw	-10
  8343  0035EC  0060  F0EF  FFE3   	movff	btemp,plusw1
  8344  0035F2  0EF7               	movlw	-9
  8345  0035F4  006F FF8C  F03B    	movff	plusw1,btemp
  8346  0035FA  0E00               	movlw	0
  8347  0035FC  5A3B               	subwfb	btemp,f,c
  8348  0035FE  0EF7               	movlw	-9
  8349  003600  0060  F0EF  FFE3   	movff	btemp,plusw1
  8350                           
  8351                           ;stkvar	_s @ sp[(-4)+0]
  8352  003606  0EFC               	movlw	-4
  8353  003608  50E3               	movf	plusw1,w,c
  8354  00360A  0F01               	addlw	1
  8355  00360C  6E3B               	movwf	btemp,c
  8356  00360E  0EFC               	movlw	-4
  8357  003610  0060  F0EF  FFE3   	movff	btemp,plusw1
  8358  003616  6A3B               	clrf	btemp,c
  8359  003618  0EFD               	movlw	-3
  8360  00361A  50E3               	movf	plusw1,w,c
  8361  00361C  203B               	addwfc	btemp,w,c
  8362  00361E  6E3B               	movwf	btemp,c
  8363  003620  0EFD               	movlw	-3
  8364  003622                     L22:
  8365  003622  0060  F0EF  FFE3   	movff	btemp,plusw1
  8366                           
  8367                           ;stkvar	_n @ sp[(-4)+-6]
  8368  003628  0EF6               	movlw	-10
  8369  00362A  006F FF8C  F03B    	movff	plusw1,btemp
  8370  003630  0EF7               	movlw	-9
  8371  003632  50E3               	movf	plusw1,w,c
  8372  003634  103B               	iorwf	btemp,w,c
  8373  003636  A4D8               	btfss	status,2,c
  8374  003638  D7C6               	goto	l7886
  8375  00363A                     u4900:
  8376                           
  8377                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8378  00363A  0EF6               	movlw	246
  8379  00363C  26E1               	addwf	fsr1l,f,c
  8380  00363E  0EFF               	movlw	255
  8381  003640  22E2               	addwfc	fsr1h,f,c
  8382  003642  0012               	return		;funcret
  8383  003644                     __end_of_memset:
  8384                           	opt callstack 0
  8385                           
  8386 ;; *************** function _printf *****************
  8387 ;; Defined at:
  8388 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;  fmt             1  [STACK] PTR const unsigned char 
  8391 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  ap              2  [STACK] PTR void [1]
  8394 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8395 ;;  ret             2    0        int 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  2  [STACK] int 
  8398 ;; Registers used:
  8399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8400 ;; Tracked objects:
  8401 ;;		On entry : 3F/3B
  8402 ;;		On exit  : 3F/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8409 ;;Total ram usage:        0 bytes
  8410 ;; Hardware stack levels used:    1
  8411 ;; Hardware stack levels required when called:   11
  8412 ;; This function calls:
  8413 ;;		_vfprintf
  8414 ;; This function is called by:
  8415 ;;		_eaDogM_WriteString
  8416 ;;		_send_lcd_cmd_dma
  8417 ;; This function uses a reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text37
  8421  005566                     __ptext37:
  8422                           	opt callstack 0
  8423  005566                     _printf:
  8424                           	opt callstack 0
  8425                           
  8426                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8427  005566  52E6               	movf	postinc1,f,c
  8428  005568  52E6               	movf	postinc1,f,c
  8429                           
  8430                           ;stkvar	?_printf @ sp[(-2)+-3]
  8431                           
  8432                           ;incstack = 0
  8433  00556A  0EFB               	movlw	251
  8434  00556C  24E1               	addwf	fsr1l,w,c
  8435  00556E  6E45               	movwf	btemp+10,c
  8436  005570  0EFF               	movlw	255
  8437  005572  20E2               	addwfc	fsr1h,w,c
  8438  005574  6E46               	movwf	btemp+11,c
  8439  005576  0E01               	movlw	1
  8440  005578  2645               	addwf	btemp+10,f,c
  8441  00557A  0E00               	movlw	0
  8442  00557C  2246               	addwfc	btemp+11,f,c
  8443                           
  8444                           ;stkvar	_ap @ sp[(-2)+0]
  8445  00557E  0EFF               	movlw	-1
  8446  005580  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8447  005586  0EFE               	movlw	-2
  8448  005588  0060  F117  FFE3   	movff	btemp+10,plusw1
  8449                           
  8450                           ;stkvar	_ap @ sp[(-2)+0]
  8451  00558E  0EFE               	movlw	254
  8452  005590  24E1               	addwf	fsr1l,w,c
  8453  005592  6E3B               	movwf	btemp,c
  8454  005594  0EFF               	movlw	255
  8455  005596  20E2               	addwfc	fsr1h,w,c
  8456  005598  6E3C               	movwf	btemp+1,c
  8457  00559A  0060  F0EF  FFE6   	movff	btemp,postinc1
  8458  0055A0  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8459                           
  8460                           ;stkvar	_fmt @ sp[(-4)+-2]
  8461  0055A6  0EFA               	movlw	-6
  8462  0055A8  50E3               	movf	plusw1,w,c
  8463  0055AA  6EE6               	movwf	postinc1,c
  8464  0055AC  0E00               	movlw	0
  8465  0055AE  6EE6               	movwf	postinc1,c
  8466  0055B0  0E00               	movlw	0
  8467  0055B2  6EE6               	movwf	postinc1,c
  8468  0055B4  ECF4  F028         	call	_vfprintf	;wreg free
  8469                           
  8470                           ; BSR set to: 0
  8471                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  8472  0055B8  52E5               	movf	postdec1,f,c
  8473  0055BA  52E5               	movf	postdec1,f,c
  8474  0055BC  52E5               	movf	postdec1,f,c
  8475  0055BE  50E7               	movf	indf1,w,c
  8476  0055C0  5EE1               	subwf	fsr1l,f,c
  8477  0055C2  0E00               	movlw	0
  8478  0055C4  5AE2               	subwfb	fsr1h,f,c
  8479  0055C6  0012               	return		;funcret
  8480  0055C8                     __end_of_printf:
  8481                           	opt callstack 0
  8482                           
  8483 ;; *************** function _vfprintf *****************
  8484 ;; Defined at:
  8485 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8488 ;;		 -> f(5), NULL(0), 
  8489 ;;  fmt             1  [STACK] PTR const unsigned char 
  8490 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8491 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  8492 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8493 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8494 ;;		 -> STR_1(17), 
  8495 ;;  ap              2  [STACK] PTR PTR void 
  8496 ;;		 -> ap(2), ap(2), 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;  cfmt            1  [STACK] PTR unsigned char 
  8499 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8500 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  8501 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8502 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8503 ;;		 -> STR_1(17), 
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  2  [STACK] int 
  8506 ;; Registers used:
  8507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 3F/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8517 ;;Total ram usage:        0 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:   10
  8520 ;; This function calls:
  8521 ;;		_vfpfcnvrt
  8522 ;; This function is called by:
  8523 ;;		_sprintf
  8524 ;;		_printf
  8525 ;; This function uses a reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text38
  8529  0051E8                     __ptext38:
  8530                           	opt callstack 0
  8531  0051E8                     _vfprintf:
  8532                           	opt callstack 0
  8533                           
  8534                           ; BSR set to: 0
  8535                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8536  0051E8  52E6               	movf	postinc1,f,c
  8537                           
  8538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8539                           ;stkvar	_fmt @ sp[(-1)+-3]
  8540                           
  8541                           ;incstack = 0
  8542  0051EA  0EFC               	movlw	-4
  8543  0051EC  006F FF8C  F046    	movff	plusw1,btemp+11
  8544                           
  8545                           ;stkvar	_cfmt @ sp[(-1)+0]
  8546  0051F2  0EFF               	movlw	-1
  8547  0051F4  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8548                           
  8549                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8550  0051FA  0100               	movlb	0	; () banked
  8551  0051FC  6BF6               	clrf	_nout& (0+255),b
  8552  0051FE  6BF7               	clrf	(_nout+1)& (0+255),b
  8553                           
  8554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8555  005200  D021               	goto	l7900
  8556  005202                     l7898:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8560                           ;stkvar	_ap @ sp[(-1)+-5]
  8561  005202  0EFA               	movlw	-6
  8562  005204  006F FF8F FFE6     	movff	plusw1,postinc1
  8563  00520A  006F FF8F FFE6     	movff	plusw1,postinc1
  8564                           
  8565                           ;stkvar	_cfmt @ sp[(-3)+0]
  8566  005210  0EFD               	movlw	253
  8567  005212  24E1               	addwf	fsr1l,w,c
  8568  005214  6E3B               	movwf	btemp,c
  8569  005216  0EFF               	movlw	255
  8570  005218  20E2               	addwfc	fsr1h,w,c
  8571  00521A  6E3C               	movwf	btemp+1,c
  8572  00521C  0060  F0EF  FFE6   	movff	btemp,postinc1
  8573  005222  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8574                           
  8575                           ;stkvar	_fp @ sp[(-5)+-2]
  8576  005228  0EF9               	movlw	-7
  8577  00522A  006F FF8F FFE6     	movff	plusw1,postinc1
  8578  005230  006F FF8F FFE6     	movff	plusw1,postinc1
  8579  005236  ECDE  F012         	call	_vfpfcnvrt	;wreg free
  8580  00523A  503B               	movf	btemp,w,c
  8581  00523C  0100               	movlb	0	; () banked
  8582  00523E  27F6               	addwf	_nout& (0+255),f,b
  8583  005240  503C               	movf	btemp+1,w,c
  8584  005242  23F7               	addwfc	(_nout+1)& (0+255),f,b
  8585  005244                     l7900:
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8589                           ;stkvar	_cfmt @ sp[(-1)+0]
  8590  005244  50E1               	movf	fsr1l,w,c
  8591  005246  0FFF               	addlw	-1
  8592  005248  6ED9               	movwf	fsr2l,c
  8593  00524A  50E2               	movf	fsr1h,w,c
  8594  00524C  6EDA               	movwf	fsr2h,c
  8595  00524E  0EFF               	movlw	255
  8596  005250  22DA               	addwfc	fsr2h,f,c
  8597  005252  006F FF7F FFF6     	movff	indf2,tblptrl
  8598  005258                     	if	1	;There is more than 1 active tblptr byte
  8599  005258  0E20               	movlw	high __smallconst
  8600  00525A  6EF7               	movwf	tblptrh,c
  8601  00525C                     	endif
  8602  00525C                     	if	0	;tblptru may be non-zero
  8603  00525C                     	endif
  8604  00525C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8605  00525C  0E00               	movlw	low (__smallconst shr (0+16))
  8606  00525E  6EF8               	movwf	tblptru,c
  8607  005260                     	endif
  8608  005260  0008               	tblrd		*
  8609  005262  50F5               	movf	tablat,w,c
  8610  005264  0900               	iorlw	0
  8611  005266  A4D8               	btfss	status,2,c
  8612  005268  D7CC               	goto	l7898
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8616  00526A  0060  F3D8  F03B   	movff	_nout,btemp
  8617  005270  0060  F3DC  F03C   	movff	_nout+1,btemp+1
  8618                           
  8619                           ; BSR set to: 0
  8620                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  8621  005276  0EFA               	movlw	250
  8622  005278  26E1               	addwf	fsr1l,f,c
  8623  00527A  0EFF               	movlw	255
  8624  00527C  22E2               	addwfc	fsr1h,f,c
  8625  00527E  0012               	return		;funcret
  8626  005280                     __end_of_vfprintf:
  8627                           	opt callstack 0
  8628                           
  8629 ;; *************** function _vfpfcnvrt *****************
  8630 ;; Defined at:
  8631 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8634 ;;		 -> f(5), NULL(0), 
  8635 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8636 ;;		 -> cfmt(1), 
  8637 ;;  ap              2  [STACK] PTR PTR void 
  8638 ;;		 -> ap(2), ap(2), 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  ll              8  [STACK] long long 
  8641 ;;  llu             8    0        unsigned long long 
  8642 ;;  f               4    0        unsigned long long 
  8643 ;;  vp              3    0        PTR void 
  8644 ;;  ct              3    0        unsigned char [3]
  8645 ;;  cp              2  [STACK] PTR unsigned char 
  8646 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(89), 
  8647 ;;  i               2    0        int 
  8648 ;;  done            2    0        int 
  8649 ;;  c               1  [STACK] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  2  [STACK] int 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8663 ;;Total ram usage:        0 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:    9
  8666 ;; This function calls:
  8667 ;;		_ctoa
  8668 ;;		_dtoa
  8669 ;;		_fputc
  8670 ;;		_stoa
  8671 ;;		_strncmp
  8672 ;; This function is called by:
  8673 ;;		_vfprintf
  8674 ;; This function uses a reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text39
  8678  0025BC                     __ptext39:
  8679                           	opt callstack 0
  8680  0025BC                     _vfpfcnvrt:
  8681                           	opt callstack 0
  8682                           
  8683                           ; BSR set to: 0
  8684                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8685  0025BC  0E0B               	movlw	11
  8686  0025BE  26E1               	addwf	fsr1l,f,c
  8687  0025C0  0E00               	movlw	0
  8688  0025C2  22E2               	addwfc	fsr1h,f,c
  8689                           
  8690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8691                           ;stkvar	_fmt @ sp[(-11)+-4]
  8692                           
  8693                           ;incstack = 0
  8694  0025C4  0EF1               	movlw	-15
  8695  0025C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8696  0025CC  0EF2               	movlw	-14
  8697  0025CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8698  0025D4  006F FF7F FFF6     	movff	indf2,tblptrl
  8699  0025DA                     	if	1	;There is more than 1 active tblptr byte
  8700  0025DA  0E20               	movlw	high __smallconst
  8701  0025DC  6EF7               	movwf	tblptrh,c
  8702  0025DE                     	endif
  8703  0025DE                     	if	0	;tblptru may be non-zero
  8704  0025DE                     	endif
  8705  0025DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8706  0025DE  0E00               	movlw	low (__smallconst shr (0+16))
  8707  0025E0  6EF8               	movwf	tblptru,c
  8708  0025E2                     	endif
  8709  0025E2  0008               	tblrd		*
  8710  0025E4  50F5               	movf	tablat,w,c
  8711  0025E6  0A25               	xorlw	37
  8712  0025E8  A4D8               	btfss	status,2,c
  8713  0025EA  D213               	goto	l7844
  8714                           
  8715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8716                           ;stkvar	_fmt @ sp[(-11)+-4]
  8717  0025EC  0EF1               	movlw	-15
  8718  0025EE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8719  0025F4  0EF2               	movlw	-14
  8720  0025F6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8721  0025FC  2ADF               	incf	indf2,f,c
  8722                           
  8723                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8724  0025FE  6A20               	clrf	_width,c
  8725  002600  6A21               	clrf	_width+1,c
  8726  002602  6A24               	clrf	_flags,c
  8727  002604  6A25               	clrf	_flags+1,c
  8728                           
  8729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8730  002606  6822               	setf	_prec,c
  8731  002608  6823               	setf	_prec+1,c
  8732                           
  8733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8734                           ;stkvar	_fmt @ sp[(-11)+-4]
  8735  00260A  0EF1               	movlw	-15
  8736  00260C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8737  002612  0EF2               	movlw	-14
  8738  002614  006F FF8F FFDA     	movff	plusw1,fsr2h
  8739  00261A  006F FF7F FFF6     	movff	indf2,tblptrl
  8740  002620                     	if	1	;There is more than 1 active tblptr byte
  8741  002620  0E20               	movlw	high __smallconst
  8742  002622  6EF7               	movwf	tblptrh,c
  8743  002624                     	endif
  8744  002624                     	if	0	;tblptru may be non-zero
  8745  002624                     	endif
  8746  002624                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8747  002624  0E00               	movlw	low (__smallconst shr (0+16))
  8748  002626  6EF8               	movwf	tblptru,c
  8749  002628                     	endif
  8750  002628  0008               	tblrd		*
  8751  00262A  50F5               	movf	tablat,w,c
  8752  00262C  0A63               	xorlw	99
  8753  00262E  A4D8               	btfss	status,2,c
  8754  002630  D034               	goto	l7794
  8755                           
  8756                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8757                           ;stkvar	_fmt @ sp[(-11)+-4]
  8758  002632  0EF1               	movlw	-15
  8759  002634  006F FF8F FFD9     	movff	plusw1,fsr2l
  8760  00263A  0EF2               	movlw	-14
  8761  00263C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8762  002642  2ADF               	incf	indf2,f,c
  8763                           
  8764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8765                           ;stkvar	_ap @ sp[(-11)+-6]
  8766  002644  0EEF               	movlw	-17
  8767  002646  006F FF8F FFD9     	movff	plusw1,fsr2l
  8768  00264C  0EF0               	movlw	-16
  8769  00264E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8770  002654  0E02               	movlw	2
  8771  002656  5EDE               	subwf	postinc2,f,c
  8772  002658  0E00               	movlw	0
  8773  00265A  5ADD               	subwfb	postdec2,f,c
  8774  00265C  006F FF78  F045    	movff	postinc2,btemp+10
  8775  002662  006F FF74  F046    	movff	postdec2,btemp+11
  8776  002668  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8777  00266E  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8778  002674  50DF               	movf	indf2,w,c
  8779  002676  6E46               	movwf	btemp+11,c
  8780                           
  8781                           ;stkvar	_c @ sp[(-11)+10]
  8782  002678  0EFF               	movlw	-1
  8783  00267A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8784                           
  8785                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8786                           ;stkvar	_c @ sp[(-11)+10]
  8787  002680  0EFF               	movlw	-1
  8788  002682  50E3               	movf	plusw1,w,c
  8789  002684  6EE6               	movwf	postinc1,c
  8790                           
  8791                           ;stkvar	_fp @ sp[(-12)+-2]
  8792  002686  0EF2               	movlw	-14
  8793  002688  006F FF8F FFE6     	movff	plusw1,postinc1
  8794  00268E  006F FF8F FFE6     	movff	plusw1,postinc1
  8795  002694  ECD5  F029         	call	_ctoa	;wreg free
  8796  002698  D1E3               	goto	l1860
  8797  00269A                     l7794:
  8798                           
  8799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8800                           ;stkvar	_fmt @ sp[(-11)+-4]
  8801  00269A  0EF1               	movlw	-15
  8802  00269C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8803  0026A2  0EF2               	movlw	-14
  8804  0026A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8805  0026AA  006F FF7F FFF6     	movff	indf2,tblptrl
  8806  0026B0                     	if	1	;There is more than 1 active tblptr byte
  8807  0026B0  0E20               	movlw	high __smallconst
  8808  0026B2  6EF7               	movwf	tblptrh,c
  8809  0026B4                     	endif
  8810  0026B4                     	if	0	;tblptru may be non-zero
  8811  0026B4                     	endif
  8812  0026B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8813  0026B4  0E00               	movlw	low (__smallconst shr (0+16))
  8814  0026B6  6EF8               	movwf	tblptru,c
  8815  0026B8                     	endif
  8816  0026B8  0008               	tblrd		*
  8817  0026BA  50F5               	movf	tablat,w,c
  8818  0026BC  0A64               	xorlw	100
  8819  0026BE  B4D8               	btfsc	status,2,c
  8820  0026C0  D014               	goto	u4810
  8821                           
  8822                           ;stkvar	_fmt @ sp[(-11)+-4]
  8823  0026C2  0EF1               	movlw	-15
  8824  0026C4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8825  0026CA  0EF2               	movlw	-14
  8826  0026CC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8827  0026D2  006F FF7F FFF6     	movff	indf2,tblptrl
  8828  0026D8                     	if	1	;There is more than 1 active tblptr byte
  8829  0026D8  0E20               	movlw	high __smallconst
  8830  0026DA  6EF7               	movwf	tblptrh,c
  8831  0026DC                     	endif
  8832  0026DC                     	if	0	;tblptru may be non-zero
  8833  0026DC                     	endif
  8834  0026DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8835  0026DC  0E00               	movlw	low (__smallconst shr (0+16))
  8836  0026DE  6EF8               	movwf	tblptru,c
  8837  0026E0                     	endif
  8838  0026E0  0008               	tblrd		*
  8839  0026E2  50F5               	movf	tablat,w,c
  8840  0026E4  0A69               	xorlw	105
  8841  0026E6  A4D8               	btfss	status,2,c
  8842  0026E8  D073               	goto	l7806
  8843  0026EA                     u4810:
  8844                           
  8845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8846                           ;stkvar	_fmt @ sp[(-11)+-4]
  8847  0026EA  0EF1               	movlw	-15
  8848  0026EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8849  0026F2  0EF2               	movlw	-14
  8850  0026F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8851  0026FA  2ADF               	incf	indf2,f,c
  8852                           
  8853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8854                           ;stkvar	_ap @ sp[(-11)+-6]
  8855  0026FC  0EEF               	movlw	-17
  8856  0026FE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8857  002704  0EF0               	movlw	-16
  8858  002706  006F FF8F FFDA     	movff	plusw1,fsr2h
  8859  00270C  0E02               	movlw	2
  8860  00270E  5EDE               	subwf	postinc2,f,c
  8861  002710  0E00               	movlw	0
  8862  002712  5ADD               	subwfb	postdec2,f,c
  8863  002714  006F FF78  F045    	movff	postinc2,btemp+10
  8864  00271A  006F FF74  F046    	movff	postdec2,btemp+11
  8865  002720  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8866  002726  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8867  00272C  006F FF78  F045    	movff	postinc2,btemp+10
  8868  002732  006F FF74  F046    	movff	postdec2,btemp+11
  8869                           
  8870                           ;stkvar	_ll @ sp[(-11)+0]
  8871  002738  0EF5               	movlw	-11
  8872  00273A  0060  F117  FFE3   	movff	btemp+10,plusw1
  8873  002740  0EF6               	movlw	-10
  8874  002742  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8875  002748  6A3B               	clrf	btemp,c
  8876  00274A  BEE3               	btfsc	plusw1,7,c
  8877  00274C  683B               	setf	btemp,c
  8878  00274E  0EF7               	movlw	-9
  8879  002750  0060  F0EF  FFE3   	movff	btemp,plusw1
  8880  002756  0EF8               	movlw	-8
  8881  002758  0060  F0EF  FFE3   	movff	btemp,plusw1
  8882  00275E  0EF9               	movlw	-7
  8883  002760  0060  F0EF  FFE3   	movff	btemp,plusw1
  8884  002766  0EFA               	movlw	-6
  8885  002768  0060  F0EF  FFE3   	movff	btemp,plusw1
  8886  00276E  0EFB               	movlw	-5
  8887  002770  0060  F0EF  FFE3   	movff	btemp,plusw1
  8888  002776  0EFC               	movlw	-4
  8889  002778  0060  F0EF  FFE3   	movff	btemp,plusw1
  8890  00277E                     l7802:
  8891                           
  8892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8893                           ;stkvar	_ll @ sp[(-11)+0]
  8894  00277E  50E1               	movf	fsr1l,w,c
  8895  002780  0FF5               	addlw	-11
  8896  002782  6ED9               	movwf	fsr2l,c
  8897  002784  50E2               	movf	fsr1h,w,c
  8898  002786  6EDA               	movwf	fsr2h,c
  8899  002788  0EFF               	movlw	255
  8900  00278A  22DA               	addwfc	fsr2h,f,c
  8901  00278C  006F FF7B FFE6     	movff	postinc2,postinc1
  8902  002792  006F FF7B FFE6     	movff	postinc2,postinc1
  8903  002798  006F FF7B FFE6     	movff	postinc2,postinc1
  8904  00279E  006F FF7B FFE6     	movff	postinc2,postinc1
  8905  0027A4  006F FF7B FFE6     	movff	postinc2,postinc1
  8906  0027AA  006F FF7B FFE6     	movff	postinc2,postinc1
  8907  0027B0  006F FF7B FFE6     	movff	postinc2,postinc1
  8908  0027B6  006F FF7B FFE6     	movff	postinc2,postinc1
  8909                           
  8910                           ;stkvar	_fp @ sp[(-19)+-2]
  8911  0027BC  0EEB               	movlw	-21
  8912  0027BE  006F FF8F FFE6     	movff	plusw1,postinc1
  8913  0027C4  006F FF8F FFE6     	movff	plusw1,postinc1
  8914  0027CA  EC35  F015         	call	_dtoa	;wreg free
  8915  0027CE  D148               	goto	l1860
  8916  0027D0                     l7806:
  8917                           
  8918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  8919  0027D0  0E02               	movlw	2
  8920  0027D2  6EE6               	movwf	postinc1,c
  8921  0027D4  0E00               	movlw	0
  8922  0027D6  6EE6               	movwf	postinc1,c
  8923  0027D8  0EAD               	movlw	STR_19& (0+255)
  8924  0027DA  6EE6               	movwf	postinc1,c
  8925                           
  8926                           ;stkvar	_fmt @ sp[(-14)+-4]
  8927  0027DC  0EEE               	movlw	-18
  8928  0027DE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8929  0027E4  0EEF               	movlw	-17
  8930  0027E6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8931  0027EC  50DF               	movf	indf2,w,c
  8932  0027EE  6EE6               	movwf	postinc1,c
  8933  0027F0  ECD7  F023         	call	_strncmp	;wreg free
  8934  0027F4  503B               	movf	btemp,w,c
  8935  0027F6  103C               	iorwf	btemp+1,w,c
  8936  0027F8  B4D8               	btfsc	status,2,c
  8937  0027FA  D016               	goto	u4830
  8938  0027FC  0E02               	movlw	2
  8939  0027FE  6EE6               	movwf	postinc1,c
  8940  002800  0E00               	movlw	0
  8941  002802  6EE6               	movwf	postinc1,c
  8942  002804  0EB0               	movlw	STR_23& (0+255)
  8943  002806  6EE6               	movwf	postinc1,c
  8944                           
  8945                           ;stkvar	_fmt @ sp[(-14)+-4]
  8946  002808  0EEE               	movlw	-18
  8947  00280A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8948  002810  0EEF               	movlw	-17
  8949  002812  006F FF8F FFDA     	movff	plusw1,fsr2h
  8950  002818  50DF               	movf	indf2,w,c
  8951  00281A  6EE6               	movwf	postinc1,c
  8952  00281C  ECD7  F023         	call	_strncmp	;wreg free
  8953  002820  503B               	movf	btemp,w,c
  8954  002822  103C               	iorwf	btemp+1,w,c
  8955  002824  A4D8               	btfss	status,2,c
  8956  002826  D067               	goto	l7818
  8957  002828                     u4830:
  8958                           
  8959                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  8960                           ;stkvar	_fmt @ sp[(-11)+-4]
  8961  002828  0EF1               	movlw	-15
  8962  00282A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8963  002830  0EF2               	movlw	-14
  8964  002832  006F FF8F FFDA     	movff	plusw1,fsr2h
  8965  002838  0E02               	movlw	2
  8966  00283A  26DF               	addwf	indf2,f,c
  8967                           
  8968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  8969                           ;stkvar	_ap @ sp[(-11)+-6]
  8970  00283C  0EEF               	movlw	-17
  8971  00283E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8972  002844  0EF0               	movlw	-16
  8973  002846  006F FF8F FFDA     	movff	plusw1,fsr2h
  8974  00284C  0E04               	movlw	4
  8975  00284E  5EDE               	subwf	postinc2,f,c
  8976  002850  0E00               	movlw	0
  8977  002852  5ADD               	subwfb	postdec2,f,c
  8978  002854  006F FF78  F045    	movff	postinc2,btemp+10
  8979  00285A  006F FF74  F046    	movff	postdec2,btemp+11
  8980  002860  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8981  002866  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8982  00286C  006F FF78  F043    	movff	postinc2,btemp+8
  8983  002872  006F FF78  F044    	movff	postinc2,btemp+9
  8984  002878  006F FF78  F045    	movff	postinc2,btemp+10
  8985  00287E  006F FF78  F046    	movff	postinc2,btemp+11
  8986  002884  0060  F10C  F04B   	movff	btemp+8,btemp+16
  8987  00288A  0060  F110  F04C   	movff	btemp+9,btemp+17
  8988  002890  0060  F114  F04D   	movff	btemp+10,btemp+18
  8989  002896  0060  F118  F04E   	movff	btemp+11,btemp+19
  8990  00289C  6A4F               	clrf	btemp+20,c
  8991  00289E  BE4E               	btfsc	btemp+19,7,c
  8992  0028A0  684F               	setf	btemp+20,c
  8993  0028A2  0060  F13C  F050   	movff	btemp+20,btemp+21
  8994  0028A8  0060  F13C  F051   	movff	btemp+20,btemp+22
  8995  0028AE  0060  F13C  F052   	movff	btemp+20,btemp+23
  8996                           
  8997                           ;stkvar	_ll @ sp[(-11)+0]
  8998  0028B4  0EF5               	movlw	-11
  8999  0028B6  0060  F12F  FFE3   	movff	btemp+16,plusw1
  9000  0028BC  0EF6               	movlw	-10
  9001  0028BE  0060  F133  FFE3   	movff	btemp+17,plusw1
  9002  0028C4  0EF7               	movlw	-9
  9003  0028C6  0060  F137  FFE3   	movff	btemp+18,plusw1
  9004  0028CC  0EF8               	movlw	-8
  9005  0028CE  0060  F13B  FFE3   	movff	btemp+19,plusw1
  9006  0028D4  0EF9               	movlw	-7
  9007  0028D6  0060  F13F  FFE3   	movff	btemp+20,plusw1
  9008  0028DC  0EFA               	movlw	-6
  9009  0028DE  0060  F143  FFE3   	movff	btemp+21,plusw1
  9010  0028E4  0EFB               	movlw	-5
  9011  0028E6  0060  F147  FFE3   	movff	btemp+22,plusw1
  9012  0028EC  0EFC               	movlw	-4
  9013  0028EE  0060  F14B  FFE3   	movff	btemp+23,plusw1
  9014  0028F4  D744               	goto	l7802
  9015  0028F6                     l7818:
  9016                           
  9017                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9018                           ;stkvar	_fmt @ sp[(-11)+-4]
  9019  0028F6  0EF1               	movlw	-15
  9020  0028F8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9021  0028FE  0EF2               	movlw	-14
  9022  002900  006F FF8F FFDA     	movff	plusw1,fsr2h
  9023  002906  006F FF7F FFF6     	movff	indf2,tblptrl
  9024  00290C                     	if	1	;There is more than 1 active tblptr byte
  9025  00290C  0E20               	movlw	high __smallconst
  9026  00290E  6EF7               	movwf	tblptrh,c
  9027  002910                     	endif
  9028  002910                     	if	0	;tblptru may be non-zero
  9029  002910                     	endif
  9030  002910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9031  002910  0E00               	movlw	low (__smallconst shr (0+16))
  9032  002912  6EF8               	movwf	tblptru,c
  9033  002914                     	endif
  9034  002914  0008               	tblrd		*
  9035  002916  50F5               	movf	tablat,w,c
  9036  002918  0A73               	xorlw	115
  9037  00291A  A4D8               	btfss	status,2,c
  9038  00291C  D040               	goto	l7828
  9039                           
  9040                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9041                           ;stkvar	_fmt @ sp[(-11)+-4]
  9042  00291E  0EF1               	movlw	-15
  9043  002920  006F FF8F FFD9     	movff	plusw1,fsr2l
  9044  002926  0EF2               	movlw	-14
  9045  002928  006F FF8F FFDA     	movff	plusw1,fsr2h
  9046  00292E  2ADF               	incf	indf2,f,c
  9047                           
  9048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9049                           ;stkvar	_ap @ sp[(-11)+-6]
  9050  002930  0EEF               	movlw	-17
  9051  002932  006F FF8F FFD9     	movff	plusw1,fsr2l
  9052  002938  0EF0               	movlw	-16
  9053  00293A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9054  002940  0E02               	movlw	2
  9055  002942  5EDE               	subwf	postinc2,f,c
  9056  002944  0E00               	movlw	0
  9057  002946  5ADD               	subwfb	postdec2,f,c
  9058  002948  006F FF78  F045    	movff	postinc2,btemp+10
  9059  00294E  006F FF74  F046    	movff	postdec2,btemp+11
  9060  002954  0060  F117  FFD9   	movff	btemp+10,fsr2l
  9061  00295A  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  9062  002960  006F FF78  F045    	movff	postinc2,btemp+10
  9063  002966  006F FF74  F046    	movff	postdec2,btemp+11
  9064                           
  9065                           ;stkvar	_cp @ sp[(-11)+8]
  9066  00296C  0EFE               	movlw	-2
  9067  00296E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9068  002974  0EFD               	movlw	-3
  9069  002976  0060  F117  FFE3   	movff	btemp+10,plusw1
  9070                           
  9071                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9072                           ;stkvar	_cp @ sp[(-11)+8]
  9073  00297C  0EFD               	movlw	-3
  9074  00297E  006F FF8F FFE6     	movff	plusw1,postinc1
  9075  002984  006F FF8F FFE6     	movff	plusw1,postinc1
  9076                           
  9077                           ;stkvar	_fp @ sp[(-13)+-2]
  9078  00298A  0EF1               	movlw	-15
  9079  00298C  006F FF8F FFE6     	movff	plusw1,postinc1
  9080  002992  006F FF8F FFE6     	movff	plusw1,postinc1
  9081  002998  EC8A  F01C         	call	_stoa	;wreg free
  9082  00299C  D061               	goto	l1860
  9083  00299E                     l7828:
  9084                           
  9085                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9086                           ;stkvar	_fmt @ sp[(-11)+-4]
  9087  00299E  0EF1               	movlw	-15
  9088  0029A0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9089  0029A6  0EF2               	movlw	-14
  9090  0029A8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9091  0029AE  006F FF7F FFF6     	movff	indf2,tblptrl
  9092  0029B4                     	if	1	;There is more than 1 active tblptr byte
  9093  0029B4  0E20               	movlw	high __smallconst
  9094  0029B6  6EF7               	movwf	tblptrh,c
  9095  0029B8                     	endif
  9096  0029B8                     	if	0	;tblptru may be non-zero
  9097  0029B8                     	endif
  9098  0029B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9099  0029B8  0E00               	movlw	low (__smallconst shr (0+16))
  9100  0029BA  6EF8               	movwf	tblptru,c
  9101  0029BC                     	endif
  9102  0029BC  0008               	tblrd		*
  9103  0029BE  50F5               	movf	tablat,w,c
  9104  0029C0  0A25               	xorlw	37
  9105  0029C2  A4D8               	btfss	status,2,c
  9106  0029C4  D018               	goto	l7838
  9107                           
  9108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9109                           ;stkvar	_fmt @ sp[(-11)+-4]
  9110  0029C6  0EF1               	movlw	-15
  9111  0029C8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9112  0029CE  0EF2               	movlw	-14
  9113  0029D0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9114  0029D6  2ADF               	incf	indf2,f,c
  9115                           
  9116                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9117                           ;stkvar	_fp @ sp[(-11)+-2]
  9118  0029D8  0EF3               	movlw	-13
  9119  0029DA  006F FF8F FFE6     	movff	plusw1,postinc1
  9120  0029E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9121  0029E6  0E25               	movlw	37
  9122  0029E8  6EE6               	movwf	postinc1,c
  9123  0029EA  0E00               	movlw	0
  9124  0029EC  6EE6               	movwf	postinc1,c
  9125  0029EE  EC29  F025         	call	_fputc	;wreg free
  9126  0029F2                     l7834:
  9127                           
  9128                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9129  0029F2  0E01               	movlw	1
  9130  0029F4  D00A               	goto	L23
  9131  0029F6                     l7838:
  9132                           
  9133                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9134                           ;stkvar	_fmt @ sp[(-11)+-4]
  9135  0029F6  0EF1               	movlw	-15
  9136  0029F8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9137  0029FE  0EF2               	movlw	-14
  9138  002A00  006F FF8F FFDA     	movff	plusw1,fsr2h
  9139  002A06  2ADF               	incf	indf2,f,c
  9140                           
  9141                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9142  002A08  0E00               	movlw	0
  9143  002A0A                     L23:
  9144  002A0A  6E3B               	movwf	btemp,c
  9145  002A0C  0E00               	movlw	0
  9146  002A0E  6E3C               	movwf	btemp+1,c
  9147  002A10  D027               	goto	l1860
  9148  002A12                     l7844:
  9149                           
  9150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9151                           ;stkvar	_fp @ sp[(-11)+-2]
  9152  002A12  0EF3               	movlw	-13
  9153  002A14  006F FF8F FFE6     	movff	plusw1,postinc1
  9154  002A1A  006F FF8F FFE6     	movff	plusw1,postinc1
  9155                           
  9156                           ;stkvar	_fmt @ sp[(-13)+-4]
  9157  002A20  0EEF               	movlw	-17
  9158  002A22  006F FF8F FFD9     	movff	plusw1,fsr2l
  9159  002A28  0EF0               	movlw	-16
  9160  002A2A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9161  002A30  006F FF7F FFF6     	movff	indf2,tblptrl
  9162  002A36                     	if	1	;There is more than 1 active tblptr byte
  9163  002A36  0E20               	movlw	high __smallconst
  9164  002A38  6EF7               	movwf	tblptrh,c
  9165  002A3A                     	endif
  9166  002A3A                     	if	0	;tblptru may be non-zero
  9167  002A3A                     	endif
  9168  002A3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9169  002A3A  0E00               	movlw	low (__smallconst shr (0+16))
  9170  002A3C  6EF8               	movwf	tblptru,c
  9171  002A3E                     	endif
  9172  002A3E  0008               	tblrd		*
  9173  002A40  50F5               	movf	tablat,w,c
  9174  002A42  6EE6               	movwf	postinc1,c
  9175  002A44  0E00               	movlw	0
  9176  002A46  6EE6               	movwf	postinc1,c
  9177  002A48  EC29  F025         	call	_fputc	;wreg free
  9178                           
  9179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9180                           ;stkvar	_fmt @ sp[(-11)+-4]
  9181  002A4C  0EF1               	movlw	-15
  9182  002A4E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9183  002A54  0EF2               	movlw	-14
  9184  002A56  006F FF8F FFDA     	movff	plusw1,fsr2h
  9185  002A5C  2ADF               	incf	indf2,f,c
  9186  002A5E  D7C9               	goto	l7834
  9187  002A60                     l1860:
  9188                           
  9189                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9190  002A60  0EEF               	movlw	239
  9191  002A62  26E1               	addwf	fsr1l,f,c
  9192  002A64  0EFF               	movlw	255
  9193  002A66  22E2               	addwfc	fsr1h,f,c
  9194  002A68  0012               	return		;funcret
  9195  002A6A                     __end_of_vfpfcnvrt:
  9196                           	opt callstack 0
  9197                           
  9198 ;; *************** function _strncmp *****************
  9199 ;; Defined at:
  9200 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  _l              1  [STACK] PTR const unsigned char 
  9203 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9204 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  9205 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  9206 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9207 ;;		 -> STR_1(17), 
  9208 ;;  _r              1  [STACK] PTR const unsigned char 
  9209 ;;		 -> STR_25(3), STR_21(3), 
  9210 ;;  n               2  [STACK] unsigned int 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;  r               1  [STACK] PTR const unsigned char 
  9213 ;;		 -> STR_25(3), STR_21(3), 
  9214 ;;  l               1  [STACK] PTR const unsigned char 
  9215 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9216 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  9217 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  9218 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9219 ;;		 -> STR_1(17), 
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  2  [STACK] int 
  9222 ;; Registers used:
  9223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9233 ;;Total ram usage:        0 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; Hardware stack levels required when called:    3
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_vfpfcnvrt
  9240 ;; This function uses a reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text40
  9244  0047AE                     __ptext40:
  9245                           	opt callstack 0
  9246  0047AE                     _strncmp:
  9247                           	opt callstack 0
  9248                           
  9249                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9250  0047AE  52E6               	movf	postinc1,f,c
  9251  0047B0  52E6               	movf	postinc1,f,c
  9252                           
  9253                           ;stkvar	__l @ sp[(-2)+-1]
  9254                           
  9255                           ;incstack = 0
  9256  0047B2  0EFD               	movlw	-3
  9257  0047B4  006F FF8C  F046    	movff	plusw1,btemp+11
  9258                           
  9259                           ;stkvar	_l @ sp[(-2)+1]
  9260  0047BA  0EFF               	movlw	-1
  9261  0047BC  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9262                           
  9263                           ;stkvar	__r @ sp[(-2)+-2]
  9264  0047C2  0EFC               	movlw	-4
  9265  0047C4  006F FF8C  F046    	movff	plusw1,btemp+11
  9266                           
  9267                           ;stkvar	_r @ sp[(-2)+0]
  9268  0047CA  0EFE               	movlw	-2
  9269  0047CC  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9270                           
  9271                           ;stkvar	_n @ sp[(-2)+-4]
  9272  0047D2  0EFA               	movlw	-6
  9273  0047D4  006F FF8C  F03B    	movff	plusw1,btemp
  9274  0047DA  0E01               	movlw	1
  9275  0047DC  5E3B               	subwf	btemp,f,c
  9276  0047DE  0EFA               	movlw	-6
  9277  0047E0  0060  F0EF  FFE3   	movff	btemp,plusw1
  9278  0047E6  0EFB               	movlw	-5
  9279  0047E8  006F FF8C  F03B    	movff	plusw1,btemp
  9280  0047EE  0E00               	movlw	0
  9281  0047F0  5A3B               	subwfb	btemp,f,c
  9282  0047F2  0EFB               	movlw	-5
  9283  0047F4  0060  F0EF  FFE3   	movff	btemp,plusw1
  9284  0047FA  0EFA               	movlw	-6
  9285  0047FC  28E3               	incf	plusw1,w,c
  9286  0047FE  E121               	bnz	l5572
  9287  004800  0EFB               	movlw	-5
  9288  004802  28E3               	incf	plusw1,w,c
  9289  004804  A4D8               	btfss	status,2,c
  9290  004806  D01D               	goto	l5572
  9291  004808  0E00               	movlw	0
  9292  00480A  6E3B               	movwf	btemp,c
  9293  00480C  0E00               	movlw	0
  9294  00480E  6E3C               	movwf	btemp+1,c
  9295  004810  D091               	goto	l2609
  9296  004812                     l5568:
  9297                           
  9298                           ;stkvar	_l @ sp[(-2)+1]
  9299  004812  0EFF               	movlw	-1
  9300  004814  2AE3               	incf	plusw1,f,c
  9301                           
  9302                           ;stkvar	_r @ sp[(-2)+0]
  9303  004816  0EFE               	movlw	-2
  9304  004818  2AE3               	incf	plusw1,f,c
  9305                           
  9306                           ;stkvar	_n @ sp[(-2)+-4]
  9307  00481A  0EFA               	movlw	-6
  9308  00481C  006F FF8C  F03B    	movff	plusw1,btemp
  9309  004822  0E01               	movlw	1
  9310  004824  5E3B               	subwf	btemp,f,c
  9311  004826  0EFA               	movlw	-6
  9312  004828  0060  F0EF  FFE3   	movff	btemp,plusw1
  9313  00482E  0EFB               	movlw	-5
  9314  004830  006F FF8C  F03B    	movff	plusw1,btemp
  9315  004836  0E00               	movlw	0
  9316  004838  5A3B               	subwfb	btemp,f,c
  9317  00483A  0EFB               	movlw	-5
  9318  00483C  0060  F0EF  FFE3   	movff	btemp,plusw1
  9319  004842                     l5572:
  9320                           
  9321                           ;stkvar	_l @ sp[(-2)+1]
  9322  004842  50E1               	movf	fsr1l,w,c
  9323  004844  0FFF               	addlw	-1
  9324  004846  6ED9               	movwf	fsr2l,c
  9325  004848  50E2               	movf	fsr1h,w,c
  9326  00484A  6EDA               	movwf	fsr2h,c
  9327  00484C  0EFF               	movlw	255
  9328  00484E  22DA               	addwfc	fsr2h,f,c
  9329  004850  006F FF7F FFF6     	movff	indf2,tblptrl
  9330  004856                     	if	1	;There is more than 1 active tblptr byte
  9331  004856  0E20               	movlw	high __smallconst
  9332  004858  6EF7               	movwf	tblptrh,c
  9333  00485A                     	endif
  9334  00485A                     	if	0	;tblptru may be non-zero
  9335  00485A                     	endif
  9336  00485A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9337  00485A  0E00               	movlw	low (__smallconst shr (0+16))
  9338  00485C  6EF8               	movwf	tblptru,c
  9339  00485E                     	endif
  9340  00485E  0008               	tblrd		*
  9341  004860  50F5               	movf	tablat,w,c
  9342  004862  0900               	iorlw	0
  9343  004864  B4D8               	btfsc	status,2,c
  9344  004866  D041               	goto	u2950
  9345                           
  9346                           ;stkvar	_r @ sp[(-2)+0]
  9347  004868  50E1               	movf	fsr1l,w,c
  9348  00486A  0FFE               	addlw	-2
  9349  00486C  6ED9               	movwf	fsr2l,c
  9350  00486E  50E2               	movf	fsr1h,w,c
  9351  004870  6EDA               	movwf	fsr2h,c
  9352  004872  0EFF               	movlw	255
  9353  004874  22DA               	addwfc	fsr2h,f,c
  9354  004876  006F FF7F FFF6     	movff	indf2,tblptrl
  9355  00487C                     	if	1	;There is more than 1 active tblptr byte
  9356  00487C  0E20               	movlw	high __smallconst
  9357  00487E  6EF7               	movwf	tblptrh,c
  9358  004880                     	endif
  9359  004880                     	if	0	;tblptru may be non-zero
  9360  004880                     	endif
  9361  004880                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9362  004880  0E00               	movlw	low (__smallconst shr (0+16))
  9363  004882  6EF8               	movwf	tblptru,c
  9364  004884                     	endif
  9365  004884  0008               	tblrd		*
  9366  004886  50F5               	movf	tablat,w,c
  9367  004888  0900               	iorlw	0
  9368  00488A  B4D8               	btfsc	status,2,c
  9369  00488C  D02E               	goto	u2950
  9370                           
  9371                           ;stkvar	_n @ sp[(-2)+-4]
  9372  00488E  0EFA               	movlw	-6
  9373  004890  006F FF8C  F03B    	movff	plusw1,btemp
  9374  004896  0EFB               	movlw	-5
  9375  004898  50E3               	movf	plusw1,w,c
  9376  00489A  103B               	iorwf	btemp,w,c
  9377  00489C  B4D8               	btfsc	status,2,c
  9378  00489E  D025               	goto	u2950
  9379                           
  9380                           ;stkvar	_l @ sp[(-2)+1]
  9381  0048A0  50E1               	movf	fsr1l,w,c
  9382  0048A2  0FFF               	addlw	-1
  9383  0048A4  6ED9               	movwf	fsr2l,c
  9384  0048A6  50E2               	movf	fsr1h,w,c
  9385  0048A8  6EDA               	movwf	fsr2h,c
  9386  0048AA  0EFF               	movlw	255
  9387  0048AC  22DA               	addwfc	fsr2h,f,c
  9388  0048AE  006F FF7F FFF6     	movff	indf2,tblptrl
  9389  0048B4                     	if	1	;There is more than 1 active tblptr byte
  9390  0048B4  0E20               	movlw	high __smallconst
  9391  0048B6  6EF7               	movwf	tblptrh,c
  9392  0048B8                     	endif
  9393  0048B8                     	if	0	;tblptru may be non-zero
  9394  0048B8                     	endif
  9395  0048B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9396  0048B8  0E00               	movlw	low (__smallconst shr (0+16))
  9397  0048BA  6EF8               	movwf	tblptru,c
  9398  0048BC                     	endif
  9399  0048BC  0008               	tblrd		*
  9400  0048BE  006F FFD4  F046    	movff	tablat,btemp+11
  9401                           
  9402                           ;stkvar	_r @ sp[(-2)+0]
  9403  0048C4  50E1               	movf	fsr1l,w,c
  9404  0048C6  0FFE               	addlw	-2
  9405  0048C8  6ED9               	movwf	fsr2l,c
  9406  0048CA  50E2               	movf	fsr1h,w,c
  9407  0048CC  6EDA               	movwf	fsr2h,c
  9408  0048CE  0EFF               	movlw	255
  9409  0048D0  22DA               	addwfc	fsr2h,f,c
  9410  0048D2  006F FF7F FFF6     	movff	indf2,tblptrl
  9411  0048D8                     	if	1	;There is more than 1 active tblptr byte
  9412  0048D8  0E20               	movlw	high __smallconst
  9413  0048DA  6EF7               	movwf	tblptrh,c
  9414  0048DC                     	endif
  9415  0048DC                     	if	0	;tblptru may be non-zero
  9416  0048DC                     	endif
  9417  0048DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9418  0048DC  0E00               	movlw	low (__smallconst shr (0+16))
  9419  0048DE  6EF8               	movwf	tblptru,c
  9420  0048E0                     	endif
  9421  0048E0  0008               	tblrd		*
  9422  0048E2  50F5               	movf	tablat,w,c
  9423  0048E4  1846               	xorwf	btemp+11,w,c
  9424  0048E6  B4D8               	btfsc	status,2,c
  9425  0048E8  D794               	goto	l5568
  9426  0048EA                     u2950:
  9427                           
  9428                           ;stkvar	_l @ sp[(-2)+1]
  9429  0048EA  50E1               	movf	fsr1l,w,c
  9430  0048EC  0FFF               	addlw	-1
  9431  0048EE  6ED9               	movwf	fsr2l,c
  9432  0048F0  50E2               	movf	fsr1h,w,c
  9433  0048F2  6EDA               	movwf	fsr2h,c
  9434  0048F4  0EFF               	movlw	255
  9435  0048F6  22DA               	addwfc	fsr2h,f,c
  9436  0048F8  006F FF7F FFF6     	movff	indf2,tblptrl
  9437  0048FE                     	if	1	;There is more than 1 active tblptr byte
  9438  0048FE  0E20               	movlw	high __smallconst
  9439  004900  6EF7               	movwf	tblptrh,c
  9440  004902                     	endif
  9441  004902                     	if	0	;tblptru may be non-zero
  9442  004902                     	endif
  9443  004902                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9444  004902  0E00               	movlw	low (__smallconst shr (0+16))
  9445  004904  6EF8               	movwf	tblptru,c
  9446  004906                     	endif
  9447  004906  0008               	tblrd		*
  9448  004908  50F5               	movf	tablat,w,c
  9449  00490A  6E3B               	movwf	btemp,c
  9450  00490C  6A3C               	clrf	btemp+1,c
  9451                           
  9452                           ;stkvar	_r @ sp[(-2)+0]
  9453  00490E  50E1               	movf	fsr1l,w,c
  9454  004910  0FFE               	addlw	-2
  9455  004912  6ED9               	movwf	fsr2l,c
  9456  004914  50E2               	movf	fsr1h,w,c
  9457  004916  6EDA               	movwf	fsr2h,c
  9458  004918  0EFF               	movlw	255
  9459  00491A  22DA               	addwfc	fsr2h,f,c
  9460  00491C  006F FF7F FFF6     	movff	indf2,tblptrl
  9461  004922                     	if	1	;There is more than 1 active tblptr byte
  9462  004922  0E20               	movlw	high __smallconst
  9463  004924  6EF7               	movwf	tblptrh,c
  9464  004926                     	endif
  9465  004926                     	if	0	;tblptru may be non-zero
  9466  004926                     	endif
  9467  004926                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9468  004926  0E00               	movlw	low (__smallconst shr (0+16))
  9469  004928  6EF8               	movwf	tblptru,c
  9470  00492A                     	endif
  9471  00492A  0008               	tblrd		*
  9472  00492C  50F5               	movf	tablat,w,c
  9473  00492E  5E3B               	subwf	btemp,f,c
  9474  004930  0E00               	movlw	0
  9475  004932  5A3C               	subwfb	btemp+1,f,c
  9476  004934                     l2609:
  9477                           
  9478                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  9479  004934  0EFA               	movlw	250
  9480  004936  26E1               	addwf	fsr1l,f,c
  9481  004938  0EFF               	movlw	255
  9482  00493A  22E2               	addwfc	fsr1h,f,c
  9483  00493C  0012               	return		;funcret
  9484  00493E                     __end_of_strncmp:
  9485                           	opt callstack 0
  9486                           
  9487 ;; *************** function _stoa *****************
  9488 ;; Defined at:
  9489 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9492 ;;		 -> f(5), NULL(0), 
  9493 ;;  s               2  [STACK] PTR unsigned char 
  9494 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(89), 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  nuls            7  [STACK] unsigned char [7]
  9497 ;;  l               2  [STACK] int 
  9498 ;;  p               2  [STACK] int 
  9499 ;;  cp              2  [STACK] PTR unsigned char 
  9500 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
  9501 ;;		 -> V(89), 
  9502 ;;  w               2  [STACK] int 
  9503 ;;  i               2  [STACK] int 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  2  [STACK] int 
  9506 ;; Registers used:
  9507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9517 ;;Total ram usage:        0 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    6
  9520 ;; This function calls:
  9521 ;;		_fputc
  9522 ;;		_strlen
  9523 ;; This function is called by:
  9524 ;;		_vfpfcnvrt
  9525 ;; This function uses a reentrant model
  9526 ;;
  9527                           
  9528                           	psect	text41
  9529  003914                     __ptext41:
  9530                           	opt callstack 0
  9531  003914                     _stoa:
  9532                           	opt callstack 0
  9533                           
  9534                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9535  003914  0E11               	movlw	17
  9536  003916  26E1               	addwf	fsr1l,f,c
  9537  003918  0E00               	movlw	0
  9538  00391A  22E2               	addwfc	fsr1h,f,c
  9539                           
  9540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9541                           
  9542                           ;incstack = 0
  9543  00391C  EE20  F060         	lfsr	2,stoa@F1142
  9544                           
  9545                           ;stkvar	_nuls @ sp[(-17)+0]
  9546  003920  0E07               	movlw	7
  9547  003922  6E3B               	movwf	btemp,c
  9548  003924  0EEF               	movlw	-17
  9549  003926                     us468999:
  9550  003926  006F FF7B FFE3     	movff	postinc2,plusw1
  9551  00392C  28E8               	incf	wreg,w,c
  9552  00392E  2E3B               	decfsz	btemp,f,c
  9553  003930  D7FA               	bra	us468999
  9554                           
  9555                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9556                           ;stkvar	_s @ sp[(-17)+-4]
  9557  003932  0EEB               	movlw	-21
  9558  003934  006F FF8C  F045    	movff	plusw1,btemp+10
  9559  00393A  0EEC               	movlw	-20
  9560  00393C  006F FF8C  F046    	movff	plusw1,btemp+11
  9561                           
  9562                           ;stkvar	_cp @ sp[(-17)+11]
  9563  003942  0EFB               	movlw	-5
  9564  003944  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9565  00394A  0EFA               	movlw	-6
  9566  00394C  0060  F117  FFE3   	movff	btemp+10,plusw1
  9567                           
  9568                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9569                           ;stkvar	_cp @ sp[(-17)+11]
  9570  003952  0EFA               	movlw	-6
  9571  003954  006F FF8C  F03B    	movff	plusw1,btemp
  9572  00395A  0EFB               	movlw	-5
  9573  00395C  50E3               	movf	plusw1,w,c
  9574  00395E  103B               	iorwf	btemp,w,c
  9575  003960  A4D8               	btfss	status,2,c
  9576  003962  D00E               	goto	l7732
  9577                           
  9578                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9579                           ;stkvar	_nuls @ sp[(-17)+0]
  9580  003964  0EEF               	movlw	239
  9581  003966  24E1               	addwf	fsr1l,w,c
  9582  003968  6E45               	movwf	btemp+10,c
  9583  00396A  0EFF               	movlw	255
  9584  00396C  20E2               	addwfc	fsr1h,w,c
  9585  00396E  6E46               	movwf	btemp+11,c
  9586                           
  9587                           ;stkvar	_cp @ sp[(-17)+11]
  9588  003970  0EFB               	movlw	-5
  9589  003972  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9590  003978  0EFA               	movlw	-6
  9591  00397A  0060  F117  FFE3   	movff	btemp+10,plusw1
  9592  003980                     l7732:
  9593                           
  9594                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9595                           ;stkvar	_cp @ sp[(-17)+11]
  9596  003980  0EFA               	movlw	-6
  9597  003982  006F FF8F FFE6     	movff	plusw1,postinc1
  9598  003988  006F FF8F FFE6     	movff	plusw1,postinc1
  9599  00398E  EC06  F028         	call	_strlen	;wreg free
  9600                           
  9601                           ;stkvar	_l @ sp[(-17)+7]
  9602  003992  0EF6               	movlw	-10
  9603  003994  0060  F0EF  FFE3   	movff	btemp,plusw1
  9604  00399A  0EF7               	movlw	-9
  9605  00399C  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  9606                           
  9607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9608                           ;stkvar	_p @ sp[(-17)+9]
  9609  0039A2  0EF8               	movlw	-8
  9610  0039A4  0060  F08B  FFE3   	movff	_prec,plusw1
  9611  0039AA  0EF9               	movlw	-7
  9612  0039AC  0060  F08F  FFE3   	movff	_prec+1,plusw1
  9613                           
  9614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9615                           ;stkvar	_p @ sp[(-17)+9]
  9616  0039B2  0EF9               	movlw	-7
  9617  0039B4  BEE3               	btfsc	plusw1,7,c
  9618  0039B6  D023               	goto	l1841
  9619                           
  9620                           ;stkvar	_l @ sp[(-17)+7]
  9621                           ;stkvar	_p @ sp[(-17)+9]
  9622  0039B8  50E1               	movf	fsr1l,w,c
  9623  0039BA  0FF8               	addlw	-8
  9624  0039BC  6ED9               	movwf	fsr2l,c
  9625  0039BE  50E2               	movf	fsr1h,w,c
  9626  0039C0  6EDA               	movwf	fsr2h,c
  9627  0039C2  0EFF               	movlw	255
  9628  0039C4  22DA               	addwfc	fsr2h,f,c
  9629  0039C6  0EF6               	movlw	-10
  9630  0039C8  50E3               	movf	plusw1,w,c
  9631  0039CA  5CDE               	subwf	postinc2,w,c
  9632  0039CC  50DE               	movf	postinc2,w,c
  9633  0039CE  0A80               	xorlw	128
  9634  0039D0  6E3B               	movwf	btemp,c
  9635  0039D2  0EF7               	movlw	-9
  9636  0039D4  50E3               	movf	plusw1,w,c
  9637  0039D6  0A80               	xorlw	128
  9638  0039D8  583B               	subwfb	btemp,w,c
  9639  0039DA  B0D8               	btfsc	status,0,c
  9640  0039DC  D010               	goto	l1841
  9641                           
  9642                           ;stkvar	_p @ sp[(-17)+9]
  9643                           ;stkvar	_l @ sp[(-17)+7]
  9644  0039DE  0EF8               	movlw	-8
  9645  0039E0  006F FF8C  F03B    	movff	plusw1,btemp
  9646  0039E6  0EF6               	movlw	-10
  9647  0039E8  0060  F0EF  FFE3   	movff	btemp,plusw1
  9648  0039EE  0EF9               	movlw	-7
  9649  0039F0  006F FF8C  F03B    	movff	plusw1,btemp
  9650  0039F6  0EF7               	movlw	-9
  9651  0039F8  0060  F0EF  FFE3   	movff	btemp,plusw1
  9652  0039FE                     l1841:
  9653                           
  9654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9655                           ;stkvar	_l @ sp[(-17)+7]
  9656                           ;stkvar	_p @ sp[(-17)+9]
  9657  0039FE  0EF6               	movlw	-10
  9658  003A00  006F FF8C  F03B    	movff	plusw1,btemp
  9659  003A06  0EF8               	movlw	-8
  9660  003A08  0060  F0EF  FFE3   	movff	btemp,plusw1
  9661  003A0E  0EF7               	movlw	-9
  9662  003A10  006F FF8C  F03B    	movff	plusw1,btemp
  9663  003A16  0EF9               	movlw	-7
  9664  003A18  0060  F0EF  FFE3   	movff	btemp,plusw1
  9665                           
  9666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9667                           ;stkvar	_w @ sp[(-17)+13]
  9668  003A1E  0EFC               	movlw	-4
  9669  003A20  0060  F083  FFE3   	movff	_width,plusw1
  9670  003A26  0EFD               	movlw	-3
  9671  003A28  0060  F087  FFE3   	movff	_width+1,plusw1
  9672                           
  9673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9674  003A2E  A024               	btfss	_flags,0,c
  9675  003A30  D01F               	goto	l7752
  9676  003A32  D031               	goto	u4730
  9677  003A34                     l7748:
  9678                           
  9679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9680                           ;stkvar	_fp @ sp[(-17)+-2]
  9681  003A34  0EED               	movlw	-19
  9682  003A36  006F FF8F FFE6     	movff	plusw1,postinc1
  9683  003A3C  006F FF8F FFE6     	movff	plusw1,postinc1
  9684  003A42  0E20               	movlw	32
  9685  003A44  6EE6               	movwf	postinc1,c
  9686  003A46  0E00               	movlw	0
  9687  003A48  6EE6               	movwf	postinc1,c
  9688  003A4A  EC29  F025         	call	_fputc	;wreg free
  9689                           
  9690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9691                           ;stkvar	_l @ sp[(-17)+7]
  9692  003A4E  0EF6               	movlw	-10
  9693  003A50  50E3               	movf	plusw1,w,c
  9694  003A52  0F01               	addlw	1
  9695  003A54  6E3B               	movwf	btemp,c
  9696  003A56  0EF6               	movlw	-10
  9697  003A58  0060  F0EF  FFE3   	movff	btemp,plusw1
  9698  003A5E  6A3B               	clrf	btemp,c
  9699  003A60  0EF7               	movlw	-9
  9700  003A62  50E3               	movf	plusw1,w,c
  9701  003A64  203B               	addwfc	btemp,w,c
  9702  003A66  6E3B               	movwf	btemp,c
  9703  003A68  0EF7               	movlw	-9
  9704  003A6A  0060  F0EF  FFE3   	movff	btemp,plusw1
  9705  003A70                     l7752:
  9706                           
  9707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9708                           ;stkvar	_w @ sp[(-17)+13]
  9709                           ;stkvar	_l @ sp[(-17)+7]
  9710  003A70  50E1               	movf	fsr1l,w,c
  9711  003A72  0FF6               	addlw	-10
  9712  003A74  6ED9               	movwf	fsr2l,c
  9713  003A76  50E2               	movf	fsr1h,w,c
  9714  003A78  6EDA               	movwf	fsr2h,c
  9715  003A7A  0EFF               	movlw	255
  9716  003A7C  22DA               	addwfc	fsr2h,f,c
  9717  003A7E  0EFC               	movlw	-4
  9718  003A80  50E3               	movf	plusw1,w,c
  9719  003A82  5CDE               	subwf	postinc2,w,c
  9720  003A84  50DE               	movf	postinc2,w,c
  9721  003A86  0A80               	xorlw	128
  9722  003A88  6E3B               	movwf	btemp,c
  9723  003A8A  0EFD               	movlw	-3
  9724  003A8C  50E3               	movf	plusw1,w,c
  9725  003A8E  0A80               	xorlw	128
  9726  003A90  583B               	subwfb	btemp,w,c
  9727  003A92  A0D8               	btfss	status,0,c
  9728  003A94  D7CF               	goto	l7748
  9729  003A96                     u4730:
  9730                           
  9731                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9732                           ;stkvar	_i @ sp[(-17)+15]
  9733  003A96  0EFE               	movlw	-2
  9734  003A98  6AE3               	clrf	plusw1,c
  9735  003A9A  0EFF               	movlw	-1
  9736  003A9C  6AE3               	clrf	plusw1,c
  9737                           
  9738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9739  003A9E  D045               	goto	l7762
  9740  003AA0                     l7756:
  9741                           
  9742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9743                           ;stkvar	_fp @ sp[(-17)+-2]
  9744  003AA0  0EED               	movlw	-19
  9745  003AA2  006F FF8F FFE6     	movff	plusw1,postinc1
  9746  003AA8  006F FF8F FFE6     	movff	plusw1,postinc1
  9747                           
  9748                           ;stkvar	_cp @ sp[(-19)+11]
  9749  003AAE  0EF8               	movlw	-8
  9750  003AB0  006F FF8F FFF6     	movff	plusw1,tblptrl
  9751  003AB6  0EF9               	movlw	-7
  9752  003AB8  006F FF8F FFF7     	movff	plusw1,tblptrh
  9753  003ABE  0E00               	movlw	low (__smallconst shr (0+16))
  9754  003AC0  6EF8               	movwf	tblptru,c
  9755  003AC2  0E1F               	movlw	(high __ramtop+-1)
  9756  003AC4  64F7               	cpfsgt	tblptrh,c
  9757  003AC6  D003               	bra	u4747
  9758  003AC8  0008               	tblrd		*
  9759  003ACA  50F5               	movf	tablat,w,c
  9760  003ACC  D007               	bra	u4740
  9761  003ACE                     u4747:
  9762  003ACE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9763  003AD4  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9764  003ADA  50EF               	movf	indf0,w,c
  9765  003ADC                     u4740:
  9766  003ADC  6EE6               	movwf	postinc1,c
  9767  003ADE  0E00               	movlw	0
  9768  003AE0  6EE6               	movwf	postinc1,c
  9769  003AE2  EC29  F025         	call	_fputc	;wreg free
  9770                           
  9771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9772                           ;stkvar	_cp @ sp[(-17)+11]
  9773  003AE6  0EFA               	movlw	-6
  9774  003AE8  50E3               	movf	plusw1,w,c
  9775  003AEA  0F01               	addlw	1
  9776  003AEC  6E3B               	movwf	btemp,c
  9777  003AEE  0EFA               	movlw	-6
  9778  003AF0  0060  F0EF  FFE3   	movff	btemp,plusw1
  9779  003AF6  6A3B               	clrf	btemp,c
  9780  003AF8  0EFB               	movlw	-5
  9781  003AFA  50E3               	movf	plusw1,w,c
  9782  003AFC  203B               	addwfc	btemp,w,c
  9783  003AFE  6E3B               	movwf	btemp,c
  9784  003B00  0EFB               	movlw	-5
  9785  003B02  0060  F0EF  FFE3   	movff	btemp,plusw1
  9786                           
  9787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9788                           ;stkvar	_i @ sp[(-17)+15]
  9789  003B08  0EFE               	movlw	-2
  9790  003B0A  50E3               	movf	plusw1,w,c
  9791  003B0C  0F01               	addlw	1
  9792  003B0E  6E3B               	movwf	btemp,c
  9793  003B10  0EFE               	movlw	-2
  9794  003B12  0060  F0EF  FFE3   	movff	btemp,plusw1
  9795  003B18  6A3B               	clrf	btemp,c
  9796  003B1A  0EFF               	movlw	-1
  9797  003B1C  50E3               	movf	plusw1,w,c
  9798  003B1E  203B               	addwfc	btemp,w,c
  9799  003B20  6E3B               	movwf	btemp,c
  9800  003B22  0EFF               	movlw	-1
  9801  003B24  0060  F0EF  FFE3   	movff	btemp,plusw1
  9802  003B2A                     l7762:
  9803                           
  9804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9805                           ;stkvar	_p @ sp[(-17)+9]
  9806                           ;stkvar	_i @ sp[(-17)+15]
  9807  003B2A  50E1               	movf	fsr1l,w,c
  9808  003B2C  0FFE               	addlw	-2
  9809  003B2E  6ED9               	movwf	fsr2l,c
  9810  003B30  50E2               	movf	fsr1h,w,c
  9811  003B32  6EDA               	movwf	fsr2h,c
  9812  003B34  0EFF               	movlw	255
  9813  003B36  22DA               	addwfc	fsr2h,f,c
  9814  003B38  0EF8               	movlw	-8
  9815  003B3A  50E3               	movf	plusw1,w,c
  9816  003B3C  5CDE               	subwf	postinc2,w,c
  9817  003B3E  50DE               	movf	postinc2,w,c
  9818  003B40  0A80               	xorlw	128
  9819  003B42  6E3B               	movwf	btemp,c
  9820  003B44  0EF9               	movlw	-7
  9821  003B46  50E3               	movf	plusw1,w,c
  9822  003B48  0A80               	xorlw	128
  9823  003B4A  583B               	subwfb	btemp,w,c
  9824  003B4C  A0D8               	btfss	status,0,c
  9825  003B4E  D7A8               	goto	l7756
  9826                           
  9827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9828  003B50  B024               	btfsc	_flags,0,c
  9829  003B52  D01F               	goto	l7770
  9830  003B54  D031               	goto	u4770
  9831  003B56                     l7766:
  9832                           
  9833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9834                           ;stkvar	_fp @ sp[(-17)+-2]
  9835  003B56  0EED               	movlw	-19
  9836  003B58  006F FF8F FFE6     	movff	plusw1,postinc1
  9837  003B5E  006F FF8F FFE6     	movff	plusw1,postinc1
  9838  003B64  0E20               	movlw	32
  9839  003B66  6EE6               	movwf	postinc1,c
  9840  003B68  0E00               	movlw	0
  9841  003B6A  6EE6               	movwf	postinc1,c
  9842  003B6C  EC29  F025         	call	_fputc	;wreg free
  9843                           
  9844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9845                           ;stkvar	_l @ sp[(-17)+7]
  9846  003B70  0EF6               	movlw	-10
  9847  003B72  50E3               	movf	plusw1,w,c
  9848  003B74  0F01               	addlw	1
  9849  003B76  6E3B               	movwf	btemp,c
  9850  003B78  0EF6               	movlw	-10
  9851  003B7A  0060  F0EF  FFE3   	movff	btemp,plusw1
  9852  003B80  6A3B               	clrf	btemp,c
  9853  003B82  0EF7               	movlw	-9
  9854  003B84  50E3               	movf	plusw1,w,c
  9855  003B86  203B               	addwfc	btemp,w,c
  9856  003B88  6E3B               	movwf	btemp,c
  9857  003B8A  0EF7               	movlw	-9
  9858  003B8C  0060  F0EF  FFE3   	movff	btemp,plusw1
  9859  003B92                     l7770:
  9860                           
  9861                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9862                           ;stkvar	_w @ sp[(-17)+13]
  9863                           ;stkvar	_l @ sp[(-17)+7]
  9864  003B92  50E1               	movf	fsr1l,w,c
  9865  003B94  0FF6               	addlw	-10
  9866  003B96  6ED9               	movwf	fsr2l,c
  9867  003B98  50E2               	movf	fsr1h,w,c
  9868  003B9A  6EDA               	movwf	fsr2h,c
  9869  003B9C  0EFF               	movlw	255
  9870  003B9E  22DA               	addwfc	fsr2h,f,c
  9871  003BA0  0EFC               	movlw	-4
  9872  003BA2  50E3               	movf	plusw1,w,c
  9873  003BA4  5CDE               	subwf	postinc2,w,c
  9874  003BA6  50DE               	movf	postinc2,w,c
  9875  003BA8  0A80               	xorlw	128
  9876  003BAA  6E3B               	movwf	btemp,c
  9877  003BAC  0EFD               	movlw	-3
  9878  003BAE  50E3               	movf	plusw1,w,c
  9879  003BB0  0A80               	xorlw	128
  9880  003BB2  583B               	subwfb	btemp,w,c
  9881  003BB4  A0D8               	btfss	status,0,c
  9882  003BB6  D7CF               	goto	l7766
  9883  003BB8                     u4770:
  9884                           
  9885                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  9886                           ;stkvar	_l @ sp[(-17)+7]
  9887  003BB8  0EF6               	movlw	-10
  9888  003BBA  006F FF8C  F03B    	movff	plusw1,btemp
  9889  003BC0  0EF7               	movlw	-9
  9890  003BC2  006F FF8C  F03C    	movff	plusw1,btemp+1
  9891                           
  9892                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9893  003BC8  0EEB               	movlw	235
  9894  003BCA  26E1               	addwf	fsr1l,f,c
  9895  003BCC  0EFF               	movlw	255
  9896  003BCE  22E2               	addwfc	fsr1h,f,c
  9897  003BD0  0012               	return		;funcret
  9898  003BD2                     __end_of_stoa:
  9899                           	opt callstack 0
  9900                           
  9901 ;; *************** function _dtoa *****************
  9902 ;; Defined at:
  9903 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9906 ;;		 -> f(5), NULL(0), 
  9907 ;;  d               8  [STACK] long long 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  n               8  [STACK] long long 
  9910 ;;  i               2  [STACK] int 
  9911 ;;  s               2  [STACK] int 
  9912 ;;  w               2  [STACK] int 
  9913 ;;  p               2  [STACK] int 
  9914 ;; Return value:  Size  Location     Type
  9915 ;;                  2  [STACK] int 
  9916 ;; Registers used:
  9917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9918 ;; Tracked objects:
  9919 ;;		On entry : 0/0
  9920 ;;		On exit  : 0/0
  9921 ;;		Unchanged: 0/0
  9922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9927 ;;Total ram usage:        0 bytes
  9928 ;; Hardware stack levels used:    1
  9929 ;; Hardware stack levels required when called:    8
  9930 ;; This function calls:
  9931 ;;		___aodiv
  9932 ;;		___aomod
  9933 ;;		_abs
  9934 ;;		_pad
  9935 ;; This function is called by:
  9936 ;;		_vfpfcnvrt
  9937 ;; This function uses a reentrant model
  9938 ;;
  9939                           
  9940                           	psect	text42
  9941  002A6A                     __ptext42:
  9942                           	opt callstack 0
  9943  002A6A                     _dtoa:
  9944                           	opt callstack 0
  9945                           
  9946                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9947  002A6A  0E12               	movlw	18
  9948  002A6C  26E1               	addwf	fsr1l,f,c
  9949  002A6E  0E00               	movlw	0
  9950  002A70  22E2               	addwfc	fsr1h,f,c
  9951                           
  9952                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  9953                           ;stkvar	_d @ sp[(-18)+-10]
  9954                           
  9955                           ;incstack = 0
  9956  002A72  0EE4               	movlw	228
  9957  002A74  24E1               	addwf	fsr1l,w,c
  9958  002A76  6ED9               	movwf	fsr2l,c
  9959  002A78  0EFF               	movlw	255
  9960  002A7A  20E2               	addwfc	fsr1h,w,c
  9961  002A7C  6EDA               	movwf	fsr2h,c
  9962                           
  9963                           ;stkvar	_n @ sp[(-18)+2]
  9964  002A7E  0E08               	movlw	8
  9965  002A80  6E3B               	movwf	btemp,c
  9966  002A82  0EF0               	movlw	-16
  9967  002A84                     us451999:
  9968  002A84  006F FF7B FFE3     	movff	postinc2,plusw1
  9969  002A8A  28E8               	incf	wreg,w,c
  9970  002A8C  2E3B               	decfsz	btemp,f,c
  9971  002A8E  D7FA               	bra	us451999
  9972                           
  9973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  9974                           ;stkvar	_n @ sp[(-18)+2]
  9975  002A90  0EF7               	movlw	-9
  9976  002A92  AEE3               	btfss	plusw1,7,c
  9977  002A94  D002               	goto	u4520
  9978  002A96  0E01               	movlw	1
  9979  002A98  D001               	goto	u4530
  9980  002A9A                     u4520:
  9981  002A9A  0E00               	movlw	0
  9982  002A9C                     u4530:
  9983  002A9C  6E45               	movwf	btemp+10,c
  9984  002A9E  6A46               	clrf	btemp+11,c
  9985                           
  9986                           ;stkvar	_s @ sp[(-18)+12]
  9987  002AA0  0EFA               	movlw	-6
  9988  002AA2  0060  F117  FFE3   	movff	btemp+10,plusw1
  9989  002AA8  0EFB               	movlw	-5
  9990  002AAA  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9991                           
  9992                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  9993                           ;stkvar	_s @ sp[(-18)+12]
  9994  002AB0  0EFA               	movlw	-6
  9995  002AB2  006F FF8C  F03B    	movff	plusw1,btemp
  9996  002AB8  0EFB               	movlw	-5
  9997  002ABA  50E3               	movf	plusw1,w,c
  9998  002ABC  103B               	iorwf	btemp,w,c
  9999  002ABE  B4D8               	btfsc	status,2,c
 10000  002AC0  D025               	goto	u4550
 10001                           
 10002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 10003                           ;stkvar	_n @ sp[(-18)+2]
 10004                           ;stkvar	_n @ sp[(-18)+2]
 10005  002AC2  0EF0               	movlw	-16
 10006  002AC4  6CE3               	negf	plusw1,c
 10007  002AC6  0EF1               	movlw	-15
 10008  002AC8  1EE3               	comf	plusw1,f,c
 10009  002ACA  0EF2               	movlw	-14
 10010  002ACC  1EE3               	comf	plusw1,f,c
 10011  002ACE  0EF3               	movlw	-13
 10012  002AD0  1EE3               	comf	plusw1,f,c
 10013  002AD2  0EF4               	movlw	-12
 10014  002AD4  1EE3               	comf	plusw1,f,c
 10015  002AD6  0EF5               	movlw	-11
 10016  002AD8  1EE3               	comf	plusw1,f,c
 10017  002ADA  0EF6               	movlw	-10
 10018  002ADC  1EE3               	comf	plusw1,f,c
 10019  002ADE  0EF7               	movlw	-9
 10020  002AE0  1EE3               	comf	plusw1,f,c
 10021  002AE2  E314               	bnc	u4550
 10022  002AE4  0EF1               	movlw	-15
 10023  002AE6  2AE3               	incf	plusw1,f,c
 10024  002AE8  E311               	bnc	u4550
 10025  002AEA  0EF2               	movlw	-14
 10026  002AEC  2AE3               	incf	plusw1,f,c
 10027  002AEE  E30E               	bnc	u4550
 10028  002AF0  0EF3               	movlw	-13
 10029  002AF2  2AE3               	incf	plusw1,f,c
 10030  002AF4  E30B               	bnc	u4550
 10031  002AF6  0EF4               	movlw	-12
 10032  002AF8  2AE3               	incf	plusw1,f,c
 10033  002AFA  E308               	bnc	u4550
 10034  002AFC  0EF5               	movlw	-11
 10035  002AFE  2AE3               	incf	plusw1,f,c
 10036  002B00  E305               	bnc	u4550
 10037  002B02  0EF6               	movlw	-10
 10038  002B04  2AE3               	incf	plusw1,f,c
 10039  002B06  E302               	bnc	u4550
 10040  002B08  0EF7               	movlw	-9
 10041  002B0A  2AE3               	incf	plusw1,f,c
 10042  002B0C                     u4550:
 10043                           
 10044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 10045  002B0C  AE23               	btfss	_prec+1,7,c
 10046                           
 10047                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 10048  002B0E  9224               	bcf	_flags,1,c
 10049                           
 10050                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 10051  002B10  BE23               	btfsc	_prec+1,7,c
 10052  002B12  D005               	goto	u4570
 10053  002B14  5023               	movf	_prec+1,w,c
 10054  002B16  E110               	bnz	l7674
 10055  002B18  0422               	decf	_prec,w,c
 10056  002B1A  B0D8               	btfsc	status,0,c
 10057  002B1C  D00D               	goto	l7674
 10058  002B1E                     u4570:
 10059  002B1E  0E01               	movlw	1
 10060  002B20  6E45               	movwf	btemp+10,c
 10061  002B22  0E00               	movlw	0
 10062  002B24  6E46               	movwf	btemp+11,c
 10063                           
 10064                           ;stkvar	_p @ sp[(-18)+16]
 10065  002B26  0EFE               	movlw	-2
 10066  002B28  0060  F117  FFE3   	movff	btemp+10,plusw1
 10067  002B2E  0EFF               	movlw	-1
 10068  002B30  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10069  002B36  D008               	goto	l1814
 10070  002B38                     l7674:
 10071                           
 10072                           ;stkvar	_p @ sp[(-18)+16]
 10073  002B38  0EFE               	movlw	-2
 10074  002B3A  0060  F08B  FFE3   	movff	_prec,plusw1
 10075  002B40  0EFF               	movlw	-1
 10076  002B42  0060  F08F  FFE3   	movff	_prec+1,plusw1
 10077  002B48                     l1814:
 10078                           
 10079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 10080                           ;stkvar	_w @ sp[(-18)+14]
 10081  002B48  0EFC               	movlw	-4
 10082  002B4A  0060  F083  FFE3   	movff	_width,plusw1
 10083  002B50  0EFD               	movlw	-3
 10084  002B52  0060  F087  FFE3   	movff	_width+1,plusw1
 10085                           
 10086                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 10087                           ;stkvar	_s @ sp[(-18)+12]
 10088  002B58  0EFA               	movlw	-6
 10089  002B5A  006F FF8C  F03B    	movff	plusw1,btemp
 10090  002B60  0EFB               	movlw	-5
 10091  002B62  50E3               	movf	plusw1,w,c
 10092  002B64  103B               	iorwf	btemp,w,c
 10093  002B66  A4D8               	btfss	status,2,c
 10094  002B68  D002               	goto	u4590
 10095  002B6A  A424               	btfss	_flags,2,c
 10096  002B6C  D00A               	goto	l7682
 10097  002B6E                     u4590:
 10098                           
 10099                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 10100                           ;stkvar	_w @ sp[(-18)+14]
 10101  002B6E  50E1               	movf	fsr1l,w,c
 10102  002B70  0FFC               	addlw	-4
 10103  002B72  6ED9               	movwf	fsr2l,c
 10104  002B74  50E2               	movf	fsr1h,w,c
 10105  002B76  6EDA               	movwf	fsr2h,c
 10106  002B78  0EFF               	movlw	255
 10107  002B7A  22DA               	addwfc	fsr2h,f,c
 10108  002B7C  06DE               	decf	postinc2,f,c
 10109  002B7E  0E00               	movlw	0
 10110  002B80  5ADD               	subwfb	postdec2,f,c
 10111  002B82                     l7682:
 10112                           
 10113                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 10114  002B82  0E1F               	movlw	31
 10115  002B84  6E45               	movwf	btemp+10,c
 10116  002B86  0E00               	movlw	0
 10117  002B88  6E46               	movwf	btemp+11,c
 10118                           
 10119                           ;stkvar	_i @ sp[(-18)+10]
 10120  002B8A  0EF8               	movlw	-8
 10121  002B8C  0060  F117  FFE3   	movff	btemp+10,plusw1
 10122  002B92  0EF9               	movlw	-7
 10123  002B94  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10124                           
 10125                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 10126  002B9A  0101               	movlb	1	; () banked
 10127  002B9C  6BCE               	clrf	(_dbuf+31)& (0+255),b
 10128                           
 10129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10130  002B9E  D109               	goto	l7696
 10131  002BA0                     l7686:
 10132                           
 10133                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 10134                           ;stkvar	_i @ sp[(-18)+10]
 10135  002BA0  50E1               	movf	fsr1l,w,c
 10136  002BA2  0FF8               	addlw	-8
 10137  002BA4  6ED9               	movwf	fsr2l,c
 10138  002BA6  50E2               	movf	fsr1h,w,c
 10139  002BA8  6EDA               	movwf	fsr2h,c
 10140  002BAA  0EFF               	movlw	255
 10141  002BAC  22DA               	addwfc	fsr2h,f,c
 10142  002BAE  06DE               	decf	postinc2,f,c
 10143  002BB0  0E00               	movlw	0
 10144  002BB2  5ADD               	subwfb	postdec2,f,c
 10145                           
 10146                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 10147  002BB4  0E0A               	movlw	10
 10148  002BB6  6EE6               	movwf	postinc1,c
 10149  002BB8  0E00               	movlw	0
 10150  002BBA  6EE6               	movwf	postinc1,c
 10151  002BBC  0E00               	movlw	0
 10152  002BBE  6EE6               	movwf	postinc1,c
 10153  002BC0  0E00               	movlw	0
 10154  002BC2  6EE6               	movwf	postinc1,c
 10155  002BC4  0E00               	movlw	0
 10156  002BC6  6EE6               	movwf	postinc1,c
 10157  002BC8  0E00               	movlw	0
 10158  002BCA  6EE6               	movwf	postinc1,c
 10159  002BCC  0E00               	movlw	0
 10160  002BCE  6EE6               	movwf	postinc1,c
 10161  002BD0  0E00               	movlw	0
 10162  002BD2  6EE6               	movwf	postinc1,c
 10163                           
 10164                           ;stkvar	_n @ sp[(-26)+2]
 10165  002BD4  50E1               	movf	fsr1l,w,c
 10166  002BD6  0FE8               	addlw	-24
 10167  002BD8  6ED9               	movwf	fsr2l,c
 10168  002BDA  50E2               	movf	fsr1h,w,c
 10169  002BDC  6EDA               	movwf	fsr2h,c
 10170  002BDE  0EFF               	movlw	255
 10171  002BE0  22DA               	addwfc	fsr2h,f,c
 10172  002BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 10173  002BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 10174  002BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 10175  002BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 10176  002BFA  006F FF7B FFE6     	movff	postinc2,postinc1
 10177  002C00  006F FF7B FFE6     	movff	postinc2,postinc1
 10178  002C06  006F FF7B FFE6     	movff	postinc2,postinc1
 10179  002C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 10180  002C12  ECB7  F022         	call	___aomod	;wreg free
 10181  002C16  52E5               	movf	postdec1,f,c
 10182  002C18  006F FF9C  F052    	movff	indf1,btemp+23
 10183  002C1E  52E5               	movf	postdec1,f,c
 10184  002C20  006F FF9C  F051    	movff	indf1,btemp+22
 10185  002C26  52E5               	movf	postdec1,f,c
 10186  002C28  006F FF9C  F050    	movff	indf1,btemp+21
 10187  002C2E  52E5               	movf	postdec1,f,c
 10188  002C30  006F FF9C  F04F    	movff	indf1,btemp+20
 10189  002C36  52E5               	movf	postdec1,f,c
 10190  002C38  006F FF9C  F04E    	movff	indf1,btemp+19
 10191  002C3E  52E5               	movf	postdec1,f,c
 10192  002C40  006F FF9C  F04D    	movff	indf1,btemp+18
 10193  002C46  52E5               	movf	postdec1,f,c
 10194  002C48  006F FF9C  F04C    	movff	indf1,btemp+17
 10195  002C4E  52E5               	movf	postdec1,f,c
 10196  002C50  006F FF9C  F04B    	movff	indf1,btemp+16
 10197  002C56  0EF8               	movlw	248
 10198  002C58  26E1               	addwf	fsr1l,f,c
 10199  002C5A  0EFF               	movlw	255
 10200  002C5C  22E2               	addwfc	fsr1h,f,c
 10201  002C5E  0060  F12C  F045   	movff	btemp+16,btemp+10
 10202  002C64  0060  F130  F046   	movff	btemp+17,btemp+11
 10203  002C6A  0060  F117  FFE6   	movff	btemp+10,postinc1
 10204  002C70  0060  F11B  FFE6   	movff	btemp+11,postinc1
 10205  002C76  ECE3  F02B         	call	_abs	;wreg free
 10206  002C7A  0E30               	movlw	48
 10207  002C7C  263B               	addwf	btemp,f,c
 10208                           
 10209                           ;stkvar	_i @ sp[(-18)+10]
 10210  002C7E  0EF8               	movlw	-8
 10211  002C80  006F FF8C  F045    	movff	plusw1,btemp+10
 10212  002C86  0EF9               	movlw	-7
 10213  002C88  006F FF8C  F046    	movff	plusw1,btemp+11
 10214  002C8E  0EAF               	movlw	low _dbuf
 10215  002C90  2445               	addwf	btemp+10,w,c
 10216  002C92  6ED9               	movwf	fsr2l,c
 10217  002C94  0E01               	movlw	high _dbuf
 10218  002C96  2046               	addwfc	btemp+11,w,c
 10219  002C98  6EDA               	movwf	fsr2h,c
 10220  002C9A  0060  F0EF  FFDF   	movff	btemp,indf2
 10221                           
 10222                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 10223                           ;stkvar	_p @ sp[(-18)+16]
 10224  002CA0  50E1               	movf	fsr1l,w,c
 10225  002CA2  0FFE               	addlw	-2
 10226  002CA4  6ED9               	movwf	fsr2l,c
 10227  002CA6  50E2               	movf	fsr1h,w,c
 10228  002CA8  6EDA               	movwf	fsr2h,c
 10229  002CAA  0EFF               	movlw	255
 10230  002CAC  22DA               	addwfc	fsr2h,f,c
 10231  002CAE  06DE               	decf	postinc2,f,c
 10232  002CB0  0E00               	movlw	0
 10233  002CB2  5ADD               	subwfb	postdec2,f,c
 10234                           
 10235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 10236                           ;stkvar	_w @ sp[(-18)+14]
 10237  002CB4  50E1               	movf	fsr1l,w,c
 10238  002CB6  0FFC               	addlw	-4
 10239  002CB8  6ED9               	movwf	fsr2l,c
 10240  002CBA  50E2               	movf	fsr1h,w,c
 10241  002CBC  6EDA               	movwf	fsr2h,c
 10242  002CBE  0EFF               	movlw	255
 10243  002CC0  22DA               	addwfc	fsr2h,f,c
 10244  002CC2  06DE               	decf	postinc2,f,c
 10245  002CC4  0E00               	movlw	0
 10246  002CC6  5ADD               	subwfb	postdec2,f,c
 10247                           
 10248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 10249  002CC8  0E0A               	movlw	10
 10250  002CCA  6EE6               	movwf	postinc1,c
 10251  002CCC  0E00               	movlw	0
 10252  002CCE  6EE6               	movwf	postinc1,c
 10253  002CD0  0E00               	movlw	0
 10254  002CD2  6EE6               	movwf	postinc1,c
 10255  002CD4  0E00               	movlw	0
 10256  002CD6  6EE6               	movwf	postinc1,c
 10257  002CD8  0E00               	movlw	0
 10258  002CDA  6EE6               	movwf	postinc1,c
 10259  002CDC  0E00               	movlw	0
 10260  002CDE  6EE6               	movwf	postinc1,c
 10261  002CE0  0E00               	movlw	0
 10262  002CE2  6EE6               	movwf	postinc1,c
 10263  002CE4  0E00               	movlw	0
 10264  002CE6  6EE6               	movwf	postinc1,c
 10265                           
 10266                           ;stkvar	_n @ sp[(-26)+2]
 10267  002CE8  50E1               	movf	fsr1l,w,c
 10268  002CEA  0FE8               	addlw	-24
 10269  002CEC  6ED9               	movwf	fsr2l,c
 10270  002CEE  50E2               	movf	fsr1h,w,c
 10271  002CF0  6EDA               	movwf	fsr2h,c
 10272  002CF2  0EFF               	movlw	255
 10273  002CF4  22DA               	addwfc	fsr2h,f,c
 10274  002CF6  006F FF7B FFE6     	movff	postinc2,postinc1
 10275  002CFC  006F FF7B FFE6     	movff	postinc2,postinc1
 10276  002D02  006F FF7B FFE6     	movff	postinc2,postinc1
 10277  002D08  006F FF7B FFE6     	movff	postinc2,postinc1
 10278  002D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 10279  002D14  006F FF7B FFE6     	movff	postinc2,postinc1
 10280  002D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 10281  002D20  006F FF7B FFE6     	movff	postinc2,postinc1
 10282  002D26  ECE9  F01D         	call	___aodiv	;wreg free
 10283  002D2A  52E5               	movf	postdec1,f,c
 10284  002D2C  006F FF9C  F052    	movff	indf1,btemp+23
 10285  002D32  52E5               	movf	postdec1,f,c
 10286  002D34  006F FF9C  F051    	movff	indf1,btemp+22
 10287  002D3A  52E5               	movf	postdec1,f,c
 10288  002D3C  006F FF9C  F050    	movff	indf1,btemp+21
 10289  002D42  52E5               	movf	postdec1,f,c
 10290  002D44  006F FF9C  F04F    	movff	indf1,btemp+20
 10291  002D4A  52E5               	movf	postdec1,f,c
 10292  002D4C  006F FF9C  F04E    	movff	indf1,btemp+19
 10293  002D52  52E5               	movf	postdec1,f,c
 10294  002D54  006F FF9C  F04D    	movff	indf1,btemp+18
 10295  002D5A  52E5               	movf	postdec1,f,c
 10296  002D5C  006F FF9C  F04C    	movff	indf1,btemp+17
 10297  002D62  52E5               	movf	postdec1,f,c
 10298  002D64  006F FF9C  F04B    	movff	indf1,btemp+16
 10299  002D6A  0EF8               	movlw	248
 10300  002D6C  26E1               	addwf	fsr1l,f,c
 10301  002D6E  0EFF               	movlw	255
 10302  002D70  22E2               	addwfc	fsr1h,f,c
 10303                           
 10304                           ;stkvar	_n @ sp[(-18)+2]
 10305  002D72  0EF0               	movlw	-16
 10306  002D74  0060  F12F  FFE3   	movff	btemp+16,plusw1
 10307  002D7A  0EF1               	movlw	-15
 10308  002D7C  0060  F133  FFE3   	movff	btemp+17,plusw1
 10309  002D82  0EF2               	movlw	-14
 10310  002D84  0060  F137  FFE3   	movff	btemp+18,plusw1
 10311  002D8A  0EF3               	movlw	-13
 10312  002D8C  0060  F13B  FFE3   	movff	btemp+19,plusw1
 10313  002D92  0EF4               	movlw	-12
 10314  002D94  0060  F13F  FFE3   	movff	btemp+20,plusw1
 10315  002D9A  0EF5               	movlw	-11
 10316  002D9C  0060  F143  FFE3   	movff	btemp+21,plusw1
 10317  002DA2  0EF6               	movlw	-10
 10318  002DA4  0060  F147  FFE3   	movff	btemp+22,plusw1
 10319  002DAA  0EF7               	movlw	-9
 10320  002DAC  0060  F14B  FFE3   	movff	btemp+23,plusw1
 10321  002DB2                     l7696:
 10322                           
 10323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10324                           ;stkvar	_i @ sp[(-18)+10]
 10325  002DB2  0EF9               	movlw	-7
 10326  002DB4  BEE3               	btfsc	plusw1,7,c
 10327  002DB6  D036               	goto	u4640
 10328  002DB8  0EF9               	movlw	-7
 10329  002DBA  50E3               	movf	plusw1,w,c
 10330  002DBC  E104               	bnz	u4600
 10331  002DBE  0EF8               	movlw	-8
 10332  002DC0  04E3               	decf	plusw1,w,c
 10333  002DC2  A0D8               	btfss	status,0,c
 10334  002DC4  D02F               	goto	u4640
 10335  002DC6                     u4600:
 10336                           
 10337                           ;stkvar	_n @ sp[(-18)+2]
 10338  002DC6  0EF0               	movlw	-16
 10339  002DC8  50E3               	movf	plusw1,w,c
 10340  002DCA  E115               	bnz	u4611
 10341  002DCC  0EF1               	movlw	-15
 10342  002DCE  50E3               	movf	plusw1,w,c
 10343  002DD0  E112               	bnz	u4611
 10344  002DD2  0EF2               	movlw	-14
 10345  002DD4  50E3               	movf	plusw1,w,c
 10346  002DD6  E10F               	bnz	u4611
 10347  002DD8  0EF3               	movlw	-13
 10348  002DDA  50E3               	movf	plusw1,w,c
 10349  002DDC  E10C               	bnz	u4611
 10350  002DDE  0EF4               	movlw	-12
 10351  002DE0  50E3               	movf	plusw1,w,c
 10352  002DE2  E109               	bnz	u4611
 10353  002DE4  0EF5               	movlw	-11
 10354  002DE6  50E3               	movf	plusw1,w,c
 10355  002DE8  E106               	bnz	u4611
 10356  002DEA  0EF6               	movlw	-10
 10357  002DEC  50E3               	movf	plusw1,w,c
 10358  002DEE  E103               	bnz	u4611
 10359  002DF0  0EF7               	movlw	-9
 10360  002DF2  50E3               	movf	plusw1,w,c
 10361  002DF4  A4D8               	btfss	status,2,c
 10362  002DF6                     u4611:
 10363  002DF6  D6D4               	goto	l7686
 10364                           
 10365                           ;stkvar	_p @ sp[(-18)+16]
 10366  002DF8  0EFF               	movlw	-1
 10367  002DFA  BEE3               	btfsc	plusw1,7,c
 10368  002DFC  D007               	goto	u4620
 10369  002DFE  0EFF               	movlw	-1
 10370  002E00  50E3               	movf	plusw1,w,c
 10371  002E02  E103               	bnz	u4621
 10372  002E04  0EFE               	movlw	-2
 10373  002E06  04E3               	decf	plusw1,w,c
 10374  002E08  B0D8               	btfsc	status,0,c
 10375  002E0A                     u4621:
 10376  002E0A  D6CA               	goto	l7686
 10377  002E0C                     u4620:
 10378                           
 10379                           ;stkvar	_w @ sp[(-18)+14]
 10380  002E0C  0EFD               	movlw	-3
 10381  002E0E  BEE3               	btfsc	plusw1,7,c
 10382  002E10  D009               	goto	u4640
 10383  002E12  0EFD               	movlw	-3
 10384  002E14  50E3               	movf	plusw1,w,c
 10385  002E16  E104               	bnz	u4630
 10386  002E18  0EFC               	movlw	-4
 10387  002E1A  04E3               	decf	plusw1,w,c
 10388  002E1C  A0D8               	btfss	status,0,c
 10389  002E1E  D002               	goto	u4640
 10390  002E20                     u4630:
 10391  002E20  B224               	btfsc	_flags,1,c
 10392  002E22  D6BE               	goto	l7686
 10393  002E24                     u4640:
 10394                           
 10395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 10396                           ;stkvar	_s @ sp[(-18)+12]
 10397  002E24  0EFA               	movlw	-6
 10398  002E26  006F FF8C  F03B    	movff	plusw1,btemp
 10399  002E2C  0EFB               	movlw	-5
 10400  002E2E  50E3               	movf	plusw1,w,c
 10401  002E30  103B               	iorwf	btemp,w,c
 10402  002E32  A4D8               	btfss	status,2,c
 10403  002E34  D002               	goto	u4660
 10404  002E36  A424               	btfss	_flags,2,c
 10405  002E38  D033               	goto	l7720
 10406  002E3A                     u4660:
 10407                           
 10408                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 10409                           ;stkvar	_i @ sp[(-18)+10]
 10410  002E3A  50E1               	movf	fsr1l,w,c
 10411  002E3C  0FF8               	addlw	-8
 10412  002E3E  6ED9               	movwf	fsr2l,c
 10413  002E40  50E2               	movf	fsr1h,w,c
 10414  002E42  6EDA               	movwf	fsr2h,c
 10415  002E44  0EFF               	movlw	255
 10416  002E46  22DA               	addwfc	fsr2h,f,c
 10417  002E48  06DE               	decf	postinc2,f,c
 10418  002E4A  0E00               	movlw	0
 10419  002E4C  5ADD               	subwfb	postdec2,f,c
 10420                           
 10421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 10422                           ;stkvar	_s @ sp[(-18)+12]
 10423  002E4E  0EFA               	movlw	-6
 10424  002E50  006F FF8C  F03B    	movff	plusw1,btemp
 10425  002E56  0EFB               	movlw	-5
 10426  002E58  50E3               	movf	plusw1,w,c
 10427  002E5A  103B               	iorwf	btemp,w,c
 10428  002E5C  A4D8               	btfss	status,2,c
 10429  002E5E  D002               	goto	l7716
 10430  002E60  0E2B               	movlw	43
 10431  002E62  D001               	goto	L24
 10432  002E64                     l7716:
 10433  002E64  0E2D               	movlw	45
 10434  002E66                     L24:
 10435  002E66  6E45               	movwf	btemp+10,c
 10436  002E68  0E00               	movlw	0
 10437  002E6A  6E46               	movwf	btemp+11,c
 10438                           
 10439                           ;stkvar	_dtoa$3806 @ sp[(-18)+0]
 10440  002E6C  0EEE               	movlw	-18
 10441  002E6E  0060  F117  FFE3   	movff	btemp+10,plusw1
 10442  002E74  0EEF               	movlw	-17
 10443  002E76  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10444                           
 10445                           ;stkvar	_dtoa$3806 @ sp[(-18)+0]
 10446                           ;stkvar	_i @ sp[(-18)+10]
 10447  002E7C  0EF8               	movlw	-8
 10448  002E7E  006F FF8C  F045    	movff	plusw1,btemp+10
 10449  002E84  0EF9               	movlw	-7
 10450  002E86  006F FF8C  F046    	movff	plusw1,btemp+11
 10451  002E8C  0EAF               	movlw	low _dbuf
 10452  002E8E  2445               	addwf	btemp+10,w,c
 10453  002E90  6ED9               	movwf	fsr2l,c
 10454  002E92  0E01               	movlw	high _dbuf
 10455  002E94  2046               	addwfc	btemp+11,w,c
 10456  002E96  6EDA               	movwf	fsr2h,c
 10457  002E98  0EEE               	movlw	-18
 10458  002E9A  006F FF8F FFDF     	movff	plusw1,indf2
 10459  002EA0                     l7720:
 10460                           
 10461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 10462                           ;stkvar	_w @ sp[(-18)+14]
 10463  002EA0  0EFC               	movlw	-4
 10464  002EA2  006F FF8F FFE6     	movff	plusw1,postinc1
 10465  002EA8  006F FF8F FFE6     	movff	plusw1,postinc1
 10466                           
 10467                           ;stkvar	_i @ sp[(-20)+10]
 10468  002EAE  0EAF               	movlw	low _dbuf
 10469  002EB0  6E45               	movwf	btemp+10,c
 10470  002EB2  0E01               	movlw	high _dbuf
 10471  002EB4  6E46               	movwf	btemp+11,c
 10472  002EB6  0EF6               	movlw	-10
 10473  002EB8  50E3               	movf	plusw1,w,c
 10474  002EBA  2645               	addwf	btemp+10,f,c
 10475  002EBC  0EF7               	movlw	-9
 10476  002EBE  50E3               	movf	plusw1,w,c
 10477  002EC0  2246               	addwfc	btemp+11,f,c
 10478  002EC2  0060  F117  FFE6   	movff	btemp+10,postinc1
 10479  002EC8  0060  F11B  FFE6   	movff	btemp+11,postinc1
 10480                           
 10481                           ;stkvar	_fp @ sp[(-22)+-2]
 10482  002ECE  0EE8               	movlw	-24
 10483  002ED0  006F FF8F FFE6     	movff	plusw1,postinc1
 10484  002ED6  006F FF8F FFE6     	movff	plusw1,postinc1
 10485  002EDC  EC9F  F024         	call	_pad	;wreg free
 10486                           
 10487                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 10488  002EE0  0EE4               	movlw	228
 10489  002EE2  26E1               	addwf	fsr1l,f,c
 10490  002EE4  0EFF               	movlw	255
 10491  002EE6  22E2               	addwfc	fsr1h,f,c
 10492  002EE8  0012               	return		;funcret
 10493  002EEA                     __end_of_dtoa:
 10494                           	opt callstack 0
 10495                           
 10496 ;; *************** function _abs *****************
 10497 ;; Defined at:
 10498 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;  a               2  [STACK] int 
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;		None
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  2  [STACK] int 
 10505 ;; Registers used:
 10506 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 10507 ;; Tracked objects:
 10508 ;;		On entry : 0/1
 10509 ;;		On exit  : 0/0
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10516 ;;Total ram usage:        0 bytes
 10517 ;; Hardware stack levels used:    1
 10518 ;; Hardware stack levels required when called:    3
 10519 ;; This function calls:
 10520 ;;		Nothing
 10521 ;; This function is called by:
 10522 ;;		_dtoa
 10523 ;; This function uses a reentrant model
 10524 ;;
 10525                           
 10526                           	psect	text43
 10527  0057C6                     __ptext43:
 10528                           	opt callstack 0
 10529  0057C6                     _abs:
 10530                           	opt callstack 23
 10531                           
 10532                           ;stkvar	_a @ sp[(0)+-2]
 10533                           
 10534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10535                           ;incstack = 0
 10536  0057C6  0EFF               	movlw	-1
 10537  0057C8  BEE3               	btfsc	plusw1,7,c
 10538  0057CA  D007               	goto	u2390
 10539  0057CC  0EFF               	movlw	-1
 10540  0057CE  50E3               	movf	plusw1,w,c
 10541  0057D0  E112               	bnz	l5344
 10542  0057D2  0EFE               	movlw	-2
 10543  0057D4  04E3               	decf	plusw1,w,c
 10544  0057D6  B0D8               	btfsc	status,0,c
 10545  0057D8  D00E               	goto	l5344
 10546  0057DA                     u2390:
 10547                           
 10548                           ;stkvar	_a @ sp[(0)+-2]
 10549  0057DA  0EFE               	movlw	-2
 10550  0057DC  006F FF8C  F03B    	movff	plusw1,btemp
 10551  0057E2  1E3B               	comf	btemp,f,c
 10552  0057E4  0EFF               	movlw	-1
 10553  0057E6  006F FF8C  F03C    	movff	plusw1,btemp+1
 10554  0057EC  1E3C               	comf	btemp+1,f,c
 10555  0057EE  2A3B               	incf	btemp,f,c
 10556  0057F0  B4D8               	btfsc	status,2,c
 10557  0057F2  2A3C               	incf	btemp+1,f,c
 10558  0057F4  D008               	goto	l2555
 10559  0057F6                     l5344:
 10560                           
 10561                           ;stkvar	_a @ sp[(0)+-2]
 10562  0057F6  0EFE               	movlw	-2
 10563  0057F8  006F FF8C  F03B    	movff	plusw1,btemp
 10564  0057FE  0EFF               	movlw	-1
 10565  005800  006F FF8C  F03C    	movff	plusw1,btemp+1
 10566  005806                     l2555:
 10567                           
 10568                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 10569  005806  52E5               	movf	postdec1,f,c
 10570  005808  52E5               	movf	postdec1,f,c
 10571  00580A  0012               	return		;funcret
 10572  00580C                     __end_of_abs:
 10573                           	opt callstack 0
 10574                           
 10575 ;; *************** function ___aomod *****************
 10576 ;; Defined at:
 10577 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  dividend        8  [STACK] long long 
 10580 ;;  divisor         8  [STACK] long long 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;  sign            1  [STACK] unsigned char 
 10583 ;;  counter         1  [STACK] unsigned char 
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  8  [STACK] long long 
 10586 ;; Registers used:
 10587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/1
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10597 ;;Total ram usage:        0 bytes
 10598 ;; Hardware stack levels used:    1
 10599 ;; Hardware stack levels required when called:    3
 10600 ;; This function calls:
 10601 ;;		Nothing
 10602 ;; This function is called by:
 10603 ;;		_dtoa
 10604 ;; This function uses a reentrant model
 10605 ;;
 10606                           
 10607                           	psect	text44
 10608  00456E                     __ptext44:
 10609                           	opt callstack 0
 10610  00456E                     ___aomod:
 10611                           	opt callstack 0
 10612                           
 10613                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10614  00456E  52E6               	movf	postinc1,f,c
 10615  004570  52E6               	movf	postinc1,f,c
 10616                           
 10617                           ;stkvar	_sign @ sp[(-2)+0]
 10618                           
 10619                           ;incstack = 0
 10620  004572  0EFE               	movlw	-2
 10621  004574  6AE3               	clrf	plusw1,c
 10622                           
 10623                           ;stkvar	_dividend @ sp[(-2)+-8]
 10624  004576  0EFD               	movlw	-3
 10625  004578  AEE3               	btfss	plusw1,7,c
 10626  00457A  D028               	goto	l5400
 10627                           
 10628                           ;stkvar	_dividend @ sp[(-2)+-8]
 10629                           ;stkvar	_dividend @ sp[(-2)+-8]
 10630  00457C  0EF6               	movlw	-10
 10631  00457E  6CE3               	negf	plusw1,c
 10632  004580  0EF7               	movlw	-9
 10633  004582  1EE3               	comf	plusw1,f,c
 10634  004584  0EF8               	movlw	-8
 10635  004586  1EE3               	comf	plusw1,f,c
 10636  004588  0EF9               	movlw	-7
 10637  00458A  1EE3               	comf	plusw1,f,c
 10638  00458C  0EFA               	movlw	-6
 10639  00458E  1EE3               	comf	plusw1,f,c
 10640  004590  0EFB               	movlw	-5
 10641  004592  1EE3               	comf	plusw1,f,c
 10642  004594  0EFC               	movlw	-4
 10643  004596  1EE3               	comf	plusw1,f,c
 10644  004598  0EFD               	movlw	-3
 10645  00459A  1EE3               	comf	plusw1,f,c
 10646  00459C  E314               	bnc	u2530
 10647  00459E  0EF7               	movlw	-9
 10648  0045A0  2AE3               	incf	plusw1,f,c
 10649  0045A2  E311               	bnc	u2530
 10650  0045A4  0EF8               	movlw	-8
 10651  0045A6  2AE3               	incf	plusw1,f,c
 10652  0045A8  E30E               	bnc	u2530
 10653  0045AA  0EF9               	movlw	-7
 10654  0045AC  2AE3               	incf	plusw1,f,c
 10655  0045AE  E30B               	bnc	u2530
 10656  0045B0  0EFA               	movlw	-6
 10657  0045B2  2AE3               	incf	plusw1,f,c
 10658  0045B4  E308               	bnc	u2530
 10659  0045B6  0EFB               	movlw	-5
 10660  0045B8  2AE3               	incf	plusw1,f,c
 10661  0045BA  E305               	bnc	u2530
 10662  0045BC  0EFC               	movlw	-4
 10663  0045BE  2AE3               	incf	plusw1,f,c
 10664  0045C0  E302               	bnc	u2530
 10665  0045C2  0EFD               	movlw	-3
 10666  0045C4  2AE3               	incf	plusw1,f,c
 10667  0045C6                     u2530:
 10668                           
 10669                           ;stkvar	_sign @ sp[(-2)+0]
 10670  0045C6  0EFE               	movlw	-2
 10671  0045C8  6AE3               	clrf	plusw1,c
 10672  0045CA  2AE3               	incf	plusw1,f,c
 10673  0045CC                     l5400:
 10674                           
 10675                           ;stkvar	_divisor @ sp[(-2)+-16]
 10676  0045CC  0EF5               	movlw	-11
 10677  0045CE  AEE3               	btfss	plusw1,7,c
 10678  0045D0  D025               	goto	u2550
 10679                           
 10680                           ;stkvar	_divisor @ sp[(-2)+-16]
 10681                           ;stkvar	_divisor @ sp[(-2)+-16]
 10682  0045D2  0EEE               	movlw	-18
 10683  0045D4  6CE3               	negf	plusw1,c
 10684  0045D6  0EEF               	movlw	-17
 10685  0045D8  1EE3               	comf	plusw1,f,c
 10686  0045DA  0EF0               	movlw	-16
 10687  0045DC  1EE3               	comf	plusw1,f,c
 10688  0045DE  0EF1               	movlw	-15
 10689  0045E0  1EE3               	comf	plusw1,f,c
 10690  0045E2  0EF2               	movlw	-14
 10691  0045E4  1EE3               	comf	plusw1,f,c
 10692  0045E6  0EF3               	movlw	-13
 10693  0045E8  1EE3               	comf	plusw1,f,c
 10694  0045EA  0EF4               	movlw	-12
 10695  0045EC  1EE3               	comf	plusw1,f,c
 10696  0045EE  0EF5               	movlw	-11
 10697  0045F0  1EE3               	comf	plusw1,f,c
 10698  0045F2  E314               	bnc	u2550
 10699  0045F4  0EEF               	movlw	-17
 10700  0045F6  2AE3               	incf	plusw1,f,c
 10701  0045F8  E311               	bnc	u2550
 10702  0045FA  0EF0               	movlw	-16
 10703  0045FC  2AE3               	incf	plusw1,f,c
 10704  0045FE  E30E               	bnc	u2550
 10705  004600  0EF1               	movlw	-15
 10706  004602  2AE3               	incf	plusw1,f,c
 10707  004604  E30B               	bnc	u2550
 10708  004606  0EF2               	movlw	-14
 10709  004608  2AE3               	incf	plusw1,f,c
 10710  00460A  E308               	bnc	u2550
 10711  00460C  0EF3               	movlw	-13
 10712  00460E  2AE3               	incf	plusw1,f,c
 10713  004610  E305               	bnc	u2550
 10714  004612  0EF4               	movlw	-12
 10715  004614  2AE3               	incf	plusw1,f,c
 10716  004616  E302               	bnc	u2550
 10717  004618  0EF5               	movlw	-11
 10718  00461A  2AE3               	incf	plusw1,f,c
 10719  00461C                     u2550:
 10720                           
 10721                           ;stkvar	_divisor @ sp[(-2)+-16]
 10722  00461C  0EEE               	movlw	-18
 10723  00461E  50E3               	movf	plusw1,w,c
 10724  004620  E116               	bnz	u2560
 10725  004622  0EEF               	movlw	-17
 10726  004624  50E3               	movf	plusw1,w,c
 10727  004626  E113               	bnz	u2560
 10728  004628  0EF0               	movlw	-16
 10729  00462A  50E3               	movf	plusw1,w,c
 10730  00462C  E110               	bnz	u2560
 10731  00462E  0EF1               	movlw	-15
 10732  004630  50E3               	movf	plusw1,w,c
 10733  004632  E10D               	bnz	u2560
 10734  004634  0EF2               	movlw	-14
 10735  004636  50E3               	movf	plusw1,w,c
 10736  004638  E10A               	bnz	u2560
 10737  00463A  0EF3               	movlw	-13
 10738  00463C  50E3               	movf	plusw1,w,c
 10739  00463E  E107               	bnz	u2560
 10740  004640  0EF4               	movlw	-12
 10741  004642  50E3               	movf	plusw1,w,c
 10742  004644  E104               	bnz	u2560
 10743  004646  0EF5               	movlw	-11
 10744  004648  50E3               	movf	plusw1,w,c
 10745  00464A  B4D8               	btfsc	status,2,c
 10746  00464C  D075               	goto	u2590
 10747  00464E                     u2560:
 10748                           
 10749                           ;stkvar	_counter @ sp[(-2)+1]
 10750  00464E  0EFF               	movlw	-1
 10751  004650  6AE3               	clrf	plusw1,c
 10752  004652  D012               	goto	L25
 10753  004654                     l5408:
 10754                           
 10755                           ;stkvar	_divisor @ sp[(-2)+-16]
 10756  004654  90D8               	bcf	status,0,c
 10757  004656  0EEE               	movlw	-18
 10758  004658  36E3               	rlcf	plusw1,f,c
 10759  00465A  0EEF               	movlw	-17
 10760  00465C  36E3               	rlcf	plusw1,f,c
 10761  00465E  0EF0               	movlw	-16
 10762  004660  36E3               	rlcf	plusw1,f,c
 10763  004662  0EF1               	movlw	-15
 10764  004664  36E3               	rlcf	plusw1,f,c
 10765  004666  0EF2               	movlw	-14
 10766  004668  36E3               	rlcf	plusw1,f,c
 10767  00466A  0EF3               	movlw	-13
 10768  00466C  36E3               	rlcf	plusw1,f,c
 10769  00466E  0EF4               	movlw	-12
 10770  004670  36E3               	rlcf	plusw1,f,c
 10771  004672  0EF5               	movlw	-11
 10772  004674  36E3               	rlcf	plusw1,f,c
 10773                           
 10774                           ;stkvar	_counter @ sp[(-2)+1]
 10775  004676  0EFF               	movlw	-1
 10776  004678                     L25:
 10777  004678  2AE3               	incf	plusw1,f,c
 10778                           
 10779                           ;stkvar	_divisor @ sp[(-2)+-16]
 10780  00467A  0EF5               	movlw	-11
 10781  00467C  AEE3               	btfss	plusw1,7,c
 10782  00467E  D7EA               	goto	l5408
 10783  004680                     u2570:
 10784                           
 10785                           ;stkvar	_divisor @ sp[(-2)+-16]
 10786                           ;stkvar	_dividend @ sp[(-2)+-8]
 10787  004680  50E1               	movf	fsr1l,w,c
 10788  004682  0FF6               	addlw	-10
 10789  004684  6ED9               	movwf	fsr2l,c
 10790  004686  50E2               	movf	fsr1h,w,c
 10791  004688  6EDA               	movwf	fsr2h,c
 10792  00468A  0EFF               	movlw	255
 10793  00468C  22DA               	addwfc	fsr2h,f,c
 10794  00468E  0EEE               	movlw	-18
 10795  004690  50E3               	movf	plusw1,w,c
 10796  004692  5CDE               	subwf	postinc2,w,c
 10797  004694  0EEF               	movlw	-17
 10798  004696  50E3               	movf	plusw1,w,c
 10799  004698  58DE               	subwfb	postinc2,w,c
 10800  00469A  0EF0               	movlw	-16
 10801  00469C  50E3               	movf	plusw1,w,c
 10802  00469E  58DE               	subwfb	postinc2,w,c
 10803  0046A0  0EF1               	movlw	-15
 10804  0046A2  50E3               	movf	plusw1,w,c
 10805  0046A4  58DE               	subwfb	postinc2,w,c
 10806  0046A6  0EF2               	movlw	-14
 10807  0046A8  50E3               	movf	plusw1,w,c
 10808  0046AA  58DE               	subwfb	postinc2,w,c
 10809  0046AC  0EF3               	movlw	-13
 10810  0046AE  50E3               	movf	plusw1,w,c
 10811  0046B0  58DE               	subwfb	postinc2,w,c
 10812  0046B2  0EF4               	movlw	-12
 10813  0046B4  50E3               	movf	plusw1,w,c
 10814  0046B6  58DE               	subwfb	postinc2,w,c
 10815  0046B8  0EF5               	movlw	-11
 10816  0046BA  50E3               	movf	plusw1,w,c
 10817  0046BC  58DE               	subwfb	postinc2,w,c
 10818  0046BE  A0D8               	btfss	status,0,c
 10819  0046C0  D01F               	goto	l5416
 10820                           
 10821                           ;stkvar	_divisor @ sp[(-2)+-16]
 10822                           ;stkvar	_dividend @ sp[(-2)+-8]
 10823  0046C2  50E1               	movf	fsr1l,w,c
 10824  0046C4  0FF6               	addlw	-10
 10825  0046C6  6ED9               	movwf	fsr2l,c
 10826  0046C8  50E2               	movf	fsr1h,w,c
 10827  0046CA  6EDA               	movwf	fsr2h,c
 10828  0046CC  0EFF               	movlw	255
 10829  0046CE  22DA               	addwfc	fsr2h,f,c
 10830  0046D0  0EEE               	movlw	-18
 10831  0046D2  50E3               	movf	plusw1,w,c
 10832  0046D4  5EDE               	subwf	postinc2,f,c
 10833  0046D6  0EEF               	movlw	-17
 10834  0046D8  50E3               	movf	plusw1,w,c
 10835  0046DA  5ADE               	subwfb	postinc2,f,c
 10836  0046DC  0EF0               	movlw	-16
 10837  0046DE  50E3               	movf	plusw1,w,c
 10838  0046E0  5ADE               	subwfb	postinc2,f,c
 10839  0046E2  0EF1               	movlw	-15
 10840  0046E4  50E3               	movf	plusw1,w,c
 10841  0046E6  5ADE               	subwfb	postinc2,f,c
 10842  0046E8  0EF2               	movlw	-14
 10843  0046EA  50E3               	movf	plusw1,w,c
 10844  0046EC  5ADE               	subwfb	postinc2,f,c
 10845  0046EE  0EF3               	movlw	-13
 10846  0046F0  50E3               	movf	plusw1,w,c
 10847  0046F2  5ADE               	subwfb	postinc2,f,c
 10848  0046F4  0EF4               	movlw	-12
 10849  0046F6  50E3               	movf	plusw1,w,c
 10850  0046F8  5ADE               	subwfb	postinc2,f,c
 10851  0046FA  0EF5               	movlw	-11
 10852  0046FC  50E3               	movf	plusw1,w,c
 10853  0046FE  5ADE               	subwfb	postinc2,f,c
 10854  004700                     l5416:
 10855                           
 10856                           ;stkvar	_divisor @ sp[(-2)+-16]
 10857  004700  90D8               	bcf	status,0,c
 10858  004702  0EF5               	movlw	-11
 10859  004704  32E3               	rrcf	plusw1,f,c
 10860  004706  0EF4               	movlw	-12
 10861  004708  32E3               	rrcf	plusw1,f,c
 10862  00470A  0EF3               	movlw	-13
 10863  00470C  32E3               	rrcf	plusw1,f,c
 10864  00470E  0EF2               	movlw	-14
 10865  004710  32E3               	rrcf	plusw1,f,c
 10866  004712  0EF1               	movlw	-15
 10867  004714  32E3               	rrcf	plusw1,f,c
 10868  004716  0EF0               	movlw	-16
 10869  004718  32E3               	rrcf	plusw1,f,c
 10870  00471A  0EEF               	movlw	-17
 10871  00471C  32E3               	rrcf	plusw1,f,c
 10872  00471E  0EEE               	movlw	-18
 10873  004720  32E3               	rrcf	plusw1,f,c
 10874                           
 10875                           ;stkvar	_counter @ sp[(-2)+1]
 10876  004722  0EFF               	movlw	-1
 10877  004724  50E3               	movf	plusw1,w,c
 10878  004726  6E3B               	movwf	btemp,c
 10879  004728  0E01               	movlw	1
 10880  00472A  5E3B               	subwf	btemp,f,c
 10881  00472C  0EFF               	movlw	-1
 10882  00472E  0060  F0EF  FFE3   	movff	btemp,plusw1
 10883  004734  A4D8               	btfss	status,2,c
 10884  004736  D7A4               	goto	u2570
 10885  004738                     u2590:
 10886                           
 10887                           ;stkvar	_sign @ sp[(-2)+0]
 10888  004738  0EFE               	movlw	-2
 10889  00473A  50E3               	movf	plusw1,w,c
 10890  00473C  B4D8               	btfsc	status,2,c
 10891  00473E  D025               	goto	u2610
 10892                           
 10893                           ;stkvar	_dividend @ sp[(-2)+-8]
 10894                           ;stkvar	_dividend @ sp[(-2)+-8]
 10895  004740  0EF6               	movlw	-10
 10896  004742  6CE3               	negf	plusw1,c
 10897  004744  0EF7               	movlw	-9
 10898  004746  1EE3               	comf	plusw1,f,c
 10899  004748  0EF8               	movlw	-8
 10900  00474A  1EE3               	comf	plusw1,f,c
 10901  00474C  0EF9               	movlw	-7
 10902  00474E  1EE3               	comf	plusw1,f,c
 10903  004750  0EFA               	movlw	-6
 10904  004752  1EE3               	comf	plusw1,f,c
 10905  004754  0EFB               	movlw	-5
 10906  004756  1EE3               	comf	plusw1,f,c
 10907  004758  0EFC               	movlw	-4
 10908  00475A  1EE3               	comf	plusw1,f,c
 10909  00475C  0EFD               	movlw	-3
 10910  00475E  1EE3               	comf	plusw1,f,c
 10911  004760  E314               	bnc	u2610
 10912  004762  0EF7               	movlw	-9
 10913  004764  2AE3               	incf	plusw1,f,c
 10914  004766  E311               	bnc	u2610
 10915  004768  0EF8               	movlw	-8
 10916  00476A  2AE3               	incf	plusw1,f,c
 10917  00476C  E30E               	bnc	u2610
 10918  00476E  0EF9               	movlw	-7
 10919  004770  2AE3               	incf	plusw1,f,c
 10920  004772  E30B               	bnc	u2610
 10921  004774  0EFA               	movlw	-6
 10922  004776  2AE3               	incf	plusw1,f,c
 10923  004778  E308               	bnc	u2610
 10924  00477A  0EFB               	movlw	-5
 10925  00477C  2AE3               	incf	plusw1,f,c
 10926  00477E  E305               	bnc	u2610
 10927  004780  0EFC               	movlw	-4
 10928  004782  2AE3               	incf	plusw1,f,c
 10929  004784  E302               	bnc	u2610
 10930  004786  0EFD               	movlw	-3
 10931  004788  2AE3               	incf	plusw1,f,c
 10932  00478A                     u2610:
 10933                           
 10934                           ;stkvar	_dividend @ sp[(-2)+-8]
 10935  00478A  0EF6               	movlw	246
 10936  00478C  24E1               	addwf	fsr1l,w,c
 10937  00478E  6ED9               	movwf	fsr2l,c
 10938  004790  0EFF               	movlw	255
 10939  004792  20E2               	addwfc	fsr1h,w,c
 10940  004794  6EDA               	movwf	fsr2h,c
 10941                           
 10942                           ;stkvar	?___aomod @ sp[(-2)+-8]
 10943  004796  0E08               	movlw	8
 10944  004798  6E3B               	movwf	btemp,c
 10945  00479A  0EF6               	movlw	-10
 10946  00479C                     us262999:
 10947  00479C  006F FF7B FFE3     	movff	postinc2,plusw1
 10948  0047A2  28E8               	incf	wreg,w,c
 10949  0047A4  2E3B               	decfsz	btemp,f,c
 10950  0047A6  D7FA               	bra	us262999
 10951                           
 10952                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10953  0047A8  52E5               	movf	postdec1,f,c
 10954  0047AA  52E5               	movf	postdec1,f,c
 10955  0047AC  0012               	return		;funcret
 10956  0047AE                     __end_of___aomod:
 10957                           	opt callstack 0
 10958                           
 10959 ;; *************** function ___aodiv *****************
 10960 ;; Defined at:
 10961 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  dividend        8  [STACK] long long 
 10964 ;;  divisor         8  [STACK] long long 
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;  quotient        8  [STACK] long long 
 10967 ;;  sign            1  [STACK] unsigned char 
 10968 ;;  counter         1  [STACK] unsigned char 
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  8  [STACK] long long 
 10971 ;; Registers used:
 10972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/1
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10982 ;;Total ram usage:        0 bytes
 10983 ;; Hardware stack levels used:    1
 10984 ;; Hardware stack levels required when called:    3
 10985 ;; This function calls:
 10986 ;;		Nothing
 10987 ;; This function is called by:
 10988 ;;		_dtoa
 10989 ;; This function uses a reentrant model
 10990 ;;
 10991                           
 10992                           	psect	text45
 10993  003BD2                     __ptext45:
 10994                           	opt callstack 0
 10995  003BD2                     ___aodiv:
 10996                           	opt callstack 0
 10997                           
 10998                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 10999  003BD2  0E0A               	movlw	10
 11000  003BD4  26E1               	addwf	fsr1l,f,c
 11001  003BD6  0E00               	movlw	0
 11002  003BD8  22E2               	addwfc	fsr1h,f,c
 11003                           
 11004                           ;stkvar	_sign @ sp[(-10)+8]
 11005                           
 11006                           ;incstack = 0
 11007  003BDA  0EFE               	movlw	-2
 11008  003BDC  6AE3               	clrf	plusw1,c
 11009                           
 11010                           ;stkvar	_divisor @ sp[(-10)+-16]
 11011  003BDE  0EED               	movlw	-19
 11012  003BE0  AEE3               	btfss	plusw1,7,c
 11013  003BE2  D028               	goto	l5356
 11014                           
 11015                           ;stkvar	_divisor @ sp[(-10)+-16]
 11016                           ;stkvar	_divisor @ sp[(-10)+-16]
 11017  003BE4  0EE6               	movlw	-26
 11018  003BE6  6CE3               	negf	plusw1,c
 11019  003BE8  0EE7               	movlw	-25
 11020  003BEA  1EE3               	comf	plusw1,f,c
 11021  003BEC  0EE8               	movlw	-24
 11022  003BEE  1EE3               	comf	plusw1,f,c
 11023  003BF0  0EE9               	movlw	-23
 11024  003BF2  1EE3               	comf	plusw1,f,c
 11025  003BF4  0EEA               	movlw	-22
 11026  003BF6  1EE3               	comf	plusw1,f,c
 11027  003BF8  0EEB               	movlw	-21
 11028  003BFA  1EE3               	comf	plusw1,f,c
 11029  003BFC  0EEC               	movlw	-20
 11030  003BFE  1EE3               	comf	plusw1,f,c
 11031  003C00  0EED               	movlw	-19
 11032  003C02  1EE3               	comf	plusw1,f,c
 11033  003C04  E314               	bnc	u2410
 11034  003C06  0EE7               	movlw	-25
 11035  003C08  2AE3               	incf	plusw1,f,c
 11036  003C0A  E311               	bnc	u2410
 11037  003C0C  0EE8               	movlw	-24
 11038  003C0E  2AE3               	incf	plusw1,f,c
 11039  003C10  E30E               	bnc	u2410
 11040  003C12  0EE9               	movlw	-23
 11041  003C14  2AE3               	incf	plusw1,f,c
 11042  003C16  E30B               	bnc	u2410
 11043  003C18  0EEA               	movlw	-22
 11044  003C1A  2AE3               	incf	plusw1,f,c
 11045  003C1C  E308               	bnc	u2410
 11046  003C1E  0EEB               	movlw	-21
 11047  003C20  2AE3               	incf	plusw1,f,c
 11048  003C22  E305               	bnc	u2410
 11049  003C24  0EEC               	movlw	-20
 11050  003C26  2AE3               	incf	plusw1,f,c
 11051  003C28  E302               	bnc	u2410
 11052  003C2A  0EED               	movlw	-19
 11053  003C2C  2AE3               	incf	plusw1,f,c
 11054  003C2E                     u2410:
 11055                           
 11056                           ;stkvar	_sign @ sp[(-10)+8]
 11057  003C2E  0EFE               	movlw	-2
 11058  003C30  6AE3               	clrf	plusw1,c
 11059  003C32  2AE3               	incf	plusw1,f,c
 11060  003C34                     l5356:
 11061                           
 11062                           ;stkvar	_dividend @ sp[(-10)+-8]
 11063  003C34  0EF5               	movlw	-11
 11064  003C36  AEE3               	btfss	plusw1,7,c
 11065  003C38  D027               	goto	l5362
 11066                           
 11067                           ;stkvar	_dividend @ sp[(-10)+-8]
 11068                           ;stkvar	_dividend @ sp[(-10)+-8]
 11069  003C3A  0EEE               	movlw	-18
 11070  003C3C  6CE3               	negf	plusw1,c
 11071  003C3E  0EEF               	movlw	-17
 11072  003C40  1EE3               	comf	plusw1,f,c
 11073  003C42  0EF0               	movlw	-16
 11074  003C44  1EE3               	comf	plusw1,f,c
 11075  003C46  0EF1               	movlw	-15
 11076  003C48  1EE3               	comf	plusw1,f,c
 11077  003C4A  0EF2               	movlw	-14
 11078  003C4C  1EE3               	comf	plusw1,f,c
 11079  003C4E  0EF3               	movlw	-13
 11080  003C50  1EE3               	comf	plusw1,f,c
 11081  003C52  0EF4               	movlw	-12
 11082  003C54  1EE3               	comf	plusw1,f,c
 11083  003C56  0EF5               	movlw	-11
 11084  003C58  1EE3               	comf	plusw1,f,c
 11085  003C5A  E314               	bnc	u2430
 11086  003C5C  0EEF               	movlw	-17
 11087  003C5E  2AE3               	incf	plusw1,f,c
 11088  003C60  E311               	bnc	u2430
 11089  003C62  0EF0               	movlw	-16
 11090  003C64  2AE3               	incf	plusw1,f,c
 11091  003C66  E30E               	bnc	u2430
 11092  003C68  0EF1               	movlw	-15
 11093  003C6A  2AE3               	incf	plusw1,f,c
 11094  003C6C  E30B               	bnc	u2430
 11095  003C6E  0EF2               	movlw	-14
 11096  003C70  2AE3               	incf	plusw1,f,c
 11097  003C72  E308               	bnc	u2430
 11098  003C74  0EF3               	movlw	-13
 11099  003C76  2AE3               	incf	plusw1,f,c
 11100  003C78  E305               	bnc	u2430
 11101  003C7A  0EF4               	movlw	-12
 11102  003C7C  2AE3               	incf	plusw1,f,c
 11103  003C7E  E302               	bnc	u2430
 11104  003C80  0EF5               	movlw	-11
 11105  003C82  2AE3               	incf	plusw1,f,c
 11106  003C84                     u2430:
 11107                           
 11108                           ;stkvar	_sign @ sp[(-10)+8]
 11109  003C84  0EFE               	movlw	-2
 11110  003C86  70E3               	btg	plusw1,0,c
 11111  003C88                     l5362:
 11112                           
 11113                           ;stkvar	_quotient @ sp[(-10)+0]
 11114  003C88  0E07               	movlw	7
 11115  003C8A  6E3B               	movwf	btemp,c
 11116  003C8C  0EF6               	movlw	-10
 11117  003C8E                     u2441:
 11118  003C8E  6AE3               	clrf	plusw1,c
 11119  003C90  2AE8               	incf	wreg,f,c
 11120  003C92  063B               	decf	btemp,f,c
 11121  003C94  E2FC               	bc	u2441
 11122                           
 11123                           ;stkvar	_divisor @ sp[(-10)+-16]
 11124  003C96  0EE6               	movlw	-26
 11125  003C98  50E3               	movf	plusw1,w,c
 11126  003C9A  E116               	bnz	u2450
 11127  003C9C  0EE7               	movlw	-25
 11128  003C9E  50E3               	movf	plusw1,w,c
 11129  003CA0  E113               	bnz	u2450
 11130  003CA2  0EE8               	movlw	-24
 11131  003CA4  50E3               	movf	plusw1,w,c
 11132  003CA6  E110               	bnz	u2450
 11133  003CA8  0EE9               	movlw	-23
 11134  003CAA  50E3               	movf	plusw1,w,c
 11135  003CAC  E10D               	bnz	u2450
 11136  003CAE  0EEA               	movlw	-22
 11137  003CB0  50E3               	movf	plusw1,w,c
 11138  003CB2  E10A               	bnz	u2450
 11139  003CB4  0EEB               	movlw	-21
 11140  003CB6  50E3               	movf	plusw1,w,c
 11141  003CB8  E107               	bnz	u2450
 11142  003CBA  0EEC               	movlw	-20
 11143  003CBC  50E3               	movf	plusw1,w,c
 11144  003CBE  E104               	bnz	u2450
 11145  003CC0  0EED               	movlw	-19
 11146  003CC2  50E3               	movf	plusw1,w,c
 11147  003CC4  B4D8               	btfsc	status,2,c
 11148  003CC6  D088               	goto	u2480
 11149  003CC8                     u2450:
 11150                           
 11151                           ;stkvar	_counter @ sp[(-10)+9]
 11152  003CC8  0EFF               	movlw	-1
 11153  003CCA  6AE3               	clrf	plusw1,c
 11154  003CCC  D012               	goto	L26
 11155  003CCE                     l5368:
 11156                           
 11157                           ;stkvar	_divisor @ sp[(-10)+-16]
 11158  003CCE  90D8               	bcf	status,0,c
 11159  003CD0  0EE6               	movlw	-26
 11160  003CD2  36E3               	rlcf	plusw1,f,c
 11161  003CD4  0EE7               	movlw	-25
 11162  003CD6  36E3               	rlcf	plusw1,f,c
 11163  003CD8  0EE8               	movlw	-24
 11164  003CDA  36E3               	rlcf	plusw1,f,c
 11165  003CDC  0EE9               	movlw	-23
 11166  003CDE  36E3               	rlcf	plusw1,f,c
 11167  003CE0  0EEA               	movlw	-22
 11168  003CE2  36E3               	rlcf	plusw1,f,c
 11169  003CE4  0EEB               	movlw	-21
 11170  003CE6  36E3               	rlcf	plusw1,f,c
 11171  003CE8  0EEC               	movlw	-20
 11172  003CEA  36E3               	rlcf	plusw1,f,c
 11173  003CEC  0EED               	movlw	-19
 11174  003CEE  36E3               	rlcf	plusw1,f,c
 11175                           
 11176                           ;stkvar	_counter @ sp[(-10)+9]
 11177  003CF0  0EFF               	movlw	-1
 11178  003CF2                     L26:
 11179  003CF2  2AE3               	incf	plusw1,f,c
 11180                           
 11181                           ;stkvar	_divisor @ sp[(-10)+-16]
 11182  003CF4  0EED               	movlw	-19
 11183  003CF6  AEE3               	btfss	plusw1,7,c
 11184  003CF8  D7EA               	goto	l5368
 11185  003CFA                     u2460:
 11186                           
 11187                           ;stkvar	_quotient @ sp[(-10)+0]
 11188  003CFA  90D8               	bcf	status,0,c
 11189  003CFC  0EF6               	movlw	-10
 11190  003CFE  36E3               	rlcf	plusw1,f,c
 11191  003D00  0EF7               	movlw	-9
 11192  003D02  36E3               	rlcf	plusw1,f,c
 11193  003D04  0EF8               	movlw	-8
 11194  003D06  36E3               	rlcf	plusw1,f,c
 11195  003D08  0EF9               	movlw	-7
 11196  003D0A  36E3               	rlcf	plusw1,f,c
 11197  003D0C  0EFA               	movlw	-6
 11198  003D0E  36E3               	rlcf	plusw1,f,c
 11199  003D10  0EFB               	movlw	-5
 11200  003D12  36E3               	rlcf	plusw1,f,c
 11201  003D14  0EFC               	movlw	-4
 11202  003D16  36E3               	rlcf	plusw1,f,c
 11203  003D18  0EFD               	movlw	-3
 11204  003D1A  36E3               	rlcf	plusw1,f,c
 11205                           
 11206                           ;stkvar	_divisor @ sp[(-10)+-16]
 11207                           ;stkvar	_dividend @ sp[(-10)+-8]
 11208  003D1C  50E1               	movf	fsr1l,w,c
 11209  003D1E  0FEE               	addlw	-18
 11210  003D20  6ED9               	movwf	fsr2l,c
 11211  003D22  50E2               	movf	fsr1h,w,c
 11212  003D24  6EDA               	movwf	fsr2h,c
 11213  003D26  0EFF               	movlw	255
 11214  003D28  22DA               	addwfc	fsr2h,f,c
 11215  003D2A  0EE6               	movlw	-26
 11216  003D2C  50E3               	movf	plusw1,w,c
 11217  003D2E  5CDE               	subwf	postinc2,w,c
 11218  003D30  0EE7               	movlw	-25
 11219  003D32  50E3               	movf	plusw1,w,c
 11220  003D34  58DE               	subwfb	postinc2,w,c
 11221  003D36  0EE8               	movlw	-24
 11222  003D38  50E3               	movf	plusw1,w,c
 11223  003D3A  58DE               	subwfb	postinc2,w,c
 11224  003D3C  0EE9               	movlw	-23
 11225  003D3E  50E3               	movf	plusw1,w,c
 11226  003D40  58DE               	subwfb	postinc2,w,c
 11227  003D42  0EEA               	movlw	-22
 11228  003D44  50E3               	movf	plusw1,w,c
 11229  003D46  58DE               	subwfb	postinc2,w,c
 11230  003D48  0EEB               	movlw	-21
 11231  003D4A  50E3               	movf	plusw1,w,c
 11232  003D4C  58DE               	subwfb	postinc2,w,c
 11233  003D4E  0EEC               	movlw	-20
 11234  003D50  50E3               	movf	plusw1,w,c
 11235  003D52  58DE               	subwfb	postinc2,w,c
 11236  003D54  0EED               	movlw	-19
 11237  003D56  50E3               	movf	plusw1,w,c
 11238  003D58  58DE               	subwfb	postinc2,w,c
 11239  003D5A  A0D8               	btfss	status,0,c
 11240  003D5C  D021               	goto	l5380
 11241                           
 11242                           ;stkvar	_divisor @ sp[(-10)+-16]
 11243                           ;stkvar	_dividend @ sp[(-10)+-8]
 11244  003D5E  50E1               	movf	fsr1l,w,c
 11245  003D60  0FEE               	addlw	-18
 11246  003D62  6ED9               	movwf	fsr2l,c
 11247  003D64  50E2               	movf	fsr1h,w,c
 11248  003D66  6EDA               	movwf	fsr2h,c
 11249  003D68  0EFF               	movlw	255
 11250  003D6A  22DA               	addwfc	fsr2h,f,c
 11251  003D6C  0EE6               	movlw	-26
 11252  003D6E  50E3               	movf	plusw1,w,c
 11253  003D70  5EDE               	subwf	postinc2,f,c
 11254  003D72  0EE7               	movlw	-25
 11255  003D74  50E3               	movf	plusw1,w,c
 11256  003D76  5ADE               	subwfb	postinc2,f,c
 11257  003D78  0EE8               	movlw	-24
 11258  003D7A  50E3               	movf	plusw1,w,c
 11259  003D7C  5ADE               	subwfb	postinc2,f,c
 11260  003D7E  0EE9               	movlw	-23
 11261  003D80  50E3               	movf	plusw1,w,c
 11262  003D82  5ADE               	subwfb	postinc2,f,c
 11263  003D84  0EEA               	movlw	-22
 11264  003D86  50E3               	movf	plusw1,w,c
 11265  003D88  5ADE               	subwfb	postinc2,f,c
 11266  003D8A  0EEB               	movlw	-21
 11267  003D8C  50E3               	movf	plusw1,w,c
 11268  003D8E  5ADE               	subwfb	postinc2,f,c
 11269  003D90  0EEC               	movlw	-20
 11270  003D92  50E3               	movf	plusw1,w,c
 11271  003D94  5ADE               	subwfb	postinc2,f,c
 11272  003D96  0EED               	movlw	-19
 11273  003D98  50E3               	movf	plusw1,w,c
 11274  003D9A  5ADE               	subwfb	postinc2,f,c
 11275                           
 11276                           ;stkvar	_quotient @ sp[(-10)+0]
 11277  003D9C  0EF6               	movlw	-10
 11278  003D9E  80E3               	bsf	plusw1,0,c
 11279  003DA0                     l5380:
 11280                           
 11281                           ;stkvar	_divisor @ sp[(-10)+-16]
 11282  003DA0  90D8               	bcf	status,0,c
 11283  003DA2  0EED               	movlw	-19
 11284  003DA4  32E3               	rrcf	plusw1,f,c
 11285  003DA6  0EEC               	movlw	-20
 11286  003DA8  32E3               	rrcf	plusw1,f,c
 11287  003DAA  0EEB               	movlw	-21
 11288  003DAC  32E3               	rrcf	plusw1,f,c
 11289  003DAE  0EEA               	movlw	-22
 11290  003DB0  32E3               	rrcf	plusw1,f,c
 11291  003DB2  0EE9               	movlw	-23
 11292  003DB4  32E3               	rrcf	plusw1,f,c
 11293  003DB6  0EE8               	movlw	-24
 11294  003DB8  32E3               	rrcf	plusw1,f,c
 11295  003DBA  0EE7               	movlw	-25
 11296  003DBC  32E3               	rrcf	plusw1,f,c
 11297  003DBE  0EE6               	movlw	-26
 11298  003DC0  32E3               	rrcf	plusw1,f,c
 11299                           
 11300                           ;stkvar	_counter @ sp[(-10)+9]
 11301  003DC2  0EFF               	movlw	-1
 11302  003DC4  50E3               	movf	plusw1,w,c
 11303  003DC6  6E3B               	movwf	btemp,c
 11304  003DC8  0E01               	movlw	1
 11305  003DCA  5E3B               	subwf	btemp,f,c
 11306  003DCC  0EFF               	movlw	-1
 11307  003DCE  0060  F0EF  FFE3   	movff	btemp,plusw1
 11308  003DD4  A4D8               	btfss	status,2,c
 11309  003DD6  D791               	goto	u2460
 11310  003DD8                     u2480:
 11311                           
 11312                           ;stkvar	_sign @ sp[(-10)+8]
 11313  003DD8  0EFE               	movlw	-2
 11314  003DDA  50E3               	movf	plusw1,w,c
 11315  003DDC  B4D8               	btfsc	status,2,c
 11316  003DDE  D025               	goto	u2500
 11317                           
 11318                           ;stkvar	_quotient @ sp[(-10)+0]
 11319                           ;stkvar	_quotient @ sp[(-10)+0]
 11320  003DE0  0EF6               	movlw	-10
 11321  003DE2  6CE3               	negf	plusw1,c
 11322  003DE4  0EF7               	movlw	-9
 11323  003DE6  1EE3               	comf	plusw1,f,c
 11324  003DE8  0EF8               	movlw	-8
 11325  003DEA  1EE3               	comf	plusw1,f,c
 11326  003DEC  0EF9               	movlw	-7
 11327  003DEE  1EE3               	comf	plusw1,f,c
 11328  003DF0  0EFA               	movlw	-6
 11329  003DF2  1EE3               	comf	plusw1,f,c
 11330  003DF4  0EFB               	movlw	-5
 11331  003DF6  1EE3               	comf	plusw1,f,c
 11332  003DF8  0EFC               	movlw	-4
 11333  003DFA  1EE3               	comf	plusw1,f,c
 11334  003DFC  0EFD               	movlw	-3
 11335  003DFE  1EE3               	comf	plusw1,f,c
 11336  003E00  E314               	bnc	u2500
 11337  003E02  0EF7               	movlw	-9
 11338  003E04  2AE3               	incf	plusw1,f,c
 11339  003E06  E311               	bnc	u2500
 11340  003E08  0EF8               	movlw	-8
 11341  003E0A  2AE3               	incf	plusw1,f,c
 11342  003E0C  E30E               	bnc	u2500
 11343  003E0E  0EF9               	movlw	-7
 11344  003E10  2AE3               	incf	plusw1,f,c
 11345  003E12  E30B               	bnc	u2500
 11346  003E14  0EFA               	movlw	-6
 11347  003E16  2AE3               	incf	plusw1,f,c
 11348  003E18  E308               	bnc	u2500
 11349  003E1A  0EFB               	movlw	-5
 11350  003E1C  2AE3               	incf	plusw1,f,c
 11351  003E1E  E305               	bnc	u2500
 11352  003E20  0EFC               	movlw	-4
 11353  003E22  2AE3               	incf	plusw1,f,c
 11354  003E24  E302               	bnc	u2500
 11355  003E26  0EFD               	movlw	-3
 11356  003E28  2AE3               	incf	plusw1,f,c
 11357  003E2A                     u2500:
 11358                           
 11359                           ;stkvar	_quotient @ sp[(-10)+0]
 11360  003E2A  0EF6               	movlw	246
 11361  003E2C  24E1               	addwf	fsr1l,w,c
 11362  003E2E  6ED9               	movwf	fsr2l,c
 11363  003E30  0EFF               	movlw	255
 11364  003E32  20E2               	addwfc	fsr1h,w,c
 11365  003E34  6EDA               	movwf	fsr2h,c
 11366                           
 11367                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 11368  003E36  0E08               	movlw	8
 11369  003E38  6E3B               	movwf	btemp,c
 11370  003E3A  0EEE               	movlw	-18
 11371  003E3C                     us251999:
 11372  003E3C  006F FF7B FFE3     	movff	postinc2,plusw1
 11373  003E42  28E8               	incf	wreg,w,c
 11374  003E44  2E3B               	decfsz	btemp,f,c
 11375  003E46  D7FA               	bra	us251999
 11376                           
 11377                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 11378  003E48  0EF6               	movlw	246
 11379  003E4A  26E1               	addwf	fsr1l,f,c
 11380  003E4C  0EFF               	movlw	255
 11381  003E4E  22E2               	addwfc	fsr1h,f,c
 11382  003E50  0012               	return		;funcret
 11383  003E52                     __end_of___aodiv:
 11384                           	opt callstack 0
 11385                           
 11386 ;; *************** function _ctoa *****************
 11387 ;; Defined at:
 11388 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11391 ;;		 -> f(5), NULL(0), 
 11392 ;;  c               1  [STACK] unsigned char 
 11393 ;; Auto vars:     Size  Location     Type
 11394 ;;  w               2  [STACK] int 
 11395 ;;  l               2    0        int 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  2  [STACK] int 
 11398 ;; Registers used:
 11399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11409 ;;Total ram usage:        0 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    8
 11412 ;; This function calls:
 11413 ;;		_pad
 11414 ;; This function is called by:
 11415 ;;		_vfpfcnvrt
 11416 ;; This function uses a reentrant model
 11417 ;;
 11418                           
 11419                           	psect	text46
 11420  0053AA                     __ptext46:
 11421                           	opt callstack 0
 11422  0053AA                     _ctoa:
 11423                           	opt callstack 0
 11424                           
 11425                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11426  0053AA  52E6               	movf	postinc1,f,c
 11427  0053AC  52E6               	movf	postinc1,f,c
 11428                           
 11429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 11430                           
 11431                           ;incstack = 0
 11432  0053AE  5020               	movf	_width,w,c
 11433  0053B0  1021               	iorwf	_width+1,w,c
 11434  0053B2  A4D8               	btfss	status,2,c
 11435  0053B4  D009               	goto	l7648
 11436                           
 11437                           ;stkvar	_w @ sp[(-2)+0]
 11438  0053B6  0EFE               	movlw	-2
 11439  0053B8  0060  F083  FFE3   	movff	_width,plusw1
 11440  0053BE  0EFF               	movlw	-1
 11441  0053C0  0060  F087  FFE3   	movff	_width+1,plusw1
 11442  0053C6  D016               	goto	l7650
 11443  0053C8                     l7648:
 11444  0053C8  0EFF               	movlw	255
 11445  0053CA  6E45               	movwf	btemp+10,c
 11446  0053CC  0EFF               	movlw	255
 11447  0053CE  6E46               	movwf	btemp+11,c
 11448  0053D0  0060  F080  F043   	movff	_width,btemp+8
 11449  0053D6  0060  F084  F044   	movff	_width+1,btemp+9
 11450  0053DC  5045               	movf	btemp+10,w,c
 11451  0053DE  2643               	addwf	btemp+8,f,c
 11452  0053E0  5046               	movf	btemp+11,w,c
 11453  0053E2  2244               	addwfc	btemp+9,f,c
 11454                           
 11455                           ;stkvar	_w @ sp[(-2)+0]
 11456  0053E4  0EFE               	movlw	-2
 11457  0053E6  0060  F10F  FFE3   	movff	btemp+8,plusw1
 11458  0053EC  0EFF               	movlw	-1
 11459  0053EE  0060  F113  FFE3   	movff	btemp+9,plusw1
 11460  0053F4                     l7650:
 11461                           
 11462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 11463                           ;stkvar	_c @ sp[(-2)+-3]
 11464  0053F4  0EFB               	movlw	-5
 11465  0053F6  006F FF8C  F1AF    	movff	plusw1,_dbuf
 11466                           
 11467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 11468  0053FC  0101               	movlb	1	; () banked
 11469  0053FE  6BB0               	clrf	(_dbuf+1)& (0+255),b
 11470                           
 11471                           ; BSR set to: 1
 11472                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 11473                           ;stkvar	_w @ sp[(-2)+0]
 11474  005400  0EFE               	movlw	-2
 11475  005402  006F FF8F FFE6     	movff	plusw1,postinc1
 11476  005408  006F FF8F FFE6     	movff	plusw1,postinc1
 11477  00540E  0EAF               	movlw	low _dbuf
 11478  005410  6EE6               	movwf	postinc1,c
 11479  005412  0E01               	movlw	high _dbuf
 11480  005414  6EE6               	movwf	postinc1,c
 11481                           
 11482                           ;stkvar	_fp @ sp[(-6)+-2]
 11483  005416  0EF8               	movlw	-8
 11484  005418  006F FF8F FFE6     	movff	plusw1,postinc1
 11485  00541E  006F FF8F FFE6     	movff	plusw1,postinc1
 11486  005424  EC9F  F024         	call	_pad	;wreg free
 11487                           
 11488                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 11489  005428  0EFB               	movlw	251
 11490  00542A  26E1               	addwf	fsr1l,f,c
 11491  00542C  0EFF               	movlw	255
 11492  00542E  22E2               	addwfc	fsr1h,f,c
 11493  005430  0012               	return		;funcret
 11494  005432                     __end_of_ctoa:
 11495                           	opt callstack 0
 11496                           
 11497 ;; *************** function _pad *****************
 11498 ;; Defined at:
 11499 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11500 ;; Parameters:    Size  Location     Type
 11501 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11502 ;;		 -> f(5), NULL(0), 
 11503 ;;  buf             2  [STACK] PTR unsigned char 
 11504 ;;		 -> dbuf(32), 
 11505 ;;  p               2  [STACK] int 
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;  w               2  [STACK] int 
 11508 ;;  i               2  [STACK] int 
 11509 ;; Return value:  Size  Location     Type
 11510 ;;                  2  [STACK] int 
 11511 ;; Registers used:
 11512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11513 ;; Tracked objects:
 11514 ;;		On entry : 0/1
 11515 ;;		On exit  : 0/0
 11516 ;;		Unchanged: 0/0
 11517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11522 ;;Total ram usage:        0 bytes
 11523 ;; Hardware stack levels used:    1
 11524 ;; Hardware stack levels required when called:    7
 11525 ;; This function calls:
 11526 ;;		_fputc
 11527 ;;		_fputs
 11528 ;;		_strlen
 11529 ;; This function is called by:
 11530 ;;		_ctoa
 11531 ;;		_dtoa
 11532 ;; This function uses a reentrant model
 11533 ;;
 11534                           
 11535                           	psect	text47
 11536  00493E                     __ptext47:
 11537                           	opt callstack 0
 11538  00493E                     _pad:
 11539                           	opt callstack 0
 11540                           
 11541                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11542  00493E  52E6               	movf	postinc1,f,c
 11543  004940  52E6               	movf	postinc1,f,c
 11544  004942  52E6               	movf	postinc1,f,c
 11545  004944  52E6               	movf	postinc1,f,c
 11546                           
 11547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 11548                           
 11549                           ;incstack = 0
 11550  004946  A024               	btfss	_flags,0,c
 11551  004948  D010               	goto	l7626
 11552                           
 11553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 11554                           ;stkvar	_fp @ sp[(-4)+-2]
 11555  00494A  0EFA               	movlw	-6
 11556  00494C  006F FF8F FFE6     	movff	plusw1,postinc1
 11557  004952  006F FF8F FFE6     	movff	plusw1,postinc1
 11558                           
 11559                           ;stkvar	_buf @ sp[(-6)+-4]
 11560  004958  0EF6               	movlw	-10
 11561  00495A  006F FF8F FFE6     	movff	plusw1,postinc1
 11562  004960  006F FF8F FFE6     	movff	plusw1,postinc1
 11563  004966  EC40  F029         	call	_fputs	;wreg free
 11564  00496A                     l7626:
 11565                           
 11566                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 11567                           ;stkvar	_p @ sp[(-4)+-6]
 11568  00496A  0EF7               	movlw	-9
 11569  00496C  BEE3               	btfsc	plusw1,7,c
 11570  00496E  D011               	goto	l7630
 11571                           
 11572                           ;stkvar	_p @ sp[(-4)+-6]
 11573                           ;stkvar	_w @ sp[(-4)+0]
 11574  004970  0EF6               	movlw	-10
 11575  004972  006F FF8C  F03B    	movff	plusw1,btemp
 11576  004978  0EFC               	movlw	-4
 11577  00497A  0060  F0EF  FFE3   	movff	btemp,plusw1
 11578  004980  0EF7               	movlw	-9
 11579  004982  006F FF8C  F03B    	movff	plusw1,btemp
 11580  004988  0EFD               	movlw	-3
 11581  00498A  0060  F0EF  FFE3   	movff	btemp,plusw1
 11582  004990  D004               	goto	l1794
 11583  004992                     l7630:
 11584                           
 11585                           ;stkvar	_w @ sp[(-4)+0]
 11586  004992  0EFC               	movlw	-4
 11587  004994  6AE3               	clrf	plusw1,c
 11588  004996  0EFD               	movlw	-3
 11589  004998  6AE3               	clrf	plusw1,c
 11590  00499A                     l1794:
 11591                           
 11592                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 11593                           ;stkvar	_i @ sp[(-4)+2]
 11594  00499A  0EFE               	movlw	-2
 11595  00499C  6AE3               	clrf	plusw1,c
 11596  00499E  0EFF               	movlw	-1
 11597  0049A0  6AE3               	clrf	plusw1,c
 11598                           
 11599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11600  0049A2  D01E               	goto	l7636
 11601  0049A4                     l7632:
 11602                           
 11603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 11604                           ;stkvar	_fp @ sp[(-4)+-2]
 11605  0049A4  0EFA               	movlw	-6
 11606  0049A6  006F FF8F FFE6     	movff	plusw1,postinc1
 11607  0049AC  006F FF8F FFE6     	movff	plusw1,postinc1
 11608  0049B2  0E20               	movlw	32
 11609  0049B4  6EE6               	movwf	postinc1,c
 11610  0049B6  0E00               	movlw	0
 11611  0049B8  6EE6               	movwf	postinc1,c
 11612  0049BA  EC29  F025         	call	_fputc	;wreg free
 11613                           
 11614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 11615                           ;stkvar	_i @ sp[(-4)+2]
 11616  0049BE  0EFE               	movlw	-2
 11617  0049C0  50E3               	movf	plusw1,w,c
 11618  0049C2  0F01               	addlw	1
 11619  0049C4  6E3B               	movwf	btemp,c
 11620  0049C6  0EFE               	movlw	-2
 11621  0049C8  0060  F0EF  FFE3   	movff	btemp,plusw1
 11622  0049CE  6A3B               	clrf	btemp,c
 11623  0049D0  0EFF               	movlw	-1
 11624  0049D2  50E3               	movf	plusw1,w,c
 11625  0049D4  203B               	addwfc	btemp,w,c
 11626  0049D6  6E3B               	movwf	btemp,c
 11627  0049D8  0EFF               	movlw	-1
 11628  0049DA  0060  F0EF  FFE3   	movff	btemp,plusw1
 11629  0049E0                     l7636:
 11630                           
 11631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11632                           ;stkvar	_w @ sp[(-4)+0]
 11633                           ;stkvar	_i @ sp[(-4)+2]
 11634  0049E0  50E1               	movf	fsr1l,w,c
 11635  0049E2  0FFE               	addlw	-2
 11636  0049E4  6ED9               	movwf	fsr2l,c
 11637  0049E6  50E2               	movf	fsr1h,w,c
 11638  0049E8  6EDA               	movwf	fsr2h,c
 11639  0049EA  0EFF               	movlw	255
 11640  0049EC  22DA               	addwfc	fsr2h,f,c
 11641  0049EE  0EFC               	movlw	-4
 11642  0049F0  50E3               	movf	plusw1,w,c
 11643  0049F2  5CDE               	subwf	postinc2,w,c
 11644  0049F4  50DE               	movf	postinc2,w,c
 11645  0049F6  0A80               	xorlw	128
 11646  0049F8  6E3B               	movwf	btemp,c
 11647  0049FA  0EFD               	movlw	-3
 11648  0049FC  50E3               	movf	plusw1,w,c
 11649  0049FE  0A80               	xorlw	128
 11650  004A00  583B               	subwfb	btemp,w,c
 11651  004A02  A0D8               	btfss	status,0,c
 11652  004A04  D7CF               	goto	l7632
 11653                           
 11654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 11655  004A06  B024               	btfsc	_flags,0,c
 11656  004A08  D010               	goto	l7640
 11657                           
 11658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 11659                           ;stkvar	_fp @ sp[(-4)+-2]
 11660  004A0A  0EFA               	movlw	-6
 11661  004A0C  006F FF8F FFE6     	movff	plusw1,postinc1
 11662  004A12  006F FF8F FFE6     	movff	plusw1,postinc1
 11663                           
 11664                           ;stkvar	_buf @ sp[(-6)+-4]
 11665  004A18  0EF6               	movlw	-10
 11666  004A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 11667  004A20  006F FF8F FFE6     	movff	plusw1,postinc1
 11668  004A26  EC40  F029         	call	_fputs	;wreg free
 11669  004A2A                     l7640:
 11670                           
 11671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 11672                           ;stkvar	_w @ sp[(-4)+0]
 11673                           ;stkvar	_buf @ sp[(-4)+-4]
 11674  004A2A  0EF8               	movlw	-8
 11675  004A2C  006F FF8F FFE6     	movff	plusw1,postinc1
 11676  004A32  006F FF8F FFE6     	movff	plusw1,postinc1
 11677  004A38  EC06  F028         	call	_strlen	;wreg free
 11678  004A3C  0EFC               	movlw	-4
 11679  004A3E  50E3               	movf	plusw1,w,c
 11680  004A40  263B               	addwf	btemp,f,c
 11681  004A42  0EFD               	movlw	-3
 11682  004A44  50E3               	movf	plusw1,w,c
 11683  004A46  223C               	addwfc	btemp+1,f,c
 11684                           
 11685                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 11686  004A48  0EF6               	movlw	246
 11687  004A4A  26E1               	addwf	fsr1l,f,c
 11688  004A4C  0EFF               	movlw	255
 11689  004A4E  22E2               	addwfc	fsr1h,f,c
 11690  004A50  0012               	return		;funcret
 11691  004A52                     __end_of_pad:
 11692                           	opt callstack 0
 11693                           
 11694 ;; *************** function _strlen *****************
 11695 ;; Defined at:
 11696 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 11697 ;; Parameters:    Size  Location     Type
 11698 ;;  s               2  [STACK] PTR const unsigned char 
 11699 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11700 ;;		 -> STR_3(6), V(89), 
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;  a               2  [STACK] PTR const unsigned char 
 11703 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11704 ;;		 -> STR_3(6), V(89), 
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  2  [STACK] unsigned int 
 11707 ;; Registers used:
 11708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11718 ;;Total ram usage:        0 bytes
 11719 ;; Hardware stack levels used:    1
 11720 ;; Hardware stack levels required when called:    3
 11721 ;; This function calls:
 11722 ;;		Nothing
 11723 ;; This function is called by:
 11724 ;;		_eaDogM_WriteString
 11725 ;;		_pad
 11726 ;;		_stoa
 11727 ;; This function uses a reentrant model
 11728 ;;
 11729                           
 11730                           	psect	text48
 11731  00500C                     __ptext48:
 11732                           	opt callstack 0
 11733  00500C                     _strlen:
 11734                           	opt callstack 0
 11735                           
 11736                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11737  00500C  52E6               	movf	postinc1,f,c
 11738  00500E  52E6               	movf	postinc1,f,c
 11739                           
 11740                           ;stkvar	_s @ sp[(-2)+-2]
 11741                           
 11742                           ;incstack = 0
 11743  005010  0EFC               	movlw	-4
 11744  005012  006F FF8C  F045    	movff	plusw1,btemp+10
 11745  005018  0EFD               	movlw	-3
 11746  00501A  006F FF8C  F046    	movff	plusw1,btemp+11
 11747                           
 11748                           ;stkvar	_a @ sp[(-2)+0]
 11749  005020  0EFF               	movlw	-1
 11750  005022  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11751  005028  0EFE               	movlw	-2
 11752  00502A  0060  F117  FFE3   	movff	btemp+10,plusw1
 11753  005030  D011               	goto	l5304
 11754  005032                     l5302:
 11755                           
 11756                           ;stkvar	_s @ sp[(-2)+-2]
 11757  005032  0EFC               	movlw	-4
 11758  005034  50E3               	movf	plusw1,w,c
 11759  005036  0F01               	addlw	1
 11760  005038  6E3B               	movwf	btemp,c
 11761  00503A  0EFC               	movlw	-4
 11762  00503C  0060  F0EF  FFE3   	movff	btemp,plusw1
 11763  005042  6A3B               	clrf	btemp,c
 11764  005044  0EFD               	movlw	-3
 11765  005046  50E3               	movf	plusw1,w,c
 11766  005048  203B               	addwfc	btemp,w,c
 11767  00504A  6E3B               	movwf	btemp,c
 11768  00504C  0EFD               	movlw	-3
 11769  00504E  0060  F0EF  FFE3   	movff	btemp,plusw1
 11770  005054                     l5304:
 11771                           
 11772                           ;stkvar	_s @ sp[(-2)+-2]
 11773  005054  0EFC               	movlw	-4
 11774  005056  006F FF8F FFF6     	movff	plusw1,tblptrl
 11775  00505C  0EFD               	movlw	-3
 11776  00505E  006F FF8F FFF7     	movff	plusw1,tblptrh
 11777  005064  0E00               	movlw	low (__smallconst shr (0+16))
 11778  005066  6EF8               	movwf	tblptru,c
 11779  005068  0E1F               	movlw	(high __ramtop+-1)
 11780  00506A  64F7               	cpfsgt	tblptrh,c
 11781  00506C  D003               	bra	u2327
 11782  00506E  0008               	tblrd		*
 11783  005070  50F5               	movf	tablat,w,c
 11784  005072  D007               	bra	u2320
 11785  005074                     u2327:
 11786  005074  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11787  00507A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11788  005080  50EF               	movf	indf0,w,c
 11789  005082                     u2320:
 11790  005082  0900               	iorlw	0
 11791  005084  A4D8               	btfss	status,2,c
 11792  005086  D7D5               	goto	l5302
 11793                           
 11794                           ;stkvar	_a @ sp[(-2)+0]
 11795                           ;stkvar	_s @ sp[(-2)+-2]
 11796  005088  0EFC               	movlw	-4
 11797  00508A  006F FF8C  F03B    	movff	plusw1,btemp
 11798  005090  0EFD               	movlw	-3
 11799  005092  006F FF8C  F03C    	movff	plusw1,btemp+1
 11800  005098  0EFE               	movlw	-2
 11801  00509A  50E3               	movf	plusw1,w,c
 11802  00509C  5E3B               	subwf	btemp,f,c
 11803  00509E  0EFF               	movlw	-1
 11804  0050A0  50E3               	movf	plusw1,w,c
 11805  0050A2  5A3C               	subwfb	btemp+1,f,c
 11806                           
 11807                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11808  0050A4  52E5               	movf	postdec1,f,c
 11809  0050A6  52E5               	movf	postdec1,f,c
 11810  0050A8  52E5               	movf	postdec1,f,c
 11811  0050AA  52E5               	movf	postdec1,f,c
 11812  0050AC  0012               	return		;funcret
 11813  0050AE                     __end_of_strlen:
 11814                           	opt callstack 0
 11815                           
 11816 ;; *************** function _fputs *****************
 11817 ;; Defined at:
 11818 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;  s               2  [STACK] PTR const unsigned char 
 11821 ;;		 -> dbuf(32), 
 11822 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11823 ;;		 -> f(5), NULL(0), 
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;  i               2  [STACK] int 
 11826 ;;  c               1  [STACK] unsigned char 
 11827 ;; Return value:  Size  Location     Type
 11828 ;;                  2  [STACK] int 
 11829 ;; Registers used:
 11830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11831 ;; Tracked objects:
 11832 ;;		On entry : 0/1
 11833 ;;		On exit  : 0/0
 11834 ;;		Unchanged: 0/0
 11835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11840 ;;Total ram usage:        0 bytes
 11841 ;; Hardware stack levels used:    1
 11842 ;; Hardware stack levels required when called:    6
 11843 ;; This function calls:
 11844 ;;		_fputc
 11845 ;; This function is called by:
 11846 ;;		_pad
 11847 ;; This function uses a reentrant model
 11848 ;;
 11849                           
 11850                           	psect	text49
 11851  005280                     __ptext49:
 11852                           	opt callstack 0
 11853  005280                     _fputs:
 11854                           	opt callstack 0
 11855                           
 11856                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11857  005280  52E6               	movf	postinc1,f,c
 11858  005282  52E6               	movf	postinc1,f,c
 11859  005284  52E6               	movf	postinc1,f,c
 11860                           
 11861                           ;stkvar	_i @ sp[(-3)+0]
 11862                           
 11863                           ;incstack = 0
 11864  005286  0EFD               	movlw	-3
 11865  005288  6AE3               	clrf	plusw1,c
 11866  00528A  0EFE               	movlw	-2
 11867  00528C  6AE3               	clrf	plusw1,c
 11868  00528E  D01F               	goto	l7620
 11869  005290                     l7616:
 11870                           
 11871                           ;stkvar	_fp @ sp[(-3)+-4]
 11872  005290  0EF9               	movlw	-7
 11873  005292  006F FF8F FFE6     	movff	plusw1,postinc1
 11874  005298  006F FF8F FFE6     	movff	plusw1,postinc1
 11875                           
 11876                           ;stkvar	_c @ sp[(-5)+2]
 11877  00529E  0EFD               	movlw	-3
 11878  0052A0  50E3               	movf	plusw1,w,c
 11879  0052A2  6EE6               	movwf	postinc1,c
 11880  0052A4  0E00               	movlw	0
 11881  0052A6  6EE6               	movwf	postinc1,c
 11882  0052A8  EC29  F025         	call	_fputc	;wreg free
 11883                           
 11884                           ;stkvar	_i @ sp[(-3)+0]
 11885  0052AC  0EFD               	movlw	-3
 11886  0052AE  50E3               	movf	plusw1,w,c
 11887  0052B0  0F01               	addlw	1
 11888  0052B2  6E3B               	movwf	btemp,c
 11889  0052B4  0EFD               	movlw	-3
 11890  0052B6  0060  F0EF  FFE3   	movff	btemp,plusw1
 11891  0052BC  6A3B               	clrf	btemp,c
 11892  0052BE  0EFE               	movlw	-2
 11893  0052C0  50E3               	movf	plusw1,w,c
 11894  0052C2  203B               	addwfc	btemp,w,c
 11895  0052C4  6E3B               	movwf	btemp,c
 11896  0052C6  0EFE               	movlw	-2
 11897  0052C8  0060  F0EF  FFE3   	movff	btemp,plusw1
 11898  0052CE                     l7620:
 11899                           
 11900                           ;stkvar	_i @ sp[(-3)+0]
 11901  0052CE  0EFD               	movlw	-3
 11902  0052D0  006F FF8C  F045    	movff	plusw1,btemp+10
 11903  0052D6  0EFE               	movlw	-2
 11904  0052D8  006F FF8C  F046    	movff	plusw1,btemp+11
 11905                           
 11906                           ;stkvar	_s @ sp[(-3)+-2]
 11907  0052DE  0EFB               	movlw	-5
 11908  0052E0  006F FF8C  F043    	movff	plusw1,btemp+8
 11909  0052E6  0EFC               	movlw	-4
 11910  0052E8  006F FF8C  F044    	movff	plusw1,btemp+9
 11911  0052EE  5045               	movf	btemp+10,w,c
 11912  0052F0  2443               	addwf	btemp+8,w,c
 11913  0052F2  6ED9               	movwf	fsr2l,c
 11914  0052F4  5046               	movf	btemp+11,w,c
 11915  0052F6  2044               	addwfc	btemp+9,w,c
 11916  0052F8  6EDA               	movwf	fsr2h,c
 11917  0052FA  50DF               	movf	indf2,w,c
 11918  0052FC  6E46               	movwf	btemp+11,c
 11919                           
 11920                           ;stkvar	_c @ sp[(-3)+2]
 11921  0052FE  0EFF               	movlw	-1
 11922  005300  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11923  005306  0EFF               	movlw	-1
 11924  005308  50E3               	movf	plusw1,w,c
 11925  00530A  A4D8               	btfss	status,2,c
 11926  00530C  D7C1               	goto	l7616
 11927                           
 11928                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11929  00530E  0EF9               	movlw	249
 11930  005310  26E1               	addwf	fsr1l,f,c
 11931  005312  0EFF               	movlw	255
 11932  005314  22E2               	addwfc	fsr1h,f,c
 11933  005316  0012               	return		;funcret
 11934  005318                     __end_of_fputs:
 11935                           	opt callstack 0
 11936                           
 11937 ;; *************** function _fputc *****************
 11938 ;; Defined at:
 11939 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  c               2  [STACK] int 
 11942 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11943 ;;		 -> f(5), NULL(0), 
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;		None
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  2  [STACK] int 
 11948 ;; Registers used:
 11949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11959 ;;Total ram usage:        0 bytes
 11960 ;; Hardware stack levels used:    1
 11961 ;; Hardware stack levels required when called:    5
 11962 ;; This function calls:
 11963 ;;		_putch
 11964 ;; This function is called by:
 11965 ;;		_pad
 11966 ;;		_stoa
 11967 ;;		_vfpfcnvrt
 11968 ;;		_fputs
 11969 ;; This function uses a reentrant model
 11970 ;;
 11971                           
 11972                           	psect	text50
 11973  004A52                     __ptext50:
 11974                           	opt callstack 0
 11975  004A52                     _fputc:
 11976                           	opt callstack 21
 11977                           
 11978                           ;stkvar	_fp @ sp[(0)+-4]
 11979                           
 11980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11981                           ;incstack = 0
 11982  004A52  0EFC               	movlw	-4
 11983  004A54  006F FF8C  F03B    	movff	plusw1,btemp
 11984  004A5A  0EFD               	movlw	-3
 11985  004A5C  50E3               	movf	plusw1,w,c
 11986  004A5E  103B               	iorwf	btemp,w,c
 11987  004A60  B4D8               	btfsc	status,2,c
 11988  004A62  D009               	goto	u4420
 11989                           
 11990                           ;stkvar	_fp @ sp[(0)+-4]
 11991  004A64  0EFC               	movlw	-4
 11992  004A66  006F FF8C  F03B    	movff	plusw1,btemp
 11993  004A6C  0EFD               	movlw	-3
 11994  004A6E  50E3               	movf	plusw1,w,c
 11995  004A70  103B               	iorwf	btemp,w,c
 11996  004A72  A4D8               	btfss	status,2,c
 11997  004A74  D006               	goto	l7606
 11998  004A76                     u4420:
 11999                           
 12000                           ;stkvar	_c @ sp[(0)+-2]
 12001  004A76  0EFE               	movlw	-2
 12002  004A78  50E3               	movf	plusw1,w,c
 12003  004A7A  6EE6               	movwf	postinc1,c
 12004  004A7C  EC49  F030         	call	_putch	;wreg free
 12005  004A80  D069               	goto	l2577
 12006  004A82                     l7606:
 12007                           
 12008                           ;stkvar	_fp @ sp[(0)+-4]
 12009  004A82  0EFC               	movlw	-4
 12010  004A84  006F FF8C  F045    	movff	plusw1,btemp+10
 12011  004A8A  0EFD               	movlw	-3
 12012  004A8C  006F FF8C  F046    	movff	plusw1,btemp+11
 12013  004A92  0E03               	movlw	3
 12014  004A94  2445               	addwf	btemp+10,w,c
 12015  004A96  6ED9               	movwf	fsr2l,c
 12016  004A98  0E00               	movlw	0
 12017  004A9A  2046               	addwfc	btemp+11,w,c
 12018  004A9C  6EDA               	movwf	fsr2h,c
 12019  004A9E  50DE               	movf	postinc2,w,c
 12020  004AA0  10DE               	iorwf	postinc2,w,c
 12021  004AA2  B4D8               	btfsc	status,2,c
 12022  004AA4  D026               	goto	u4440
 12023                           
 12024                           ;stkvar	_fp @ sp[(0)+-4]
 12025  004AA6  0EFC               	movlw	-4
 12026  004AA8  006F FF8C  F045    	movff	plusw1,btemp+10
 12027  004AAE  0EFD               	movlw	-3
 12028  004AB0  006F FF8C  F046    	movff	plusw1,btemp+11
 12029  004AB6  0E03               	movlw	3
 12030  004AB8  2445               	addwf	btemp+10,w,c
 12031  004ABA  6ED9               	movwf	fsr2l,c
 12032  004ABC  0E00               	movlw	0
 12033  004ABE  2046               	addwfc	btemp+11,w,c
 12034  004AC0  6EDA               	movwf	fsr2h,c
 12035                           
 12036                           ;stkvar	_fp @ sp[(0)+-4]
 12037  004AC2  0EFC               	movlw	-4
 12038  004AC4  006F FF8C  F045    	movff	plusw1,btemp+10
 12039  004ACA  0EFD               	movlw	-3
 12040  004ACC  006F FF8C  F046    	movff	plusw1,btemp+11
 12041  004AD2  0E01               	movlw	1
 12042  004AD4  2445               	addwf	btemp+10,w,c
 12043  004AD6  6EE9               	movwf	fsr0l,c
 12044  004AD8  0E00               	movlw	0
 12045  004ADA  2046               	addwfc	btemp+11,w,c
 12046  004ADC  6EEA               	movwf	fsr0h,c
 12047  004ADE  50DE               	movf	postinc2,w,c
 12048  004AE0  5CEE               	subwf	postinc0,w,c
 12049  004AE2  50EE               	movf	postinc0,w,c
 12050  004AE4  0A80               	xorlw	128
 12051  004AE6  6E3B               	movwf	btemp,c
 12052  004AE8  50DE               	movf	postinc2,w,c
 12053  004AEA  0A80               	xorlw	128
 12054  004AEC  583B               	subwfb	btemp,w,c
 12055  004AEE  B0D8               	btfsc	status,0,c
 12056  004AF0  D031               	goto	l2577
 12057  004AF2                     u4440:
 12058                           
 12059                           ;stkvar	_c @ sp[(0)+-2]
 12060                           ;stkvar	_fp @ sp[(0)+-4]
 12061  004AF2  0EFC               	movlw	-4
 12062  004AF4  006F FF8C  F045    	movff	plusw1,btemp+10
 12063  004AFA  0EFD               	movlw	-3
 12064  004AFC  006F FF8C  F046    	movff	plusw1,btemp+11
 12065  004B02  0E01               	movlw	1
 12066  004B04  2445               	addwf	btemp+10,w,c
 12067  004B06  6ED9               	movwf	fsr2l,c
 12068  004B08  0E00               	movlw	0
 12069  004B0A  2046               	addwfc	btemp+11,w,c
 12070  004B0C  6EDA               	movwf	fsr2h,c
 12071  004B0E  50DF               	movf	indf2,w,c
 12072  004B10  6E46               	movwf	btemp+11,c
 12073                           
 12074                           ;stkvar	_fp @ sp[(0)+-4]
 12075  004B12  0EFC               	movlw	-4
 12076  004B14  006F FF8F FFD9     	movff	plusw1,fsr2l
 12077  004B1A  0EFD               	movlw	-3
 12078  004B1C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12079  004B22  50DF               	movf	indf2,w,c
 12080  004B24  2446               	addwf	btemp+11,w,c
 12081  004B26  6ED9               	movwf	fsr2l,c
 12082  004B28  6ADA               	clrf	fsr2h,c
 12083  004B2A  0EFE               	movlw	-2
 12084  004B2C  006F FF8F FFDF     	movff	plusw1,indf2
 12085                           
 12086                           ;stkvar	_fp @ sp[(0)+-4]
 12087  004B32  0EFC               	movlw	-4
 12088  004B34  006F FF8C  F045    	movff	plusw1,btemp+10
 12089  004B3A  0EFD               	movlw	-3
 12090  004B3C  006F FF8C  F046    	movff	plusw1,btemp+11
 12091  004B42  0E01               	movlw	1
 12092  004B44  2445               	addwf	btemp+10,w,c
 12093  004B46  6ED9               	movwf	fsr2l,c
 12094  004B48  0E00               	movlw	0
 12095  004B4A  2046               	addwfc	btemp+11,w,c
 12096  004B4C  6EDA               	movwf	fsr2h,c
 12097  004B4E  2ADE               	incf	postinc2,f,c
 12098  004B50  0E00               	movlw	0
 12099  004B52  22DD               	addwfc	postdec2,f,c
 12100  004B54                     l2577:
 12101                           
 12102                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12103  004B54  52E5               	movf	postdec1,f,c
 12104  004B56  52E5               	movf	postdec1,f,c
 12105  004B58  52E5               	movf	postdec1,f,c
 12106  004B5A  52E5               	movf	postdec1,f,c
 12107  004B5C  0012               	return		;funcret
 12108  004B5E                     __end_of_fputc:
 12109                           	opt callstack 0
 12110                           
 12111 ;; *************** function _putch *****************
 12112 ;; Defined at:
 12113 ;;		line 138 in file "eadog.c"
 12114 ;; Parameters:    Size  Location     Type
 12115 ;;  c               1  [STACK] unsigned char 
 12116 ;; Auto vars:     Size  Location     Type
 12117 ;;		None
 12118 ;; Return value:  Size  Location     Type
 12119 ;;                  1  [STACK] void 
 12120 ;; Registers used:
 12121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12122 ;; Tracked objects:
 12123 ;;		On entry : 0/0
 12124 ;;		On exit  : 0/0
 12125 ;;		Unchanged: 0/0
 12126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12131 ;;Total ram usage:        0 bytes
 12132 ;; Hardware stack levels used:    1
 12133 ;; Hardware stack levels required when called:    4
 12134 ;; This function calls:
 12135 ;;		_ringBufS_put_dma
 12136 ;; This function is called by:
 12137 ;;		_fputc
 12138 ;; This function uses a reentrant model
 12139 ;;
 12140                           
 12141                           	psect	text51
 12142  006092                     __ptext51:
 12143                           	opt callstack 0
 12144  006092                     _putch:
 12145                           	opt callstack 21
 12146                           
 12147                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 12148                           ;stkvar	_c @ sp[(0)+-1]
 12149                           
 12150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12151                           ;incstack = 0
 12152  006092  0EFF               	movlw	-1
 12153  006094  50E3               	movf	plusw1,w,c
 12154  006096  6EE6               	movwf	postinc1,c
 12155  006098  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
 12156  00609E  0060  F353  FFE6   	movff	_spi_link+7,postinc1
 12157  0060A4  ECB1  F027         	call	_ringBufS_put_dma	;wreg free
 12158                           
 12159                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 12160  0060A8  52E5               	movf	postdec1,f,c
 12161  0060AA  0012               	return		;funcret
 12162  0060AC                     __end_of_putch:
 12163                           	opt callstack 0
 12164                           
 12165 ;; *************** function _ringBufS_put_dma *****************
 12166 ;; Defined at:
 12167 ;;		line 67 in file "ringbufs.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12170 ;;		 -> ring_buf1(67), 
 12171 ;;  c               1  [STACK] const unsigned char 
 12172 ;; Auto vars:     Size  Location     Type
 12173 ;;		None
 12174 ;; Return value:  Size  Location     Type
 12175 ;;                  1  [STACK] void 
 12176 ;; Registers used:
 12177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12178 ;; Tracked objects:
 12179 ;;		On entry : 0/0
 12180 ;;		On exit  : 0/0
 12181 ;;		Unchanged: 0/0
 12182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12187 ;;Total ram usage:        0 bytes
 12188 ;; Hardware stack levels used:    1
 12189 ;; Hardware stack levels required when called:    3
 12190 ;; This function calls:
 12191 ;;		Nothing
 12192 ;; This function is called by:
 12193 ;;		_putch
 12194 ;; This function uses a reentrant model
 12195 ;;
 12196                           
 12197                           	psect	text52
 12198  004F62                     __ptext52:
 12199                           	opt callstack 0
 12200  004F62                     _ringBufS_put_dma:
 12201                           	opt callstack 21
 12202                           
 12203                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 12204                           ;stkvar	__this @ sp[(0)+-2]
 12205                           
 12206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12207                           ;incstack = 0
 12208  004F62  0EFE               	movlw	-2
 12209  004F64  006F FF8C  F045    	movff	plusw1,btemp+10
 12210  004F6A  0EFF               	movlw	-1
 12211  004F6C  006F FF8C  F046    	movff	plusw1,btemp+11
 12212  004F72  0E42               	movlw	66
 12213  004F74  2445               	addwf	btemp+10,w,c
 12214  004F76  6ED9               	movwf	fsr2l,c
 12215  004F78  0E00               	movlw	0
 12216  004F7A  2046               	addwfc	btemp+11,w,c
 12217  004F7C  6EDA               	movwf	fsr2h,c
 12218  004F7E  0E40               	movlw	64
 12219  004F80  60DF               	cpfslt	indf2,c
 12220  004F82  D040               	goto	l1477
 12221                           
 12222                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 12223                           ;stkvar	_c @ sp[(0)+-3]
 12224                           ;stkvar	__this @ sp[(0)+-2]
 12225  004F84  0EFE               	movlw	-2
 12226  004F86  006F FF8C  F045    	movff	plusw1,btemp+10
 12227  004F8C  0EFF               	movlw	-1
 12228  004F8E  006F FF8C  F046    	movff	plusw1,btemp+11
 12229  004F94  0E40               	movlw	64
 12230  004F96  2445               	addwf	btemp+10,w,c
 12231  004F98  6ED9               	movwf	fsr2l,c
 12232  004F9A  0E00               	movlw	0
 12233  004F9C  2046               	addwfc	btemp+11,w,c
 12234  004F9E  6EDA               	movwf	fsr2h,c
 12235  004FA0  50DF               	movf	indf2,w,c
 12236  004FA2  6E46               	movwf	btemp+11,c
 12237                           
 12238                           ;stkvar	__this @ sp[(0)+-2]
 12239  004FA4  0EFE               	movlw	-2
 12240  004FA6  006F FF8C  F043    	movff	plusw1,btemp+8
 12241  004FAC  0EFF               	movlw	-1
 12242  004FAE  006F FF8C  F044    	movff	plusw1,btemp+9
 12243  004FB4  5046               	movf	btemp+11,w,c
 12244  004FB6  2443               	addwf	btemp+8,w,c
 12245  004FB8  6ED9               	movwf	fsr2l,c
 12246  004FBA  0E00               	movlw	0
 12247  004FBC  2044               	addwfc	btemp+9,w,c
 12248  004FBE  6EDA               	movwf	fsr2h,c
 12249  004FC0  0EFD               	movlw	-3
 12250  004FC2  006F FF8F FFDF     	movff	plusw1,indf2
 12251                           
 12252                           ;ringbufs.c: 71:   ++_this->head;
 12253                           ;stkvar	__this @ sp[(0)+-2]
 12254  004FC8  0EFE               	movlw	-2
 12255  004FCA  006F FF8C  F045    	movff	plusw1,btemp+10
 12256  004FD0  0EFF               	movlw	-1
 12257  004FD2  006F FF8C  F046    	movff	plusw1,btemp+11
 12258  004FD8  0E40               	movlw	64
 12259  004FDA  2445               	addwf	btemp+10,w,c
 12260  004FDC  6ED9               	movwf	fsr2l,c
 12261  004FDE  0E00               	movlw	0
 12262  004FE0  2046               	addwfc	btemp+11,w,c
 12263  004FE2  6EDA               	movwf	fsr2h,c
 12264  004FE4  2ADF               	incf	indf2,f,c
 12265                           
 12266                           ;ringbufs.c: 72:   ++_this->count;
 12267                           ;stkvar	__this @ sp[(0)+-2]
 12268  004FE6  0EFE               	movlw	-2
 12269  004FE8  006F FF8C  F045    	movff	plusw1,btemp+10
 12270  004FEE  0EFF               	movlw	-1
 12271  004FF0  006F FF8C  F046    	movff	plusw1,btemp+11
 12272  004FF6  0E42               	movlw	66
 12273  004FF8  2445               	addwf	btemp+10,w,c
 12274  004FFA  6ED9               	movwf	fsr2l,c
 12275  004FFC  0E00               	movlw	0
 12276  004FFE  2046               	addwfc	btemp+11,w,c
 12277  005000  6EDA               	movwf	fsr2h,c
 12278  005002  2ADF               	incf	indf2,f,c
 12279  005004                     l1477:
 12280                           
 12281                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12282  005004  52E5               	movf	postdec1,f,c
 12283  005006  52E5               	movf	postdec1,f,c
 12284  005008  52E5               	movf	postdec1,f,c
 12285  00500A  0012               	return		;funcret
 12286  00500C                     __end_of_ringBufS_put_dma:
 12287                           	opt callstack 0
 12288                           
 12289 ;; *************** function _SYSTEM_Initialize *****************
 12290 ;; Defined at:
 12291 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;		None
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;		None
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  1  [STACK] void 
 12298 ;; Registers used:
 12299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 3F/3C
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12309 ;;Total ram usage:        0 bytes
 12310 ;; Hardware stack levels used:    1
 12311 ;; Hardware stack levels required when called:    5
 12312 ;; This function calls:
 12313 ;;		_ADCC_Initialize
 12314 ;;		_CLC1_Initialize
 12315 ;;		_CLKREF_Initialize
 12316 ;;		_DMA1_Initialize
 12317 ;;		_DSM_Initialize
 12318 ;;		_EXT_INT_Initialize
 12319 ;;		_INTERRUPT_Initialize
 12320 ;;		_NCO1_Initialize
 12321 ;;		_OSCILLATOR_Initialize
 12322 ;;		_PIN_MANAGER_Initialize
 12323 ;;		_PMD_Initialize
 12324 ;;		_SPI1_Initialize
 12325 ;;		_TMR5_Initialize
 12326 ;;		_TMR6_Initialize
 12327 ;;		_UART1_Initialize
 12328 ;;		_UART2_Initialize
 12329 ;; This function is called by:
 12330 ;;		_main
 12331 ;; This function uses a reentrant model
 12332 ;;
 12333                           
 12334                           	psect	text53
 12335  005898                     __ptext53:
 12336                           	opt callstack 0
 12337  005898                     _SYSTEM_Initialize:
 12338                           	opt callstack 25
 12339                           
 12340                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12341                           
 12342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12343                           ;incstack = 0
 12344  005898  EC4E  F02A         	call	_INTERRUPT_Initialize	;wreg free
 12345                           
 12346                           ; BSR set to: 57
 12347                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12348  00589C  EC86  F030         	call	_PMD_Initialize	;wreg free
 12349                           
 12350                           ; BSR set to: 57
 12351                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12352  0058A0  EC57  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 12353                           
 12354                           ; BSR set to: 58
 12355                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12356  0058A4  EC7B  F030         	call	_OSCILLATOR_Initialize	;wreg free
 12357                           
 12358                           ; BSR set to: 57
 12359                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12360  0058A8  ECBE  F02B         	call	_ADCC_Initialize	;wreg free
 12361                           
 12362                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 12363  0058AC  EC2D  F030         	call	_NCO1_Initialize	;wreg free
 12364                           
 12365                           ; BSR set to: 63
 12366                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12367  0058B0  EC98  F02B         	call	_EXT_INT_Initialize	;wreg free
 12368                           
 12369                           ; BSR set to: 57
 12370                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 12371  0058B4  EC9B  F02E         	call	_TMR6_Initialize	;wreg free
 12372                           
 12373                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 12374  0058B8  ECAC  F02F         	call	_CLC1_Initialize	;wreg free
 12375                           
 12376                           ; BSR set to: 60
 12377                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 12378  0058BC  EC06  F02C         	call	_TMR5_Initialize	;wreg free
 12379                           
 12380                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 12381  0058C0  EC3B  F030         	call	_DSM_Initialize	;wreg free
 12382                           
 12383                           ; BSR set to: 60
 12384                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 12385  0058C4  EC81  F02A         	call	_UART1_Initialize	;wreg free
 12386                           
 12387                           ; BSR set to: 57
 12388                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 12389  0058C8  EC14  F02B         	call	_UART2_Initialize	;wreg free
 12390                           
 12391                           ; BSR set to: 57
 12392                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 12393  0058CC  EC70  F030         	call	_SPI1_Initialize	;wreg free
 12394                           
 12395                           ; BSR set to: 61
 12396                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 12397  0058D0  EC19  F02A         	call	_DMA1_Initialize	;wreg free
 12398                           
 12399                           ; BSR set to: 59
 12400                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 12401  0058D4  ECB7  F030         	call	_CLKREF_Initialize	;wreg free
 12402                           
 12403                           ; BSR set to: 60
 12404                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12405  0058D8  0012               	return		;funcret
 12406  0058DA                     __end_of_SYSTEM_Initialize:
 12407                           	opt callstack 0
 12408                           
 12409 ;; *************** function _UART2_Initialize *****************
 12410 ;; Defined at:
 12411 ;;		line 78 in file "mcc_generated_files/uart2.c"
 12412 ;; Parameters:    Size  Location     Type
 12413 ;;		None
 12414 ;; Auto vars:     Size  Location     Type
 12415 ;;		None
 12416 ;; Return value:  Size  Location     Type
 12417 ;;                  1  [STACK] void 
 12418 ;; Registers used:
 12419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12420 ;; Tracked objects:
 12421 ;;		On entry : 3F/39
 12422 ;;		On exit  : 3F/39
 12423 ;;		Unchanged: 0/0
 12424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12429 ;;Total ram usage:        0 bytes
 12430 ;; Hardware stack levels used:    1
 12431 ;; Hardware stack levels required when called:    4
 12432 ;; This function calls:
 12433 ;;		_UART2_SetRxInterruptHandler
 12434 ;;		_UART2_SetTxInterruptHandler
 12435 ;; This function is called by:
 12436 ;;		_SYSTEM_Initialize
 12437 ;; This function uses a reentrant model
 12438 ;;
 12439                           
 12440                           	psect	text54
 12441  005628                     __ptext54:
 12442                           	opt callstack 0
 12443  005628                     _UART2_Initialize:
 12444                           	opt callstack 25
 12445                           
 12446                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 12447                           
 12448                           ; BSR set to: 60
 12449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12450                           ;incstack = 0
 12451  005628  0139               	movlb	57	; () banked
 12452  00562A  9596               	bcf	150,2,b	;volatile
 12453                           
 12454                           ; BSR set to: 57
 12455                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 12456  00562C  0E00               	movlw	low _UART2_Receive_ISR
 12457  00562E  6EE6               	movwf	postinc1,c
 12458  005630  0E60               	movlw	high _UART2_Receive_ISR
 12459  005632  6EE6               	movwf	postinc1,c
 12460  005634  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 12461  005636  6EE6               	movwf	postinc1,c
 12462  005638  EC5F  F02E         	call	_UART2_SetRxInterruptHandler	;wreg free
 12463                           
 12464                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 12465  00563C  0139               	movlb	57	; () banked
 12466  00563E  9796               	bcf	150,3,b	;volatile
 12467                           
 12468                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 12469  005640  0E4A               	movlw	low _UART2_Transmit_ISR
 12470  005642  6EE6               	movwf	postinc1,c
 12471  005644  0E5B               	movlw	high _UART2_Transmit_ISR
 12472  005646  6EE6               	movwf	postinc1,c
 12473  005648  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 12474  00564A  6EE6               	movwf	postinc1,c
 12475  00564C  EC4B  F02E         	call	_UART2_SetTxInterruptHandler	;wreg free
 12476                           
 12477                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 12478  005650  013D               	movlb	61	; () banked
 12479  005652  6BD4               	clrf	212,b	;volatile
 12480                           
 12481                           ; BSR set to: 61
 12482                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 12483  005654  6BD6               	clrf	214,b	;volatile
 12484                           
 12485                           ; BSR set to: 61
 12486                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 12487  005656  6BD8               	clrf	216,b	;volatile
 12488                           
 12489                           ; BSR set to: 61
 12490                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 12491  005658  0EB0               	movlw	176
 12492  00565A  6FDA               	movwf	218,b	;volatile
 12493                           
 12494                           ; BSR set to: 61
 12495                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 12496  00565C  0E80               	movlw	128
 12497  00565E  6FDB               	movwf	219,b	;volatile
 12498                           
 12499                           ; BSR set to: 61
 12500                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 12501  005660  6BDC               	clrf	220,b	;volatile
 12502                           
 12503                           ; BSR set to: 61
 12504                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 12505  005662  0E82               	movlw	130
 12506  005664  6FDD               	movwf	221,b	;volatile
 12507                           
 12508                           ; BSR set to: 61
 12509                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 12510  005666  0E06               	movlw	6
 12511  005668  6FDE               	movwf	222,b	;volatile
 12512                           
 12513                           ; BSR set to: 61
 12514                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 12515  00566A  6BDF               	clrf	223,b	;volatile
 12516                           
 12517                           ; BSR set to: 61
 12518                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 12519  00566C  6BE0               	clrf	224,b	;volatile
 12520                           
 12521                           ; BSR set to: 61
 12522                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 12523  00566E  6BE1               	clrf	225,b	;volatile
 12524                           
 12525                           ; BSR set to: 61
 12526                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 12527  005670  6BE2               	clrf	226,b	;volatile
 12528                           
 12529                           ; BSR set to: 61
 12530                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 12531  005672  6A34               	clrf	_uart2TxHead,c	;volatile
 12532                           
 12533                           ; BSR set to: 61
 12534                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 12535  005674  6A33               	clrf	_uart2TxTail,c	;volatile
 12536                           
 12537                           ; BSR set to: 61
 12538                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 12539  005676  0E40               	movlw	64
 12540  005678  6E32               	movwf	_uart2TxBufferRemaining,c	;volatile
 12541                           
 12542                           ; BSR set to: 61
 12543                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 12544  00567A  6A31               	clrf	_uart2RxHead,c	;volatile
 12545                           
 12546                           ; BSR set to: 61
 12547                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 12548  00567C  6A30               	clrf	_uart2RxTail,c	;volatile
 12549                           
 12550                           ; BSR set to: 61
 12551                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 12552  00567E  6A2F               	clrf	_uart2RxCount,c	;volatile
 12553                           
 12554                           ; BSR set to: 61
 12555                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 12556  005680  0139               	movlb	57	; () banked
 12557  005682  8596               	bsf	150,2,b	;volatile
 12558                           
 12559                           ; BSR set to: 57
 12560                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12561  005684  0012               	return		;funcret
 12562  005686                     __end_of_UART2_Initialize:
 12563                           	opt callstack 0
 12564                           
 12565 ;; *************** function _UART2_SetTxInterruptHandler *****************
 12566 ;; Defined at:
 12567 ;;		line 252 in file "mcc_generated_files/uart2.c"
 12568 ;; Parameters:    Size  Location     Type
 12569 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12570 ;;		 -> UART2_Transmit_ISR(1), 
 12571 ;; Auto vars:     Size  Location     Type
 12572 ;;		None
 12573 ;; Return value:  Size  Location     Type
 12574 ;;                  1  [STACK] void 
 12575 ;; Registers used:
 12576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12577 ;; Tracked objects:
 12578 ;;		On entry : 3F/39
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12586 ;;Total ram usage:        0 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; Hardware stack levels required when called:    3
 12589 ;; This function calls:
 12590 ;;		Nothing
 12591 ;; This function is called by:
 12592 ;;		_UART2_Initialize
 12593 ;; This function uses a reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text55
 12597  005C96                     __ptext55:
 12598                           	opt callstack 0
 12599  005C96                     _UART2_SetTxInterruptHandler:
 12600                           	opt callstack 25
 12601                           
 12602                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 12603                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12604                           
 12605                           ; BSR set to: 57
 12606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12607                           ;incstack = 0
 12608  005C96  50E1               	movf	fsr1l,w,c
 12609  005C98  0FFD               	addlw	-3
 12610  005C9A  6ED9               	movwf	fsr2l,c
 12611  005C9C  50E2               	movf	fsr1h,w,c
 12612  005C9E  6EDA               	movwf	fsr2h,c
 12613  005CA0  0EFF               	movlw	255
 12614  005CA2  22DA               	addwfc	fsr2h,f,c
 12615  005CA4  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler
 12616  005CAA  006F FF78  F012    	movff	postinc2,_UART2_TxInterruptHandler+1
 12617  005CB0  006F FF74  F013    	movff	postdec2,_UART2_TxInterruptHandler+2
 12618                           
 12619                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12620  005CB6  52E5               	movf	postdec1,f,c
 12621  005CB8  52E5               	movf	postdec1,f,c
 12622  005CBA  52E5               	movf	postdec1,f,c
 12623  005CBC  0012               	return		;funcret
 12624  005CBE                     __end_of_UART2_SetTxInterruptHandler:
 12625                           	opt callstack 0
 12626                           
 12627 ;; *************** function _UART2_SetRxInterruptHandler *****************
 12628 ;; Defined at:
 12629 ;;		line 248 in file "mcc_generated_files/uart2.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12632 ;;		 -> UART2_Receive_ISR(1), 
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;		None
 12635 ;; Return value:  Size  Location     Type
 12636 ;;                  1  [STACK] void 
 12637 ;; Registers used:
 12638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12639 ;; Tracked objects:
 12640 ;;		On entry : 3F/39
 12641 ;;		On exit  : 0/0
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12648 ;;Total ram usage:        0 bytes
 12649 ;; Hardware stack levels used:    1
 12650 ;; Hardware stack levels required when called:    3
 12651 ;; This function calls:
 12652 ;;		Nothing
 12653 ;; This function is called by:
 12654 ;;		_UART2_Initialize
 12655 ;; This function uses a reentrant model
 12656 ;;
 12657                           
 12658                           	psect	text56
 12659  005CBE                     __ptext56:
 12660                           	opt callstack 0
 12661  005CBE                     _UART2_SetRxInterruptHandler:
 12662                           	opt callstack 25
 12663                           
 12664                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 12665                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12666                           
 12667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12668                           ;incstack = 0
 12669  005CBE  50E1               	movf	fsr1l,w,c
 12670  005CC0  0FFD               	addlw	-3
 12671  005CC2  6ED9               	movwf	fsr2l,c
 12672  005CC4  50E2               	movf	fsr1h,w,c
 12673  005CC6  6EDA               	movwf	fsr2h,c
 12674  005CC8  0EFF               	movlw	255
 12675  005CCA  22DA               	addwfc	fsr2h,f,c
 12676  005CCC  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler
 12677  005CD2  006F FF78  F015    	movff	postinc2,_UART2_RxInterruptHandler+1
 12678  005CD8  006F FF74  F016    	movff	postdec2,_UART2_RxInterruptHandler+2
 12679                           
 12680                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12681  005CDE  52E5               	movf	postdec1,f,c
 12682  005CE0  52E5               	movf	postdec1,f,c
 12683  005CE2  52E5               	movf	postdec1,f,c
 12684  005CE4  0012               	return		;funcret
 12685  005CE6                     __end_of_UART2_SetRxInterruptHandler:
 12686                           	opt callstack 0
 12687                           
 12688 ;; *************** function _UART1_Initialize *****************
 12689 ;; Defined at:
 12690 ;;		line 78 in file "mcc_generated_files/uart1.c"
 12691 ;; Parameters:    Size  Location     Type
 12692 ;;		None
 12693 ;; Auto vars:     Size  Location     Type
 12694 ;;		None
 12695 ;; Return value:  Size  Location     Type
 12696 ;;                  1  [STACK] void 
 12697 ;; Registers used:
 12698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12699 ;; Tracked objects:
 12700 ;;		On entry : 3F/3C
 12701 ;;		On exit  : 3F/39
 12702 ;;		Unchanged: 0/0
 12703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12708 ;;Total ram usage:        0 bytes
 12709 ;; Hardware stack levels used:    1
 12710 ;; Hardware stack levels required when called:    4
 12711 ;; This function calls:
 12712 ;;		_UART1_SetRxInterruptHandler
 12713 ;;		_UART1_SetTxInterruptHandler
 12714 ;; This function is called by:
 12715 ;;		_SYSTEM_Initialize
 12716 ;; This function uses a reentrant model
 12717 ;;
 12718                           
 12719                           	psect	text57
 12720  005502                     __ptext57:
 12721                           	opt callstack 0
 12722  005502                     _UART1_Initialize:
 12723                           	opt callstack 25
 12724                           
 12725                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 12726                           
 12727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12728                           ;incstack = 0
 12729  005502  0139               	movlb	57	; () banked
 12730  005504  9793               	bcf	147,3,b	;volatile
 12731                           
 12732                           ; BSR set to: 57
 12733                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12734  005506  0EE0               	movlw	low _UART1_Receive_ISR
 12735  005508  6EE6               	movwf	postinc1,c
 12736  00550A  0E5F               	movlw	high _UART1_Receive_ISR
 12737  00550C  6EE6               	movwf	postinc1,c
 12738  00550E  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12739  005510  6EE6               	movwf	postinc1,c
 12740  005512  EC87  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12741                           
 12742                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 12743  005516  0139               	movlb	57	; () banked
 12744  005518  9993               	bcf	147,4,b	;volatile
 12745                           
 12746                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12747  00551A  0E1E               	movlw	low _UART1_Transmit_ISR
 12748  00551C  6EE6               	movwf	postinc1,c
 12749  00551E  0E5B               	movlw	high _UART1_Transmit_ISR
 12750  005520  6EE6               	movwf	postinc1,c
 12751  005522  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12752  005524  6EE6               	movwf	postinc1,c
 12753  005526  EC73  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12754                           
 12755                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 12756  00552A  013D               	movlb	61	; () banked
 12757  00552C  6BEC               	clrf	236,b	;volatile
 12758                           
 12759                           ; BSR set to: 61
 12760                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 12761  00552E  6BED               	clrf	237,b	;volatile
 12762                           
 12763                           ; BSR set to: 61
 12764                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 12765  005530  6BEE               	clrf	238,b	;volatile
 12766                           
 12767                           ; BSR set to: 61
 12768                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 12769  005532  6BEF               	clrf	239,b	;volatile
 12770                           
 12771                           ; BSR set to: 61
 12772                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 12773  005534  6BF0               	clrf	240,b	;volatile
 12774                           
 12775                           ; BSR set to: 61
 12776                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 12777  005536  6BF1               	clrf	241,b	;volatile
 12778                           
 12779                           ; BSR set to: 61
 12780                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 12781  005538  0EB0               	movlw	176
 12782  00553A  6FF2               	movwf	242,b	;volatile
 12783                           
 12784                           ; BSR set to: 61
 12785                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 12786  00553C  0E80               	movlw	128
 12787  00553E  6FF3               	movwf	243,b	;volatile
 12788                           
 12789                           ; BSR set to: 61
 12790                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 12791  005540  6BF4               	clrf	244,b	;volatile
 12792                           
 12793                           ; BSR set to: 61
 12794                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 12795  005542  0E82               	movlw	130
 12796  005544  6FF5               	movwf	245,b	;volatile
 12797                           
 12798                           ; BSR set to: 61
 12799                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 12800  005546  0E06               	movlw	6
 12801  005548  6FF6               	movwf	246,b	;volatile
 12802                           
 12803                           ; BSR set to: 61
 12804                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 12805  00554A  6BF7               	clrf	247,b	;volatile
 12806                           
 12807                           ; BSR set to: 61
 12808                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 12809  00554C  6BF8               	clrf	248,b	;volatile
 12810                           
 12811                           ; BSR set to: 61
 12812                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 12813  00554E  6BF9               	clrf	249,b	;volatile
 12814                           
 12815                           ; BSR set to: 61
 12816                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 12817  005550  6BFA               	clrf	250,b	;volatile
 12818                           
 12819                           ; BSR set to: 61
 12820                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 12821  005552  6A3A               	clrf	_uart1TxHead,c	;volatile
 12822                           
 12823                           ; BSR set to: 61
 12824                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 12825  005554  6A39               	clrf	_uart1TxTail,c	;volatile
 12826                           
 12827                           ; BSR set to: 61
 12828                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12829  005556  0E40               	movlw	64
 12830  005558  6E38               	movwf	_uart1TxBufferRemaining,c	;volatile
 12831                           
 12832                           ; BSR set to: 61
 12833                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 12834  00555A  6A37               	clrf	_uart1RxHead,c	;volatile
 12835                           
 12836                           ; BSR set to: 61
 12837                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 12838  00555C  6A36               	clrf	_uart1RxTail,c	;volatile
 12839                           
 12840                           ; BSR set to: 61
 12841                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 12842  00555E  6A35               	clrf	_uart1RxCount,c	;volatile
 12843                           
 12844                           ; BSR set to: 61
 12845                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 12846  005560  0139               	movlb	57	; () banked
 12847  005562  8793               	bsf	147,3,b	;volatile
 12848                           
 12849                           ; BSR set to: 57
 12850                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12851  005564  0012               	return		;funcret
 12852  005566                     __end_of_UART1_Initialize:
 12853                           	opt callstack 0
 12854                           
 12855 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12856 ;; Defined at:
 12857 ;;		line 244 in file "mcc_generated_files/uart1.c"
 12858 ;; Parameters:    Size  Location     Type
 12859 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12860 ;;		 -> UART1_Transmit_ISR(1), 
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;		None
 12863 ;; Return value:  Size  Location     Type
 12864 ;;                  1  [STACK] void 
 12865 ;; Registers used:
 12866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12867 ;; Tracked objects:
 12868 ;;		On entry : 3F/39
 12869 ;;		On exit  : 0/0
 12870 ;;		Unchanged: 0/0
 12871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12876 ;;Total ram usage:        0 bytes
 12877 ;; Hardware stack levels used:    1
 12878 ;; Hardware stack levels required when called:    3
 12879 ;; This function calls:
 12880 ;;		Nothing
 12881 ;; This function is called by:
 12882 ;;		_UART1_Initialize
 12883 ;; This function uses a reentrant model
 12884 ;;
 12885                           
 12886                           	psect	text58
 12887  005CE6                     __ptext58:
 12888                           	opt callstack 0
 12889  005CE6                     _UART1_SetTxInterruptHandler:
 12890                           	opt callstack 25
 12891                           
 12892                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 12893                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12894                           
 12895                           ; BSR set to: 57
 12896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12897                           ;incstack = 0
 12898  005CE6  50E1               	movf	fsr1l,w,c
 12899  005CE8  0FFD               	addlw	-3
 12900  005CEA  6ED9               	movwf	fsr2l,c
 12901  005CEC  50E2               	movf	fsr1h,w,c
 12902  005CEE  6EDA               	movwf	fsr2h,c
 12903  005CF0  0EFF               	movlw	255
 12904  005CF2  22DA               	addwfc	fsr2h,f,c
 12905  005CF4  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler
 12906  005CFA  006F FF78  F00C    	movff	postinc2,_UART1_TxInterruptHandler+1
 12907  005D00  006F FF74  F00D    	movff	postdec2,_UART1_TxInterruptHandler+2
 12908                           
 12909                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12910  005D06  52E5               	movf	postdec1,f,c
 12911  005D08  52E5               	movf	postdec1,f,c
 12912  005D0A  52E5               	movf	postdec1,f,c
 12913  005D0C  0012               	return		;funcret
 12914  005D0E                     __end_of_UART1_SetTxInterruptHandler:
 12915                           	opt callstack 0
 12916                           
 12917 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12918 ;; Defined at:
 12919 ;;		line 239 in file "mcc_generated_files/uart1.c"
 12920 ;; Parameters:    Size  Location     Type
 12921 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12922 ;;		 -> UART1_Receive_ISR(1), 
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;		None
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1  [STACK] void 
 12927 ;; Registers used:
 12928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12929 ;; Tracked objects:
 12930 ;;		On entry : 3F/39
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12938 ;;Total ram usage:        0 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:    3
 12941 ;; This function calls:
 12942 ;;		Nothing
 12943 ;; This function is called by:
 12944 ;;		_UART1_Initialize
 12945 ;; This function uses a reentrant model
 12946 ;;
 12947                           
 12948                           	psect	text59
 12949  005D0E                     __ptext59:
 12950                           	opt callstack 0
 12951  005D0E                     _UART1_SetRxInterruptHandler:
 12952                           	opt callstack 25
 12953                           
 12954                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 12955                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12956                           
 12957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12958                           ;incstack = 0
 12959  005D0E  50E1               	movf	fsr1l,w,c
 12960  005D10  0FFD               	addlw	-3
 12961  005D12  6ED9               	movwf	fsr2l,c
 12962  005D14  50E2               	movf	fsr1h,w,c
 12963  005D16  6EDA               	movwf	fsr2h,c
 12964  005D18  0EFF               	movlw	255
 12965  005D1A  22DA               	addwfc	fsr2h,f,c
 12966  005D1C  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler
 12967  005D22  006F FF78  F00F    	movff	postinc2,_UART1_RxInterruptHandler+1
 12968  005D28  006F FF74  F010    	movff	postdec2,_UART1_RxInterruptHandler+2
 12969                           
 12970                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12971  005D2E  52E5               	movf	postdec1,f,c
 12972  005D30  52E5               	movf	postdec1,f,c
 12973  005D32  52E5               	movf	postdec1,f,c
 12974  005D34  0012               	return		;funcret
 12975  005D36                     __end_of_UART1_SetRxInterruptHandler:
 12976                           	opt callstack 0
 12977                           
 12978 ;; *************** function _TMR6_Initialize *****************
 12979 ;; Defined at:
 12980 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 12981 ;; Parameters:    Size  Location     Type
 12982 ;;		None
 12983 ;; Auto vars:     Size  Location     Type
 12984 ;;		None
 12985 ;; Return value:  Size  Location     Type
 12986 ;;                  1  [STACK] void 
 12987 ;; Registers used:
 12988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12989 ;; Tracked objects:
 12990 ;;		On entry : 3F/39
 12991 ;;		On exit  : 0/0
 12992 ;;		Unchanged: 0/0
 12993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12998 ;;Total ram usage:        0 bytes
 12999 ;; Hardware stack levels used:    1
 13000 ;; Hardware stack levels required when called:    4
 13001 ;; This function calls:
 13002 ;;		_TMR6_SetInterruptHandler
 13003 ;; This function is called by:
 13004 ;;		_SYSTEM_Initialize
 13005 ;; This function uses a reentrant model
 13006 ;;
 13007                           
 13008                           	psect	text60
 13009  005D36                     __ptext60:
 13010                           	opt callstack 0
 13011  005D36                     _TMR6_Initialize:
 13012                           	opt callstack 25
 13013                           
 13014                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 13015                           
 13016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13017                           ;incstack = 0
 13018  005D36  0E01               	movlw	1
 13019  005D38  6E96               	movwf	16278,c	;volatile
 13020                           
 13021                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 13022  005D3A  6A95               	clrf	16277,c	;volatile
 13023                           
 13024                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 13025  005D3C  6A97               	clrf	16279,c	;volatile
 13026                           
 13027                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 13028  005D3E  0E03               	movlw	3
 13029  005D40  6E93               	movwf	16275,c	;volatile
 13030                           
 13031                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 13032  005D42  6A92               	clrf	16274,c	;volatile
 13033                           
 13034                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 13035  005D44  0139               	movlb	57	; () banked
 13036  005D46  91A9               	bcf	169,0,b	;volatile
 13037                           
 13038                           ; BSR set to: 57
 13039                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 13040  005D48  8199               	bsf	153,0,b	;volatile
 13041                           
 13042                           ; BSR set to: 57
 13043                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 13044  005D4A  0E52               	movlw	low _TMR6_DefaultInterruptHandler
 13045  005D4C  6EE6               	movwf	postinc1,c
 13046  005D4E  0E58               	movlw	high _TMR6_DefaultInterruptHandler
 13047  005D50  6EE6               	movwf	postinc1,c
 13048  005D52  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 13049  005D54  6EE6               	movwf	postinc1,c
 13050  005D56  ECAF  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 13051                           
 13052                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 13053  005D5A  6894               	setf	16276,c	;volatile
 13054                           
 13055                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13056  005D5C  0012               	return		;funcret
 13057  005D5E                     __end_of_TMR6_Initialize:
 13058                           	opt callstack 0
 13059                           
 13060 ;; *************** function _TMR6_SetInterruptHandler *****************
 13061 ;; Defined at:
 13062 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13065 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;		None
 13068 ;; Return value:  Size  Location     Type
 13069 ;;                  1  [STACK] void 
 13070 ;; Registers used:
 13071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13072 ;; Tracked objects:
 13073 ;;		On entry : 3F/39
 13074 ;;		On exit  : 0/0
 13075 ;;		Unchanged: 0/0
 13076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13081 ;;Total ram usage:        0 bytes
 13082 ;; Hardware stack levels used:    1
 13083 ;; Hardware stack levels required when called:    3
 13084 ;; This function calls:
 13085 ;;		Nothing
 13086 ;; This function is called by:
 13087 ;;		_TMR6_Initialize
 13088 ;; This function uses a reentrant model
 13089 ;;
 13090                           
 13091                           	psect	text61
 13092  005D5E                     __ptext61:
 13093                           	opt callstack 0
 13094  005D5E                     _TMR6_SetInterruptHandler:
 13095                           	opt callstack 25
 13096                           
 13097                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 13098                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13099                           
 13100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13101                           ;incstack = 0
 13102  005D5E  50E1               	movf	fsr1l,w,c
 13103  005D60  0FFD               	addlw	-3
 13104  005D62  6ED9               	movwf	fsr2l,c
 13105  005D64  50E2               	movf	fsr1h,w,c
 13106  005D66  6EDA               	movwf	fsr2h,c
 13107  005D68  0EFF               	movlw	255
 13108  005D6A  22DA               	addwfc	fsr2h,f,c
 13109  005D6C  006F FF78  F0F3    	movff	postinc2,_TMR6_InterruptHandler
 13110  005D72  006F FF78  F0F4    	movff	postinc2,_TMR6_InterruptHandler+1
 13111  005D78  006F FF74  F0F5    	movff	postdec2,_TMR6_InterruptHandler+2
 13112                           
 13113                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13114  005D7E  52E5               	movf	postdec1,f,c
 13115  005D80  52E5               	movf	postdec1,f,c
 13116  005D82  52E5               	movf	postdec1,f,c
 13117  005D84  0012               	return		;funcret
 13118  005D86                     __end_of_TMR6_SetInterruptHandler:
 13119                           	opt callstack 0
 13120                           
 13121 ;; *************** function _TMR5_Initialize *****************
 13122 ;; Defined at:
 13123 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 13124 ;; Parameters:    Size  Location     Type
 13125 ;;		None
 13126 ;; Auto vars:     Size  Location     Type
 13127 ;;		None
 13128 ;; Return value:  Size  Location     Type
 13129 ;;                  1  [STACK] void 
 13130 ;; Registers used:
 13131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 13132 ;; Tracked objects:
 13133 ;;		On entry : 3F/3C
 13134 ;;		On exit  : 0/0
 13135 ;;		Unchanged: 0/0
 13136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13141 ;;Total ram usage:        0 bytes
 13142 ;; Hardware stack levels used:    1
 13143 ;; Hardware stack levels required when called:    4
 13144 ;; This function calls:
 13145 ;;		_TMR5_SetInterruptHandler
 13146 ;; This function is called by:
 13147 ;;		_SYSTEM_Initialize
 13148 ;; This function uses a reentrant model
 13149 ;;
 13150                           
 13151                           	psect	text62
 13152  00580C                     __ptext62:
 13153                           	opt callstack 0
 13154  00580C                     _TMR5_Initialize:
 13155                           	opt callstack 25
 13156                           
 13157                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 13158                           
 13159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13160                           ;incstack = 0
 13161  00580C  6A9B               	clrf	16283,c	;volatile
 13162                           
 13163                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 13164  00580E  6A9C               	clrf	16284,c	;volatile
 13165                           
 13166                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 13167  005810  0E01               	movlw	1
 13168  005812  6E9D               	movwf	16285,c	;volatile
 13169                           
 13170                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 13171  005814  0E63               	movlw	99
 13172  005816  6E99               	movwf	16281,c	;volatile
 13173                           
 13174                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 13175  005818  0EC0               	movlw	192
 13176  00581A  6E98               	movwf	16280,c	;volatile
 13177                           
 13178                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 13179  00581C  5098               	movf	16280,w,c	;volatile
 13180  00581E  006F FE64  F03B    	movff	16281,btemp	;volatile
 13181  005824  6A3C               	clrf	btemp+1,c
 13182  005826  0060  F0EC  F03C   	movff	btemp,btemp+1
 13183  00582C  6A3B               	clrf	btemp,c
 13184  00582E  103B               	iorwf	btemp,w,c
 13185  005830  6E28               	movwf	_timer5ReloadVal,c	;volatile
 13186  005832  503C               	movf	btemp+1,w,c
 13187  005834  6E29               	movwf	_timer5ReloadVal+1,c	;volatile
 13188                           
 13189                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 13190  005836  0139               	movlb	57	; () banked
 13191  005838  9DA8               	bcf	168,6,b	;volatile
 13192                           
 13193                           ; BSR set to: 57
 13194                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 13195  00583A  8D98               	bsf	152,6,b	;volatile
 13196                           
 13197                           ; BSR set to: 57
 13198                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 13199  00583C  0EC6               	movlw	low _TMR5_DefaultInterruptHandler
 13200  00583E  6EE6               	movwf	postinc1,c
 13201  005840  0E60               	movlw	high _TMR5_DefaultInterruptHandler
 13202  005842  6EE6               	movwf	postinc1,c
 13203  005844  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 13204  005846  6EE6               	movwf	postinc1,c
 13205  005848  ECC3  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 13206                           
 13207                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 13208  00584C  0E31               	movlw	49
 13209  00584E  6E9A               	movwf	16282,c	;volatile
 13210                           
 13211                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13212  005850  0012               	return		;funcret
 13213  005852                     __end_of_TMR5_Initialize:
 13214                           	opt callstack 0
 13215                           
 13216 ;; *************** function _TMR5_SetInterruptHandler *****************
 13217 ;; Defined at:
 13218 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 13219 ;; Parameters:    Size  Location     Type
 13220 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13221 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 13222 ;; Auto vars:     Size  Location     Type
 13223 ;;		None
 13224 ;; Return value:  Size  Location     Type
 13225 ;;                  1  [STACK] void 
 13226 ;; Registers used:
 13227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13228 ;; Tracked objects:
 13229 ;;		On entry : 3F/39
 13230 ;;		On exit  : 0/0
 13231 ;;		Unchanged: 0/0
 13232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13237 ;;Total ram usage:        0 bytes
 13238 ;; Hardware stack levels used:    1
 13239 ;; Hardware stack levels required when called:    3
 13240 ;; This function calls:
 13241 ;;		Nothing
 13242 ;; This function is called by:
 13243 ;;		_TMR5_Initialize
 13244 ;; This function uses a reentrant model
 13245 ;;
 13246                           
 13247                           	psect	text63
 13248  005D86                     __ptext63:
 13249                           	opt callstack 0
 13250  005D86                     _TMR5_SetInterruptHandler:
 13251                           	opt callstack 25
 13252                           
 13253                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 13254                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13255                           
 13256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13257                           ;incstack = 0
 13258  005D86  50E1               	movf	fsr1l,w,c
 13259  005D88  0FFD               	addlw	-3
 13260  005D8A  6ED9               	movwf	fsr2l,c
 13261  005D8C  50E2               	movf	fsr1h,w,c
 13262  005D8E  6EDA               	movwf	fsr2h,c
 13263  005D90  0EFF               	movlw	255
 13264  005D92  22DA               	addwfc	fsr2h,f,c
 13265  005D94  006F FF78  F0F0    	movff	postinc2,_TMR5_InterruptHandler
 13266  005D9A  006F FF78  F0F1    	movff	postinc2,_TMR5_InterruptHandler+1
 13267  005DA0  006F FF74  F0F2    	movff	postdec2,_TMR5_InterruptHandler+2
 13268                           
 13269                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13270  005DA6  52E5               	movf	postdec1,f,c
 13271  005DA8  52E5               	movf	postdec1,f,c
 13272  005DAA  52E5               	movf	postdec1,f,c
 13273  005DAC  0012               	return		;funcret
 13274  005DAE                     __end_of_TMR5_SetInterruptHandler:
 13275                           	opt callstack 0
 13276                           
 13277 ;; *************** function _SPI1_Initialize *****************
 13278 ;; Defined at:
 13279 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;		None
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;		None
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1  [STACK] void 
 13286 ;; Registers used:
 13287 ;;		wreg, status,2
 13288 ;; Tracked objects:
 13289 ;;		On entry : 3F/39
 13290 ;;		On exit  : 3F/3D
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13297 ;;Total ram usage:        0 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:    3
 13300 ;; This function calls:
 13301 ;;		Nothing
 13302 ;; This function is called by:
 13303 ;;		_SYSTEM_Initialize
 13304 ;; This function uses a reentrant model
 13305 ;;
 13306                           
 13307                           	psect	text64
 13308  0060E0                     __ptext64:
 13309                           	opt callstack 0
 13310  0060E0                     _SPI1_Initialize:
 13311                           	opt callstack 26
 13312                           
 13313                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 13314                           
 13315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13316                           ;incstack = 0
 13317  0060E0  0E40               	movlw	64
 13318  0060E2  013D               	movlb	61	; () banked
 13319  0060E4  6F15               	movwf	21,b	;volatile
 13320                           
 13321                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 13322  0060E6  0E03               	movlw	3
 13323  0060E8  6F16               	movwf	22,b	;volatile
 13324                           
 13325                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 13326  0060EA  0E4F               	movlw	79
 13327  0060EC  6F19               	movwf	25,b	;volatile
 13328                           
 13329                           ; BSR set to: 61
 13330                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 13331  0060EE  6B1C               	clrf	28,b	;volatile
 13332                           
 13333                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 13334  0060F0  0E83               	movlw	131
 13335  0060F2  6F14               	movwf	20,b	;volatile
 13336                           
 13337                           ; BSR set to: 61
 13338                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13339  0060F4  0012               	return		;funcret
 13340  0060F6                     __end_of_SPI1_Initialize:
 13341                           	opt callstack 0
 13342                           
 13343 ;; *************** function _PMD_Initialize *****************
 13344 ;; Defined at:
 13345 ;;		line 88 in file "mcc_generated_files/mcc.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;		None
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;		None
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1  [STACK] void 
 13352 ;; Registers used:
 13353 ;;		None
 13354 ;; Tracked objects:
 13355 ;;		On entry : 3F/39
 13356 ;;		On exit  : 3F/39
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13363 ;;Total ram usage:        0 bytes
 13364 ;; Hardware stack levels used:    1
 13365 ;; Hardware stack levels required when called:    3
 13366 ;; This function calls:
 13367 ;;		Nothing
 13368 ;; This function is called by:
 13369 ;;		_SYSTEM_Initialize
 13370 ;; This function uses a reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text65
 13374  00610C                     __ptext65:
 13375                           	opt callstack 0
 13376  00610C                     _PMD_Initialize:
 13377                           	opt callstack 26
 13378                           
 13379                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 13380                           
 13381                           ; BSR set to: 61
 13382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13383                           ;incstack = 0
 13384  00610C  0139               	movlb	57	; () banked
 13385  00610E  6BC0               	clrf	192,b	;volatile
 13386                           
 13387                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 13388  006110  6BC1               	clrf	193,b	;volatile
 13389                           
 13390                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 13391  006112  6BC2               	clrf	194,b	;volatile
 13392                           
 13393                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 13394  006114  6BC3               	clrf	195,b	;volatile
 13395                           
 13396                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 13397  006116  6BC4               	clrf	196,b	;volatile
 13398                           
 13399                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 13400  006118  6BC5               	clrf	197,b	;volatile
 13401                           
 13402                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 13403  00611A  6BC6               	clrf	198,b	;volatile
 13404                           
 13405                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 13406  00611C  6BC7               	clrf	199,b	;volatile
 13407                           
 13408                           ; BSR set to: 57
 13409                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13410  00611E  0012               	return		;funcret
 13411  006120                     __end_of_PMD_Initialize:
 13412                           	opt callstack 0
 13413                           
 13414 ;; *************** function _PIN_MANAGER_Initialize *****************
 13415 ;; Defined at:
 13416 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13417 ;; Parameters:    Size  Location     Type
 13418 ;;		None
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;		None
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  1  [STACK] void 
 13423 ;; Registers used:
 13424 ;;		wreg, status,2
 13425 ;; Tracked objects:
 13426 ;;		On entry : 3F/39
 13427 ;;		On exit  : 3F/3A
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13434 ;;Total ram usage:        0 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:    3
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_SYSTEM_Initialize
 13441 ;; This function uses a reentrant model
 13442 ;;
 13443                           
 13444                           	psect	text66
 13445  0050AE                     __ptext66:
 13446                           	opt callstack 0
 13447  0050AE                     _PIN_MANAGER_Initialize:
 13448                           	opt callstack 26
 13449                           
 13450                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 13451                           
 13452                           ; BSR set to: 57
 13453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13454                           ;incstack = 0
 13455  0050AE  0E07               	movlw	7
 13456  0050B0  6EBE               	movwf	16318,c	;volatile
 13457                           
 13458                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 13459  0050B2  6ABD               	clrf	16317,c	;volatile
 13460                           
 13461                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 13462  0050B4  6ABA               	clrf	16314,c	;volatile
 13463                           
 13464                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 13465  0050B6  6ABF               	clrf	16319,c	;volatile
 13466                           
 13467                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 13468  0050B8  6ABB               	clrf	16315,c	;volatile
 13469                           
 13470                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 13471  0050BA  0E06               	movlw	6
 13472  0050BC  6EBC               	movwf	16316,c	;volatile
 13473                           
 13474                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 13475  0050BE  6AC6               	clrf	16326,c	;volatile
 13476                           
 13477                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 13478  0050C0  68C7               	setf	16327,c	;volatile
 13479                           
 13480                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 13481  0050C2  0E8F               	movlw	143
 13482  0050C4  6EC2               	movwf	16322,c	;volatile
 13483                           
 13484                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 13485  0050C6  0EBF               	movlw	191
 13486  0050C8  6EC3               	movwf	16323,c	;volatile
 13487                           
 13488                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 13489  0050CA  0E91               	movlw	145
 13490  0050CC  6EC4               	movwf	16324,c	;volatile
 13491                           
 13492                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 13493  0050CE  0E0C               	movlw	12
 13494  0050D0  6EC5               	movwf	16325,c	;volatile
 13495                           
 13496                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 13497  0050D2  013A               	movlb	58	; () banked
 13498  0050D4  6B70               	clrf	112,b	;volatile
 13499                           
 13500                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 13501  0050D6  0E01               	movlw	1
 13502  0050D8  6F60               	movwf	96,b	;volatile
 13503                           
 13504                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 13505  0050DA  0E38               	movlw	56
 13506  0050DC  6F50               	movwf	80,b	;volatile
 13507                           
 13508                           ; BSR set to: 58
 13509                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 13510  0050DE  6B80               	clrf	128,b	;volatile
 13511                           
 13512                           ; BSR set to: 58
 13513                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 13514  0050E0  6990               	setf	144,b	;volatile
 13515                           
 13516                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 13517  0050E2  0E8F               	movlw	143
 13518  0050E4  6F40               	movwf	64,b	;volatile
 13519                           
 13520                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 13521  0050E6  0EFC               	movlw	252
 13522  0050E8  6F71               	movwf	113,b	;volatile
 13523                           
 13524                           ; BSR set to: 58
 13525                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 13526  0050EA  6B91               	clrf	145,b	;volatile
 13527                           
 13528                           ; BSR set to: 58
 13529                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 13530  0050EC  6B81               	clrf	129,b	;volatile
 13531                           
 13532                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 13533  0050EE  0E87               	movlw	135
 13534  0050F0  6F51               	movwf	81,b	;volatile
 13535                           
 13536                           ; BSR set to: 58
 13537                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 13538  0050F2  6B41               	clrf	65,b	;volatile
 13539                           
 13540                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 13541  0050F4  0E90               	movlw	144
 13542  0050F6  6F61               	movwf	97,b	;volatile
 13543                           
 13544                           ; BSR set to: 58
 13545                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 13546  0050F8  6B82               	clrf	130,b	;volatile
 13547                           
 13548                           ; BSR set to: 58
 13549                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 13550  0050FA  6B92               	clrf	146,b	;volatile
 13551                           
 13552                           ; BSR set to: 58
 13553                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 13554  0050FC  6B42               	clrf	66,b	;volatile
 13555                           
 13556                           ; BSR set to: 58
 13557                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 13558  0050FE  6B52               	clrf	82,b	;volatile
 13559                           
 13560                           ; BSR set to: 58
 13561                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 13562  005100  6B62               	clrf	98,b	;volatile
 13563                           
 13564                           ; BSR set to: 58
 13565                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 13566  005102  6B72               	clrf	114,b	;volatile
 13567                           
 13568                           ; BSR set to: 58
 13569                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 13570  005104  6943               	setf	67,b	;volatile
 13571                           
 13572                           ; BSR set to: 58
 13573                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 13574  005106  6953               	setf	83,b	;volatile
 13575                           
 13576                           ; BSR set to: 58
 13577                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 13578  005108  6963               	setf	99,b	;volatile
 13579                           
 13580                           ; BSR set to: 58
 13581                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 13582  00510A  6973               	setf	115,b	;volatile
 13583                           
 13584                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 13585  00510C  0E07               	movlw	7
 13586  00510E  6F83               	movwf	131,b	;volatile
 13587                           
 13588                           ; BSR set to: 58
 13589                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 13590  005110  6993               	setf	147,b	;volatile
 13591                           
 13592                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 13593  005112  0E0F               	movlw	15
 13594  005114  6FE8               	movwf	232,b	;volatile
 13595                           
 13596                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 13597  005116  0E16               	movlw	22
 13598  005118  6F0E               	movwf	14,b	;volatile
 13599                           
 13600                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 13601  00511A  0E1E               	movlw	30
 13602  00511C  6F13               	movwf	19,b	;volatile
 13603                           
 13604                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 13605  00511E  0E08               	movlw	8
 13606  005120  6FC0               	movwf	192,b	;volatile
 13607                           
 13608                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 13609  005122  0E0A               	movlw	10
 13610  005124  6FC2               	movwf	194,b	;volatile
 13611                           
 13612                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 13613  005126  0E09               	movlw	9
 13614  005128  6FC1               	movwf	193,b	;volatile
 13615                           
 13616                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 13617  00512A  0E17               	movlw	23
 13618  00512C  6FE5               	movwf	229,b	;volatile
 13619                           
 13620                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 13621  00512E  0E13               	movlw	19
 13622  005130  6FDE               	movwf	222,b	;volatile
 13623                           
 13624                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 13625  005132  0E01               	movlw	1
 13626  005134  6F04               	movwf	4,b	;volatile
 13627                           
 13628                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 13629  005136  0E26               	movlw	38
 13630  005138  6F05               	movwf	5,b	;volatile
 13631                           
 13632                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 13633  00513A  0E28               	movlw	40
 13634  00513C  6F06               	movwf	6,b	;volatile
 13635                           
 13636                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 13637  00513E  0E1F               	movlw	31
 13638  005140  6F15               	movwf	21,b	;volatile
 13639                           
 13640                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 13641  005142  0E13               	movlw	19
 13642  005144  6F16               	movwf	22,b	;volatile
 13643                           
 13644                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 13645  005146  0E14               	movlw	20
 13646  005148  6FDF               	movwf	223,b	;volatile
 13647                           
 13648                           ; BSR set to: 58
 13649                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 13650  00514A  0012               	return		;funcret
 13651  00514C                     __end_of_PIN_MANAGER_Initialize:
 13652                           	opt callstack 0
 13653                           
 13654 ;; *************** function _OSCILLATOR_Initialize *****************
 13655 ;; Defined at:
 13656 ;;		line 70 in file "mcc_generated_files/mcc.c"
 13657 ;; Parameters:    Size  Location     Type
 13658 ;;		None
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;		None
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  1  [STACK] void 
 13663 ;; Registers used:
 13664 ;;		wreg, status,2
 13665 ;; Tracked objects:
 13666 ;;		On entry : 3F/3A
 13667 ;;		On exit  : 3F/39
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13674 ;;Total ram usage:        0 bytes
 13675 ;; Hardware stack levels used:    1
 13676 ;; Hardware stack levels required when called:    3
 13677 ;; This function calls:
 13678 ;;		Nothing
 13679 ;; This function is called by:
 13680 ;;		_SYSTEM_Initialize
 13681 ;; This function uses a reentrant model
 13682 ;;
 13683                           
 13684                           	psect	text67
 13685  0060F6                     __ptext67:
 13686                           	opt callstack 0
 13687  0060F6                     _OSCILLATOR_Initialize:
 13688                           	opt callstack 26
 13689                           
 13690                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 13691                           
 13692                           ; BSR set to: 58
 13693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13694                           ;incstack = 0
 13695  0060F6  0E20               	movlw	32
 13696  0060F8  0139               	movlb	57	; () banked
 13697  0060FA  6FD9               	movwf	217,b	;volatile
 13698                           
 13699                           ; BSR set to: 57
 13700                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 13701  0060FC  6BDB               	clrf	219,b	;volatile
 13702                           
 13703                           ; BSR set to: 57
 13704                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 13705  0060FE  6BDD               	clrf	221,b	;volatile
 13706                           
 13707                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 13708  006100  0E02               	movlw	2
 13709  006102  6FDF               	movwf	223,b	;volatile
 13710                           
 13711                           ; BSR set to: 57
 13712                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 13713  006104  6BDE               	clrf	222,b	;volatile
 13714  006106                     l194:
 13715                           
 13716                           ; BSR set to: 57
 13717                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 13718  006106  B1DC               	btfsc	220,0,b	;volatile
 13719  006108  0012               	return	
 13720  00610A  D7FD               	goto	l194
 13721  00610C                     __end_of_OSCILLATOR_Initialize:
 13722                           	opt callstack 0
 13723                           
 13724 ;; *************** function _NCO1_Initialize *****************
 13725 ;; Defined at:
 13726 ;;		line 58 in file "mcc_generated_files/nco1.c"
 13727 ;; Parameters:    Size  Location     Type
 13728 ;;		None
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;		None
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1  [STACK] void 
 13733 ;; Registers used:
 13734 ;;		wreg, status,2
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/39
 13737 ;;		On exit  : 3F/3F
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13744 ;;Total ram usage:        0 bytes
 13745 ;; Hardware stack levels used:    1
 13746 ;; Hardware stack levels required when called:    3
 13747 ;; This function calls:
 13748 ;;		Nothing
 13749 ;; This function is called by:
 13750 ;;		_SYSTEM_Initialize
 13751 ;; This function uses a reentrant model
 13752 ;;
 13753                           
 13754                           	psect	text68
 13755  00605A                     __ptext68:
 13756                           	opt callstack 0
 13757  00605A                     _NCO1_Initialize:
 13758                           	opt callstack 26
 13759                           
 13760                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 13761                           
 13762                           ; BSR set to: 57
 13763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13764                           ;incstack = 0
 13765  00605A  013F               	movlb	63	; () banked
 13766  00605C  6B3E               	clrf	62,b	;volatile
 13767                           
 13768                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 13769  00605E  6B3F               	clrf	63,b	;volatile
 13770                           
 13771                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 13772  006060  6B3A               	clrf	58,b	;volatile
 13773                           
 13774                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 13775  006062  6B39               	clrf	57,b	;volatile
 13776                           
 13777                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 13778  006064  6B38               	clrf	56,b	;volatile
 13779                           
 13780                           ; BSR set to: 63
 13781                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 13782  006066  0E06               	movlw	6
 13783  006068  6F3D               	movwf	61,b	;volatile
 13784                           
 13785                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 13786  00606A  0EC7               	movlw	199
 13787  00606C  6F3C               	movwf	60,b	;volatile
 13788                           
 13789                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 13790  00606E  0EAE               	movlw	174
 13791  006070  6F3B               	movwf	59,b	;volatile
 13792                           
 13793                           ; BSR set to: 63
 13794                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 13795  006072  8F3E               	bsf	62,7,b	;volatile
 13796                           
 13797                           ; BSR set to: 63
 13798                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13799  006074  0012               	return		;funcret
 13800  006076                     __end_of_NCO1_Initialize:
 13801                           	opt callstack 0
 13802                           
 13803 ;; *************** function _INTERRUPT_Initialize *****************
 13804 ;; Defined at:
 13805 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13806 ;; Parameters:    Size  Location     Type
 13807 ;;		None
 13808 ;; Auto vars:     Size  Location     Type
 13809 ;;  state           1  [STACK] _Bool 
 13810 ;; Return value:  Size  Location     Type
 13811 ;;                  1  [STACK] void 
 13812 ;; Registers used:
 13813 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 13814 ;; Tracked objects:
 13815 ;;		On entry : 0/0
 13816 ;;		On exit  : 3F/39
 13817 ;;		Unchanged: 0/0
 13818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13823 ;;Total ram usage:        0 bytes
 13824 ;; Hardware stack levels used:    1
 13825 ;; Hardware stack levels required when called:    3
 13826 ;; This function calls:
 13827 ;;		Nothing
 13828 ;; This function is called by:
 13829 ;;		_SYSTEM_Initialize
 13830 ;; This function uses a reentrant model
 13831 ;;
 13832                           
 13833                           	psect	text69
 13834  00549C                     __ptext69:
 13835                           	opt callstack 0
 13836  00549C                     _INTERRUPT_Initialize:
 13837                           	opt callstack 0
 13838                           
 13839                           ; BSR set to: 63
 13840                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13841  00549C  52E6               	movf	postinc1,f,c
 13842                           
 13843                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13844                           
 13845                           ;incstack = 0
 13846  00549E  8AD2               	bsf	16338,5,c	;volatile
 13847                           
 13848                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13849  0054A0  AED2               	btfss	16338,7,c	;volatile
 13850  0054A2  D003               	goto	u980
 13851  0054A4  6A46               	clrf	btemp+11,c
 13852  0054A6  2A46               	incf	btemp+11,f,c
 13853  0054A8  D001               	goto	u998
 13854  0054AA                     u980:
 13855  0054AA  6A46               	clrf	btemp+11,c
 13856  0054AC                     u998:
 13857                           
 13858                           ;stkvar	_state @ sp[(-1)+0]
 13859  0054AC  0EFF               	movlw	-1
 13860  0054AE  0060  F11B  FFE3   	movff	btemp+11,plusw1
 13861                           
 13862                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13863  0054B4  9ED2               	bcf	16338,7,c	;volatile
 13864                           
 13865                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13866  0054B6  0E55               	movlw	85
 13867  0054B8  6ED4               	movwf	16340,c	;volatile
 13868                           
 13869                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13870  0054BA  0EAA               	movlw	170
 13871  0054BC  6ED4               	movwf	16340,c	;volatile
 13872                           
 13873                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13874  0054BE  90D4               	bcf	16340,0,c	;volatile
 13875                           
 13876                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 13877  0054C0  0138               	movlb	56	; () banked
 13878  0054C2  6B9F               	clrf	159,b	;volatile
 13879                           
 13880                           ; BSR set to: 56
 13881                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 13882  0054C4  6B9E               	clrf	158,b	;volatile
 13883                           
 13884                           ; BSR set to: 56
 13885                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 13886  0054C6  0E08               	movlw	8
 13887  0054C8  6F9D               	movwf	157,b	;volatile
 13888                           
 13889                           ; BSR set to: 56
 13890                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13891  0054CA  0E55               	movlw	85
 13892  0054CC  6ED4               	movwf	16340,c	;volatile
 13893                           
 13894                           ; BSR set to: 56
 13895                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13896  0054CE  0EAA               	movlw	170
 13897  0054D0  6ED4               	movwf	16340,c	;volatile
 13898                           
 13899                           ; BSR set to: 56
 13900                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13901  0054D2  80D4               	bsf	16340,0,c	;volatile
 13902                           
 13903                           ; BSR set to: 56
 13904                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13905                           ;stkvar	_state @ sp[(-1)+0]
 13906  0054D4  0EFF               	movlw	-1
 13907  0054D6  B0E3               	btfsc	plusw1,0,c
 13908  0054D8  D002               	bra	u1005
 13909  0054DA  9ED2               	bcf	16338,7,c	;volatile
 13910  0054DC  D001               	bra	u1006
 13911  0054DE                     u1005:
 13912  0054DE  8ED2               	bsf	16338,7,c	;volatile
 13913  0054E0                     u1006:
 13914                           
 13915                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 13916  0054E0  0139               	movlb	57	; () banked
 13917  0054E2  8782               	bsf	130,3,b	;volatile
 13918                           
 13919                           ; BSR set to: 57
 13920                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 13921  0054E4  8382               	bsf	130,1,b	;volatile
 13922                           
 13923                           ; BSR set to: 57
 13924                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 13925  0054E6  8182               	bsf	130,0,b	;volatile
 13926                           
 13927                           ; BSR set to: 57
 13928                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 13929  0054E8  8582               	bsf	130,2,b	;volatile
 13930                           
 13931                           ; BSR set to: 57
 13932                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 13933  0054EA  8786               	bsf	134,3,b	;volatile
 13934                           
 13935                           ; BSR set to: 57
 13936                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 13937  0054EC  8586               	bsf	134,2,b	;volatile
 13938                           
 13939                           ; BSR set to: 57
 13940                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 13941  0054EE  8983               	bsf	131,4,b	;volatile
 13942                           
 13943                           ; BSR set to: 57
 13944                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 13945  0054F0  8783               	bsf	131,3,b	;volatile
 13946                           
 13947                           ; BSR set to: 57
 13948                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 13949  0054F2  8181               	bsf	129,0,b	;volatile
 13950                           
 13951                           ; BSR set to: 57
 13952                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 13953  0054F4  8185               	bsf	133,0,b	;volatile
 13954                           
 13955                           ; BSR set to: 57
 13956                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 13957  0054F6  8B87               	bsf	135,5,b	;volatile
 13958                           
 13959                           ; BSR set to: 57
 13960                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 13961  0054F8  8189               	bsf	137,0,b	;volatile
 13962                           
 13963                           ; BSR set to: 57
 13964                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 13965  0054FA  8D88               	bsf	136,6,b	;volatile
 13966                           
 13967                           ; BSR set to: 57
 13968                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 13969  0054FC  8581               	bsf	129,2,b	;volatile
 13970                           
 13971                           ; BSR set to: 57
 13972                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 13973  0054FE  52E5               	movf	postdec1,f,c
 13974  005500  0012               	return		;funcret
 13975  005502                     __end_of_INTERRUPT_Initialize:
 13976                           	opt callstack 0
 13977                           
 13978 ;; *************** function _EXT_INT_Initialize *****************
 13979 ;; Defined at:
 13980 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;		None
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;		None
 13985 ;; Return value:  Size  Location     Type
 13986 ;;                  1  [STACK] void 
 13987 ;; Registers used:
 13988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13989 ;; Tracked objects:
 13990 ;;		On entry : 3F/3F
 13991 ;;		On exit  : 3F/39
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13998 ;;Total ram usage:        0 bytes
 13999 ;; Hardware stack levels used:    1
 14000 ;; Hardware stack levels required when called:    4
 14001 ;; This function calls:
 14002 ;;		_INT0_SetInterruptHandler
 14003 ;;		_INT1_SetInterruptHandler
 14004 ;;		_INT2_SetInterruptHandler
 14005 ;; This function is called by:
 14006 ;;		_SYSTEM_Initialize
 14007 ;; This function uses a reentrant model
 14008 ;;
 14009                           
 14010                           	psect	text70
 14011  005730                     __ptext70:
 14012                           	opt callstack 0
 14013  005730                     _EXT_INT_Initialize:
 14014                           	opt callstack 25
 14015                           
 14016                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 14017                           
 14018                           ; BSR set to: 57
 14019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14020                           ;incstack = 0
 14021  005730  0139               	movlb	57	; () banked
 14022  005732  91A1               	bcf	161,0,b	;volatile
 14023                           
 14024                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 14025  005734  90D2               	bcf	16338,0,c	;volatile
 14026                           
 14027                           ; BSR set to: 57
 14028                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 14029  005736  0ECE               	movlw	low _INT0_DefaultInterruptHandler
 14030  005738  6EE6               	movwf	postinc1,c
 14031  00573A  0E61               	movlw	high _INT0_DefaultInterruptHandler
 14032  00573C  6EE6               	movwf	postinc1,c
 14033  00573E  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 14034  005740  6EE6               	movwf	postinc1,c
 14035  005742  ECFF  F02E         	call	_INT0_SetInterruptHandler	;wreg free
 14036                           
 14037                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 14038  005746  0139               	movlb	57	; () banked
 14039  005748  8191               	bsf	145,0,b	;volatile
 14040                           
 14041                           ; BSR set to: 57
 14042                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 14043  00574A  91A5               	bcf	165,0,b	;volatile
 14044                           
 14045                           ; BSR set to: 57
 14046                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 14047  00574C  92D2               	bcf	16338,1,c	;volatile
 14048                           
 14049                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 14050  00574E  0ED0               	movlw	low _INT1_DefaultInterruptHandler
 14051  005750  6EE6               	movwf	postinc1,c
 14052  005752  0E61               	movlw	high _INT1_DefaultInterruptHandler
 14053  005754  6EE6               	movwf	postinc1,c
 14054  005756  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 14055  005758  6EE6               	movwf	postinc1,c
 14056  00575A  ECEB  F02E         	call	_INT1_SetInterruptHandler	;wreg free
 14057                           
 14058                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 14059  00575E  0139               	movlb	57	; () banked
 14060  005760  8195               	bsf	149,0,b	;volatile
 14061                           
 14062                           ; BSR set to: 57
 14063                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 14064  005762  9BA7               	bcf	167,5,b	;volatile
 14065                           
 14066                           ; BSR set to: 57
 14067                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 14068  005764  94D2               	bcf	16338,2,c	;volatile
 14069                           
 14070                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 14071  005766  0ED2               	movlw	low _INT2_DefaultInterruptHandler
 14072  005768  6EE6               	movwf	postinc1,c
 14073  00576A  0E61               	movlw	high _INT2_DefaultInterruptHandler
 14074  00576C  6EE6               	movwf	postinc1,c
 14075  00576E  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 14076  005770  6EE6               	movwf	postinc1,c
 14077  005772  ECD7  F02E         	call	_INT2_SetInterruptHandler	;wreg free
 14078                           
 14079                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 14080  005776  0139               	movlb	57	; () banked
 14081  005778  8B97               	bsf	151,5,b	;volatile
 14082                           
 14083                           ; BSR set to: 57
 14084                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14085  00577A  0012               	return		;funcret
 14086  00577C                     __end_of_EXT_INT_Initialize:
 14087                           	opt callstack 0
 14088                           
 14089 ;; *************** function _INT2_SetInterruptHandler *****************
 14090 ;; Defined at:
 14091 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 14092 ;; Parameters:    Size  Location     Type
 14093 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14094 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14095 ;; Auto vars:     Size  Location     Type
 14096 ;;		None
 14097 ;; Return value:  Size  Location     Type
 14098 ;;                  1  [STACK] void 
 14099 ;; Registers used:
 14100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14101 ;; Tracked objects:
 14102 ;;		On entry : 3F/39
 14103 ;;		On exit  : 0/0
 14104 ;;		Unchanged: 0/0
 14105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14110 ;;Total ram usage:        0 bytes
 14111 ;; Hardware stack levels used:    1
 14112 ;; Hardware stack levels required when called:    3
 14113 ;; This function calls:
 14114 ;;		Nothing
 14115 ;; This function is called by:
 14116 ;;		_EXT_INT_Initialize
 14117 ;; This function uses a reentrant model
 14118 ;;
 14119                           
 14120                           	psect	text71
 14121  005DAE                     __ptext71:
 14122                           	opt callstack 0
 14123  005DAE                     _INT2_SetInterruptHandler:
 14124                           	opt callstack 25
 14125                           
 14126                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 14127                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14128                           
 14129                           ; BSR set to: 57
 14130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14131                           ;incstack = 0
 14132  005DAE  50E1               	movf	fsr1l,w,c
 14133  005DB0  0FFD               	addlw	-3
 14134  005DB2  6ED9               	movwf	fsr2l,c
 14135  005DB4  50E2               	movf	fsr1h,w,c
 14136  005DB6  6EDA               	movwf	fsr2h,c
 14137  005DB8  0EFF               	movlw	255
 14138  005DBA  22DA               	addwfc	fsr2h,f,c
 14139  005DBC  006F FF78  F017    	movff	postinc2,_INT2_InterruptHandler
 14140  005DC2  006F FF78  F018    	movff	postinc2,_INT2_InterruptHandler+1
 14141  005DC8  006F FF74  F019    	movff	postdec2,_INT2_InterruptHandler+2
 14142                           
 14143                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14144  005DCE  52E5               	movf	postdec1,f,c
 14145  005DD0  52E5               	movf	postdec1,f,c
 14146  005DD2  52E5               	movf	postdec1,f,c
 14147  005DD4  0012               	return		;funcret
 14148  005DD6                     __end_of_INT2_SetInterruptHandler:
 14149                           	opt callstack 0
 14150                           
 14151 ;; *************** function _INT1_SetInterruptHandler *****************
 14152 ;; Defined at:
 14153 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 14154 ;; Parameters:    Size  Location     Type
 14155 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14156 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14157 ;; Auto vars:     Size  Location     Type
 14158 ;;		None
 14159 ;; Return value:  Size  Location     Type
 14160 ;;                  1  [STACK] void 
 14161 ;; Registers used:
 14162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14163 ;; Tracked objects:
 14164 ;;		On entry : 3F/39
 14165 ;;		On exit  : 0/0
 14166 ;;		Unchanged: 0/0
 14167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14172 ;;Total ram usage:        0 bytes
 14173 ;; Hardware stack levels used:    1
 14174 ;; Hardware stack levels required when called:    3
 14175 ;; This function calls:
 14176 ;;		Nothing
 14177 ;; This function is called by:
 14178 ;;		_EXT_INT_Initialize
 14179 ;; This function uses a reentrant model
 14180 ;;
 14181                           
 14182                           	psect	text72
 14183  005DD6                     __ptext72:
 14184                           	opt callstack 0
 14185  005DD6                     _INT1_SetInterruptHandler:
 14186                           	opt callstack 25
 14187                           
 14188                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 14189                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14190                           
 14191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14192                           ;incstack = 0
 14193  005DD6  50E1               	movf	fsr1l,w,c
 14194  005DD8  0FFD               	addlw	-3
 14195  005DDA  6ED9               	movwf	fsr2l,c
 14196  005DDC  50E2               	movf	fsr1h,w,c
 14197  005DDE  6EDA               	movwf	fsr2h,c
 14198  005DE0  0EFF               	movlw	255
 14199  005DE2  22DA               	addwfc	fsr2h,f,c
 14200  005DE4  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler
 14201  005DEA  006F FF78  F01B    	movff	postinc2,_INT1_InterruptHandler+1
 14202  005DF0  006F FF74  F01C    	movff	postdec2,_INT1_InterruptHandler+2
 14203                           
 14204                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14205  005DF6  52E5               	movf	postdec1,f,c
 14206  005DF8  52E5               	movf	postdec1,f,c
 14207  005DFA  52E5               	movf	postdec1,f,c
 14208  005DFC  0012               	return		;funcret
 14209  005DFE                     __end_of_INT1_SetInterruptHandler:
 14210                           	opt callstack 0
 14211                           
 14212 ;; *************** function _INT0_SetInterruptHandler *****************
 14213 ;; Defined at:
 14214 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 14215 ;; Parameters:    Size  Location     Type
 14216 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14217 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14218 ;; Auto vars:     Size  Location     Type
 14219 ;;		None
 14220 ;; Return value:  Size  Location     Type
 14221 ;;                  1  [STACK] void 
 14222 ;; Registers used:
 14223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14224 ;; Tracked objects:
 14225 ;;		On entry : 3F/39
 14226 ;;		On exit  : 0/0
 14227 ;;		Unchanged: 0/0
 14228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14233 ;;Total ram usage:        0 bytes
 14234 ;; Hardware stack levels used:    1
 14235 ;; Hardware stack levels required when called:    3
 14236 ;; This function calls:
 14237 ;;		Nothing
 14238 ;; This function is called by:
 14239 ;;		_EXT_INT_Initialize
 14240 ;; This function uses a reentrant model
 14241 ;;
 14242                           
 14243                           	psect	text73
 14244  005DFE                     __ptext73:
 14245                           	opt callstack 0
 14246  005DFE                     _INT0_SetInterruptHandler:
 14247                           	opt callstack 25
 14248                           
 14249                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 14250                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14251                           
 14252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14253                           ;incstack = 0
 14254  005DFE  50E1               	movf	fsr1l,w,c
 14255  005E00  0FFD               	addlw	-3
 14256  005E02  6ED9               	movwf	fsr2l,c
 14257  005E04  50E2               	movf	fsr1h,w,c
 14258  005E06  6EDA               	movwf	fsr2h,c
 14259  005E08  0EFF               	movlw	255
 14260  005E0A  22DA               	addwfc	fsr2h,f,c
 14261  005E0C  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler
 14262  005E12  006F FF78  F01E    	movff	postinc2,_INT0_InterruptHandler+1
 14263  005E18  006F FF74  F01F    	movff	postdec2,_INT0_InterruptHandler+2
 14264                           
 14265                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14266  005E1E  52E5               	movf	postdec1,f,c
 14267  005E20  52E5               	movf	postdec1,f,c
 14268  005E22  52E5               	movf	postdec1,f,c
 14269  005E24  0012               	return		;funcret
 14270  005E26                     __end_of_INT0_SetInterruptHandler:
 14271                           	opt callstack 0
 14272                           
 14273 ;; *************** function _DSM_Initialize *****************
 14274 ;; Defined at:
 14275 ;;		line 58 in file "mcc_generated_files/dsm.c"
 14276 ;; Parameters:    Size  Location     Type
 14277 ;;		None
 14278 ;; Auto vars:     Size  Location     Type
 14279 ;;		None
 14280 ;; Return value:  Size  Location     Type
 14281 ;;                  1  [STACK] void 
 14282 ;; Registers used:
 14283 ;;		wreg, status,2
 14284 ;; Tracked objects:
 14285 ;;		On entry : 0/3C
 14286 ;;		On exit  : 3F/3C
 14287 ;;		Unchanged: 0/0
 14288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14293 ;;Total ram usage:        0 bytes
 14294 ;; Hardware stack levels used:    1
 14295 ;; Hardware stack levels required when called:    3
 14296 ;; This function calls:
 14297 ;;		Nothing
 14298 ;; This function is called by:
 14299 ;;		_SYSTEM_Initialize
 14300 ;; This function uses a reentrant model
 14301 ;;
 14302                           
 14303                           	psect	text74
 14304  006076                     __ptext74:
 14305                           	opt callstack 0
 14306  006076                     _DSM_Initialize:
 14307                           	opt callstack 26
 14308                           
 14309                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 14310                           
 14311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14312                           ;incstack = 0
 14313  006076  013C               	movlb	60	; () banked
 14314  006078  99FA               	bcf	250,4,b	;volatile
 14315                           
 14316                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 14317  00607A  81FB               	bsf	251,0,b	;volatile
 14318                           
 14319                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 14320  00607C  93FB               	bcf	251,1,b	;volatile
 14321                           
 14322                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 14323  00607E  89FB               	bsf	251,4,b	;volatile
 14324                           
 14325                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 14326  006080  9BFB               	bcf	251,5,b	;volatile
 14327                           
 14328                           ; BSR set to: 60
 14329                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 14330  006082  0E13               	movlw	19
 14331  006084  6FFC               	movwf	252,b	;volatile
 14332                           
 14333                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 14334  006086  0E0E               	movlw	14
 14335  006088  6FFE               	movwf	254,b	;volatile
 14336                           
 14337                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 14338  00608A  0E04               	movlw	4
 14339  00608C  6FFD               	movwf	253,b	;volatile
 14340                           
 14341                           ; BSR set to: 60
 14342                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 14343  00608E  8FFA               	bsf	250,7,b	;volatile
 14344                           
 14345                           ; BSR set to: 60
 14346                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14347  006090  0012               	return		;funcret
 14348  006092                     __end_of_DSM_Initialize:
 14349                           	opt callstack 0
 14350                           
 14351 ;; *************** function _DMA1_Initialize *****************
 14352 ;; Defined at:
 14353 ;;		line 86 in file "mcc_generated_files/dma1.c"
 14354 ;; Parameters:    Size  Location     Type
 14355 ;;		None
 14356 ;; Auto vars:     Size  Location     Type
 14357 ;;		None
 14358 ;; Return value:  Size  Location     Type
 14359 ;;                  1  [STACK] void 
 14360 ;; Registers used:
 14361 ;;		wreg, status,2
 14362 ;; Tracked objects:
 14363 ;;		On entry : 3F/3D
 14364 ;;		On exit  : 3F/3B
 14365 ;;		Unchanged: 0/0
 14366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14371 ;;Total ram usage:        0 bytes
 14372 ;; Hardware stack levels used:    1
 14373 ;; Hardware stack levels required when called:    3
 14374 ;; This function calls:
 14375 ;;		Nothing
 14376 ;; This function is called by:
 14377 ;;		_SYSTEM_Initialize
 14378 ;; This function uses a reentrant model
 14379 ;;
 14380                           
 14381                           	psect	text75
 14382  005432                     __ptext75:
 14383                           	opt callstack 0
 14384  005432                     _DMA1_Initialize:
 14385                           	opt callstack 26
 14386                           
 14387                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 14388                           
 14389                           ; BSR set to: 60
 14390                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14391                           ;incstack = 0
 14392  005432  0E00               	movlw	0
 14393  005434  013B               	movlb	59	; () banked
 14394  005436  6FF9               	movwf	249,b	;volatile
 14395  005438  0E10               	movlw	16
 14396  00543A  6FFA               	movwf	250,b	;volatile
 14397  00543C  0E00               	movlw	0
 14398  00543E  6FFB               	movwf	251,b	;volatile
 14399                           
 14400                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 14401  005440  0E3D               	movlw	61
 14402  005442  6FF1               	movwf	241,b	;volatile
 14403  005444  0E11               	movlw	17
 14404  005446  6FF0               	movwf	240,b	;volatile
 14405                           
 14406                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 14407  005448  0E03               	movlw	3
 14408  00544A  6FFD               	movwf	253,b	;volatile
 14409                           
 14410                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 14411  00544C  0E00               	movlw	0
 14412  00544E  6FF8               	movwf	248,b	;volatile
 14413  005450  0E01               	movlw	1
 14414  005452  6FF7               	movwf	247,b	;volatile
 14415                           
 14416                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 14417  005454  0E00               	movlw	0
 14418  005456  6FEF               	movwf	239,b	;volatile
 14419  005458  0E01               	movlw	1
 14420  00545A  6FEE               	movwf	238,b	;volatile
 14421                           
 14422                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 14423  00545C  0E15               	movlw	21
 14424  00545E  6FFF               	movwf	255,b	;volatile
 14425                           
 14426                           ; BSR set to: 59
 14427                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 14428  005460  6BFE               	clrf	254,b	;volatile
 14429                           
 14430                           ; BSR set to: 59
 14431                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 14432  005462  0139               	movlb	57	; () banked
 14433  005464  93A2               	bcf	162,1,b	;volatile
 14434                           
 14435                           ; BSR set to: 57
 14436                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 14437  005466  91A2               	bcf	162,0,b	;volatile
 14438                           
 14439                           ; BSR set to: 57
 14440                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 14441  005468  97A2               	bcf	162,3,b	;volatile
 14442                           
 14443                           ; BSR set to: 57
 14444                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 14445  00546A  95A2               	bcf	162,2,b	;volatile
 14446                           
 14447                           ; BSR set to: 57
 14448                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 14449  00546C  8392               	bsf	146,1,b	;volatile
 14450                           
 14451                           ; BSR set to: 57
 14452                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 14453  00546E  8192               	bsf	146,0,b	;volatile
 14454                           
 14455                           ; BSR set to: 57
 14456                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 14457  005470  8792               	bsf	146,3,b	;volatile
 14458                           
 14459                           ; BSR set to: 57
 14460                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 14461  005472  8592               	bsf	146,2,b	;volatile
 14462                           
 14463                           ; BSR set to: 57
 14464                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 14465  005474  6BF1               	clrf	241,b	;volatile
 14466                           
 14467                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 14468  005476  0E01               	movlw	1
 14469  005478  6FF2               	movwf	242,b	;volatile
 14470                           
 14471                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 14472  00547A  0E04               	movlw	4
 14473  00547C  6FF3               	movwf	243,b	;volatile
 14474                           
 14475                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 14476  00547E  0E02               	movlw	2
 14477  005480  6FF4               	movwf	244,b	;volatile
 14478                           
 14479                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 14480  005482  0E03               	movlw	3
 14481  005484  6FF7               	movwf	247,b	;volatile
 14482  005486  9ED2               	bcf	16338,7,c	;# 
 14483  005488  0139               	banksel	14831	;# 
 14484  00548A  0E55               	movlw	85	;# 
 14485  00548C  6FEF               	movwf	14831,b	;# 
 14486  00548E  0EAA               	movlw	170	;# 
 14487  005490  6FEF               	movwf	14831,b	;# 
 14488  005492  81EF               	bsf	14831,0,b	;# 
 14489  005494  8ED2               	bsf	16338,7,c	;# 
 14490                           
 14491                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 14492  005496  013B               	movlb	59	; () banked
 14493  005498  6BFC               	clrf	252,b	;volatile
 14494                           
 14495                           ; BSR set to: 59
 14496                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14497  00549A  0012               	return		;funcret
 14498  00549C                     __end_of_DMA1_Initialize:
 14499                           	opt callstack 0
 14500                           
 14501 ;; *************** function _CLKREF_Initialize *****************
 14502 ;; Defined at:
 14503 ;;		line 58 in file "mcc_generated_files/clkref.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;		None
 14506 ;; Auto vars:     Size  Location     Type
 14507 ;;		None
 14508 ;; Return value:  Size  Location     Type
 14509 ;;                  1  [STACK] void 
 14510 ;; Registers used:
 14511 ;;		wreg, status,2
 14512 ;; Tracked objects:
 14513 ;;		On entry : 3F/3B
 14514 ;;		On exit  : 3F/3C
 14515 ;;		Unchanged: 0/0
 14516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14521 ;;Total ram usage:        0 bytes
 14522 ;; Hardware stack levels used:    1
 14523 ;; Hardware stack levels required when called:    3
 14524 ;; This function calls:
 14525 ;;		Nothing
 14526 ;; This function is called by:
 14527 ;;		_SYSTEM_Initialize
 14528 ;; This function uses a reentrant model
 14529 ;;
 14530                           
 14531                           	psect	text76
 14532  00616E                     __ptext76:
 14533                           	opt callstack 0
 14534  00616E                     _CLKREF_Initialize:
 14535                           	opt callstack 26
 14536                           
 14537                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 14538                           
 14539                           ; BSR set to: 59
 14540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14541                           ;incstack = 0
 14542  00616E  013C               	movlb	60	; () banked
 14543  006170  6BE6               	clrf	230,b	;volatile
 14544                           
 14545                           ; BSR set to: 60
 14546                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 14547  006172  0E94               	movlw	148
 14548  006174  6FE5               	movwf	229,b	;volatile
 14549                           
 14550                           ; BSR set to: 60
 14551                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14552  006176  0012               	return		;funcret
 14553  006178                     __end_of_CLKREF_Initialize:
 14554                           	opt callstack 0
 14555                           
 14556 ;; *************** function _CLC1_Initialize *****************
 14557 ;; Defined at:
 14558 ;;		line 58 in file "mcc_generated_files/clc1.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;		None
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;		None
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  1  [STACK] void 
 14565 ;; Registers used:
 14566 ;;		wreg, status,2
 14567 ;; Tracked objects:
 14568 ;;		On entry : 0/39
 14569 ;;		On exit  : 3F/3C
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14576 ;;Total ram usage:        0 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:    3
 14579 ;; This function calls:
 14580 ;;		Nothing
 14581 ;; This function is called by:
 14582 ;;		_SYSTEM_Initialize
 14583 ;; This function uses a reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text77
 14587  005F58                     __ptext77:
 14588                           	opt callstack 0
 14589  005F58                     _CLC1_Initialize:
 14590                           	opt callstack 26
 14591                           
 14592                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 14593                           
 14594                           ; BSR set to: 60
 14595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14596                           ;incstack = 0
 14597  005F58  013C               	movlb	60	; () banked
 14598  005F5A  6B75               	clrf	117,b	;volatile
 14599                           
 14600                           ; BSR set to: 60
 14601                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 14602  005F5C  0E04               	movlw	4
 14603  005F5E  6F76               	movwf	118,b	;volatile
 14604                           
 14605                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 14606  005F60  0E04               	movlw	4
 14607  005F62  6F77               	movwf	119,b	;volatile
 14608                           
 14609                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 14610  005F64  0E04               	movlw	4
 14611  005F66  6F78               	movwf	120,b	;volatile
 14612                           
 14613                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 14614  005F68  0E04               	movlw	4
 14615  005F6A  6F79               	movwf	121,b	;volatile
 14616                           
 14617                           ; BSR set to: 60
 14618                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 14619  005F6C  6B7A               	clrf	122,b	;volatile
 14620                           
 14621                           ; BSR set to: 60
 14622                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 14623  005F6E  6B7B               	clrf	123,b	;volatile
 14624                           
 14625                           ; BSR set to: 60
 14626                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 14627  005F70  6B7C               	clrf	124,b	;volatile
 14628                           
 14629                           ; BSR set to: 60
 14630                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 14631  005F72  6B7D               	clrf	125,b	;volatile
 14632                           
 14633                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 14634  005F74  0E81               	movlw	129
 14635  005F76  6F74               	movwf	116,b	;volatile
 14636                           
 14637                           ; BSR set to: 60
 14638                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14639  005F78  0012               	return		;funcret
 14640  005F7A                     __end_of_CLC1_Initialize:
 14641                           	opt callstack 0
 14642                           
 14643 ;; *************** function _ADCC_Initialize *****************
 14644 ;; Defined at:
 14645 ;;		line 64 in file "mcc_generated_files/adcc.c"
 14646 ;; Parameters:    Size  Location     Type
 14647 ;;		None
 14648 ;; Auto vars:     Size  Location     Type
 14649 ;;		None
 14650 ;; Return value:  Size  Location     Type
 14651 ;;                  1  [STACK] void 
 14652 ;; Registers used:
 14653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14654 ;; Tracked objects:
 14655 ;;		On entry : 3F/39
 14656 ;;		On exit  : 0/0
 14657 ;;		Unchanged: 0/0
 14658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14663 ;;Total ram usage:        0 bytes
 14664 ;; Hardware stack levels used:    1
 14665 ;; Hardware stack levels required when called:    4
 14666 ;; This function calls:
 14667 ;;		_ADCC_SetADIInterruptHandler
 14668 ;; This function is called by:
 14669 ;;		_SYSTEM_Initialize
 14670 ;; This function uses a reentrant model
 14671 ;;
 14672                           
 14673                           	psect	text78
 14674  00577C                     __ptext78:
 14675                           	opt callstack 0
 14676  00577C                     _ADCC_Initialize:
 14677                           	opt callstack 25
 14678                           
 14679                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 14680                           
 14681                           ; BSR set to: 60
 14682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14683                           ;incstack = 0
 14684  00577C  013E               	movlb	62	; () banked
 14685  00577E  6BDE               	clrf	222,b	;volatile
 14686                           
 14687                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 14688  005780  6BDF               	clrf	223,b	;volatile
 14689                           
 14690                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 14691  005782  6BE0               	clrf	224,b	;volatile
 14692                           
 14693                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 14694  005784  6BE1               	clrf	225,b	;volatile
 14695                           
 14696                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 14697  005786  6BE4               	clrf	228,b	;volatile
 14698                           
 14699                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 14700  005788  6BE5               	clrf	229,b	;volatile
 14701                           
 14702                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 14703  00578A  6BEA               	clrf	234,b	;volatile
 14704                           
 14705                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 14706  00578C  6BEC               	clrf	236,b	;volatile
 14707                           
 14708                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 14709  00578E  6BF1               	clrf	241,b	;volatile
 14710                           
 14711                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 14712  005790  6BF3               	clrf	243,b	;volatile
 14713                           
 14714                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 14715  005792  6BF4               	clrf	244,b	;volatile
 14716                           
 14717                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 14718  005794  6BF5               	clrf	245,b	;volatile
 14719                           
 14720                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 14721  005796  6BF6               	clrf	246,b	;volatile
 14722                           
 14723                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 14724  005798  6BF7               	clrf	247,b	;volatile
 14725                           
 14726                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 14727  00579A  6BF9               	clrf	249,b	;volatile
 14728                           
 14729                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 14730  00579C  6BFA               	clrf	250,b	;volatile
 14731                           
 14732                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 14733  00579E  6BFB               	clrf	251,b	;volatile
 14734                           
 14735                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 14736  0057A0  6BFC               	clrf	252,b	;volatile
 14737                           
 14738                           ; BSR set to: 62
 14739                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 14740  0057A2  0E02               	movlw	2
 14741  0057A4  6FFD               	movwf	253,b	;volatile
 14742                           
 14743                           ; BSR set to: 62
 14744                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 14745  0057A6  6BFE               	clrf	254,b	;volatile
 14746                           
 14747                           ; BSR set to: 62
 14748                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 14749  0057A8  6BFF               	clrf	255,b	;volatile
 14750                           
 14751                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 14752  0057AA  0E94               	movlw	148
 14753  0057AC  6FF8               	movwf	248,b	;volatile
 14754                           
 14755                           ; BSR set to: 62
 14756                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 14757  0057AE  0139               	movlb	57	; () banked
 14758  0057B0  95A1               	bcf	161,2,b	;volatile
 14759                           
 14760                           ; BSR set to: 57
 14761                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 14762  0057B2  8591               	bsf	145,2,b	;volatile
 14763                           
 14764                           ; BSR set to: 57
 14765                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 14766  0057B4  0ED4               	movlw	low _ADCC_DefaultInterruptHandler
 14767  0057B6  6EE6               	movwf	postinc1,c
 14768  0057B8  0E61               	movlw	high _ADCC_DefaultInterruptHandler
 14769  0057BA  6EE6               	movwf	postinc1,c
 14770  0057BC  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 14771  0057BE  6EE6               	movwf	postinc1,c
 14772  0057C0  EC13  F02F         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14773                           
 14774                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14775  0057C4  0012               	return		;funcret
 14776  0057C6                     __end_of_ADCC_Initialize:
 14777                           	opt callstack 0
 14778                           
 14779 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14780 ;; Defined at:
 14781 ;;		line 316 in file "mcc_generated_files/adcc.c"
 14782 ;; Parameters:    Size  Location     Type
 14783 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14784 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 14785 ;; Auto vars:     Size  Location     Type
 14786 ;;		None
 14787 ;; Return value:  Size  Location     Type
 14788 ;;                  1  [STACK] void 
 14789 ;; Registers used:
 14790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14791 ;; Tracked objects:
 14792 ;;		On entry : 3F/39
 14793 ;;		On exit  : 0/0
 14794 ;;		Unchanged: 0/0
 14795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14800 ;;Total ram usage:        0 bytes
 14801 ;; Hardware stack levels used:    1
 14802 ;; Hardware stack levels required when called:    3
 14803 ;; This function calls:
 14804 ;;		Nothing
 14805 ;; This function is called by:
 14806 ;;		_ADCC_Initialize
 14807 ;; This function uses a reentrant model
 14808 ;;
 14809                           
 14810                           	psect	text79
 14811  005E26                     __ptext79:
 14812                           	opt callstack 0
 14813  005E26                     _ADCC_SetADIInterruptHandler:
 14814                           	opt callstack 25
 14815                           
 14816                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14817                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14818                           
 14819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14820                           ;incstack = 0
 14821  005E26  50E1               	movf	fsr1l,w,c
 14822  005E28  0FFD               	addlw	-3
 14823  005E2A  6ED9               	movwf	fsr2l,c
 14824  005E2C  50E2               	movf	fsr1h,w,c
 14825  005E2E  6EDA               	movwf	fsr2h,c
 14826  005E30  0EFF               	movlw	255
 14827  005E32  22DA               	addwfc	fsr2h,f,c
 14828  005E34  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler
 14829  005E3A  006F FF78  F009    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 14830  005E40  006F FF74  F00A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 14831                           
 14832                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14833  005E46  52E5               	movf	postdec1,f,c
 14834  005E48  52E5               	movf	postdec1,f,c
 14835  005E4A  52E5               	movf	postdec1,f,c
 14836  005E4C  0012               	return		;funcret
 14837  005E4E                     __end_of_ADCC_SetADIInterruptHandler:
 14838                           	opt callstack 0
 14839                           
 14840 ;; *************** function _INT0_ISR *****************
 14841 ;; Defined at:
 14842 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;		None
 14845 ;; Auto vars:     Size  Location     Type
 14846 ;;		None
 14847 ;; Return value:  Size  Location     Type
 14848 ;;                  1    wreg      void 
 14849 ;; Registers used:
 14850 ;;		wreg, status,2, status,0, pclath, tosl
 14851 ;; Tracked objects:
 14852 ;;		On entry : 0/0
 14853 ;;		On exit  : 0/0
 14854 ;;		Unchanged: 0/0
 14855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14860 ;;Total ram usage:        0 bytes
 14861 ;; Hardware stack levels used:    1
 14862 ;; Hardware stack levels required when called:    2
 14863 ;; This function calls:
 14864 ;;		_INT0_CallBack
 14865 ;; This function is called by:
 14866 ;;		Interrupt level 2
 14867 ;; This function uses a non-reentrant model
 14868 ;;
 14869                           
 14870                           	psect	text80
 14871  006130                     __ptext80:
 14872                           	opt callstack 0
 14873  006130                     _INT0_ISR:
 14874                           	opt callstack 17
 14875                           
 14876                           ;incstack = 0
 14877  006130  EE13  F12A         	lfsr	1,___inthi_sp
 14878                           
 14879                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 14880  006134  0139               	movlb	57	; () banked
 14881  006136  91A1               	bcf	161,0,b	;volatile
 14882                           
 14883                           ; BSR set to: 57
 14884                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 14885  006138  ECBD  F02F         	call	_INT0_CallBack	;wreg free
 14886  00613C  0011               	retfie		f
 14887  00613E                     __end_of_INT0_ISR:
 14888                           	opt callstack 0
 14889                           
 14890 ;; *************** function _INT0_CallBack *****************
 14891 ;; Defined at:
 14892 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 14893 ;; Parameters:    Size  Location     Type
 14894 ;;		None
 14895 ;; Auto vars:     Size  Location     Type
 14896 ;;		None
 14897 ;; Return value:  Size  Location     Type
 14898 ;;                  1  [STACK] void 
 14899 ;; Registers used:
 14900 ;;		wreg, status,2, status,0, pclath, tosl
 14901 ;; Tracked objects:
 14902 ;;		On entry : 3F/39
 14903 ;;		On exit  : 0/0
 14904 ;;		Unchanged: 0/0
 14905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14910 ;;Total ram usage:        0 bytes
 14911 ;; Hardware stack levels used:    1
 14912 ;; Hardware stack levels required when called:    1
 14913 ;; This function calls:
 14914 ;;		Absolute function
 14915 ;;		_INT0_DefaultInterruptHandler
 14916 ;; This function is called by:
 14917 ;;		_INT0_ISR
 14918 ;; This function uses a reentrant model
 14919 ;;
 14920                           
 14921                           	psect	text81
 14922  005F7A                     __ptext81:
 14923                           	opt callstack 0
 14924  005F7A                     _INT0_CallBack:
 14925                           	opt callstack 17
 14926                           
 14927                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 14928                           
 14929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14930                           ;incstack = 0
 14931  005F7A  501D               	movf	_INT0_InterruptHandler,w,c
 14932  005F7C  101E               	iorwf	_INT0_InterruptHandler+1,w,c
 14933  005F7E  101F               	iorwf	_INT0_InterruptHandler+2,w,c
 14934  005F80  B4D8               	btfsc	status,2,c
 14935  005F82  0012               	return	
 14936                           
 14937                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 14938  005F84  D801               	call	u121_48
 14939  005F86  0012               	return	
 14940  005F88                     u121_48:
 14941  005F88  0005               	push	
 14942  005F8A  6EFA               	movwf	pclath,c
 14943  005F8C  501D               	movf	_INT0_InterruptHandler,w,c
 14944  005F8E  6EFD               	movwf	tosl,c
 14945  005F90  501E               	movf	_INT0_InterruptHandler+1,w,c
 14946  005F92  6EFE               	movwf	tosh,c
 14947  005F94  501F               	movf	_INT0_InterruptHandler+2,w,c
 14948  005F96  6EFF               	movwf	tosu,c
 14949  005F98  50FA               	movf	pclath,w,c
 14950  005F9A  0012               	return		;indir
 14951  005F9C                     __end_of_INT0_CallBack:
 14952                           	opt callstack 0
 14953                           
 14954 ;; *************** function _INT0_DefaultInterruptHandler *****************
 14955 ;; Defined at:
 14956 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;		None
 14959 ;; Auto vars:     Size  Location     Type
 14960 ;;		None
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  1  [STACK] void 
 14963 ;; Registers used:
 14964 ;;		None
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/39
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14974 ;;Total ram usage:        0 bytes
 14975 ;; Hardware stack levels used:    1
 14976 ;; This function calls:
 14977 ;;		Nothing
 14978 ;; This function is called by:
 14979 ;;		_EXT_INT_Initialize
 14980 ;;		_INT0_CallBack
 14981 ;; This function uses a reentrant model
 14982 ;;
 14983                           
 14984                           	psect	text82
 14985  0061CE                     __ptext82:
 14986                           	opt callstack 0
 14987  0061CE                     _INT0_DefaultInterruptHandler:
 14988                           	opt callstack 17
 14989                           
 14990                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14991                           
 14992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14993                           ;incstack = 0
 14994  0061CE  0012               	return		;funcret
 14995  0061D0                     __end_of_INT0_DefaultInterruptHandler:
 14996                           	opt callstack 0
 14997                           
 14998 ;; *************** function _INT1_ISR *****************
 14999 ;; Defined at:
 15000 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 15001 ;; Parameters:    Size  Location     Type
 15002 ;;		None
 15003 ;; Auto vars:     Size  Location     Type
 15004 ;;		None
 15005 ;; Return value:  Size  Location     Type
 15006 ;;                  1    wreg      void 
 15007 ;; Registers used:
 15008 ;;		wreg, status,2, status,0, pclath, tosl
 15009 ;; Tracked objects:
 15010 ;;		On entry : 0/0
 15011 ;;		On exit  : 0/0
 15012 ;;		Unchanged: 0/0
 15013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15018 ;;Total ram usage:        0 bytes
 15019 ;; Hardware stack levels used:    1
 15020 ;; Hardware stack levels required when called:    2
 15021 ;; This function calls:
 15022 ;;		_INT1_CallBack
 15023 ;; This function is called by:
 15024 ;;		Interrupt level 2
 15025 ;; This function uses a non-reentrant model
 15026 ;;
 15027                           
 15028                           	psect	text83
 15029  006140                     __ptext83:
 15030                           	opt callstack 0
 15031  006140                     _INT1_ISR:
 15032                           	opt callstack 17
 15033                           
 15034                           ;incstack = 0
 15035  006140  EE13  F12A         	lfsr	1,___inthi_sp
 15036                           
 15037                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 15038  006144  0139               	movlb	57	; () banked
 15039  006146  91A5               	bcf	165,0,b	;volatile
 15040                           
 15041                           ; BSR set to: 57
 15042                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 15043  006148  ECCE  F02F         	call	_INT1_CallBack	;wreg free
 15044  00614C  0011               	retfie		f
 15045  00614E                     __end_of_INT1_ISR:
 15046                           	opt callstack 0
 15047                           
 15048 ;; *************** function _INT1_CallBack *****************
 15049 ;; Defined at:
 15050 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;		None
 15053 ;; Auto vars:     Size  Location     Type
 15054 ;;		None
 15055 ;; Return value:  Size  Location     Type
 15056 ;;                  1  [STACK] void 
 15057 ;; Registers used:
 15058 ;;		wreg, status,2, status,0, pclath, tosl
 15059 ;; Tracked objects:
 15060 ;;		On entry : 3F/39
 15061 ;;		On exit  : 0/0
 15062 ;;		Unchanged: 0/0
 15063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15068 ;;Total ram usage:        0 bytes
 15069 ;; Hardware stack levels used:    1
 15070 ;; Hardware stack levels required when called:    1
 15071 ;; This function calls:
 15072 ;;		Absolute function
 15073 ;;		_INT1_DefaultInterruptHandler
 15074 ;; This function is called by:
 15075 ;;		_INT1_ISR
 15076 ;; This function uses a reentrant model
 15077 ;;
 15078                           
 15079                           	psect	text84
 15080  005F9C                     __ptext84:
 15081                           	opt callstack 0
 15082  005F9C                     _INT1_CallBack:
 15083                           	opt callstack 17
 15084                           
 15085                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 15086                           
 15087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15088                           ;incstack = 0
 15089  005F9C  501A               	movf	_INT1_InterruptHandler,w,c
 15090  005F9E  101B               	iorwf	_INT1_InterruptHandler+1,w,c
 15091  005FA0  101C               	iorwf	_INT1_InterruptHandler+2,w,c
 15092  005FA2  B4D8               	btfsc	status,2,c
 15093  005FA4  0012               	return	
 15094                           
 15095                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 15096  005FA6  D801               	call	u123_48
 15097  005FA8  0012               	return	
 15098  005FAA                     u123_48:
 15099  005FAA  0005               	push	
 15100  005FAC  6EFA               	movwf	pclath,c
 15101  005FAE  501A               	movf	_INT1_InterruptHandler,w,c
 15102  005FB0  6EFD               	movwf	tosl,c
 15103  005FB2  501B               	movf	_INT1_InterruptHandler+1,w,c
 15104  005FB4  6EFE               	movwf	tosh,c
 15105  005FB6  501C               	movf	_INT1_InterruptHandler+2,w,c
 15106  005FB8  6EFF               	movwf	tosu,c
 15107  005FBA  50FA               	movf	pclath,w,c
 15108  005FBC  0012               	return		;indir
 15109  005FBE                     __end_of_INT1_CallBack:
 15110                           	opt callstack 0
 15111                           
 15112 ;; *************** function _INT1_DefaultInterruptHandler *****************
 15113 ;; Defined at:
 15114 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 15115 ;; Parameters:    Size  Location     Type
 15116 ;;		None
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;		None
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  1  [STACK] void 
 15121 ;; Registers used:
 15122 ;;		None
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/39
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15132 ;;Total ram usage:        0 bytes
 15133 ;; Hardware stack levels used:    1
 15134 ;; This function calls:
 15135 ;;		Nothing
 15136 ;; This function is called by:
 15137 ;;		_EXT_INT_Initialize
 15138 ;;		_INT1_CallBack
 15139 ;; This function uses a reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text85
 15143  0061D0                     __ptext85:
 15144                           	opt callstack 0
 15145  0061D0                     _INT1_DefaultInterruptHandler:
 15146                           	opt callstack 17
 15147                           
 15148                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15149                           
 15150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15151                           ;incstack = 0
 15152  0061D0  0012               	return		;funcret
 15153  0061D2                     __end_of_INT1_DefaultInterruptHandler:
 15154                           	opt callstack 0
 15155                           
 15156 ;; *************** function _INT2_ISR *****************
 15157 ;; Defined at:
 15158 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 15159 ;; Parameters:    Size  Location     Type
 15160 ;;		None
 15161 ;; Auto vars:     Size  Location     Type
 15162 ;;		None
 15163 ;; Return value:  Size  Location     Type
 15164 ;;                  1    wreg      void 
 15165 ;; Registers used:
 15166 ;;		wreg, status,2, status,0, pclath, tosl
 15167 ;; Tracked objects:
 15168 ;;		On entry : 0/0
 15169 ;;		On exit  : 0/0
 15170 ;;		Unchanged: 0/0
 15171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15176 ;;Total ram usage:        0 bytes
 15177 ;; Hardware stack levels used:    1
 15178 ;; Hardware stack levels required when called:    2
 15179 ;; This function calls:
 15180 ;;		_INT2_CallBack
 15181 ;; This function is called by:
 15182 ;;		Interrupt level 2
 15183 ;; This function uses a non-reentrant model
 15184 ;;
 15185                           
 15186                           	psect	text86
 15187  006150                     __ptext86:
 15188                           	opt callstack 0
 15189  006150                     _INT2_ISR:
 15190                           	opt callstack 17
 15191                           
 15192                           ;incstack = 0
 15193  006150  EE13  F12A         	lfsr	1,___inthi_sp
 15194                           
 15195                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 15196  006154  0139               	movlb	57	; () banked
 15197  006156  9BA7               	bcf	167,5,b	;volatile
 15198                           
 15199                           ; BSR set to: 57
 15200                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 15201  006158  ECDF  F02F         	call	_INT2_CallBack	;wreg free
 15202  00615C  0011               	retfie		f
 15203  00615E                     __end_of_INT2_ISR:
 15204                           	opt callstack 0
 15205                           
 15206 ;; *************** function _INT2_CallBack *****************
 15207 ;; Defined at:
 15208 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 15209 ;; Parameters:    Size  Location     Type
 15210 ;;		None
 15211 ;; Auto vars:     Size  Location     Type
 15212 ;;		None
 15213 ;; Return value:  Size  Location     Type
 15214 ;;                  1  [STACK] void 
 15215 ;; Registers used:
 15216 ;;		wreg, status,2, status,0, pclath, tosl
 15217 ;; Tracked objects:
 15218 ;;		On entry : 3F/39
 15219 ;;		On exit  : 0/0
 15220 ;;		Unchanged: 0/0
 15221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15226 ;;Total ram usage:        0 bytes
 15227 ;; Hardware stack levels used:    1
 15228 ;; Hardware stack levels required when called:    1
 15229 ;; This function calls:
 15230 ;;		Absolute function
 15231 ;;		_INT2_DefaultInterruptHandler
 15232 ;; This function is called by:
 15233 ;;		_INT2_ISR
 15234 ;; This function uses a reentrant model
 15235 ;;
 15236                           
 15237                           	psect	text87
 15238  005FBE                     __ptext87:
 15239                           	opt callstack 0
 15240  005FBE                     _INT2_CallBack:
 15241                           	opt callstack 17
 15242                           
 15243                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 15244                           
 15245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15246                           ;incstack = 0
 15247  005FBE  5017               	movf	_INT2_InterruptHandler,w,c
 15248  005FC0  1018               	iorwf	_INT2_InterruptHandler+1,w,c
 15249  005FC2  1019               	iorwf	_INT2_InterruptHandler+2,w,c
 15250  005FC4  B4D8               	btfsc	status,2,c
 15251  005FC6  0012               	return	
 15252                           
 15253                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 15254  005FC8  D801               	call	u125_48
 15255  005FCA  0012               	return	
 15256  005FCC                     u125_48:
 15257  005FCC  0005               	push	
 15258  005FCE  6EFA               	movwf	pclath,c
 15259  005FD0  5017               	movf	_INT2_InterruptHandler,w,c
 15260  005FD2  6EFD               	movwf	tosl,c
 15261  005FD4  5018               	movf	_INT2_InterruptHandler+1,w,c
 15262  005FD6  6EFE               	movwf	tosh,c
 15263  005FD8  5019               	movf	_INT2_InterruptHandler+2,w,c
 15264  005FDA  6EFF               	movwf	tosu,c
 15265  005FDC  50FA               	movf	pclath,w,c
 15266  005FDE  0012               	return		;indir
 15267  005FE0                     __end_of_INT2_CallBack:
 15268                           	opt callstack 0
 15269                           
 15270 ;; *************** function _INT2_DefaultInterruptHandler *****************
 15271 ;; Defined at:
 15272 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;		None
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;		None
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  1  [STACK] void 
 15279 ;; Registers used:
 15280 ;;		None
 15281 ;; Tracked objects:
 15282 ;;		On entry : 0/39
 15283 ;;		On exit  : 0/0
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15290 ;;Total ram usage:        0 bytes
 15291 ;; Hardware stack levels used:    1
 15292 ;; This function calls:
 15293 ;;		Nothing
 15294 ;; This function is called by:
 15295 ;;		_EXT_INT_Initialize
 15296 ;;		_INT2_CallBack
 15297 ;; This function uses a reentrant model
 15298 ;;
 15299                           
 15300                           	psect	text88
 15301  0061D2                     __ptext88:
 15302                           	opt callstack 0
 15303  0061D2                     _INT2_DefaultInterruptHandler:
 15304                           	opt callstack 17
 15305                           
 15306                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15307                           
 15308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15309                           ;incstack = 0
 15310  0061D2  0012               	return		;funcret
 15311  0061D4                     __end_of_INT2_DefaultInterruptHandler:
 15312                           	opt callstack 0
 15313                           
 15314 ;; *************** function _Default_ISR *****************
 15315 ;; Defined at:
 15316 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 15317 ;; Parameters:    Size  Location     Type
 15318 ;;		None
 15319 ;; Auto vars:     Size  Location     Type
 15320 ;;		None
 15321 ;; Return value:  Size  Location     Type
 15322 ;;                  1    wreg      void 
 15323 ;; Registers used:
 15324 ;;		None
 15325 ;; Tracked objects:
 15326 ;;		On entry : 0/0
 15327 ;;		On exit  : 0/0
 15328 ;;		Unchanged: 0/0
 15329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15334 ;;Total ram usage:        0 bytes
 15335 ;; Hardware stack levels used:    1
 15336 ;; This function calls:
 15337 ;;		Nothing
 15338 ;; This function is called by:
 15339 ;;		Interrupt level 2
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343                           	psect	text89
 15344  0061C8                     __ptext89:
 15345                           	opt callstack 0
 15346  0061C8                     _Default_ISR:
 15347                           	opt callstack 19
 15348                           
 15349                           ;incstack = 0
 15350  0061C8  EE13  F12A         	lfsr	1,___inthi_sp
 15351  0061CC  0011               	retfie		f
 15352  0061CE                     __end_of_Default_ISR:
 15353                           	opt callstack 0
 15354                           
 15355 ;; *************** function _ADCC_ISR *****************
 15356 ;; Defined at:
 15357 ;;		line 307 in file "mcc_generated_files/adcc.c"
 15358 ;; Parameters:    Size  Location     Type
 15359 ;;		None
 15360 ;; Auto vars:     Size  Location     Type
 15361 ;;		None
 15362 ;; Return value:  Size  Location     Type
 15363 ;;                  1    wreg      void 
 15364 ;; Registers used:
 15365 ;;		wreg, status,2, status,0, pclath, tosl
 15366 ;; Tracked objects:
 15367 ;;		On entry : 0/0
 15368 ;;		On exit  : 0/0
 15369 ;;		Unchanged: 0/0
 15370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15375 ;;Total ram usage:        0 bytes
 15376 ;; Hardware stack levels used:    1
 15377 ;; Hardware stack levels required when called:    1
 15378 ;; This function calls:
 15379 ;;		Absolute function
 15380 ;;		_ADCC_DefaultInterruptHandler
 15381 ;; This function is called by:
 15382 ;;		Interrupt level 2
 15383 ;; This function uses a non-reentrant model
 15384 ;;
 15385                           
 15386                           	psect	text90
 15387  005BF4                     __ptext90:
 15388                           	opt callstack 0
 15389  005BF4                     _ADCC_ISR:
 15390                           	opt callstack 18
 15391                           
 15392                           ;incstack = 0
 15393  005BF4  EE13  F12A         	lfsr	1,___inthi_sp
 15394                           
 15395                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 15396  005BF8  0139               	movlb	57	; () banked
 15397  005BFA  95A1               	bcf	161,2,b	;volatile
 15398                           
 15399                           ; BSR set to: 57
 15400                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 15401  005BFC  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15402  005BFE  1009               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 15403  005C00  100A               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 15404  005C02  B4D8               	btfsc	status,2,c
 15405  005C04  0011               	retfie		f
 15406                           
 15407                           ; BSR set to: 57
 15408                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 15409  005C06  D801               	call	i2u198_48
 15410  005C08  0011               	retfie		f
 15411  005C0A                     i2u198_48:
 15412  005C0A  0005               	push	
 15413  005C0C  6EFA               	movwf	pclath,c
 15414  005C0E  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15415  005C10  6EFD               	movwf	tosl,c
 15416  005C12  5009               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 15417  005C14  6EFE               	movwf	tosh,c
 15418  005C16  500A               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 15419  005C18  6EFF               	movwf	tosu,c
 15420  005C1A  50FA               	movf	pclath,w,c
 15421  005C1C  0012               	return		;indir
 15422  005C1E                     __end_of_ADCC_ISR:
 15423                           	opt callstack 0
 15424                           
 15425 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 15426 ;; Defined at:
 15427 ;;		line 320 in file "mcc_generated_files/adcc.c"
 15428 ;; Parameters:    Size  Location     Type
 15429 ;;		None
 15430 ;; Auto vars:     Size  Location     Type
 15431 ;;		None
 15432 ;; Return value:  Size  Location     Type
 15433 ;;                  1  [STACK] void 
 15434 ;; Registers used:
 15435 ;;		None
 15436 ;; Tracked objects:
 15437 ;;		On entry : 3F/39
 15438 ;;		On exit  : 0/0
 15439 ;;		Unchanged: 0/0
 15440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15445 ;;Total ram usage:        0 bytes
 15446 ;; Hardware stack levels used:    1
 15447 ;; This function calls:
 15448 ;;		Nothing
 15449 ;; This function is called by:
 15450 ;;		_ADCC_Initialize
 15451 ;;		_ADCC_ISR
 15452 ;; This function uses a reentrant model
 15453 ;;
 15454                           
 15455                           	psect	text91
 15456  0061D4                     __ptext91:
 15457                           	opt callstack 0
 15458  0061D4                     _ADCC_DefaultInterruptHandler:
 15459                           	opt callstack 18
 15460                           
 15461                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15462                           
 15463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15464                           ;incstack = 0
 15465  0061D4  0012               	return		;funcret
 15466  0061D6                     __end_of_ADCC_DefaultInterruptHandler:
 15467                           	opt callstack 0
 15468                           
 15469 ;; *************** function _UART1_tx_vect_isr *****************
 15470 ;; Defined at:
 15471 ;;		line 197 in file "mcc_generated_files/uart1.c"
 15472 ;; Parameters:    Size  Location     Type
 15473 ;;		None
 15474 ;; Auto vars:     Size  Location     Type
 15475 ;;		None
 15476 ;; Return value:  Size  Location     Type
 15477 ;;                  1    wreg      void 
 15478 ;; Registers used:
 15479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15480 ;; Tracked objects:
 15481 ;;		On entry : 0/0
 15482 ;;		On exit  : 0/0
 15483 ;;		Unchanged: 0/0
 15484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15489 ;;Total ram usage:        0 bytes
 15490 ;; Hardware stack levels used:    1
 15491 ;; Hardware stack levels required when called:    1
 15492 ;; This function calls:
 15493 ;;		Absolute function
 15494 ;;		_UART1_Transmit_ISR
 15495 ;; This function is called by:
 15496 ;;		Interrupt level 2
 15497 ;; This function uses a non-reentrant model
 15498 ;;
 15499                           
 15500                           	psect	text92
 15501  005E50                     __ptext92:
 15502                           	opt callstack 0
 15503  005E50                     _UART1_tx_vect_isr:
 15504                           	opt callstack 18
 15505                           
 15506                           ;incstack = 0
 15507  005E50  EE13  F12A         	lfsr	1,___inthi_sp
 15508                           
 15509                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 15510  005E54  500B               	movf	_UART1_TxInterruptHandler,w,c
 15511  005E56  100C               	iorwf	_UART1_TxInterruptHandler+1,w,c
 15512  005E58  100D               	iorwf	_UART1_TxInterruptHandler+2,w,c
 15513  005E5A  B4D8               	btfsc	status,2,c
 15514  005E5C  0011               	retfie		f
 15515                           
 15516                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 15517  005E5E  D801               	call	i2u413_48
 15518  005E60  0011               	retfie		f
 15519  005E62                     i2u413_48:
 15520  005E62  0005               	push	
 15521  005E64  6EFA               	movwf	pclath,c
 15522  005E66  500B               	movf	_UART1_TxInterruptHandler,w,c
 15523  005E68  6EFD               	movwf	tosl,c
 15524  005E6A  500C               	movf	_UART1_TxInterruptHandler+1,w,c
 15525  005E6C  6EFE               	movwf	tosh,c
 15526  005E6E  500D               	movf	_UART1_TxInterruptHandler+2,w,c
 15527  005E70  6EFF               	movwf	tosu,c
 15528  005E72  50FA               	movf	pclath,w,c
 15529  005E74  0012               	return		;indir
 15530  005E76                     __end_of_UART1_tx_vect_isr:
 15531                           	opt callstack 0
 15532                           
 15533 ;; *************** function _UART1_Transmit_ISR *****************
 15534 ;; Defined at:
 15535 ;;		line 211 in file "mcc_generated_files/uart1.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;		None
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;		None
 15540 ;; Return value:  Size  Location     Type
 15541 ;;                  1  [STACK] void 
 15542 ;; Registers used:
 15543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15544 ;; Tracked objects:
 15545 ;;		On entry : 0/0
 15546 ;;		On exit  : 3B/39
 15547 ;;		Unchanged: 0/0
 15548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15553 ;;Total ram usage:        0 bytes
 15554 ;; Hardware stack levels used:    1
 15555 ;; This function calls:
 15556 ;;		Nothing
 15557 ;; This function is called by:
 15558 ;;		_UART1_Initialize
 15559 ;;		_UART1_tx_vect_isr
 15560 ;; This function uses a reentrant model
 15561 ;;
 15562                           
 15563                           	psect	text93
 15564  005B1E                     __ptext93:
 15565                           	opt callstack 0
 15566  005B1E                     _UART1_Transmit_ISR:
 15567                           	opt callstack 18
 15568                           
 15569                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 15570                           
 15571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15572                           ;incstack = 0
 15573  005B1E  0E40               	movlw	64
 15574  005B20  6038               	cpfslt	_uart1TxBufferRemaining,c
 15575  005B22  D010               	goto	l597
 15576                           
 15577                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 15578  005B24  0EC0               	movlw	low _uart1TxBuffer
 15579  005B26  2439               	addwf	_uart1TxTail,w,c	;volatile
 15580  005B28  6ED9               	movwf	fsr2l,c
 15581  005B2A  6ADA               	clrf	fsr2h,c
 15582  005B2C  0E02               	movlw	high _uart1TxBuffer
 15583  005B2E  22DA               	addwfc	fsr2h,f,c
 15584  005B30  50DF               	movf	indf2,w,c
 15585  005B32  013D               	movlb	61	; () banked
 15586  005B34  6FEA               	movwf	234,b	;volatile
 15587                           
 15588                           ; BSR set to: 61
 15589  005B36  2A39               	incf	_uart1TxTail,f,c	;volatile
 15590                           
 15591                           ; BSR set to: 61
 15592                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 15593  005B38  0E3F               	movlw	63
 15594  005B3A  6439               	cpfsgt	_uart1TxTail,c
 15595  005B3C  D001               	goto	l6400
 15596                           
 15597                           ; BSR set to: 61
 15598                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 15599  005B3E  6A39               	clrf	_uart1TxTail,c	;volatile
 15600  005B40                     l6400:
 15601                           
 15602                           ; BSR set to: 61
 15603                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 15604  005B40  2A38               	incf	_uart1TxBufferRemaining,f,c	;volatile
 15605                           
 15606                           ;mcc_generated_files/uart1.c: 220:  } else {
 15607  005B42  0012               	return	
 15608  005B44                     l597:
 15609                           
 15610                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 15611  005B44  0139               	movlb	57	; () banked
 15612  005B46  9993               	bcf	147,4,b	;volatile
 15613                           
 15614                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15615  005B48  0012               	return		;funcret
 15616  005B4A                     __end_of_UART1_Transmit_ISR:
 15617                           	opt callstack 0
 15618                           
 15619 ;; *************** function _UART1_rx_vect_isr *****************
 15620 ;; Defined at:
 15621 ;;		line 204 in file "mcc_generated_files/uart1.c"
 15622 ;; Parameters:    Size  Location     Type
 15623 ;;		None
 15624 ;; Auto vars:     Size  Location     Type
 15625 ;;		None
 15626 ;; Return value:  Size  Location     Type
 15627 ;;                  1    wreg      void 
 15628 ;; Registers used:
 15629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15630 ;; Tracked objects:
 15631 ;;		On entry : 0/0
 15632 ;;		On exit  : 0/0
 15633 ;;		Unchanged: 0/0
 15634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15639 ;;Total ram usage:        0 bytes
 15640 ;; Hardware stack levels used:    1
 15641 ;; Hardware stack levels required when called:    1
 15642 ;; This function calls:
 15643 ;;		Absolute function
 15644 ;;		_UART1_Receive_ISR
 15645 ;; This function is called by:
 15646 ;;		Interrupt level 2
 15647 ;; This function uses a non-reentrant model
 15648 ;;
 15649                           
 15650                           	psect	text94
 15651  005E78                     __ptext94:
 15652                           	opt callstack 0
 15653  005E78                     _UART1_rx_vect_isr:
 15654                           	opt callstack 18
 15655                           
 15656                           ;incstack = 0
 15657  005E78  EE13  F12A         	lfsr	1,___inthi_sp
 15658                           
 15659                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 15660  005E7C  500E               	movf	_UART1_RxInterruptHandler,w,c
 15661  005E7E  100F               	iorwf	_UART1_RxInterruptHandler+1,w,c
 15662  005E80  1010               	iorwf	_UART1_RxInterruptHandler+2,w,c
 15663  005E82  B4D8               	btfsc	status,2,c
 15664  005E84  0011               	retfie		f
 15665                           
 15666                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 15667  005E86  D801               	call	i2u415_48
 15668  005E88  0011               	retfie		f
 15669  005E8A                     i2u415_48:
 15670  005E8A  0005               	push	
 15671  005E8C  6EFA               	movwf	pclath,c
 15672  005E8E  500E               	movf	_UART1_RxInterruptHandler,w,c
 15673  005E90  6EFD               	movwf	tosl,c
 15674  005E92  500F               	movf	_UART1_RxInterruptHandler+1,w,c
 15675  005E94  6EFE               	movwf	tosh,c
 15676  005E96  5010               	movf	_UART1_RxInterruptHandler+2,w,c
 15677  005E98  6EFF               	movwf	tosu,c
 15678  005E9A  50FA               	movf	pclath,w,c
 15679  005E9C  0012               	return		;indir
 15680  005E9E                     __end_of_UART1_rx_vect_isr:
 15681                           	opt callstack 0
 15682                           
 15683 ;; *************** function _UART1_Receive_ISR *****************
 15684 ;; Defined at:
 15685 ;;		line 227 in file "mcc_generated_files/uart1.c"
 15686 ;; Parameters:    Size  Location     Type
 15687 ;;		None
 15688 ;; Auto vars:     Size  Location     Type
 15689 ;;		None
 15690 ;; Return value:  Size  Location     Type
 15691 ;;                  1  [STACK] void 
 15692 ;; Registers used:
 15693 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15694 ;; Tracked objects:
 15695 ;;		On entry : 0/0
 15696 ;;		On exit  : 0/0
 15697 ;;		Unchanged: 0/0
 15698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15703 ;;Total ram usage:        0 bytes
 15704 ;; Hardware stack levels used:    1
 15705 ;; This function calls:
 15706 ;;		Nothing
 15707 ;; This function is called by:
 15708 ;;		_UART1_Initialize
 15709 ;;		_UART1_rx_vect_isr
 15710 ;; This function uses a reentrant model
 15711 ;;
 15712                           
 15713                           	psect	text95
 15714  005FE0                     __ptext95:
 15715                           	opt callstack 0
 15716  005FE0                     _UART1_Receive_ISR:
 15717                           	opt callstack 18
 15718                           
 15719                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 15720                           
 15721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15722                           ;incstack = 0
 15723  005FE0  0E80               	movlw	low _uart1RxBuffer
 15724  005FE2  2437               	addwf	_uart1RxHead,w,c	;volatile
 15725  005FE4  6ED9               	movwf	fsr2l,c
 15726  005FE6  6ADA               	clrf	fsr2h,c
 15727  005FE8  0E02               	movlw	high _uart1RxBuffer
 15728  005FEA  22DA               	addwfc	fsr2h,f,c
 15729  005FEC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15730  005FF2  2A37               	incf	_uart1RxHead,f,c	;volatile
 15731                           
 15732                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 15733  005FF4  0E3F               	movlw	63
 15734  005FF6  6437               	cpfsgt	_uart1RxHead,c
 15735  005FF8  D001               	goto	l6410
 15736                           
 15737                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 15738  005FFA  6A37               	clrf	_uart1RxHead,c	;volatile
 15739  005FFC                     l6410:
 15740                           
 15741                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 15742  005FFC  2A35               	incf	_uart1RxCount,f,c	;volatile
 15743                           
 15744                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15745  005FFE  0012               	return		;funcret
 15746  006000                     __end_of_UART1_Receive_ISR:
 15747                           	opt callstack 0
 15748                           
 15749 ;; *************** function _UART2_tx_vect_isr *****************
 15750 ;; Defined at:
 15751 ;;		line 195 in file "mcc_generated_files/uart2.c"
 15752 ;; Parameters:    Size  Location     Type
 15753 ;;		None
 15754 ;; Auto vars:     Size  Location     Type
 15755 ;;		None
 15756 ;; Return value:  Size  Location     Type
 15757 ;;                  1    wreg      void 
 15758 ;; Registers used:
 15759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15760 ;; Tracked objects:
 15761 ;;		On entry : 0/0
 15762 ;;		On exit  : 0/0
 15763 ;;		Unchanged: 0/0
 15764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15769 ;;Total ram usage:        0 bytes
 15770 ;; Hardware stack levels used:    1
 15771 ;; Hardware stack levels required when called:    1
 15772 ;; This function calls:
 15773 ;;		Absolute function
 15774 ;;		_UART2_Transmit_ISR
 15775 ;; This function is called by:
 15776 ;;		Interrupt level 2
 15777 ;; This function uses a non-reentrant model
 15778 ;;
 15779                           
 15780                           	psect	text96
 15781  005EA0                     __ptext96:
 15782                           	opt callstack 0
 15783  005EA0                     _UART2_tx_vect_isr:
 15784                           	opt callstack 18
 15785                           
 15786                           ;incstack = 0
 15787  005EA0  EE13  F12A         	lfsr	1,___inthi_sp
 15788                           
 15789                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 15790  005EA4  5011               	movf	_UART2_TxInterruptHandler,w,c
 15791  005EA6  1012               	iorwf	_UART2_TxInterruptHandler+1,w,c
 15792  005EA8  1013               	iorwf	_UART2_TxInterruptHandler+2,w,c
 15793  005EAA  B4D8               	btfsc	status,2,c
 15794  005EAC  0011               	retfie		f
 15795                           
 15796                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 15797  005EAE  D801               	call	i2u417_48
 15798  005EB0  0011               	retfie		f
 15799  005EB2                     i2u417_48:
 15800  005EB2  0005               	push	
 15801  005EB4  6EFA               	movwf	pclath,c
 15802  005EB6  5011               	movf	_UART2_TxInterruptHandler,w,c
 15803  005EB8  6EFD               	movwf	tosl,c
 15804  005EBA  5012               	movf	_UART2_TxInterruptHandler+1,w,c
 15805  005EBC  6EFE               	movwf	tosh,c
 15806  005EBE  5013               	movf	_UART2_TxInterruptHandler+2,w,c
 15807  005EC0  6EFF               	movwf	tosu,c
 15808  005EC2  50FA               	movf	pclath,w,c
 15809  005EC4  0012               	return		;indir
 15810  005EC6                     __end_of_UART2_tx_vect_isr:
 15811                           	opt callstack 0
 15812                           
 15813 ;; *************** function _UART2_Transmit_ISR *****************
 15814 ;; Defined at:
 15815 ;;		line 213 in file "mcc_generated_files/uart2.c"
 15816 ;; Parameters:    Size  Location     Type
 15817 ;;		None
 15818 ;; Auto vars:     Size  Location     Type
 15819 ;;		None
 15820 ;; Return value:  Size  Location     Type
 15821 ;;                  1  [STACK] void 
 15822 ;; Registers used:
 15823 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15824 ;; Tracked objects:
 15825 ;;		On entry : 0/0
 15826 ;;		On exit  : 3B/39
 15827 ;;		Unchanged: 0/0
 15828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15833 ;;Total ram usage:        0 bytes
 15834 ;; Hardware stack levels used:    1
 15835 ;; This function calls:
 15836 ;;		Nothing
 15837 ;; This function is called by:
 15838 ;;		_UART2_Initialize
 15839 ;;		_UART2_tx_vect_isr
 15840 ;; This function uses a reentrant model
 15841 ;;
 15842                           
 15843                           	psect	text97
 15844  005B4A                     __ptext97:
 15845                           	opt callstack 0
 15846  005B4A                     _UART2_Transmit_ISR:
 15847                           	opt callstack 18
 15848                           
 15849                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 15850                           
 15851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15852                           ;incstack = 0
 15853  005B4A  0E40               	movlw	64
 15854  005B4C  6032               	cpfslt	_uart2TxBufferRemaining,c
 15855  005B4E  D010               	goto	l717
 15856                           
 15857                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 15858  005B50  0E40               	movlw	low _uart2TxBuffer
 15859  005B52  2433               	addwf	_uart2TxTail,w,c	;volatile
 15860  005B54  6ED9               	movwf	fsr2l,c
 15861  005B56  6ADA               	clrf	fsr2h,c
 15862  005B58  0E02               	movlw	high _uart2TxBuffer
 15863  005B5A  22DA               	addwfc	fsr2h,f,c
 15864  005B5C  50DF               	movf	indf2,w,c
 15865  005B5E  013D               	movlb	61	; () banked
 15866  005B60  6FD2               	movwf	210,b	;volatile
 15867                           
 15868                           ; BSR set to: 61
 15869  005B62  2A33               	incf	_uart2TxTail,f,c	;volatile
 15870                           
 15871                           ; BSR set to: 61
 15872                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 15873  005B64  0E3F               	movlw	63
 15874  005B66  6433               	cpfsgt	_uart2TxTail,c
 15875  005B68  D001               	goto	l6422
 15876                           
 15877                           ; BSR set to: 61
 15878                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 15879  005B6A  6A33               	clrf	_uart2TxTail,c	;volatile
 15880  005B6C                     l6422:
 15881                           
 15882                           ; BSR set to: 61
 15883                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 15884  005B6C  2A32               	incf	_uart2TxBufferRemaining,f,c	;volatile
 15885                           
 15886                           ;mcc_generated_files/uart2.c: 224:     }
 15887  005B6E  0012               	return	
 15888  005B70                     l717:
 15889                           
 15890                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 15891  005B70  0139               	movlb	57	; () banked
 15892  005B72  9796               	bcf	150,3,b	;volatile
 15893                           
 15894                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15895  005B74  0012               	return		;funcret
 15896  005B76                     __end_of_UART2_Transmit_ISR:
 15897                           	opt callstack 0
 15898                           
 15899 ;; *************** function _UART2_rx_vect_isr *****************
 15900 ;; Defined at:
 15901 ;;		line 203 in file "mcc_generated_files/uart2.c"
 15902 ;; Parameters:    Size  Location     Type
 15903 ;;		None
 15904 ;; Auto vars:     Size  Location     Type
 15905 ;;		None
 15906 ;; Return value:  Size  Location     Type
 15907 ;;                  1    wreg      void 
 15908 ;; Registers used:
 15909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15910 ;; Tracked objects:
 15911 ;;		On entry : 0/0
 15912 ;;		On exit  : 0/0
 15913 ;;		Unchanged: 0/0
 15914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15919 ;;Total ram usage:        0 bytes
 15920 ;; Hardware stack levels used:    1
 15921 ;; Hardware stack levels required when called:    1
 15922 ;; This function calls:
 15923 ;;		Absolute function
 15924 ;;		_UART2_Receive_ISR
 15925 ;; This function is called by:
 15926 ;;		Interrupt level 2
 15927 ;; This function uses a non-reentrant model
 15928 ;;
 15929                           
 15930                           	psect	text98
 15931  005EC8                     __ptext98:
 15932                           	opt callstack 0
 15933  005EC8                     _UART2_rx_vect_isr:
 15934                           	opt callstack 18
 15935                           
 15936                           ;incstack = 0
 15937  005EC8  EE13  F12A         	lfsr	1,___inthi_sp
 15938                           
 15939                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 15940  005ECC  5014               	movf	_UART2_RxInterruptHandler,w,c
 15941  005ECE  1015               	iorwf	_UART2_RxInterruptHandler+1,w,c
 15942  005ED0  1016               	iorwf	_UART2_RxInterruptHandler+2,w,c
 15943  005ED2  B4D8               	btfsc	status,2,c
 15944  005ED4  0011               	retfie		f
 15945                           
 15946                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 15947  005ED6  D801               	call	i2u419_48
 15948  005ED8  0011               	retfie		f
 15949  005EDA                     i2u419_48:
 15950  005EDA  0005               	push	
 15951  005EDC  6EFA               	movwf	pclath,c
 15952  005EDE  5014               	movf	_UART2_RxInterruptHandler,w,c
 15953  005EE0  6EFD               	movwf	tosl,c
 15954  005EE2  5015               	movf	_UART2_RxInterruptHandler+1,w,c
 15955  005EE4  6EFE               	movwf	tosh,c
 15956  005EE6  5016               	movf	_UART2_RxInterruptHandler+2,w,c
 15957  005EE8  6EFF               	movwf	tosu,c
 15958  005EEA  50FA               	movf	pclath,w,c
 15959  005EEC  0012               	return		;indir
 15960  005EEE                     __end_of_UART2_rx_vect_isr:
 15961                           	opt callstack 0
 15962                           
 15963 ;; *************** function _UART2_Receive_ISR *****************
 15964 ;; Defined at:
 15965 ;;		line 233 in file "mcc_generated_files/uart2.c"
 15966 ;; Parameters:    Size  Location     Type
 15967 ;;		None
 15968 ;; Auto vars:     Size  Location     Type
 15969 ;;		None
 15970 ;; Return value:  Size  Location     Type
 15971 ;;                  1  [STACK] void 
 15972 ;; Registers used:
 15973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15974 ;; Tracked objects:
 15975 ;;		On entry : 0/0
 15976 ;;		On exit  : 0/0
 15977 ;;		Unchanged: 0/0
 15978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15983 ;;Total ram usage:        0 bytes
 15984 ;; Hardware stack levels used:    1
 15985 ;; This function calls:
 15986 ;;		Nothing
 15987 ;; This function is called by:
 15988 ;;		_UART2_Initialize
 15989 ;;		_UART2_rx_vect_isr
 15990 ;; This function uses a reentrant model
 15991 ;;
 15992                           
 15993                           	psect	text99
 15994  006000                     __ptext99:
 15995                           	opt callstack 0
 15996  006000                     _UART2_Receive_ISR:
 15997                           	opt callstack 18
 15998                           
 15999                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 16000                           
 16001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16002                           ;incstack = 0
 16003  006000  0E00               	movlw	low _uart2RxBuffer
 16004  006002  2431               	addwf	_uart2RxHead,w,c	;volatile
 16005  006004  6ED9               	movwf	fsr2l,c
 16006  006006  6ADA               	clrf	fsr2h,c
 16007  006008  0E02               	movlw	high _uart2RxBuffer
 16008  00600A  22DA               	addwfc	fsr2h,f,c
 16009  00600C  006F F743 FFDF     	movff	15824,indf2	;volatile
 16010  006012  2A31               	incf	_uart2RxHead,f,c	;volatile
 16011                           
 16012                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 16013  006014  0E3F               	movlw	63
 16014  006016  6431               	cpfsgt	_uart2RxHead,c
 16015  006018  D001               	goto	l6432
 16016                           
 16017                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 16018  00601A  6A31               	clrf	_uart2RxHead,c	;volatile
 16019  00601C                     l6432:
 16020                           
 16021                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 16022  00601C  2A2F               	incf	_uart2RxCount,f,c	;volatile
 16023                           
 16024                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16025  00601E  0012               	return		;funcret
 16026  006020                     __end_of_UART2_Receive_ISR:
 16027                           	opt callstack 0
 16028                           
 16029 ;; *************** function _TMR6_ISR *****************
 16030 ;; Defined at:
 16031 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 16032 ;; Parameters:    Size  Location     Type
 16033 ;;		None
 16034 ;; Auto vars:     Size  Location     Type
 16035 ;;		None
 16036 ;; Return value:  Size  Location     Type
 16037 ;;                  1    wreg      void 
 16038 ;; Registers used:
 16039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16040 ;; Tracked objects:
 16041 ;;		On entry : 0/0
 16042 ;;		On exit  : 0/0
 16043 ;;		Unchanged: 0/0
 16044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16048 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16049 ;;Total ram usage:        1 bytes
 16050 ;; Hardware stack levels used:    1
 16051 ;; Hardware stack levels required when called:    2
 16052 ;; This function calls:
 16053 ;;		_TMR6_CallBack
 16054 ;; This function is called by:
 16055 ;;		Interrupt level 2
 16056 ;; This function uses a non-reentrant model
 16057 ;;
 16058                           
 16059                           	psect	text100
 16060  0060AC                     __ptext100:
 16061                           	opt callstack 0
 16062  0060AC                     _TMR6_ISR:
 16063                           	opt callstack 17
 16064                           
 16065                           ;incstack = 0
 16066  0060AC  0060  F0EC  F05B   	movff	btemp,??_TMR6_ISR
 16067  0060B2  EE13  F12A         	lfsr	1,___inthi_sp
 16068                           
 16069                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 16070  0060B6  0139               	movlb	57	; () banked
 16071  0060B8  91A9               	bcf	169,0,b	;volatile
 16072                           
 16073                           ; BSR set to: 57
 16074                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 16075  0060BA  EC77  F02F         	call	_TMR6_CallBack	;wreg free
 16076  0060BE  0060  F16C  F03B   	movff	??_TMR6_ISR,btemp
 16077  0060C4  0011               	retfie		f
 16078  0060C6                     __end_of_TMR6_ISR:
 16079                           	opt callstack 0
 16080                           
 16081 ;; *************** function _TMR6_CallBack *****************
 16082 ;; Defined at:
 16083 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16084 ;; Parameters:    Size  Location     Type
 16085 ;;		None
 16086 ;; Auto vars:     Size  Location     Type
 16087 ;;		None
 16088 ;; Return value:  Size  Location     Type
 16089 ;;                  1  [STACK] void 
 16090 ;; Registers used:
 16091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16092 ;; Tracked objects:
 16093 ;;		On entry : 3F/39
 16094 ;;		On exit  : 0/0
 16095 ;;		Unchanged: 0/0
 16096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16101 ;;Total ram usage:        0 bytes
 16102 ;; Hardware stack levels used:    1
 16103 ;; Hardware stack levels required when called:    1
 16104 ;; This function calls:
 16105 ;;		Absolute function
 16106 ;;		_TMR6_DefaultInterruptHandler
 16107 ;; This function is called by:
 16108 ;;		_TMR6_ISR
 16109 ;; This function uses a reentrant model
 16110 ;;
 16111                           
 16112                           	psect	text101
 16113  005EEE                     __ptext101:
 16114                           	opt callstack 0
 16115  005EEE                     _TMR6_CallBack:
 16116                           	opt callstack 17
 16117                           
 16118                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 16119                           
 16120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16121                           ;incstack = 0
 16122  005EEE  0100               	movlb	0	; () banked
 16123  005EF0  51F3               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16124  005EF2  11F4               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16125  005EF4  11F5               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16126  005EF6  B4D8               	btfsc	status,2,c
 16127  005EF8  0012               	return	
 16128                           
 16129                           ; BSR set to: 0
 16130                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 16131  005EFA  D801               	call	u505_48
 16132  005EFC  0012               	return	
 16133  005EFE                     u505_48:
 16134  005EFE  0005               	push	
 16135  005F00  6EFA               	movwf	pclath,c
 16136  005F02  51F3               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16137  005F04  6EFD               	movwf	tosl,c
 16138  005F06  51F4               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16139  005F08  6EFE               	movwf	tosh,c
 16140  005F0A  51F5               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16141  005F0C  6EFF               	movwf	tosu,c
 16142  005F0E  50FA               	movf	pclath,w,c
 16143  005F10  0012               	return		;indir
 16144  005F12                     __end_of_TMR6_CallBack:
 16145                           	opt callstack 0
 16146                           
 16147 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 16148 ;; Defined at:
 16149 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 16150 ;; Parameters:    Size  Location     Type
 16151 ;;		None
 16152 ;; Auto vars:     Size  Location     Type
 16153 ;;  i               1  [STACK] unsigned char 
 16154 ;; Return value:  Size  Location     Type
 16155 ;;                  1  [STACK] void 
 16156 ;; Registers used:
 16157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 16158 ;; Tracked objects:
 16159 ;;		On entry : 3F/0
 16160 ;;		On exit  : 0/0
 16161 ;;		Unchanged: 0/0
 16162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16167 ;;Total ram usage:        0 bytes
 16168 ;; Hardware stack levels used:    1
 16169 ;; This function calls:
 16170 ;;		Nothing
 16171 ;; This function is called by:
 16172 ;;		_TMR6_Initialize
 16173 ;;		_TMR6_CallBack
 16174 ;; This function uses a reentrant model
 16175 ;;
 16176                           
 16177                           	psect	text102
 16178  005852                     __ptext102:
 16179                           	opt callstack 0
 16180  005852                     _TMR6_DefaultInterruptHandler:
 16181                           	opt callstack 0
 16182                           
 16183                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16184  005852  52E6               	movf	postinc1,f,c
 16185                           
 16186                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 16187                           ;stkvar	_i @ sp[(-1)+0]
 16188                           
 16189                           ;incstack = 0
 16190  005854  0EFF               	movlw	-1
 16191  005856  6AE3               	clrf	plusw1,c
 16192  005858                     l7954:
 16193                           
 16194                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 16195                           ;stkvar	_i @ sp[(-1)+0]
 16196  005858  0EFF               	movlw	-1
 16197  00585A  50E3               	movf	plusw1,w,c
 16198  00585C  0D02               	mullw	2
 16199  00585E  50F3               	movf	prodl,w,c
 16200  005860  0FD9               	addlw	low _tickCount
 16201  005862  6ED9               	movwf	fsr2l,c
 16202  005864  6ADA               	clrf	fsr2h,c
 16203  005866  50DE               	movf	postinc2,w,c
 16204  005868  10DE               	iorwf	postinc2,w,c
 16205  00586A  B4D8               	btfsc	status,2,c
 16206  00586C  D00A               	goto	l7958
 16207                           
 16208                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 16209                           ;stkvar	_i @ sp[(-1)+0]
 16210  00586E  0EFF               	movlw	-1
 16211  005870  50E3               	movf	plusw1,w,c
 16212  005872  0D02               	mullw	2
 16213  005874  50F3               	movf	prodl,w,c
 16214  005876  0FD9               	addlw	low _tickCount
 16215  005878  6ED9               	movwf	fsr2l,c
 16216  00587A  6ADA               	clrf	fsr2h,c
 16217  00587C  06DE               	decf	postinc2,f,c
 16218  00587E  0E00               	movlw	0
 16219  005880  5ADD               	subwfb	postdec2,f,c
 16220  005882                     l7958:
 16221                           
 16222                           ;mcc_generated_files/tmr6.c: 207:  }
 16223                           ;stkvar	_i @ sp[(-1)+0]
 16224  005882  0EFF               	movlw	-1
 16225  005884  2AE3               	incf	plusw1,f,c
 16226                           
 16227                           ;stkvar	_i @ sp[(-1)+0]
 16228  005886  0EFF               	movlw	-1
 16229  005888  006F FF8C  F03B    	movff	plusw1,btemp
 16230  00588E  0E05               	movlw	5
 16231  005890  643B               	cpfsgt	btemp,c
 16232  005892  D7E2               	goto	l7954
 16233                           
 16234                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16235  005894  52E5               	movf	postdec1,f,c
 16236  005896  0012               	return		;funcret
 16237  005898                     __end_of_TMR6_DefaultInterruptHandler:
 16238                           	opt callstack 0
 16239                           
 16240 ;; *************** function _DMA1_DMASCNT_ISR *****************
 16241 ;; Defined at:
 16242 ;;		line 126 in file "mcc_generated_files/dma1.c"
 16243 ;; Parameters:    Size  Location     Type
 16244 ;;		None
 16245 ;; Auto vars:     Size  Location     Type
 16246 ;;		None
 16247 ;; Return value:  Size  Location     Type
 16248 ;;                  1    wreg      void 
 16249 ;; Registers used:
 16250 ;;		None
 16251 ;; Tracked objects:
 16252 ;;		On entry : 0/0
 16253 ;;		On exit  : 3F/0
 16254 ;;		Unchanged: 0/0
 16255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16260 ;;Total ram usage:        0 bytes
 16261 ;; Hardware stack levels used:    1
 16262 ;; This function calls:
 16263 ;;		Nothing
 16264 ;; This function is called by:
 16265 ;;		Interrupt level 2
 16266 ;; This function uses a non-reentrant model
 16267 ;;
 16268                           
 16269                           	psect	text103
 16270  006160                     __ptext103:
 16271                           	opt callstack 0
 16272  006160                     _DMA1_DMASCNT_ISR:
 16273                           	opt callstack 19
 16274                           
 16275                           ;incstack = 0
 16276  006160  EE13  F12A         	lfsr	1,___inthi_sp
 16277                           
 16278                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 16279  006164  0139               	movlb	57	; () banked
 16280  006166  91A2               	bcf	162,0,b	;volatile
 16281                           
 16282                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 16283  006168  0100               	movlb	0	; () banked
 16284  00616A  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 16285                           
 16286                           ; BSR set to: 0
 16287  00616C  0011               	retfie		f
 16288  00616E                     __end_of_DMA1_DMASCNT_ISR:
 16289                           	opt callstack 0
 16290                           
 16291 ;; *************** function _DMA1_DMADCNT_ISR *****************
 16292 ;; Defined at:
 16293 ;;		line 133 in file "mcc_generated_files/dma1.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;		None
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;		None
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  1    wreg      void 
 16300 ;; Registers used:
 16301 ;;		None
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 3F/39
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16311 ;;Total ram usage:        0 bytes
 16312 ;; Hardware stack levels used:    1
 16313 ;; This function calls:
 16314 ;;		Nothing
 16315 ;; This function is called by:
 16316 ;;		Interrupt level 2
 16317 ;; This function uses a non-reentrant model
 16318 ;;
 16319                           
 16320                           	psect	text104
 16321  006178                     __ptext104:
 16322                           	opt callstack 0
 16323  006178                     _DMA1_DMADCNT_ISR:
 16324                           	opt callstack 19
 16325                           
 16326                           ; BSR set to: 0
 16327                           ;incstack = 0
 16328  006178  EE13  F12A         	lfsr	1,___inthi_sp
 16329                           
 16330                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 16331  00617C  0139               	movlb	57	; () banked
 16332  00617E  93A2               	bcf	162,1,b	;volatile
 16333                           
 16334                           ; BSR set to: 57
 16335  006180  0011               	retfie		f
 16336  006182                     __end_of_DMA1_DMADCNT_ISR:
 16337                           	opt callstack 0
 16338                           
 16339 ;; *************** function _DMA1_DMAA_ISR *****************
 16340 ;; Defined at:
 16341 ;;		line 143 in file "mcc_generated_files/dma1.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;		None
 16344 ;; Auto vars:     Size  Location     Type
 16345 ;;		None
 16346 ;; Return value:  Size  Location     Type
 16347 ;;                  1    wreg      void 
 16348 ;; Registers used:
 16349 ;;		None
 16350 ;; Tracked objects:
 16351 ;;		On entry : 0/0
 16352 ;;		On exit  : 3F/39
 16353 ;;		Unchanged: 0/0
 16354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16359 ;;Total ram usage:        0 bytes
 16360 ;; Hardware stack levels used:    1
 16361 ;; This function calls:
 16362 ;;		Nothing
 16363 ;; This function is called by:
 16364 ;;		Interrupt level 2
 16365 ;; This function uses a non-reentrant model
 16366 ;;
 16367                           
 16368                           	psect	text105
 16369  006184                     __ptext105:
 16370                           	opt callstack 0
 16371  006184                     _DMA1_DMAA_ISR:
 16372                           	opt callstack 19
 16373                           
 16374                           ; BSR set to: 57
 16375                           ;incstack = 0
 16376  006184  EE13  F12A         	lfsr	1,___inthi_sp
 16377                           
 16378                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 16379  006188  0139               	movlb	57	; () banked
 16380  00618A  97A2               	bcf	162,3,b	;volatile
 16381                           
 16382                           ; BSR set to: 57
 16383  00618C  0011               	retfie		f
 16384  00618E                     __end_of_DMA1_DMAA_ISR:
 16385                           	opt callstack 0
 16386                           
 16387 ;; *************** function _DMA1_DMAOR_ISR *****************
 16388 ;; Defined at:
 16389 ;;		line 154 in file "mcc_generated_files/dma1.c"
 16390 ;; Parameters:    Size  Location     Type
 16391 ;;		None
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;		None
 16394 ;; Return value:  Size  Location     Type
 16395 ;;                  1    wreg      void 
 16396 ;; Registers used:
 16397 ;;		None
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 3F/39
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16407 ;;Total ram usage:        0 bytes
 16408 ;; Hardware stack levels used:    1
 16409 ;; This function calls:
 16410 ;;		Nothing
 16411 ;; This function is called by:
 16412 ;;		Interrupt level 2
 16413 ;; This function uses a non-reentrant model
 16414 ;;
 16415                           
 16416                           	psect	text106
 16417  006190                     __ptext106:
 16418                           	opt callstack 0
 16419  006190                     _DMA1_DMAOR_ISR:
 16420                           	opt callstack 19
 16421                           
 16422                           ; BSR set to: 57
 16423                           ;incstack = 0
 16424  006190  EE13  F12A         	lfsr	1,___inthi_sp
 16425                           
 16426                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 16427  006194  0139               	movlb	57	; () banked
 16428  006196  95A2               	bcf	162,2,b	;volatile
 16429                           
 16430                           ; BSR set to: 57
 16431  006198  0011               	retfie		f
 16432  00619A                     __end_of_DMA1_DMAOR_ISR:
 16433                           	opt callstack 0
 16434                           
 16435 ;; *************** function _TMR5_ISR *****************
 16436 ;; Defined at:
 16437 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 16438 ;; Parameters:    Size  Location     Type
 16439 ;;		None
 16440 ;; Auto vars:     Size  Location     Type
 16441 ;;		None
 16442 ;; Return value:  Size  Location     Type
 16443 ;;                  1    wreg      void 
 16444 ;; Registers used:
 16445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 16446 ;; Tracked objects:
 16447 ;;		On entry : 0/0
 16448 ;;		On exit  : 0/0
 16449 ;;		Unchanged: 0/0
 16450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16455 ;;Total ram usage:        1 bytes
 16456 ;; Hardware stack levels used:    1
 16457 ;; Hardware stack levels required when called:    2
 16458 ;; This function calls:
 16459 ;;		_TMR5_CallBack
 16460 ;;		_TMR5_WriteTimer
 16461 ;; This function is called by:
 16462 ;;		Interrupt level 2
 16463 ;; This function uses a non-reentrant model
 16464 ;;
 16465                           
 16466                           	psect	text107
 16467  005A14                     __ptext107:
 16468                           	opt callstack 0
 16469  005A14                     _TMR5_ISR:
 16470                           	opt callstack 17
 16471                           
 16472                           ; BSR set to: 57
 16473                           ;incstack = 0
 16474  005A14  0060  F118  F05C   	movff	btemp+11,??_TMR5_ISR
 16475  005A1A  EE13  F12A         	lfsr	1,___inthi_sp
 16476                           
 16477                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 16478  005A1E  0139               	movlb	57	; () banked
 16479  005A20  9DA8               	bcf	168,6,b	;volatile
 16480                           
 16481                           ; BSR set to: 57
 16482                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 16483  005A22  0060  F0A3  FFE6   	movff	_timer5ReloadVal,postinc1
 16484  005A28  0060  F0A7  FFE6   	movff	_timer5ReloadVal+1,postinc1
 16485  005A2E  EC6D  F02C         	call	_TMR5_WriteTimer	;wreg free
 16486                           
 16487                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 16488  005A32  4A26               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 16489  005A34  2A27               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 16490  005A36  5027               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 16491  005A38  E104               	bnz	i2u420_40
 16492  005A3A  0E32               	movlw	50
 16493  005A3C  5C26               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 16494  005A3E  A0D8               	btfss	status,0,c
 16495  005A40  D004               	goto	i2l1139
 16496  005A42                     i2u420_40:
 16497                           
 16498                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 16499  005A42  EC89  F02F         	call	_TMR5_CallBack	;wreg free
 16500                           
 16501                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 16502  005A46  6A26               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 16503  005A48  6A27               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 16504  005A4A                     i2l1139:
 16505  005A4A  0060  F170  F046   	movff	??_TMR5_ISR,btemp+11
 16506  005A50  0011               	retfie		f
 16507  005A52                     __end_of_TMR5_ISR:
 16508                           	opt callstack 0
 16509                           
 16510 ;; *************** function _TMR5_WriteTimer *****************
 16511 ;; Defined at:
 16512 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 16513 ;; Parameters:    Size  Location     Type
 16514 ;;  timerVal        2  [STACK] unsigned short 
 16515 ;; Auto vars:     Size  Location     Type
 16516 ;;		None
 16517 ;; Return value:  Size  Location     Type
 16518 ;;                  1  [STACK] void 
 16519 ;; Registers used:
 16520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16521 ;; Tracked objects:
 16522 ;;		On entry : 3F/39
 16523 ;;		On exit  : 0/0
 16524 ;;		Unchanged: 0/0
 16525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16530 ;;Total ram usage:        0 bytes
 16531 ;; Hardware stack levels used:    1
 16532 ;; This function calls:
 16533 ;;		Nothing
 16534 ;; This function is called by:
 16535 ;;		_TMR5_ISR
 16536 ;; This function uses a reentrant model
 16537 ;;
 16538                           
 16539                           	psect	text108
 16540  0058DA                     __ptext108:
 16541                           	opt callstack 0
 16542  0058DA                     _TMR5_WriteTimer:
 16543                           	opt callstack 18
 16544                           
 16545                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 16546                           
 16547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16548                           ;incstack = 0
 16549  0058DA  A49A               	btfss	16282,2,c	;volatile
 16550  0058DC  D00F               	goto	l4036
 16551                           
 16552                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 16553  0058DE  909A               	bcf	16282,0,c	;volatile
 16554                           
 16555                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 16556                           ;stkvar	_timerVal @ sp[(0)+-2]
 16557  0058E0  0EFF               	movlw	255
 16558  0058E2  24E1               	addwf	fsr1l,w,c
 16559  0058E4  6ED9               	movwf	fsr2l,c
 16560  0058E6  0EFF               	movlw	255
 16561  0058E8  20E2               	addwfc	fsr1h,w,c
 16562  0058EA  6EDA               	movwf	fsr2h,c
 16563  0058EC  50DF               	movf	indf2,w,c
 16564  0058EE  6E99               	movwf	16281,c	;volatile
 16565                           
 16566                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 16567                           ;stkvar	_timerVal @ sp[(0)+-2]
 16568  0058F0  0EFE               	movlw	-2
 16569  0058F2  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16570                           
 16571                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 16572  0058F8  809A               	bsf	16282,0,c	;volatile
 16573                           
 16574                           ;mcc_generated_files/tmr5.c: 141:  } else {
 16575  0058FA  D00C               	goto	l1122
 16576  0058FC                     l4036:
 16577                           
 16578                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 16579                           ;stkvar	_timerVal @ sp[(0)+-2]
 16580  0058FC  0EFF               	movlw	255
 16581  0058FE  24E1               	addwf	fsr1l,w,c
 16582  005900  6ED9               	movwf	fsr2l,c
 16583  005902  0EFF               	movlw	255
 16584  005904  20E2               	addwfc	fsr1h,w,c
 16585  005906  6EDA               	movwf	fsr2h,c
 16586  005908  50DF               	movf	indf2,w,c
 16587  00590A  6E99               	movwf	16281,c	;volatile
 16588                           
 16589                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 16590                           ;stkvar	_timerVal @ sp[(0)+-2]
 16591  00590C  0EFE               	movlw	-2
 16592  00590E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16593  005914                     l1122:
 16594                           
 16595                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 16596  005914  52E5               	movf	postdec1,f,c
 16597  005916  52E5               	movf	postdec1,f,c
 16598  005918  0012               	return		;funcret
 16599  00591A                     __end_of_TMR5_WriteTimer:
 16600                           	opt callstack 0
 16601                           
 16602 ;; *************** function _TMR5_CallBack *****************
 16603 ;; Defined at:
 16604 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 16605 ;; Parameters:    Size  Location     Type
 16606 ;;		None
 16607 ;; Auto vars:     Size  Location     Type
 16608 ;;		None
 16609 ;; Return value:  Size  Location     Type
 16610 ;;                  1  [STACK] void 
 16611 ;; Registers used:
 16612 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 16613 ;; Tracked objects:
 16614 ;;		On entry : 0/39
 16615 ;;		On exit  : 0/0
 16616 ;;		Unchanged: 0/0
 16617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16622 ;;Total ram usage:        0 bytes
 16623 ;; Hardware stack levels used:    1
 16624 ;; Hardware stack levels required when called:    1
 16625 ;; This function calls:
 16626 ;;		Absolute function
 16627 ;;		_TMR5_DefaultInterruptHandler
 16628 ;; This function is called by:
 16629 ;;		_TMR5_ISR
 16630 ;; This function uses a reentrant model
 16631 ;;
 16632                           
 16633                           	psect	text109
 16634  005F12                     __ptext109:
 16635                           	opt callstack 0
 16636  005F12                     _TMR5_CallBack:
 16637                           	opt callstack 17
 16638                           
 16639                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 16640                           
 16641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16642                           ;incstack = 0
 16643  005F12  0100               	movlb	0	; () banked
 16644  005F14  51F0               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16645  005F16  11F1               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16646  005F18  11F2               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16647  005F1A  B4D8               	btfsc	status,2,c
 16648  005F1C  0012               	return	
 16649                           
 16650                           ; BSR set to: 0
 16651                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 16652  005F1E  D801               	call	u351_48
 16653  005F20  0012               	return	
 16654  005F22                     u351_48:
 16655  005F22  0005               	push	
 16656  005F24  6EFA               	movwf	pclath,c
 16657  005F26  51F0               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16658  005F28  6EFD               	movwf	tosl,c
 16659  005F2A  51F1               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16660  005F2C  6EFE               	movwf	tosh,c
 16661  005F2E  51F2               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16662  005F30  6EFF               	movwf	tosu,c
 16663  005F32  50FA               	movf	pclath,w,c
 16664  005F34  0012               	return		;indir
 16665  005F36                     __end_of_TMR5_CallBack:
 16666                           	opt callstack 0
 16667                           
 16668 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 16669 ;; Defined at:
 16670 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 16671 ;; Parameters:    Size  Location     Type
 16672 ;;		None
 16673 ;; Auto vars:     Size  Location     Type
 16674 ;;		None
 16675 ;; Return value:  Size  Location     Type
 16676 ;;                  1  [STACK] void 
 16677 ;; Registers used:
 16678 ;;		wreg, status,2, status,0, btemp+11
 16679 ;; Tracked objects:
 16680 ;;		On entry : 3F/0
 16681 ;;		On exit  : 0/0
 16682 ;;		Unchanged: 0/0
 16683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16688 ;;Total ram usage:        0 bytes
 16689 ;; Hardware stack levels used:    1
 16690 ;; This function calls:
 16691 ;;		Nothing
 16692 ;; This function is called by:
 16693 ;;		_TMR5_Initialize
 16694 ;;		_TMR5_CallBack
 16695 ;; This function uses a reentrant model
 16696 ;;
 16697                           
 16698                           	psect	text110
 16699  0060C6                     __ptext110:
 16700                           	opt callstack 0
 16701  0060C6                     _TMR5_DefaultInterruptHandler:
 16702                           	opt callstack 17
 16703                           
 16704                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 16705                           
 16706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16707                           ;incstack = 0
 16708  0060C6  A0BE               	btfss	16318,0,c	;volatile
 16709  0060C8  D002               	goto	u330_40
 16710  0060CA  0E01               	movlw	1
 16711  0060CC  D001               	goto	u330_46
 16712  0060CE                     u330_40:
 16713  0060CE  0E00               	movlw	0
 16714  0060D0                     u330_46:
 16715  0060D0  0AFF               	xorlw	255
 16716  0060D2  6E46               	movwf	btemp+11,c
 16717  0060D4  50BE               	movf	16318,w,c	;volatile
 16718  0060D6  1846               	xorwf	btemp+11,w,c
 16719  0060D8  0BFE               	andlw	-2
 16720  0060DA  1846               	xorwf	btemp+11,w,c
 16721  0060DC  6EBE               	movwf	16318,c	;volatile
 16722                           
 16723                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16724  0060DE  0012               	return		;funcret
 16725  0060E0                     __end_of_TMR5_DefaultInterruptHandler:
 16726                           	opt callstack 0
 16727                           
 16728                           ;
 16729                           ; Interrupt Vector Table @ 0x8
 16730                           ;
 16731                           
 16732                           	psect	ivt0x8
 16733  000008                     __pivt0x8:
 16734                           	opt callstack 0
 16735  000008                     ivt0x8_base:
 16736                           	opt callstack 0
 16737                           
 16738                           ; Vector 0 : SWINT
 16739  000008  1872               	dw	_Default_ISR shr (0+2)
 16740                           
 16741                           ; Vector 1 : HLVD
 16742  00000A  1872               	dw	_Default_ISR shr (0+2)
 16743                           
 16744                           ; Vector 2 : OSF
 16745  00000C  1872               	dw	_Default_ISR shr (0+2)
 16746                           
 16747                           ; Vector 3 : CSW
 16748  00000E  1872               	dw	_Default_ISR shr (0+2)
 16749                           
 16750                           ; Vector 4 : NVM
 16751  000010  1872               	dw	_Default_ISR shr (0+2)
 16752                           
 16753                           ; Vector 5 : SCAN
 16754  000012  1872               	dw	_Default_ISR shr (0+2)
 16755                           
 16756                           ; Vector 6 : CRC
 16757  000014  1872               	dw	_Default_ISR shr (0+2)
 16758                           
 16759                           ; Vector 7 : IOC
 16760  000016  1872               	dw	_Default_ISR shr (0+2)
 16761                           
 16762                           ; Vector 8 : INT0
 16763  000018  184C               	dw	_INT0_ISR shr (0+2)
 16764                           
 16765                           ; Vector 9 : ZCD
 16766  00001A  1872               	dw	_Default_ISR shr (0+2)
 16767                           
 16768                           ; Vector 10 : AD
 16769  00001C  16FD               	dw	_ADCC_ISR shr (0+2)
 16770                           
 16771                           ; Vector 11 : ADT
 16772  00001E  1872               	dw	_Default_ISR shr (0+2)
 16773                           
 16774                           ; Vector 12 : CMP1
 16775  000020  1872               	dw	_Default_ISR shr (0+2)
 16776                           
 16777                           ; Vector 13 : SMT1
 16778  000022  1872               	dw	_Default_ISR shr (0+2)
 16779                           
 16780                           ; Vector 14 : SMT1PRA
 16781  000024  1872               	dw	_Default_ISR shr (0+2)
 16782                           
 16783                           ; Vector 15 : SMT1PRW
 16784  000026  1872               	dw	_Default_ISR shr (0+2)
 16785                           
 16786                           ; Vector 16 : DMA1SCNT
 16787  000028  1858               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 16788                           
 16789                           ; Vector 17 : DMA1DCNT
 16790  00002A  185E               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 16791                           
 16792                           ; Vector 18 : DMA1OR
 16793  00002C  1864               	dw	_DMA1_DMAOR_ISR shr (0+2)
 16794                           
 16795                           ; Vector 19 : DMA1A
 16796  00002E  1861               	dw	_DMA1_DMAA_ISR shr (0+2)
 16797                           
 16798                           ; Vector 20 : SPI1RX
 16799  000030  1872               	dw	_Default_ISR shr (0+2)
 16800                           
 16801                           ; Vector 21 : SPI1TX
 16802  000032  1872               	dw	_Default_ISR shr (0+2)
 16803                           
 16804                           ; Vector 22 : SPI1
 16805  000034  1872               	dw	_Default_ISR shr (0+2)
 16806                           
 16807                           ; Vector 23 : I2C1RX
 16808  000036  1872               	dw	_Default_ISR shr (0+2)
 16809                           
 16810                           ; Vector 24 : I2C1TX
 16811  000038  1872               	dw	_Default_ISR shr (0+2)
 16812                           
 16813                           ; Vector 25 : I2C1
 16814  00003A  1872               	dw	_Default_ISR shr (0+2)
 16815                           
 16816                           ; Vector 26 : I2C1E
 16817  00003C  1872               	dw	_Default_ISR shr (0+2)
 16818                           
 16819                           ; Vector 27 : U1RX
 16820  00003E  179E               	dw	_UART1_rx_vect_isr shr (0+2)
 16821                           
 16822                           ; Vector 28 : U1TX
 16823  000040  1794               	dw	_UART1_tx_vect_isr shr (0+2)
 16824                           
 16825                           ; Vector 29 : U1E
 16826  000042  1872               	dw	_Default_ISR shr (0+2)
 16827                           
 16828                           ; Vector 30 : U1
 16829  000044  1872               	dw	_Default_ISR shr (0+2)
 16830                           
 16831                           ; Vector 31 : TMR0
 16832  000046  1872               	dw	_Default_ISR shr (0+2)
 16833                           
 16834                           ; Vector 32 : TMR1
 16835  000048  1872               	dw	_Default_ISR shr (0+2)
 16836                           
 16837                           ; Vector 33 : TMR1G
 16838  00004A  1872               	dw	_Default_ISR shr (0+2)
 16839                           
 16840                           ; Vector 34 : TMR2
 16841  00004C  1872               	dw	_Default_ISR shr (0+2)
 16842                           
 16843                           ; Vector 35 : CCP1
 16844  00004E  1872               	dw	_Default_ISR shr (0+2)
 16845                           
 16846                           ; Vector 36 : Undefined
 16847  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 16848                           
 16849                           ; Vector 37 : NCO1
 16850  000052  1872               	dw	_Default_ISR shr (0+2)
 16851                           
 16852                           ; Vector 38 : CWG1
 16853  000054  1872               	dw	_Default_ISR shr (0+2)
 16854                           
 16855                           ; Vector 39 : CLC1
 16856  000056  1872               	dw	_Default_ISR shr (0+2)
 16857                           
 16858                           ; Vector 40 : INT1
 16859  000058  1850               	dw	_INT1_ISR shr (0+2)
 16860                           
 16861                           ; Vector 41 : CMP2
 16862  00005A  1872               	dw	_Default_ISR shr (0+2)
 16863                           
 16864                           ; Vector 42 : DMA2SCNT
 16865  00005C  1872               	dw	_Default_ISR shr (0+2)
 16866                           
 16867                           ; Vector 43 : DMA2DCNT
 16868  00005E  1872               	dw	_Default_ISR shr (0+2)
 16869                           
 16870                           ; Vector 44 : DMA2OR
 16871  000060  1872               	dw	_Default_ISR shr (0+2)
 16872                           
 16873                           ; Vector 45 : DMA2A
 16874  000062  1872               	dw	_Default_ISR shr (0+2)
 16875                           
 16876                           ; Vector 46 : I2C2RX
 16877  000064  1872               	dw	_Default_ISR shr (0+2)
 16878                           
 16879                           ; Vector 47 : I2C2TX
 16880  000066  1872               	dw	_Default_ISR shr (0+2)
 16881                           
 16882                           ; Vector 48 : I2C2
 16883  000068  1872               	dw	_Default_ISR shr (0+2)
 16884                           
 16885                           ; Vector 49 : I2C2E
 16886  00006A  1872               	dw	_Default_ISR shr (0+2)
 16887                           
 16888                           ; Vector 50 : U2RX
 16889  00006C  17B2               	dw	_UART2_rx_vect_isr shr (0+2)
 16890                           
 16891                           ; Vector 51 : U2TX
 16892  00006E  17A8               	dw	_UART2_tx_vect_isr shr (0+2)
 16893                           
 16894                           ; Vector 52 : U2E
 16895  000070  1872               	dw	_Default_ISR shr (0+2)
 16896                           
 16897                           ; Vector 53 : U2
 16898  000072  1872               	dw	_Default_ISR shr (0+2)
 16899                           
 16900                           ; Vector 54 : TMR3
 16901  000074  1872               	dw	_Default_ISR shr (0+2)
 16902                           
 16903                           ; Vector 55 : TMR3G
 16904  000076  1872               	dw	_Default_ISR shr (0+2)
 16905                           
 16906                           ; Vector 56 : TMR4
 16907  000078  1872               	dw	_Default_ISR shr (0+2)
 16908                           
 16909                           ; Vector 57 : CCP2
 16910  00007A  1872               	dw	_Default_ISR shr (0+2)
 16911                           
 16912                           ; Vector 58 : Undefined
 16913  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 16914                           
 16915                           ; Vector 59 : CWG2
 16916  00007E  1872               	dw	_Default_ISR shr (0+2)
 16917                           
 16918                           ; Vector 60 : CLC2
 16919  000080  1872               	dw	_Default_ISR shr (0+2)
 16920                           
 16921                           ; Vector 61 : INT2
 16922  000082  1854               	dw	_INT2_ISR shr (0+2)
 16923                           
 16924                           ; Vector 62 : Undefined
 16925  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 16926                           
 16927                           ; Vector 63 : Undefined
 16928  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 16929                           
 16930                           ; Vector 64 : Undefined
 16931  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 16932                           
 16933                           ; Vector 65 : Undefined
 16934  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 16935                           
 16936                           ; Vector 66 : Undefined
 16937  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 16938                           
 16939                           ; Vector 67 : Undefined
 16940  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 16941                           
 16942                           ; Vector 68 : Undefined
 16943  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 16944                           
 16945                           ; Vector 69 : Undefined
 16946  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 16947                           
 16948                           ; Vector 70 : TMR5
 16949  000094  1685               	dw	_TMR5_ISR shr (0+2)
 16950                           
 16951                           ; Vector 71 : TMR5G
 16952  000096  1872               	dw	_Default_ISR shr (0+2)
 16953                           
 16954                           ; Vector 72 : TMR6
 16955  000098  182B               	dw	_TMR6_ISR shr (0+2)
 16956                           
 16957                           ; Vector 73 : CCP3
 16958  00009A  1872               	dw	_Default_ISR shr (0+2)
 16959                           
 16960                           ; Vector 74 : CWG3
 16961  00009C  1872               	dw	_Default_ISR shr (0+2)
 16962                           
 16963                           ; Vector 75 : CLC3
 16964  00009E  1872               	dw	_Default_ISR shr (0+2)
 16965                           
 16966                           ; Vector 76 : Undefined
 16967  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 16968                           
 16969                           ; Vector 77 : Undefined
 16970  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 16971                           
 16972                           ; Vector 78 : Undefined
 16973  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 16974                           
 16975                           ; Vector 79 : Undefined
 16976  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 16977                           
 16978                           ; Vector 80 : CCP4
 16979  0000A8  1872               	dw	_Default_ISR shr (0+2)
 16980                           
 16981                           ; Vector 81 : CLC4
 16982  0000AA  1872               	dw	_Default_ISR shr (0+2)
 16983  0000AC                     ivt0x8_undefint:
 16984                           	opt callstack 0
 16985  0000AC  00FF               	reset	
 16986                           
 16987                           	psect	text111
 16988  000000                     __ptext111:
 16989                           	opt callstack 0
 16990                           
 16991                           	psect	rparam
 16992  0000                     
 16993                           	psect	temp
 16994  00003B                     btemp:
 16995                           	opt callstack 0
 16996  00003B                     	ds	32
 16997  0000                     wtemp0	set	btemp
 16998  0000                     wtemp1	set	btemp+2
 16999  0000                     wtemp2	set	btemp+4
 17000  0000                     wtemp3	set	btemp+6
 17001  0000                     wtemp4	set	btemp+8
 17002  0000                     wtemp5	set	btemp+10
 17003  0000                     wtemp8	set	btemp+1
 17004  0000                     ttemp0	set	btemp
 17005  0000                     ttemp1	set	btemp+3
 17006  0000                     ttemp2	set	btemp+6
 17007  0000                     ttemp3	set	btemp+9
 17008  0000                     ttemp5	set	btemp+1
 17009  0000                     ttemp6	set	btemp+4
 17010  0000                     ttemp7	set	btemp+8
 17011  0000                     ltemp0	set	btemp
 17012  0000                     ltemp1	set	btemp+4
 17013  0000                     ltemp2	set	btemp+8
 17014  0000                     lltemp0	set	btemp
 17015  0000                     lltemp1	set	btemp+8
 17016  0000                     lltemp2	set	btemp+16
 17017  0000                     lltemp3	set	btemp+24
 17018                           tosu	equ	0x3FFF
 17019                           tosh	equ	0x3FFE
 17020                           tosl	equ	0x3FFD
 17021                           stkptr	equ	0x3FFC
 17022                           pclatu	equ	0x3FFB
 17023                           pclath	equ	0x3FFA
 17024                           pcl	equ	0x3FF9
 17025                           tblptru	equ	0x3FF8
 17026                           tblptrh	equ	0x3FF7
 17027                           tblptrl	equ	0x3FF6
 17028                           tablat	equ	0x3FF5
 17029                           prodh	equ	0x3FF4
 17030                           prodl	equ	0x3FF3
 17031                           indf0	equ	0x3FEF
 17032                           postinc0	equ	0x3FEE
 17033                           postdec0	equ	0x3FED
 17034                           preinc0	equ	0x3FEC
 17035                           plusw0	equ	0x3FEB
 17036                           fsr0h	equ	0x3FEA
 17037                           fsr0l	equ	0x3FE9
 17038                           wreg	equ	0x3FE8
 17039                           indf1	equ	0x3FE7
 17040                           postinc1	equ	0x3FE6
 17041                           postdec1	equ	0x3FE5
 17042                           preinc1	equ	0x3FE4
 17043                           plusw1	equ	0x3FE3
 17044                           fsr1h	equ	0x3FE2
 17045                           fsr1l	equ	0x3FE1
 17046                           bsr	equ	0x3FE0
 17047                           indf2	equ	0x3FDF
 17048                           postinc2	equ	0x3FDE
 17049                           postdec2	equ	0x3FDD
 17050                           preinc2	equ	0x3FDC
 17051                           plusw2	equ	0x3FDB
 17052                           fsr2h	equ	0x3FDA
 17053                           fsr2l	equ	0x3FD9
 17054                           status	equ	0x3FD8


Data Sizes:
    Strings     181
    Constant    0
    Data        328
    BSS         538
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      61
    BANK0           160      0     154
    BANK1           256      0     207
    BANK2           256      0     256
    BANK3           256      0     190
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 89
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[89]), 

    a	PTR const unsigned char  size(2) Largest target is 89
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[89]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_15(CODE[21]), STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4294_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[89]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16622.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16622.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    t_link	PTR enum E16163 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    S3609response_type$reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16610.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    S3609response_type$header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16610.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    r_link	PTR enum E16163 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    m_link	PTR enum E16163 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    strPtr	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1986spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1986spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   41546
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    1978
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1     643
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1     802
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     179
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0     130
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0     130
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0     130
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      BE      11       74.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      CF       7       80.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     364      58        0.0%
DATA                 0      0     364       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 19 16:49:12 2019

                    _SPI1_Exchange8bit 6020                                      _V 0067  
     __end_of_TMR5_SetInterruptHandler 5DAE              __end_of_UART2_is_rx_ready 61B2  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 61A2                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 0141  
                                  _H13 019F                                    _H14 018E  
                                  _H24 015F                                    _H17 017A  
                                  _H53 0386                                    l194 6106  
                                  l572 59FE                                    l717 5B70  
                                  l851 602E                                    l579 596E  
                                  l692 59C0                                    l597 5B44  
                                  l699 5930                                    _GIE 01FE97  
                                  u980 54AA                                    u998 54AC  
                                  _abs 57C6                                    _pad 493E  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 5F7A  
                         _run_checksum 5AC6                     _UART1_Transmit_ISR 5B1E  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5F9C  
                         __CFG_ZCD$OFF 000000                                   l1122 5914  
                                 l1220 20F4                                   l1230 21A4  
                                 l1241 2294                                   l1252 23BC  
                                 l1262 24EE                                   l1246 22FE  
                                 l1263 251A                                   l1272 253A  
                                 l1248 2302                                   l1345 5692  
                                 l1282 2552                                   l1258 24A0  
                                 l1481 53A2                                   l1618 367E  
                                 l4036 58FC                                   l1477 5004  
                                 l1565 2F86                                   l1814 2B48  
                                 l1655 3E56                                   l1841 39FE  
                                 l2609 4934                                   l1690 4322  
                                 l2555 5806                                   l1860 2A60  
                                 l1669 3FBA                                   l5302 5032  
                                 l5304 5054                                   l5400 45CC  
                                 l6200 4492                                   l6120 437C  
                                 l2577 4B54                                   l1794 499A  
                                 l6202 44D0                                   l6106 433E  
                                 l6036 5BE0                                   l6140 43D4  
                                 l6150 43F6                                   l6126 439A  
                                 l6400 5B40                                   l5416 4700  
                                 l5408 4654                                   l5344 57F6  
                                 l6152 441C                                   l6240 4556  
                                 l6410 5FFC                                   l5362 3C88  
                                 l6226 450A                                   l6170 4440  
                                 l5380 3DA0                                   l5356 3C34  
                                 l6172 445A                                   l6422 5B6C  
                                 l6238 4524                                   l8030 4218  
                                 l6432 601C                                   l5368 3CCE  
                                 l8040 427A                                   l6098 5AD4  
                                 l8026 41FE                                   l8018 414E  
                                 l5572 4842                                   l5740 5990  
                                 l6620 38AC                                   l6540 36A4  
                                 l6524 3648                                   l6188 4478  
                                 l8044 4280                                   l6614 3892  
                                 l6550 36E0                                   l6630 38C0  
                                 l8038 4252                                   l8222 3F1E  
                                 l8206 3EB2                                   l5568 4812  
                                 l5664 56A4                                   l6800 3004  
                                 l6624 38B8                                   l6632 3902  
                                 l5752 5BC2                                   l8056 42D4  
                                 l8048 429A                                   l8064 4302  
                                 l8224 3F2A                                   l8208 3EC4  
                                 l8400 22E6                                   l8312 20DE  
                                 l5842 5F50                                   l5738 598E  
                                 l6618 38A8                                   l6570 3756  
                                 l6562 3714                                   l8058 42FC  
                                 l8250 3FEE                                   l8218 3F06  
                                 l8314 20E6                                   l7620 52CE  
                                 l6900 32CA                                   l6812 3072  
                                 l6804 3022                                   l6548 36D4  
                                 l8260 4012                                   l8236 3F8C  
                                 l8228 3F50                                   l8316 20FA  
                                 l7606 4A82                                   l7630 4992  
                                 l6910 32F0                                   l6902 32D8  
                                 l6750 2EEE                                   l6574 3782  
                                 l6566 3732                                   l5774 5950  
                                 l8270 4040                                   l8254 3FF6  
                                 l8246 3FDA                                   l8422 23A2  
                                 l8414 2338                                   l8350 21E2  
                                 l7616 5290                                   l7640 4A2A  
                                 l7632 49A4                                   l7720 2EA0  
                                 l6912 32F6                                   l6904 32DC  
                                 l6824 30F0                                   l6816 30A2  
                                 l6808 3046                                   l5776 5952  
                                 l8272 404E                                   l8416 236A  
                                 l7626 496A                                   l7650 53F4  
                                 l7802 277E                                   l6906 32E4  
                                 l6826 30F4                                   l6586 3800  
                                 l6578 37B2                                   l8274 4052  
                                 l8282 4070                                   l8450 2462  
                                 l7636 49E0                                   l7716 2E64  
                                 l7732 3980                                   l7900 5244  
                                 l6908 32E8                                   l6860 31C6  
                                 l6852 3176                                   l6836 3124  
                                 l6764 2F3A                                   l6916 3304  
                                 l6588 3804                                   l5788 5B98  
                                 l8276 405A                                   l8284 40B2  
                                 l8372 225C                                   l8356 21FC  
                                 l7806 27D0                                   l5974 59D6  
                                 l6782 2FA8                                   l6918 3346  
                                 l6598 3828                                   l8278 4062  
                                 l8198 3E82                                   l8454 2472  
                                 l8438 23F6                                   l8382 2288  
                                 l8374 2260                                   l7648 53C8  
                                 l7752 3A70                                   l6872 3244  
                                 l6864 31F6                                   l6856 319A  
                                 l6848 3158                                   l8464 24A4  
                                 l7682 2B82                                   l7674 2B38  
                                 l7770 3B92                                   l7762 3B2A  
                                 l7834 29F2                                   l7818 28F6  
                                 l6874 3248                                   l7922 4C62  
                                 l8482 253E                                   l8466 24D0  
                                 l8378 2270                                   l7756 3AA0  
                                 l7748 3A34                                   l7828 299E  
                                 l7844 2A12                                   l6884 326C  
                                 l6788 2FD0                                   l8484 2556  
                                 l8396 22D0                                   l8476 24F2  
                                 l7686 2BA0                                   l7766 3B56  
                                 l7838 29F6                                   l5998 5998  
                                 l7926 4CD4                                   l8494 25B8  
                                 l7696 2DB2                                   l7872 34AE  
                                 l7954 5858                                   l7794 269A  
                                 l7866 33F0                                   l7958 5882  
                                 l7886 35C6                                   l7878 3518  
                                 l7898 5202                                   l7996 5198  
                                 STR_1 2061                                   STR_2 208F  
                                 STR_3 20A7                                   STR_4 2072  
                                 STR_5 203D                                   STR_6 2081  
                                 STR_7 20A1                                   STR_8 209B  
                                 STR_9 2016                                   u1005 54DE  
                                 u1006 54E0                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2320 5082                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u2410 3C2E  
                                 _LATF 003FBF                                   u2500 3E2A  
                                 u2430 3C84                                   u2327 5074  
                                 u2441 3C8E                                   u2450 3CC8  
                                 u2610 478A                                   u2530 45C6  
                                 u2460 3CFA                                   u2550 461C  
                                 u2390 57DA                                   u2480 3DD8  
                                 u2560 464E                                   u5121 3F44  
                                 u2570 4680                                   u4075 3296  
                                 u4420 4A76                                   u4085 32A6  
                                 u4077 329A                                   u2590 4738  
                                 u5310 22A0                                   u4095 32B6  
                                 u4087 32AA                                   u4440 4AF2  
                                 u4600 2DC6                                   u4520 2A9A  
                                 u4097 32BA                                   u4530 2A9C  
                                 _T6PR 003F93                                   u4611 2DF6  
                                 u4620 2E0C                                   u5316 22A2  
                                 _PMD0 0039C0                                   u4621 2E0A  
                                 _PMD1 0039C1                                   u4630 2E20  
                                 u4550 2B0C                                   u2950 48EA  
                                 u5270 226A                                   _PMD2 0039C2  
                                 u3655 3852                                   _PMD3 0039C3  
                                 u4640 2E24                                   _PMD4 0039C4  
                                 u3665 3862                                   u3657 3856  
                                 _PMD5 0039C5                                   u4570 2B1E  
                                 u4730 3A96                                   u4810 26EA  
                                 _PMD6 0039C6                                   u3675 3872  
                                 u3667 3866                                   _PMD7 0039C7  
                                 u4660 2E3A                                   u4740 3ADC  
                                 u4900 363A                                   u3677 3876  
                                 u4590 2B6E                                   u4830 2828  
                                 u4770 3BB8                                   u4747 3ACE  
                                 u4960 5188                                   u4970 4148  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 5FBE  
                     __end_of_ADCC_ISR 5C1E                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01AF                                   _ctoa 53AA  
                                 _main 20B8                                   _dtoa 2A6A  
                                 _prec 0022                                   _nout 00F6  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 3914  
                                 btemp 003B      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0028              __end_of_SPI1_Exchange8bit 603E  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 5E78  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005B             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 613E                       __end_of_INT1_ISR 614E  
                     __end_of_INT2_ISR 615E         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 500C          __end_of_OSCILLATOR_Initialize 610C  
                                PRLOCK 0039EF                        __end_of___aodiv 3E52  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 47AE  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 203D                                  STR_11 202A  
                                STR_12 2050                                  STR_13 209B  
                                STR_21 20AD                                  STR_14 202A  
                                STR_23 20B0                                  STR_15 2001  
                                STR_16 2098                                  STR_25 20B0  
                                STR_17 20B3                          __CFG_WDTE$OFF 000000  
                                STR_19 20AD                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005B                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 61C8  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 5E50  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 5A52  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 60C6  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002C  
                                _flags 0024                                  _fputc 4A52  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 5280  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005B  
                                _width 0020                                  _putch 6092  
             _INT1_SetInterruptHandler 5DD6                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003B                                  ltemp1 003F  
                                ltemp2 0043               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 003B                                  ttemp1 003E  
                                ttemp2 0041                                  ttemp3 0044  
                                ttemp5 003C                                  ttemp6 003F  
                                ttemp7 0043                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 5D36            _UART1_SetRxInterruptHandler 5D0E  
                                wtemp0 003B                                  wtemp1 003D  
                                wtemp2 003F                                  wtemp3 0041  
                                wtemp4 0043                                  wtemp5 0045  
                                wtemp8 003C                        __end_of_sprintf 4EB2  
                      __end_of_strncmp 493E                    ??_UART1_tx_vect_isr 005B  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 5E9E  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 580C  
                __end_of_ringBufS_init 5C96                        __initialization 4D1A  
                    _UART2_rx_vect_isr 5EC8                           __end_of_ctoa 5432  
                         __end_of_main 25BC                           __end_of_dtoa 2EEA  
                         __end_of_stoa 3BD2             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005B  
           __size_of_UART2_is_tx_ready 0008               _TMR5_SetInterruptHandler 5D86  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005B  
            __end_of_UART1_tx_vect_isr 5E76                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 5D36                       _UART1_Initialize 5502  
                    _UART2_tx_vect_isr 5EA0                     _UART2_Transmit_ISR 5B4A  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 005B                                 _MD1SRC 003CFC  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                    __size_of_UART1_Read 003E  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                  __size_of_UART2_Read 003E                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               u121_48 5F88                                 i2l1139 5A4A  
                       __CFG_WDTCCS$SC 000000                                 u123_48 5FAA  
                               u125_48 5FCC                                 u330_40 60CE  
                               u330_46 60D0                                 _SCANPR 0039F7  
                               u351_48 5F22                                 u505_48 5EFE  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 5730  
                  ??_UART2_tx_vect_isr 005B              __end_of_UART2_rx_vect_isr 5EEE  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 616E  
                     _UART2_Initialize 5628                                 _WaitMs 5BCA  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 5318                                 _memset 3358  
                               clear_0 4D9A                                 clear_1 4DA8  
                               clear_2 4DBA                                 clear_3 4DC6  
                               clear_4 4DD2                                 _printf 5566  
                   _eaDogM_WriteString 514C                              ?_ADCC_ISR 005B  
                               _strlen 500C                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 577C                         _PMD_Initialize 610C  
 __end_of_INT2_DefaultInterruptHandler 61D4  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 61D2                           __pdataCOMRAM 005D  
            __end_of_UART2_tx_vect_isr 5EC6                                 lltemp0 003B  
                               lltemp1 0043                                 lltemp2 004B  
                               lltemp3 0053                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 56E2  
                     __end_of_vfprintf 5280                             _StartTimer 5A52  
                      _CLC1_Initialize 5F58          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 5852                      _SYSTEM_Initialize 5898  
                           __accesstop 0060                __end_of__initialization 4DE4  
                            ?_INT0_ISR 005B                              ?_INT1_ISR 005B  
                            ?_INT2_ISR 005B              __end_of_CLKREF_Initialize 6178  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 58DA                 __end_of_ringBufS_flush 53AA  
                       __pcstackCOMRAM 005B                             ___inthi_sp 0D2A  
                         __pidataBANK0 55C8                           __pidataBANK1 4EB2  
                         __pidataBANK3 5A8E                              ?_TMR5_ISR 005B  
                            ?_TMR6_ISR 005B                         ivt0x8_undefint 00AC  
                        __end_of_fputc 4B5E                          __end_of_fputs 5318  
                __end_of_TMR5_CallBack 5F36                          __end_of_putch 60AC  
              __end_of_TMR6_Initialize 5D5E                 __end_of_PMD_Initialize 6120  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 005B  
                __end_of_TMR6_CallBack 5F12            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 6184  
     __end_of_INT2_SetInterruptHandler 5DD6               _UART2_RxInterruptHandler 0014  
            __end_of_SYSTEM_Initialize 58DA                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 6076  
                           __pbssBANK0 00C0                             __pbssBANK1 01AF  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 001D                             ??_INT0_ISR 005B  
                           ??_INT1_ISR 005B                             ??_INT2_ISR 005B  
                    __end_of_TimerDone 5F58                       _DMA1_DMADCNT_ISR 6178  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 605A  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 5D86  
              __end_of_ADCC_Initialize 57C6                             ??_TMR5_ISR 005C  
                           ??_TMR6_ISR 005B                     __size_of_secs_send 0268  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 5FE0                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005B                       _DMA1_DMASCNT_ISR 6160  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 5F7A  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005B                   __size_of_UART1_Write 003E  
            __size_of_UART2_put_buffer 002A             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 04AE                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 6092  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 591A  
                   __end_of_UART1_Read 5A12                     __end_of_UART2_Read 59D4  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 5566  
                      __size_of_WaitMs 002A                                ___aodiv 3BD2  
                              ___aomod 456E                             _m_protocol 2EEA  
            __end_of_UART1_Receive_ISR 6000                           __psmallconst 2000  
                 __end_of_init_display 4C48                                __pcinit 4D1A  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 6120  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
             __size_of_NCO1_Initialize 001C                                __ptext0 20B8  
                              __ptext1 3E52                                __ptext2 40C4  
                              __ptext3 4C48                                __ptext4 5B76  
                              __ptext5 619A                                __ptext6 591A  
                              __ptext7 5BA0                                __ptext8 61A2  
                              __ptext9 432C                      _UART2_Receive_ISR 6000  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 00A2                                us251999 3E3C  
                              us262999 479C                                us334999 4560  
                              us451999 2A84                  _OSCILLATOR_Initialize 60F6  
                         __size_of_abs 0046                                _r_block 00C0  
                              us468999 3926                           __size_of_pad 0114  
                              _mode_sw 002E                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 5686  
                   m_protocol@rxData_l 002D             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 4DEA                                _strncmp 47AE  
                 end_of_initialization 4DE4                      __end_of_secs_send 432C  
             _INT2_SetInterruptHandler 5DAE               __size_of_secs_II_message 0242  
                           _r_protocol 3644    __end_of_UART1_SetTxInterruptHandler 5D0E  
          _UART1_SetTxInterruptHandler 5CE6    __end_of_UART2_SetRxInterruptHandler 5CE6  
          _UART2_SetRxInterruptHandler 5CBE                             _t_protocol 3E52  
                    __end_of_vfpfcnvrt 2A6A                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 61C6              __end_of_UART2_Receive_ISR 6020  
                       wdtdelay@dcount 00EC                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005C                         _block_checksum 4C48  
                _INT1_InterruptHandler 001A                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 5D5E                  _TMR5_InterruptHandler 00F0  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002A  
  __end_of_ADCC_SetADIInterruptHandler 5E4E            _ADCC_SetADIInterruptHandler 5E26  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 5432                        _SPI1_Initialize 60E0  
                     _UART1_put_buffer 5BA0                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 5BF4           __end_of_INTERRUPT_Initialize 5502  
               __end_of_block_checksum 4D1A   __end_of_INT0_DefaultInterruptHandler 61D0  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 61CE  
           __size_of_UART1_Receive_ISR 0020                          __pidataCOMRAM 61D6  
                    __size_of_TMR5_ISR 003E                      __size_of_TMR6_ISR 001A  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 3644  
                       __end_of_printf 55C8               __end_of_DMA1_DMADCNT_ISR 6182  
                     _UART2_put_buffer 5B76                  __end_of_INT0_CallBack 5F9C  
                       __end_of_strlen 50AE                    start_initialization 4D1A  
 __end_of_TMR5_DefaultInterruptHandler 60E0  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 60C6        __size_of_PIN_MANAGER_Initialize 009E  
                          __end_of_abs 580C                  __end_of_INT1_CallBack 5FBE  
                          __end_of_pad 4A52                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5C6E                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 5FE0                   secs_II_message@block 0001  
                        _uart1RxBuffer 0280                          _uart1TxBuffer 02C0  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 616E  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 6190  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 5F36  
                        _ringBufS_init 5C6E                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 0060  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 577C  
                      run_checksum@sum 00F8        __end_of_eaDogM_WriteStringAtPos 5B1E  
              __end_of_DMA1_Initialize 549C                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 5E26                __end_of_SPI1_Initialize 60F6  
             _UART1_RxInterruptHandler 000E               _UART2_TxInterruptHandler 0011  
                  __size_of_m_protocol 046E              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4B5E                 __end_of_DMA1_DMAOR_ISR 619A  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 0017  
                _TMR6_InterruptHandler 00F3                 __size_of_TMR6_CallBack 0024  
               _PIN_MANAGER_Initialize 50AE                   __end_of_wait_lcd_set 61C0  
                            __ptext100 60AC                              __ptext101 5EEE  
                            __ptext110 60C6                              __ptext102 5852  
                            __ptext111 0000                              __ptext103 6160  
                            __ptext104 6178                              __ptext105 6184  
                            __ptext106 6190                              __ptext107 5A14  
                            __ptext108 58DA                              __ptext109 5F12  
                   __end_of_StartTimer 5A8E                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0098                               _ADCC_ISR 5BF4  
                  __size_of_r_protocol 02D0                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 0272                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 549C                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005B  
                             _INT0_ISR 6130                               _INT1_ISR 6140  
                             _INT2_ISR 6150                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 40C4  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 00D9  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             i2u420_40 5A42                               i2u413_48 5E62  
                             i2u415_48 5E8A                               _PIR1bits 0039A1  
                             i2u417_48 5EB2                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u419_48 5EDA  
                             i2u198_48 5C0A                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 5B4A  
                             _TMR5_ISR 5A14                               _TMR6_ISR 60AC  
                            _vfpfcnvrt 25BC                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 5F12                              _start_lcd 61C0  
            __size_of_send_lcd_cmd_dma 004E                          _TMR6_CallBack 5EEE  
             __end_of_UART1_put_buffer 5BCA                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 5996  
                  __end_of_UART2_Write 5958               __size_of_TMR6_Initialize 0028  
                          _INTCON0bits 003FD2                              copy_data0 4D2E  
                            copy_data1 4D50                              copy_data2 4D72  
             _INT0_SetInterruptHandler 5DFE                 _uart1TxBufferRemaining 0038  
  __end_of_UART2_SetTxInterruptHandler 5CBE            _UART2_SetTxInterruptHandler 5C96  
                         _uart1RxCount 0035               __end_of_UART2_put_buffer 5BA0  
                         _uart2RxCount 002F                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 5AF2                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 603E  
                         _send_lcd_cmd 5C46                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 605A  
                __end_of_DMA1_DMAA_ISR 618E   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005B               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 612E                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005C                               __ptext10 4DEA  
                             __ptext11 3644                               __ptext20 61B2  
                             __ptext12 5958                               __ptext21 59D4  
                             __ptext13 2EEA                               __ptext30 56E2  
                             __ptext22 4B5E                               __ptext14 5AC6  
                             __ptext31 61BA                               __ptext23 5C1E  
                             __ptext15 5BCA                               __ptext40 47AE  
                             __ptext32 603E                               __ptext24 5C46  
                             __ptext16 5F36                               __ptext41 3914  
                             __ptext33 5686                               __ptext25 6020  
                             __ptext17 5A52                               __ptext50 4A52  
                             __ptext42 2A6A                               __ptext34 61C0  
                             __ptext26 5C6E                               __ptext18 61AA  
                             __ptext51 6092                               __ptext43 57C6  
                             __ptext35 5318                               __ptext27 5AF2  
                             __ptext19 5996                               __ptext60 5D36  
                             __ptext52 4F62                               __ptext44 456E  
                             __ptext36 3358                               __ptext28 514C  
                             __ptext61 5D5E                               __ptext53 5898  
                             __ptext45 3BD2                               __ptext37 5566  
                             __ptext29 6120                               __ptext70 5730  
                             __ptext62 580C                               __ptext54 5628  
                             __ptext46 53AA                               __ptext38 51E8  
                             __ptext71 5DAE                               __ptext63 5D86  
                             __ptext55 5C96                               __ptext47 493E  
                             __ptext39 25BC                               __ptext80 6130  
                             __ptext72 5DD6                               __ptext64 60E0  
                             __ptext56 5CBE                               __ptext48 500C  
                             __ptext81 5F7A                               __ptext73 5DFE  
                             __ptext65 610C                               __ptext57 5502  
                             __ptext49 5280                               __ptext90 5BF4  
                             __ptext82 61CE                               __ptext74 6076  
                             __ptext66 50AE                               __ptext58 5CE6  
                             __ptext91 61D4                               __ptext83 6140  
                             __ptext75 5432                               __ptext67 60F6  
                             __ptext59 5D0E                               __ptext92 5E50  
                             __ptext84 5F9C                               __ptext76 616E  
                             __ptext68 605A                               __ptext93 5B1E  
                             __ptext85 61D0                               __ptext77 5F58  
                             __ptext69 549C                               __ptext94 5E78  
                             __ptext86 6150                               __ptext78 577C  
                             __ptext95 5FE0                               __ptext87 5FBE  
                             __ptext79 5E26                               __ptext96 5EA0  
                             __ptext88 61D2                               __ptext97 5B4A  
                             __ptext89 61C8                               __ptext98 5EC8  
                             __ptext99 6000                        _secs_II_message 432C  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 4F62  
                   __end_of_m_protocol 3358                          __size_of_ctoa 0088  
                        __size_of_main 0504                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005B  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 0008                              stoa@F1142 0060  
                   ??_DMA1_DMASCNT_ISR 005C                               _spi_link 00CD  
                             _wdtdelay 5686             __end_of_UART2_Transmit_ISR 5B76  
                             _vfprintf 51E8                      _UART1_is_rx_ready 61B2  
                          _UART1_Write 5958   __end_of_INT1_DefaultInterruptHandler 61D2  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 61D0  
                          _UART2_Write 591A                      _UART1_is_tx_ready 61A2  
                      r_protocol@retry 005D                      t_protocol@requeue 002A  
                        ??_Default_ISR 005B                     __end_of_r_protocol 3914  
                          _uart1RxHead 0037                            _uart1TxHead 003A  
                          _uart2RxHead 0031                            _uart1RxTail 0036  
                          _uart2TxHead 0034                            _uart1TxTail 0039  
                          _uart2RxTail 0030                            _uart2TxTail 0033  
                         _wait_lcd_set 61BA                     _EXT_INT_Initialize 5730  
 __end_of_TMR6_DefaultInterruptHandler 5898  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 5852                     __end_of_t_protocol 40C4  
 __end_of_ADCC_DefaultInterruptHandler 61D6  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 61D4                               intlevel2 0000  
                    _send_lcd_cmd_long 5C1E                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 51E8                __end_of_NCO1_Initialize 6076  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 61BA  
                           _UART1_Read 59D4                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 5996              __end_of_UART1_is_tx_ready 61AA  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 61AA  
               _uart2TxBufferRemaining 0032                      _UART2_is_tx_ready 619A  
                     _send_lcd_cmd_dma 56E2                  TMR5_ISR@CountCallBack 0026  
              __end_of_secs_II_message 456E       __end_of_INT1_SetInterruptHandler 5DFE  
            __size_of_UART1_Initialize 0064                        t_protocol@block 00E5  
                     ??_DMA1_DMAOR_ISR 005C               _UART1_TxInterruptHandler 000B  
                      t_protocol@retry 002B              __end_of_send_lcd_cmd_long 5C46  
                  __end_of_Default_ISR 61CE         __end_of_PIN_MANAGER_Initialize 514C  
                __size_of_run_checksum 002C                _eaDogM_WriteStringAtPos 5AF2  
            __size_of_UART2_Initialize 005E  
