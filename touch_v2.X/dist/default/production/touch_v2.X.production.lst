

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 30 21:53:57 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=4,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=4,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=4,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=4,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	text147,global,reloc=4,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   176                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   177                           	psect	text150,global,reloc=4,class=CODE,delta=1
   178                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   179                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   180  0000                     
   181                           ; Version 2.10
   182                           ; Generated 31/07/2019 GMT
   183                           ; 
   184                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   185                           ; All rights reserved.
   186                           ; 
   187                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   188                           ; 
   189                           ; Redistribution and use in source and binary forms, with or without modification, are
   190                           ; permitted provided that the following conditions are met:
   191                           ; 
   192                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   193                           ;        conditions and the following disclaimer.
   194                           ; 
   195                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   196                           ;        of conditions and the following disclaimer in the documentation and/or other
   197                           ;        materials provided with the distribution.
   198                           ; 
   199                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   200                           ;        software without specific prior written permission.
   201                           ; 
   202                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   203                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   204                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   205                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   206                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   207                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   208                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   209                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   210                           ; 
   211                           ; 
   212                           ; Code-generator required, PIC18F57K42 Definitions
   213                           ; 
   214                           ; SFR Addresses
   215  0000                     
   216 ;;_mode	offset	0
   217 ;;_channel	offset=-1 (param)
   218 ;;_s	offset=-2 (param)
   219 ;;_cmd	offset=-1 (param)
   220 ;;_cmd	offset=-1 (param)
   221 ;;_data	offset=-1 (param)
   222 ;;__this	offset=-2 (param)
   223 ;;_h	offset=-1 (param)
   224 ;;_h	offset=-1 (param)
   225 ;;_i	offset=-1 (param)
   226 ;;_cmd	offset=-1 (param)
   227 ;;_i	offset	0
   228 ;;_chan	offset=-1 (param)
   229 ;;_to_what	offset=-2 (param)
   230 ;;_u	offset	0
   231 ;;_s	offset=-2 (param)
   232 ;;_index	offset=-1 (param)
   233 ;;_arg	offset	0
   234 ;;_exp	offset	4
   235 ;;_sign	offset=-1 (param)
   236 ;;_val	offset=-5 (param)
   237 ;;_h	offset=-1 (param)
   238 ;;_estatus	offset	0
   239 ;;_flipper	offset=-1 (param)
   240 ;;_f	offset	0
   241 ;;_ap	offset	6
   242 ;;_s	offset=-3 (param)
   243 ;;_fmt	offset=-5 (param)
   244 ;;_line	offset=-1 (param)
   245 ;;_vterm	offset=-2 (param)
   246 ;;_numMilliseconds	offset=-2 (param)
   247 ;;_vterm	offset=-1 (param)
   248 ;;_r	offset=-1 (param)
   249 ;;_c	offset=-2 (param)
   250 ;;_strPtr	offset=-4 (param)
   251 ;;_strPtr	offset=-1 (param)
   252 ;;_delay	offset=-4 (param)
   253 ;;_strPtr	offset=-2 (param)
   254 ;;__this	offset=-2 (param)
   255 ;;_clearBuffer	offset=-3 (param)
   256 ;;_s	offset	0
   257 ;;_k	offset	2
   258 ;;_dest	offset=-2 (param)
   259 ;;_c	offset=-4 (param)
   260 ;;_n	offset=-6 (param)
   261 ;;_ap	offset	0
   262 ;;_fmt	offset=-3 (param)
   263 ;;_cfmt	offset	0
   264 ;;_fp	offset=-2 (param)
   265 ;;_fmt	offset=-4 (param)
   266 ;;_ap	offset=-6 (param)
   267 ;;_vfpfcnvrt$4554	offset	0
   268 ;;_vfpfcnvrt$4560	offset	2
   269 ;;_vfpfcnvrt$4553	offset	4
   270 ;;_llu	offset	6
   271 ;;_ll	offset	14
   272 ;;_f	offset	22
   273 ;;_ct	offset	26
   274 ;;_cp	offset	29
   275 ;;_c	offset	31
   276 ;;_fp	offset=-2 (param)
   277 ;;_fmt	offset=-4 (param)
   278 ;;_ap	offset=-6 (param)
   279 ;;_xtoa$4539	offset	0
   280 ;;_xtoa$4538	offset	2
   281 ;;_n	offset	4
   282 ;;_c	offset	12
   283 ;;_i	offset	14
   284 ;;_w	offset	16
   285 ;;_p	offset	18
   286 ;;_fp	offset=-2 (param)
   287 ;;_d	offset=-10 (param)
   288 ;;_x	offset=-11 (param)
   289 ;;_toupper$5199	offset	0
   290 ;;_c	offset=-2 (param)
   291 ;;_c	offset=-2 (param)
   292 ;;_c	offset=-2 (param)
   293 ;;_r	offset	0
   294 ;;_l	offset	2
   295 ;;__l	offset=-2 (param)
   296 ;;__r	offset=-4 (param)
   297 ;;_n	offset=-6 (param)
   298 ;;_nuls	offset	0
   299 ;;_l	offset	7
   300 ;;_p	offset	9
   301 ;;_cp	offset	11
   302 ;;_w	offset	13
   303 ;;_i	offset	15
   304 ;;_fp	offset=-2 (param)
   305 ;;_s	offset=-4 (param)
   306 ;;_efgtoa$4518	offset	0
   307 ;;_efgtoa$4517	offset	2
   308 ;;_efgtoa$4516	offset	4
   309 ;;_efgtoa$4512	offset	6
   310 ;;_efgtoa$4508	offset	8
   311 ;;_efgtoa$4507	offset	10
   312 ;;_u	offset	12
   313 ;;_g	offset	16
   314 ;;_l	offset	20
   315 ;;_h	offset	24
   316 ;;_ou	offset	28
   317 ;;_n	offset	32
   318 ;;_e	offset	34
   319 ;;_i	offset	36
   320 ;;_w	offset	38
   321 ;;_p	offset	40
   322 ;;_sign	offset	42
   323 ;;_d	offset	44
   324 ;;_ne	offset	46
   325 ;;_m	offset	48
   326 ;;_pp	offset	50
   327 ;;_t	offset	52
   328 ;;_mode	offset	54
   329 ;;_nmode	offset	55
   330 ;;_fp	offset=-2 (param)
   331 ;;_f	offset=-6 (param)
   332 ;;_c	offset=-7 (param)
   333 ;;_tolower$5184	offset	0
   334 ;;_c	offset=-2 (param)
   335 ;;_c	offset=-2 (param)
   336 ;;_d	offset	0
   337 ;;_s	offset	2
   338 ;;_dest	offset=-2 (param)
   339 ;;_src	offset=-4 (param)
   340 ;;_u	offset	0
   341 ;;_m	offset	4
   342 ;;_e	offset	8
   343 ;;_x	offset=-4 (param)
   344 ;;_u	offset	0
   345 ;;_e	offset	4
   346 ;;_x	offset=-4 (param)
   347 ;;_exp1	offset	0
   348 ;;_sign1	offset	1
   349 ;;_f1	offset=-4 (param)
   350 ;;_f1	offset=-4 (param)
   351 ;;_ff1	offset=-4 (param)
   352 ;;_ff2	offset=-8 (param)
   353 ;;_ff1	offset=-4 (param)
   354 ;;_ff2	offset=-8 (param)
   355 ;;_grs	offset	0
   356 ;;_rem	offset	4
   357 ;;_new_exp	offset	8
   358 ;;_aexp	offset	10
   359 ;;_bexp	offset	11
   360 ;;_sign	offset	12
   361 ;;_b	offset=-4 (param)
   362 ;;_a	offset=-8 (param)
   363 ;;_sign	offset	0
   364 ;;_counter	offset	1
   365 ;;_dividend	offset=-2 (param)
   366 ;;_divisor	offset=-4 (param)
   367 ;;_quotient	offset	0
   368 ;;_sign	offset	2
   369 ;;_counter	offset	3
   370 ;;_dividend	offset=-2 (param)
   371 ;;_divisor	offset=-4 (param)
   372 ;;_dtoa$4484	offset	0
   373 ;;_n	offset	2
   374 ;;_i	offset	10
   375 ;;_s	offset	12
   376 ;;_w	offset	14
   377 ;;_p	offset	16
   378 ;;_fp	offset=-2 (param)
   379 ;;_d	offset=-10 (param)
   380 ;;_a	offset=-2 (param)
   381 ;;_sign	offset	0
   382 ;;_counter	offset	1
   383 ;;_dividend	offset=-8 (param)
   384 ;;_divisor	offset=-16 (param)
   385 ;;_quotient	offset	0
   386 ;;_sign	offset	8
   387 ;;_counter	offset	9
   388 ;;_dividend	offset=-8 (param)
   389 ;;_divisor	offset=-16 (param)
   390 ;;_w	offset	0
   391 ;;_fp	offset=-2 (param)
   392 ;;_c	offset=-3 (param)
   393 ;;_w	offset	0
   394 ;;_i	offset	2
   395 ;;_fp	offset=-2 (param)
   396 ;;_buf	offset=-4 (param)
   397 ;;_p	offset=-6 (param)
   398 ;;_a	offset	0
   399 ;;_s	offset=-2 (param)
   400 ;;_i	offset	0
   401 ;;_c	offset	2
   402 ;;_s	offset=-2 (param)
   403 ;;_fp	offset=-4 (param)
   404 ;;_c	offset=-2 (param)
   405 ;;_fp	offset=-4 (param)
   406 ;;_c	offset=-1 (param)
   407 ;;__this	offset=-2 (param)
   408 ;;_c	offset=-3 (param)
   409 ;;_atoi$5037	offset	0
   410 ;;_atoi$5035	offset	2
   411 ;;_atoi$5036	offset	4
   412 ;;_n	offset	5
   413 ;;_neg	offset	7
   414 ;;_s	offset=-2 (param)
   415 ;;_isspace$5075	offset	0
   416 ;;_c	offset=-2 (param)
   417 ;;_c	offset=-2 (param)
   418 ;;_vterm	offset=-1 (param)
   419 ;;_new_response_info	offset=-1 (param)
   420 ;;_new_response_info	offset=-1 (param)
   421 ;;_level	offset=-2 (param)
   422 ;;_dutyValue	offset=-2 (param)
   423 ;;_timer	offset=-1 (param)
   424 ;;_timer	offset=-1 (param)
   425 ;;_count	offset=-3 (param)
   426 ;;_lp_speed	offset	0
   427 ;;_new	offset=-4 (param)
   428 ;;_bn	offset=-5 (param)
   429 ;;_slow	offset=-6 (param)
   430 ;;_b	offset=-4 (param)
   431 ;;_a	offset=-8 (param)
   432 ;;_grs	offset	0
   433 ;;_bexp	offset	1
   434 ;;_aexp	offset	2
   435 ;;_signs	offset	3
   436 ;;_b	offset=-4 (param)
   437 ;;_a	offset=-8 (param)
   438 ;;_prod	offset	0
   439 ;;_grs	offset	4
   440 ;;_temp	offset	8
   441 ;;_bexp	offset	10
   442 ;;_aexp	offset	11
   443 ;;_sign	offset	12
   444 ;;_b	offset=-4 (param)
   445 ;;_a	offset=-8 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_state	offset	0
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_i	offset	0
   458 ;;_sw_value	offset	1
   459 ;;_timerVal	offset=-2 (param)
   460 ;;_channel	offset=-1 (param)
   461 ;;_i	offset	0
   462                           
   463                           	psect	idataBANK0
   464  018452                     __pidataBANK0:
   465                           	opt callstack 0
   466                           
   467                           ;initializer for _R
   468  018452  0000               	dw	0
   469  018454  0000               	dw	0
   470  018456  0000               	dw	0
   471  018458  0000               	dw	0
   472  01845A  0000               	dw	0
   473  01845C  0000               	dw	0
   474  01845E  0000               	dw	0
   475  018460  0000               	dw	0
   476  018462  0000               	dw	0
   477  018464  0000               	dw	0
   478  018466  0000               	dw	0
   479  018468  0000               	dw	0
   480  01846A  0000               	dw	0
   481  01846C  0000               	dw	0
   482  01846E  0000               	dw	0
   483  018470  0000               	dw	0
   484  018472  0F67               	dw	3943
   485  018474  0F8F               	dw	3983
   486  018476  00                 	db	0
   487  018477  0000               	dw	0
   488  018479  00                 	db	0
   489                           
   490                           ;initializer for _H
   491  01847A  00                 	db	0
   492  01847B  00                 	db	0
   493  01847C  01                 	db	1
   494  01847D  00                 	db	0
   495  01847E  01                 	db	1
   496  01847F  00                 	db	0
   497  018480  00                 	db	0
   498                           
   499                           	psect	idataBANK1
   500  018A7E                     __pidataBANK1:
   501                           	opt callstack 0
   502                           
   503                           ;initializer for stoa@F1166
   504  018A7E  28                 	db	40
   505  018A7F  6E                 	db	110
   506  018A80  75                 	db	117
   507  018A81  6C                 	db	108
   508  018A82  6C                 	db	108
   509  018A83  29                 	db	41
   510  018A84  00                 	db	0
   511                           
   512                           ;initializer for _port_data
   513  018A85  FF                 	db	255
   514  018A86  00                 	db	0
   515  018A87  FF                 	db	255
   516  018A88  00                 	db	0
   517  018A89  FF                 	db	255
   518  018A8A  00                 	db	0
   519  018A8B  FF                 	db	255
   520  018A8C  00                 	db	0
   521  018A8D  FF                 	db	255
   522  018A8E  00                 	db	0
   523  018A8F  FF                 	db	255
   524  018A90  00                 	db	0
   525  018A91  FF                 	db	255
   526  018A92  00                 	db	0
   527  018A93  FF                 	db	255
   528  018A94  00                 	db	0
   529                           
   530                           	psect	idataBANK2
   531  017264                     __pidataBANK2:
   532                           	opt callstack 0
   533                           
   534                           ;initializer for _V
   535  017264  00                 	db	0
   536  017265  00                 	db	0
   537  017266  00                 	db	0
   538  017267  00                 	db	0
   539  017268  00                 	db	0
   540  017269  00                 	db	0
   541  01726A  00                 	db	0
   542  01726B  00                 	db	0
   543  01726C  00                 	db	0
   544  01726D  00                 	db	0
   545  01726E  00                 	db	0
   546  01726F  00                 	db	0
   547  017270  00                 	db	0
   548  017271  00                 	db	0
   549  017272  00                 	db	0
   550  017273  00                 	db	0
   551  017274  00                 	db	0
   552  017275  00                 	db	0
   553  017276  00                 	db	0
   554  017277  00                 	db	0
   555  017278  00                 	db	0
   556  017279  00                 	db	0
   557  01727A  00                 	db	0
   558  01727B  00                 	db	0
   559  01727C  00                 	db	0
   560  01727D  00                 	db	0
   561  01727E  00                 	db	0
   562  01727F  00                 	db	0
   563  017280  00                 	db	0
   564  017281  00                 	db	0
   565  017282  00                 	db	0
   566  017283  00                 	db	0
   567  017284  00                 	db	0
   568  017285  00                 	db	0
   569  017286  00                 	db	0
   570  017287  00                 	db	0
   571  017288  00                 	db	0
   572  017289  00                 	db	0
   573  01728A  00                 	db	0
   574  01728B  00                 	db	0
   575  01728C  00                 	db	0
   576  01728D  00                 	db	0
   577  01728E  00                 	db	0
   578  01728F  00                 	db	0
   579  017290  00                 	db	0
   580  017291  00                 	db	0
   581  017292  00                 	db	0
   582  017293  00                 	db	0
   583  017294  00                 	db	0
   584  017295  00                 	db	0
   585  017296  00                 	db	0
   586  017297  00                 	db	0
   587  017298  00                 	db	0
   588  017299  00                 	db	0
   589  01729A  00                 	db	0
   590  01729B  00                 	db	0
   591  01729C  00                 	db	0
   592  01729D  00                 	db	0
   593  01729E  00                 	db	0
   594  01729F  00                 	db	0
   595  0172A0  00                 	db	0
   596  0172A1  00                 	db	0
   597  0172A2  00                 	db	0
   598  0172A3  00                 	db	0
   599  0172A4  00                 	db	0
   600  0172A5  00                 	db	0
   601  0172A6  00                 	db	0
   602  0172A7  00                 	db	0
   603  0172A8  00                 	db	0
   604  0172A9  00                 	db	0
   605  0172AA  00                 	db	0
   606  0172AB  00                 	db	0
   607  0172AC  00                 	db	0
   608  0172AD  00                 	db	0
   609  0172AE  00                 	db	0
   610  0172AF  00                 	db	0
   611  0172B0  00                 	db	0
   612  0172B1  00                 	db	0
   613  0172B2  00                 	db	0
   614  0172B3  00                 	db	0
   615  0172B4  00                 	db	0
   616  0172B5  00                 	db	0
   617  0172B6  00                 	db	0
   618  0172B7  00                 	db	0
   619  0172B8  00                 	db	0
   620  0172B9  00                 	db	0
   621  0172BA  00                 	db	0
   622  0172BB  00                 	db	0
   623  0172BC  00                 	db	0
   624  0172BD  00                 	db	0
   625  0172BE  00                 	db	0
   626  0172BF  00                 	db	0
   627  0172C0  00                 	db	0
   628  0172C1  00                 	db	0
   629  0172C2  00                 	db	0
   630  0172C3  00                 	db	0
   631  0172C4  00                 	db	0
   632  0172C5  00                 	db	0
   633  0172C6  00                 	db	0
   634  0172C7  00                 	db	0
   635  0172C8  00                 	db	0
   636  0172C9  00                 	db	0
   637  0172CA  00                 	db	0
   638  0172CB  00                 	db	0
   639  0172CC  00                 	db	0
   640  0172CD  00                 	db	0
   641  0172CE  00                 	db	0
   642  0172CF  00                 	db	0
   643  0172D0  00                 	db	0
   644  0172D1  00                 	db	0
   645  0172D2  00                 	db	0
   646  0172D3  00                 	db	0
   647  0172D4  00                 	db	0
   648  0172D5  00                 	db	0
   649  0172D6  00                 	db	0
   650  0172D7  00                 	db	0
   651  0172D8  00                 	db	0
   652  0172D9  00                 	db	0
   653  0172DA  00                 	db	0
   654  0172DB  00                 	db	0
   655  0172DC  00                 	db	0
   656  0172DD  00                 	db	0
   657  0172DE  00                 	db	0
   658  0172DF  00                 	db	0
   659  0172E0  00                 	db	0
   660  0172E1  00                 	db	0
   661  0172E2  00                 	db	0
   662  0172E3  00                 	db	0
   663  0172E4  00                 	db	0
   664  0172E5  0000               	dw	0
   665  0172E7  0000               	dw	0
   666  0172E9  0000               	dw	0
   667  0172EB  0000               	dw	0
   668  0172ED  00                 	db	0
   669  0172EE  00                 	db	0
   670  0172EF  00                 	db	0
   671  0172F0  00                 	db	0
   672  0172F1  00                 	db	0
   673  0172F2  00                 	db	0
   674  0172F3  0000               	dw	0
   675  0172F5  0000               	dw	0
   676  0172F7  0000               	dw	0
   677  0172F9  0000               	dw	0
   678  0172FB  0000               	dw	0
   679  0172FD  0000               	dw	0
   680  0172FF  00                 	db	0
   681  017300  00                 	db	0
   682  017301  00                 	db	0
   683  017302  00                 	db	0
   684  017303  00                 	db	0
   685  017304  00                 	db	0
   686  017305  00                 	db	0
   687  017306  00                 	db	0
   688  017307  00                 	db	0
   689  017308  00                 	db	0
   690  017309  0000               	dw	0
   691  01730B  0000               	dw	0
   692  01730D  2D                 	db	45
   693  01730E  00                 	db	0
   694  01730F  0000               	dw	0
   695  017311  0000               	dw	0
   696  017313  0000               	dw	0
   697  017315  0000               	dw	0
   698  017317  0000               	dw	0
   699  017319  0000               	dw	0
   700  01731B  0000               	dw	0
   701  01731D  0000               	dw	0
   702                           
   703                           	psect	mediumconst
   704  00FDD2                     __pmediumconst:
   705                           	opt callstack 0
   706  00FDD2  00                 	db	0
   707  00FDD3                     _T:
   708                           	opt callstack 0
   709  00FDD3  63                 	db	99
   710  00FDD4  6F                 	db	111
   711  00FDD5  6D                 	db	109
   712  00FDD6  6D                 	db	109
   713  00FDD7  61                 	db	97
   714  00FDD8  6E                 	db	110
   715  00FDD9  64                 	db	100
   716  00FDDA  73                 	db	115
   717  00FDDB  20                 	db	32
   718  00FDDC  31                 	db	49
   719  00FDDD  00                 	db	0
   720  00FDDE  00                 	db	0
   721  00FDDF  00                 	db	0
   722  00FDE0  00                 	db	0
   723  00FDE1  00                 	db	0
   724  00FDE2  00                 	db	0
   725  00FDE3  00                 	db	0
   726  00FDE4  00                 	db	0
   727  00FDE5  64                 	db	100
   728  00FDE6  69                 	db	105
   729  00FDE7  73                 	db	115
   730  00FDE8  70                 	db	112
   731  00FDE9  6C                 	db	108
   732  00FDEA  61                 	db	97
   733  00FDEB  79                 	db	121
   734  00FDEC  73                 	db	115
   735  00FDED  20                 	db	32
   736  00FDEE  31                 	db	49
   737  00FDEF  00                 	db	0
   738  00FDF0  00                 	db	0
   739  00FDF1  00                 	db	0
   740  00FDF2  00                 	db	0
   741  00FDF3  00                 	db	0
   742  00FDF4  00                 	db	0
   743  00FDF5  00                 	db	0
   744  00FDF6  00                 	db	0
   745  00FDF7  63                 	db	99
   746  00FDF8  6F                 	db	111
   747  00FDF9  6D                 	db	109
   748  00FDFA  6D                 	db	109
   749  00FDFB  61                 	db	97
   750  00FDFC  6E                 	db	110
   751  00FDFD  64                 	db	100
   752  00FDFE  73                 	db	115
   753  00FDFF  20                 	db	32
   754  00FE00  32                 	db	50
   755  00FE01  00                 	db	0
   756  00FE02  00                 	db	0
   757  00FE03  00                 	db	0
   758  00FE04  00                 	db	0
   759  00FE05  00                 	db	0
   760  00FE06  00                 	db	0
   761  00FE07  00                 	db	0
   762  00FE08  00                 	db	0
   763  00FE09  64                 	db	100
   764  00FE0A  69                 	db	105
   765  00FE0B  73                 	db	115
   766  00FE0C  70                 	db	112
   767  00FE0D  6C                 	db	108
   768  00FE0E  61                 	db	97
   769  00FE0F  79                 	db	121
   770  00FE10  73                 	db	115
   771  00FE11  20                 	db	32
   772  00FE12  32                 	db	50
   773  00FE13  00                 	db	0
   774  00FE14  00                 	db	0
   775  00FE15  00                 	db	0
   776  00FE16  00                 	db	0
   777  00FE17  00                 	db	0
   778  00FE18  00                 	db	0
   779  00FE19  00                 	db	0
   780  00FE1A  00                 	db	0
   781  00FE1B  63                 	db	99
   782  00FE1C  6F                 	db	111
   783  00FE1D  6D                 	db	109
   784  00FE1E  6D                 	db	109
   785  00FE1F  61                 	db	97
   786  00FE20  6E                 	db	110
   787  00FE21  64                 	db	100
   788  00FE22  73                 	db	115
   789  00FE23  20                 	db	32
   790  00FE24  33                 	db	51
   791  00FE25  00                 	db	0
   792  00FE26  00                 	db	0
   793  00FE27  00                 	db	0
   794  00FE28  00                 	db	0
   795  00FE29  00                 	db	0
   796  00FE2A  00                 	db	0
   797  00FE2B  00                 	db	0
   798  00FE2C  00                 	db	0
   799  00FE2D  64                 	db	100
   800  00FE2E  69                 	db	105
   801  00FE2F  73                 	db	115
   802  00FE30  70                 	db	112
   803  00FE31  6C                 	db	108
   804  00FE32  61                 	db	97
   805  00FE33  79                 	db	121
   806  00FE34  73                 	db	115
   807  00FE35  20                 	db	32
   808  00FE36  33                 	db	51
   809  00FE37  00                 	db	0
   810  00FE38  00                 	db	0
   811  00FE39  00                 	db	0
   812  00FE3A  00                 	db	0
   813  00FE3B  00                 	db	0
   814  00FE3C  00                 	db	0
   815  00FE3D  00                 	db	0
   816  00FE3E  00                 	db	0
   817  00FE3F  63                 	db	99
   818  00FE40  6F                 	db	111
   819  00FE41  6D                 	db	109
   820  00FE42  6D                 	db	109
   821  00FE43  61                 	db	97
   822  00FE44  6E                 	db	110
   823  00FE45  64                 	db	100
   824  00FE46  73                 	db	115
   825  00FE47  20                 	db	32
   826  00FE48  34                 	db	52
   827  00FE49  00                 	db	0
   828  00FE4A  00                 	db	0
   829  00FE4B  00                 	db	0
   830  00FE4C  00                 	db	0
   831  00FE4D  00                 	db	0
   832  00FE4E  00                 	db	0
   833  00FE4F  00                 	db	0
   834  00FE50  00                 	db	0
   835  00FE51  64                 	db	100
   836  00FE52  69                 	db	105
   837  00FE53  73                 	db	115
   838  00FE54  70                 	db	112
   839  00FE55  6C                 	db	108
   840  00FE56  61                 	db	97
   841  00FE57  79                 	db	121
   842  00FE58  73                 	db	115
   843  00FE59  20                 	db	32
   844  00FE5A  34                 	db	52
   845  00FE5B  00                 	db	0
   846  00FE5C  00                 	db	0
   847  00FE5D  00                 	db	0
   848  00FE5E  00                 	db	0
   849  00FE5F  00                 	db	0
   850  00FE60  00                 	db	0
   851  00FE61  00                 	db	0
   852  00FE62  00                 	db	0
   853  00FE63                     __end_of_T:
   854                           	opt callstack 0
   855  0000                     _IVTADL	set	14493
   856  0000                     _IVTADH	set	14494
   857  0000                     _IVTADU	set	14495
   858  0000                     _PIR4bits	set	14756
   859  0000                     _PIE8bits	set	14744
   860  0000                     _PIR8bits	set	14760
   861  0000                     _SCANPR	set	14839
   862  0000                     _DMA2PR	set	14836
   863  0000                     _DMA1PR	set	14835
   864  0000                     _MAINPR	set	14834
   865  0000                     _ISRPR	set	14833
   866  0000                     _PIE2bits	set	14738
   867  0000                     _PIR2bits	set	14754
   868  0000                     _PIE9bits	set	14745
   869  0000                     _PIR9bits	set	14761
   870  0000                     _PIE6bits	set	14742
   871  0000                     _PIE3bits	set	14739
   872  0000                     _PMD7	set	14791
   873  0000                     _PMD6	set	14790
   874  0000                     _PMD5	set	14789
   875  0000                     _PMD4	set	14788
   876  0000                     _PMD3	set	14787
   877  0000                     _PMD2	set	14786
   878  0000                     _PMD1	set	14785
   879  0000                     _PMD0	set	14784
   880  0000                     _OSCTUNE	set	14814
   881  0000                     _OSCFRQ	set	14815
   882  0000                     _OSCEN	set	14813
   883  0000                     _OSCCON3	set	14811
   884  0000                     _OSCCON1	set	14809
   885  0000                     _IPR8bits	set	14728
   886  0000                     _IPR9bits	set	14729
   887  0000                     _IPR5bits	set	14725
   888  0000                     _IPR1bits	set	14721
   889  0000                     _IPR3bits	set	14723
   890  0000                     _IPR6bits	set	14726
   891  0000                     _IPR2bits	set	14722
   892  0000                     _PIE5bits	set	14741
   893  0000                     _PIE1bits	set	14737
   894  0000                     _PIR5bits	set	14757
   895  0000                     _PIR1bits	set	14753
   896  0000                     _PLLR	set	118496
   897  0000                     _SPI1SDIPPS	set	15071
   898  0000                     _U1RXPPS	set	15077
   899  0000                     _RC6PPS	set	14870
   900  0000                     _RC5PPS	set	14869
   901  0000                     _INT1PPS	set	15041
   902  0000                     _RD1PPS	set	14873
   903  0000                     _INT0PPS	set	15040
   904  0000                     _RC3PPS	set	14867
   905  0000                     _RB6PPS	set	14862
   906  0000                     _SPI1SCKPPS	set	15070
   907  0000                     _U2RXPPS	set	15080
   908  0000                     _SLRCONF	set	14995
   909  0000                     _SLRCONE	set	14979
   910  0000                     _SLRCOND	set	14963
   911  0000                     _SLRCONC	set	14947
   912  0000                     _SLRCONB	set	14931
   913  0000                     _SLRCONA	set	14915
   914  0000                     _ODCOND	set	14962
   915  0000                     _ODCONC	set	14946
   916  0000                     _ODCONB	set	14930
   917  0000                     _ODCONA	set	14914
   918  0000                     _ODCONF	set	14994
   919  0000                     _ODCONE	set	14978
   920  0000                     _WPUC	set	14945
   921  0000                     _WPUA	set	14913
   922  0000                     _WPUB	set	14929
   923  0000                     _WPUE	set	14977
   924  0000                     _WPUF	set	14993
   925  0000                     _WPUD	set	14961
   926  0000                     _ANSELA	set	14912
   927  0000                     _ANSELF	set	14992
   928  0000                     _ANSELE	set	14976
   929  0000                     _ANSELB	set	14928
   930  0000                     _ANSELC	set	14944
   931  0000                     _ANSELD	set	14960
   932  0000                     _DMA2SSA	set	15321
   933  0000                     _DMA1SSA	set	15353
   934  0000                     _DMA2DSZ	set	15310
   935  0000                     _DMA2SSZ	set	15319
   936  0000                     _DMA2DSA	set	15312
   937  0000                     _DMA1DSZ	set	15342
   938  0000                     _DMA1SSZ	set	15351
   939  0000                     _DMA1DSA	set	15344
   940  0000                     _DMA1CON0bits	set	15356
   941  0000                     _DMA1CON1bits	set	15357
   942  0000                     _DMA2CON0	set	15324
   943  0000                     _DMA2AIRQ	set	15326
   944  0000                     _DMA2SIRQ	set	15327
   945  0000                     _DMA2CON1	set	15325
   946  0000                     _DMA1CON0	set	15356
   947  0000                     _DMA1AIRQ	set	15358
   948  0000                     _DMA1SIRQ	set	15359
   949  0000                     _DMA1CON1	set	15357
   950  0000                     _CLKRCON	set	15589
   951  0000                     _CLKRCLK	set	15590
   952  0000                     _SPI1INTFbits	set	15642
   953  0000                     _SPI1RXB	set	15632
   954  0000                     _SPI1TXB	set	15633
   955  0000                     _SPI1TCNTL	set	15634
   956  0000                     _SPI1CON0	set	15636
   957  0000                     _SPI1CLK	set	15644
   958  0000                     _SPI1BAUD	set	15641
   959  0000                     _SPI1CON2	set	15638
   960  0000                     _SPI1CON1	set	15637
   961  0000                     _U2RXB	set	15824
   962  0000                     _U2TXB	set	15826
   963  0000                     _U2ERRIE	set	15842
   964  0000                     _U2ERRIR	set	15841
   965  0000                     _U2UIR	set	15840
   966  0000                     _U2FIFO	set	15839
   967  0000                     _U2BRGH	set	15838
   968  0000                     _U2BRGL	set	15837
   969  0000                     _U2CON2	set	15836
   970  0000                     _U2CON1	set	15835
   971  0000                     _U2CON0	set	15834
   972  0000                     _U2P3L	set	15832
   973  0000                     _U2P2L	set	15830
   974  0000                     _U2P1L	set	15828
   975  0000                     _U1RXB	set	15848
   976  0000                     _U1TXB	set	15850
   977  0000                     _U1ERRIE	set	15866
   978  0000                     _U1ERRIR	set	15865
   979  0000                     _U1UIR	set	15864
   980  0000                     _U1FIFO	set	15863
   981  0000                     _U1BRGH	set	15862
   982  0000                     _U1BRGL	set	15861
   983  0000                     _U1CON2	set	15860
   984  0000                     _U1CON1	set	15859
   985  0000                     _U1CON0	set	15858
   986  0000                     _U1P3H	set	15857
   987  0000                     _U1P3L	set	15856
   988  0000                     _U1P2H	set	15855
   989  0000                     _U1P2L	set	15854
   990  0000                     _U1P1H	set	15853
   991  0000                     _U1P1L	set	15852
   992  0000                     _FVRCON	set	16065
   993  0000                     _ADFLTRL	set	16102
   994  0000                     _ADFLTRH	set	16103
   995  0000                     _ADCON0bits	set	16120
   996  0000                     _ADCON0	set	16120
   997  0000                     _ADCLK	set	16127
   998  0000                     _ADACT	set	16126
   999  0000                     _ADREF	set	16125
  1000  0000                     _ADSTAT	set	16124
  1001  0000                     _ADCON3	set	16123
  1002  0000                     _ADCON2	set	16122
  1003  0000                     _ADCON1	set	16121
  1004  0000                     _ADPREH	set	16119
  1005  0000                     _ADPREL	set	16118
  1006  0000                     _ADCAP	set	16117
  1007  0000                     _ADACQH	set	16116
  1008  0000                     _ADACQL	set	16115
  1009  0000                     _ADPCH	set	16113
  1010  0000                     _ADRPT	set	16108
  1011  0000                     _ADACCU	set	16106
  1012  0000                     _ADSTPTH	set	16101
  1013  0000                     _ADSTPTL	set	16100
  1014  0000                     _ADUTHH	set	16097
  1015  0000                     _ADUTHL	set	16096
  1016  0000                     _ADLTHH	set	16095
  1017  0000                     _ADLTHL	set	16094
  1018  0000                     _CCPTMRS1bits	set	16223
  1019  0000                     _PORTFbits	set	16335
  1020  0000                     _LATCbits	set	16316
  1021  0000                     _LATDbits	set	16317
  1022  0000                     _PORTBbits	set	16331
  1023  0000                     _T2CON	set	16300
  1024  0000                     _T2TMR	set	16298
  1025  0000                     _T2PR	set	16299
  1026  0000                     _T2RST	set	16303
  1027  0000                     _T2HLT	set	16301
  1028  0000                     _T2CLKCON	set	16302
  1029  0000                     _PWM8DCL	set	16224
  1030  0000                     _PWM8DCH	set	16225
  1031  0000                     _PWM8CON	set	16226
  1032  0000                     _LATEbits	set	16318
  1033  0000                     _T5CONbits	set	16282
  1034  0000                     _T5CON	set	16282
  1035  0000                     _TMR5L	set	16280
  1036  0000                     _TMR5H	set	16281
  1037  0000                     _T5CLK	set	16285
  1038  0000                     _T5GATE	set	16284
  1039  0000                     _T5GCON	set	16283
  1040  0000                     _T6CON	set	16276
  1041  0000                     _T6TMR	set	16274
  1042  0000                     _T6PR	set	16275
  1043  0000                     _T6RST	set	16279
  1044  0000                     _T6HLT	set	16277
  1045  0000                     _T6CLKCON	set	16278
  1046  0000                     _TRISD	set	16325
  1047  0000                     _TRISC	set	16324
  1048  0000                     _TRISB	set	16323
  1049  0000                     _TRISA	set	16322
  1050  0000                     _TRISF	set	16327
  1051  0000                     _TRISE	set	16326
  1052  0000                     _LATC	set	16316
  1053  0000                     _LATB	set	16315
  1054  0000                     _LATF	set	16319
  1055  0000                     _LATA	set	16314
  1056  0000                     _LATD	set	16317
  1057  0000                     _LATE	set	16318
  1058  0000                     _IVTLOCKbits	set	16340
  1059  0000                     _IVTLOCK	set	16340
  1060  0000                     _INTCON0bits	set	16338
  1061  0000                     _GIE	set	130711
  1062  00FE63                     
  1063                           ; BSR set to: 57
  1064  00FE63  20                 	db	32
  1065  00FE64  4D                 	db	77	;'M'
  1066  00FE65  65                 	db	101	;'e'
  1067  00FE66  73                 	db	115	;'s'
  1068  00FE67  67                 	db	103	;'g'
  1069  00FE68  20                 	db	32
  1070  00FE69  25                 	db	37
  1071  00FE6A  64                 	db	100	;'d'
  1072  00FE6B  20                 	db	32
  1073  00FE6C  53                 	db	83	;'S'
  1074  00FE6D  74                 	db	116	;'t'
  1075  00FE6E  61                 	db	97	;'a'
  1076  00FE6F  63                 	db	99	;'c'
  1077  00FE70  6B                 	db	107	;'k'
  1078  00FE71  20                 	db	32
  1079  00FE72  25                 	db	37
  1080  00FE73  64                 	db	100	;'d'
  1081  00FE74  20                 	db	32
  1082  00FE75  20                 	db	32
  1083  00FE76  20                 	db	32
  1084  00FE77  20                 	db	32
  1085  00FE78  20                 	db	32
  1086  00FE79  20                 	db	32
  1087  00FE7A  00                 	db	0
  1088  00FE7B                     STR_36:
  1089                           
  1090                           ; BSR set to: 57
  1091  00FE7B  20                 	db	32
  1092  00FE7C  20                 	db	32
  1093  00FE7D  20                 	db	32
  1094  00FE7E  20                 	db	32
  1095  00FE7F  20                 	db	32
  1096  00FE80  20                 	db	32
  1097  00FE81  20                 	db	32
  1098  00FE82  20                 	db	32
  1099  00FE83  20                 	db	32
  1100  00FE84  20                 	db	32
  1101  00FE85  20                 	db	32
  1102  00FE86  20                 	db	32
  1103  00FE87  20                 	db	32
  1104  00FE88  20                 	db	32
  1105  00FE89  20                 	db	32
  1106  00FE8A  20                 	db	32
  1107  00FE8B  20                 	db	32
  1108  00FE8C  20                 	db	32
  1109  00FE8D  00                 	db	0
  1110  00FE8E                     STR_26:
  1111                           
  1112                           ; BSR set to: 57
  1113  00FE8E  48                 	db	72	;'H'
  1114  00FE8F  45                 	db	69	;'E'
  1115  00FE90  4C                 	db	76	;'L'
  1116  00FE91  50                 	db	80	;'P'
  1117  00FE92  20                 	db	32
  1118  00FE93  25                 	db	37
  1119  00FE94  73                 	db	115	;'s'
  1120  00FE95  20                 	db	32
  1121  00FE96  20                 	db	32
  1122  00FE97  20                 	db	32
  1123  00FE98  20                 	db	32
  1124  00FE99  20                 	db	32
  1125  00FE9A  20                 	db	32
  1126  00FE9B  20                 	db	32
  1127  00FE9C  20                 	db	32
  1128  00FE9D  20                 	db	32
  1129  00FE9E  20                 	db	32
  1130  00FE9F  20                 	db	32
  1131  00FEA0  00                 	db	0
  1132  00FEA1                     
  1133                           ; BSR set to: 57
  1134  00FEA1  44                 	db	68	;'D'
  1135  00FEA2  49                 	db	73	;'I'
  1136  00FEA3  53                 	db	83	;'S'
  1137  00FEA4  50                 	db	80	;'P'
  1138  00FEA5  4C                 	db	76	;'L'
  1139  00FEA6  41                 	db	65	;'A'
  1140  00FEA7  59                 	db	89	;'Y'
  1141  00FEA8  20                 	db	32
  1142  00FEA9  25                 	db	37
  1143  00FEAA  73                 	db	115	;'s'
  1144  00FEAB  20                 	db	32
  1145  00FEAC  20                 	db	32
  1146  00FEAD  20                 	db	32
  1147  00FEAE  20                 	db	32
  1148  00FEAF  20                 	db	32
  1149  00FEB0  20                 	db	32
  1150  00FEB1  20                 	db	32
  1151  00FEB2  20                 	db	32
  1152  00FEB3  00                 	db	0
  1153  00FEB4                     STR_16:
  1154                           
  1155                           ; BSR set to: 57
  1156  00FEB4  52                 	db	82	;'R'
  1157  00FEB5  55                 	db	85	;'U'
  1158  00FEB6  4E                 	db	78	;'N'
  1159  00FEB7  20                 	db	32
  1160  00FEB8  20                 	db	32
  1161  00FEB9  20                 	db	32
  1162  00FEBA  20                 	db	32
  1163  00FEBB  20                 	db	32
  1164  00FEBC  20                 	db	32
  1165  00FEBD  20                 	db	32
  1166  00FEBE  20                 	db	32
  1167  00FEBF  20                 	db	32
  1168  00FEC0  20                 	db	32
  1169  00FEC1  20                 	db	32
  1170  00FEC2  20                 	db	32
  1171  00FEC3  20                 	db	32
  1172  00FEC4  20                 	db	32
  1173  00FEC5  20                 	db	32
  1174  00FEC6  00                 	db	0
  1175  00FEC7                     STR_18:
  1176                           
  1177                           ; BSR set to: 57
  1178  00FEC7  41                 	db	65	;'A'
  1179  00FEC8  55                 	db	85	;'U'
  1180  00FEC9  58                 	db	88	;'X'
  1181  00FECA  20                 	db	32
  1182  00FECB  20                 	db	32
  1183  00FECC  20                 	db	32
  1184  00FECD  20                 	db	32
  1185  00FECE  20                 	db	32
  1186  00FECF  20                 	db	32
  1187  00FED0  20                 	db	32
  1188  00FED1  20                 	db	32
  1189  00FED2  20                 	db	32
  1190  00FED3  20                 	db	32
  1191  00FED4  20                 	db	32
  1192  00FED5  20                 	db	32
  1193  00FED6  20                 	db	32
  1194  00FED7  20                 	db	32
  1195  00FED8  20                 	db	32
  1196  00FED9  00                 	db	0
  1197  00FEDA                     STR_9:
  1198                           
  1199                           ; BSR set to: 57
  1200  00FEDA  50                 	db	80	;'P'
  1201  00FEDB  56                 	db	86	;'V'
  1202  00FEDC  20                 	db	32
  1203  00FEDD  20                 	db	32
  1204  00FEDE  20                 	db	32
  1205  00FEDF  50                 	db	80	;'P'
  1206  00FEE0  57                 	db	87	;'W'
  1207  00FEE1  52                 	db	82	;'R'
  1208  00FEE2  20                 	db	32
  1209  00FEE3  25                 	db	37
  1210  00FEE4  33                 	db	51	;'3'
  1211  00FEE5  2E                 	db	46
  1212  00FEE6  32                 	db	50	;'2'
  1213  00FEE7  66                 	db	102	;'f'
  1214  00FEE8  20                 	db	32
  1215  00FEE9  20                 	db	32
  1216  00FEEA  20                 	db	32
  1217  00FEEB  20                 	db	32
  1218  00FEEC  00                 	db	0
  1219  00FEED                     STR_11:
  1220                           
  1221                           ; BSR set to: 57
  1222  00FEED  49                 	db	73	;'I'
  1223  00FEEE  4E                 	db	78	;'N'
  1224  00FEEF  56                 	db	86	;'V'
  1225  00FEF0  20                 	db	32
  1226  00FEF1  20                 	db	32
  1227  00FEF2  50                 	db	80	;'P'
  1228  00FEF3  57                 	db	87	;'W'
  1229  00FEF4  52                 	db	82	;'R'
  1230  00FEF5  20                 	db	32
  1231  00FEF6  25                 	db	37
  1232  00FEF7  33                 	db	51	;'3'
  1233  00FEF8  2E                 	db	46
  1234  00FEF9  32                 	db	50	;'2'
  1235  00FEFA  66                 	db	102	;'f'
  1236  00FEFB  20                 	db	32
  1237  00FEFC  20                 	db	32
  1238  00FEFD  20                 	db	32
  1239  00FEFE  20                 	db	32
  1240  00FEFF  00                 	db	0
  1241  00FF00                     STR_10:
  1242                           
  1243                           ; BSR set to: 57
  1244  00FF00  4C                 	db	76	;'L'
  1245  00FF01  4F                 	db	79	;'O'
  1246  00FF02  41                 	db	65	;'A'
  1247  00FF03  44                 	db	68	;'D'
  1248  00FF04  20                 	db	32
  1249  00FF05  50                 	db	80	;'P'
  1250  00FF06  57                 	db	87	;'W'
  1251  00FF07  52                 	db	82	;'R'
  1252  00FF08  20                 	db	32
  1253  00FF09  25                 	db	37
  1254  00FF0A  33                 	db	51	;'3'
  1255  00FF0B  2E                 	db	46
  1256  00FF0C  32                 	db	50	;'2'
  1257  00FF0D  66                 	db	102	;'f'
  1258  00FF0E  20                 	db	32
  1259  00FF0F  20                 	db	32
  1260  00FF10  20                 	db	32
  1261  00FF11  20                 	db	32
  1262  00FF12  00                 	db	0
  1263  00FF13                     STR_15:
  1264                           
  1265                           ; BSR set to: 57
  1266  00FF13  42                 	db	66	;'B'
  1267  00FF14  41                 	db	65	;'A'
  1268  00FF15  54                 	db	84	;'T'
  1269  00FF16  20                 	db	32
  1270  00FF17  20                 	db	32
  1271  00FF18  20                 	db	32
  1272  00FF19  50                 	db	80	;'P'
  1273  00FF1A  57                 	db	87	;'W'
  1274  00FF1B  52                 	db	82	;'R'
  1275  00FF1C  20                 	db	32
  1276  00FF1D  25                 	db	37
  1277  00FF1E  33                 	db	51	;'3'
  1278  00FF1F  2E                 	db	46
  1279  00FF20  32                 	db	50	;'2'
  1280  00FF21  66                 	db	102	;'f'
  1281  00FF22  20                 	db	32
  1282  00FF23  20                 	db	32
  1283  00FF24  20                 	db	32
  1284  00FF25  00                 	db	0
  1285  00FF26                     STR_13:
  1286                           
  1287                           ; BSR set to: 57
  1288  00FF26  42                 	db	66	;'B'
  1289  00FF27  56                 	db	86	;'V'
  1290  00FF28  20                 	db	32
  1291  00FF29  25                 	db	37
  1292  00FF2A  32                 	db	50	;'2'
  1293  00FF2B  2E                 	db	46
  1294  00FF2C  32                 	db	50	;'2'
  1295  00FF2D  66                 	db	102	;'f'
  1296  00FF2E  20                 	db	32
  1297  00FF2F  42                 	db	66	;'B'
  1298  00FF30  41                 	db	65	;'A'
  1299  00FF31  20                 	db	32
  1300  00FF32  25                 	db	37
  1301  00FF33  32                 	db	50	;'2'
  1302  00FF34  2E                 	db	46
  1303  00FF35  32                 	db	50	;'2'
  1304  00FF36  66                 	db	102	;'f'
  1305  00FF37  20                 	db	32
  1306  00FF38  00                 	db	0
  1307  00FF39                     STR_14:
  1308                           
  1309                           ; BSR set to: 57
  1310  00FF39  43                 	db	67	;'C'
  1311  00FF3A  56                 	db	86	;'V'
  1312  00FF3B  20                 	db	32
  1313  00FF3C  25                 	db	37
  1314  00FF3D  32                 	db	50	;'2'
  1315  00FF3E  2E                 	db	46
  1316  00FF3F  32                 	db	50	;'2'
  1317  00FF40  66                 	db	102	;'f'
  1318  00FF41  20                 	db	32
  1319  00FF42  4C                 	db	76	;'L'
  1320  00FF43  41                 	db	65	;'A'
  1321  00FF44  20                 	db	32
  1322  00FF45  25                 	db	37
  1323  00FF46  32                 	db	50	;'2'
  1324  00FF47  2E                 	db	46
  1325  00FF48  32                 	db	50	;'2'
  1326  00FF49  66                 	db	102	;'f'
  1327  00FF4A  20                 	db	32
  1328  00FF4B  00                 	db	0
  1329  00FF4C                     STR_12:
  1330                           
  1331                           ; BSR set to: 57
  1332  00FF4C  50                 	db	80	;'P'
  1333  00FF4D  56                 	db	86	;'V'
  1334  00FF4E  20                 	db	32
  1335  00FF4F  25                 	db	37
  1336  00FF50  32                 	db	50	;'2'
  1337  00FF51  2E                 	db	46
  1338  00FF52  32                 	db	50	;'2'
  1339  00FF53  66                 	db	102	;'f'
  1340  00FF54  20                 	db	32
  1341  00FF55  50                 	db	80	;'P'
  1342  00FF56  41                 	db	65	;'A'
  1343  00FF57  20                 	db	32
  1344  00FF58  25                 	db	37
  1345  00FF59  32                 	db	50	;'2'
  1346  00FF5A  2E                 	db	46
  1347  00FF5B  32                 	db	50	;'2'
  1348  00FF5C  66                 	db	102	;'f'
  1349  00FF5D  20                 	db	32
  1350  00FF5E  00                 	db	0
  1351  00FF5F                     STR_8:
  1352                           
  1353                           ; BSR set to: 57
  1354  00FF5F  20                 	db	32
  1355  00FF60  56                 	db	86	;'V'
  1356  00FF61  54                 	db	84	;'T'
  1357  00FF62  45                 	db	69	;'E'
  1358  00FF63  52                 	db	82	;'R'
  1359  00FF64  4D                 	db	77	;'M'
  1360  00FF65  20                 	db	32
  1361  00FF66  23                 	db	35
  1362  00FF67  32                 	db	50	;'2'
  1363  00FF68  20                 	db	32
  1364  00FF69  20                 	db	32
  1365  00FF6A  20                 	db	32
  1366  00FF6B  20                 	db	32
  1367  00FF6C  20                 	db	32
  1368  00FF6D  20                 	db	32
  1369  00FF6E  20                 	db	32
  1370  00FF6F  00                 	db	0
  1371  00FF70                     STR_4:
  1372                           
  1373                           ; BSR set to: 57
  1374  00FF70  20                 	db	32
  1375  00FF71  4E                 	db	78	;'N'
  1376  00FF72  53                 	db	83	;'S'
  1377  00FF73  41                 	db	65	;'A'
  1378  00FF74  53                 	db	83	;'S'
  1379  00FF75  50                 	db	80	;'P'
  1380  00FF76  4F                 	db	79	;'O'
  1381  00FF77  4F                 	db	79	;'O'
  1382  00FF78  4B                 	db	75	;'K'
  1383  00FF79  20                 	db	32
  1384  00FF7A  20                 	db	32
  1385  00FF7B  20                 	db	32
  1386  00FF7C  20                 	db	32
  1387  00FF7D  20                 	db	32
  1388  00FF7E  20                 	db	32
  1389  00FF7F  20                 	db	32
  1390  00FF80  00                 	db	0
  1391  00FF81                     STR_1:
  1392                           
  1393                           ; BSR set to: 57
  1394  00FF81  20                 	db	32
  1395  00FF82  4D                 	db	77	;'M'
  1396  00FF83  42                 	db	66	;'B'
  1397  00FF84  4D                 	db	77	;'M'
  1398  00FF85  43                 	db	67	;'C'
  1399  00FF86  20                 	db	32
  1400  00FF87  53                 	db	83	;'S'
  1401  00FF88  4F                 	db	79	;'O'
  1402  00FF89  4C                 	db	76	;'L'
  1403  00FF8A  41                 	db	65	;'A'
  1404  00FF8B  52                 	db	82	;'R'
  1405  00FF8C  4D                 	db	77	;'M'
  1406  00FF8D  4F                 	db	79	;'O'
  1407  00FF8E  4E                 	db	78	;'N'
  1408  00FF8F  20                 	db	32
  1409  00FF90  20                 	db	32
  1410  00FF91  00                 	db	0
  1411  00FF92                     STR_5:
  1412                           
  1413                           ; BSR set to: 57
  1414  00FF92  20                 	db	32
  1415  00FF93  53                 	db	83	;'S'
  1416  00FF94  45                 	db	69	;'E'
  1417  00FF95  51                 	db	81	;'Q'
  1418  00FF96  55                 	db	85	;'U'
  1419  00FF97  45                 	db	69	;'E'
  1420  00FF98  4E                 	db	78	;'N'
  1421  00FF99  43                 	db	67	;'C'
  1422  00FF9A  45                 	db	69	;'E'
  1423  00FF9B  20                 	db	32
  1424  00FF9C  54                 	db	84	;'T'
  1425  00FF9D  45                 	db	69	;'E'
  1426  00FF9E  53                 	db	83	;'S'
  1427  00FF9F  54                 	db	84	;'T'
  1428  00FFA0  20                 	db	32
  1429  00FFA1  20                 	db	32
  1430  00FFA2  00                 	db	0
  1431  00FFA3                     STR_30:
  1432                           
  1433                           ; BSR set to: 57
  1434  00FFA3  76                 	db	118	;'v'
  1435  00FFA4  74                 	db	116	;'t'
  1436  00FFA5  65                 	db	101	;'e'
  1437  00FFA6  72                 	db	114	;'r'
  1438  00FFA7  6D                 	db	109	;'m'
  1439  00FFA8  20                 	db	32
  1440  00FFA9  25                 	db	37
  1441  00FFAA  78                 	db	120	;'x'
  1442  00FFAB  3A                 	db	58	;':'
  1443  00FFAC  25                 	db	37
  1444  00FFAD  78                 	db	120	;'x'
  1445  00FFAE  20                 	db	32
  1446  00FFAF  20                 	db	32
  1447  00FFB0  20                 	db	32
  1448  00FFB1  00                 	db	0
  1449  00FFB2                     STR_2:
  1450                           
  1451                           ; BSR set to: 57
  1452  00FFB2  20                 	db	32
  1453  00FFB3  56                 	db	86	;'V'
  1454  00FFB4  65                 	db	101	;'e'
  1455  00FFB5  72                 	db	114	;'r'
  1456  00FFB6  73                 	db	115	;'s'
  1457  00FFB7  69                 	db	105	;'i'
  1458  00FFB8  6F                 	db	111	;'o'
  1459  00FFB9  6E                 	db	110	;'n'
  1460  00FFBA  20                 	db	32
  1461  00FFBB  25                 	db	37
  1462  00FFBC  73                 	db	115	;'s'
  1463  00FFBD  20                 	db	32
  1464  00FFBE  20                 	db	32
  1465  00FFBF  20                 	db	32
  1466  00FFC0  00                 	db	0
  1467  00FFC1                     STR_24:
  1468                           
  1469                           ; BSR set to: 57
  1470  00FFC1  4E                 	db	78	;'N'
  1471  00FFC2  6F                 	db	111	;'o'
  1472  00FFC3  76                 	db	118	;'v'
  1473  00FFC4  20                 	db	32
  1474  00FFC5  33                 	db	51	;'3'
  1475  00FFC6  30                 	db	48	;'0'
  1476  00FFC7  20                 	db	32
  1477  00FFC8  32                 	db	50	;'2'
  1478  00FFC9  30                 	db	48	;'0'
  1479  00FFCA  31                 	db	49	;'1'
  1480  00FFCB  39                 	db	57	;'9'
  1481  00FFCC  00                 	db	0
  1482  00FFCD                     STR_28:
  1483                           
  1484                           ; BSR set to: 57
  1485  00FFCD  25                 	db	37
  1486  00FFCE  73                 	db	115	;'s'
  1487  00FFCF  20                 	db	32
  1488  00FFD0  20                 	db	32
  1489  00FFD1  20                 	db	32
  1490  00FFD2  20                 	db	32
  1491  00FFD3  20                 	db	32
  1492  00FFD4  20                 	db	32
  1493  00FFD5  20                 	db	32
  1494  00FFD6  00                 	db	0
  1495  00FFD7                     STR_25:
  1496                           
  1497                           ; BSR set to: 57
  1498  00FFD7  31                 	db	49	;'1'
  1499  00FFD8  31                 	db	49	;'1'
  1500  00FFD9  3A                 	db	58	;':'
  1501  00FFDA  35                 	db	53	;'5'
  1502  00FFDB  31                 	db	49	;'1'
  1503  00FFDC  3A                 	db	58	;':'
  1504  00FFDD  35                 	db	53	;'5'
  1505  00FFDE  36                 	db	54	;'6'
  1506  00FFDF  00                 	db	0
  1507  00FFE0                     STR_3:
  1508                           
  1509                           ; BSR set to: 57
  1510  00FFE0  30                 	db	48	;'0'
  1511  00FFE1  2E                 	db	46
  1512  00FFE2  39                 	db	57	;'9'
  1513  00FFE3  39                 	db	57	;'9'
  1514  00FFE4  33                 	db	51	;'3'
  1515  00FFE5  00                 	db	0
  1516  00FFE6                     STR_43:
  1517                           
  1518                           ; BSR set to: 57
  1519  00FFE6  49                 	db	73	;'I'
  1520  00FFE7  4E                 	db	78	;'N'
  1521  00FFE8  46                 	db	70	;'F'
  1522  00FFE9  00                 	db	0
  1523  00FFEA                     STR_47:
  1524                           
  1525                           ; BSR set to: 57
  1526  00FFEA  4E                 	db	78	;'N'
  1527  00FFEB  41                 	db	65	;'A'
  1528  00FFEC  4E                 	db	78	;'N'
  1529  00FFED  00                 	db	0
  1530  00FFEE                     STR_44:
  1531                           
  1532                           ; BSR set to: 57
  1533  00FFEE  69                 	db	105	;'i'
  1534  00FFEF  6E                 	db	110	;'n'
  1535  00FFF0  66                 	db	102	;'f'
  1536  00FFF1  00                 	db	0
  1537  00FFF2                     STR_48:
  1538                           
  1539                           ; BSR set to: 57
  1540  00FFF2  6E                 	db	110	;'n'
  1541  00FFF3  61                 	db	97	;'a'
  1542  00FFF4  6E                 	db	110	;'n'
  1543  00FFF5  00                 	db	0
  1544  00FFF6                     STR_51:
  1545                           
  1546                           ; BSR set to: 57
  1547  00FFF6  6C                 	db	108	;'l'
  1548  00FFF7  66                 	db	102	;'f'
  1549  00FFF8  00                 	db	0
  1550  00FFF9                     STR_22:
  1551                           
  1552                           ; BSR set to: 57
  1553  00FFF9  25                 	db	37
  1554  00FFFA  63                 	db	99	;'c'
  1555  00FFFB  00                 	db	0
  1556  00FFFC                     STR_21:
  1557                           
  1558                           ; BSR set to: 57
  1559  00FFFC  25                 	db	37
  1560  00FFFD  73                 	db	115	;'s'
  1561  00FFFE  00                 	db	0
  1562  0000                     
  1563                           ; #config settings
  1564  00FFFF  00                 	db	0	; dummy byte at the end
  1565  0000                     
  1566                           	psect	cinit
  1567  016E1A                     __pcinit:
  1568                           	opt callstack 0
  1569  016E1A                     start_initialization:
  1570                           	opt callstack 0
  1571  016E1A                     __initialization:
  1572                           	opt callstack 0
  1573                           
  1574                           ; Initialize objects allocated to BANK2 (187 bytes)
  1575                           ; load TBLPTR registers with __pidataBANK2
  1576  016E1A  0E64               	movlw	low __pidataBANK2
  1577  016E1C  6EF6               	movwf	tblptrl,c
  1578  016E1E  0E72               	movlw	high __pidataBANK2
  1579  016E20  6EF7               	movwf	tblptrh,c
  1580  016E22  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1581  016E24  6EF8               	movwf	tblptru,c
  1582  016E26  EE00  F200         	lfsr	0,__pdataBANK2
  1583  016E2A  EE20 F0BB          	lfsr	2,187
  1584  016E2E                     copy_data0:
  1585  016E2E  0009               	tblrd		*+
  1586  016E30  006F FFD7 FFEE     	movff	tablat,postinc0
  1587  016E36  50DD               	movf	postdec2,w,c
  1588  016E38  50D9               	movf	fsr2l,w,c
  1589  016E3A  E1F9               	bnz	copy_data0
  1590                           
  1591                           ; Initialize objects allocated to BANK1 (23 bytes)
  1592                           ; load TBLPTR registers with __pidataBANK1
  1593  016E3C  0E7E               	movlw	low __pidataBANK1
  1594  016E3E  6EF6               	movwf	tblptrl,c
  1595  016E40  0E8A               	movlw	high __pidataBANK1
  1596  016E42  6EF7               	movwf	tblptrh,c
  1597  016E44  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1598  016E46  6EF8               	movwf	tblptru,c
  1599  016E48  EE00  F1D4         	lfsr	0,__pdataBANK1
  1600  016E4C  EE20 F017          	lfsr	2,23
  1601  016E50                     copy_data1:
  1602  016E50  0009               	tblrd		*+
  1603  016E52  006F FFD7 FFEE     	movff	tablat,postinc0
  1604  016E58  50DD               	movf	postdec2,w,c
  1605  016E5A  50D9               	movf	fsr2l,w,c
  1606  016E5C  E1F9               	bnz	copy_data1
  1607                           
  1608                           ; Initialize objects allocated to BANK0 (47 bytes)
  1609                           ; load TBLPTR registers with __pidataBANK0
  1610  016E5E  0E52               	movlw	low __pidataBANK0
  1611  016E60  6EF6               	movwf	tblptrl,c
  1612  016E62  0E84               	movlw	high __pidataBANK0
  1613  016E64  6EF7               	movwf	tblptrh,c
  1614  016E66  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1615  016E68  6EF8               	movwf	tblptru,c
  1616  016E6A  EE00  F0C7         	lfsr	0,__pdataBANK0
  1617  016E6E  EE20 F02F          	lfsr	2,47
  1618  016E72                     copy_data2:
  1619  016E72  0009               	tblrd		*+
  1620  016E74  006F FFD7 FFEE     	movff	tablat,postinc0
  1621  016E7A  50DD               	movf	postdec2,w,c
  1622  016E7C  50D9               	movf	fsr2l,w,c
  1623  016E7E  E1F9               	bnz	copy_data2
  1624                           
  1625                           ; Clear objects allocated to BANK7 (255 bytes)
  1626  016E80  EE01  F300         	lfsr	0,__pbssBANK7
  1627  016E84  EE20 F0FF          	lfsr	2,255
  1628  016E88                     clear_0:
  1629  016E88  6AEE               	clrf	postinc0,c
  1630  016E8A  50DD               	movf	postdec2,w,c
  1631  016E8C  50D9               	movf	fsr2l,w,c
  1632  016E8E  E1FC               	bnz	clear_0
  1633  016E90  50DA               	movf	fsr2h,w,c
  1634  016E92  E1FA               	bnz	clear_0
  1635                           
  1636                           ; Clear objects allocated to BANK6 (255 bytes)
  1637  016E94  EE01  F200         	lfsr	0,__pbssBANK6
  1638  016E98  EE20 F0FF          	lfsr	2,255
  1639  016E9C                     clear_1:
  1640  016E9C  6AEE               	clrf	postinc0,c
  1641  016E9E  50DD               	movf	postdec2,w,c
  1642  016EA0  50D9               	movf	fsr2l,w,c
  1643  016EA2  E1FC               	bnz	clear_1
  1644  016EA4  50DA               	movf	fsr2h,w,c
  1645  016EA6  E1FA               	bnz	clear_1
  1646                           
  1647                           ; Clear objects allocated to BANK5 (218 bytes)
  1648  016EA8  EE01  F100         	lfsr	0,__pbssBANK5
  1649  016EAC  0EDA               	movlw	218
  1650  016EAE                     clear_2:
  1651  016EAE  6AEE               	clrf	postinc0,c
  1652  016EB0  06E8               	decf	wreg,f,c
  1653  016EB2  E1FD               	bnz	clear_2
  1654                           
  1655                           ; Clear objects allocated to BANK4 (67 bytes)
  1656  016EB4  EE01  F000         	lfsr	0,__pbssBANK4
  1657  016EB8  0E43               	movlw	67
  1658  016EBA                     clear_3:
  1659  016EBA  6AEE               	clrf	postinc0,c
  1660  016EBC  06E8               	decf	wreg,f,c
  1661  016EBE  E1FD               	bnz	clear_3
  1662                           
  1663                           ; Clear objects allocated to BANK3 (215 bytes)
  1664  016EC0  EE00  F300         	lfsr	0,__pbssBANK3
  1665  016EC4  0ED7               	movlw	215
  1666  016EC6                     clear_4:
  1667  016EC6  6AEE               	clrf	postinc0,c
  1668  016EC8  06E8               	decf	wreg,f,c
  1669  016ECA  E1FD               	bnz	clear_4
  1670                           
  1671                           ; Clear objects allocated to BANK2 (64 bytes)
  1672  016ECC  EE00  F2BB         	lfsr	0,__pbssBANK2
  1673  016ED0  0E40               	movlw	64
  1674  016ED2                     clear_5:
  1675  016ED2  6AEE               	clrf	postinc0,c
  1676  016ED4  06E8               	decf	wreg,f,c
  1677  016ED6  E1FD               	bnz	clear_5
  1678                           
  1679                           ; Clear objects allocated to BANK1 (212 bytes)
  1680  016ED8  EE00  F100         	lfsr	0,__pbssBANK1
  1681  016EDC  0ED4               	movlw	212
  1682  016EDE                     clear_6:
  1683  016EDE  6AEE               	clrf	postinc0,c
  1684  016EE0  06E8               	decf	wreg,f,c
  1685  016EE2  E1FD               	bnz	clear_6
  1686                           
  1687                           ; Clear objects allocated to BANK0 (103 bytes)
  1688  016EE4  EE00  F060         	lfsr	0,__pbssBANK0
  1689  016EE8  0E67               	movlw	103
  1690  016EEA                     clear_7:
  1691  016EEA  6AEE               	clrf	postinc0,c
  1692  016EEC  06E8               	decf	wreg,f,c
  1693  016EEE  E1FD               	bnz	clear_7
  1694                           
  1695                           ; Clear objects allocated to COMRAM (49 bytes)
  1696  016EF0  EE00  F001         	lfsr	0,__pbssCOMRAM
  1697  016EF4  0E31               	movlw	49
  1698  016EF6                     clear_8:
  1699  016EF6  6AEE               	clrf	postinc0,c
  1700  016EF8  06E8               	decf	wreg,f,c
  1701  016EFA  E1FD               	bnz	clear_8
  1702                           
  1703                           ;
  1704                           ; Setup IVTBASE
  1705                           ;
  1706  016EFC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1707  016EFE  6ED5               	movwf	213,c
  1708  016F00  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1709  016F02  6ED6               	movwf	214,c
  1710  016F04  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1711  016F06  6ED7               	movwf	215,c
  1712  016F08                     end_of_initialization:
  1713                           	opt callstack 0
  1714  016F08                     __end_of__initialization:
  1715                           	opt callstack 0
  1716  016F08  0100               	movlb	0
  1717  016F0A  EFB4  F096         	goto	_main	;jump to C main() function
  1718                           
  1719                           	psect	bssCOMRAM
  1720  000001                     __pbssCOMRAM:
  1721                           	opt callstack 0
  1722  000001                     _ADCC_ADTI_InterruptHandler:
  1723                           	opt callstack 0
  1724  000001                     	ds	3
  1725  000004                     _ADCC_ADI_InterruptHandler:
  1726                           	opt callstack 0
  1727  000004                     	ds	3
  1728  000007                     _UART1_TxInterruptHandler:
  1729                           	opt callstack 0
  1730  000007                     	ds	3
  1731  00000A                     _UART1_RxInterruptHandler:
  1732                           	opt callstack 0
  1733  00000A                     	ds	3
  1734  00000D                     _UART2_TxInterruptHandler:
  1735                           	opt callstack 0
  1736  00000D                     	ds	3
  1737  000010                     _UART2_RxInterruptHandler:
  1738                           	opt callstack 0
  1739  000010                     	ds	3
  1740  000013                     _INT1_InterruptHandler:
  1741                           	opt callstack 0
  1742  000013                     	ds	3
  1743  000016                     _INT0_InterruptHandler:
  1744                           	opt callstack 0
  1745  000016                     	ds	3
  1746  000019                     _nout:
  1747                           	opt callstack 0
  1748  000019                     	ds	2
  1749  00001B                     _width:
  1750                           	opt callstack 0
  1751  00001B                     	ds	2
  1752  00001D                     _prec:
  1753                           	opt callstack 0
  1754  00001D                     	ds	2
  1755  00001F                     _flags:
  1756                           	opt callstack 0
  1757  00001F                     	ds	2
  1758  000021                     TMR5_ISR@CountCallBack:
  1759                           	opt callstack 0
  1760  000021                     	ds	2
  1761  000023                     _timer5ReloadVal:
  1762                           	opt callstack 0
  1763  000023                     	ds	2
  1764  000025                     _mode_sw:
  1765                           	opt callstack 0
  1766  000025                     	ds	1
  1767  000026                     _uart2RxCount:
  1768                           	opt callstack 0
  1769  000026                     	ds	1
  1770  000027                     _uart2RxTail:
  1771                           	opt callstack 0
  1772  000027                     	ds	1
  1773  000028                     _uart2RxHead:
  1774                           	opt callstack 0
  1775  000028                     	ds	1
  1776  000029                     _uart2TxBufferRemaining:
  1777                           	opt callstack 0
  1778  000029                     	ds	1
  1779  00002A                     _uart2TxTail:
  1780                           	opt callstack 0
  1781  00002A                     	ds	1
  1782  00002B                     _uart2TxHead:
  1783                           	opt callstack 0
  1784  00002B                     	ds	1
  1785  00002C                     _uart1RxCount:
  1786                           	opt callstack 0
  1787  00002C                     	ds	1
  1788  00002D                     _uart1RxTail:
  1789                           	opt callstack 0
  1790  00002D                     	ds	1
  1791  00002E                     _uart1RxHead:
  1792                           	opt callstack 0
  1793  00002E                     	ds	1
  1794  00002F                     _uart1TxBufferRemaining:
  1795                           	opt callstack 0
  1796  00002F                     	ds	1
  1797  000030                     _uart1TxTail:
  1798                           	opt callstack 0
  1799  000030                     	ds	1
  1800  000031                     _uart1TxHead:
  1801                           	opt callstack 0
  1802  000031                     	ds	1
  1803                           
  1804                           	psect	bssBANK0
  1805  000060                     __pbssBANK0:
  1806                           	opt callstack 0
  1807  000060                     _S:
  1808                           	opt callstack 0
  1809  000060                     	ds	41
  1810  000089                     _tickCount:
  1811                           	opt callstack 0
  1812  000089                     	ds	24
  1813  0000A1                     _spi_link:
  1814                           	opt callstack 0
  1815  0000A1                     	ds	12
  1816  0000AD                     floorf@F524:
  1817                           	opt callstack 0
  1818  0000AD                     	ds	4
  1819  0000B1                     ___fpclassifyf@F463:
  1820                           	opt callstack 0
  1821  0000B1                     	ds	4
  1822  0000B5                     _utctime:
  1823                           	opt callstack 0
  1824  0000B5                     	ds	4
  1825  0000B9                     wdtdelay@dcount:
  1826                           	opt callstack 0
  1827  0000B9                     	ds	4
  1828  0000BD                     _P:
  1829                           	opt callstack 0
  1830  0000BD                     	ds	4
  1831  0000C1                     _TMR5_InterruptHandler:
  1832                           	opt callstack 0
  1833  0000C1                     	ds	3
  1834  0000C4                     _TMR6_InterruptHandler:
  1835                           	opt callstack 0
  1836  0000C4                     	ds	3
  1837                           
  1838                           	psect	dataBANK0
  1839  0000C7                     __pdataBANK0:
  1840                           	opt callstack 0
  1841  0000C7                     _R:
  1842                           	opt callstack 0
  1843  0000C7                     	ds	40
  1844  0000EF                     _H:
  1845                           	opt callstack 0
  1846  0000EF                     	ds	7
  1847                           
  1848                           	psect	bssBANK1
  1849  000100                     __pbssBANK1:
  1850                           	opt callstack 0
  1851  000100                     _C:
  1852                           	opt callstack 0
  1853  000100                     	ds	124
  1854  00017C                     _dbuf:
  1855                           	opt callstack 0
  1856  00017C                     	ds	80
  1857  0001CC                     _seed:
  1858                           	opt callstack 0
  1859  0001CC                     	ds	8
  1860                           
  1861                           	psect	dataBANK1
  1862  0001D4                     __pdataBANK1:
  1863                           	opt callstack 0
  1864  0001D4                     stoa@F1166:
  1865                           	opt callstack 0
  1866  0001D4                     	ds	7
  1867  0001DB                     _port_data:
  1868                           	opt callstack 0
  1869  0001DB                     	ds	16
  1870                           
  1871                           	psect	bssBANK2
  1872  0002BB                     __pbssBANK2:
  1873                           	opt callstack 0
  1874  0002BB                     _uart1TxBuffer:
  1875                           	opt callstack 0
  1876  0002BB                     	ds	64
  1877                           
  1878                           	psect	dataBANK2
  1879  000200                     __pdataBANK2:
  1880                           	opt callstack 0
  1881  000200                     _V:
  1882                           	opt callstack 0
  1883  000200                     	ds	187
  1884                           
  1885                           	psect	bssBANK3
  1886  000300                     __pbssBANK3:
  1887                           	opt callstack 0
  1888  000300                     lp_filter@smooth:
  1889                           	opt callstack 0
  1890  000300                     	ds	84
  1891  000354                     _uart2TxBuffer:
  1892                           	opt callstack 0
  1893  000354                     	ds	64
  1894  000394                     _ring_buf1:
  1895                           	opt callstack 0
  1896  000394                     	ds	67
  1897                           
  1898                           	psect	bssBANK4
  1899  000400                     __pbssBANK4:
  1900                           	opt callstack 0
  1901  000400                     _ring_buf2:
  1902                           	opt callstack 0
  1903  000400                     	ds	67
  1904                           
  1905                           	psect	bssBANK5
  1906  000500                     __pbssBANK5:
  1907                           	opt callstack 0
  1908  000500                     _D:
  1909                           	opt callstack 0
  1910  000500                     	ds	218
  1911                           
  1912                           	psect	bssBANK6
  1913  000600                     __pbssBANK6:
  1914                           	opt callstack 0
  1915  000600                     _uart1RxBuffer:
  1916                           	opt callstack 0
  1917  000600                     	ds	255
  1918                           
  1919                           	psect	bssBANK7
  1920  000700                     __pbssBANK7:
  1921                           	opt callstack 0
  1922  000700                     _uart2RxBuffer:
  1923                           	opt callstack 0
  1924  000700                     	ds	255
  1925                           
  1926                           	psect	cstackBANK1
  1927  0001EB                     __pcstackBANK1:
  1928                           	opt callstack 0
  1929  0001EB                     ??_TMR5_ISR:
  1930                           
  1931                           ; 1 bytes @ 0x0
  1932  0001EB                     	ds	4
  1933                           
  1934                           	psect	cstackBANK0
  1935  0000F6                     __pcstackBANK0:
  1936                           	opt callstack 0
  1937  0000F6                     ??_INT1_ISR:
  1938                           
  1939                           ; 1 bytes @ 0x0
  1940  0000F6                     	ds	4
  1941                           
  1942                           	psect	cstackCOMRAM
  1943  000052                     __pcstackCOMRAM:
  1944                           	opt callstack 0
  1945  000052                     ??_ADCC_ThresholdISR:
  1946  000052                     
  1947                           ; 1 bytes @ 0x0
  1948  000052                     	ds	5
  1949  000057                     ??_TMR6_ISR:
  1950                           
  1951                           ; 1 bytes @ 0x5
  1952  000057                     	ds	1
  1953  000058                     
  1954                           ; 1 bytes @ 0x6
  1955 ;;
  1956 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1957 ;;
  1958 ;; *************** function _main *****************
  1959 ;; Defined at:
  1960 ;;		line 166 in file "main.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  mode            1  [STACK] enum E17005
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1  [STACK] void 
  1967 ;; Registers used:
  1968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 1/1
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels required when called:   19
  1980 ;; This function calls:
  1981 ;;		_SYSTEM_Initialize
  1982 ;;		_StartTimer
  1983 ;;		_TimerDone
  1984 ;;		_WaitMs
  1985 ;;		_calc_model_data
  1986 ;;		_check_adc_scan
  1987 ;;		_check_help
  1988 ;;		_clear_adc_scan
  1989 ;;		_clear_hid_pflags
  1990 ;;		_convert_adc_data
  1991 ;;		_eaDogM_WriteCommand
  1992 ;;		_get_vterm_ptr
  1993 ;;		_hid_display
  1994 ;;		_init_display
  1995 ;;		_mode_lamp_dim
  1996 ;;		_set_display_info
  1997 ;;		_set_vterm
  1998 ;;		_sprintf
  1999 ;;		_srand
  2000 ;;		_start_adc_scan
  2001 ;;		_start_switch_handler
  2002 ;;		_update_lcd
  2003 ;; This function is called by:
  2004 ;;		Startup code after reset
  2005 ;; This function uses a reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text0
  2009  012D68                     __ptext0:
  2010                           	opt callstack 0
  2011  012D68                     _main:
  2012                           	opt callstack 0
  2013                           
  2014                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2015  012D68  52E6               	movf	postinc1,f,c
  2016                           
  2017                           ;main.c: 168:  UI_STATES mode;;main.c: 173:  SYSTEM_Initialize();
  2018                           
  2019                           ;incstack = 0
  2020  012D6A  EC52  F0C0         	call	_SYSTEM_Initialize	;wreg free
  2021                           
  2022                           ; BSR set to: 60
  2023                           ;main.c: 176:  (INTCON0bits.GIEH = 1);
  2024  012D6E  8ED2               	bsf	210,7,c	;volatile
  2025                           
  2026                           ; BSR set to: 60
  2027                           ;main.c: 179:  (INTCON0bits.GIEL = 1);
  2028  012D70  8CD2               	bsf	210,6,c	;volatile
  2029                           
  2030                           ; BSR set to: 60
  2031                           ;main.c: 181:  V.ui_state = UI_STATE_INIT;
  2032  012D72  0102               	movlb	2	; () banked
  2033  012D74  6B00               	clrf	_V& (0+255),b	;volatile
  2034                           
  2035                           ; BSR set to: 2
  2036                           ;main.c: 186:  WaitMs(300);
  2037  012D76  0E2C               	movlw	44
  2038  012D78  6EE6               	movwf	postinc1,c
  2039  012D7A  0E01               	movlw	1
  2040  012D7C  6EE6               	movwf	postinc1,c
  2041  012D7E  EC77  F0C1         	call	_WaitMs	;wreg free
  2042                           
  2043                           ;main.c: 187:  if (PORTBbits.RB0) {
  2044  012D82  A0CB               	btfss	203,0,c	;volatile
  2045  012D84  D004               	goto	l10509
  2046                           
  2047                           ;main.c: 188:   mode = UI_STATE_HOST;
  2048                           ;stkvar	_mode @ sp[(-1)+0]
  2049  012D86  0EFF               	movlw	-1
  2050  012D88  6AE3               	clrf	plusw1,c
  2051  012D8A  2AE3               	incf	plusw1,f,c
  2052                           
  2053                           ;main.c: 189:  } else {
  2054  012D8C  D004               	goto	l10511
  2055  012D8E                     l10509:
  2056                           
  2057                           ;main.c: 190:   mode = UI_STATE_LOG;
  2058                           ;stkvar	_mode @ sp[(-1)+0]
  2059  012D8E  0EFF               	movlw	-1
  2060  012D90  6AE3               	clrf	plusw1,c
  2061  012D92  80E3               	bsf	plusw1,0,c
  2062  012D94  82E3               	bsf	plusw1,1,c	;indir
  2063  012D96                     l10511:
  2064                           
  2065                           ;main.c: 193:  if (mode == UI_STATE_HOST) {
  2066                           ;stkvar	_mode @ sp[(-1)+0]
  2067  012D96  0EFF               	movlw	-1
  2068  012D98  04E3               	decf	plusw1,w,c
  2069  012D9A  A4D8               	btfss	status,2,c
  2070  012D9C  D007               	goto	l1250
  2071                           
  2072                           ;main.c: 194:   do { LATDbits.LATD0 = 1; } while(0);
  2073  012D9E  80BD               	bsf	189,0,c	;volatile
  2074                           
  2075                           ;main.c: 195:   V.mode_pwm = 70;
  2076  012DA0  0E00               	movlw	0
  2077  012DA2  0102               	movlb	2	; () banked
  2078  012DA4  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2079  012DA6  0E46               	movlw	70
  2080  012DA8  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2081                           
  2082                           ;main.c: 196:  } else {
  2083  012DAA  D004               	goto	l10515
  2084  012DAC                     l1250:
  2085  012DAC  90BD               	bcf	189,0,c	;volatile
  2086                           
  2087                           ;main.c: 198:   V.mode_pwm = 0;
  2088  012DAE  0102               	movlb	2	; () banked
  2089  012DB0  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2090  012DB2  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2091  012DB4                     l10515:
  2092                           
  2093                           ; BSR set to: 2
  2094                           ;main.c: 200:  mode_lamp_dim(V.mode_pwm);
  2095  012DB4  0060  FA57  FFE6   	movff	_V+149,postinc1
  2096  012DBA  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2097  012DC0  EC27  F0C5         	call	_mode_lamp_dim	;wreg free
  2098  012DC4  D0D0               	goto	l10559
  2099  012DC6                     l10517:
  2100                           
  2101                           ; BSR set to: 2
  2102                           ;main.c: 211:    init_display();
  2103  012DC6  EC87  F0B7         	call	_init_display	;wreg free
  2104                           
  2105                           ; BSR set to: 61
  2106                           ;main.c: 212:    eaDogM_WriteCommand(0b00001100);
  2107  012DCA  0E0C               	movlw	12
  2108  012DCC  6EE6               	movwf	postinc1,c
  2109  012DCE  EC87  F0C5         	call	_eaDogM_WriteCommand	;wreg free
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;main.c: 214:    V.ui_state = mode;
  2113                           ;stkvar	_mode @ sp[(-1)+0]
  2114  012DD2  0EFF               	movlw	-1
  2115  012DD4  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;main.c: 215:    srand(1957);
  2119  012DDA  0EA5               	movlw	165
  2120  012DDC  6EE6               	movwf	postinc1,c
  2121  012DDE  0E07               	movlw	7
  2122  012DE0  6EE6               	movwf	postinc1,c
  2123  012DE2  ECAD  F0C1         	call	_srand	;wreg free
  2124                           
  2125                           ; BSR set to: 1
  2126                           ;main.c: 216:    set_vterm(0);
  2127  012DE6  0E00               	movlw	0
  2128  012DE8  6EE6               	movwf	postinc1,c
  2129  012DEA  ECFE  F0C4         	call	_set_vterm	;wreg free
  2130                           
  2131                           ; BSR set to: 5
  2132                           ;main.c: 217:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2133  012DEE  0E81               	movlw	low STR_1
  2134  012DF0  6EE6               	movwf	postinc1,c
  2135  012DF2  0EFF               	movlw	high STR_1
  2136  012DF4  6EE6               	movwf	postinc1,c
  2137  012DF6  0E00               	movlw	0
  2138  012DF8  6EE6               	movwf	postinc1,c
  2139  012DFA  0E00               	movlw	0
  2140  012DFC  6EE6               	movwf	postinc1,c
  2141  012DFE  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2142  012E02  0060  F0CB  FFE6   	movff	btemp,postinc1
  2143  012E08  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2144  012E0E  0E04               	movlw	4
  2145  012E10  6EE6               	movwf	postinc1,c
  2146  012E12  EC88  F0B6         	call	_sprintf	;wreg free
  2147                           
  2148                           ;main.c: 218:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.993");
  2149  012E16  0EE0               	movlw	low STR_3
  2150  012E18  6EE6               	movwf	postinc1,c
  2151  012E1A  0EFF               	movlw	high STR_3
  2152  012E1C  6EE6               	movwf	postinc1,c
  2153  012E1E  0EB2               	movlw	low STR_2
  2154  012E20  6EE6               	movwf	postinc1,c
  2155  012E22  0EFF               	movlw	high STR_2
  2156  012E24  6EE6               	movwf	postinc1,c
  2157  012E26  0E00               	movlw	0
  2158  012E28  6EE6               	movwf	postinc1,c
  2159  012E2A  0E01               	movlw	1
  2160  012E2C  6EE6               	movwf	postinc1,c
  2161  012E2E  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2162  012E32  0060  F0CB  FFE6   	movff	btemp,postinc1
  2163  012E38  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2164  012E3E  0E06               	movlw	6
  2165  012E40  6EE6               	movwf	postinc1,c
  2166  012E42  EC88  F0B6         	call	_sprintf	;wreg free
  2167                           
  2168                           ;main.c: 219:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2169  012E46  0E70               	movlw	low STR_4
  2170  012E48  6EE6               	movwf	postinc1,c
  2171  012E4A  0EFF               	movlw	high STR_4
  2172  012E4C  6EE6               	movwf	postinc1,c
  2173  012E4E  0E00               	movlw	0
  2174  012E50  6EE6               	movwf	postinc1,c
  2175  012E52  0E02               	movlw	2
  2176  012E54  6EE6               	movwf	postinc1,c
  2177  012E56  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2178  012E5A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2179  012E60  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2180  012E66  0E04               	movlw	4
  2181  012E68  6EE6               	movwf	postinc1,c
  2182  012E6A  EC88  F0B6         	call	_sprintf	;wreg free
  2183                           
  2184                           ;main.c: 220:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2185  012E6E  0E92               	movlw	low STR_5
  2186  012E70  6EE6               	movwf	postinc1,c
  2187  012E72  0EFF               	movlw	high STR_5
  2188  012E74  6EE6               	movwf	postinc1,c
  2189  012E76  0E02               	movlw	2
  2190  012E78  6EE6               	movwf	postinc1,c
  2191  012E7A  0E00               	movlw	0
  2192  012E7C  6EE6               	movwf	postinc1,c
  2193  012E7E  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2194  012E82  0060  F0CB  FFE6   	movff	btemp,postinc1
  2195  012E88  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2196  012E8E  0E04               	movlw	4
  2197  012E90  6EE6               	movwf	postinc1,c
  2198  012E92  EC88  F0B6         	call	_sprintf	;wreg free
  2199                           
  2200                           ;main.c: 221:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.993");
  2201  012E96  0EE0               	movlw	low STR_3
  2202  012E98  6EE6               	movwf	postinc1,c
  2203  012E9A  0EFF               	movlw	high STR_3
  2204  012E9C  6EE6               	movwf	postinc1,c
  2205  012E9E  0EB2               	movlw	low STR_2
  2206  012EA0  6EE6               	movwf	postinc1,c
  2207  012EA2  0EFF               	movlw	high STR_2
  2208  012EA4  6EE6               	movwf	postinc1,c
  2209  012EA6  0E02               	movlw	2
  2210  012EA8  6EE6               	movwf	postinc1,c
  2211  012EAA  0E01               	movlw	1
  2212  012EAC  6EE6               	movwf	postinc1,c
  2213  012EAE  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2214  012EB2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2215  012EB8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2216  012EBE  0E06               	movlw	6
  2217  012EC0  6EE6               	movwf	postinc1,c
  2218  012EC2  EC88  F0B6         	call	_sprintf	;wreg free
  2219                           
  2220                           ;main.c: 222:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2221  012EC6  0E5F               	movlw	low STR_8
  2222  012EC8  6EE6               	movwf	postinc1,c
  2223  012ECA  0EFF               	movlw	high STR_8
  2224  012ECC  6EE6               	movwf	postinc1,c
  2225  012ECE  0E02               	movlw	2
  2226  012ED0  6EE6               	movwf	postinc1,c
  2227  012ED2  0E02               	movlw	2
  2228  012ED4  6EE6               	movwf	postinc1,c
  2229  012ED6  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2230  012EDA  0060  F0CB  FFE6   	movff	btemp,postinc1
  2231  012EE0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2232  012EE6  0E04               	movlw	4
  2233  012EE8  6EE6               	movwf	postinc1,c
  2234  012EEA  EC88  F0B6         	call	_sprintf	;wreg free
  2235                           
  2236                           ;main.c: 223:    update_lcd(0);
  2237  012EEE  0E00               	movlw	0
  2238  012EF0  6EE6               	movwf	postinc1,c
  2239  012EF2  EC01  F0B6         	call	_update_lcd	;wreg free
  2240                           
  2241                           ;main.c: 224:    WaitMs(3000);
  2242  012EF6  0EB8               	movlw	184
  2243  012EF8  6EE6               	movwf	postinc1,c
  2244  012EFA  0E0B               	movlw	11
  2245  012EFC  6EE6               	movwf	postinc1,c
  2246  012EFE  EC77  F0C1         	call	_WaitMs	;wreg free
  2247                           
  2248                           ;main.c: 225:    StartTimer(TMR_DISPLAY, 250);
  2249  012F02  0EFA               	movlw	250
  2250  012F04  6EE6               	movwf	postinc1,c
  2251  012F06  0E00               	movlw	0
  2252  012F08  6EE6               	movwf	postinc1,c
  2253  012F0A  0E0A               	movlw	10
  2254  012F0C  6EE6               	movwf	postinc1,c
  2255  012F0E  EC3D  F0C1         	call	_StartTimer	;wreg free
  2256                           
  2257                           ;main.c: 226:    StartTimer(TMR_ADC, 200);
  2258  012F12  0EC8               	movlw	200
  2259  012F14  6EE6               	movwf	postinc1,c
  2260  012F16  0E00               	movlw	0
  2261  012F18  6EE6               	movwf	postinc1,c
  2262  012F1A  0E01               	movlw	1
  2263  012F1C  6EE6               	movwf	postinc1,c
  2264  012F1E  EC3D  F0C1         	call	_StartTimer	;wreg free
  2265                           
  2266                           ;main.c: 227:    StartTimer(TMR_INFO, 3000);
  2267  012F22  0EB8               	movlw	184
  2268  012F24  6EE6               	movwf	postinc1,c
  2269  012F26  0E0B               	movlw	11
  2270  012F28  6EE6               	movwf	postinc1,c
  2271  012F2A  0E07               	movlw	7
  2272  012F2C  6EE6               	movwf	postinc1,c
  2273  012F2E  EC3D  F0C1         	call	_StartTimer	;wreg free
  2274                           
  2275                           ;main.c: 228:    StartTimer(TMR_FLIPPER, 1500);
  2276  012F32  0EDC               	movlw	220
  2277  012F34  6EE6               	movwf	postinc1,c
  2278  012F36  0E05               	movlw	5
  2279  012F38  6EE6               	movwf	postinc1,c
  2280  012F3A  0E0B               	movlw	11
  2281  012F3C  6EE6               	movwf	postinc1,c
  2282  012F3E  EC3D  F0C1         	call	_StartTimer	;wreg free
  2283                           
  2284                           ;main.c: 229:    StartTimer(TMR_HELPDIS, 3000);
  2285  012F42  0EB8               	movlw	184
  2286  012F44  6EE6               	movwf	postinc1,c
  2287  012F46  0E0B               	movlw	11
  2288  012F48  6EE6               	movwf	postinc1,c
  2289  012F4A  0E09               	movlw	9
  2290  012F4C  6EE6               	movwf	postinc1,c
  2291  012F4E  EC3D  F0C1         	call	_StartTimer	;wreg free
  2292                           
  2293                           ;main.c: 231:    start_adc_scan();
  2294  012F52  EC19  F0BE         	call	_start_adc_scan	;wreg free
  2295                           
  2296                           ;main.c: 232:    start_switch_handler();
  2297  012F56  EC95  F0C4         	call	_start_switch_handler	;wreg free
  2298                           
  2299                           ;main.c: 234:    break;
  2300  012F5A  D01C               	goto	l10561
  2301  012F5C                     l1258:
  2302                           
  2303                           ; BSR set to: 2
  2304                           ;main.c: 240:    P.SYSTEM_STABLE = 1;
  2305  012F5C  0100               	movlb	0	; () banked
  2306  012F5E  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2307                           
  2308                           ;main.c: 241:    break;
  2309  012F60  D019               	goto	l10561
  2310  012F62                     l1260:
  2311                           
  2312                           ; BSR set to: 2
  2313                           ;main.c: 244:    V.ui_state = UI_STATE_INIT;
  2314  012F62  6B00               	clrf	_V& (0+255),b	;volatile
  2315                           
  2316                           ;main.c: 245:    break;
  2317  012F64  D017               	goto	l10561
  2318  012F66                     l10559:
  2319  012F66  0102               	movlb	2	; () banked
  2320  012F68  5100               	movf	_V& (0+255),w,b	;volatile
  2321  012F6A  6E3C               	movwf	(btemp+10)^0,c
  2322  012F6C  6A3D               	clrf	(btemp+11)^0,c
  2323                           
  2324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2325                           ; Switch size 1, requested type "simple"
  2326                           ; Number of cases is 1, Range of values is 0 to 0
  2327                           ; switch strategies available:
  2328                           ; Name         Instructions Cycles
  2329                           ; simple_byte            4     3 (average)
  2330                           ;	Chosen strategy is simple_byte
  2331  012F6E  503D               	movf	(btemp+11)^0,w,c
  2332  012F70  0A00               	xorlw	0	; case 0
  2333  012F72  A4D8               	btfss	status,2,c
  2334  012F74  D7F6               	goto	l1260
  2335                           
  2336                           ; BSR set to: 2
  2337                           ; Switch size 1, requested type "simple"
  2338                           ; Number of cases is 5, Range of values is 0 to 5
  2339                           ; switch strategies available:
  2340                           ; Name         Instructions Cycles
  2341                           ; simple_byte           16     9 (average)
  2342                           ;	Chosen strategy is simple_byte
  2343  012F76  503C               	movf	(btemp+10)^0,w,c
  2344  012F78  0A00               	xorlw	0	; case 0
  2345  012F7A  B4D8               	btfsc	status,2,c
  2346  012F7C  D724               	goto	l10517
  2347  012F7E  0A01               	xorlw	1	; case 1
  2348  012F80  B4D8               	btfsc	status,2,c
  2349  012F82  D008               	goto	l10561
  2350  012F84  0A02               	xorlw	2	; case 3
  2351  012F86  B4D8               	btfsc	status,2,c
  2352  012F88  D005               	goto	l10561
  2353  012F8A  0A07               	xorlw	7	; case 4
  2354  012F8C  B4D8               	btfsc	status,2,c
  2355  012F8E  D7E6               	goto	l1258
  2356  012F90  0A01               	xorlw	1	; case 5
  2357  012F92  D7E7               	goto	l1260
  2358  012F94                     l10561:
  2359                           
  2360                           ;main.c: 248:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2361  012F94  0E01               	movlw	1
  2362  012F96  6EE6               	movwf	postinc1,c
  2363  012F98  EC3D  F0C4         	call	_TimerDone	;wreg free
  2364  012F9C  5032               	movf	btemp^0,w,c
  2365  012F9E  B4D8               	btfsc	status,2,c
  2366  012FA0  D013               	goto	l10573
  2367  012FA2  ECC7  F0C5         	call	_check_adc_scan	;wreg free
  2368  012FA6  5032               	movf	btemp^0,w,c
  2369  012FA8  B4D8               	btfsc	status,2,c
  2370  012FAA  D00E               	goto	l10573
  2371                           
  2372                           ;main.c: 252:    convert_adc_data();
  2373  012FAC  EC0A  F0BD         	call	_convert_adc_data	;wreg free
  2374                           
  2375                           ;main.c: 256:    clear_adc_scan();
  2376  012FB0  ECCF  F0C5         	call	_clear_adc_scan	;wreg free
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;main.c: 257:    start_adc_scan();
  2380  012FB4  EC19  F0BE         	call	_start_adc_scan	;wreg free
  2381                           
  2382                           ;main.c: 258:    StartTimer(TMR_ADC, 200);
  2383  012FB8  0EC8               	movlw	200
  2384  012FBA  6EE6               	movwf	postinc1,c
  2385  012FBC  0E00               	movlw	0
  2386  012FBE  6EE6               	movwf	postinc1,c
  2387  012FC0  0E01               	movlw	1
  2388  012FC2  6EE6               	movwf	postinc1,c
  2389  012FC4  EC3D  F0C1         	call	_StartTimer	;wreg free
  2390  012FC8                     l10573:
  2391                           
  2392                           ;main.c: 265:   if (TimerDone(TMR_DISPLAY)) {
  2393                           
  2394                           ;main.c: 261:   if (V.ticks) {
  2395  012FC8  0E0A               	movlw	10
  2396  012FCA  6EE6               	movwf	postinc1,c
  2397  012FCC  EC3D  F0C4         	call	_TimerDone	;wreg free
  2398  012FD0  5032               	movf	btemp^0,w,c
  2399  012FD2  B4D8               	btfsc	status,2,c
  2400  012FD4  D1A3               	goto	l10603
  2401                           
  2402                           ;main.c: 266:    if (TimerDone(TMR_HELPDIS)) {
  2403  012FD6  0E09               	movlw	9
  2404  012FD8  6EE6               	movwf	postinc1,c
  2405  012FDA  EC3D  F0C4         	call	_TimerDone	;wreg free
  2406  012FDE  5032               	movf	btemp^0,w,c
  2407  012FE0  B4D8               	btfsc	status,2,c
  2408  012FE2  D004               	goto	l10581
  2409                           
  2410                           ;main.c: 267:     set_display_info(DIS_STR);
  2411  012FE4  0E00               	movlw	0
  2412  012FE6  6EE6               	movwf	postinc1,c
  2413  012FE8  ECC3  F0C4         	call	_set_display_info	;wreg free
  2414  012FEC                     l10581:
  2415                           
  2416                           ;main.c: 269:    calc_model_data();
  2417  012FEC  EC0D  F0A6         	call	_calc_model_data	;wreg free
  2418                           
  2419                           ; BSR set to: 1
  2420                           ;main.c: 275:    hid_display(&H);
  2421  012FF0  0EEF               	movlw	_H& (0+255)
  2422  012FF2  6EE6               	movwf	postinc1,c
  2423  012FF4  ECFC  F0B7         	call	_hid_display	;wreg free
  2424                           
  2425                           ;main.c: 276:    switch (H.hid_display) {
  2426  012FF8  D16C               	goto	l10595
  2427  012FFA                     l10585:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;main.c: 278:     sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2431  012FFA  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2432  013000  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2433  013006  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2434  01300C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2435  013012  0EDA               	movlw	low STR_9
  2436  013014  6EE6               	movwf	postinc1,c
  2437  013016  0EFE               	movlw	high STR_9
  2438  013018  6EE6               	movwf	postinc1,c
  2439  01301A  0E00               	movlw	0
  2440  01301C  6EE6               	movwf	postinc1,c
  2441  01301E  0E00               	movlw	0
  2442  013020  6EE6               	movwf	postinc1,c
  2443  013022  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2444  013026  0060  F0CB  FFE6   	movff	btemp,postinc1
  2445  01302C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2446  013032  0E08               	movlw	8
  2447  013034  6EE6               	movwf	postinc1,c
  2448  013036  EC88  F0B6         	call	_sprintf	;wreg free
  2449                           
  2450                           ;main.c: 279:     sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2451  01303A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2452  013040  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2453  013046  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2454  01304C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2455  013052  0E00               	movlw	low STR_10
  2456  013054  6EE6               	movwf	postinc1,c
  2457  013056  0EFF               	movlw	high STR_10
  2458  013058  6EE6               	movwf	postinc1,c
  2459  01305A  0E00               	movlw	0
  2460  01305C  6EE6               	movwf	postinc1,c
  2461  01305E  0E01               	movlw	1
  2462  013060  6EE6               	movwf	postinc1,c
  2463  013062  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2464  013066  0060  F0CB  FFE6   	movff	btemp,postinc1
  2465  01306C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2466  013072  0E08               	movlw	8
  2467  013074  6EE6               	movwf	postinc1,c
  2468  013076  EC88  F0B6         	call	_sprintf	;wreg free
  2469                           
  2470                           ;main.c: 280:     sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2471  01307A  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2472  013080  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2473  013086  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2474  01308C  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2475  013092  0EED               	movlw	low STR_11
  2476  013094  6EE6               	movwf	postinc1,c
  2477  013096  0EFE               	movlw	high STR_11
  2478  013098  6EE6               	movwf	postinc1,c
  2479  01309A  0E00               	movlw	0
  2480  01309C  6EE6               	movwf	postinc1,c
  2481  01309E  0E02               	movlw	2
  2482  0130A0  6EE6               	movwf	postinc1,c
  2483  0130A2  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2484  0130A6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2485  0130AC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2486  0130B2  0E08               	movlw	8
  2487  0130B4  6EE6               	movwf	postinc1,c
  2488  0130B6  EC88  F0B6         	call	_sprintf	;wreg free
  2489                           
  2490                           ;main.c: 281:     break;
  2491  0130BA  D120               	goto	l10597
  2492  0130BC                     l10587:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;main.c: 283:     sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.cal
      +                          c[C_PV]);
  2496  0130BC  0060  F413  FFE6   	movff	_C+4,postinc1
  2497  0130C2  0060  F417  FFE6   	movff	_C+5,postinc1
  2498  0130C8  0060  F41B  FFE6   	movff	_C+6,postinc1
  2499  0130CE  0060  F41F  FFE6   	movff	_C+7,postinc1
  2500  0130D4  0060  F453  FFE6   	movff	_C+20,postinc1
  2501  0130DA  0060  F457  FFE6   	movff	_C+21,postinc1
  2502  0130E0  0060  F45B  FFE6   	movff	_C+22,postinc1
  2503  0130E6  0060  F45F  FFE6   	movff	_C+23,postinc1
  2504  0130EC  0E4C               	movlw	low STR_12
  2505  0130EE  6EE6               	movwf	postinc1,c
  2506  0130F0  0EFF               	movlw	high STR_12
  2507  0130F2  6EE6               	movwf	postinc1,c
  2508  0130F4  0E00               	movlw	0
  2509  0130F6  6EE6               	movwf	postinc1,c
  2510  0130F8  0E00               	movlw	0
  2511  0130FA  6EE6               	movwf	postinc1,c
  2512  0130FC  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2513  013100  0060  F0CB  FFE6   	movff	btemp,postinc1
  2514  013106  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2515  01310C  0E0C               	movlw	12
  2516  01310E  6EE6               	movwf	postinc1,c
  2517  013110  EC88  F0B6         	call	_sprintf	;wreg free
  2518                           
  2519                           ;main.c: 284:     sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.ca
      +                          lc[C_BATT]);
  2520  013114  0060  F403  FFE6   	movff	_C,postinc1
  2521  01311A  0060  F407  FFE6   	movff	_C+1,postinc1
  2522  013120  0060  F40B  FFE6   	movff	_C+2,postinc1
  2523  013126  0060  F40F  FFE6   	movff	_C+3,postinc1
  2524  01312C  0060  F443  FFE6   	movff	_C+16,postinc1
  2525  013132  0060  F447  FFE6   	movff	_C+17,postinc1
  2526  013138  0060  F44B  FFE6   	movff	_C+18,postinc1
  2527  01313E  0060  F44F  FFE6   	movff	_C+19,postinc1
  2528  013144  0E26               	movlw	low STR_13
  2529  013146  6EE6               	movwf	postinc1,c
  2530  013148  0EFF               	movlw	high STR_13
  2531  01314A  6EE6               	movwf	postinc1,c
  2532  01314C  0E00               	movlw	0
  2533  01314E  6EE6               	movwf	postinc1,c
  2534  013150  0E01               	movlw	1
  2535  013152  6EE6               	movwf	postinc1,c
  2536  013154  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2537  013158  0060  F0CB  FFE6   	movff	btemp,postinc1
  2538  01315E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2539  013164  0E0C               	movlw	12
  2540  013166  6EE6               	movwf	postinc1,c
  2541  013168  EC88  F0B6         	call	_sprintf	;wreg free
  2542                           
  2543                           ;main.c: 285:     sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_l
      +                          oad);
  2544  01316C  0060  F503  FFE6   	movff	_C+64,postinc1
  2545  013172  0060  F507  FFE6   	movff	_C+65,postinc1
  2546  013178  0060  F50B  FFE6   	movff	_C+66,postinc1
  2547  01317E  0060  F50F  FFE6   	movff	_C+67,postinc1
  2548  013184  0060  F423  FFE6   	movff	_C+8,postinc1
  2549  01318A  0060  F427  FFE6   	movff	_C+9,postinc1
  2550  013190  0060  F42B  FFE6   	movff	_C+10,postinc1
  2551  013196  0060  F42F  FFE6   	movff	_C+11,postinc1
  2552  01319C  0E39               	movlw	low STR_14
  2553  01319E  6EE6               	movwf	postinc1,c
  2554  0131A0  0EFF               	movlw	high STR_14
  2555  0131A2  6EE6               	movwf	postinc1,c
  2556  0131A4  0E00               	movlw	0
  2557  0131A6  6EE6               	movwf	postinc1,c
  2558  0131A8  0E02               	movlw	2
  2559  0131AA  6EE6               	movwf	postinc1,c
  2560  0131AC  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2561  0131B0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2562  0131B6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2563  0131BC  0E0C               	movlw	12
  2564  0131BE  6EE6               	movwf	postinc1,c
  2565  0131C0  EC88  F0B6         	call	_sprintf	;wreg free
  2566                           
  2567                           ;main.c: 286:     break;
  2568  0131C4  D09B               	goto	l10597
  2569  0131C6                     l10589:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;main.c: 288:     sprintf(get_vterm_ptr(0, 0), "BAT   PWR %3.2f   ", C.p_bat);
  2573  0131C6  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2574  0131CC  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2575  0131D2  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2576  0131D8  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2577  0131DE  0E13               	movlw	low STR_15
  2578  0131E0  6EE6               	movwf	postinc1,c
  2579  0131E2  0EFF               	movlw	high STR_15
  2580  0131E4  6EE6               	movwf	postinc1,c
  2581  0131E6  0E00               	movlw	0
  2582  0131E8  6EE6               	movwf	postinc1,c
  2583  0131EA  0E00               	movlw	0
  2584  0131EC  6EE6               	movwf	postinc1,c
  2585  0131EE  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2586  0131F2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2587  0131F8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2588  0131FE  0E08               	movlw	8
  2589  013200  6EE6               	movwf	postinc1,c
  2590  013202  EC88  F0B6         	call	_sprintf	;wreg free
  2591                           
  2592                           ;main.c: 289:     sprintf(get_vterm_ptr(1, 0), "RUN               ");
  2593  013206  0EB4               	movlw	low STR_16
  2594  013208  6EE6               	movwf	postinc1,c
  2595  01320A  0EFE               	movlw	high STR_16
  2596  01320C  6EE6               	movwf	postinc1,c
  2597  01320E  0E00               	movlw	0
  2598  013210  6EE6               	movwf	postinc1,c
  2599  013212  0E01               	movlw	1
  2600  013214  6EE6               	movwf	postinc1,c
  2601  013216  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2602  01321A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2603  013220  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2604  013226  0E04               	movlw	4
  2605  013228  6EE6               	movwf	postinc1,c
  2606  01322A  EC88  F0B6         	call	_sprintf	;wreg free
  2607                           
  2608                           ;main.c: 290:     sprintf(get_vterm_ptr(2, 0), "RUN               ");
  2609  01322E  0EB4               	movlw	low STR_16
  2610  013230  6EE6               	movwf	postinc1,c
  2611  013232  0EFE               	movlw	high STR_16
  2612  013234  6EE6               	movwf	postinc1,c
  2613  013236  0E00               	movlw	0
  2614  013238  6EE6               	movwf	postinc1,c
  2615  01323A  0E02               	movlw	2
  2616  01323C  6EE6               	movwf	postinc1,c
  2617  01323E  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2618  013242  0060  F0CB  FFE6   	movff	btemp,postinc1
  2619  013248  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2620  01324E  0E04               	movlw	4
  2621  013250  6EE6               	movwf	postinc1,c
  2622  013252  EC88  F0B6         	call	_sprintf	;wreg free
  2623                           
  2624                           ;main.c: 291:     break;
  2625  013256  D052               	goto	l10597
  2626  013258                     l10591:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;main.c: 293:     sprintf(get_vterm_ptr(0, 0), "AUX               ");
  2630  013258  0EC7               	movlw	low STR_18
  2631  01325A  6EE6               	movwf	postinc1,c
  2632  01325C  0EFE               	movlw	high STR_18
  2633  01325E  6EE6               	movwf	postinc1,c
  2634  013260  0E00               	movlw	0
  2635  013262  6EE6               	movwf	postinc1,c
  2636  013264  0E00               	movlw	0
  2637  013266  6EE6               	movwf	postinc1,c
  2638  013268  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2639  01326C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2640  013272  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2641  013278  0E04               	movlw	4
  2642  01327A  6EE6               	movwf	postinc1,c
  2643  01327C  EC88  F0B6         	call	_sprintf	;wreg free
  2644                           
  2645                           ;main.c: 294:     sprintf(get_vterm_ptr(1, 0), "AUX               ");
  2646  013280  0EC7               	movlw	low STR_18
  2647  013282  6EE6               	movwf	postinc1,c
  2648  013284  0EFE               	movlw	high STR_18
  2649  013286  6EE6               	movwf	postinc1,c
  2650  013288  0E00               	movlw	0
  2651  01328A  6EE6               	movwf	postinc1,c
  2652  01328C  0E01               	movlw	1
  2653  01328E  6EE6               	movwf	postinc1,c
  2654  013290  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2655  013294  0060  F0CB  FFE6   	movff	btemp,postinc1
  2656  01329A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2657  0132A0  0E04               	movlw	4
  2658  0132A2  6EE6               	movwf	postinc1,c
  2659  0132A4  EC88  F0B6         	call	_sprintf	;wreg free
  2660                           
  2661                           ;main.c: 295:     sprintf(get_vterm_ptr(2, 0), "AUX               ");
  2662  0132A8  0EC7               	movlw	low STR_18
  2663  0132AA  6EE6               	movwf	postinc1,c
  2664  0132AC  0EFE               	movlw	high STR_18
  2665  0132AE  6EE6               	movwf	postinc1,c
  2666  0132B0  0E00               	movlw	0
  2667  0132B2  6EE6               	movwf	postinc1,c
  2668  0132B4  0E02               	movlw	2
  2669  0132B6  6EE6               	movwf	postinc1,c
  2670  0132B8  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  2671  0132BC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2672  0132C2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2673  0132C8  0E04               	movlw	4
  2674  0132CA  6EE6               	movwf	postinc1,c
  2675  0132CC  EC88  F0B6         	call	_sprintf	;wreg free
  2676                           
  2677                           ;main.c: 296:     break;
  2678  0132D0  D015               	goto	l10597
  2679  0132D2                     l10595:
  2680  0132D2  0100               	movlb	0	; () banked
  2681  0132D4  51EF               	movf	_H& (0+255),w,b
  2682  0132D6  6E3C               	movwf	(btemp+10)^0,c
  2683  0132D8  6A3D               	clrf	(btemp+11)^0,c
  2684                           
  2685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2686                           ; Switch size 1, requested type "simple"
  2687                           ; Number of cases is 1, Range of values is 0 to 0
  2688                           ; switch strategies available:
  2689                           ; Name         Instructions Cycles
  2690                           ; simple_byte            4     3 (average)
  2691                           ;	Chosen strategy is simple_byte
  2692  0132DA  503D               	movf	(btemp+11)^0,w,c
  2693  0132DC  0A00               	xorlw	0	; case 0
  2694  0132DE  A4D8               	btfss	status,2,c
  2695  0132E0  D00D               	goto	l10597
  2696                           
  2697                           ; BSR set to: 0
  2698                           ; Switch size 1, requested type "simple"
  2699                           ; Number of cases is 4, Range of values is 0 to 3
  2700                           ; switch strategies available:
  2701                           ; Name         Instructions Cycles
  2702                           ; simple_byte           13     7 (average)
  2703                           ;	Chosen strategy is simple_byte
  2704  0132E2  503C               	movf	(btemp+10)^0,w,c
  2705  0132E4  0A00               	xorlw	0	; case 0
  2706  0132E6  B4D8               	btfsc	status,2,c
  2707  0132E8  D6E9               	goto	l10587
  2708  0132EA  0A01               	xorlw	1	; case 1
  2709  0132EC  B4D8               	btfsc	status,2,c
  2710  0132EE  D685               	goto	l10585
  2711  0132F0  0A03               	xorlw	3	; case 2
  2712  0132F2  B4D8               	btfsc	status,2,c
  2713  0132F4  D768               	goto	l10589
  2714  0132F6  0A01               	xorlw	1	; case 3
  2715  0132F8  B4D8               	btfsc	status,2,c
  2716  0132FA  D7AE               	goto	l10591
  2717  0132FC                     l10597:
  2718                           
  2719                           ;main.c: 300:    clear_hid_pflags(&H);
  2720  0132FC  0EEF               	movlw	_H& (0+255)
  2721  0132FE  6EE6               	movwf	postinc1,c
  2722  013300  EC2B  F0C4         	call	_clear_hid_pflags	;wreg free
  2723                           
  2724                           ;main.c: 302:    StartTimer(TMR_DISPLAY, 250);
  2725  013304  0EFA               	movlw	250
  2726  013306  6EE6               	movwf	postinc1,c
  2727  013308  0E00               	movlw	0
  2728  01330A  6EE6               	movwf	postinc1,c
  2729  01330C  0E0A               	movlw	10
  2730  01330E  6EE6               	movwf	postinc1,c
  2731  013310  EC3D  F0C1         	call	_StartTimer	;wreg free
  2732                           
  2733                           ;main.c: 303:    update_lcd(0);
  2734  013314  0E00               	movlw	0
  2735  013316  6EE6               	movwf	postinc1,c
  2736  013318  EC01  F0B6         	call	_update_lcd	;wreg free
  2737  01331C                     l10603:
  2738                           
  2739                           ;main.c: 309:   if (check_help(V.flipper)) {
  2740  01331C  0102               	movlb	2	; () banked
  2741  01331E  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2742  013320  6EE6               	movwf	postinc1,c
  2743  013322  EC68  F0AC         	call	_check_help	;wreg free
  2744                           
  2745                           ;main.c: 345:   if (V.set_sequ) {
  2746                           
  2747                           ;main.c: 340:   };
  2748  013326  0102               	movlb	2	; () banked
  2749  013328  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2750  01332A  D61D               	goto	l10559
  2751                           
  2752                           ; BSR set to: 2
  2753                           ;main.c: 346:    if (TimerDone(TMR_INFO)) {
  2754  01332C  0E07               	movlw	7
  2755  01332E  6EE6               	movwf	postinc1,c
  2756  013330  EC3D  F0C4         	call	_TimerDone	;wreg free
  2757  013334  5032               	movf	btemp^0,w,c
  2758  013336  B4D8               	btfsc	status,2,c
  2759  013338  D00B               	goto	l10613
  2760                           
  2761                           ;main.c: 347:     V.set_sequ = 0;
  2762  01333A  0102               	movlb	2	; () banked
  2763  01333C  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2764                           
  2765                           ; BSR set to: 2
  2766                           ;main.c: 348:     set_vterm(0);
  2767  01333E  0E00               	movlw	0
  2768  013340  6EE6               	movwf	postinc1,c
  2769  013342  ECFE  F0C4         	call	_set_vterm	;wreg free
  2770                           
  2771                           ; BSR set to: 5
  2772                           ;main.c: 349:     update_lcd(0);
  2773  013346  0E00               	movlw	0
  2774  013348  6EE6               	movwf	postinc1,c
  2775  01334A  EC01  F0B6         	call	_update_lcd	;wreg free
  2776                           
  2777                           ;main.c: 350:    } else {
  2778  01334E  D60B               	goto	l10559
  2779  013350                     l10613:
  2780                           
  2781                           ;main.c: 351:     set_vterm(2);
  2782  013350  0E02               	movlw	2
  2783  013352  6EE6               	movwf	postinc1,c
  2784  013354  ECFE  F0C4         	call	_set_vterm	;wreg free
  2785                           
  2786                           ; BSR set to: 5
  2787                           ;main.c: 352:     update_lcd(2);
  2788  013358  0E02               	movlw	2
  2789  01335A  6EE6               	movwf	postinc1,c
  2790  01335C  EC01  F0B6         	call	_update_lcd	;wreg free
  2791  013360  D602               	goto	l10559
  2792  013362                     __end_of_main:
  2793                           	opt callstack 0
  2794                           
  2795 ;; *************** function _start_switch_handler *****************
  2796 ;; Defined at:
  2797 ;;		line 119 in file "dio.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1  [STACK] void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2806 ;; Tracked objects:
  2807 ;;		On entry : 1/4
  2808 ;;		On exit  : 3F/39
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    7
  2818 ;; This function calls:
  2819 ;;		_INT1_SetInterruptHandler
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text1
  2826  01892A                     __ptext1:
  2827                           	opt callstack 0
  2828  01892A                     _start_switch_handler:
  2829                           	opt callstack 23
  2830                           
  2831                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2832                           
  2833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2834                           ;incstack = 0
  2835  01892A  0139               	movlb	57	; () banked
  2836  01892C  9195               	bcf	149,0,b	;volatile
  2837                           
  2838                           ; BSR set to: 57
  2839                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2840  01892E  0E3C               	movlw	low _switch_handler
  2841  018930  6EE6               	movwf	postinc1,c
  2842  018932  0E66               	movlw	high _switch_handler
  2843  018934  6EE6               	movwf	postinc1,c
  2844  018936  0E01               	movlw	low (_switch_handler shr (0+16))
  2845  018938  6EE6               	movwf	postinc1,c
  2846  01893A  EC77  F0C3         	call	_INT1_SetInterruptHandler	;wreg free
  2847                           
  2848                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2849  01893E  0E02               	movlw	2
  2850  018940  0100               	movlb	0	; () banked
  2851  018942  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2855  018944  0139               	movlb	57	; () banked
  2856  018946  8195               	bsf	149,0,b	;volatile
  2857                           
  2858                           ; BSR set to: 57
  2859                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2860  018948  0012               	return		;funcret
  2861  01894A                     __end_of_start_switch_handler:
  2862                           	opt callstack 0
  2863                           
  2864 ;; *************** function _start_adc_scan *****************
  2865 ;; Defined at:
  2866 ;;		line 33 in file "daq.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1  [STACK] _Bool 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/5
  2877 ;;		On exit  : 1/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    7
  2887 ;; This function calls:
  2888 ;;		_ADCC_DischargeSampleCapacitor
  2889 ;;		_ADCC_SetADIInterruptHandler
  2890 ;;		_ADCC_SetADTIInterruptHandler
  2891 ;;		_ADCC_StartConversion
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text2
  2898  017C32                     __ptext2:
  2899                           	opt callstack 0
  2900  017C32                     _start_adc_scan:
  2901                           	opt callstack 23
  2902                           
  2903                           ;daq.c: 35:  if (R.done)
  2904                           
  2905                           ; BSR set to: 57
  2906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2907                           ;incstack = 0
  2908  017C32  0100               	movlb	0	; () banked
  2909  017C34  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2910  017C36  A4D8               	btfss	status,2,c
  2911  017C38  0012               	return	
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;daq.c: 38:  R.scan_index = 0;
  2915  017C3A  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2919  017C3C  013A               	movlb	58	; () banked
  2920  017C3E  5140               	movf	64,w,b	;volatile
  2921  017C40  006E F940  F032    	movff	14928,btemp	;volatile
  2922  017C46  6A33               	clrf	(btemp+1)^0,c
  2923  017C48  0060  F0C8  F033   	movff	btemp,btemp+1
  2924  017C4E  6A32               	clrf	btemp^0,c
  2925  017C50  2632               	addwf	btemp^0,f,c
  2926  017C52  0E00               	movlw	0
  2927  017C54  2233               	addwfc	(btemp+1)^0,f,c
  2928  017C56  0E77               	movlw	119
  2929  017C58  1432               	andwf	btemp^0,w,c
  2930  017C5A  0100               	movlb	0	; () banked
  2931  017C5C  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2932  017C5E  0E3C               	movlw	60
  2933  017C60  1433               	andwf	(btemp+1)^0,w,c
  2934  017C62  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2938  017C64  0EBC               	movlw	low _adc_int_handler
  2939  017C66  6EE6               	movwf	postinc1,c
  2940  017C68  0E8B               	movlw	high _adc_int_handler
  2941  017C6A  6EE6               	movwf	postinc1,c
  2942  017C6C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2943  017C6E  6EE6               	movwf	postinc1,c
  2944  017C70  ECB3  F0C3         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2945                           
  2946                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2947  017C74  0E96               	movlw	low _adc_int_t_handler
  2948  017C76  6EE6               	movwf	postinc1,c
  2949  017C78  0E79               	movlw	high _adc_int_t_handler
  2950  017C7A  6EE6               	movwf	postinc1,c
  2951  017C7C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2952  017C7E  6EE6               	movwf	postinc1,c
  2953  017C80  EC9F  F0C3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2954                           
  2955                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2956  017C84  ECBB  F0C5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2957                           
  2958                           ; BSR set to: 62
  2959                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2960  017C88  0100               	movlb	0	; () banked
  2961  017C8A  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2962  017C8C  0B0F               	andlw	15
  2963  017C8E  6EE6               	movwf	postinc1,c
  2964  017C90  EC76  F0C5         	call	_ADCC_StartConversion	;wreg free
  2965                           
  2966                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2967  017C94  0012               	return		;funcret
  2968  017C96                     __end_of_start_adc_scan:
  2969                           	opt callstack 0
  2970                           
  2971 ;; *************** function _ADCC_StartConversion *****************
  2972 ;; Defined at:
  2973 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  channel         1  [STACK] enum E16136
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1  [STACK] void 
  2980 ;; Registers used:
  2981 ;;		fsr1l, fsr1h
  2982 ;; Tracked objects:
  2983 ;;		On entry : 3F/0
  2984 ;;		On exit  : 3F/3E
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2991 ;;Total ram usage:        0 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    6
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_start_adc_scan
  2998 ;;		_adc_int_t_handler
  2999 ;; This function uses a reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text3
  3003  018AEC                     __ptext3:
  3004                           	opt callstack 0
  3005  018AEC                     _ADCC_StartConversion:
  3006                           	opt callstack 6
  3007                           
  3008                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3009                           ;stkvar	_channel @ sp[(0)+-1]
  3010                           
  3011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3012                           ;incstack = 0
  3013  018AEC  0EFF               	movlw	-1
  3014  018AEE  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3015                           
  3016                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3017  018AF4  013E               	movlb	62	; () banked
  3018  018AF6  8FF8               	bsf	248,7,b	;volatile
  3019                           
  3020                           ; BSR set to: 62
  3021                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3022  018AF8  81F8               	bsf	248,0,b	;volatile
  3023                           
  3024                           ; BSR set to: 62
  3025                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3026  018AFA  52E5               	movf	postdec1,f,c
  3027  018AFC  0012               	return		;funcret
  3028  018AFE                     __end_of_ADCC_StartConversion:
  3029                           	opt callstack 0
  3030                           
  3031 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3032 ;; Defined at:
  3033 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1  [STACK] void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 3F/3E
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    6
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_start_adc_scan
  3058 ;;		_adc_int_t_handler
  3059 ;; This function uses a reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text4
  3063  018B76                     __ptext4:
  3064                           	opt callstack 0
  3065  018B76                     _ADCC_DischargeSampleCapacitor:
  3066                           	opt callstack 6
  3067                           
  3068                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3069                           
  3070                           ; BSR set to: 62
  3071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3072                           ;incstack = 0
  3073  018B76  0E3B               	movlw	59
  3074  018B78  013E               	movlb	62	; () banked
  3075  018B7A  6FF1               	movwf	241,b	;volatile
  3076                           
  3077                           ; BSR set to: 62
  3078                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3079  018B7C  0012               	return		;funcret
  3080  018B7E                     __end_of_ADCC_DischargeSampleCapacitor:
  3081                           	opt callstack 0
  3082                           
  3083 ;; *************** function _srand *****************
  3084 ;; Defined at:
  3085 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  s               2  [STACK] unsigned int 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1  [STACK] void 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3094 ;; Tracked objects:
  3095 ;;		On entry : 3F/0
  3096 ;;		On exit  : 3F/1
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    6
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text5
  3114  01835A                     __ptext5:
  3115                           	opt callstack 0
  3116  01835A                     _srand:
  3117                           	opt callstack 24
  3118                           
  3119                           ;stkvar	_s @ sp[(0)+-2]
  3120                           
  3121                           ; BSR set to: 62
  3122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3123                           ;incstack = 0
  3124  01835A  0EFE               	movlw	-2
  3125  01835C  50E3               	movf	plusw1,w,c
  3126  01835E  0FFF               	addlw	255
  3127  018360  6E3C               	movwf	(btemp+10)^0,c
  3128  018362  0EFF               	movlw	-1
  3129  018364  006F FF8C  F03D    	movff	plusw1,btemp+11
  3130  01836A  0EFF               	movlw	255
  3131  01836C  223D               	addwfc	(btemp+11)^0,f,c
  3132  01836E  0060  F0F0  F1CC   	movff	btemp+10,_seed
  3133  018374  0060  F0F4  F1CD   	movff	btemp+11,_seed+1
  3134  01837A  0101               	movlb	1	; () banked
  3135  01837C  6BCE               	clrf	(_seed+2)& (0+255),b
  3136  01837E  6BCF               	clrf	(_seed+3)& (0+255),b
  3137  018380  6BD0               	clrf	(_seed+4)& (0+255),b
  3138  018382  6BD1               	clrf	(_seed+5)& (0+255),b
  3139  018384  6BD2               	clrf	(_seed+6)& (0+255),b
  3140  018386  6BD3               	clrf	(_seed+7)& (0+255),b
  3141                           
  3142                           ; BSR set to: 1
  3143                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3144  018388  52E5               	movf	postdec1,f,c
  3145  01838A  52E5               	movf	postdec1,f,c
  3146  01838C  0012               	return		;funcret
  3147  01838E                     __end_of_srand:
  3148                           	opt callstack 0
  3149                           
  3150 ;; *************** function _init_display *****************
  3151 ;; Defined at:
  3152 ;;		line 37 in file "eadog.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1  [STACK] void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/2
  3163 ;;		On exit  : 3F/3D
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3170 ;;Total ram usage:        0 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    8
  3173 ;; This function calls:
  3174 ;;		_ringBufS_init
  3175 ;;		_send_lcd_cmd
  3176 ;;		_send_lcd_cmd_long
  3177 ;;		_wdtdelay
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;; This function uses a reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text6
  3184  016F0E                     __ptext6:
  3185                           	opt callstack 0
  3186  016F0E                     _init_display:
  3187                           	opt callstack 22
  3188                           
  3189                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3190                           
  3191                           ; BSR set to: 1
  3192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3193                           ;incstack = 0
  3194  016F0E  0E94               	movlw	low _ring_buf1
  3195  016F10  0100               	movlb	0	; () banked
  3196  016F12  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3197  016F14  0E03               	movlw	high _ring_buf1
  3198  016F16  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3199                           
  3200                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3201  016F18  0E00               	movlw	low _ring_buf2
  3202  016F1A  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3203  016F1C  0E04               	movlw	high _ring_buf2
  3204  016F1E  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3208  016F20  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3209  016F26  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3210  016F2C  ECD7  F0C2         	call	_ringBufS_init	;wreg free
  3211                           
  3212                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3213  016F30  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3214  016F36  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3215  016F3C  ECD7  F0C2         	call	_ringBufS_init	;wreg free
  3216                           
  3217                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3218  016F40  84BE               	bsf	190,2,c	;volatile
  3219  016F42  84BC               	bsf	188,2,c	;volatile
  3220                           
  3221                           ;eadog.c: 46:  wdtdelay(350000);
  3222  016F44  0E30               	movlw	48
  3223  016F46  6EE6               	movwf	postinc1,c
  3224  016F48  0E57               	movlw	87
  3225  016F4A  6EE6               	movwf	postinc1,c
  3226  016F4C  0E05               	movlw	5
  3227  016F4E  6EE6               	movwf	postinc1,c
  3228  016F50  0E00               	movlw	0
  3229  016F52  6EE6               	movwf	postinc1,c
  3230  016F54  EC3C  F0BF         	call	_wdtdelay	;wreg free
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3234  016F58  0E39               	movlw	57
  3235  016F5A  6EE6               	movwf	postinc1,c
  3236  016F5C  ECC3  F0C2         	call	_send_lcd_cmd	;wreg free
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3240  016F60  0E1D               	movlw	29
  3241  016F62  6EE6               	movwf	postinc1,c
  3242  016F64  ECC3  F0C2         	call	_send_lcd_cmd	;wreg free
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3246  016F68  0E50               	movlw	80
  3247  016F6A  6EE6               	movwf	postinc1,c
  3248  016F6C  ECC3  F0C2         	call	_send_lcd_cmd	;wreg free
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3252  016F70  0E6C               	movlw	108
  3253  016F72  6EE6               	movwf	postinc1,c
  3254  016F74  ECC3  F0C2         	call	_send_lcd_cmd	;wreg free
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3258  016F78  0E76               	movlw	118
  3259  016F7A  6EE6               	movwf	postinc1,c
  3260  016F7C  ECC3  F0C2         	call	_send_lcd_cmd	;wreg free
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3264  016F80  0E38               	movlw	56
  3265  016F82  6EE6               	movwf	postinc1,c
  3266  016F84  ECAF  F0C2         	call	_send_lcd_cmd_long	;wreg free
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3270  016F88  0E0F               	movlw	15
  3271  016F8A  6EE6               	movwf	postinc1,c
  3272  016F8C  ECC3  F0C2         	call	_send_lcd_cmd	;wreg free
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3276  016F90  0E01               	movlw	1
  3277  016F92  6EE6               	movwf	postinc1,c
  3278  016F94  ECAF  F0C2         	call	_send_lcd_cmd_long	;wreg free
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3282  016F98  0E02               	movlw	2
  3283  016F9A  6EE6               	movwf	postinc1,c
  3284  016F9C  ECC3  F0C2         	call	_send_lcd_cmd	;wreg free
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3288  016FA0  0E06               	movlw	6
  3289  016FA2  6EE6               	movwf	postinc1,c
  3290  016FA4  ECC3  F0C2         	call	_send_lcd_cmd	;wreg free
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;eadog.c: 57:  wdtdelay(30);
  3294  016FA8  0E1E               	movlw	30
  3295  016FAA  6EE6               	movwf	postinc1,c
  3296  016FAC  0E00               	movlw	0
  3297  016FAE  6EE6               	movwf	postinc1,c
  3298  016FB0  0E00               	movlw	0
  3299  016FB2  6EE6               	movwf	postinc1,c
  3300  016FB4  0E00               	movlw	0
  3301  016FB6  6EE6               	movwf	postinc1,c
  3302  016FB8  EC3C  F0BF         	call	_wdtdelay	;wreg free
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3306  016FBC  0E02               	movlw	2
  3307  016FBE  013D               	movlb	61	; () banked
  3308  016FC0  6F16               	movwf	22,b	;volatile
  3309                           
  3310                           ; BSR set to: 61
  3311                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3312  016FC2  0E40               	movlw	64
  3313  016FC4  6F15               	movwf	21,b	;volatile
  3314                           
  3315                           ; BSR set to: 61
  3316                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3317  016FC6  0E83               	movlw	131
  3318  016FC8  6F14               	movwf	20,b	;volatile
  3319                           
  3320                           ; BSR set to: 61
  3321                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3322  016FCA  931A               	bcf	26,1,b	;volatile
  3323                           
  3324                           ; BSR set to: 61
  3325                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3326  016FCC  0E3F               	movlw	-193
  3327  016FCE  013B               	movlb	59	; () banked
  3328  016FD0  17FD               	andwf	253,f,b	;volatile
  3329                           
  3330                           ; BSR set to: 59
  3331                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3332  016FD2  9BFD               	bcf	253,5,b	;volatile
  3333                           
  3334                           ; BSR set to: 59
  3335                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3336  016FD4  51FD               	movf	253,w,b	;volatile
  3337  016FD6  0BF9               	andlw	-7
  3338  016FD8  0902               	iorlw	2
  3339  016FDA  6FFD               	movwf	253,b	;volatile
  3340                           
  3341                           ; BSR set to: 59
  3342                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3343  016FDC  0EE7               	movlw	-25
  3344  016FDE  17FD               	andwf	253,f,b	;volatile
  3345                           
  3346                           ; BSR set to: 59
  3347                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3348  016FE0  81FD               	bsf	253,0,b	;volatile
  3349                           
  3350                           ; BSR set to: 59
  3351                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3352  016FE2  0E94               	movlw	low _ring_buf1
  3353  016FE4  6FF9               	movwf	249,b	;volatile
  3354  016FE6  0E03               	movlw	high _ring_buf1
  3355  016FE8  6FFA               	movwf	250,b	;volatile
  3356  016FEA  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3357  016FEC  6FFB               	movwf	251,b	;volatile
  3358                           
  3359                           ; BSR set to: 59
  3360                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3361  016FEE  9BFC               	bcf	252,5,b	;volatile
  3362                           
  3363                           ; BSR set to: 59
  3364                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3365  016FF0  013D               	movlb	61	; () banked
  3366  016FF2  831A               	bsf	26,1,b	;volatile
  3367                           
  3368                           ; BSR set to: 61
  3369                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3370  016FF4  94BE               	bcf	190,2,c	;volatile
  3371                           
  3372                           ; BSR set to: 61
  3373                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3374  016FF6  0012               	return		;funcret
  3375  016FF8                     __end_of_init_display:
  3376                           	opt callstack 0
  3377                           
  3378 ;; *************** function _send_lcd_cmd_long *****************
  3379 ;; Defined at:
  3380 ;;		line 114 in file "eadog.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  cmd             1  [STACK] const unsigned char 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1  [STACK] void 
  3387 ;; Registers used:
  3388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3389 ;; Tracked objects:
  3390 ;;		On entry : 3F/0
  3391 ;;		On exit  : 3F/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    7
  3401 ;; This function calls:
  3402 ;;		_SPI1_Exchange8bit
  3403 ;;		_wdtdelay
  3404 ;; This function is called by:
  3405 ;;		_init_display
  3406 ;; This function uses a reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text7
  3410  01855E                     __ptext7:
  3411                           	opt callstack 0
  3412  01855E                     _send_lcd_cmd_long:
  3413                           	opt callstack 22
  3414                           
  3415                           ; BSR set to: 61
  3416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3417                           ;incstack = 0
  3418                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3419  01855E  92BC               	bcf	188,1,c	;volatile
  3420                           
  3421                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3422  018560  94BC               	bcf	188,2,c	;volatile
  3423                           
  3424                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3425                           ;stkvar	_cmd @ sp[(0)+-1]
  3426  018562  0EFF               	movlw	-1
  3427  018564  50E3               	movf	plusw1,w,c
  3428  018566  6EE6               	movwf	postinc1,c
  3429  018568  ECA5  F0C4         	call	_SPI1_Exchange8bit	;wreg free
  3430                           
  3431                           ; BSR set to: 57
  3432                           ;eadog.c: 119:  wdtdelay(800);
  3433  01856C  0E20               	movlw	32
  3434  01856E  6EE6               	movwf	postinc1,c
  3435  018570  0E03               	movlw	3
  3436  018572  6EE6               	movwf	postinc1,c
  3437  018574  0E00               	movlw	0
  3438  018576  6EE6               	movwf	postinc1,c
  3439  018578  0E00               	movlw	0
  3440  01857A  6EE6               	movwf	postinc1,c
  3441  01857C  EC3C  F0BF         	call	_wdtdelay	;wreg free
  3442                           
  3443                           ; BSR set to: 0
  3444  018580  82BC               	bsf	188,1,c	;volatile
  3445                           
  3446                           ; BSR set to: 0
  3447                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3448  018582  52E5               	movf	postdec1,f,c
  3449  018584  0012               	return		;funcret
  3450  018586                     __end_of_send_lcd_cmd_long:
  3451                           	opt callstack 0
  3452                           
  3453 ;; *************** function _send_lcd_cmd *****************
  3454 ;; Defined at:
  3455 ;;		line 102 in file "eadog.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  cmd             1  [STACK] const unsigned char 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1  [STACK] void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3464 ;; Tracked objects:
  3465 ;;		On entry : 3F/0
  3466 ;;		On exit  : 3F/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3473 ;;Total ram usage:        0 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    7
  3476 ;; This function calls:
  3477 ;;		_SPI1_Exchange8bit
  3478 ;;		_wdtdelay
  3479 ;; This function is called by:
  3480 ;;		_init_display
  3481 ;; This function uses a reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text8
  3485  018586                     __ptext8:
  3486                           	opt callstack 0
  3487  018586                     _send_lcd_cmd:
  3488                           	opt callstack 22
  3489                           
  3490                           ; BSR set to: 0
  3491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3492                           ;incstack = 0
  3493                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3494  018586  92BC               	bcf	188,1,c	;volatile
  3495                           
  3496                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3497  018588  94BC               	bcf	188,2,c	;volatile
  3498                           
  3499                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3500                           ;stkvar	_cmd @ sp[(0)+-1]
  3501  01858A  0EFF               	movlw	-1
  3502  01858C  50E3               	movf	plusw1,w,c
  3503  01858E  6EE6               	movwf	postinc1,c
  3504  018590  ECA5  F0C4         	call	_SPI1_Exchange8bit	;wreg free
  3505                           
  3506                           ; BSR set to: 57
  3507                           ;eadog.c: 107:  wdtdelay(30);
  3508  018594  0E1E               	movlw	30
  3509  018596  6EE6               	movwf	postinc1,c
  3510  018598  0E00               	movlw	0
  3511  01859A  6EE6               	movwf	postinc1,c
  3512  01859C  0E00               	movlw	0
  3513  01859E  6EE6               	movwf	postinc1,c
  3514  0185A0  0E00               	movlw	0
  3515  0185A2  6EE6               	movwf	postinc1,c
  3516  0185A4  EC3C  F0BF         	call	_wdtdelay	;wreg free
  3517                           
  3518                           ; BSR set to: 0
  3519  0185A8  82BC               	bsf	188,1,c	;volatile
  3520                           
  3521                           ; BSR set to: 0
  3522                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3523  0185AA  52E5               	movf	postdec1,f,c
  3524  0185AC  0012               	return		;funcret
  3525  0185AE                     __end_of_send_lcd_cmd:
  3526                           	opt callstack 0
  3527                           
  3528 ;; *************** function _SPI1_Exchange8bit *****************
  3529 ;; Defined at:
  3530 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  data            1  [STACK] unsigned char 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1  [STACK] unsigned char 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 3F/39
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    6
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_send_lcd_cmd
  3555 ;;		_send_lcd_cmd_long
  3556 ;; This function uses a reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text9
  3560  01894A                     __ptext9:
  3561                           	opt callstack 0
  3562  01894A                     _SPI1_Exchange8bit:
  3563                           	opt callstack 22
  3564                           
  3565                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3566                           
  3567                           ; BSR set to: 0
  3568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3569                           ;incstack = 0
  3570  01894A  0E01               	movlw	1
  3571  01894C  013D               	movlb	61	; () banked
  3572  01894E  6F12               	movwf	18,b	;volatile
  3573                           
  3574                           ; BSR set to: 61
  3575                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3576                           ;stkvar	_data @ sp[(0)+-1]
  3577  018950  0EFF               	movlw	-1
  3578  018952  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3579  018958                     l835:
  3580                           
  3581                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3582  018958  0139               	movlb	57	; () banked
  3583  01895A  A9A2               	btfss	162,4,b	;volatile
  3584  01895C  D7FD               	goto	l835
  3585                           
  3586                           ; BSR set to: 57
  3587                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3588  01895E  006F F440  F032    	movff	15632,btemp	;volatile
  3589                           
  3590                           ; BSR set to: 57
  3591                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3592  018964  52E5               	movf	postdec1,f,c
  3593  018966  0012               	return		;funcret
  3594  018968                     __end_of_SPI1_Exchange8bit:
  3595                           	opt callstack 0
  3596                           
  3597 ;; *************** function _ringBufS_init *****************
  3598 ;; Defined at:
  3599 ;;		line 22 in file "ringbufs.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  _this           2  [STACK] PTR volatile struct ring
  3602 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1  [STACK] void 
  3607 ;; Registers used:
  3608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    7
  3621 ;; This function calls:
  3622 ;;		_memset
  3623 ;; This function is called by:
  3624 ;;		_init_display
  3625 ;; This function uses a reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text10
  3629  0185AE                     __ptext10:
  3630                           	opt callstack 0
  3631  0185AE                     _ringBufS_init:
  3632                           	opt callstack 22
  3633                           
  3634                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3635                           
  3636                           ; BSR set to: 57
  3637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3638                           ;incstack = 0
  3639  0185AE  0E43               	movlw	67
  3640  0185B0  6EE6               	movwf	postinc1,c
  3641  0185B2  0E00               	movlw	0
  3642  0185B4  6EE6               	movwf	postinc1,c
  3643  0185B6  0E00               	movlw	0
  3644  0185B8  6EE6               	movwf	postinc1,c
  3645  0185BA  0E00               	movlw	0
  3646  0185BC  6EE6               	movwf	postinc1,c
  3647                           
  3648                           ;stkvar	__this @ sp[(-4)+-2]
  3649  0185BE  0EFA               	movlw	-6
  3650  0185C0  006F FF8F FFE6     	movff	plusw1,postinc1
  3651  0185C6  006F FF8F FFE6     	movff	plusw1,postinc1
  3652  0185CC  EC97  F0A4         	call	_memset	;wreg free
  3653                           
  3654                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3655  0185D0  52E5               	movf	postdec1,f,c
  3656  0185D2  52E5               	movf	postdec1,f,c
  3657  0185D4  0012               	return		;funcret
  3658  0185D6                     __end_of_ringBufS_init:
  3659                           	opt callstack 0
  3660                           
  3661 ;; *************** function _hid_display *****************
  3662 ;; Defined at:
  3663 ;;		line 17 in file "hid.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  h               1  [STACK] PTR struct H_data
  3666 ;;		 -> H(7), 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1  [STACK] PTR struct H_data
  3671 ;; Registers used:
  3672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  3673 ;; Tracked objects:
  3674 ;;		On entry : 3F/1
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3682 ;;Total ram usage:        0 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    8
  3685 ;; This function calls:
  3686 ;;		_hid_input
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;; This function uses a reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text11
  3693  016FF8                     __ptext11:
  3694                           	opt callstack 0
  3695  016FF8                     _hid_display:
  3696                           	opt callstack 22
  3697                           
  3698                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  3699                           ;stkvar	_h @ sp[(0)+-1]
  3700                           
  3701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3702                           ;incstack = 0
  3703  016FF8  0EFF               	movlw	-1
  3704  016FFA  50E3               	movf	plusw1,w,c
  3705  016FFC  6EE6               	movwf	postinc1,c
  3706  016FFE  ECBB  F0BB         	call	_hid_input	;wreg free
  3707                           
  3708                           ;hid.c: 21:  switch (h->h_state) {
  3709  017002  D04F               	goto	l9087
  3710  017004                     l9069:
  3711                           
  3712                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  3713                           ;stkvar	_h @ sp[(0)+-1]
  3714  017004  0EFF               	movlw	-1
  3715  017006  50E3               	movf	plusw1,w,c
  3716  017008  6ED9               	movwf	fsr2l,c
  3717  01700A  6ADA               	clrf	fsr2h,c
  3718  01700C  0E01               	movlw	1
  3719  01700E  26D9               	addwf	fsr2l,f,c
  3720  017010  0E01               	movlw	1
  3721  017012  6EDF               	movwf	indf2,c
  3722                           
  3723                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  3724                           ;stkvar	_h @ sp[(0)+-1]
  3725  017014  0EFF               	movlw	-1
  3726  017016  50E3               	movf	plusw1,w,c
  3727  017018  6ED9               	movwf	fsr2l,c
  3728  01701A  6ADA               	clrf	fsr2h,c
  3729  01701C  0E00               	movlw	0
  3730  01701E  6EDF               	movwf	indf2,c
  3731                           
  3732                           ;hid.c: 25:   h->wait_enter = 1;
  3733                           ;stkvar	_h @ sp[(0)+-1]
  3734  017020  0EFF               	movlw	-1
  3735  017022  50E3               	movf	plusw1,w,c
  3736  017024  6ED9               	movwf	fsr2l,c
  3737  017026  6ADA               	clrf	fsr2h,c
  3738  017028  0E04               	movlw	4
  3739  01702A  26D9               	addwf	fsr2l,f,c
  3740  01702C  0E01               	movlw	1
  3741  01702E  6EDF               	movwf	indf2,c
  3742  017030  D02F               	goto	l9083
  3743  017032                     l9077:
  3744                           
  3745                           ;hid.c: 37:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  3746                           ;stkvar	_h @ sp[(0)+-1]
  3747  017032  0EFF               	movlw	-1
  3748  017034  50E3               	movf	plusw1,w,c
  3749  017036  6ED9               	movwf	fsr2l,c
  3750  017038  6ADA               	clrf	fsr2h,c
  3751  01703A  0E02               	movlw	2
  3752  01703C  26D9               	addwf	fsr2l,f,c
  3753  01703E  50DF               	movf	indf2,w,c
  3754  017040  A4D8               	btfss	status,2,c
  3755  017042  D042               	goto	l1791
  3756                           
  3757                           ;stkvar	_h @ sp[(0)+-1]
  3758  017044  0EFF               	movlw	-1
  3759  017046  50E3               	movf	plusw1,w,c
  3760  017048  6ED9               	movwf	fsr2l,c
  3761  01704A  6ADA               	clrf	fsr2h,c
  3762  01704C  0E03               	movlw	3
  3763  01704E  26D9               	addwf	fsr2l,f,c
  3764  017050  50DF               	movf	indf2,w,c
  3765  017052  A4D8               	btfss	status,2,c
  3766  017054  D039               	goto	l1791
  3767                           
  3768                           ;hid.c: 38:    h->sequence = ++h->sequence & 0x3;
  3769                           ;stkvar	_h @ sp[(0)+-1]
  3770  017056  0EFF               	movlw	-1
  3771  017058  50E3               	movf	plusw1,w,c
  3772  01705A  6ED9               	movwf	fsr2l,c
  3773  01705C  6ADA               	clrf	fsr2h,c
  3774  01705E  0E06               	movlw	6
  3775  017060  26D9               	addwf	fsr2l,f,c
  3776                           
  3777                           ;stkvar	_h @ sp[(0)+-1]
  3778  017062  0EFF               	movlw	-1
  3779  017064  50E3               	movf	plusw1,w,c
  3780  017066  6EE9               	movwf	fsr0l,c
  3781  017068  6AEA               	clrf	fsr0h,c
  3782  01706A  0E06               	movlw	6
  3783  01706C  26E9               	addwf	fsr0l,f,c
  3784  01706E  2AEF               	incf	indf0,f,c
  3785  017070  50EF               	movf	indf0,w,c
  3786  017072  0B03               	andlw	3
  3787  017074  6EDF               	movwf	indf2,c
  3788                           
  3789                           ;hid.c: 39:    h->hid_display = h->sequence;
  3790                           ;stkvar	_h @ sp[(0)+-1]
  3791  017076  0EFF               	movlw	-1
  3792  017078  50E3               	movf	plusw1,w,c
  3793  01707A  6ED9               	movwf	fsr2l,c
  3794  01707C  6ADA               	clrf	fsr2h,c
  3795  01707E  0E06               	movlw	6
  3796  017080  26D9               	addwf	fsr2l,f,c
  3797                           
  3798                           ;stkvar	_h @ sp[(0)+-1]
  3799  017082  0EFF               	movlw	-1
  3800  017084  50E3               	movf	plusw1,w,c
  3801  017086  6EE9               	movwf	fsr0l,c
  3802  017088  6AEA               	clrf	fsr0h,c
  3803  01708A  006F FF7F FFEF     	movff	indf2,indf0
  3804  017090                     l9083:
  3805                           
  3806                           ;hid.c: 40:    h->wait_select = 1;
  3807                           ;stkvar	_h @ sp[(0)+-1]
  3808  017090  0EFF               	movlw	-1
  3809  017092  50E3               	movf	plusw1,w,c
  3810  017094  6ED9               	movwf	fsr2l,c
  3811  017096  6ADA               	clrf	fsr2h,c
  3812  017098  0E02               	movlw	2
  3813  01709A  26D9               	addwf	fsr2l,f,c
  3814  01709C  0E01               	movlw	1
  3815  01709E  6EDF               	movwf	indf2,c
  3816  0170A0  D013               	goto	l1791
  3817  0170A2                     l9087:
  3818                           
  3819                           ;stkvar	_h @ sp[(0)+-1]
  3820  0170A2  0EFF               	movlw	-1
  3821  0170A4  50E3               	movf	plusw1,w,c
  3822  0170A6  6ED9               	movwf	fsr2l,c
  3823  0170A8  6ADA               	clrf	fsr2h,c
  3824  0170AA  0E01               	movlw	1
  3825  0170AC  26D9               	addwf	fsr2l,f,c
  3826  0170AE  50DF               	movf	indf2,w,c
  3827  0170B0  6E3C               	movwf	(btemp+10)^0,c
  3828  0170B2  6A3D               	clrf	(btemp+11)^0,c
  3829                           
  3830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3831                           ; Switch size 1, requested type "simple"
  3832                           ; Number of cases is 1, Range of values is 0 to 0
  3833                           ; switch strategies available:
  3834                           ; Name         Instructions Cycles
  3835                           ; simple_byte            4     3 (average)
  3836                           ;	Chosen strategy is simple_byte
  3837  0170B4  503D               	movf	(btemp+11)^0,w,c
  3838  0170B6  0A00               	xorlw	0	; case 0
  3839  0170B8  A4D8               	btfss	status,2,c
  3840  0170BA  D7BB               	goto	l9077
  3841                           
  3842                           ; Switch size 1, requested type "simple"
  3843                           ; Number of cases is 2, Range of values is 0 to 1
  3844                           ; switch strategies available:
  3845                           ; Name         Instructions Cycles
  3846                           ; simple_byte            7     4 (average)
  3847                           ;	Chosen strategy is simple_byte
  3848  0170BC  503C               	movf	(btemp+10)^0,w,c
  3849  0170BE  0A00               	xorlw	0	; case 0
  3850  0170C0  B4D8               	btfsc	status,2,c
  3851  0170C2  D7A0               	goto	l9069
  3852  0170C4  0A01               	xorlw	1	; case 1
  3853  0170C6  D7B5               	goto	l9077
  3854  0170C8                     l1791:
  3855                           
  3856                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3857  0170C8  52E5               	movf	postdec1,f,c
  3858  0170CA  0012               	return		;funcret
  3859  0170CC                     __end_of_hid_display:
  3860                           	opt callstack 0
  3861                           
  3862 ;; *************** function _hid_input *****************
  3863 ;; Defined at:
  3864 ;;		line 3 in file "hid.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  h               1  [STACK] PTR struct H_data
  3867 ;;		 -> H(7), 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1  [STACK] PTR struct H_data
  3872 ;; Registers used:
  3873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/1
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3883 ;;Total ram usage:        0 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    7
  3886 ;; This function calls:
  3887 ;;		_get_switch
  3888 ;; This function is called by:
  3889 ;;		_hid_display
  3890 ;; This function uses a reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text12
  3894  017776                     __ptext12:
  3895                           	opt callstack 0
  3896  017776                     _hid_input:
  3897                           	opt callstack 22
  3898                           
  3899                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  3900                           
  3901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3902                           ;incstack = 0
  3903  017776  0E02               	movlw	2
  3904  017778  6EE6               	movwf	postinc1,c
  3905  01777A  ECEB  F0C2         	call	_get_switch	;wreg free
  3906  01777E  5032               	movf	btemp^0,w,c
  3907  017780  B4D8               	btfsc	status,2,c
  3908  017782  D01C               	goto	l8847
  3909                           
  3910                           ;hid.c: 6:   h->wait_select = 0;
  3911                           ;stkvar	_h @ sp[(0)+-1]
  3912  017784  0EFF               	movlw	-1
  3913  017786  50E3               	movf	plusw1,w,c
  3914  017788  6ED9               	movwf	fsr2l,c
  3915  01778A  6ADA               	clrf	fsr2h,c
  3916  01778C  0E02               	movlw	2
  3917  01778E  26D9               	addwf	fsr2l,f,c
  3918  017790  0E00               	movlw	0
  3919  017792  6EDF               	movwf	indf2,c
  3920                           
  3921                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  3922  017794  0E02               	movlw	2
  3923  017796  6EE6               	movwf	postinc1,c
  3924  017798  ECEB  F0C2         	call	_get_switch	;wreg free
  3925  01779C  5032               	movf	btemp^0,w,c
  3926  01779E  B4D8               	btfsc	status,2,c
  3927  0177A0  D003               	goto	u8400
  3928  0177A2  6A3D               	clrf	(btemp+11)^0,c
  3929  0177A4  2A3D               	incf	(btemp+11)^0,f,c
  3930  0177A6  D001               	goto	u8418
  3931  0177A8                     u8400:
  3932  0177A8  6A3D               	clrf	(btemp+11)^0,c
  3933  0177AA                     u8418:
  3934                           
  3935                           ;stkvar	_h @ sp[(0)+-1]
  3936  0177AA  0EFF               	movlw	-1
  3937  0177AC  50E3               	movf	plusw1,w,c
  3938  0177AE  6ED9               	movwf	fsr2l,c
  3939  0177B0  6ADA               	clrf	fsr2h,c
  3940  0177B2  0E03               	movlw	3
  3941  0177B4  26D9               	addwf	fsr2l,f,c
  3942  0177B6  0060  F0F7  FFDF   	movff	btemp+11,indf2
  3943  0177BC                     l8847:
  3944                           
  3945                           ;hid.c: 10:  if (get_switch(SENTER)) {
  3946  0177BC  0E03               	movlw	3
  3947  0177BE  6EE6               	movwf	postinc1,c
  3948  0177C0  ECEB  F0C2         	call	_get_switch	;wreg free
  3949  0177C4  5032               	movf	btemp^0,w,c
  3950  0177C6  B4D8               	btfsc	status,2,c
  3951  0177C8  D01C               	goto	l1782
  3952                           
  3953                           ;hid.c: 11:   h->wait_enter = 0;
  3954                           ;stkvar	_h @ sp[(0)+-1]
  3955  0177CA  0EFF               	movlw	-1
  3956  0177CC  50E3               	movf	plusw1,w,c
  3957  0177CE  6ED9               	movwf	fsr2l,c
  3958  0177D0  6ADA               	clrf	fsr2h,c
  3959  0177D2  0E04               	movlw	4
  3960  0177D4  26D9               	addwf	fsr2l,f,c
  3961  0177D6  0E00               	movlw	0
  3962  0177D8  6EDF               	movwf	indf2,c
  3963                           
  3964                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  3965  0177DA  0E03               	movlw	3
  3966  0177DC  6EE6               	movwf	postinc1,c
  3967  0177DE  ECEB  F0C2         	call	_get_switch	;wreg free
  3968  0177E2  5032               	movf	btemp^0,w,c
  3969  0177E4  B4D8               	btfsc	status,2,c
  3970  0177E6  D003               	goto	u8430
  3971  0177E8  6A3D               	clrf	(btemp+11)^0,c
  3972  0177EA  2A3D               	incf	(btemp+11)^0,f,c
  3973  0177EC  D001               	goto	u8448
  3974  0177EE                     u8430:
  3975  0177EE  6A3D               	clrf	(btemp+11)^0,c
  3976  0177F0                     u8448:
  3977                           
  3978                           ;stkvar	_h @ sp[(0)+-1]
  3979  0177F0  0EFF               	movlw	-1
  3980  0177F2  50E3               	movf	plusw1,w,c
  3981  0177F4  6ED9               	movwf	fsr2l,c
  3982  0177F6  6ADA               	clrf	fsr2h,c
  3983  0177F8  0E05               	movlw	5
  3984  0177FA  26D9               	addwf	fsr2l,f,c
  3985  0177FC  0060  F0F7  FFDF   	movff	btemp+11,indf2
  3986  017802                     l1782:
  3987                           
  3988                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  3989  017802  52E5               	movf	postdec1,f,c
  3990  017804  0012               	return		;funcret
  3991  017806                     __end_of_hid_input:
  3992                           	opt callstack 0
  3993                           
  3994 ;; *************** function _get_switch *****************
  3995 ;; Defined at:
  3996 ;;		line 18 in file "dio.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  i               1  [STACK] unsigned char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1  [STACK] enum E16283
  4003 ;; Registers used:
  4004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/1
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4014 ;;Total ram usage:        0 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    6
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_hid_input
  4021 ;; This function uses a reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text13
  4025  0185D6                     __ptext13:
  4026                           	opt callstack 0
  4027  0185D6                     _get_switch:
  4028                           	opt callstack 22
  4029                           
  4030                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4031                           ;stkvar	_i @ sp[(0)+-1]
  4032                           
  4033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4034                           ;incstack = 0
  4035  0185D6  0EFF               	movlw	-1
  4036  0185D8  006F FF8C  F032    	movff	plusw1,btemp
  4037  0185DE  0E03               	movlw	3
  4038  0185E0  6432               	cpfsgt	btemp^0,c
  4039  0185E2  D002               	goto	l8171
  4040                           
  4041                           ;dio.c: 21:   return SW_OFF;
  4042  0185E4  0E00               	movlw	0
  4043  0185E6  D008               	goto	L1
  4044  0185E8                     l8171:
  4045                           
  4046                           ;dio.c: 23:  return S.button[i].sw;
  4047                           ;stkvar	_i @ sp[(0)+-1]
  4048  0185E8  0EFF               	movlw	-1
  4049  0185EA  50E3               	movf	plusw1,w,c
  4050  0185EC  0D05               	mullw	5
  4051  0185EE  50F3               	movf	243,w,c
  4052  0185F0  0F60               	addlw	low _S
  4053  0185F2  6ED9               	movwf	fsr2l,c
  4054  0185F4  6ADA               	clrf	fsr2h,c
  4055  0185F6  50DF               	movf	indf2,w,c
  4056  0185F8                     L1:
  4057  0185F8  6E32               	movwf	btemp^0,c
  4058                           
  4059                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4060  0185FA  52E5               	movf	postdec1,f,c
  4061  0185FC  0012               	return		;funcret
  4062  0185FE                     __end_of_get_switch:
  4063                           	opt callstack 0
  4064                           
  4065 ;; *************** function _eaDogM_WriteCommand *****************
  4066 ;; Defined at:
  4067 ;;		line 160 in file "eadog.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  cmd             1  [STACK] const unsigned char 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1  [STACK] void 
  4074 ;; Registers used:
  4075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4076 ;; Tracked objects:
  4077 ;;		On entry : 3F/3D
  4078 ;;		On exit  : 3F/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:   16
  4088 ;; This function calls:
  4089 ;;		_send_lcd_cmd_dma
  4090 ;; This function is called by:
  4091 ;;		_main
  4092 ;; This function uses a reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text14
  4096  018B0E                     __ptext14:
  4097                           	opt callstack 0
  4098  018B0E                     _eaDogM_WriteCommand:
  4099                           	opt callstack 14
  4100                           
  4101                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  4102                           ;stkvar	_cmd @ sp[(0)+-1]
  4103                           
  4104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4105                           ;incstack = 0
  4106  018B0E  0EFF               	movlw	-1
  4107  018B10  50E3               	movf	plusw1,w,c
  4108  018B12  6EE6               	movwf	postinc1,c
  4109  018B14  EC96  F0BF         	call	_send_lcd_cmd_dma	;wreg free
  4110                           
  4111                           ; BSR set to: 0
  4112                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4113  018B18  52E5               	movf	postdec1,f,c
  4114  018B1A  0012               	return		;funcret
  4115  018B1C                     __end_of_eaDogM_WriteCommand:
  4116                           	opt callstack 0
  4117                           
  4118 ;; *************** function _convert_adc_data *****************
  4119 ;; Defined at:
  4120 ;;		line 38 in file "mbmc.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  i               1  [STACK] unsigned char 
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1  [STACK] void 
  4127 ;; Registers used:
  4128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/39
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4138 ;;Total ram usage:        0 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    9
  4141 ;; This function calls:
  4142 ;;		_conv_raw_result
  4143 ;;		_lp_filter
  4144 ;; This function is called by:
  4145 ;;		_main
  4146 ;; This function uses a reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text15
  4150  017A14                     __ptext15:
  4151                           	opt callstack 0
  4152  017A14                     _convert_adc_data:
  4153                           	opt callstack 0
  4154                           
  4155                           ; BSR set to: 0
  4156                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4157  017A14  52E6               	movf	postinc1,f,c
  4158                           
  4159                           ;mbmc.c: 40:  uint8_t i = 0;
  4160                           ;stkvar	_i @ sp[(-1)+0]
  4161                           
  4162                           ;incstack = 0
  4163  017A16  0EFF               	movlw	-1
  4164  017A18  6AE3               	clrf	plusw1,c
  4165  017A1A                     l9053:
  4166                           
  4167                           ;mbmc.c: 46:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4168  017A1A  0E00               	movlw	0
  4169  017A1C  6EE6               	movwf	postinc1,c
  4170                           
  4171                           ;stkvar	_i @ sp[(-2)+0]
  4172  017A1E  0EFE               	movlw	-2
  4173  017A20  50E3               	movf	plusw1,w,c
  4174  017A22  6EE6               	movwf	postinc1,c
  4175  017A24  0E00               	movlw	0
  4176  017A26  6EE6               	movwf	postinc1,c
  4177                           
  4178                           ;stkvar	_i @ sp[(-4)+0]
  4179  017A28  0EFC               	movlw	-4
  4180  017A2A  50E3               	movf	plusw1,w,c
  4181  017A2C  6EE6               	movwf	postinc1,c
  4182  017A2E  EC6E  F09C         	call	_conv_raw_result	;wreg free
  4183  017A32  0060  F0CB  FFE6   	movff	btemp,postinc1
  4184  017A38  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4185  017A3E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4186  017A44  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4187  017A4A  EC62  F0AF         	call	_lp_filter	;wreg free
  4188                           
  4189                           ;stkvar	_i @ sp[(-1)+0]
  4190  017A4E  0EFF               	movlw	-1
  4191  017A50  50E3               	movf	plusw1,w,c
  4192  017A52  0D04               	mullw	4
  4193  017A54  0E00               	movlw	low _C
  4194  017A56  24F3               	addwf	243,w,c
  4195  017A58  6ED9               	movwf	fsr2l,c
  4196  017A5A  0E01               	movlw	high _C
  4197  017A5C  20F4               	addwfc	prodh,w,c
  4198  017A5E  6EDA               	movwf	fsr2h,c
  4199  017A60  0060  F0CB  FFDE   	movff	btemp,postinc2
  4200  017A66  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  4201  017A6C  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  4202  017A72  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  4203                           
  4204                           ;mbmc.c: 48:  } while (++i < 16);
  4205                           ;stkvar	_i @ sp[(-1)+0]
  4206  017A78  0EFF               	movlw	-1
  4207  017A7A  2AE3               	incf	plusw1,f,c
  4208  017A7C  0EFF               	movlw	-1
  4209  017A7E  006F FF8C  F032    	movff	plusw1,btemp
  4210  017A84  0E0F               	movlw	15
  4211  017A86  6432               	cpfsgt	btemp^0,c
  4212  017A88  D7C8               	goto	l9053
  4213                           
  4214                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4215  017A8A  52E5               	movf	postdec1,f,c
  4216  017A8C  0012               	return		;funcret
  4217  017A8E                     __end_of_convert_adc_data:
  4218                           	opt callstack 0
  4219                           
  4220 ;; *************** function _conv_raw_result *****************
  4221 ;; Defined at:
  4222 ;;		line 80 in file "daq.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  chan            1  [STACK] const enum E16136
  4225 ;;  to_what         1  [STACK] const enum E16198
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  4  [STACK] float 
  4230 ;; Registers used:
  4231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/39
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    8
  4244 ;; This function calls:
  4245 ;;		___fldiv
  4246 ;;		___flmul
  4247 ;;		___flsub
  4248 ;;		___xxtofl
  4249 ;;		_get_raw_result
  4250 ;;		_nanf
  4251 ;; This function is called by:
  4252 ;;		_convert_adc_data
  4253 ;; This function uses a reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text16
  4257  0138DC                     __ptext16:
  4258                           	opt callstack 0
  4259  0138DC                     _conv_raw_result:
  4260                           	opt callstack 21
  4261                           
  4262                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  4263                           
  4264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4265                           ;incstack = 0
  4266  0138DC  D242               	goto	l8757
  4267  0138DE                     l8703:
  4268                           
  4269                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4270                           ;stkvar	_chan @ sp[(0)+-1]
  4271  0138DE  0EFF               	movlw	-1
  4272  0138E0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4273  0138E6  0E77               	movlw	119
  4274  0138E8  6E3A               	movwf	(btemp+8)^0,c
  4275  0138EA  0E3C               	movlw	60
  4276  0138EC  6E3B               	movwf	(btemp+9)^0,c
  4277  0138EE  2A3D               	incf	(btemp+11)^0,f,c
  4278  0138F0  D003               	goto	u8144
  4279  0138F2                     u8145:
  4280  0138F2  343B               	rlcf	(btemp+9)^0,w,c
  4281  0138F4  323B               	rrcf	(btemp+9)^0,f,c
  4282  0138F6  323A               	rrcf	(btemp+8)^0,f,c
  4283  0138F8                     u8144:
  4284  0138F8  2E3D               	decfsz	(btemp+11)^0,f,c
  4285  0138FA  D7FB               	goto	u8145
  4286  0138FC  B03A               	btfsc	(btemp+8)^0,0,c
  4287  0138FE  D007               	goto	l8709
  4288                           
  4289                           ;daq.c: 86:    return nanf("");
  4290  013900  0E8D               	movlw	low (STR_36+18)
  4291  013902  6EE6               	movwf	postinc1,c
  4292  013904  0EFE               	movlw	high (STR_36+18)
  4293  013906  6EE6               	movwf	postinc1,c
  4294  013908  EC7D  F0BE         	call	_nanf	;wreg free
  4295  01390C  D23A               	goto	l1666
  4296  01390E                     l8709:
  4297                           
  4298                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4299                           ;stkvar	_chan @ sp[(0)+-1]
  4300  01390E  0EFF               	movlw	-1
  4301  013910  006F FF8C  F03D    	movff	plusw1,btemp+11
  4302  013916  0E03               	movlw	3
  4303  013918  6E3A               	movwf	(btemp+8)^0,c
  4304  01391A  0E00               	movlw	0
  4305  01391C  6E3B               	movwf	(btemp+9)^0,c
  4306  01391E  2A3D               	incf	(btemp+11)^0,f,c
  4307  013920  D003               	goto	u8164
  4308  013922                     u8165:
  4309  013922  343B               	rlcf	(btemp+9)^0,w,c
  4310  013924  323B               	rrcf	(btemp+9)^0,f,c
  4311  013926  323A               	rrcf	(btemp+8)^0,f,c
  4312  013928                     u8164:
  4313  013928  2E3D               	decfsz	(btemp+11)^0,f,c
  4314  01392A  D7FB               	goto	u8165
  4315  01392C  A03A               	btfss	(btemp+8)^0,0,c
  4316  01392E  D0EB               	goto	l8723
  4317                           
  4318                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4319                           ;stkvar	_chan @ sp[(0)+-1]
  4320  013930  0EFF               	movlw	-1
  4321  013932  006F FF8C  F03D    	movff	plusw1,btemp+11
  4322  013938  0E01               	movlw	1
  4323  01393A  6E3A               	movwf	(btemp+8)^0,c
  4324  01393C  0E00               	movlw	0
  4325  01393E  6E3B               	movwf	(btemp+9)^0,c
  4326  013940  2A3D               	incf	(btemp+11)^0,f,c
  4327  013942  D003               	goto	u8184
  4328  013944                     u8185:
  4329  013944  343B               	rlcf	(btemp+9)^0,w,c
  4330  013946  323B               	rrcf	(btemp+9)^0,f,c
  4331  013948  323A               	rrcf	(btemp+8)^0,f,c
  4332  01394A                     u8184:
  4333  01394A  2E3D               	decfsz	(btemp+11)^0,f,c
  4334  01394C  D7FB               	goto	u8185
  4335  01394E  A03A               	btfss	(btemp+8)^0,0,c
  4336  013950  D06D               	goto	l8719
  4337                           
  4338                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  4339  013952  0E7B               	movlw	123
  4340  013954  6EE6               	movwf	postinc1,c
  4341  013956  0E14               	movlw	20
  4342  013958  6EE6               	movwf	postinc1,c
  4343  01395A  0EAE               	movlw	174
  4344  01395C  6EE6               	movwf	postinc1,c
  4345  01395E  0E3D               	movlw	61
  4346  013960  6EE6               	movwf	postinc1,c
  4347  013962  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  4348  013968  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  4349  01396E  0E00               	movlw	0
  4350  013970  BE3B               	btfsc	(btemp+9)^0,7,c
  4351  013972  0EFF               	movlw	255
  4352  013974  6E3C               	movwf	(btemp+10)^0,c
  4353  013976  6E3D               	movwf	(btemp+11)^0,c
  4354  013978  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4355  01397E  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4356  013984  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4357  01398A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4358  013990  0E01               	movlw	1
  4359  013992  6EE6               	movwf	postinc1,c
  4360  013994  EC7C  F0AD         	call	___xxtofl	;wreg free
  4361  013998  0060  F0CB  FFE6   	movff	btemp,postinc1
  4362  01399E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4363  0139A4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4364  0139AA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4365                           
  4366                           ;stkvar	_chan @ sp[(-8)+-1]
  4367  0139B0  0EF7               	movlw	-9
  4368  0139B2  50E3               	movf	plusw1,w,c
  4369  0139B4  6EE6               	movwf	postinc1,c
  4370  0139B6  ECB4  F0C4         	call	_get_raw_result	;wreg free
  4371  0139BA  0060  F0C8  F03C   	movff	btemp,btemp+10
  4372  0139C0  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4373  0139C6  503C               	movf	(btemp+10)^0,w,c
  4374  0139C8  6E36               	movwf	(btemp+4)^0,c
  4375  0139CA  503D               	movf	(btemp+11)^0,w,c
  4376  0139CC  6E37               	movwf	(btemp+5)^0,c
  4377  0139CE  6A38               	clrf	(btemp+6)^0,c
  4378  0139D0  6A39               	clrf	(btemp+7)^0,c
  4379  0139D2  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4380  0139D8  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4381  0139DE  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4382  0139E4  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4383  0139EA  0E00               	movlw	0
  4384  0139EC  6EE6               	movwf	postinc1,c
  4385  0139EE  EC7C  F0AD         	call	___xxtofl	;wreg free
  4386  0139F2  0060  F0CB  FFE6   	movff	btemp,postinc1
  4387  0139F8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4388  0139FE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4389  013A04  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4390  013A0A  EC2F  F0C0         	call	___flsub	;wreg free
  4391  013A0E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4392  013A14  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4393  013A1A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4394  013A20  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4395  013A26  ECC1  F08E         	call	___flmul	;wreg free
  4396  013A2A  D1AB               	goto	l1666
  4397  013A2C                     l8719:
  4398                           
  4399                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  4400  013A2C  0E29               	movlw	41
  4401  013A2E  6EE6               	movwf	postinc1,c
  4402  013A30  0E5C               	movlw	92
  4403  013A32  6EE6               	movwf	postinc1,c
  4404  013A34  0E0F               	movlw	15
  4405  013A36  6EE6               	movwf	postinc1,c
  4406  013A38  0E3D               	movlw	61
  4407  013A3A  6EE6               	movwf	postinc1,c
  4408  013A3C  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  4409  013A42  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  4410  013A48  0E00               	movlw	0
  4411  013A4A  BE3B               	btfsc	(btemp+9)^0,7,c
  4412  013A4C  0EFF               	movlw	255
  4413  013A4E  6E3C               	movwf	(btemp+10)^0,c
  4414  013A50  6E3D               	movwf	(btemp+11)^0,c
  4415  013A52  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4416  013A58  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4417  013A5E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4418  013A64  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4419  013A6A  0E01               	movlw	1
  4420  013A6C  6EE6               	movwf	postinc1,c
  4421  013A6E  EC7C  F0AD         	call	___xxtofl	;wreg free
  4422  013A72  0060  F0CB  FFE6   	movff	btemp,postinc1
  4423  013A78  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4424  013A7E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4425  013A84  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4426                           
  4427                           ;stkvar	_chan @ sp[(-8)+-1]
  4428  013A8A  0EF7               	movlw	-9
  4429  013A8C  50E3               	movf	plusw1,w,c
  4430  013A8E  6EE6               	movwf	postinc1,c
  4431  013A90  ECB4  F0C4         	call	_get_raw_result	;wreg free
  4432  013A94  0060  F0C8  F03C   	movff	btemp,btemp+10
  4433  013A9A  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4434  013AA0  503C               	movf	(btemp+10)^0,w,c
  4435  013AA2  6E36               	movwf	(btemp+4)^0,c
  4436  013AA4  503D               	movf	(btemp+11)^0,w,c
  4437  013AA6  6E37               	movwf	(btemp+5)^0,c
  4438  013AA8  6A38               	clrf	(btemp+6)^0,c
  4439  013AAA  6A39               	clrf	(btemp+7)^0,c
  4440  013AAC  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4441  013AB2  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4442  013AB8  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4443  013ABE  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4444  013AC4  0E00               	movlw	0
  4445  013AC6  6EE6               	movwf	postinc1,c
  4446  013AC8  EC7C  F0AD         	call	___xxtofl	;wreg free
  4447  013ACC  0060  F0CB  FFE6   	movff	btemp,postinc1
  4448  013AD2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4449  013AD8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4450  013ADE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4451  013AE4  EC2F  F0C0         	call	___flsub	;wreg free
  4452  013AE8  0060  F0CB  FFE6   	movff	btemp,postinc1
  4453  013AEE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4454  013AF4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4455  013AFA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4456  013B00  ECC1  F08E         	call	___flmul	;wreg free
  4457  013B04  D13E               	goto	l1666
  4458  013B06                     l8723:
  4459                           
  4460                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  4461                           ;stkvar	_chan @ sp[(0)+-1]
  4462  013B06  0EFF               	movlw	-1
  4463  013B08  006F FF8C  F03D    	movff	plusw1,btemp+11
  4464  013B0E  0E00               	movlw	0
  4465  013B10  6E3A               	movwf	(btemp+8)^0,c
  4466  013B12  0E08               	movlw	8
  4467  013B14  6E3B               	movwf	(btemp+9)^0,c
  4468  013B16  2A3D               	incf	(btemp+11)^0,f,c
  4469  013B18  D003               	goto	u8204
  4470  013B1A                     u8205:
  4471  013B1A  343B               	rlcf	(btemp+9)^0,w,c
  4472  013B1C  323B               	rrcf	(btemp+9)^0,f,c
  4473  013B1E  323A               	rrcf	(btemp+8)^0,f,c
  4474  013B20                     u8204:
  4475  013B20  2E3D               	decfsz	(btemp+11)^0,f,c
  4476  013B22  D7FB               	goto	u8205
  4477  013B24  A03A               	btfss	(btemp+8)^0,0,c
  4478  013B26  D008               	goto	l8731
  4479                           
  4480                           ;daq.c: 96:     return 25.0;
  4481  013B28  0E00               	movlw	0
  4482  013B2A  6E32               	movwf	btemp^0,c
  4483  013B2C  0E00               	movlw	0
  4484  013B2E  6E33               	movwf	(btemp+1)^0,c
  4485  013B30  0EC8               	movlw	200
  4486  013B32  6E34               	movwf	(btemp+2)^0,c
  4487  013B34  0E41               	movlw	65
  4488  013B36  D113               	goto	L2
  4489  013B38                     l8731:
  4490                           
  4491                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4492  013B38  0E00               	movlw	0
  4493  013B3A  6EE6               	movwf	postinc1,c
  4494  013B3C  0E00               	movlw	0
  4495  013B3E  6EE6               	movwf	postinc1,c
  4496  013B40  0E7A               	movlw	122
  4497  013B42  6EE6               	movwf	postinc1,c
  4498  013B44  0E44               	movlw	68
  4499  013B46  6EE6               	movwf	postinc1,c
  4500  013B48  0E61               	movlw	97
  4501  013B4A  6EE6               	movwf	postinc1,c
  4502  013B4C  0E03               	movlw	3
  4503  013B4E  6EE6               	movwf	postinc1,c
  4504  013B50  0E84               	movlw	132
  4505  013B52  6EE6               	movwf	postinc1,c
  4506  013B54  0E40               	movlw	64
  4507  013B56  6EE6               	movwf	postinc1,c
  4508                           
  4509                           ;stkvar	_chan @ sp[(-8)+-1]
  4510  013B58  0EF7               	movlw	-9
  4511  013B5A  50E3               	movf	plusw1,w,c
  4512  013B5C  6EE6               	movwf	postinc1,c
  4513  013B5E  ECB4  F0C4         	call	_get_raw_result	;wreg free
  4514  013B62  0060  F0C8  F03C   	movff	btemp,btemp+10
  4515  013B68  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4516  013B6E  503C               	movf	(btemp+10)^0,w,c
  4517  013B70  6E36               	movwf	(btemp+4)^0,c
  4518  013B72  503D               	movf	(btemp+11)^0,w,c
  4519  013B74  6E37               	movwf	(btemp+5)^0,c
  4520  013B76  6A38               	clrf	(btemp+6)^0,c
  4521  013B78  6A39               	clrf	(btemp+7)^0,c
  4522  013B7A  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4523  013B80  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4524  013B86  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4525  013B8C  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4526  013B92  0E00               	movlw	0
  4527  013B94  6EE6               	movwf	postinc1,c
  4528  013B96  EC7C  F0AD         	call	___xxtofl	;wreg free
  4529  013B9A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4530  013BA0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4531  013BA6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4532  013BAC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4533  013BB2  ECC1  F08E         	call	___flmul	;wreg free
  4534  013BB6  0060  F0CB  FFE6   	movff	btemp,postinc1
  4535  013BBC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4536  013BC2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4537  013BC8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4538  013BCE  ECB1  F099         	call	___fldiv	;wreg free
  4539  013BD2  D0D7               	goto	l1666
  4540  013BD4                     l8735:
  4541                           
  4542                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4543                           ;stkvar	_chan @ sp[(0)+-1]
  4544  013BD4  0EFF               	movlw	-1
  4545  013BD6  006F FF8C  F03D    	movff	plusw1,btemp+11
  4546  013BDC  0E03               	movlw	3
  4547  013BDE  6E3A               	movwf	(btemp+8)^0,c
  4548  013BE0  0E00               	movlw	0
  4549  013BE2  6E3B               	movwf	(btemp+9)^0,c
  4550  013BE4  2A3D               	incf	(btemp+11)^0,f,c
  4551  013BE6  D003               	goto	u8224
  4552  013BE8                     u8225:
  4553  013BE8  343B               	rlcf	(btemp+9)^0,w,c
  4554  013BEA  323B               	rrcf	(btemp+9)^0,f,c
  4555  013BEC  323A               	rrcf	(btemp+8)^0,f,c
  4556  013BEE                     u8224:
  4557  013BEE  2E3D               	decfsz	(btemp+11)^0,f,c
  4558  013BF0  D7FB               	goto	u8225
  4559  013BF2  B03A               	btfsc	(btemp+8)^0,0,c
  4560  013BF4  D011               	goto	u8250
  4561                           
  4562                           ;stkvar	_chan @ sp[(0)+-1]
  4563  013BF6  0EFF               	movlw	-1
  4564  013BF8  006F FF8C  F03D    	movff	plusw1,btemp+11
  4565  013BFE  0E00               	movlw	0
  4566  013C00  6E3A               	movwf	(btemp+8)^0,c
  4567  013C02  0E08               	movlw	8
  4568  013C04  6E3B               	movwf	(btemp+9)^0,c
  4569  013C06  2A3D               	incf	(btemp+11)^0,f,c
  4570  013C08  D003               	goto	u8244
  4571  013C0A                     u8245:
  4572  013C0A  343B               	rlcf	(btemp+9)^0,w,c
  4573  013C0C  323B               	rrcf	(btemp+9)^0,f,c
  4574  013C0E  323A               	rrcf	(btemp+8)^0,f,c
  4575  013C10                     u8244:
  4576  013C10  2E3D               	decfsz	(btemp+11)^0,f,c
  4577  013C12  D7FB               	goto	u8245
  4578  013C14  A03A               	btfss	(btemp+8)^0,0,c
  4579  013C16  D04E               	goto	l8743
  4580  013C18                     u8250:
  4581                           
  4582                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4583  013C18  0E00               	movlw	0
  4584  013C1A  6EE6               	movwf	postinc1,c
  4585  013C1C  0E00               	movlw	0
  4586  013C1E  6EE6               	movwf	postinc1,c
  4587  013C20  0E7A               	movlw	122
  4588  013C22  6EE6               	movwf	postinc1,c
  4589  013C24  0E44               	movlw	68
  4590  013C26  6EE6               	movwf	postinc1,c
  4591  013C28  0E00               	movlw	0
  4592  013C2A  6EE6               	movwf	postinc1,c
  4593  013C2C  0E00               	movlw	0
  4594  013C2E  6EE6               	movwf	postinc1,c
  4595  013C30  0E20               	movlw	32
  4596  013C32  6EE6               	movwf	postinc1,c
  4597  013C34  0E3F               	movlw	63
  4598  013C36  6EE6               	movwf	postinc1,c
  4599                           
  4600                           ;stkvar	_chan @ sp[(-8)+-1]
  4601  013C38  0EF7               	movlw	-9
  4602  013C3A  50E3               	movf	plusw1,w,c
  4603  013C3C  6EE6               	movwf	postinc1,c
  4604  013C3E  ECB4  F0C4         	call	_get_raw_result	;wreg free
  4605  013C42  0060  F0C8  F03C   	movff	btemp,btemp+10
  4606  013C48  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4607  013C4E  503C               	movf	(btemp+10)^0,w,c
  4608  013C50  6E36               	movwf	(btemp+4)^0,c
  4609  013C52  503D               	movf	(btemp+11)^0,w,c
  4610  013C54  6E37               	movwf	(btemp+5)^0,c
  4611  013C56  6A38               	clrf	(btemp+6)^0,c
  4612  013C58  6A39               	clrf	(btemp+7)^0,c
  4613  013C5A  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4614  013C60  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4615  013C66  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4616  013C6C  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4617  013C72  0E00               	movlw	0
  4618  013C74  6EE6               	movwf	postinc1,c
  4619  013C76  EC7C  F0AD         	call	___xxtofl	;wreg free
  4620  013C7A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4621  013C80  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4622  013C86  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4623  013C8C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4624  013C92  ECC1  F08E         	call	___flmul	;wreg free
  4625  013C96  0060  F0CB  FFE6   	movff	btemp,postinc1
  4626  013C9C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4627  013CA2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4628  013CA8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4629  013CAE  ECB1  F099         	call	___fldiv	;wreg free
  4630  013CB2  D067               	goto	l1666
  4631  013CB4                     l8743:
  4632                           
  4633                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4634  013CB4  0E00               	movlw	0
  4635  013CB6  6EE6               	movwf	postinc1,c
  4636  013CB8  0E00               	movlw	0
  4637  013CBA  6EE6               	movwf	postinc1,c
  4638  013CBC  0E7A               	movlw	122
  4639  013CBE  6EE6               	movwf	postinc1,c
  4640  013CC0  0E44               	movlw	68
  4641  013CC2  6EE6               	movwf	postinc1,c
  4642  013CC4  0E61               	movlw	97
  4643  013CC6  6EE6               	movwf	postinc1,c
  4644  013CC8  0E03               	movlw	3
  4645  013CCA  6EE6               	movwf	postinc1,c
  4646  013CCC  0E84               	movlw	132
  4647  013CCE  6EE6               	movwf	postinc1,c
  4648  013CD0  0E40               	movlw	64
  4649  013CD2  6EE6               	movwf	postinc1,c
  4650                           
  4651                           ;stkvar	_chan @ sp[(-8)+-1]
  4652  013CD4  0EF7               	movlw	-9
  4653  013CD6  50E3               	movf	plusw1,w,c
  4654  013CD8  6EE6               	movwf	postinc1,c
  4655  013CDA  ECB4  F0C4         	call	_get_raw_result	;wreg free
  4656  013CDE  0060  F0C8  F03C   	movff	btemp,btemp+10
  4657  013CE4  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4658  013CEA  503C               	movf	(btemp+10)^0,w,c
  4659  013CEC  6E36               	movwf	(btemp+4)^0,c
  4660  013CEE  503D               	movf	(btemp+11)^0,w,c
  4661  013CF0  6E37               	movwf	(btemp+5)^0,c
  4662  013CF2  6A38               	clrf	(btemp+6)^0,c
  4663  013CF4  6A39               	clrf	(btemp+7)^0,c
  4664  013CF6  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4665  013CFC  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4666  013D02  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4667  013D08  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4668  013D0E  0E00               	movlw	0
  4669  013D10  6EE6               	movwf	postinc1,c
  4670  013D12  EC7C  F0AD         	call	___xxtofl	;wreg free
  4671  013D16  0060  F0CB  FFE6   	movff	btemp,postinc1
  4672  013D1C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4673  013D22  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4674  013D28  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4675  013D2E  ECC1  F08E         	call	___flmul	;wreg free
  4676  013D32  0060  F0CB  FFE6   	movff	btemp,postinc1
  4677  013D38  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4678  013D3E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4679  013D44  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4680  013D4A  ECB1  F099         	call	___fldiv	;wreg free
  4681  013D4E  D019               	goto	l1666
  4682  013D50                     l8749:
  4683                           
  4684                           ;daq.c: 109:   return 0.0;
  4685  013D50  0E00               	movlw	0
  4686  013D52  6E32               	movwf	btemp^0,c
  4687  013D54  0E00               	movlw	0
  4688  013D56  6E33               	movwf	(btemp+1)^0,c
  4689  013D58  0E00               	movlw	0
  4690  013D5A  6E34               	movwf	(btemp+2)^0,c
  4691  013D5C  0E00               	movlw	0
  4692  013D5E                     L2:
  4693  013D5E  6E35               	movwf	(btemp+3)^0,c
  4694  013D60  D010               	goto	l1666
  4695  013D62                     l8757:
  4696                           
  4697                           ;stkvar	_to_what @ sp[(0)+-2]
  4698  013D62  0EFE               	movlw	-2
  4699  013D64  50E3               	movf	plusw1,w,c
  4700  013D66  6E3C               	movwf	(btemp+10)^0,c
  4701  013D68  6A3D               	clrf	(btemp+11)^0,c
  4702                           
  4703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4704                           ; Switch size 1, requested type "simple"
  4705                           ; Number of cases is 1, Range of values is 0 to 0
  4706                           ; switch strategies available:
  4707                           ; Name         Instructions Cycles
  4708                           ; simple_byte            4     3 (average)
  4709                           ;	Chosen strategy is simple_byte
  4710  013D6A  503D               	movf	(btemp+11)^0,w,c
  4711  013D6C  0A00               	xorlw	0	; case 0
  4712  013D6E  A4D8               	btfss	status,2,c
  4713  013D70  D7EF               	goto	l8749
  4714                           
  4715                           ; Switch size 1, requested type "simple"
  4716                           ; Number of cases is 2, Range of values is 0 to 1
  4717                           ; switch strategies available:
  4718                           ; Name         Instructions Cycles
  4719                           ; simple_byte            7     4 (average)
  4720                           ;	Chosen strategy is simple_byte
  4721  013D72  503C               	movf	(btemp+10)^0,w,c
  4722  013D74  0A00               	xorlw	0	; case 0
  4723  013D76  B4D8               	btfsc	status,2,c
  4724  013D78  D5B2               	goto	l8703
  4725  013D7A  0A01               	xorlw	1	; case 1
  4726  013D7C  B4D8               	btfsc	status,2,c
  4727  013D7E  D72A               	goto	l8735
  4728  013D80  D7E7               	goto	l8749
  4729  013D82                     l1666:
  4730                           
  4731                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4732  013D82  52E5               	movf	postdec1,f,c
  4733  013D84  52E5               	movf	postdec1,f,c
  4734  013D86  0012               	return		;funcret
  4735  013D88                     __end_of_conv_raw_result:
  4736                           	opt callstack 0
  4737                           
  4738 ;; *************** function _nanf *****************
  4739 ;; Defined at:
  4740 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  s               2  [STACK] PTR const unsigned char 
  4743 ;;		 -> STR_42(1), 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  u               4  [STACK] struct .
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  4  [STACK] float 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/39
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    6
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_conv_raw_result
  4766 ;; This function uses a reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text17
  4770  017CFA                     __ptext17:
  4771                           	opt callstack 0
  4772  017CFA                     _nanf:
  4773                           	opt callstack 0
  4774                           
  4775                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4776  017CFA  52E6               	movf	postinc1,f,c
  4777  017CFC  52E6               	movf	postinc1,f,c
  4778  017CFE  52E6               	movf	postinc1,f,c
  4779  017D00  52E6               	movf	postinc1,f,c
  4780                           
  4781                           ;incstack = 0
  4782  017D02  0EFF               	movlw	255
  4783  017D04  6E3A               	movwf	(btemp+8)^0,c
  4784  017D06  0EFF               	movlw	255
  4785  017D08  6E3B               	movwf	(btemp+9)^0,c
  4786  017D0A  0EFF               	movlw	255
  4787  017D0C  6E3C               	movwf	(btemp+10)^0,c
  4788  017D0E  0E7F               	movlw	127
  4789  017D10  6E3D               	movwf	(btemp+11)^0,c
  4790                           
  4791                           ;stkvar	_u @ sp[(-4)+0]
  4792  017D12  0EFC               	movlw	-4
  4793  017D14  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4794  017D1A  0EFD               	movlw	-3
  4795  017D1C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4796  017D22  0EFE               	movlw	-2
  4797  017D24  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4798  017D2A  0EFF               	movlw	-1
  4799  017D2C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4800                           
  4801                           ;stkvar	_u @ sp[(-4)+0]
  4802  017D32  0EFC               	movlw	-4
  4803  017D34  006F FF8C  F032    	movff	plusw1,btemp
  4804  017D3A  0EFD               	movlw	-3
  4805  017D3C  006F FF8C  F033    	movff	plusw1,btemp+1
  4806  017D42  0EFE               	movlw	-2
  4807  017D44  006F FF8C  F034    	movff	plusw1,btemp+2
  4808  017D4A  0EFF               	movlw	-1
  4809  017D4C  006F FF8C  F035    	movff	plusw1,btemp+3
  4810                           
  4811                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4812  017D52  0EFA               	movlw	250
  4813  017D54  26E1               	addwf	fsr1l,f,c
  4814  017D56  0EFF               	movlw	255
  4815  017D58  22E2               	addwfc	fsr1h,f,c
  4816  017D5A  0012               	return		;funcret
  4817  017D5C                     __end_of_nanf:
  4818                           	opt callstack 0
  4819                           
  4820 ;; *************** function _get_raw_result *****************
  4821 ;; Defined at:
  4822 ;;		line 72 in file "daq.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  index           1  [STACK] const enum E16136
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  2  [STACK] unsigned short 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/39
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4840 ;;Total ram usage:        0 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    6
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_conv_raw_result
  4847 ;; This function uses a reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text18
  4851  018968                     __ptext18:
  4852                           	opt callstack 0
  4853  018968                     _get_raw_result:
  4854                           	opt callstack 22
  4855                           
  4856                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4857                           ;stkvar	_index @ sp[(0)+-1]
  4858                           
  4859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4860                           ;incstack = 0
  4861  018968  0EFF               	movlw	-1
  4862  01896A  50E3               	movf	plusw1,w,c
  4863  01896C  0D02               	mullw	2
  4864  01896E  50F3               	movf	243,w,c
  4865  018970  0FC7               	addlw	low _R
  4866  018972  6ED9               	movwf	fsr2l,c
  4867  018974  6ADA               	clrf	fsr2h,c
  4868  018976  006F FF78  F032    	movff	postinc2,btemp
  4869  01897C  006F FF74  F033    	movff	postdec2,btemp+1
  4870                           
  4871                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4872  018982  52E5               	movf	postdec1,f,c
  4873  018984  0012               	return		;funcret
  4874  018986                     __end_of_get_raw_result:
  4875                           	opt callstack 0
  4876                           
  4877 ;; *************** function ___xxtofl *****************
  4878 ;; Defined at:
  4879 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  sign            1  [STACK] unsigned char 
  4882 ;;  val             4  [STACK] long 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  arg             4  [STACK] unsigned long 
  4885 ;;  exp             1  [STACK] unsigned char 
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  4  [STACK] unsigned char 
  4888 ;; Registers used:
  4889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/39
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4899 ;;Total ram usage:        0 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    6
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_conv_raw_result
  4906 ;; This function uses a reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text19
  4910  015AF8                     __ptext19:
  4911                           	opt callstack 0
  4912  015AF8                     ___xxtofl:
  4913                           	opt callstack 0
  4914                           
  4915                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4916  015AF8  0E05               	movlw	5
  4917  015AFA  26E1               	addwf	fsr1l,f,c
  4918  015AFC  0E00               	movlw	0
  4919  015AFE  22E2               	addwfc	fsr1h,f,c
  4920                           
  4921                           ;stkvar	_sign @ sp[(-5)+-1]
  4922                           
  4923                           ;incstack = 0
  4924  015B00  0EFA               	movlw	-6
  4925  015B02  50E3               	movf	plusw1,w,c
  4926  015B04  B4D8               	btfsc	status,2,c
  4927  015B06  D01D               	goto	l8181
  4928                           
  4929                           ;stkvar	_val @ sp[(-5)+-5]
  4930  015B08  0EF9               	movlw	-7
  4931  015B0A  AEE3               	btfss	plusw1,7,c
  4932  015B0C  D01A               	goto	l8181
  4933                           
  4934                           ;stkvar	_val @ sp[(-5)+-5]
  4935  015B0E  0EF6               	movlw	-10
  4936  015B10  006F FF8C  F03A    	movff	plusw1,btemp+8
  4937  015B16  0EF7               	movlw	-9
  4938  015B18  006F FF8C  F03B    	movff	plusw1,btemp+9
  4939  015B1E  0EF8               	movlw	-8
  4940  015B20  006F FF8C  F03C    	movff	plusw1,btemp+10
  4941  015B26  0EF9               	movlw	-7
  4942  015B28  006F FF8C  F03D    	movff	plusw1,btemp+11
  4943  015B2E  1E3A               	comf	(btemp+8)^0,f,c
  4944  015B30  1E3B               	comf	(btemp+9)^0,f,c
  4945  015B32  1E3C               	comf	(btemp+10)^0,f,c
  4946  015B34  1E3D               	comf	(btemp+11)^0,f,c
  4947  015B36  2A3A               	incf	(btemp+8)^0,f,c
  4948  015B38  0E00               	movlw	0
  4949  015B3A  223B               	addwfc	(btemp+9)^0,f,c
  4950  015B3C  223C               	addwfc	(btemp+10)^0,f,c
  4951  015B3E  223D               	addwfc	(btemp+11)^0,f,c
  4952  015B40  D010               	goto	L3
  4953  015B42                     l8181:
  4954                           
  4955                           ;stkvar	_val @ sp[(-5)+-5]
  4956  015B42  0EF6               	movlw	-10
  4957  015B44  006F FF8C  F03A    	movff	plusw1,btemp+8
  4958  015B4A  0EF7               	movlw	-9
  4959  015B4C  006F FF8C  F03B    	movff	plusw1,btemp+9
  4960  015B52  0EF8               	movlw	-8
  4961  015B54  006F FF8C  F03C    	movff	plusw1,btemp+10
  4962  015B5A  0EF9               	movlw	-7
  4963  015B5C  006F FF8C  F03D    	movff	plusw1,btemp+11
  4964  015B62                     L3:
  4965                           
  4966                           ;stkvar	_arg @ sp[(-5)+0]
  4967  015B62  0EFB               	movlw	-5
  4968  015B64  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4969  015B6A  0EFC               	movlw	-4
  4970  015B6C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4971  015B72  0EFD               	movlw	-3
  4972  015B74  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4973  015B7A  0EFE               	movlw	-2
  4974  015B7C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4975                           
  4976                           ;stkvar	_val @ sp[(-5)+-5]
  4977  015B82  0EF6               	movlw	-10
  4978  015B84  50E3               	movf	plusw1,w,c
  4979  015B86  E113               	bnz	l8189
  4980  015B88  0EF7               	movlw	-9
  4981  015B8A  50E3               	movf	plusw1,w,c
  4982  015B8C  E110               	bnz	l8189
  4983  015B8E  0EF8               	movlw	-8
  4984  015B90  50E3               	movf	plusw1,w,c
  4985  015B92  E10D               	bnz	l8189
  4986  015B94  0EF9               	movlw	-7
  4987  015B96  50E3               	movf	plusw1,w,c
  4988  015B98  A4D8               	btfss	status,2,c
  4989  015B9A  D009               	goto	l8189
  4990  015B9C  0E00               	movlw	0
  4991  015B9E  6E32               	movwf	btemp^0,c
  4992  015BA0  0E00               	movlw	0
  4993  015BA2  6E33               	movwf	(btemp+1)^0,c
  4994  015BA4  0E00               	movlw	0
  4995  015BA6  6E34               	movwf	(btemp+2)^0,c
  4996  015BA8  0E00               	movlw	0
  4997  015BAA  6E35               	movwf	(btemp+3)^0,c
  4998  015BAC  D0A2               	goto	l2736
  4999  015BAE                     l8189:
  5000  015BAE  0E96               	movlw	150
  5001  015BB0  6E3D               	movwf	(btemp+11)^0,c
  5002                           
  5003                           ;stkvar	_exp @ sp[(-5)+4]
  5004  015BB2  0EFF               	movlw	-1
  5005  015BB4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5006  015BBA  D00B               	goto	l8193
  5007  015BBC                     l8191:
  5008                           
  5009                           ;stkvar	_exp @ sp[(-5)+4]
  5010  015BBC  0EFF               	movlw	-1
  5011  015BBE  2AE3               	incf	plusw1,f,c
  5012                           
  5013                           ;stkvar	_arg @ sp[(-5)+0]
  5014  015BC0  90D8               	bcf	status,0,c
  5015  015BC2  0EFE               	movlw	-2
  5016  015BC4  32E3               	rrcf	plusw1,f,c
  5017  015BC6  0EFD               	movlw	-3
  5018  015BC8  32E3               	rrcf	plusw1,f,c
  5019  015BCA  0EFC               	movlw	-4
  5020  015BCC  32E3               	rrcf	plusw1,f,c
  5021  015BCE  0EFB               	movlw	-5
  5022  015BD0  32E3               	rrcf	plusw1,f,c
  5023  015BD2                     l8193:
  5024                           
  5025                           ;stkvar	_arg @ sp[(-5)+0]
  5026  015BD2  50E1               	movf	fsr1l,w,c
  5027  015BD4  0FFB               	addlw	-5
  5028  015BD6  6ED9               	movwf	fsr2l,c
  5029  015BD8  50E2               	movf	fsr1h,w,c
  5030  015BDA  6EDA               	movwf	fsr2h,c
  5031  015BDC  0EFF               	movlw	255
  5032  015BDE  22DA               	addwfc	fsr2h,f,c
  5033  015BE0  52DE               	movf	postinc2,f,c
  5034  015BE2  52DE               	movf	postinc2,f,c
  5035  015BE4  52DE               	movf	postinc2,f,c
  5036  015BE6  0EFE               	movlw	254
  5037  015BE8  14DD               	andwf	postdec2,w,c
  5038  015BEA  B4D8               	btfsc	status,2,c
  5039  015BEC  D018               	goto	l8201
  5040  015BEE  D7E6               	goto	l8191
  5041  015BF0                     l8195:
  5042                           
  5043                           ;stkvar	_exp @ sp[(-5)+4]
  5044  015BF0  0EFF               	movlw	-1
  5045  015BF2  2AE3               	incf	plusw1,f,c
  5046                           
  5047                           ;stkvar	_arg @ sp[(-5)+0]
  5048  015BF4  50E1               	movf	fsr1l,w,c
  5049  015BF6  0FFB               	addlw	-5
  5050  015BF8  6ED9               	movwf	fsr2l,c
  5051  015BFA  50E2               	movf	fsr1h,w,c
  5052  015BFC  6EDA               	movwf	fsr2h,c
  5053  015BFE  0EFF               	movlw	255
  5054  015C00  22DA               	addwfc	fsr2h,f,c
  5055  015C02  2ADE               	incf	postinc2,f,c
  5056  015C04  0E00               	movlw	0
  5057  015C06  22DE               	addwfc	postinc2,f,c
  5058  015C08  22DE               	addwfc	postinc2,f,c
  5059  015C0A  22DE               	addwfc	postinc2,f,c
  5060                           
  5061                           ;stkvar	_arg @ sp[(-5)+0]
  5062  015C0C  90D8               	bcf	status,0,c
  5063  015C0E  0EFE               	movlw	-2
  5064  015C10  32E3               	rrcf	plusw1,f,c
  5065  015C12  0EFD               	movlw	-3
  5066  015C14  32E3               	rrcf	plusw1,f,c
  5067  015C16  0EFC               	movlw	-4
  5068  015C18  32E3               	rrcf	plusw1,f,c
  5069  015C1A  0EFB               	movlw	-5
  5070  015C1C  32E3               	rrcf	plusw1,f,c
  5071  015C1E                     l8201:
  5072                           
  5073                           ;stkvar	_arg @ sp[(-5)+0]
  5074  015C1E  50E1               	movf	fsr1l,w,c
  5075  015C20  0FFB               	addlw	-5
  5076  015C22  6ED9               	movwf	fsr2l,c
  5077  015C24  50E2               	movf	fsr1h,w,c
  5078  015C26  6EDA               	movwf	fsr2h,c
  5079  015C28  0EFF               	movlw	255
  5080  015C2A  22DA               	addwfc	fsr2h,f,c
  5081  015C2C  52DE               	movf	postinc2,f,c
  5082  015C2E  52DE               	movf	postinc2,f,c
  5083  015C30  52DE               	movf	postinc2,f,c
  5084  015C32  0EFF               	movlw	255
  5085  015C34  14DD               	andwf	postdec2,w,c
  5086  015C36  B4D8               	btfsc	status,2,c
  5087  015C38  D00C               	goto	l8205
  5088  015C3A  D7DA               	goto	l8195
  5089  015C3C                     l8203:
  5090                           
  5091                           ;stkvar	_exp @ sp[(-5)+4]
  5092  015C3C  0EFF               	movlw	-1
  5093  015C3E  06E3               	decf	plusw1,f,c
  5094                           
  5095                           ;stkvar	_arg @ sp[(-5)+0]
  5096  015C40  90D8               	bcf	status,0,c
  5097  015C42  0EFB               	movlw	-5
  5098  015C44  36E3               	rlcf	plusw1,f,c
  5099  015C46  0EFC               	movlw	-4
  5100  015C48  36E3               	rlcf	plusw1,f,c
  5101  015C4A  0EFD               	movlw	-3
  5102  015C4C  36E3               	rlcf	plusw1,f,c
  5103  015C4E  0EFE               	movlw	-2
  5104  015C50  36E3               	rlcf	plusw1,f,c
  5105  015C52                     l8205:
  5106                           
  5107                           ;stkvar	_arg @ sp[(-5)+0]
  5108  015C52  0EFD               	movlw	-3
  5109  015C54  BEE3               	btfsc	plusw1,7,c
  5110  015C56  D007               	goto	u7970
  5111                           
  5112                           ;stkvar	_exp @ sp[(-5)+4]
  5113  015C58  0EFF               	movlw	-1
  5114  015C5A  006F FF8C  F032    	movff	plusw1,btemp
  5115  015C60  0E02               	movlw	2
  5116  015C62  6032               	cpfslt	btemp^0,c
  5117  015C64  D7EB               	goto	l8203
  5118  015C66                     u7970:
  5119                           
  5120                           ;stkvar	_exp @ sp[(-5)+4]
  5121  015C66  0EFF               	movlw	-1
  5122  015C68  B0E3               	btfsc	plusw1,0,c
  5123  015C6A  D002               	goto	l8213
  5124                           
  5125                           ;stkvar	_arg @ sp[(-5)+0]
  5126  015C6C  0EFD               	movlw	-3
  5127  015C6E  9EE3               	bcf	plusw1,7,c
  5128  015C70                     l8213:
  5129                           
  5130                           ;stkvar	_exp @ sp[(-5)+4]
  5131  015C70  50E1               	movf	fsr1l,w,c
  5132  015C72  0FFF               	addlw	-1
  5133  015C74  6ED9               	movwf	fsr2l,c
  5134  015C76  50E2               	movf	fsr1h,w,c
  5135  015C78  6EDA               	movwf	fsr2h,c
  5136  015C7A  0EFF               	movlw	255
  5137  015C7C  22DA               	addwfc	fsr2h,f,c
  5138  015C7E  90D8               	bcf	status,0,c
  5139  015C80  32DF               	rrcf	indf2,f,c
  5140                           
  5141                           ;stkvar	_exp @ sp[(-5)+4]
  5142  015C82  0EFF               	movlw	-1
  5143  015C84  006F FF8C  F03D    	movff	plusw1,btemp+11
  5144  015C8A  0060  F0F4  F036   	movff	btemp+11,btemp+4
  5145  015C90  6A37               	clrf	(btemp+5)^0,c
  5146  015C92  6A38               	clrf	(btemp+6)^0,c
  5147  015C94  6A39               	clrf	(btemp+7)^0,c
  5148  015C96  0060  F0D8  F039   	movff	btemp+4,btemp+7
  5149  015C9C  6A38               	clrf	(btemp+6)^0,c
  5150  015C9E  6A37               	clrf	(btemp+5)^0,c
  5151  015CA0  6A36               	clrf	(btemp+4)^0,c
  5152                           
  5153                           ;stkvar	_arg @ sp[(-5)+0]
  5154  015CA2  50E1               	movf	fsr1l,w,c
  5155  015CA4  0FFB               	addlw	-5
  5156  015CA6  6ED9               	movwf	fsr2l,c
  5157  015CA8  50E2               	movf	fsr1h,w,c
  5158  015CAA  6EDA               	movwf	fsr2h,c
  5159  015CAC  0EFF               	movlw	255
  5160  015CAE  22DA               	addwfc	fsr2h,f,c
  5161  015CB0  5036               	movf	(btemp+4)^0,w,c
  5162  015CB2  12DE               	iorwf	postinc2,f,c
  5163  015CB4  5037               	movf	(btemp+5)^0,w,c
  5164  015CB6  12DE               	iorwf	postinc2,f,c
  5165  015CB8  5038               	movf	(btemp+6)^0,w,c
  5166  015CBA  12DE               	iorwf	postinc2,f,c
  5167  015CBC  5039               	movf	(btemp+7)^0,w,c
  5168  015CBE  12DE               	iorwf	postinc2,f,c
  5169                           
  5170                           ;stkvar	_sign @ sp[(-5)+-1]
  5171  015CC0  0EFA               	movlw	-6
  5172  015CC2  50E3               	movf	plusw1,w,c
  5173  015CC4  B4D8               	btfsc	status,2,c
  5174  015CC6  D005               	goto	l8223
  5175                           
  5176                           ;stkvar	_val @ sp[(-5)+-5]
  5177  015CC8  0EF9               	movlw	-7
  5178  015CCA  AEE3               	btfss	plusw1,7,c
  5179  015CCC  D002               	goto	l8223
  5180                           
  5181                           ;stkvar	_arg @ sp[(-5)+0]
  5182  015CCE  0EFE               	movlw	-2
  5183  015CD0  8EE3               	bsf	plusw1,7,c
  5184  015CD2                     l8223:
  5185                           
  5186                           ;stkvar	_arg @ sp[(-5)+0]
  5187  015CD2  0EFB               	movlw	-5
  5188  015CD4  006F FF8C  F032    	movff	plusw1,btemp
  5189  015CDA  0EFC               	movlw	-4
  5190  015CDC  006F FF8C  F033    	movff	plusw1,btemp+1
  5191  015CE2  0EFD               	movlw	-3
  5192  015CE4  006F FF8C  F034    	movff	plusw1,btemp+2
  5193  015CEA  0EFE               	movlw	-2
  5194  015CEC  006F FF8C  F035    	movff	plusw1,btemp+3
  5195  015CF2                     l2736:
  5196                           
  5197                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5198  015CF2  0EF6               	movlw	246
  5199  015CF4  26E1               	addwf	fsr1l,f,c
  5200  015CF6  0EFF               	movlw	255
  5201  015CF8  22E2               	addwfc	fsr1h,f,c
  5202  015CFA  0012               	return		;funcret
  5203  015CFC                     __end_of___xxtofl:
  5204                           	opt callstack 0
  5205                           
  5206 ;; *************** function _clear_hid_pflags *****************
  5207 ;; Defined at:
  5208 ;;		line 47 in file "hid.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  h               1  [STACK] PTR struct H_data
  5211 ;;		 -> H(7), 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;		None
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  1  [STACK] void 
  5216 ;; Registers used:
  5217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5227 ;;Total ram usage:        0 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    6
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_main
  5234 ;; This function uses a reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text20
  5238  018856                     __ptext20:
  5239                           	opt callstack 0
  5240  018856                     _clear_hid_pflags:
  5241                           	opt callstack 24
  5242                           
  5243                           ;hid.c: 47: void clear_hid_pflags(H_data* h);hid.c: 48: {;hid.c: 49:  h->select_p = SW_O
      +                          FF;
  5244                           ;stkvar	_h @ sp[(0)+-1]
  5245                           
  5246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5247                           ;incstack = 0
  5248  018856  0EFF               	movlw	-1
  5249  018858  50E3               	movf	plusw1,w,c
  5250  01885A  6ED9               	movwf	fsr2l,c
  5251  01885C  6ADA               	clrf	fsr2h,c
  5252  01885E  0E03               	movlw	3
  5253  018860  26D9               	addwf	fsr2l,f,c
  5254  018862  0E00               	movlw	0
  5255  018864  6EDF               	movwf	indf2,c
  5256                           
  5257                           ;hid.c: 50:  h->enter_p = SW_OFF;
  5258                           ;stkvar	_h @ sp[(0)+-1]
  5259  018866  0EFF               	movlw	-1
  5260  018868  50E3               	movf	plusw1,w,c
  5261  01886A  6ED9               	movwf	fsr2l,c
  5262  01886C  6ADA               	clrf	fsr2h,c
  5263  01886E  0E05               	movlw	5
  5264  018870  26D9               	addwf	fsr2l,f,c
  5265  018872  0E00               	movlw	0
  5266  018874  6EDF               	movwf	indf2,c
  5267                           
  5268                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5269  018876  52E5               	movf	postdec1,f,c
  5270  018878  0012               	return		;funcret
  5271  01887A                     __end_of_clear_hid_pflags:
  5272                           	opt callstack 0
  5273                           
  5274 ;; *************** function _clear_adc_scan *****************
  5275 ;; Defined at:
  5276 ;;		line 64 in file "daq.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1  [STACK] void 
  5283 ;; Registers used:
  5284 ;;		None
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/39
  5287 ;;		On exit  : 3F/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5294 ;;Total ram usage:        0 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    6
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_main
  5301 ;; This function uses a reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text21
  5305  018B9E                     __ptext21:
  5306                           	opt callstack 0
  5307  018B9E                     _clear_adc_scan:
  5308                           	opt callstack 24
  5309                           
  5310                           ;daq.c: 66:  R.done = 0;
  5311                           
  5312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5313                           ;incstack = 0
  5314  018B9E  0100               	movlb	0	; () banked
  5315  018BA0  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  5316                           
  5317                           ; BSR set to: 0
  5318                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  5319  018BA2  0012               	return		;funcret
  5320  018BA4                     __end_of_clear_adc_scan:
  5321                           	opt callstack 0
  5322                           
  5323 ;; *************** function _check_help *****************
  5324 ;; Defined at:
  5325 ;;		line 40 in file "mconfig.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  flipper         1  [STACK] const _Bool 
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  estatus         1  [STACK] _Bool 
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  1  [STACK] _Bool 
  5332 ;; Registers used:
  5333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5334 ;; Tracked objects:
  5335 ;;		On entry : 3F/2
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5343 ;;Total ram usage:        0 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; Hardware stack levels required when called:   18
  5346 ;; This function calls:
  5347 ;;		_StartTimer
  5348 ;;		_TimerDone
  5349 ;;		_display_help
  5350 ;;		_display_info
  5351 ;;		_get_vterm_ptr
  5352 ;;		_help_button
  5353 ;;		_mode_lamp_bright
  5354 ;;		_mode_lamp_dim
  5355 ;;		_set_display_info
  5356 ;;		_set_temp_display_help
  5357 ;;		_set_vterm
  5358 ;;		_sprintf
  5359 ;;		_update_lcd
  5360 ;;		_vterm_dump
  5361 ;; This function is called by:
  5362 ;;		_main
  5363 ;; This function uses a reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text22
  5367  0158D0                     __ptext22:
  5368                           	opt callstack 0
  5369  0158D0                     _check_help:
  5370                           	opt callstack 0
  5371                           
  5372                           ; BSR set to: 0
  5373                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5374  0158D0  52E6               	movf	postinc1,f,c
  5375                           
  5376                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  5377                           ;stkvar	_estatus @ sp[(-1)+0]
  5378                           
  5379                           ;incstack = 0
  5380  0158D2  0EFF               	movlw	-1
  5381  0158D4  6AE3               	clrf	plusw1,c
  5382                           
  5383                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  5384  0158D6  EC5B  F0C1         	call	_help_button	;wreg free
  5385  0158DA  5032               	movf	btemp^0,w,c
  5386  0158DC  B4D8               	btfsc	status,2,c
  5387  0158DE  D0D3               	goto	l10461
  5388  0158E0  ECBF  F0C5         	call	_display_info	;wreg free
  5389  0158E4  0432               	decf	btemp^0,w,c
  5390  0158E6  B4D8               	btfsc	status,2,c
  5391  0158E8  D0CE               	goto	l10461
  5392                           
  5393                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  5394  0158EA  0EDC               	movlw	220
  5395  0158EC  6EE6               	movwf	postinc1,c
  5396  0158EE  0E05               	movlw	5
  5397  0158F0  6EE6               	movwf	postinc1,c
  5398  0158F2  0E0B               	movlw	11
  5399  0158F4  6EE6               	movwf	postinc1,c
  5400  0158F6  EC3D  F0C1         	call	_StartTimer	;wreg free
  5401                           
  5402                           ;mconfig.c: 48:   if (V.debug)
  5403  0158FA  0102               	movlb	2	; () banked
  5404  0158FC  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  5405                           
  5406                           ; BSR set to: 2
  5407                           ;mconfig.c: 49:    vterm_dump();
  5408  0158FE  ECC2  F0B3         	call	_vterm_dump	;wreg free
  5409                           
  5410                           ;mconfig.c: 51:   set_vterm(1);
  5411  015902  0E01               	movlw	1
  5412  015904  6EE6               	movwf	postinc1,c
  5413  015906  ECFE  F0C4         	call	_set_vterm	;wreg free
  5414                           
  5415                           ; BSR set to: 5
  5416                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  5417  01590A  ECBF  F0C5         	call	_display_info	;wreg free
  5418  01590E  5032               	movf	btemp^0,w,c
  5419  015910  6EE6               	movwf	postinc1,c
  5420  015912  EC7F  F0C5         	call	_set_temp_display_help	;wreg free
  5421                           
  5422                           ; BSR set to: 2
  5423                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  5424  015916  0E01               	movlw	1
  5425  015918  6EE6               	movwf	postinc1,c
  5426  01591A  ECC3  F0C4         	call	_set_display_info	;wreg free
  5427                           
  5428                           ;mconfig.c: 54:   if (flipper) {
  5429                           ;stkvar	_flipper @ sp[(-1)+-1]
  5430  01591E  0EFE               	movlw	-2
  5431  015920  50E3               	movf	plusw1,w,c
  5432  015922  B4D8               	btfsc	status,2,c
  5433  015924  D019               	goto	l10447
  5434                           
  5435                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  5436  015926  0EC1               	movlw	low STR_24
  5437  015928  6EE6               	movwf	postinc1,c
  5438  01592A  0EFF               	movlw	high STR_24
  5439  01592C  6EE6               	movwf	postinc1,c
  5440  01592E  0E8E               	movlw	low STR_26
  5441  015930  6EE6               	movwf	postinc1,c
  5442  015932  0EFE               	movlw	high STR_26
  5443  015934  6EE6               	movwf	postinc1,c
  5444  015936  0E01               	movlw	1
  5445  015938  6EE6               	movwf	postinc1,c
  5446  01593A  0E00               	movlw	0
  5447  01593C  6EE6               	movwf	postinc1,c
  5448  01593E  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  5449  015942  0060  F0CB  FFE6   	movff	btemp,postinc1
  5450  015948  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5451  01594E  0E06               	movlw	6
  5452  015950  6EE6               	movwf	postinc1,c
  5453  015952  EC88  F0B6         	call	_sprintf	;wreg free
  5454                           
  5455                           ;mconfig.c: 56:   } else {
  5456  015956  D018               	goto	l1570
  5457  015958                     l10447:
  5458                           
  5459                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  5460  015958  0ED7               	movlw	low STR_25
  5461  01595A  6EE6               	movwf	postinc1,c
  5462  01595C  0EFF               	movlw	high STR_25
  5463  01595E  6EE6               	movwf	postinc1,c
  5464  015960  0E8E               	movlw	low STR_26
  5465  015962  6EE6               	movwf	postinc1,c
  5466  015964  0EFE               	movlw	high STR_26
  5467  015966  6EE6               	movwf	postinc1,c
  5468  015968  0E01               	movlw	1
  5469  01596A  6EE6               	movwf	postinc1,c
  5470  01596C  0E00               	movlw	0
  5471  01596E  6EE6               	movwf	postinc1,c
  5472  015970  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  5473  015974  0060  F0CB  FFE6   	movff	btemp,postinc1
  5474  01597A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5475  015980  0E06               	movlw	6
  5476  015982  6EE6               	movwf	postinc1,c
  5477  015984  EC88  F0B6         	call	_sprintf	;wreg free
  5478  015988                     l1570:
  5479                           
  5480                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5481  015988  0102               	movlb	2	; () banked
  5482  01598A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5483  01598C  32E8               	rrcf	wreg,f,c
  5484  01598E  32E8               	rrcf	wreg,f,c
  5485  015990  0B03               	andlw	3
  5486  015992  0D24               	mullw	36
  5487  015994  0E12               	movlw	18
  5488  015996  26F3               	addwf	243,f,c
  5489  015998  0E00               	movlw	0
  5490  01599A  22F4               	addwfc	244,f,c
  5491  01599C  0ED3               	movlw	low _T
  5492  01599E  6E3C               	movwf	(btemp+10)^0,c
  5493  0159A0  0EFD               	movlw	high _T
  5494  0159A2  6E3D               	movwf	(btemp+11)^0,c
  5495  0159A4  50F3               	movf	243,w,c
  5496  0159A6  263C               	addwf	(btemp+10)^0,f,c
  5497  0159A8  50F4               	movf	244,w,c
  5498  0159AA  223D               	addwfc	(btemp+11)^0,f,c
  5499  0159AC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5500  0159B2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5501  0159B8  0ECD               	movlw	low STR_28
  5502  0159BA  6EE6               	movwf	postinc1,c
  5503  0159BC  0EFF               	movlw	high STR_28
  5504  0159BE  6EE6               	movwf	postinc1,c
  5505  0159C0  0E01               	movlw	1
  5506  0159C2  6EE6               	movwf	postinc1,c
  5507  0159C4  0E01               	movlw	1
  5508  0159C6  6EE6               	movwf	postinc1,c
  5509  0159C8  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  5510  0159CC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5511  0159D2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5512  0159D8  0E06               	movlw	6
  5513  0159DA  6EE6               	movwf	postinc1,c
  5514  0159DC  EC88  F0B6         	call	_sprintf	;wreg free
  5515                           
  5516                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5517  0159E0  0102               	movlb	2	; () banked
  5518  0159E2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5519  0159E4  32E8               	rrcf	wreg,f,c
  5520  0159E6  32E8               	rrcf	wreg,f,c
  5521  0159E8  0B03               	andlw	3
  5522  0159EA  0D24               	mullw	36
  5523  0159EC  0ED3               	movlw	low _T
  5524  0159EE  6E3C               	movwf	(btemp+10)^0,c
  5525  0159F0  0EFD               	movlw	high _T
  5526  0159F2  6E3D               	movwf	(btemp+11)^0,c
  5527  0159F4  50F3               	movf	243,w,c
  5528  0159F6  263C               	addwf	(btemp+10)^0,f,c
  5529  0159F8  50F4               	movf	244,w,c
  5530  0159FA  223D               	addwfc	(btemp+11)^0,f,c
  5531  0159FC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5532  015A02  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5533  015A08  0ECD               	movlw	low STR_28
  5534  015A0A  6EE6               	movwf	postinc1,c
  5535  015A0C  0EFF               	movlw	high STR_28
  5536  015A0E  6EE6               	movwf	postinc1,c
  5537  015A10  0E01               	movlw	1
  5538  015A12  6EE6               	movwf	postinc1,c
  5539  015A14  0E02               	movlw	2
  5540  015A16  6EE6               	movwf	postinc1,c
  5541  015A18  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  5542  015A1C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5543  015A22  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5544  015A28  0E06               	movlw	6
  5545  015A2A  6EE6               	movwf	postinc1,c
  5546  015A2C  EC88  F0B6         	call	_sprintf	;wreg free
  5547                           
  5548                           ;mconfig.c: 61:   V.help_id++;
  5549  015A30  EE20  F29B         	lfsr	2,_V+155	;volatile
  5550  015A34  38DF               	swapf	223,w,c
  5551  015A36  6E3D               	movwf	(btemp+11)^0,c
  5552  015A38  323D               	rrcf	(btemp+11)^0,f,c
  5553  015A3A  303D               	rrcf	(btemp+11)^0,w,c
  5554  015A3C  0B03               	andlw	3
  5555  015A3E  6E3D               	movwf	(btemp+11)^0,c
  5556  015A40  2A3D               	incf	(btemp+11)^0,f,c
  5557  015A42  3A3D               	swapf	(btemp+11)^0,f,c
  5558  015A44  363D               	rlcf	(btemp+11)^0,f,c
  5559  015A46  363D               	rlcf	(btemp+11)^0,f,c
  5560  015A48  50DF               	movf	223,w,c
  5561  015A4A  183D               	xorwf	(btemp+11)^0,w,c
  5562  015A4C  0B3F               	andlw	-193
  5563  015A4E  183D               	xorwf	(btemp+11)^0,w,c
  5564  015A50  6EDF               	movwf	223,c
  5565                           
  5566                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  5567  015A52  0EB8               	movlw	184
  5568  015A54  6EE6               	movwf	postinc1,c
  5569  015A56  0E0B               	movlw	11
  5570  015A58  6EE6               	movwf	postinc1,c
  5571  015A5A  0E09               	movlw	9
  5572  015A5C  6EE6               	movwf	postinc1,c
  5573  015A5E  EC3D  F0C1         	call	_StartTimer	;wreg free
  5574                           
  5575                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  5576  015A62  0EB8               	movlw	184
  5577  015A64  6EE6               	movwf	postinc1,c
  5578  015A66  0E0B               	movlw	11
  5579  015A68  6EE6               	movwf	postinc1,c
  5580  015A6A  0E07               	movlw	7
  5581  015A6C  6EE6               	movwf	postinc1,c
  5582  015A6E  EC3D  F0C1         	call	_StartTimer	;wreg free
  5583                           
  5584                           ;mconfig.c: 64:   mode_lamp_bright();
  5585  015A72  EC8E  F0C5         	call	_mode_lamp_bright	;wreg free
  5586                           
  5587                           ;mconfig.c: 65:   update_lcd(1);
  5588  015A76  0E01               	movlw	1
  5589  015A78  6EE6               	movwf	postinc1,c
  5590  015A7A  EC01  F0B6         	call	_update_lcd	;wreg free
  5591                           
  5592                           ;mconfig.c: 66:   estatus=1;
  5593                           ;stkvar	_estatus @ sp[(-1)+0]
  5594  015A7E  0EFF               	movlw	-1
  5595  015A80  6AE3               	clrf	plusw1,c
  5596  015A82  2AE3               	incf	plusw1,f,c
  5597                           
  5598                           ;mconfig.c: 67:  } else {
  5599  015A84  D032               	goto	l10477
  5600  015A86                     l10461:
  5601                           
  5602                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  5603  015A86  0E09               	movlw	9
  5604  015A88  6EE6               	movwf	postinc1,c
  5605  015A8A  EC3D  F0C4         	call	_TimerDone	;wreg free
  5606  015A8E  5032               	movf	btemp^0,w,c
  5607  015A90  B4D8               	btfsc	status,2,c
  5608  015A92  D02B               	goto	l10477
  5609                           
  5610                           ;mconfig.c: 69:    set_vterm(0);
  5611  015A94  0E00               	movlw	0
  5612  015A96  6EE6               	movwf	postinc1,c
  5613  015A98  ECFE  F0C4         	call	_set_vterm	;wreg free
  5614                           
  5615                           ; BSR set to: 5
  5616                           ;mconfig.c: 70:    V.help = 0;
  5617  015A9C  0102               	movlb	2	; () banked
  5618  015A9E  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5619                           
  5620                           ; BSR set to: 2
  5621                           ;mconfig.c: 71:    set_display_info(display_help());
  5622  015AA0  ECC3  F0C5         	call	_display_help	;wreg free
  5623  015AA4  5032               	movf	btemp^0,w,c
  5624  015AA6  6EE6               	movwf	postinc1,c
  5625  015AA8  ECC3  F0C4         	call	_set_display_info	;wreg free
  5626                           
  5627                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  5628  015AAC  0060  FA57  FFE6   	movff	_V+149,postinc1
  5629  015AB2  0060  FA5B  FFE6   	movff	_V+150,postinc1
  5630  015AB8  EC27  F0C5         	call	_mode_lamp_dim	;wreg free
  5631                           
  5632                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  5633  015ABC  0E0B               	movlw	11
  5634  015ABE  6EE6               	movwf	postinc1,c
  5635  015AC0  EC3D  F0C4         	call	_TimerDone	;wreg free
  5636  015AC4  5032               	movf	btemp^0,w,c
  5637  015AC6  B4D8               	btfsc	status,2,c
  5638  015AC8  D010               	goto	l10477
  5639                           
  5640                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  5641  015ACA  0102               	movlb	2	; () banked
  5642  015ACC  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5643  015ACE  A4D8               	btfss	status,2,c
  5644  015AD0  D002               	goto	u10460
  5645  015AD2  0E01               	movlw	1
  5646  015AD4  D001               	goto	u10470
  5647  015AD6                     u10460:
  5648  015AD6  0E00               	movlw	0
  5649  015AD8                     u10470:
  5650  015AD8  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5651                           
  5652                           ; BSR set to: 2
  5653                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  5654  015ADA  0EDC               	movlw	220
  5655  015ADC  6EE6               	movwf	postinc1,c
  5656  015ADE  0E05               	movlw	5
  5657  015AE0  6EE6               	movwf	postinc1,c
  5658  015AE2  0E0B               	movlw	11
  5659  015AE4  6EE6               	movwf	postinc1,c
  5660  015AE6  EC3D  F0C1         	call	_StartTimer	;wreg free
  5661  015AEA                     l10477:
  5662                           
  5663                           ;mconfig.c: 79:  return estatus;
  5664                           ;stkvar	_estatus @ sp[(-1)+0]
  5665  015AEA  0EFF               	movlw	-1
  5666  015AEC  006F FF8C  F032    	movff	plusw1,btemp
  5667                           
  5668                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5669  015AF2  52E5               	movf	postdec1,f,c
  5670  015AF4  52E5               	movf	postdec1,f,c
  5671  015AF6  0012               	return		;funcret
  5672  015AF8                     __end_of_check_help:
  5673                           	opt callstack 0
  5674                           
  5675 ;; *************** function _vterm_dump *****************
  5676 ;; Defined at:
  5677 ;;		line 121 in file "mconfig.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;		None
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;		None
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1  [STACK] void 
  5684 ;; Registers used:
  5685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5686 ;; Tracked objects:
  5687 ;;		On entry : 3F/2
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5695 ;;Total ram usage:        0 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:   17
  5698 ;; This function calls:
  5699 ;;		_WaitMs
  5700 ;;		_eaDogM_WriteStringAtPos
  5701 ;;		_get_vterm_ptr
  5702 ;;		_sprintf
  5703 ;;		_wait_lcd_done
  5704 ;; This function is called by:
  5705 ;;		_check_help
  5706 ;; This function uses a reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text23
  5710  016784                     __ptext23:
  5711                           	opt callstack 0
  5712  016784                     _vterm_dump:
  5713                           	opt callstack 12
  5714                           
  5715                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5716                           
  5717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5718                           ;incstack = 0
  5719  016784  0E01               	movlw	1
  5720  016786  6EE6               	movwf	postinc1,c
  5721  016788  0E00               	movlw	0
  5722  01678A  6EE6               	movwf	postinc1,c
  5723  01678C  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  5724  016790  0060  F0CB  FFE6   	movff	btemp,postinc1
  5725  016796  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5726  01679C  0E00               	movlw	0
  5727  01679E  6EE6               	movwf	postinc1,c
  5728  0167A0  0E00               	movlw	0
  5729  0167A2  6EE6               	movwf	postinc1,c
  5730  0167A4  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  5731  0167A8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5732  0167AE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5733  0167B4  0EA3               	movlw	low STR_30
  5734  0167B6  6EE6               	movwf	postinc1,c
  5735  0167B8  0EFF               	movlw	high STR_30
  5736  0167BA  6EE6               	movwf	postinc1,c
  5737  0167BC  0E01               	movlw	low (_V+1)
  5738  0167BE  6EE6               	movwf	postinc1,c
  5739  0167C0  0E02               	movlw	high (_V+1)
  5740  0167C2  6EE6               	movwf	postinc1,c
  5741  0167C4  0E08               	movlw	8
  5742  0167C6  6EE6               	movwf	postinc1,c
  5743  0167C8  EC88  F0B6         	call	_sprintf	;wreg free
  5744                           
  5745                           ;mconfig.c: 124:  wait_lcd_done();
  5746  0167CC  ECF0  F0C4         	call	_wait_lcd_done	;wreg free
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5750  0167D0  0E01               	movlw	low (_V+1)
  5751  0167D2  6EE6               	movwf	postinc1,c
  5752  0167D4  0E02               	movlw	high (_V+1)
  5753  0167D6  6EE6               	movwf	postinc1,c
  5754  0167D8  0E00               	movlw	0
  5755  0167DA  6EE6               	movwf	postinc1,c
  5756  0167DC  0E00               	movlw	0
  5757  0167DE  6EE6               	movwf	postinc1,c
  5758  0167E0  EC92  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  5759                           
  5760                           ; BSR set to: 59
  5761                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5762  0167E4  0E01               	movlw	1
  5763  0167E6  6EE6               	movwf	postinc1,c
  5764  0167E8  0E01               	movlw	1
  5765  0167EA  6EE6               	movwf	postinc1,c
  5766  0167EC  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  5767  0167F0  0060  F0CB  FFE6   	movff	btemp,postinc1
  5768  0167F6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5769  0167FC  0E00               	movlw	0
  5770  0167FE  6EE6               	movwf	postinc1,c
  5771  016800  0E01               	movlw	1
  5772  016802  6EE6               	movwf	postinc1,c
  5773  016804  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  5774  016808  0060  F0CB  FFE6   	movff	btemp,postinc1
  5775  01680E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5776  016814  0EA3               	movlw	low STR_30
  5777  016816  6EE6               	movwf	postinc1,c
  5778  016818  0EFF               	movlw	high STR_30
  5779  01681A  6EE6               	movwf	postinc1,c
  5780  01681C  0E01               	movlw	low (_V+1)
  5781  01681E  6EE6               	movwf	postinc1,c
  5782  016820  0E02               	movlw	high (_V+1)
  5783  016822  6EE6               	movwf	postinc1,c
  5784  016824  0E08               	movlw	8
  5785  016826  6EE6               	movwf	postinc1,c
  5786  016828  EC88  F0B6         	call	_sprintf	;wreg free
  5787                           
  5788                           ;mconfig.c: 127:  wait_lcd_done();
  5789  01682C  ECF0  F0C4         	call	_wait_lcd_done	;wreg free
  5790                           
  5791                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5792  016830  0E01               	movlw	low (_V+1)
  5793  016832  6EE6               	movwf	postinc1,c
  5794  016834  0E02               	movlw	high (_V+1)
  5795  016836  6EE6               	movwf	postinc1,c
  5796  016838  0E00               	movlw	0
  5797  01683A  6EE6               	movwf	postinc1,c
  5798  01683C  0E01               	movlw	1
  5799  01683E  6EE6               	movwf	postinc1,c
  5800  016840  EC92  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  5801                           
  5802                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5803  016844  0E01               	movlw	1
  5804  016846  6EE6               	movwf	postinc1,c
  5805  016848  0E02               	movlw	2
  5806  01684A  6EE6               	movwf	postinc1,c
  5807  01684C  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  5808  016850  0060  F0CB  FFE6   	movff	btemp,postinc1
  5809  016856  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5810  01685C  0E00               	movlw	0
  5811  01685E  6EE6               	movwf	postinc1,c
  5812  016860  0E02               	movlw	2
  5813  016862  6EE6               	movwf	postinc1,c
  5814  016864  EC41  F0C2         	call	_get_vterm_ptr	;wreg free
  5815  016868  0060  F0CB  FFE6   	movff	btemp,postinc1
  5816  01686E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5817  016874  0EA3               	movlw	low STR_30
  5818  016876  6EE6               	movwf	postinc1,c
  5819  016878  0EFF               	movlw	high STR_30
  5820  01687A  6EE6               	movwf	postinc1,c
  5821  01687C  0E01               	movlw	low (_V+1)
  5822  01687E  6EE6               	movwf	postinc1,c
  5823  016880  0E02               	movlw	high (_V+1)
  5824  016882  6EE6               	movwf	postinc1,c
  5825  016884  0E08               	movlw	8
  5826  016886  6EE6               	movwf	postinc1,c
  5827  016888  EC88  F0B6         	call	_sprintf	;wreg free
  5828                           
  5829                           ;mconfig.c: 130:  wait_lcd_done();
  5830  01688C  ECF0  F0C4         	call	_wait_lcd_done	;wreg free
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5834  016890  0E01               	movlw	low (_V+1)
  5835  016892  6EE6               	movwf	postinc1,c
  5836  016894  0E02               	movlw	high (_V+1)
  5837  016896  6EE6               	movwf	postinc1,c
  5838  016898  0E00               	movlw	0
  5839  01689A  6EE6               	movwf	postinc1,c
  5840  01689C  0E02               	movlw	2
  5841  01689E  6EE6               	movwf	postinc1,c
  5842  0168A0  EC92  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  5843                           
  5844                           ; BSR set to: 59
  5845                           ;mconfig.c: 132:  WaitMs(3000);
  5846  0168A4  0EB8               	movlw	184
  5847  0168A6  6EE6               	movwf	postinc1,c
  5848  0168A8  0E0B               	movlw	11
  5849  0168AA  6EE6               	movwf	postinc1,c
  5850  0168AC  EC77  F0C1         	call	_WaitMs	;wreg free
  5851                           
  5852                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5853  0168B0  0012               	return		;funcret
  5854  0168B2                     __end_of_vterm_dump:
  5855                           	opt callstack 0
  5856                           
  5857 ;; *************** function _sprintf *****************
  5858 ;; Defined at:
  5859 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  s               2  [STACK] PTR unsigned char 
  5862 ;;		 -> D.lcd(216), D(218), V(187), 
  5863 ;;  fmt             2  [STACK] PTR const unsigned char 
  5864 ;;		 -> STR_41(3), STR_40(3), STR_39(19), STR_38(19), 
  5865 ;;		 -> STR_37(19), STR_36(19), STR_35(19), STR_34(19), 
  5866 ;;		 -> STR_33(24), STR_32(15), STR_31(15), STR_30(15), 
  5867 ;;		 -> STR_29(10), STR_28(10), STR_27(19), STR_26(19), 
  5868 ;;		 -> STR_20(19), STR_19(19), STR_18(19), STR_17(19), 
  5869 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  5870 ;;		 -> STR_12(19), STR_11(19), STR_10(19), STR_9(19), 
  5871 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  5872 ;;		 -> STR_2(15), STR_1(17), 
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;  f               6  [STACK] struct _IO_FILE
  5875 ;;  ap              2  [STACK] PTR void [1]
  5876 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5877 ;;  ret             2    0        int 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  2  [STACK] int 
  5880 ;; Registers used:
  5881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/5
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5891 ;;Total ram usage:        0 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:   14
  5894 ;; This function calls:
  5895 ;;		_vfprintf
  5896 ;; This function is called by:
  5897 ;;		_main
  5898 ;;		_check_help
  5899 ;;		_vterm_dump
  5900 ;; This function uses a reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text24
  5904  016D10                     __ptext24:
  5905                           	opt callstack 0
  5906  016D10                     _sprintf:
  5907                           	opt callstack 0
  5908                           
  5909                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5910  016D10  0E08               	movlw	8
  5911  016D12  26E1               	addwf	fsr1l,f,c
  5912  016D14  0E00               	movlw	0
  5913  016D16  22E2               	addwfc	fsr1h,f,c
  5914                           
  5915                           ;incstack = 0
  5916  016D18  0EFE               	movlw	254
  5917  016D1A  6E3C               	movwf	(btemp+10)^0,c
  5918  016D1C  0EFF               	movlw	255
  5919  016D1E  6E3D               	movwf	(btemp+11)^0,c
  5920                           
  5921                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5922  016D20  0EF5               	movlw	245
  5923  016D22  24E1               	addwf	fsr1l,w,c
  5924  016D24  6E3A               	movwf	(btemp+8)^0,c
  5925  016D26  0EFF               	movlw	255
  5926  016D28  20E2               	addwfc	fsr1h,w,c
  5927  016D2A  6E3B               	movwf	(btemp+9)^0,c
  5928  016D2C  503C               	movf	(btemp+10)^0,w,c
  5929  016D2E  263A               	addwf	(btemp+8)^0,f,c
  5930  016D30  503D               	movf	(btemp+11)^0,w,c
  5931  016D32  223B               	addwfc	(btemp+9)^0,f,c
  5932                           
  5933                           ;stkvar	_ap @ sp[(-8)+6]
  5934  016D34  0EFF               	movlw	-1
  5935  016D36  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5936  016D3C  0EFE               	movlw	-2
  5937  016D3E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5938                           
  5939                           ;stkvar	_s @ sp[(-8)+-3]
  5940  016D44  0EF5               	movlw	-11
  5941  016D46  006F FF8C  F03C    	movff	plusw1,btemp+10
  5942  016D4C  0EF6               	movlw	-10
  5943  016D4E  006F FF8C  F03D    	movff	plusw1,btemp+11
  5944                           
  5945                           ;stkvar	_f @ sp[(-8)+0]
  5946  016D54  0EF9               	movlw	-7
  5947  016D56  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5948  016D5C  0EF8               	movlw	-8
  5949  016D5E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5950                           
  5951                           ;stkvar	_f @ sp[(-8)+0]
  5952  016D64  0EFA               	movlw	250
  5953  016D66  24E1               	addwf	fsr1l,w,c
  5954  016D68  6ED9               	movwf	fsr2l,c
  5955  016D6A  0EFF               	movlw	255
  5956  016D6C  20E2               	addwfc	fsr1h,w,c
  5957  016D6E  6EDA               	movwf	fsr2h,c
  5958  016D70  0E00               	movlw	0
  5959  016D72  6EDE               	movwf	postinc2,c
  5960  016D74  0E00               	movlw	0
  5961  016D76  6EDD               	movwf	postdec2,c
  5962                           
  5963                           ;stkvar	_f @ sp[(-8)+0]
  5964  016D78  0EFC               	movlw	252
  5965  016D7A  24E1               	addwf	fsr1l,w,c
  5966  016D7C  6ED9               	movwf	fsr2l,c
  5967  016D7E  0EFF               	movlw	255
  5968  016D80  20E2               	addwfc	fsr1h,w,c
  5969  016D82  6EDA               	movwf	fsr2h,c
  5970  016D84  0E00               	movlw	0
  5971  016D86  6EDE               	movwf	postinc2,c
  5972  016D88  0E00               	movlw	0
  5973  016D8A  6EDD               	movwf	postdec2,c
  5974                           
  5975                           ;stkvar	_ap @ sp[(-8)+6]
  5976  016D8C  0EFE               	movlw	254
  5977  016D8E  24E1               	addwf	fsr1l,w,c
  5978  016D90  6E32               	movwf	btemp^0,c
  5979  016D92  0EFF               	movlw	255
  5980  016D94  20E2               	addwfc	fsr1h,w,c
  5981  016D96  6E33               	movwf	(btemp+1)^0,c
  5982  016D98  0060  F0CB  FFE6   	movff	btemp,postinc1
  5983  016D9E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5984                           
  5985                           ;stkvar	_fmt @ sp[(-10)+-5]
  5986  016DA4  0EF1               	movlw	-15
  5987  016DA6  006F FF8F FFE6     	movff	plusw1,postinc1
  5988  016DAC  006F FF8F FFE6     	movff	plusw1,postinc1
  5989                           
  5990                           ;stkvar	_f @ sp[(-12)+0]
  5991  016DB2  0EF4               	movlw	244
  5992  016DB4  24E1               	addwf	fsr1l,w,c
  5993  016DB6  6E32               	movwf	btemp^0,c
  5994  016DB8  0EFF               	movlw	255
  5995  016DBA  20E2               	addwfc	fsr1h,w,c
  5996  016DBC  6E33               	movwf	(btemp+1)^0,c
  5997  016DBE  0060  F0CB  FFE6   	movff	btemp,postinc1
  5998  016DC4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5999  016DCA  ECE5  F0B9         	call	_vfprintf	;wreg free
  6000                           
  6001                           ;stkvar	_f @ sp[(-8)+0]
  6002  016DCE  0EFA               	movlw	250
  6003  016DD0  24E1               	addwf	fsr1l,w,c
  6004  016DD2  6ED9               	movwf	fsr2l,c
  6005  016DD4  0EFF               	movlw	255
  6006  016DD6  20E2               	addwfc	fsr1h,w,c
  6007  016DD8  6EDA               	movwf	fsr2h,c
  6008  016DDA  006F FF78  F03C    	movff	postinc2,btemp+10
  6009  016DE0  006F FF74  F03D    	movff	postdec2,btemp+11
  6010                           
  6011                           ;stkvar	_s @ sp[(-8)+-3]
  6012  016DE6  0EF5               	movlw	-11
  6013  016DE8  006F FF8C  F03A    	movff	plusw1,btemp+8
  6014  016DEE  0EF6               	movlw	-10
  6015  016DF0  006F FF8C  F03B    	movff	plusw1,btemp+9
  6016  016DF6  503C               	movf	(btemp+10)^0,w,c
  6017  016DF8  243A               	addwf	(btemp+8)^0,w,c
  6018  016DFA  6ED9               	movwf	fsr2l,c
  6019  016DFC  503D               	movf	(btemp+11)^0,w,c
  6020  016DFE  203B               	addwfc	(btemp+9)^0,w,c
  6021  016E00  6EDA               	movwf	fsr2h,c
  6022  016E02  0E00               	movlw	0
  6023  016E04  6EDF               	movwf	indf2,c
  6024                           
  6025                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6026  016E06  0EF8               	movlw	248
  6027  016E08  26E1               	addwf	fsr1l,f,c
  6028  016E0A  0EFF               	movlw	255
  6029  016E0C  22E2               	addwfc	fsr1h,f,c
  6030  016E0E  52E5               	movf	postdec1,f,c
  6031  016E10  50E7               	movf	indf1,w,c
  6032  016E12  5EE1               	subwf	fsr1l,f,c
  6033  016E14  0E00               	movlw	0
  6034  016E16  5AE2               	subwfb	fsr1h,f,c
  6035  016E18  0012               	return		;funcret
  6036  016E1A                     __end_of_sprintf:
  6037                           	opt callstack 0
  6038                           
  6039 ;; *************** function _get_vterm_ptr *****************
  6040 ;; Defined at:
  6041 ;;		line 116 in file "mconfig.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  line            1  [STACK] const unsigned char 
  6044 ;;  vterm           1  [STACK] const unsigned char 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  2  [STACK] PTR unsigned char 
  6049 ;; Registers used:
  6050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/5
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    6
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_main
  6067 ;;		_check_help
  6068 ;;		_vterm_dump
  6069 ;; This function uses a reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text25
  6073  018482                     __ptext25:
  6074                           	opt callstack 0
  6075  018482                     _get_vterm_ptr:
  6076                           	opt callstack 24
  6077                           
  6078                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6079                           ;stkvar	_vterm @ sp[(0)+-2]
  6080                           
  6081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6082                           ;incstack = 0
  6083  018482  0EFE               	movlw	-2
  6084  018484  50E3               	movf	plusw1,w,c
  6085  018486  0B03               	andlw	3
  6086  018488  0D36               	mullw	54
  6087  01848A  0E00               	movlw	low _D
  6088  01848C  6E32               	movwf	btemp^0,c
  6089  01848E  0E05               	movlw	high _D
  6090  018490  6E33               	movwf	(btemp+1)^0,c
  6091  018492  50F3               	movf	243,w,c
  6092  018494  2632               	addwf	btemp^0,f,c
  6093  018496  50F4               	movf	244,w,c
  6094  018498  2233               	addwfc	(btemp+1)^0,f,c
  6095                           
  6096                           ;stkvar	_line @ sp[(0)+-1]
  6097  01849A  0EFF               	movlw	-1
  6098  01849C  50E3               	movf	plusw1,w,c
  6099  01849E  0B03               	andlw	3
  6100  0184A0  0D12               	mullw	18
  6101  0184A2  50F3               	movf	243,w,c
  6102  0184A4  2632               	addwf	btemp^0,f,c
  6103  0184A6  50F4               	movf	244,w,c
  6104  0184A8  2233               	addwfc	(btemp+1)^0,f,c
  6105                           
  6106                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6107  0184AA  52E5               	movf	postdec1,f,c
  6108  0184AC  52E5               	movf	postdec1,f,c
  6109  0184AE  0012               	return		;funcret
  6110  0184B0                     __end_of_get_vterm_ptr:
  6111                           	opt callstack 0
  6112                           
  6113 ;; *************** function _WaitMs *****************
  6114 ;; Defined at:
  6115 ;;		line 32 in file "timers.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  numMilliseco    2  [STACK] const unsigned short 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1  [STACK] void 
  6122 ;; Registers used:
  6123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/2
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6133 ;;Total ram usage:        0 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    7
  6136 ;; This function calls:
  6137 ;;		_StartTimer
  6138 ;;		_TimerDone
  6139 ;; This function is called by:
  6140 ;;		_main
  6141 ;;		_vterm_dump
  6142 ;; This function uses a reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text26
  6146  0182EE                     __ptext26:
  6147                           	opt callstack 0
  6148  0182EE                     _WaitMs:
  6149                           	opt callstack 21
  6150                           
  6151                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6152                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6153                           
  6154                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6155                           ;incstack = 0
  6156  0182EE  0EFE               	movlw	-2
  6157  0182F0  006F FF8F FFE6     	movff	plusw1,postinc1
  6158  0182F6  006F FF8F FFE6     	movff	plusw1,postinc1
  6159  0182FC  0E00               	movlw	0
  6160  0182FE  6EE6               	movwf	postinc1,c
  6161  018300  EC3D  F0C1         	call	_StartTimer	;wreg free
  6162                           
  6163                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6164  018304  D005               	goto	l8133
  6165  018306                     l1500:
  6166                           
  6167                           ;timers.c: 36:   __nop();
  6168  018306  F000               	nop	
  6169                           
  6170                           ;timers.c: 37:   __nop();
  6171  018308  F000               	nop	
  6172                           
  6173                           ;timers.c: 38:   __nop();
  6174  01830A  F000               	nop	
  6175                           
  6176                           ;timers.c: 39:   __nop();
  6177  01830C  F000               	nop	
  6178  01830E  0004               	clrwdt		;# 
  6179  018310                     l8133:
  6180                           
  6181                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6182  018310  0E00               	movlw	0
  6183  018312  6EE6               	movwf	postinc1,c
  6184  018314  EC3D  F0C4         	call	_TimerDone	;wreg free
  6185  018318  5032               	movf	btemp^0,w,c
  6186  01831A  B4D8               	btfsc	status,2,c
  6187  01831C  D7F4               	goto	l1500
  6188                           
  6189                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6190  01831E  52E5               	movf	postdec1,f,c
  6191  018320  52E5               	movf	postdec1,f,c
  6192  018322  0012               	return		;funcret
  6193  018324                     __end_of_WaitMs:
  6194                           	opt callstack 0
  6195                           
  6196 ;; *************** function _update_lcd *****************
  6197 ;; Defined at:
  6198 ;;		line 85 in file "mconfig.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  vterm           1  [STACK] unsigned char 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;		None
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1  [STACK] unsigned char 
  6205 ;; Registers used:
  6206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/5
  6209 ;;		On exit  : 1/1
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6216 ;;Total ram usage:        0 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:   17
  6219 ;; This function calls:
  6220 ;;		_eaDogM_WriteStringAtPos
  6221 ;;		_wait_lcd_done
  6222 ;; This function is called by:
  6223 ;;		_main
  6224 ;;		_check_help
  6225 ;; This function uses a reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text27
  6229  016C02                     __ptext27:
  6230                           	opt callstack 0
  6231  016C02                     _update_lcd:
  6232                           	opt callstack 13
  6233                           
  6234                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  6235                           ;stkvar	_vterm @ sp[(0)+-1]
  6236                           
  6237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6238                           ;incstack = 0
  6239  016C02  0EFF               	movlw	-1
  6240  016C04  006F FF8C  F032    	movff	plusw1,btemp
  6241  016C0A  0E03               	movlw	3
  6242  016C0C  1632               	andwf	btemp^0,f,c
  6243  016C0E  0EFF               	movlw	-1
  6244  016C10  0060  F0CB  FFE3   	movff	btemp,plusw1
  6245                           
  6246                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  6247  016C16  0105               	movlb	5	; () banked
  6248  016C18  A1D8               	btfss	(_D+216)& (0+255),0,b
  6249  016C1A  D004               	goto	l10329
  6250                           
  6251                           ; BSR set to: 5
  6252                           ;stkvar	_vterm @ sp[(0)+-1]
  6253  016C1C  0EFF               	movlw	-1
  6254  016C1E  50E3               	movf	plusw1,w,c
  6255  016C20  B4D8               	btfsc	status,2,c
  6256  016C22  D074               	goto	l1578
  6257  016C24                     l10329:
  6258                           
  6259                           ; BSR set to: 5
  6260                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  6261                           ;stkvar	_vterm @ sp[(0)+-1]
  6262  016C24  0EFF               	movlw	-1
  6263  016C26  50E3               	movf	plusw1,w,c
  6264  016C28  0D36               	mullw	54
  6265  016C2A  0E10               	movlw	low (_D+16)
  6266  016C2C  24F3               	addwf	243,w,c
  6267  016C2E  6ED9               	movwf	fsr2l,c
  6268  016C30  0E05               	movlw	high (_D+16)
  6269  016C32  20F4               	addwfc	prodh,w,c
  6270  016C34  6EDA               	movwf	fsr2h,c
  6271  016C36  0E00               	movlw	0
  6272  016C38  6EDF               	movwf	indf2,c
  6273                           
  6274                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  6275                           ;stkvar	_vterm @ sp[(0)+-1]
  6276  016C3A  0EFF               	movlw	-1
  6277  016C3C  50E3               	movf	plusw1,w,c
  6278  016C3E  0D36               	mullw	54
  6279  016C40  0E22               	movlw	low (_D+34)
  6280  016C42  24F3               	addwf	243,w,c
  6281  016C44  6ED9               	movwf	fsr2l,c
  6282  016C46  0E05               	movlw	high (_D+34)
  6283  016C48  20F4               	addwfc	prodh,w,c
  6284  016C4A  6EDA               	movwf	fsr2h,c
  6285  016C4C  0E00               	movlw	0
  6286  016C4E  6EDF               	movwf	indf2,c
  6287                           
  6288                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  6289                           ;stkvar	_vterm @ sp[(0)+-1]
  6290  016C50  0EFF               	movlw	-1
  6291  016C52  50E3               	movf	plusw1,w,c
  6292  016C54  0D36               	mullw	54
  6293  016C56  0E34               	movlw	low (_D+52)
  6294  016C58  24F3               	addwf	243,w,c
  6295  016C5A  6ED9               	movwf	fsr2l,c
  6296  016C5C  0E05               	movlw	high (_D+52)
  6297  016C5E  20F4               	addwfc	prodh,w,c
  6298  016C60  6EDA               	movwf	fsr2h,c
  6299  016C62  0E00               	movlw	0
  6300  016C64  6EDF               	movwf	indf2,c
  6301                           
  6302                           ; BSR set to: 5
  6303                           ;mconfig.c: 95:  wait_lcd_done();
  6304  016C66  ECF0  F0C4         	call	_wait_lcd_done	;wreg free
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  6308                           ;stkvar	_vterm @ sp[(0)+-1]
  6309  016C6A  0EFF               	movlw	-1
  6310  016C6C  50E3               	movf	plusw1,w,c
  6311  016C6E  0D36               	mullw	54
  6312  016C70  0E00               	movlw	low _D
  6313  016C72  6E3C               	movwf	(btemp+10)^0,c
  6314  016C74  0E05               	movlw	high _D
  6315  016C76  6E3D               	movwf	(btemp+11)^0,c
  6316  016C78  50F3               	movf	243,w,c
  6317  016C7A  263C               	addwf	(btemp+10)^0,f,c
  6318  016C7C  50F4               	movf	244,w,c
  6319  016C7E  223D               	addwfc	(btemp+11)^0,f,c
  6320  016C80  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6321  016C86  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6322  016C8C  0E00               	movlw	0
  6323  016C8E  6EE6               	movwf	postinc1,c
  6324  016C90  0E00               	movlw	0
  6325  016C92  6EE6               	movwf	postinc1,c
  6326  016C94  EC92  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  6327                           
  6328                           ; BSR set to: 59
  6329                           ;mconfig.c: 97:  wait_lcd_done();
  6330  016C98  ECF0  F0C4         	call	_wait_lcd_done	;wreg free
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  6334                           ;stkvar	_vterm @ sp[(0)+-1]
  6335  016C9C  0EFF               	movlw	-1
  6336  016C9E  50E3               	movf	plusw1,w,c
  6337  016CA0  0D36               	mullw	54
  6338  016CA2  0E00               	movlw	low _D
  6339  016CA4  6E3C               	movwf	(btemp+10)^0,c
  6340  016CA6  0E05               	movlw	high _D
  6341  016CA8  6E3D               	movwf	(btemp+11)^0,c
  6342  016CAA  0E12               	movlw	18
  6343  016CAC  263C               	addwf	(btemp+10)^0,f,c
  6344  016CAE  0E00               	movlw	0
  6345  016CB0  223D               	addwfc	(btemp+11)^0,f,c
  6346  016CB2  50F3               	movf	243,w,c
  6347  016CB4  263C               	addwf	(btemp+10)^0,f,c
  6348  016CB6  50F4               	movf	244,w,c
  6349  016CB8  223D               	addwfc	(btemp+11)^0,f,c
  6350  016CBA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6351  016CC0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6352  016CC6  0E00               	movlw	0
  6353  016CC8  6EE6               	movwf	postinc1,c
  6354  016CCA  0E01               	movlw	1
  6355  016CCC  6EE6               	movwf	postinc1,c
  6356  016CCE  EC92  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  6357                           
  6358                           ; BSR set to: 59
  6359                           ;mconfig.c: 99:  wait_lcd_done();
  6360  016CD2  ECF0  F0C4         	call	_wait_lcd_done	;wreg free
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  6364                           ;stkvar	_vterm @ sp[(0)+-1]
  6365  016CD6  0EFF               	movlw	-1
  6366  016CD8  50E3               	movf	plusw1,w,c
  6367  016CDA  0D36               	mullw	54
  6368  016CDC  0E00               	movlw	low _D
  6369  016CDE  6E3C               	movwf	(btemp+10)^0,c
  6370  016CE0  0E05               	movlw	high _D
  6371  016CE2  6E3D               	movwf	(btemp+11)^0,c
  6372  016CE4  0E24               	movlw	36
  6373  016CE6  263C               	addwf	(btemp+10)^0,f,c
  6374  016CE8  0E00               	movlw	0
  6375  016CEA  223D               	addwfc	(btemp+11)^0,f,c
  6376  016CEC  50F3               	movf	243,w,c
  6377  016CEE  263C               	addwf	(btemp+10)^0,f,c
  6378  016CF0  50F4               	movf	244,w,c
  6379  016CF2  223D               	addwfc	(btemp+11)^0,f,c
  6380  016CF4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6381  016CFA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6382  016D00  0E00               	movlw	0
  6383  016D02  6EE6               	movwf	postinc1,c
  6384  016D04  0E02               	movlw	2
  6385  016D06  6EE6               	movwf	postinc1,c
  6386  016D08  EC92  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  6387  016D0C                     l1578:
  6388                           
  6389                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6390  016D0C  52E5               	movf	postdec1,f,c
  6391  016D0E  0012               	return		;funcret
  6392  016D10                     __end_of_update_lcd:
  6393                           	opt callstack 0
  6394                           
  6395 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6396 ;; Defined at:
  6397 ;;		line 252 in file "eadog.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  r               1  [STACK] const unsigned char 
  6400 ;;  c               1  [STACK] const unsigned char 
  6401 ;;  strPtr          2  [STACK] PTR unsigned char 
  6402 ;;		 -> D.lcd(216), D(218), V(187), 
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1  [STACK] void 
  6407 ;; Registers used:
  6408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6409 ;; Tracked objects:
  6410 ;;		On entry : 3F/0
  6411 ;;		On exit  : 3F/3B
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6418 ;;Total ram usage:        0 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:   16
  6421 ;; This function calls:
  6422 ;;		_eaDogM_WriteString
  6423 ;;		_send_lcd_cmd_dma
  6424 ;; This function is called by:
  6425 ;;		_update_lcd
  6426 ;;		_vterm_dump
  6427 ;; This function uses a reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text28
  6431  018324                     __ptext28:
  6432                           	opt callstack 0
  6433  018324                     _eaDogM_WriteStringAtPos:
  6434                           	opt callstack 13
  6435                           
  6436                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6437                           ;stkvar	_c @ sp[(0)+-2]
  6438                           
  6439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6440                           ;incstack = 0
  6441  018324  0EFE               	movlw	-2
  6442  018326  006F FF8C  F03D    	movff	plusw1,btemp+11
  6443                           
  6444                           ;stkvar	_r @ sp[(0)+-1]
  6445  01832C  0EFF               	movlw	-1
  6446  01832E  50E3               	movf	plusw1,w,c
  6447  018330  0D10               	mullw	16
  6448  018332  50F3               	movf	243,w,c
  6449  018334  243D               	addwf	(btemp+11)^0,w,c
  6450  018336  0F80               	addlw	128
  6451  018338  6EE6               	movwf	postinc1,c
  6452  01833A  EC96  F0BF         	call	_send_lcd_cmd_dma	;wreg free
  6453                           
  6454                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  6455                           ;stkvar	_strPtr @ sp[(0)+-4]
  6456  01833E  0EFC               	movlw	-4
  6457  018340  006F FF8F FFE6     	movff	plusw1,postinc1
  6458  018346  006F FF8F FFE6     	movff	plusw1,postinc1
  6459  01834C  EC39  F0BA         	call	_eaDogM_WriteString	;wreg free
  6460                           
  6461                           ; BSR set to: 59
  6462                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  6463  018350  52E5               	movf	postdec1,f,c
  6464  018352  52E5               	movf	postdec1,f,c
  6465  018354  52E5               	movf	postdec1,f,c
  6466  018356  52E5               	movf	postdec1,f,c
  6467  018358  0012               	return		;funcret
  6468  01835A                     __end_of_eaDogM_WriteStringAtPos:
  6469                           	opt callstack 0
  6470                           
  6471 ;; *************** function _send_lcd_cmd_dma *****************
  6472 ;; Defined at:
  6473 ;;		line 205 in file "eadog.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  strPtr          1  [STACK] unsigned char 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1  [STACK] void 
  6480 ;; Registers used:
  6481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/3D
  6484 ;;		On exit  : 3F/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6491 ;;Total ram usage:        0 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:   15
  6494 ;; This function calls:
  6495 ;;		_printf
  6496 ;;		_ringBufS_flush
  6497 ;;		_start_lcd
  6498 ;;		_wait_lcd_done
  6499 ;;		_wait_lcd_set
  6500 ;; This function is called by:
  6501 ;;		_eaDogM_WriteCommand
  6502 ;;		_eaDogM_WriteStringAtPos
  6503 ;; This function uses a reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text29
  6507  017F2C                     __ptext29:
  6508                           	opt callstack 0
  6509  017F2C                     _send_lcd_cmd_dma:
  6510                           	opt callstack 13
  6511                           
  6512                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6513                           
  6514                           ; BSR set to: 59
  6515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6516                           ;incstack = 0
  6517  017F2C  ECD2  F0C5         	call	_wait_lcd_set	;wreg free
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6521  017F30  0E00               	movlw	0
  6522  017F32  6EE6               	movwf	postinc1,c
  6523  017F34  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6524  017F3A  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6525  017F40  EC29  F0BB         	call	_ringBufS_flush	;wreg free
  6526  017F44  92BC               	bcf	188,1,c	;volatile
  6527  017F46  94BC               	bcf	188,2,c	;volatile
  6528                           
  6529                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  6530  017F48  013B               	movlb	59	; () banked
  6531  017F4A  9FFC               	bcf	252,7,b	;volatile
  6532                           
  6533                           ; BSR set to: 59
  6534                           ;eadog.c: 214:  DMA1SSZ = 1;
  6535  017F4C  0E00               	movlw	0
  6536  017F4E  6FF8               	movwf	248,b	;volatile
  6537  017F50  0E01               	movlw	1
  6538  017F52  6FF7               	movwf	247,b	;volatile
  6539                           
  6540                           ; BSR set to: 59
  6541                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  6542  017F54  8FFC               	bsf	252,7,b	;volatile
  6543                           
  6544                           ; BSR set to: 59
  6545                           ;eadog.c: 216:  printf("%c", strPtr);
  6546                           ;stkvar	_strPtr @ sp[(0)+-1]
  6547  017F56  0EFF               	movlw	-1
  6548  017F58  50E3               	movf	plusw1,w,c
  6549  017F5A  6EE6               	movwf	postinc1,c
  6550  017F5C  0E00               	movlw	0
  6551  017F5E  6EE6               	movwf	postinc1,c
  6552  017F60  0EF9               	movlw	low STR_22
  6553  017F62  6EE6               	movwf	postinc1,c
  6554  017F64  0EFF               	movlw	high STR_22
  6555  017F66  6EE6               	movwf	postinc1,c
  6556  017F68  0E04               	movlw	4
  6557  017F6A  6EE6               	movwf	postinc1,c
  6558  017F6C  ECAE  F0BE         	call	_printf	;wreg free
  6559                           
  6560                           ;eadog.c: 217:  start_lcd();
  6561  017F70  ECD5  F0C5         	call	_start_lcd	;wreg free
  6562                           
  6563                           ; BSR set to: 59
  6564                           ;eadog.c: 218:  wait_lcd_done();
  6565  017F74  ECF0  F0C4         	call	_wait_lcd_done	;wreg free
  6566                           
  6567                           ; BSR set to: 0
  6568  017F78  82BC               	bsf	188,1,c	;volatile
  6569                           
  6570                           ; BSR set to: 0
  6571                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6572  017F7A  52E5               	movf	postdec1,f,c
  6573  017F7C  0012               	return		;funcret
  6574  017F7E                     __end_of_send_lcd_cmd_dma:
  6575                           	opt callstack 0
  6576                           
  6577 ;; *************** function _wait_lcd_done *****************
  6578 ;; Defined at:
  6579 ;;		line 141 in file "eadog.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;		None
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1  [STACK] void 
  6586 ;; Registers used:
  6587 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/2
  6590 ;;		On exit  : 3F/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6597 ;;Total ram usage:        0 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:    7
  6600 ;; This function calls:
  6601 ;;		_wdtdelay
  6602 ;; This function is called by:
  6603 ;;		_send_lcd_cmd_dma
  6604 ;;		_update_lcd
  6605 ;;		_vterm_dump
  6606 ;; This function uses a reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text30
  6610  0189E0                     __ptext30:
  6611                           	opt callstack 0
  6612  0189E0                     _wait_lcd_done:
  6613                           	opt callstack 22
  6614                           
  6615                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6616                           
  6617                           ; BSR set to: 0
  6618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6619                           ;incstack = 0
  6620  0189E0  0100               	movlb	0	; () banked
  6621  0189E2  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  6622  0189E4  D7FD               	goto	_wait_lcd_done
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;eadog.c: 144:  wdtdelay(50);
  6626  0189E6  0E32               	movlw	50
  6627  0189E8  6EE6               	movwf	postinc1,c
  6628  0189EA  0E00               	movlw	0
  6629  0189EC  6EE6               	movwf	postinc1,c
  6630  0189EE  0E00               	movlw	0
  6631  0189F0  6EE6               	movwf	postinc1,c
  6632  0189F2  0E00               	movlw	0
  6633  0189F4  6EE6               	movwf	postinc1,c
  6634  0189F6  EC3C  F0BF         	call	_wdtdelay	;wreg free
  6635                           
  6636                           ; BSR set to: 0
  6637                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6638  0189FA  0012               	return		;funcret
  6639  0189FC                     __end_of_wait_lcd_done:
  6640                           	opt callstack 0
  6641                           
  6642 ;; *************** function _wdtdelay *****************
  6643 ;; Defined at:
  6644 ;;		line 22 in file "eadog.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  delay           4  [STACK] const unsigned long 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1  [STACK] void 
  6651 ;; Registers used:
  6652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 3F/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    6
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_init_display
  6669 ;;		_send_lcd_cmd
  6670 ;;		_send_lcd_cmd_long
  6671 ;;		_wait_lcd_done
  6672 ;; This function uses a reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text31
  6676  017E78                     __ptext31:
  6677                           	opt callstack 0
  6678  017E78                     _wdtdelay:
  6679                           	opt callstack 22
  6680                           
  6681                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6682                           
  6683                           ; BSR set to: 0
  6684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6685                           ;incstack = 0
  6686  017E78  0100               	movlb	0	; () banked
  6687  017E7A  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6688  017E7C  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6689  017E7E  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6690  017E80  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6691  017E82                     l1345:
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;eadog.c: 27:   __nop();
  6695  017E82  F000               	nop	
  6696  017E84  0004               	clrwdt		;# 
  6697                           
  6698                           ;eadog.c: 29:  };
  6699  017E86  0E01               	movlw	1
  6700  017E88  0100               	movlb	0	; () banked
  6701  017E8A  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6702  017E8C  0E00               	movlw	0
  6703  017E8E  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6704  017E90  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6705  017E92  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;stkvar	_delay @ sp[(0)+-4]
  6709  017E94  0EFC               	movlw	-4
  6710  017E96  006F FF8C  F032    	movff	plusw1,btemp
  6711  017E9C  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6712  017E9E  5C32               	subwf	btemp^0,w,c
  6713  017EA0  0EFD               	movlw	-3
  6714  017EA2  006F FF8C  F032    	movff	plusw1,btemp
  6715  017EA8  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6716  017EAA  5832               	subwfb	btemp^0,w,c
  6717  017EAC  0EFE               	movlw	-2
  6718  017EAE  006F FF8C  F032    	movff	plusw1,btemp
  6719  017EB4  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6720  017EB6  5832               	subwfb	btemp^0,w,c
  6721  017EB8  0EFF               	movlw	-1
  6722  017EBA  006F FF8C  F032    	movff	plusw1,btemp
  6723  017EC0  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6724  017EC2  5832               	subwfb	btemp^0,w,c
  6725  017EC4  B0D8               	btfsc	status,0,c
  6726  017EC6  D7DD               	goto	l1345
  6727                           
  6728                           ; BSR set to: 0
  6729                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6730  017EC8  52E5               	movf	postdec1,f,c
  6731  017ECA  52E5               	movf	postdec1,f,c
  6732  017ECC  52E5               	movf	postdec1,f,c
  6733  017ECE  52E5               	movf	postdec1,f,c
  6734  017ED0  0012               	return		;funcret
  6735  017ED2                     __end_of_wdtdelay:
  6736                           	opt callstack 0
  6737                           
  6738 ;; *************** function _eaDogM_WriteString *****************
  6739 ;; Defined at:
  6740 ;;		line 184 in file "eadog.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  strPtr          2  [STACK] PTR unsigned char 
  6743 ;;		 -> D.lcd(216), D(218), V(187), 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;		None
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  1  [STACK] void 
  6748 ;; Registers used:
  6749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6750 ;; Tracked objects:
  6751 ;;		On entry : 3F/0
  6752 ;;		On exit  : 3F/3B
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6759 ;;Total ram usage:        0 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:   15
  6762 ;; This function calls:
  6763 ;;		_printf
  6764 ;;		_ringBufS_flush
  6765 ;;		_start_lcd
  6766 ;;		_strlen
  6767 ;;		_wait_lcd_set
  6768 ;; This function is called by:
  6769 ;;		_eaDogM_WriteStringAtPos
  6770 ;; This function uses a reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text32
  6774  017472                     __ptext32:
  6775                           	opt callstack 0
  6776  017472                     _eaDogM_WriteString:
  6777                           	opt callstack 13
  6778                           
  6779                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6780                           
  6781                           ; BSR set to: 0
  6782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6783                           ;incstack = 0
  6784  017472  ECD2  F0C5         	call	_wait_lcd_set	;wreg free
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6788  017476  0E00               	movlw	0
  6789  017478  6EE6               	movwf	postinc1,c
  6790  01747A  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6791  017480  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6792  017486  EC29  F0BB         	call	_ringBufS_flush	;wreg free
  6793  01748A  94BC               	bcf	188,2,c	;volatile
  6794                           
  6795                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6796                           ;stkvar	_strPtr @ sp[(0)+-2]
  6797  01748C  0EFE               	movlw	-2
  6798  01748E  006F FF8F FFE6     	movff	plusw1,postinc1
  6799  017494  006F FF8F FFE6     	movff	plusw1,postinc1
  6800  01749A  EC8C  F0BA         	call	_strlen	;wreg free
  6801  01749E  5033               	movf	(btemp+1)^0,w,c
  6802  0174A0  E104               	bnz	u10370
  6803  0174A2  0E41               	movlw	65
  6804  0174A4  5C32               	subwf	btemp^0,w,c
  6805  0174A6  A0D8               	btfss	status,0,c
  6806  0174A8  D010               	goto	l10295
  6807  0174AA                     u10370:
  6808                           
  6809                           ;stkvar	_strPtr @ sp[(0)+-2]
  6810  0174AA  0EFE               	movlw	-2
  6811  0174AC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6812  0174B2  0EFF               	movlw	-1
  6813  0174B4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6814  0174BA  0E40               	movlw	64
  6815  0174BC  243C               	addwf	(btemp+10)^0,w,c
  6816  0174BE  6ED9               	movwf	fsr2l,c
  6817  0174C0  0E00               	movlw	0
  6818  0174C2  203D               	addwfc	(btemp+11)^0,w,c
  6819  0174C4  6EDA               	movwf	fsr2h,c
  6820  0174C6  0E00               	movlw	0
  6821  0174C8  6EDF               	movwf	indf2,c
  6822  0174CA                     l10295:
  6823                           
  6824                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6825  0174CA  013B               	movlb	59	; () banked
  6826  0174CC  9FFC               	bcf	252,7,b	;volatile
  6827                           
  6828                           ; BSR set to: 59
  6829                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6830                           ;stkvar	_strPtr @ sp[(0)+-2]
  6831  0174CE  0EFE               	movlw	-2
  6832  0174D0  006F FF8F FFE6     	movff	plusw1,postinc1
  6833  0174D6  006F FF8F FFE6     	movff	plusw1,postinc1
  6834  0174DC  EC8C  F0BA         	call	_strlen	;wreg free
  6835  0174E0  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6836  0174E6  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6837                           
  6838                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6839  0174EC  013B               	movlb	59	; () banked
  6840  0174EE  8FFC               	bsf	252,7,b	;volatile
  6841                           
  6842                           ; BSR set to: 59
  6843                           ;eadog.c: 195:  printf("%s", strPtr);
  6844                           ;stkvar	_strPtr @ sp[(0)+-2]
  6845  0174F0  0EFE               	movlw	-2
  6846  0174F2  006F FF8F FFE6     	movff	plusw1,postinc1
  6847  0174F8  006F FF8F FFE6     	movff	plusw1,postinc1
  6848  0174FE  0EFC               	movlw	low STR_21
  6849  017500  6EE6               	movwf	postinc1,c
  6850  017502  0EFF               	movlw	high STR_21
  6851  017504  6EE6               	movwf	postinc1,c
  6852  017506  0E04               	movlw	4
  6853  017508  6EE6               	movwf	postinc1,c
  6854  01750A  ECAE  F0BE         	call	_printf	;wreg free
  6855                           
  6856                           ;eadog.c: 196:  start_lcd();
  6857  01750E  ECD5  F0C5         	call	_start_lcd	;wreg free
  6858                           
  6859                           ; BSR set to: 59
  6860                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6861  017512  52E5               	movf	postdec1,f,c
  6862  017514  52E5               	movf	postdec1,f,c
  6863  017516  0012               	return		;funcret
  6864  017518                     __end_of_eaDogM_WriteString:
  6865                           	opt callstack 0
  6866                           
  6867 ;; *************** function _wait_lcd_set *****************
  6868 ;; Defined at:
  6869 ;;		line 131 in file "eadog.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;		None
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;		None
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  1  [STACK] void 
  6876 ;; Registers used:
  6877 ;;		None
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/3D
  6880 ;;		On exit  : 3F/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6887 ;;Total ram usage:        0 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; Hardware stack levels required when called:    6
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_eaDogM_WriteString
  6894 ;;		_send_lcd_cmd_dma
  6895 ;; This function uses a reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text33
  6899  018BA4                     __ptext33:
  6900                           	opt callstack 0
  6901  018BA4                     _wait_lcd_set:
  6902                           	opt callstack 21
  6903                           
  6904                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6905                           
  6906                           ; BSR set to: 59
  6907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6908                           ;incstack = 0
  6909  018BA4  0100               	movlb	0	; () banked
  6910  018BA6  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6911                           
  6912                           ; BSR set to: 0
  6913                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6914  018BA8  0012               	return		;funcret
  6915  018BAA                     __end_of_wait_lcd_set:
  6916                           	opt callstack 0
  6917                           
  6918 ;; *************** function _start_lcd *****************
  6919 ;; Defined at:
  6920 ;;		line 126 in file "eadog.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;		None
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;		None
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1  [STACK] void 
  6927 ;; Registers used:
  6928 ;;		None
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/3B
  6931 ;;		On exit  : 3F/3B
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6938 ;;Total ram usage:        0 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:    6
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_eaDogM_WriteString
  6945 ;;		_send_lcd_cmd_dma
  6946 ;; This function uses a reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text34
  6950  018BAA                     __ptext34:
  6951                           	opt callstack 0
  6952  018BAA                     _start_lcd:
  6953                           	opt callstack 21
  6954                           
  6955                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6956                           
  6957                           ; BSR set to: 0
  6958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6959                           ;incstack = 0
  6960  018BAA  013B               	movlb	59	; () banked
  6961  018BAC  8DFC               	bsf	252,6,b	;volatile
  6962                           
  6963                           ; BSR set to: 59
  6964                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6965  018BAE  0012               	return		;funcret
  6966  018BB0                     __end_of_start_lcd:
  6967                           	opt callstack 0
  6968                           
  6969 ;; *************** function _ringBufS_flush *****************
  6970 ;; Defined at:
  6971 ;;		line 76 in file "ringbufs.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6974 ;;		 -> ring_buf1(67), 
  6975 ;;  clearBuffer     1  [STACK] const char 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1  [STACK] void 
  6980 ;; Registers used:
  6981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6982 ;; Tracked objects:
  6983 ;;		On entry : 3F/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6991 ;;Total ram usage:        0 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; Hardware stack levels required when called:    7
  6994 ;; This function calls:
  6995 ;;		_memset
  6996 ;; This function is called by:
  6997 ;;		_eaDogM_WriteString
  6998 ;;		_send_lcd_cmd_dma
  6999 ;; This function uses a reentrant model
  7000 ;;
  7001                           
  7002                           	psect	text35
  7003  017652                     __ptext35:
  7004                           	opt callstack 0
  7005  017652                     _ringBufS_flush:
  7006                           	opt callstack 20
  7007                           
  7008                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7009                           ;stkvar	__this @ sp[(0)+-2]
  7010                           
  7011                           ; BSR set to: 59
  7012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7013                           ;incstack = 0
  7014  017652  0EFE               	movlw	-2
  7015  017654  006F FF8C  F03C    	movff	plusw1,btemp+10
  7016  01765A  0EFF               	movlw	-1
  7017  01765C  006F FF8C  F03D    	movff	plusw1,btemp+11
  7018  017662  0E42               	movlw	66
  7019  017664  243C               	addwf	(btemp+10)^0,w,c
  7020  017666  6ED9               	movwf	fsr2l,c
  7021  017668  0E00               	movlw	0
  7022  01766A  203D               	addwfc	(btemp+11)^0,w,c
  7023  01766C  6EDA               	movwf	fsr2h,c
  7024  01766E  0E00               	movlw	0
  7025  017670  6EDF               	movwf	indf2,c
  7026                           
  7027                           ;ringbufs.c: 79:  _this->head = 0;
  7028                           ;stkvar	__this @ sp[(0)+-2]
  7029  017672  0EFE               	movlw	-2
  7030  017674  006F FF8C  F03C    	movff	plusw1,btemp+10
  7031  01767A  0EFF               	movlw	-1
  7032  01767C  006F FF8C  F03D    	movff	plusw1,btemp+11
  7033  017682  0E40               	movlw	64
  7034  017684  243C               	addwf	(btemp+10)^0,w,c
  7035  017686  6ED9               	movwf	fsr2l,c
  7036  017688  0E00               	movlw	0
  7037  01768A  203D               	addwfc	(btemp+11)^0,w,c
  7038  01768C  6EDA               	movwf	fsr2h,c
  7039  01768E  0E00               	movlw	0
  7040  017690  6EDF               	movwf	indf2,c
  7041                           
  7042                           ;ringbufs.c: 80:  _this->tail = 0;
  7043                           ;stkvar	__this @ sp[(0)+-2]
  7044  017692  0EFE               	movlw	-2
  7045  017694  006F FF8C  F03C    	movff	plusw1,btemp+10
  7046  01769A  0EFF               	movlw	-1
  7047  01769C  006F FF8C  F03D    	movff	plusw1,btemp+11
  7048  0176A2  0E41               	movlw	65
  7049  0176A4  243C               	addwf	(btemp+10)^0,w,c
  7050  0176A6  6ED9               	movwf	fsr2l,c
  7051  0176A8  0E00               	movlw	0
  7052  0176AA  203D               	addwfc	(btemp+11)^0,w,c
  7053  0176AC  6EDA               	movwf	fsr2h,c
  7054  0176AE  0E00               	movlw	0
  7055  0176B0  6EDF               	movwf	indf2,c
  7056                           
  7057                           ;ringbufs.c: 81:  if (clearBuffer) {
  7058                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7059  0176B2  0EFD               	movlw	-3
  7060  0176B4  50E3               	movf	plusw1,w,c
  7061  0176B6  B4D8               	btfsc	status,2,c
  7062  0176B8  D011               	goto	l1485
  7063                           
  7064                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7065  0176BA  0E40               	movlw	64
  7066  0176BC  6EE6               	movwf	postinc1,c
  7067  0176BE  0E00               	movlw	0
  7068  0176C0  6EE6               	movwf	postinc1,c
  7069  0176C2  0E00               	movlw	0
  7070  0176C4  6EE6               	movwf	postinc1,c
  7071  0176C6  0E00               	movlw	0
  7072  0176C8  6EE6               	movwf	postinc1,c
  7073                           
  7074                           ;stkvar	__this @ sp[(-4)+-2]
  7075  0176CA  0EFA               	movlw	-6
  7076  0176CC  006F FF8F FFE6     	movff	plusw1,postinc1
  7077  0176D2  006F FF8F FFE6     	movff	plusw1,postinc1
  7078  0176D8  EC97  F0A4         	call	_memset	;wreg free
  7079  0176DC                     l1485:
  7080                           
  7081                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7082  0176DC  52E5               	movf	postdec1,f,c
  7083  0176DE  52E5               	movf	postdec1,f,c
  7084  0176E0  52E5               	movf	postdec1,f,c
  7085  0176E2  0012               	return		;funcret
  7086  0176E4                     __end_of_ringBufS_flush:
  7087                           	opt callstack 0
  7088                           
  7089 ;; *************** function _memset *****************
  7090 ;; Defined at:
  7091 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  dest            2  [STACK] PTR void 
  7094 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7095 ;;  c               2  [STACK] int 
  7096 ;;  n               2  [STACK] unsigned int 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  s               2  [STACK] PTR unsigned char 
  7099 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7100 ;;  k               2  [STACK] unsigned int 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  2  [STACK] PTR void 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7114 ;;Total ram usage:        0 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    6
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_ringBufS_init
  7121 ;;		_ringBufS_flush
  7122 ;; This function uses a reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text36
  7126  01492E                     __ptext36:
  7127                           	opt callstack 0
  7128  01492E                     _memset:
  7129                           	opt callstack 0
  7130                           
  7131                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7132  01492E  52E6               	movf	postinc1,f,c
  7133  014930  52E6               	movf	postinc1,f,c
  7134  014932  52E6               	movf	postinc1,f,c
  7135  014934  52E6               	movf	postinc1,f,c
  7136                           
  7137                           ;stkvar	_dest @ sp[(-4)+-2]
  7138                           
  7139                           ;incstack = 0
  7140  014936  0EFA               	movlw	-6
  7141  014938  006F FF8C  F03C    	movff	plusw1,btemp+10
  7142  01493E  0EFB               	movlw	-5
  7143  014940  006F FF8C  F03D    	movff	plusw1,btemp+11
  7144                           
  7145                           ;stkvar	_s @ sp[(-4)+0]
  7146  014946  0EFD               	movlw	-3
  7147  014948  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7148  01494E  0EFC               	movlw	-4
  7149  014950  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7150                           
  7151                           ;stkvar	_n @ sp[(-4)+-6]
  7152  014956  0EF6               	movlw	-10
  7153  014958  006F FF8C  F032    	movff	plusw1,btemp
  7154  01495E  0EF7               	movlw	-9
  7155  014960  50E3               	movf	plusw1,w,c
  7156  014962  1032               	iorwf	btemp^0,w,c
  7157  014964  B4D8               	btfsc	status,2,c
  7158  014966  D154               	goto	u10340
  7159                           
  7160                           ;stkvar	_c @ sp[(-4)+-4]
  7161                           ;stkvar	_s @ sp[(-4)+0]
  7162  014968  0EFC               	movlw	-4
  7163  01496A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7164  014970  0EFD               	movlw	-3
  7165  014972  006F FF8F FFDA     	movff	plusw1,fsr2h
  7166  014978  0EF8               	movlw	-8
  7167  01497A  006F FF8F FFDF     	movff	plusw1,indf2
  7168                           
  7169                           ;stkvar	_c @ sp[(-4)+-4]
  7170                           ;stkvar	_n @ sp[(-4)+-6]
  7171                           ;stkvar	_s @ sp[(-4)+0]
  7172  014980  0EFC               	movlw	-4
  7173  014982  006F FF8C  F03C    	movff	plusw1,btemp+10
  7174  014988  0EFD               	movlw	-3
  7175  01498A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7176  014990  0EF6               	movlw	-10
  7177  014992  50E3               	movf	plusw1,w,c
  7178  014994  263C               	addwf	(btemp+10)^0,f,c
  7179  014996  0EF7               	movlw	-9
  7180  014998  50E3               	movf	plusw1,w,c
  7181  01499A  223D               	addwfc	(btemp+11)^0,f,c
  7182  01499C  0EFF               	movlw	255
  7183  01499E  243C               	addwf	(btemp+10)^0,w,c
  7184  0149A0  6ED9               	movwf	fsr2l,c
  7185  0149A2  0EFF               	movlw	255
  7186  0149A4  203D               	addwfc	(btemp+11)^0,w,c
  7187  0149A6  6EDA               	movwf	fsr2h,c
  7188  0149A8  0EF8               	movlw	-8
  7189  0149AA  006F FF8F FFDF     	movff	plusw1,indf2
  7190                           
  7191                           ;stkvar	_n @ sp[(-4)+-6]
  7192  0149B0  0EF7               	movlw	-9
  7193  0149B2  50E3               	movf	plusw1,w,c
  7194  0149B4  E108               	bnz	l10211
  7195  0149B6  0EF6               	movlw	-10
  7196  0149B8  006F FF8C  F032    	movff	plusw1,btemp
  7197  0149BE  0E03               	movlw	3
  7198  0149C0  5E32               	subwf	btemp^0,f,c
  7199  0149C2  A0D8               	btfss	status,0,c
  7200  0149C4  D125               	goto	u10340
  7201  0149C6                     l10211:
  7202                           
  7203                           ;stkvar	_c @ sp[(-4)+-4]
  7204                           ;stkvar	_s @ sp[(-4)+0]
  7205  0149C6  0EFC               	movlw	-4
  7206  0149C8  006F FF8C  F03C    	movff	plusw1,btemp+10
  7207  0149CE  0EFD               	movlw	-3
  7208  0149D0  006F FF8C  F03D    	movff	plusw1,btemp+11
  7209  0149D6  0E01               	movlw	1
  7210  0149D8  243C               	addwf	(btemp+10)^0,w,c
  7211  0149DA  6ED9               	movwf	fsr2l,c
  7212  0149DC  0E00               	movlw	0
  7213  0149DE  203D               	addwfc	(btemp+11)^0,w,c
  7214  0149E0  6EDA               	movwf	fsr2h,c
  7215  0149E2  0EF8               	movlw	-8
  7216  0149E4  006F FF8F FFDF     	movff	plusw1,indf2
  7217                           
  7218                           ;stkvar	_c @ sp[(-4)+-4]
  7219                           ;stkvar	_s @ sp[(-4)+0]
  7220  0149EA  0EFC               	movlw	-4
  7221  0149EC  006F FF8C  F03C    	movff	plusw1,btemp+10
  7222  0149F2  0EFD               	movlw	-3
  7223  0149F4  006F FF8C  F03D    	movff	plusw1,btemp+11
  7224  0149FA  0E02               	movlw	2
  7225  0149FC  243C               	addwf	(btemp+10)^0,w,c
  7226  0149FE  6ED9               	movwf	fsr2l,c
  7227  014A00  0E00               	movlw	0
  7228  014A02  203D               	addwfc	(btemp+11)^0,w,c
  7229  014A04  6EDA               	movwf	fsr2h,c
  7230  014A06  0EF8               	movlw	-8
  7231  014A08  006F FF8F FFDF     	movff	plusw1,indf2
  7232                           
  7233                           ;stkvar	_c @ sp[(-4)+-4]
  7234                           ;stkvar	_n @ sp[(-4)+-6]
  7235                           ;stkvar	_s @ sp[(-4)+0]
  7236  014A0E  0EFC               	movlw	-4
  7237  014A10  006F FF8C  F03C    	movff	plusw1,btemp+10
  7238  014A16  0EFD               	movlw	-3
  7239  014A18  006F FF8C  F03D    	movff	plusw1,btemp+11
  7240  014A1E  0EF6               	movlw	-10
  7241  014A20  50E3               	movf	plusw1,w,c
  7242  014A22  263C               	addwf	(btemp+10)^0,f,c
  7243  014A24  0EF7               	movlw	-9
  7244  014A26  50E3               	movf	plusw1,w,c
  7245  014A28  223D               	addwfc	(btemp+11)^0,f,c
  7246  014A2A  0EFE               	movlw	254
  7247  014A2C  243C               	addwf	(btemp+10)^0,w,c
  7248  014A2E  6ED9               	movwf	fsr2l,c
  7249  014A30  0EFF               	movlw	255
  7250  014A32  203D               	addwfc	(btemp+11)^0,w,c
  7251  014A34  6EDA               	movwf	fsr2h,c
  7252  014A36  0EF8               	movlw	-8
  7253  014A38  006F FF8F FFDF     	movff	plusw1,indf2
  7254                           
  7255                           ;stkvar	_c @ sp[(-4)+-4]
  7256                           ;stkvar	_n @ sp[(-4)+-6]
  7257                           ;stkvar	_s @ sp[(-4)+0]
  7258  014A3E  0EFC               	movlw	-4
  7259  014A40  006F FF8C  F03C    	movff	plusw1,btemp+10
  7260  014A46  0EFD               	movlw	-3
  7261  014A48  006F FF8C  F03D    	movff	plusw1,btemp+11
  7262  014A4E  0EF6               	movlw	-10
  7263  014A50  50E3               	movf	plusw1,w,c
  7264  014A52  263C               	addwf	(btemp+10)^0,f,c
  7265  014A54  0EF7               	movlw	-9
  7266  014A56  50E3               	movf	plusw1,w,c
  7267  014A58  223D               	addwfc	(btemp+11)^0,f,c
  7268  014A5A  0EFD               	movlw	253
  7269  014A5C  243C               	addwf	(btemp+10)^0,w,c
  7270  014A5E  6ED9               	movwf	fsr2l,c
  7271  014A60  0EFF               	movlw	255
  7272  014A62  203D               	addwfc	(btemp+11)^0,w,c
  7273  014A64  6EDA               	movwf	fsr2h,c
  7274  014A66  0EF8               	movlw	-8
  7275  014A68  006F FF8F FFDF     	movff	plusw1,indf2
  7276                           
  7277                           ;stkvar	_n @ sp[(-4)+-6]
  7278  014A6E  0EF7               	movlw	-9
  7279  014A70  50E3               	movf	plusw1,w,c
  7280  014A72  E108               	bnz	l10217
  7281  014A74  0EF6               	movlw	-10
  7282  014A76  006F FF8C  F032    	movff	plusw1,btemp
  7283  014A7C  0E07               	movlw	7
  7284  014A7E  5E32               	subwf	btemp^0,f,c
  7285  014A80  A0D8               	btfss	status,0,c
  7286  014A82  D0C6               	goto	u10340
  7287  014A84                     l10217:
  7288                           
  7289                           ;stkvar	_c @ sp[(-4)+-4]
  7290                           ;stkvar	_s @ sp[(-4)+0]
  7291  014A84  0EFC               	movlw	-4
  7292  014A86  006F FF8C  F03C    	movff	plusw1,btemp+10
  7293  014A8C  0EFD               	movlw	-3
  7294  014A8E  006F FF8C  F03D    	movff	plusw1,btemp+11
  7295  014A94  0E03               	movlw	3
  7296  014A96  243C               	addwf	(btemp+10)^0,w,c
  7297  014A98  6ED9               	movwf	fsr2l,c
  7298  014A9A  0E00               	movlw	0
  7299  014A9C  203D               	addwfc	(btemp+11)^0,w,c
  7300  014A9E  6EDA               	movwf	fsr2h,c
  7301  014AA0  0EF8               	movlw	-8
  7302  014AA2  006F FF8F FFDF     	movff	plusw1,indf2
  7303                           
  7304                           ;stkvar	_c @ sp[(-4)+-4]
  7305                           ;stkvar	_n @ sp[(-4)+-6]
  7306                           ;stkvar	_s @ sp[(-4)+0]
  7307  014AA8  0EFC               	movlw	-4
  7308  014AAA  006F FF8C  F03C    	movff	plusw1,btemp+10
  7309  014AB0  0EFD               	movlw	-3
  7310  014AB2  006F FF8C  F03D    	movff	plusw1,btemp+11
  7311  014AB8  0EF6               	movlw	-10
  7312  014ABA  50E3               	movf	plusw1,w,c
  7313  014ABC  263C               	addwf	(btemp+10)^0,f,c
  7314  014ABE  0EF7               	movlw	-9
  7315  014AC0  50E3               	movf	plusw1,w,c
  7316  014AC2  223D               	addwfc	(btemp+11)^0,f,c
  7317  014AC4  0EFC               	movlw	252
  7318  014AC6  243C               	addwf	(btemp+10)^0,w,c
  7319  014AC8  6ED9               	movwf	fsr2l,c
  7320  014ACA  0EFF               	movlw	255
  7321  014ACC  203D               	addwfc	(btemp+11)^0,w,c
  7322  014ACE  6EDA               	movwf	fsr2h,c
  7323  014AD0  0EF8               	movlw	-8
  7324  014AD2  006F FF8F FFDF     	movff	plusw1,indf2
  7325                           
  7326                           ;stkvar	_n @ sp[(-4)+-6]
  7327  014AD8  0EF7               	movlw	-9
  7328  014ADA  50E3               	movf	plusw1,w,c
  7329  014ADC  E108               	bnz	l10223
  7330  014ADE  0EF6               	movlw	-10
  7331  014AE0  006F FF8C  F032    	movff	plusw1,btemp
  7332  014AE6  0E09               	movlw	9
  7333  014AE8  5E32               	subwf	btemp^0,f,c
  7334  014AEA  A0D8               	btfss	status,0,c
  7335  014AEC  D091               	goto	u10340
  7336  014AEE                     l10223:
  7337                           
  7338                           ;stkvar	_s @ sp[(-4)+0]
  7339  014AEE  0EFC               	movlw	-4
  7340  014AF0  006F FF8C  F03C    	movff	plusw1,btemp+10
  7341  014AF6  1E3C               	comf	(btemp+10)^0,f,c
  7342  014AF8  0EFD               	movlw	-3
  7343  014AFA  006F FF8C  F03D    	movff	plusw1,btemp+11
  7344  014B00  1E3D               	comf	(btemp+11)^0,f,c
  7345  014B02  2A3C               	incf	(btemp+10)^0,f,c
  7346  014B04  B4D8               	btfsc	status,2,c
  7347  014B06  2A3D               	incf	(btemp+11)^0,f,c
  7348  014B08  0E03               	movlw	3
  7349  014B0A  163C               	andwf	(btemp+10)^0,f,c
  7350  014B0C  0E00               	movlw	0
  7351  014B0E  163D               	andwf	(btemp+11)^0,f,c
  7352                           
  7353                           ;stkvar	_k @ sp[(-4)+2]
  7354  014B10  0EFE               	movlw	-2
  7355  014B12  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7356  014B18  0EFF               	movlw	-1
  7357  014B1A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7358                           
  7359                           ;stkvar	_k @ sp[(-4)+2]
  7360                           ;stkvar	_s @ sp[(-4)+0]
  7361  014B20  0EFC               	movlw	-4
  7362  014B22  50E3               	movf	plusw1,w,c
  7363  014B24  6E32               	movwf	btemp^0,c
  7364  014B26  0EFE               	movlw	-2
  7365  014B28  50E3               	movf	plusw1,w,c
  7366  014B2A  2632               	addwf	btemp^0,f,c
  7367  014B2C  0EFC               	movlw	-4
  7368  014B2E  0060  F0CB  FFE3   	movff	btemp,plusw1
  7369  014B34  0EFD               	movlw	-3
  7370  014B36  50E3               	movf	plusw1,w,c
  7371  014B38  6E32               	movwf	btemp^0,c
  7372  014B3A  0EFF               	movlw	-1
  7373  014B3C  50E3               	movf	plusw1,w,c
  7374  014B3E  2232               	addwfc	btemp^0,f,c
  7375  014B40  0EFD               	movlw	-3
  7376  014B42  0060  F0CB  FFE3   	movff	btemp,plusw1
  7377                           
  7378                           ;stkvar	_k @ sp[(-4)+2]
  7379                           ;stkvar	_n @ sp[(-4)+-6]
  7380  014B48  0EF6               	movlw	-10
  7381  014B4A  50E3               	movf	plusw1,w,c
  7382  014B4C  6E32               	movwf	btemp^0,c
  7383  014B4E  0EFE               	movlw	-2
  7384  014B50  50E3               	movf	plusw1,w,c
  7385  014B52  5E32               	subwf	btemp^0,f,c
  7386  014B54  0EF6               	movlw	-10
  7387  014B56  0060  F0CB  FFE3   	movff	btemp,plusw1
  7388  014B5C  0EF7               	movlw	-9
  7389  014B5E  50E3               	movf	plusw1,w,c
  7390  014B60  6E32               	movwf	btemp^0,c
  7391  014B62  0EFF               	movlw	-1
  7392  014B64  50E3               	movf	plusw1,w,c
  7393  014B66  5A32               	subwfb	btemp^0,f,c
  7394  014B68  0EF7               	movlw	-9
  7395  014B6A  0060  F0CB  FFE3   	movff	btemp,plusw1
  7396  014B70  0EFC               	movlw	252
  7397  014B72  6E3C               	movwf	(btemp+10)^0,c
  7398  014B74  0EFF               	movlw	255
  7399  014B76  6E3D               	movwf	(btemp+11)^0,c
  7400                           
  7401                           ;stkvar	_n @ sp[(-4)+-6]
  7402  014B78  0EF6               	movlw	-10
  7403  014B7A  006F FF8C  F032    	movff	plusw1,btemp
  7404  014B80  503C               	movf	(btemp+10)^0,w,c
  7405  014B82  1632               	andwf	btemp^0,f,c
  7406  014B84  0EF6               	movlw	-10
  7407  014B86  0060  F0CB  FFE3   	movff	btemp,plusw1
  7408  014B8C  0EF7               	movlw	-9
  7409  014B8E  006F FF8C  F032    	movff	plusw1,btemp
  7410  014B94  503D               	movf	(btemp+11)^0,w,c
  7411  014B96  1632               	andwf	btemp^0,f,c
  7412  014B98  0EF7               	movlw	-9
  7413  014B9A  D02E               	goto	L4
  7414  014B9C                     l10231:
  7415                           
  7416                           ;stkvar	_c @ sp[(-4)+-4]
  7417                           ;stkvar	_s @ sp[(-4)+0]
  7418  014B9C  0EFC               	movlw	-4
  7419  014B9E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7420  014BA4  0EFD               	movlw	-3
  7421  014BA6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7422  014BAC  0EF8               	movlw	-8
  7423  014BAE  006F FF8F FFDF     	movff	plusw1,indf2
  7424                           
  7425                           ;stkvar	_n @ sp[(-4)+-6]
  7426  014BB4  0EF6               	movlw	-10
  7427  014BB6  006F FF8C  F032    	movff	plusw1,btemp
  7428  014BBC  0E01               	movlw	1
  7429  014BBE  5E32               	subwf	btemp^0,f,c
  7430  014BC0  0EF6               	movlw	-10
  7431  014BC2  0060  F0CB  FFE3   	movff	btemp,plusw1
  7432  014BC8  0EF7               	movlw	-9
  7433  014BCA  006F FF8C  F032    	movff	plusw1,btemp
  7434  014BD0  0E00               	movlw	0
  7435  014BD2  5A32               	subwfb	btemp^0,f,c
  7436  014BD4  0EF7               	movlw	-9
  7437  014BD6  0060  F0CB  FFE3   	movff	btemp,plusw1
  7438                           
  7439                           ;stkvar	_s @ sp[(-4)+0]
  7440  014BDC  0EFC               	movlw	-4
  7441  014BDE  50E3               	movf	plusw1,w,c
  7442  014BE0  0F01               	addlw	1
  7443  014BE2  6E32               	movwf	btemp^0,c
  7444  014BE4  0EFC               	movlw	-4
  7445  014BE6  0060  F0CB  FFE3   	movff	btemp,plusw1
  7446  014BEC  6A32               	clrf	btemp^0,c
  7447  014BEE  0EFD               	movlw	-3
  7448  014BF0  50E3               	movf	plusw1,w,c
  7449  014BF2  2032               	addwfc	btemp^0,w,c
  7450  014BF4  6E32               	movwf	btemp^0,c
  7451  014BF6  0EFD               	movlw	-3
  7452  014BF8                     L4:
  7453  014BF8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7454                           
  7455                           ;stkvar	_n @ sp[(-4)+-6]
  7456  014BFE  0EF6               	movlw	-10
  7457  014C00  006F FF8C  F032    	movff	plusw1,btemp
  7458  014C06  0EF7               	movlw	-9
  7459  014C08  50E3               	movf	plusw1,w,c
  7460  014C0A  1032               	iorwf	btemp^0,w,c
  7461  014C0C  A4D8               	btfss	status,2,c
  7462  014C0E  D7C6               	goto	l10231
  7463  014C10                     u10340:
  7464                           
  7465                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7466  014C10  0EF6               	movlw	246
  7467  014C12  26E1               	addwf	fsr1l,f,c
  7468  014C14  0EFF               	movlw	255
  7469  014C16  22E2               	addwfc	fsr1h,f,c
  7470  014C18  0012               	return		;funcret
  7471  014C1A                     __end_of_memset:
  7472                           	opt callstack 0
  7473                           
  7474 ;; *************** function _printf *****************
  7475 ;; Defined at:
  7476 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  fmt             2  [STACK] PTR const unsigned char 
  7479 ;;		 -> STR_23(3), STR_22(3), STR_21(3), 
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;  ap              2  [STACK] PTR void [1]
  7482 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7483 ;;  ret             2    0        int 
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  2  [STACK] int 
  7486 ;; Registers used:
  7487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7488 ;; Tracked objects:
  7489 ;;		On entry : 3F/3B
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7497 ;;Total ram usage:        0 bytes
  7498 ;; Hardware stack levels used:    1
  7499 ;; Hardware stack levels required when called:   14
  7500 ;; This function calls:
  7501 ;;		_vfprintf
  7502 ;; This function is called by:
  7503 ;;		_eaDogM_WriteString
  7504 ;;		_send_lcd_cmd_dma
  7505 ;; This function uses a reentrant model
  7506 ;;
  7507                           
  7508                           	psect	text37
  7509  017D5C                     __ptext37:
  7510                           	opt callstack 0
  7511  017D5C                     _printf:
  7512                           	opt callstack 0
  7513                           
  7514                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7515  017D5C  52E6               	movf	postinc1,f,c
  7516  017D5E  52E6               	movf	postinc1,f,c
  7517                           
  7518                           ;stkvar	?_printf @ sp[(-2)+-3]
  7519                           
  7520                           ;incstack = 0
  7521  017D60  0EFB               	movlw	251
  7522  017D62  24E1               	addwf	fsr1l,w,c
  7523  017D64  6E3C               	movwf	(btemp+10)^0,c
  7524  017D66  0EFF               	movlw	255
  7525  017D68  20E2               	addwfc	fsr1h,w,c
  7526  017D6A  6E3D               	movwf	(btemp+11)^0,c
  7527                           
  7528                           ;stkvar	_ap @ sp[(-2)+0]
  7529  017D6C  0EFF               	movlw	-1
  7530  017D6E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7531  017D74  0EFE               	movlw	-2
  7532  017D76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7533                           
  7534                           ;stkvar	_ap @ sp[(-2)+0]
  7535  017D7C  0EFE               	movlw	254
  7536  017D7E  24E1               	addwf	fsr1l,w,c
  7537  017D80  6E32               	movwf	btemp^0,c
  7538  017D82  0EFF               	movlw	255
  7539  017D84  20E2               	addwfc	fsr1h,w,c
  7540  017D86  6E33               	movwf	(btemp+1)^0,c
  7541  017D88  0060  F0CB  FFE6   	movff	btemp,postinc1
  7542  017D8E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7543                           
  7544                           ;stkvar	_fmt @ sp[(-4)+-3]
  7545  017D94  0EF9               	movlw	-7
  7546  017D96  006F FF8F FFE6     	movff	plusw1,postinc1
  7547  017D9C  006F FF8F FFE6     	movff	plusw1,postinc1
  7548  017DA2  0E00               	movlw	0
  7549  017DA4  6EE6               	movwf	postinc1,c
  7550  017DA6  0E00               	movlw	0
  7551  017DA8  6EE6               	movwf	postinc1,c
  7552  017DAA  ECE5  F0B9         	call	_vfprintf	;wreg free
  7553                           
  7554                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  7555  017DAE  52E5               	movf	postdec1,f,c
  7556  017DB0  52E5               	movf	postdec1,f,c
  7557  017DB2  52E5               	movf	postdec1,f,c
  7558  017DB4  50E7               	movf	indf1,w,c
  7559  017DB6  5EE1               	subwf	fsr1l,f,c
  7560  017DB8  0E00               	movlw	0
  7561  017DBA  5AE2               	subwfb	fsr1h,f,c
  7562  017DBC  0012               	return		;funcret
  7563  017DBE                     __end_of_printf:
  7564                           	opt callstack 0
  7565                           
  7566 ;; *************** function _vfprintf *****************
  7567 ;; Defined at:
  7568 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7571 ;;		 -> f(6), NULL(0), 
  7572 ;;  fmt             2  [STACK] PTR const unsigned char 
  7573 ;;		 -> STR_41(3), STR_40(3), STR_39(19), STR_38(19), 
  7574 ;;		 -> STR_37(19), STR_36(19), STR_35(19), STR_34(19), 
  7575 ;;		 -> STR_33(24), STR_32(15), STR_31(15), STR_30(15), 
  7576 ;;		 -> STR_29(10), STR_28(10), STR_27(19), STR_26(19), 
  7577 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(19), 
  7578 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  7579 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  7580 ;;		 -> STR_11(19), STR_10(19), STR_9(19), STR_8(17), 
  7581 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  7582 ;;		 -> STR_1(17), 
  7583 ;;  ap              2  [STACK] PTR PTR void 
  7584 ;;		 -> ap(2), ap(2), 
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;  cfmt            2  [STACK] PTR unsigned char 
  7587 ;;		 -> STR_41(3), STR_40(3), STR_39(19), STR_38(19), 
  7588 ;;		 -> STR_37(19), STR_36(19), STR_35(19), STR_34(19), 
  7589 ;;		 -> STR_33(24), STR_32(15), STR_31(15), STR_30(15), 
  7590 ;;		 -> STR_29(10), STR_28(10), STR_27(19), STR_26(19), 
  7591 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(19), 
  7592 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  7593 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  7594 ;;		 -> STR_11(19), STR_10(19), STR_9(19), STR_8(17), 
  7595 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  7596 ;;		 -> STR_1(17), 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  2  [STACK] int 
  7599 ;; Registers used:
  7600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/5
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7610 ;;Total ram usage:        0 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:   13
  7613 ;; This function calls:
  7614 ;;		_vfpfcnvrt
  7615 ;; This function is called by:
  7616 ;;		_sprintf
  7617 ;;		_printf
  7618 ;; This function uses a reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text38
  7622  0173CA                     __ptext38:
  7623                           	opt callstack 0
  7624  0173CA                     _vfprintf:
  7625                           	opt callstack 0
  7626                           
  7627                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7628  0173CA  52E6               	movf	postinc1,f,c
  7629  0173CC  52E6               	movf	postinc1,f,c
  7630                           
  7631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7632                           ;stkvar	_fmt @ sp[(-2)+-4]
  7633                           
  7634                           ;incstack = 0
  7635  0173CE  0EFA               	movlw	-6
  7636  0173D0  006F FF8C  F03C    	movff	plusw1,btemp+10
  7637  0173D6  0EFB               	movlw	-5
  7638  0173D8  006F FF8C  F03D    	movff	plusw1,btemp+11
  7639                           
  7640                           ;stkvar	_cfmt @ sp[(-2)+0]
  7641  0173DE  0EFF               	movlw	-1
  7642  0173E0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7643  0173E6  0EFE               	movlw	-2
  7644  0173E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7645                           
  7646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7647  0173EE  6A19               	clrf	_nout^0,c
  7648  0173F0  6A1A               	clrf	(_nout+1)^0,c
  7649                           
  7650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7651  0173F2  D020               	goto	l10245
  7652  0173F4                     l10243:
  7653                           
  7654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7655                           ;stkvar	_ap @ sp[(-2)+-6]
  7656  0173F4  0EF8               	movlw	-8
  7657  0173F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7658  0173FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7659                           
  7660                           ;stkvar	_cfmt @ sp[(-4)+0]
  7661  017402  0EFC               	movlw	252
  7662  017404  24E1               	addwf	fsr1l,w,c
  7663  017406  6E32               	movwf	btemp^0,c
  7664  017408  0EFF               	movlw	255
  7665  01740A  20E2               	addwfc	fsr1h,w,c
  7666  01740C  6E33               	movwf	(btemp+1)^0,c
  7667  01740E  0060  F0CB  FFE6   	movff	btemp,postinc1
  7668  017414  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7669                           
  7670                           ;stkvar	_fp @ sp[(-6)+-2]
  7671  01741A  0EF8               	movlw	-8
  7672  01741C  006F FF8F FFE6     	movff	plusw1,postinc1
  7673  017422  006F FF8F FFE6     	movff	plusw1,postinc1
  7674  017428  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7675  01742C  5032               	movf	btemp^0,w,c
  7676  01742E  2619               	addwf	_nout^0,f,c
  7677  017430  5033               	movf	(btemp+1)^0,w,c
  7678  017432  221A               	addwfc	(_nout+1)^0,f,c
  7679  017434                     l10245:
  7680                           
  7681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7682                           ;stkvar	_cfmt @ sp[(-2)+0]
  7683  017434  50E1               	movf	fsr1l,w,c
  7684  017436  0FFE               	addlw	-2
  7685  017438  6ED9               	movwf	fsr2l,c
  7686  01743A  50E2               	movf	fsr1h,w,c
  7687  01743C  6EDA               	movwf	fsr2h,c
  7688  01743E  0EFF               	movlw	255
  7689  017440  22DA               	addwfc	fsr2h,f,c
  7690  017442  006F FF7B FFF6     	movff	postinc2,tblptrl
  7691  017448  006F FF77 FFF7     	movff	postdec2,tblptrh
  7692  01744E                     	if	0	;tblptru may be non-zero
  7693  01744E                     	endif
  7694  01744E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7695  01744E  0E00               	movlw	low (__mediumconst shr (0+16))
  7696  017450  6EF8               	movwf	tblptru,c
  7697  017452                     	endif
  7698  017452  0008               	tblrd		*
  7699  017454  50F5               	movf	tablat,w,c
  7700  017456  0900               	iorlw	0
  7701  017458  A4D8               	btfss	status,2,c
  7702  01745A  D7CC               	goto	l10243
  7703                           
  7704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7705  01745C  0060  F064  F032   	movff	_nout,btemp
  7706  017462  0060  F068  F033   	movff	_nout+1,btemp+1
  7707                           
  7708                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7709  017468  0EF8               	movlw	248
  7710  01746A  26E1               	addwf	fsr1l,f,c
  7711  01746C  0EFF               	movlw	255
  7712  01746E  22E2               	addwfc	fsr1h,f,c
  7713  017470  0012               	return		;funcret
  7714  017472                     __end_of_vfprintf:
  7715                           	opt callstack 0
  7716                           
  7717 ;; *************** function _vfpfcnvrt *****************
  7718 ;; Defined at:
  7719 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7722 ;;		 -> f(6), NULL(0), 
  7723 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7724 ;;		 -> cfmt(2), 
  7725 ;;  ap              2  [STACK] PTR PTR void 
  7726 ;;		 -> ap(2), ap(2), 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  llu             8  [STACK] unsigned long long 
  7729 ;;  ll              8  [STACK] long long 
  7730 ;;  f               4  [STACK] long long 
  7731 ;;  ct              3  [STACK] unsigned char [3]
  7732 ;;  vp              3    0        PTR void 
  7733 ;;  cp              2  [STACK] PTR unsigned char 
  7734 ;;		 -> ?_printf(2), ?_sprintf(2), STR_25(9), STR_24(12), 
  7735 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
  7736 ;;		 -> STR_3(6), V(187), 
  7737 ;;  i               2    0        int 
  7738 ;;  done            2    0        int 
  7739 ;;  c               1  [STACK] unsigned char 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  2  [STACK] int 
  7742 ;; Registers used:
  7743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/5
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7753 ;;Total ram usage:        0 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:   12
  7756 ;; This function calls:
  7757 ;;		_atoi
  7758 ;;		_ctoa
  7759 ;;		_dtoa
  7760 ;;		_efgtoa
  7761 ;;		_fputc
  7762 ;;		_isdigit
  7763 ;;		_isupper
  7764 ;;		_stoa
  7765 ;;		_strncmp
  7766 ;;		_tolower
  7767 ;;		_xtoa
  7768 ;; This function is called by:
  7769 ;;		_vfprintf
  7770 ;; This function uses a reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text39
  7774  011244                     __ptext39:
  7775                           	opt callstack 0
  7776  011244                     _vfpfcnvrt:
  7777                           	opt callstack 0
  7778                           
  7779                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7780  011244  0E20               	movlw	32
  7781  011246  26E1               	addwf	fsr1l,f,c
  7782  011248  0E00               	movlw	0
  7783  01124A  22E2               	addwfc	fsr1h,f,c
  7784                           
  7785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7786                           ;stkvar	_fmt @ sp[(-32)+-4]
  7787                           
  7788                           ;incstack = 0
  7789  01124C  0EDC               	movlw	-36
  7790  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7791  011254  0EDD               	movlw	-35
  7792  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7793  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7794  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7795  011268                     	if	0	;tblptru may be non-zero
  7796  011268                     	endif
  7797  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7798  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7799  01126A  6EF8               	movwf	tblptru,c
  7800  01126C                     	endif
  7801  01126C  0008               	tblrd		*
  7802  01126E  50F5               	movf	tablat,w,c
  7803  011270  0A25               	xorlw	37
  7804  011272  A4D8               	btfss	status,2,c
  7805  011274  EF92  F08E         	goto	l10189
  7806                           
  7807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7808                           ;stkvar	_fmt @ sp[(-32)+-4]
  7809  011278  0EDC               	movlw	-36
  7810  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7811  011280  0EDD               	movlw	-35
  7812  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7813  011288  2ADE               	incf	postinc2,f,c
  7814  01128A  0E00               	movlw	0
  7815  01128C  22DD               	addwfc	postdec2,f,c
  7816                           
  7817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7818  01128E  6A1B               	clrf	_width^0,c
  7819  011290  6A1C               	clrf	(_width+1)^0,c
  7820  011292  6A1F               	clrf	_flags^0,c
  7821  011294  6A20               	clrf	(_flags+1)^0,c
  7822                           
  7823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7824  011296  681D               	setf	_prec^0,c
  7825  011298  681E               	setf	(_prec+1)^0,c
  7826                           
  7827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7828                           ;stkvar	_fmt @ sp[(-32)+-4]
  7829  01129A  0EDC               	movlw	-36
  7830  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7831  0112A2  0EDD               	movlw	-35
  7832  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7833  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7834  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7835  0112B6                     	if	0	;tblptru may be non-zero
  7836  0112B6                     	endif
  7837  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7838  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7839  0112B8  6EF8               	movwf	tblptru,c
  7840  0112BA                     	endif
  7841  0112BA  0008               	tblrd		*
  7842  0112BC  50F5               	movf	tablat,w,c
  7843  0112BE  0A2A               	xorlw	42
  7844  0112C0  A4D8               	btfss	status,2,c
  7845  0112C2  D031               	goto	l10053
  7846                           
  7847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7848                           ;stkvar	_fmt @ sp[(-32)+-4]
  7849  0112C4  0EDC               	movlw	-36
  7850  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7851  0112CC  0EDD               	movlw	-35
  7852  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7853  0112D4  2ADE               	incf	postinc2,f,c
  7854  0112D6  0E00               	movlw	0
  7855  0112D8  22DD               	addwfc	postdec2,f,c
  7856                           
  7857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7858                           ;stkvar	_ap @ sp[(-32)+-6]
  7859  0112DA  0EDA               	movlw	-38
  7860  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7861  0112E2  0EDB               	movlw	-37
  7862  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7863  0112EA  0E02               	movlw	2
  7864  0112EC  5EDE               	subwf	postinc2,f,c
  7865  0112EE  0E00               	movlw	0
  7866  0112F0  5ADD               	subwfb	postdec2,f,c
  7867  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7868  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7869  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7870  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7871  01130A  006F FF78  F01B    	movff	postinc2,_width
  7872  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7873                           
  7874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7875  011316  AE1C               	btfss	(_width+1)^0,7,c
  7876  011318  D066               	goto	u10100
  7877                           
  7878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7879  01131A  801F               	bsf	_flags^0,0,c
  7880                           
  7881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7882  01131C  6C1B               	negf	_width^0,c
  7883  01131E  1E1C               	comf	(_width+1)^0,f,c
  7884  011320  B0D8               	btfsc	status,0,c
  7885  011322  2A1C               	incf	(_width+1)^0,f,c
  7886  011324  D060               	goto	u10100
  7887  011326                     l10053:
  7888                           
  7889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7890                           ;stkvar	_fmt @ sp[(-32)+-4]
  7891  011326  0EDC               	movlw	-36
  7892  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7893  01132E  0EDD               	movlw	-35
  7894  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7895  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7896  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7897  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7898  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7899  01134E  EC0E  F0AA         	call	_atoi	;wreg free
  7900  011352  0060  F0C8  F01B   	movff	btemp,_width
  7901  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7902                           
  7903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7904  01135E  D00B               	goto	l10057
  7905  011360                     l10055:
  7906                           
  7907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7908                           ;stkvar	_fmt @ sp[(-32)+-4]
  7909  011360  0EDC               	movlw	-36
  7910  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7911  011368  0EDD               	movlw	-35
  7912  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7913  011370  2ADE               	incf	postinc2,f,c
  7914  011372  0E00               	movlw	0
  7915  011374  22DD               	addwfc	postdec2,f,c
  7916  011376                     l10057:
  7917  011376  0ED0               	movlw	208
  7918  011378  6E3C               	movwf	(btemp+10)^0,c
  7919  01137A  0EFF               	movlw	255
  7920  01137C  6E3D               	movwf	(btemp+11)^0,c
  7921                           
  7922                           ;stkvar	_fmt @ sp[(-32)+-4]
  7923  01137E  0EDC               	movlw	-36
  7924  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7925  011386  0EDD               	movlw	-35
  7926  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7927  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7928  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7929  01139A                     	if	0	;tblptru may be non-zero
  7930  01139A                     	endif
  7931  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7932  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7933  01139C  6EF8               	movwf	tblptru,c
  7934  01139E                     	endif
  7935  01139E  0008               	tblrd		*
  7936  0113A0  50F5               	movf	tablat,w,c
  7937  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7938  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7939  0113A6  503C               	movf	(btemp+10)^0,w,c
  7940  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7941  0113AA  503D               	movf	(btemp+11)^0,w,c
  7942  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7943  0113AE  503B               	movf	(btemp+9)^0,w,c
  7944  0113B0  E106               	bnz	u10080
  7945  0113B2  0E0A               	movlw	10
  7946  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7947  0113B6  B0D8               	btfsc	status,0,c
  7948  0113B8  D002               	goto	u10080
  7949  0113BA  0E01               	movlw	1
  7950  0113BC  D001               	goto	u10090
  7951  0113BE                     u10080:
  7952  0113BE  0E00               	movlw	0
  7953  0113C0                     u10090:
  7954  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7955  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7956                           
  7957                           ;stkvar	_vfpfcnvrt$4553 @ sp[(-32)+4]
  7958  0113C4  0EE4               	movlw	-28
  7959  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7960  0113CC  0EE5               	movlw	-27
  7961  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7962                           
  7963                           ;stkvar	_vfpfcnvrt$4553 @ sp[(-32)+4]
  7964  0113D4  0EE4               	movlw	-28
  7965  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7966  0113DC  0EE5               	movlw	-27
  7967  0113DE  50E3               	movf	plusw1,w,c
  7968  0113E0  1032               	iorwf	btemp^0,w,c
  7969  0113E2  A4D8               	btfss	status,2,c
  7970  0113E4  D7BD               	goto	l10055
  7971  0113E6                     u10100:
  7972                           
  7973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7974                           ;stkvar	_fmt @ sp[(-32)+-4]
  7975  0113E6  0EDC               	movlw	-36
  7976  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7977  0113EE  0EDD               	movlw	-35
  7978  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7979  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7980  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7981  011402                     	if	0	;tblptru may be non-zero
  7982  011402                     	endif
  7983  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7984  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7985  011404  6EF8               	movwf	tblptru,c
  7986  011406                     	endif
  7987  011406  0008               	tblrd		*
  7988  011408  50F5               	movf	tablat,w,c
  7989  01140A  0A2E               	xorlw	46
  7990  01140C  A4D8               	btfss	status,2,c
  7991  01140E  D0AC               	goto	u10150
  7992                           
  7993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7994  011410  6A1D               	clrf	_prec^0,c
  7995  011412  6A1E               	clrf	(_prec+1)^0,c
  7996                           
  7997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7998                           ;stkvar	_fmt @ sp[(-32)+-4]
  7999  011414  0EDC               	movlw	-36
  8000  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8001  01141C  0EDD               	movlw	-35
  8002  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8003  011424  2ADE               	incf	postinc2,f,c
  8004  011426  0E00               	movlw	0
  8005  011428  22DD               	addwfc	postdec2,f,c
  8006                           
  8007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8008                           ;stkvar	_fmt @ sp[(-32)+-4]
  8009  01142A  0EDC               	movlw	-36
  8010  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8011  011432  0EDD               	movlw	-35
  8012  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8013  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8014  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8015  011446                     	if	0	;tblptru may be non-zero
  8016  011446                     	endif
  8017  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8018  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8019  011448  6EF8               	movwf	tblptru,c
  8020  01144A                     	endif
  8021  01144A  0008               	tblrd		*
  8022  01144C  50F5               	movf	tablat,w,c
  8023  01144E  0A2A               	xorlw	42
  8024  011450  A4D8               	btfss	status,2,c
  8025  011452  D02A               	goto	l10075
  8026                           
  8027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8028                           ;stkvar	_fmt @ sp[(-32)+-4]
  8029  011454  0EDC               	movlw	-36
  8030  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8031  01145C  0EDD               	movlw	-35
  8032  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8033  011464  2ADE               	incf	postinc2,f,c
  8034  011466  0E00               	movlw	0
  8035  011468  22DD               	addwfc	postdec2,f,c
  8036                           
  8037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8038                           ;stkvar	_ap @ sp[(-32)+-6]
  8039  01146A  0EDA               	movlw	-38
  8040  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8041  011472  0EDB               	movlw	-37
  8042  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8043  01147A  0E02               	movlw	2
  8044  01147C  5EDE               	subwf	postinc2,f,c
  8045  01147E  0E00               	movlw	0
  8046  011480  5ADD               	subwfb	postdec2,f,c
  8047  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  8048  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  8049  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8050  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8051  01149A  006F FF78  F01D    	movff	postinc2,_prec
  8052  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  8053                           
  8054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8055  0114A6  D060               	goto	u10150
  8056  0114A8                     l10075:
  8057                           
  8058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8059                           ;stkvar	_fmt @ sp[(-32)+-4]
  8060  0114A8  0EDC               	movlw	-36
  8061  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8062  0114B0  0EDD               	movlw	-35
  8063  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8064  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  8065  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  8066  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8067  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8068  0114D0  EC0E  F0AA         	call	_atoi	;wreg free
  8069  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  8070  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  8071                           
  8072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8073  0114E0  D00B               	goto	l10079
  8074  0114E2                     l10077:
  8075                           
  8076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8077                           ;stkvar	_fmt @ sp[(-32)+-4]
  8078  0114E2  0EDC               	movlw	-36
  8079  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8080  0114EA  0EDD               	movlw	-35
  8081  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8082  0114F2  2ADE               	incf	postinc2,f,c
  8083  0114F4  0E00               	movlw	0
  8084  0114F6  22DD               	addwfc	postdec2,f,c
  8085  0114F8                     l10079:
  8086  0114F8  0ED0               	movlw	208
  8087  0114FA  6E3C               	movwf	(btemp+10)^0,c
  8088  0114FC  0EFF               	movlw	255
  8089  0114FE  6E3D               	movwf	(btemp+11)^0,c
  8090                           
  8091                           ;stkvar	_fmt @ sp[(-32)+-4]
  8092  011500  0EDC               	movlw	-36
  8093  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8094  011508  0EDD               	movlw	-35
  8095  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8096  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8097  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8098  01151C                     	if	0	;tblptru may be non-zero
  8099  01151C                     	endif
  8100  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8101  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8102  01151E  6EF8               	movwf	tblptru,c
  8103  011520                     	endif
  8104  011520  0008               	tblrd		*
  8105  011522  50F5               	movf	tablat,w,c
  8106  011524  6E3A               	movwf	(btemp+8)^0,c
  8107  011526  6A3B               	clrf	(btemp+9)^0,c
  8108  011528  503C               	movf	(btemp+10)^0,w,c
  8109  01152A  263A               	addwf	(btemp+8)^0,f,c
  8110  01152C  503D               	movf	(btemp+11)^0,w,c
  8111  01152E  223B               	addwfc	(btemp+9)^0,f,c
  8112  011530  503B               	movf	(btemp+9)^0,w,c
  8113  011532  E106               	bnz	u10130
  8114  011534  0E0A               	movlw	10
  8115  011536  5C3A               	subwf	(btemp+8)^0,w,c
  8116  011538  B0D8               	btfsc	status,0,c
  8117  01153A  D002               	goto	u10130
  8118  01153C  0E01               	movlw	1
  8119  01153E  D001               	goto	u10140
  8120  011540                     u10130:
  8121  011540  0E00               	movlw	0
  8122  011542                     u10140:
  8123  011542  6E3C               	movwf	(btemp+10)^0,c
  8124  011544  6A3D               	clrf	(btemp+11)^0,c
  8125                           
  8126                           ;stkvar	_vfpfcnvrt$4554 @ sp[(-32)+0]
  8127  011546  0EE0               	movlw	-32
  8128  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8129  01154E  0EE1               	movlw	-31
  8130  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8131                           
  8132                           ;stkvar	_vfpfcnvrt$4554 @ sp[(-32)+0]
  8133  011556  0EE0               	movlw	-32
  8134  011558  006F FF8C  F032    	movff	plusw1,btemp
  8135  01155E  0EE1               	movlw	-31
  8136  011560  50E3               	movf	plusw1,w,c
  8137  011562  1032               	iorwf	btemp^0,w,c
  8138  011564  A4D8               	btfss	status,2,c
  8139  011566  D7BD               	goto	l10077
  8140  011568                     u10150:
  8141                           
  8142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8143                           ;stkvar	_fmt @ sp[(-32)+-4]
  8144  011568  0EDC               	movlw	-36
  8145  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8146  011570  0EDD               	movlw	-35
  8147  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8148  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8149  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8150  011584                     	if	0	;tblptru may be non-zero
  8151  011584                     	endif
  8152  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8153  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8154  011586  6EF8               	movwf	tblptru,c
  8155  011588                     	endif
  8156  011588  0008               	tblrd		*
  8157  01158A  50F5               	movf	tablat,w,c
  8158  01158C  6EE6               	movwf	postinc1,c
  8159  01158E  0E00               	movlw	0
  8160  011590  6EE6               	movwf	postinc1,c
  8161  011592  EC89  F0BC         	call	_tolower	;wreg free
  8162                           
  8163                           ;stkvar	_ct @ sp[(-32)+26]
  8164  011596  0EFA               	movlw	-6
  8165  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  8166                           
  8167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8168                           ;stkvar	_ct @ sp[(-32)+26]
  8169  01159E  0EFA               	movlw	-6
  8170  0115A0  50E3               	movf	plusw1,w,c
  8171  0115A2  B4D8               	btfsc	status,2,c
  8172  0115A4  D05B               	goto	l10095
  8173                           
  8174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8175                           ;stkvar	_ct @ sp[(-32)+26]
  8176  0115A6  0EFB               	movlw	251
  8177  0115A8  24E1               	addwf	fsr1l,w,c
  8178  0115AA  6ED9               	movwf	fsr2l,c
  8179  0115AC  0EFF               	movlw	255
  8180  0115AE  20E2               	addwfc	fsr1h,w,c
  8181  0115B0  6EDA               	movwf	fsr2h,c
  8182                           
  8183                           ;stkvar	_fmt @ sp[(-32)+-4]
  8184  0115B2  0EDC               	movlw	-36
  8185  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8186  0115BA  0EDD               	movlw	-35
  8187  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8188  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  8189  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  8190  0115CE  0E01               	movlw	1
  8191  0115D0  263C               	addwf	(btemp+10)^0,f,c
  8192  0115D2  0E00               	movlw	0
  8193  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  8194  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8195  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8196  0115E2                     	if	0	;tblptru may be non-zero
  8197  0115E2                     	endif
  8198  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8199  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8200  0115E4  6EF8               	movwf	tblptru,c
  8201  0115E6                     	endif
  8202  0115E6  0008               	tblrd		*
  8203  0115E8  50F5               	movf	tablat,w,c
  8204  0115EA  6EE6               	movwf	postinc1,c
  8205  0115EC  0E00               	movlw	0
  8206  0115EE  6EE6               	movwf	postinc1,c
  8207  0115F0  EC89  F0BC         	call	_tolower	;wreg free
  8208  0115F4  5032               	movf	btemp^0,w,c
  8209  0115F6  6EDF               	movwf	indf2,c
  8210                           
  8211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  8212                           ;stkvar	_ct @ sp[(-32)+26]
  8213  0115F8  0EFB               	movlw	251
  8214  0115FA  24E1               	addwf	fsr1l,w,c
  8215  0115FC  6ED9               	movwf	fsr2l,c
  8216  0115FE  0EFF               	movlw	255
  8217  011600  20E2               	addwfc	fsr1h,w,c
  8218  011602  6EDA               	movwf	fsr2h,c
  8219  011604  50DF               	movf	indf2,w,c
  8220  011606  B4D8               	btfsc	status,2,c
  8221  011608  D029               	goto	l10095
  8222                           
  8223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  8224                           ;stkvar	_ct @ sp[(-32)+26]
  8225  01160A  0EFC               	movlw	252
  8226  01160C  24E1               	addwf	fsr1l,w,c
  8227  01160E  6ED9               	movwf	fsr2l,c
  8228  011610  0EFF               	movlw	255
  8229  011612  20E2               	addwfc	fsr1h,w,c
  8230  011614  6EDA               	movwf	fsr2h,c
  8231                           
  8232                           ;stkvar	_fmt @ sp[(-32)+-4]
  8233  011616  0EDC               	movlw	-36
  8234  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  8235  01161E  0EDD               	movlw	-35
  8236  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  8237  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  8238  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  8239  011632  0E02               	movlw	2
  8240  011634  263C               	addwf	(btemp+10)^0,f,c
  8241  011636  0E00               	movlw	0
  8242  011638  223D               	addwfc	(btemp+11)^0,f,c
  8243  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8244  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8245  011646                     	if	0	;tblptru may be non-zero
  8246  011646                     	endif
  8247  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8248  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  8249  011648  6EF8               	movwf	tblptru,c
  8250  01164A                     	endif
  8251  01164A  0008               	tblrd		*
  8252  01164C  50F5               	movf	tablat,w,c
  8253  01164E  6EE6               	movwf	postinc1,c
  8254  011650  0E00               	movlw	0
  8255  011652  6EE6               	movwf	postinc1,c
  8256  011654  EC89  F0BC         	call	_tolower	;wreg free
  8257  011658  5032               	movf	btemp^0,w,c
  8258  01165A  6EDF               	movwf	indf2,c
  8259  01165C                     l10095:
  8260                           
  8261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8262                           ;stkvar	_fmt @ sp[(-32)+-4]
  8263  01165C  0EDC               	movlw	-36
  8264  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8265  011664  0EDD               	movlw	-35
  8266  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  8267  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8268  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  8269  011678                     	if	0	;tblptru may be non-zero
  8270  011678                     	endif
  8271  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8272  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  8273  01167A  6EF8               	movwf	tblptru,c
  8274  01167C                     	endif
  8275  01167C  0008               	tblrd		*
  8276  01167E  50F5               	movf	tablat,w,c
  8277  011680  0A63               	xorlw	99
  8278  011682  A4D8               	btfss	status,2,c
  8279  011684  D036               	goto	l10105
  8280                           
  8281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8282                           ;stkvar	_fmt @ sp[(-32)+-4]
  8283  011686  0EDC               	movlw	-36
  8284  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  8285  01168E  0EDD               	movlw	-35
  8286  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  8287  011696  2ADE               	incf	postinc2,f,c
  8288  011698  0E00               	movlw	0
  8289  01169A  22DD               	addwfc	postdec2,f,c
  8290                           
  8291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8292                           ;stkvar	_ap @ sp[(-32)+-6]
  8293  01169C  0EDA               	movlw	-38
  8294  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8295  0116A4  0EDB               	movlw	-37
  8296  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8297  0116AC  0E02               	movlw	2
  8298  0116AE  5EDE               	subwf	postinc2,f,c
  8299  0116B0  0E00               	movlw	0
  8300  0116B2  5ADD               	subwfb	postdec2,f,c
  8301  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  8302  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  8303  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8304  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8305  0116CC  50DF               	movf	indf2,w,c
  8306  0116CE  6E3D               	movwf	(btemp+11)^0,c
  8307                           
  8308                           ;stkvar	_c @ sp[(-32)+31]
  8309  0116D0  0EFF               	movlw	-1
  8310  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8311                           
  8312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8313                           ;stkvar	_c @ sp[(-32)+31]
  8314  0116D8  0EFF               	movlw	-1
  8315  0116DA  50E3               	movf	plusw1,w,c
  8316  0116DC  6EE6               	movwf	postinc1,c
  8317                           
  8318                           ;stkvar	_fp @ sp[(-33)+-2]
  8319  0116DE  0EDD               	movlw	-35
  8320  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8321  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8322  0116EC  EC03  F0BC         	call	_ctoa	;wreg free
  8323  0116F0  D343               	goto	l2053
  8324  0116F2                     l10105:
  8325                           
  8326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8327                           ;stkvar	_fmt @ sp[(-32)+-4]
  8328  0116F2  0EDC               	movlw	-36
  8329  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8330  0116FA  0EDD               	movlw	-35
  8331  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8332  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  8333  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  8334  01170E                     	if	0	;tblptru may be non-zero
  8335  01170E                     	endif
  8336  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8337  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  8338  011710  6EF8               	movwf	tblptru,c
  8339  011712                     	endif
  8340  011712  0008               	tblrd		*
  8341  011714  50F5               	movf	tablat,w,c
  8342  011716  0A64               	xorlw	100
  8343  011718  B4D8               	btfsc	status,2,c
  8344  01171A  D015               	goto	u10200
  8345                           
  8346                           ;stkvar	_fmt @ sp[(-32)+-4]
  8347  01171C  0EDC               	movlw	-36
  8348  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8349  011724  0EDD               	movlw	-35
  8350  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8351  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8352  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8353  011738                     	if	0	;tblptru may be non-zero
  8354  011738                     	endif
  8355  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8356  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  8357  01173A  6EF8               	movwf	tblptru,c
  8358  01173C                     	endif
  8359  01173C  0008               	tblrd		*
  8360  01173E  50F5               	movf	tablat,w,c
  8361  011740  0A69               	xorlw	105
  8362  011742  A4D8               	btfss	status,2,c
  8363  011744  D075               	goto	l10117
  8364  011746                     u10200:
  8365                           
  8366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8367                           ;stkvar	_fmt @ sp[(-32)+-4]
  8368  011746  0EDC               	movlw	-36
  8369  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  8370  01174E  0EDD               	movlw	-35
  8371  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  8372  011756  2ADE               	incf	postinc2,f,c
  8373  011758  0E00               	movlw	0
  8374  01175A  22DD               	addwfc	postdec2,f,c
  8375                           
  8376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8377                           ;stkvar	_ap @ sp[(-32)+-6]
  8378  01175C  0EDA               	movlw	-38
  8379  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8380  011764  0EDB               	movlw	-37
  8381  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  8382  01176C  0E02               	movlw	2
  8383  01176E  5EDE               	subwf	postinc2,f,c
  8384  011770  0E00               	movlw	0
  8385  011772  5ADD               	subwfb	postdec2,f,c
  8386  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  8387  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  8388  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8389  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8390  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  8391  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  8392                           
  8393                           ;stkvar	_ll @ sp[(-32)+14]
  8394  011798  0EEE               	movlw	-18
  8395  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8396  0117A0  0EEF               	movlw	-17
  8397  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8398  0117A8  6A32               	clrf	btemp^0,c
  8399  0117AA  BEE3               	btfsc	plusw1,7,c
  8400  0117AC  6832               	setf	btemp^0,c
  8401  0117AE  0EF0               	movlw	-16
  8402  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8403  0117B6  0EF1               	movlw	-15
  8404  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8405  0117BE  0EF2               	movlw	-14
  8406  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8407  0117C6  0EF3               	movlw	-13
  8408  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8409  0117CE  0EF4               	movlw	-12
  8410  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8411  0117D6  0EF5               	movlw	-11
  8412  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8413                           
  8414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8415                           ;stkvar	_ll @ sp[(-32)+14]
  8416  0117DE  50E1               	movf	fsr1l,w,c
  8417  0117E0  0FEE               	addlw	-18
  8418  0117E2  6ED9               	movwf	fsr2l,c
  8419  0117E4  50E2               	movf	fsr1h,w,c
  8420  0117E6  6EDA               	movwf	fsr2h,c
  8421  0117E8  0EFF               	movlw	255
  8422  0117EA  22DA               	addwfc	fsr2h,f,c
  8423  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8424  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8425  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8426  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8427  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  8428  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  8429  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  8430  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  8431                           
  8432                           ;stkvar	_fp @ sp[(-40)+-2]
  8433  01181C  0ED6               	movlw	-42
  8434  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  8435  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  8436  01182A  ECC4  F09E         	call	_dtoa	;wreg free
  8437  01182E  D2A4               	goto	l2053
  8438  011830                     l10117:
  8439                           
  8440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  8441                           ;stkvar	_ct @ sp[(-32)+26]
  8442  011830  0EFA               	movlw	-6
  8443  011832  006F FF8C  F032    	movff	plusw1,btemp
  8444  011838  0E66               	movlw	102
  8445  01183A  1832               	xorwf	btemp^0,w,c
  8446  01183C  A4D8               	btfss	status,2,c
  8447  01183E  D06E               	goto	l10129
  8448                           
  8449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  8450                           ;stkvar	_fmt @ sp[(-32)+-4]
  8451  011840  0EDC               	movlw	-36
  8452  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  8453  011848  0EDD               	movlw	-35
  8454  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8455  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  8456  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  8457  01185C                     	if	0	;tblptru may be non-zero
  8458  01185C                     	endif
  8459  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8460  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  8461  01185E  6EF8               	movwf	tblptru,c
  8462  011860                     	endif
  8463                           
  8464                           ;stkvar	_c @ sp[(-32)+31]
  8465  011860  0008               	tblrd		*
  8466  011862  0EFF               	movlw	-1
  8467  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  8468                           
  8469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  8470                           ;stkvar	_fmt @ sp[(-32)+-4]
  8471  01186A  0EDC               	movlw	-36
  8472  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8473  011872  0EDD               	movlw	-35
  8474  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  8475  01187A  2ADE               	incf	postinc2,f,c
  8476  01187C  0E00               	movlw	0
  8477  01187E  22DD               	addwfc	postdec2,f,c
  8478                           
  8479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8480                           ;stkvar	_ap @ sp[(-32)+-6]
  8481  011880  0EDA               	movlw	-38
  8482  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  8483  011888  0EDB               	movlw	-37
  8484  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8485  011890  0E04               	movlw	4
  8486  011892  5EDE               	subwf	postinc2,f,c
  8487  011894  0E00               	movlw	0
  8488  011896  5ADD               	subwfb	postdec2,f,c
  8489  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  8490  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8491  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8492  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8493  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8494  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8495  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8496  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8497                           
  8498                           ;stkvar	_f @ sp[(-32)+22]
  8499  0118C8  0EF6               	movlw	-10
  8500  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8501  0118D0  0EF7               	movlw	-9
  8502  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8503  0118D8  0EF8               	movlw	-8
  8504  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8505  0118E0  0EF9               	movlw	-7
  8506  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8507  0118E8                     l10125:
  8508                           
  8509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8510                           ;stkvar	_c @ sp[(-32)+31]
  8511  0118E8  0EFF               	movlw	-1
  8512  0118EA  50E3               	movf	plusw1,w,c
  8513  0118EC  6EE6               	movwf	postinc1,c
  8514                           
  8515                           ;stkvar	_f @ sp[(-33)+22]
  8516  0118EE  0EF5               	movlw	-11
  8517  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8518  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8519  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8520  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8521                           
  8522                           ;stkvar	_fp @ sp[(-37)+-2]
  8523  011908  0ED9               	movlw	-39
  8524  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8525  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8526  011916  EC00  F080         	call	_efgtoa	;wreg free
  8527  01191A  D22E               	goto	l2053
  8528  01191C                     l10129:
  8529                           
  8530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8531  01191C  0E02               	movlw	2
  8532  01191E  6EE6               	movwf	postinc1,c
  8533  011920  0E00               	movlw	0
  8534  011922  6EE6               	movwf	postinc1,c
  8535  011924  0EF6               	movlw	low STR_51
  8536  011926  6EE6               	movwf	postinc1,c
  8537  011928  0EFF               	movlw	high STR_51
  8538  01192A  6EE6               	movwf	postinc1,c
  8539                           
  8540                           ;stkvar	_ct @ sp[(-36)+26]
  8541  01192C  0EF6               	movlw	246
  8542  01192E  24E1               	addwf	fsr1l,w,c
  8543  011930  6E32               	movwf	btemp^0,c
  8544  011932  0EFF               	movlw	255
  8545  011934  20E2               	addwfc	fsr1h,w,c
  8546  011936  6E33               	movwf	(btemp+1)^0,c
  8547  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  8548  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8549  011944  EC7E  F0AE         	call	_strncmp	;wreg free
  8550  011948  5032               	movf	btemp^0,w,c
  8551  01194A  1033               	iorwf	(btemp+1)^0,w,c
  8552  01194C  A4D8               	btfss	status,2,c
  8553  01194E  D096               	goto	l10149
  8554                           
  8555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8556                           ;stkvar	_fmt @ sp[(-32)+-4]
  8557  011950  0EDC               	movlw	-36
  8558  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  8559  011958  0EDD               	movlw	-35
  8560  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8561  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  8562  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  8563  01196C  0E01               	movlw	1
  8564  01196E  263C               	addwf	(btemp+10)^0,f,c
  8565  011970  0E00               	movlw	0
  8566  011972  223D               	addwfc	(btemp+11)^0,f,c
  8567  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8568  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8569  011980                     	if	0	;tblptru may be non-zero
  8570  011980                     	endif
  8571  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8572  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  8573  011982  6EF8               	movwf	tblptru,c
  8574  011984                     	endif
  8575                           
  8576                           ;stkvar	_c @ sp[(-32)+31]
  8577  011984  0008               	tblrd		*
  8578  011986  0EFF               	movlw	-1
  8579  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  8580  01198E  0EBF               	movlw	191
  8581  011990  6E3C               	movwf	(btemp+10)^0,c
  8582  011992  0EFF               	movlw	255
  8583  011994  6E3D               	movwf	(btemp+11)^0,c
  8584                           
  8585                           ;stkvar	_fmt @ sp[(-32)+-4]
  8586  011996  0EDC               	movlw	-36
  8587  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  8588  01199E  0EDD               	movlw	-35
  8589  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8590  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8591  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8592  0119B2                     	if	0	;tblptru may be non-zero
  8593  0119B2                     	endif
  8594  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8595  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8596  0119B4  6EF8               	movwf	tblptru,c
  8597  0119B6                     	endif
  8598  0119B6  0008               	tblrd		*
  8599  0119B8  50F5               	movf	tablat,w,c
  8600  0119BA  6E3A               	movwf	(btemp+8)^0,c
  8601  0119BC  6A3B               	clrf	(btemp+9)^0,c
  8602  0119BE  503C               	movf	(btemp+10)^0,w,c
  8603  0119C0  263A               	addwf	(btemp+8)^0,f,c
  8604  0119C2  503D               	movf	(btemp+11)^0,w,c
  8605  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  8606  0119C6  503B               	movf	(btemp+9)^0,w,c
  8607  0119C8  E106               	bnz	u10230
  8608  0119CA  0E1A               	movlw	26
  8609  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  8610  0119CE  B0D8               	btfsc	status,0,c
  8611  0119D0  D002               	goto	u10230
  8612  0119D2  0E01               	movlw	1
  8613  0119D4  D001               	goto	u10240
  8614  0119D6                     u10230:
  8615  0119D6  0E00               	movlw	0
  8616  0119D8                     u10240:
  8617  0119D8  6E3C               	movwf	(btemp+10)^0,c
  8618  0119DA  6A3D               	clrf	(btemp+11)^0,c
  8619                           
  8620                           ;stkvar	_vfpfcnvrt$4560 @ sp[(-32)+2]
  8621  0119DC  0EE2               	movlw	-30
  8622  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8623  0119E4  0EE3               	movlw	-29
  8624  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8625                           
  8626                           ;stkvar	_vfpfcnvrt$4560 @ sp[(-32)+2]
  8627  0119EC  0EE2               	movlw	-30
  8628  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  8629  0119F4  0EE3               	movlw	-29
  8630  0119F6  50E3               	movf	plusw1,w,c
  8631  0119F8  1032               	iorwf	btemp^0,w,c
  8632                           
  8633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8634                           ;stkvar	_ap @ sp[(-32)+-6]
  8635                           
  8636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8637                           
  8638                           ;stkvar	_f @ sp[(-32)+22]
  8639                           
  8640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8641                           ;stkvar	_ap @ sp[(-32)+-6]
  8642  0119FA  0EDA               	movlw	-38
  8643  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8644  011A02  0EDB               	movlw	-37
  8645  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8646  011A0A  0E04               	movlw	4
  8647  011A0C  5EDE               	subwf	postinc2,f,c
  8648  011A0E  0E00               	movlw	0
  8649  011A10  5ADD               	subwfb	postdec2,f,c
  8650  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8651  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8652  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8653  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8654  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8655  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8656  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8657  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8658                           
  8659                           ;stkvar	_f @ sp[(-32)+22]
  8660  011A42  0EF6               	movlw	-10
  8661  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8662  011A4A  0EF7               	movlw	-9
  8663  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8664  011A52  0EF8               	movlw	-8
  8665  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8666  011A5A  0EF9               	movlw	-7
  8667  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8668                           
  8669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8670                           ;stkvar	_fmt @ sp[(-32)+-4]
  8671  011A62  0EDC               	movlw	-36
  8672  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8673  011A6A  0EDD               	movlw	-35
  8674  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8675  011A72  0E02               	movlw	2
  8676  011A74  26DE               	addwf	postinc2,f,c
  8677  011A76  0E00               	movlw	0
  8678  011A78  22DD               	addwfc	postdec2,f,c
  8679  011A7A  D736               	goto	l10125
  8680  011A7C                     l10149:
  8681                           
  8682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8683                           ;stkvar	_fmt @ sp[(-32)+-4]
  8684  011A7C  0EDC               	movlw	-36
  8685  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8686  011A84  0EDD               	movlw	-35
  8687  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8688  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8689  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8690  011A98                     	if	0	;tblptru may be non-zero
  8691  011A98                     	endif
  8692  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8693  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8694  011A9A  6EF8               	movwf	tblptru,c
  8695  011A9C                     	endif
  8696  011A9C  0008               	tblrd		*
  8697  011A9E  50F5               	movf	tablat,w,c
  8698  011AA0  0A73               	xorlw	115
  8699  011AA2  A4D8               	btfss	status,2,c
  8700  011AA4  D042               	goto	l10159
  8701                           
  8702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8703                           ;stkvar	_fmt @ sp[(-32)+-4]
  8704  011AA6  0EDC               	movlw	-36
  8705  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8706  011AAE  0EDD               	movlw	-35
  8707  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8708  011AB6  2ADE               	incf	postinc2,f,c
  8709  011AB8  0E00               	movlw	0
  8710  011ABA  22DD               	addwfc	postdec2,f,c
  8711                           
  8712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8713                           ;stkvar	_ap @ sp[(-32)+-6]
  8714  011ABC  0EDA               	movlw	-38
  8715  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8716  011AC4  0EDB               	movlw	-37
  8717  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8718  011ACC  0E02               	movlw	2
  8719  011ACE  5EDE               	subwf	postinc2,f,c
  8720  011AD0  0E00               	movlw	0
  8721  011AD2  5ADD               	subwfb	postdec2,f,c
  8722  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8723  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8724  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8725  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8726  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8727  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8728                           
  8729                           ;stkvar	_cp @ sp[(-32)+29]
  8730  011AF8  0EFE               	movlw	-2
  8731  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8732  011B00  0EFD               	movlw	-3
  8733  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8734                           
  8735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8736                           ;stkvar	_cp @ sp[(-32)+29]
  8737  011B08  0EFD               	movlw	-3
  8738  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8739  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8740                           
  8741                           ;stkvar	_fp @ sp[(-34)+-2]
  8742  011B16  0EDC               	movlw	-36
  8743  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8744  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8745  011B24  EC6F  F0A7         	call	_stoa	;wreg free
  8746  011B28  D127               	goto	l2053
  8747  011B2A                     l10159:
  8748                           
  8749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8750                           ;stkvar	_fmt @ sp[(-32)+-4]
  8751  011B2A  0EDC               	movlw	-36
  8752  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8753  011B32  0EDD               	movlw	-35
  8754  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8755  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8756  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8757  011B46                     	if	0	;tblptru may be non-zero
  8758  011B46                     	endif
  8759  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8760  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8761  011B48  6EF8               	movwf	tblptru,c
  8762  011B4A                     	endif
  8763  011B4A  0008               	tblrd		*
  8764  011B4C  50F5               	movf	tablat,w,c
  8765  011B4E  0A78               	xorlw	120
  8766  011B50  B4D8               	btfsc	status,2,c
  8767  011B52  D015               	goto	u10280
  8768                           
  8769                           ;stkvar	_fmt @ sp[(-32)+-4]
  8770  011B54  0EDC               	movlw	-36
  8771  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8772  011B5C  0EDD               	movlw	-35
  8773  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8774  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8775  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8776  011B70                     	if	0	;tblptru may be non-zero
  8777  011B70                     	endif
  8778  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8779  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8780  011B72  6EF8               	movwf	tblptru,c
  8781  011B74                     	endif
  8782  011B74  0008               	tblrd		*
  8783  011B76  50F5               	movf	tablat,w,c
  8784  011B78  0A58               	xorlw	88
  8785  011B7A  A4D8               	btfss	status,2,c
  8786  011B7C  D094               	goto	l10173
  8787  011B7E                     u10280:
  8788                           
  8789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8790                           ;stkvar	_fmt @ sp[(-32)+-4]
  8791  011B7E  0EDC               	movlw	-36
  8792  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8793  011B86  0EDD               	movlw	-35
  8794  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8795  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8796  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8797  011B9A                     	if	0	;tblptru may be non-zero
  8798  011B9A                     	endif
  8799  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8800  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8801  011B9C  6EF8               	movwf	tblptru,c
  8802  011B9E                     	endif
  8803                           
  8804                           ;stkvar	_c @ sp[(-32)+31]
  8805  011B9E  0008               	tblrd		*
  8806  011BA0  0EFF               	movlw	-1
  8807  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8808                           
  8809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8810                           ;stkvar	_fmt @ sp[(-32)+-4]
  8811  011BA8  0EDC               	movlw	-36
  8812  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8813  011BB0  0EDD               	movlw	-35
  8814  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8815  011BB8  2ADE               	incf	postinc2,f,c
  8816  011BBA  0E00               	movlw	0
  8817  011BBC  22DD               	addwfc	postdec2,f,c
  8818                           
  8819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8820                           ;stkvar	_ap @ sp[(-32)+-6]
  8821  011BBE  0EDA               	movlw	-38
  8822  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8823  011BC6  0EDB               	movlw	-37
  8824  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8825  011BCE  0E02               	movlw	2
  8826  011BD0  5EDE               	subwf	postinc2,f,c
  8827  011BD2  0E00               	movlw	0
  8828  011BD4  5ADD               	subwfb	postdec2,f,c
  8829  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8830  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8831  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8832  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8833  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8834  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8835  011BFA  503C               	movf	(btemp+10)^0,w,c
  8836  011BFC  6E42               	movwf	(btemp+16)^0,c
  8837  011BFE  503D               	movf	(btemp+11)^0,w,c
  8838  011C00  6E43               	movwf	(btemp+17)^0,c
  8839  011C02  6A44               	clrf	(btemp+18)^0,c
  8840  011C04  6A45               	clrf	(btemp+19)^0,c
  8841  011C06  6A46               	clrf	(btemp+20)^0,c
  8842  011C08  6A47               	clrf	(btemp+21)^0,c
  8843  011C0A  6A48               	clrf	(btemp+22)^0,c
  8844  011C0C  6A49               	clrf	(btemp+23)^0,c
  8845                           
  8846                           ;stkvar	_llu @ sp[(-32)+6]
  8847  011C0E  0EE6               	movlw	-26
  8848  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8849  011C16  0EE7               	movlw	-25
  8850  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8851  011C1E  0EE8               	movlw	-24
  8852  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8853  011C26  0EE9               	movlw	-23
  8854  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8855  011C2E  0EEA               	movlw	-22
  8856  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8857  011C36  0EEB               	movlw	-21
  8858  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8859  011C3E  0EEC               	movlw	-20
  8860  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8861  011C46  0EED               	movlw	-19
  8862  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8863                           
  8864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8865                           ;stkvar	_c @ sp[(-32)+31]
  8866  011C4E  0EFF               	movlw	-1
  8867  011C50  50E3               	movf	plusw1,w,c
  8868  011C52  6EE6               	movwf	postinc1,c
  8869                           
  8870                           ;stkvar	_llu @ sp[(-33)+6]
  8871  011C54  50E1               	movf	fsr1l,w,c
  8872  011C56  0FE5               	addlw	-27
  8873  011C58  6ED9               	movwf	fsr2l,c
  8874  011C5A  50E2               	movf	fsr1h,w,c
  8875  011C5C  6EDA               	movwf	fsr2h,c
  8876  011C5E  0EFF               	movlw	255
  8877  011C60  22DA               	addwfc	fsr2h,f,c
  8878  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8879  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8880  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8881  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8882  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8883  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8884  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8885  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8886                           
  8887                           ;stkvar	_fp @ sp[(-41)+-2]
  8888  011C92  0ED5               	movlw	-43
  8889  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8890  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8891  011CA0  EC04  F0A1         	call	_xtoa	;wreg free
  8892  011CA4  D069               	goto	l2053
  8893  011CA6                     l10173:
  8894                           
  8895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8896                           ;stkvar	_fmt @ sp[(-32)+-4]
  8897  011CA6  0EDC               	movlw	-36
  8898  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8899  011CAE  0EDD               	movlw	-35
  8900  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8901  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8902  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8903  011CC2                     	if	0	;tblptru may be non-zero
  8904  011CC2                     	endif
  8905  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8906  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8907  011CC4  6EF8               	movwf	tblptru,c
  8908  011CC6                     	endif
  8909  011CC6  0008               	tblrd		*
  8910  011CC8  50F5               	movf	tablat,w,c
  8911  011CCA  0A25               	xorlw	37
  8912  011CCC  A4D8               	btfss	status,2,c
  8913  011CCE  D01A               	goto	l10183
  8914                           
  8915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8916                           ;stkvar	_fmt @ sp[(-32)+-4]
  8917  011CD0  0EDC               	movlw	-36
  8918  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8919  011CD8  0EDD               	movlw	-35
  8920  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8921  011CE0  2ADE               	incf	postinc2,f,c
  8922  011CE2  0E00               	movlw	0
  8923  011CE4  22DD               	addwfc	postdec2,f,c
  8924                           
  8925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8926                           ;stkvar	_fp @ sp[(-32)+-2]
  8927  011CE6  0EDE               	movlw	-34
  8928  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8929  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8930  011CF4  0E25               	movlw	37
  8931  011CF6  6EE6               	movwf	postinc1,c
  8932  011CF8  0E00               	movlw	0
  8933  011CFA  6EE6               	movwf	postinc1,c
  8934  011CFC  EC59  F0B4         	call	_fputc	;wreg free
  8935  011D00                     l10179:
  8936                           
  8937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8938  011D00  0E01               	movlw	1
  8939  011D02  D00C               	goto	L5
  8940  011D04                     l10183:
  8941                           
  8942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8943                           ;stkvar	_fmt @ sp[(-32)+-4]
  8944  011D04  0EDC               	movlw	-36
  8945  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8946  011D0C  0EDD               	movlw	-35
  8947  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8948  011D14  2ADE               	incf	postinc2,f,c
  8949  011D16  0E00               	movlw	0
  8950  011D18  22DD               	addwfc	postdec2,f,c
  8951                           
  8952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8953  011D1A  0E00               	movlw	0
  8954  011D1C                     L5:
  8955  011D1C  6E32               	movwf	btemp^0,c
  8956  011D1E  0E00               	movlw	0
  8957  011D20  6E33               	movwf	(btemp+1)^0,c
  8958  011D22  D02A               	goto	l2053
  8959  011D24                     l10189:
  8960                           
  8961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8962                           ;stkvar	_fp @ sp[(-32)+-2]
  8963  011D24  0EDE               	movlw	-34
  8964  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8965  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8966                           
  8967                           ;stkvar	_fmt @ sp[(-34)+-4]
  8968  011D32  0EDA               	movlw	-38
  8969  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8970  011D3A  0EDB               	movlw	-37
  8971  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8972  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8973  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8974  011D4E                     	if	0	;tblptru may be non-zero
  8975  011D4E                     	endif
  8976  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8977  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8978  011D50  6EF8               	movwf	tblptru,c
  8979  011D52                     	endif
  8980  011D52  0008               	tblrd		*
  8981  011D54  50F5               	movf	tablat,w,c
  8982  011D56  6EE6               	movwf	postinc1,c
  8983  011D58  0E00               	movlw	0
  8984  011D5A  6EE6               	movwf	postinc1,c
  8985  011D5C  EC59  F0B4         	call	_fputc	;wreg free
  8986                           
  8987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8988                           ;stkvar	_fmt @ sp[(-32)+-4]
  8989  011D60  0EDC               	movlw	-36
  8990  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8991  011D68  0EDD               	movlw	-35
  8992  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8993  011D70  2ADE               	incf	postinc2,f,c
  8994  011D72  0E00               	movlw	0
  8995  011D74  22DD               	addwfc	postdec2,f,c
  8996  011D76  D7C4               	goto	l10179
  8997  011D78                     l2053:
  8998                           
  8999                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9000  011D78  0EDA               	movlw	218
  9001  011D7A  26E1               	addwf	fsr1l,f,c
  9002  011D7C  0EFF               	movlw	255
  9003  011D7E  22E2               	addwfc	fsr1h,f,c
  9004  011D80  0012               	return		;funcret
  9005  011D82                     __end_of_vfpfcnvrt:
  9006                           	opt callstack 0
  9007                           
  9008 ;; *************** function _xtoa *****************
  9009 ;; Defined at:
  9010 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9013 ;;		 -> f(6), NULL(0), 
  9014 ;;  d               8  [STACK] unsigned long long 
  9015 ;;  x               1  [STACK] unsigned char 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;  n               8  [STACK] unsigned long long 
  9018 ;;  c               2  [STACK] int 
  9019 ;;  i               2  [STACK] int 
  9020 ;;  w               2  [STACK] int 
  9021 ;;  p               2  [STACK] int 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  2  [STACK] int 
  9024 ;; Registers used:
  9025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/5
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9035 ;;Total ram usage:        0 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:   11
  9038 ;; This function calls:
  9039 ;;		_isalpha
  9040 ;;		_isupper
  9041 ;;		_pad
  9042 ;;		_toupper
  9043 ;; This function is called by:
  9044 ;;		_vfpfcnvrt
  9045 ;; This function uses a reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text40
  9049  014208                     __ptext40:
  9050                           	opt callstack 0
  9051  014208                     _xtoa:
  9052                           	opt callstack 0
  9053                           
  9054                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9055  014208  0E14               	movlw	20
  9056  01420A  26E1               	addwf	fsr1l,f,c
  9057  01420C  0E00               	movlw	0
  9058  01420E  22E2               	addwfc	fsr1h,f,c
  9059                           
  9060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9061                           
  9062                           ;incstack = 0
  9063  014210  AE1E               	btfss	(_prec+1)^0,7,c
  9064                           
  9065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9066  014212  921F               	bcf	_flags^0,1,c
  9067                           
  9068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9069  014214  BE1E               	btfsc	(_prec+1)^0,7,c
  9070  014216  D005               	goto	u9880
  9071  014218  501E               	movf	(_prec+1)^0,w,c
  9072  01421A  E110               	bnz	l9971
  9073  01421C  041D               	decf	_prec^0,w,c
  9074  01421E  B0D8               	btfsc	status,0,c
  9075  014220  D00D               	goto	l9971
  9076  014222                     u9880:
  9077  014222  0E01               	movlw	1
  9078  014224  6E3C               	movwf	(btemp+10)^0,c
  9079  014226  0E00               	movlw	0
  9080  014228  6E3D               	movwf	(btemp+11)^0,c
  9081                           
  9082                           ;stkvar	_p @ sp[(-20)+18]
  9083  01422A  0EFE               	movlw	-2
  9084  01422C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9085  014232  0EFF               	movlw	-1
  9086  014234  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9087  01423A  D008               	goto	l2003
  9088  01423C                     l9971:
  9089                           
  9090                           ;stkvar	_p @ sp[(-20)+18]
  9091  01423C  0EFE               	movlw	-2
  9092  01423E  0060  F077  FFE3   	movff	_prec,plusw1
  9093  014244  0EFF               	movlw	-1
  9094  014246  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9095  01424C                     l2003:
  9096                           
  9097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9098                           ;stkvar	_w @ sp[(-20)+16]
  9099  01424C  0EFC               	movlw	-4
  9100  01424E  0060  F06F  FFE3   	movff	_width,plusw1
  9101  014254  0EFD               	movlw	-3
  9102  014256  0060  F073  FFE3   	movff	_width+1,plusw1
  9103                           
  9104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9105  01425C  A81F               	btfss	_flags^0,4,c
  9106  01425E  D00B               	goto	l9977
  9107                           
  9108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9109                           ;stkvar	_w @ sp[(-20)+16]
  9110  014260  50E1               	movf	fsr1l,w,c
  9111  014262  0FFC               	addlw	-4
  9112  014264  6ED9               	movwf	fsr2l,c
  9113  014266  50E2               	movf	fsr1h,w,c
  9114  014268  6EDA               	movwf	fsr2h,c
  9115  01426A  0EFF               	movlw	255
  9116  01426C  22DA               	addwfc	fsr2h,f,c
  9117  01426E  0EFE               	movlw	254
  9118  014270  26DE               	addwf	postinc2,f,c
  9119  014272  0EFF               	movlw	255
  9120  014274  22DD               	addwfc	postdec2,f,c
  9121  014276                     l9977:
  9122                           
  9123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9124                           ;stkvar	_d @ sp[(-20)+-10]
  9125  014276  0EE2               	movlw	226
  9126  014278  24E1               	addwf	fsr1l,w,c
  9127  01427A  6ED9               	movwf	fsr2l,c
  9128  01427C  0EFF               	movlw	255
  9129  01427E  20E2               	addwfc	fsr1h,w,c
  9130  014280  6EDA               	movwf	fsr2h,c
  9131                           
  9132                           ;stkvar	_n @ sp[(-20)+4]
  9133  014282  0E08               	movlw	8
  9134  014284  6E32               	movwf	btemp^0,c
  9135  014286  0EF0               	movlw	-16
  9136  014288                     us990999:
  9137  014288  006F FF7B FFE3     	movff	postinc2,plusw1
  9138  01428E  28E8               	incf	wreg,w,c
  9139  014290  2E32               	decfsz	btemp^0,f,c
  9140  014292  D7FA               	bra	us990999
  9141                           
  9142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9143  014294  0E4F               	movlw	79
  9144  014296  6E3C               	movwf	(btemp+10)^0,c
  9145  014298  0E00               	movlw	0
  9146  01429A  6E3D               	movwf	(btemp+11)^0,c
  9147                           
  9148                           ;stkvar	_i @ sp[(-20)+14]
  9149  01429C  0EFA               	movlw	-6
  9150  01429E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9151  0142A4  0EFB               	movlw	-5
  9152  0142A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9153                           
  9154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9155  0142AC  0101               	movlb	1	; () banked
  9156  0142AE  6BCB               	clrf	(_dbuf+79)& (0+255),b
  9157                           
  9158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9159  0142B0  D0EE               	goto	l10015
  9160  0142B2                     l9983:
  9161                           
  9162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9163                           ;stkvar	_i @ sp[(-20)+14]
  9164  0142B2  50E1               	movf	fsr1l,w,c
  9165  0142B4  0FFA               	addlw	-6
  9166  0142B6  6ED9               	movwf	fsr2l,c
  9167  0142B8  50E2               	movf	fsr1h,w,c
  9168  0142BA  6EDA               	movwf	fsr2h,c
  9169  0142BC  0EFF               	movlw	255
  9170  0142BE  22DA               	addwfc	fsr2h,f,c
  9171  0142C0  06DE               	decf	postinc2,f,c
  9172  0142C2  0E00               	movlw	0
  9173  0142C4  5ADD               	subwfb	postdec2,f,c
  9174                           
  9175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9176                           ;stkvar	_n @ sp[(-20)+4]
  9177  0142C6  0EF0               	movlw	-16
  9178  0142C8  006F FF8C  F03C    	movff	plusw1,btemp+10
  9179  0142CE  0EF1               	movlw	-15
  9180  0142D0  006F FF8C  F03D    	movff	plusw1,btemp+11
  9181  0142D6  0E0F               	movlw	15
  9182  0142D8  163C               	andwf	(btemp+10)^0,f,c
  9183  0142DA  0E00               	movlw	0
  9184  0142DC  163D               	andwf	(btemp+11)^0,f,c
  9185                           
  9186                           ;stkvar	_c @ sp[(-20)+12]
  9187  0142DE  0EF8               	movlw	-8
  9188  0142E0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9189  0142E6  0EF9               	movlw	-7
  9190  0142E8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9191                           
  9192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9193                           ;stkvar	_c @ sp[(-20)+12]
  9194  0142EE  0EF9               	movlw	-7
  9195  0142F0  BEE3               	btfsc	plusw1,7,c
  9196  0142F2  D00F               	goto	l9991
  9197  0142F4  0EF9               	movlw	-7
  9198  0142F6  50E3               	movf	plusw1,w,c
  9199  0142F8  E108               	bnz	u9910
  9200  0142FA  0EF8               	movlw	-8
  9201  0142FC  006F FF8C  F032    	movff	plusw1,btemp
  9202  014302  0E0A               	movlw	10
  9203  014304  5E32               	subwf	btemp^0,f,c
  9204  014306  A0D8               	btfss	status,0,c
  9205  014308  D004               	goto	l9991
  9206  01430A                     u9910:
  9207                           
  9208                           ;stkvar	_c @ sp[(-20)+12]
  9209  01430A  0EF8               	movlw	-8
  9210  01430C  50E3               	movf	plusw1,w,c
  9211  01430E  0F57               	addlw	87
  9212  014310  D003               	goto	L6
  9213  014312                     l9991:
  9214                           
  9215                           ;stkvar	_c @ sp[(-20)+12]
  9216  014312  0EF8               	movlw	-8
  9217  014314  50E3               	movf	plusw1,w,c
  9218  014316  0F30               	addlw	48
  9219  014318                     L6:
  9220  014318  6E3C               	movwf	(btemp+10)^0,c
  9221  01431A  0EF9               	movlw	-7
  9222  01431C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9223  014322  0E00               	movlw	0
  9224  014324  223D               	addwfc	(btemp+11)^0,f,c
  9225                           
  9226                           ;stkvar	_c @ sp[(-20)+12]
  9227  014326  0EF8               	movlw	-8
  9228  014328  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9229  01432E  0EF9               	movlw	-7
  9230  014330  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9231  014336  0EBF               	movlw	191
  9232  014338  6E3C               	movwf	(btemp+10)^0,c
  9233  01433A  0EFF               	movlw	255
  9234  01433C  6E3D               	movwf	(btemp+11)^0,c
  9235                           
  9236                           ;stkvar	_x @ sp[(-20)+-11]
  9237  01433E  0EE1               	movlw	-31
  9238  014340  50E3               	movf	plusw1,w,c
  9239  014342  6E3A               	movwf	(btemp+8)^0,c
  9240  014344  6A3B               	clrf	(btemp+9)^0,c
  9241  014346  503C               	movf	(btemp+10)^0,w,c
  9242  014348  263A               	addwf	(btemp+8)^0,f,c
  9243  01434A  503D               	movf	(btemp+11)^0,w,c
  9244  01434C  223B               	addwfc	(btemp+9)^0,f,c
  9245  01434E  503B               	movf	(btemp+9)^0,w,c
  9246  014350  E106               	bnz	u9920
  9247  014352  0E1A               	movlw	26
  9248  014354  5C3A               	subwf	(btemp+8)^0,w,c
  9249  014356  B0D8               	btfsc	status,0,c
  9250  014358  D002               	goto	u9920
  9251  01435A  0E01               	movlw	1
  9252  01435C  D001               	goto	u9930
  9253  01435E                     u9920:
  9254  01435E  0E00               	movlw	0
  9255  014360                     u9930:
  9256  014360  6E3C               	movwf	(btemp+10)^0,c
  9257  014362  6A3D               	clrf	(btemp+11)^0,c
  9258                           
  9259                           ;stkvar	_xtoa$4538 @ sp[(-20)+2]
  9260  014364  0EEE               	movlw	-18
  9261  014366  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9262  01436C  0EEF               	movlw	-17
  9263  01436E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9264                           
  9265                           ;stkvar	_xtoa$4538 @ sp[(-20)+2]
  9266  014374  0EEE               	movlw	-18
  9267  014376  006F FF8C  F032    	movff	plusw1,btemp
  9268  01437C  0EEF               	movlw	-17
  9269  01437E  50E3               	movf	plusw1,w,c
  9270  014380  1032               	iorwf	btemp^0,w,c
  9271  014382  B4D8               	btfsc	status,2,c
  9272  014384  D041               	goto	l10007
  9273  014386  0E9F               	movlw	159
  9274  014388  6E3C               	movwf	(btemp+10)^0,c
  9275  01438A  0EFF               	movlw	255
  9276  01438C  6E3D               	movwf	(btemp+11)^0,c
  9277                           
  9278                           ;stkvar	_c @ sp[(-20)+12]
  9279  01438E  0EF8               	movlw	-8
  9280  014390  006F FF8C  F03A    	movff	plusw1,btemp+8
  9281  014396  0EF9               	movlw	-7
  9282  014398  006F FF8C  F03B    	movff	plusw1,btemp+9
  9283  01439E  0E20               	movlw	32
  9284  0143A0  123A               	iorwf	(btemp+8)^0,f,c
  9285  0143A2  0E00               	movlw	0
  9286  0143A4  123B               	iorwf	(btemp+9)^0,f,c
  9287  0143A6  503C               	movf	(btemp+10)^0,w,c
  9288  0143A8  263A               	addwf	(btemp+8)^0,f,c
  9289  0143AA  503D               	movf	(btemp+11)^0,w,c
  9290  0143AC  223B               	addwfc	(btemp+9)^0,f,c
  9291  0143AE  503B               	movf	(btemp+9)^0,w,c
  9292  0143B0  E106               	bnz	u9950
  9293  0143B2  0E1A               	movlw	26
  9294  0143B4  5C3A               	subwf	(btemp+8)^0,w,c
  9295  0143B6  B0D8               	btfsc	status,0,c
  9296  0143B8  D002               	goto	u9950
  9297  0143BA  0E01               	movlw	1
  9298  0143BC  D001               	goto	u9960
  9299  0143BE                     u9950:
  9300  0143BE  0E00               	movlw	0
  9301  0143C0                     u9960:
  9302  0143C0  6E3C               	movwf	(btemp+10)^0,c
  9303  0143C2  6A3D               	clrf	(btemp+11)^0,c
  9304                           
  9305                           ;stkvar	_xtoa$4539 @ sp[(-20)+0]
  9306  0143C4  0EEC               	movlw	-20
  9307  0143C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9308  0143CC  0EED               	movlw	-19
  9309  0143CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9310                           
  9311                           ;stkvar	_xtoa$4539 @ sp[(-20)+0]
  9312  0143D4  0EEC               	movlw	-20
  9313  0143D6  006F FF8C  F032    	movff	plusw1,btemp
  9314  0143DC  0EED               	movlw	-19
  9315  0143DE  50E3               	movf	plusw1,w,c
  9316  0143E0  1032               	iorwf	btemp^0,w,c
  9317  0143E2  B4D8               	btfsc	status,2,c
  9318  0143E4  D011               	goto	l10007
  9319                           
  9320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9321                           ;stkvar	_c @ sp[(-20)+12]
  9322  0143E6  0EF8               	movlw	-8
  9323  0143E8  006F FF8F FFE6     	movff	plusw1,postinc1
  9324  0143EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9325  0143F4  EC47  F0BC         	call	_toupper	;wreg free
  9326                           
  9327                           ;stkvar	_c @ sp[(-20)+12]
  9328  0143F8  0EF8               	movlw	-8
  9329  0143FA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9330  014400  0EF9               	movlw	-7
  9331  014402  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9332  014408                     l10007:
  9333                           
  9334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9335                           ;stkvar	_c @ sp[(-20)+12]
  9336                           ;stkvar	_i @ sp[(-20)+14]
  9337  014408  0EFA               	movlw	-6
  9338  01440A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9339  014410  0EFB               	movlw	-5
  9340  014412  006F FF8C  F03D    	movff	plusw1,btemp+11
  9341  014418  0E7C               	movlw	low _dbuf
  9342  01441A  243C               	addwf	(btemp+10)^0,w,c
  9343  01441C  6ED9               	movwf	fsr2l,c
  9344  01441E  0E01               	movlw	high _dbuf
  9345  014420  203D               	addwfc	(btemp+11)^0,w,c
  9346  014422  6EDA               	movwf	fsr2h,c
  9347  014424  0EF8               	movlw	-8
  9348  014426  006F FF8F FFDF     	movff	plusw1,indf2
  9349                           
  9350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9351                           ;stkvar	_p @ sp[(-20)+18]
  9352  01442C  50E1               	movf	fsr1l,w,c
  9353  01442E  0FFE               	addlw	-2
  9354  014430  6ED9               	movwf	fsr2l,c
  9355  014432  50E2               	movf	fsr1h,w,c
  9356  014434  6EDA               	movwf	fsr2h,c
  9357  014436  0EFF               	movlw	255
  9358  014438  22DA               	addwfc	fsr2h,f,c
  9359  01443A  06DE               	decf	postinc2,f,c
  9360  01443C  0E00               	movlw	0
  9361  01443E  5ADD               	subwfb	postdec2,f,c
  9362                           
  9363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9364                           ;stkvar	_w @ sp[(-20)+16]
  9365  014440  50E1               	movf	fsr1l,w,c
  9366  014442  0FFC               	addlw	-4
  9367  014444  6ED9               	movwf	fsr2l,c
  9368  014446  50E2               	movf	fsr1h,w,c
  9369  014448  6EDA               	movwf	fsr2h,c
  9370  01444A  0EFF               	movlw	255
  9371  01444C  22DA               	addwfc	fsr2h,f,c
  9372  01444E  06DE               	decf	postinc2,f,c
  9373  014450  0E00               	movlw	0
  9374  014452  5ADD               	subwfb	postdec2,f,c
  9375                           
  9376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9377  014454  0E04               	movlw	4
  9378  014456  6E3D               	movwf	(btemp+11)^0,c
  9379                           
  9380                           ;stkvar	_n @ sp[(-20)+4]
  9381  014458  50E1               	movf	fsr1l,w,c
  9382  01445A  0FF0               	addlw	-16
  9383  01445C  6ED9               	movwf	fsr2l,c
  9384  01445E  50E2               	movf	fsr1h,w,c
  9385  014460  6EDA               	movwf	fsr2h,c
  9386  014462  0EFF               	movlw	255
  9387  014464  22DA               	addwfc	fsr2h,f,c
  9388  014466  283D               	incf	(btemp+11)^0,w,c
  9389  014468  52DE               	movf	postinc2,f,c
  9390  01446A  D00F               	goto	u9980
  9391  01446C                     u9985:
  9392  01446C  52DE               	movf	postinc2,f,c
  9393  01446E  52DE               	movf	postinc2,f,c
  9394  014470  52DE               	movf	postinc2,f,c
  9395  014472  52DE               	movf	postinc2,f,c
  9396  014474  52DE               	movf	postinc2,f,c
  9397  014476  52DE               	movf	postinc2,f,c
  9398  014478  90D8               	bcf	status,0,c
  9399  01447A  32DD               	rrcf	postdec2,f,c
  9400  01447C  32DD               	rrcf	postdec2,f,c
  9401  01447E  32DD               	rrcf	postdec2,f,c
  9402  014480  32DD               	rrcf	postdec2,f,c
  9403  014482  32DD               	rrcf	postdec2,f,c
  9404  014484  32DD               	rrcf	postdec2,f,c
  9405  014486  32DD               	rrcf	postdec2,f,c
  9406  014488  32DE               	rrcf	postinc2,f,c
  9407  01448A                     u9980:
  9408  01448A  2EE8               	decfsz	wreg,f,c
  9409  01448C  D7EF               	goto	u9985
  9410  01448E                     l10015:
  9411                           
  9412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9413                           ;stkvar	_i @ sp[(-20)+14]
  9414  01448E  0EFB               	movlw	-5
  9415  014490  BEE3               	btfsc	plusw1,7,c
  9416  014492  D03A               	goto	u10030
  9417  014494  0EFB               	movlw	-5
  9418  014496  50E3               	movf	plusw1,w,c
  9419  014498  E108               	bnz	u9990
  9420  01449A  0EFA               	movlw	-6
  9421  01449C  006F FF8C  F032    	movff	plusw1,btemp
  9422  0144A2  0E02               	movlw	2
  9423  0144A4  5E32               	subwf	btemp^0,f,c
  9424  0144A6  A0D8               	btfss	status,0,c
  9425  0144A8  D02F               	goto	u10030
  9426  0144AA                     u9990:
  9427                           
  9428                           ;stkvar	_n @ sp[(-20)+4]
  9429  0144AA  0EF0               	movlw	-16
  9430  0144AC  50E3               	movf	plusw1,w,c
  9431  0144AE  E115               	bnz	u10001
  9432  0144B0  0EF1               	movlw	-15
  9433  0144B2  50E3               	movf	plusw1,w,c
  9434  0144B4  E112               	bnz	u10001
  9435  0144B6  0EF2               	movlw	-14
  9436  0144B8  50E3               	movf	plusw1,w,c
  9437  0144BA  E10F               	bnz	u10001
  9438  0144BC  0EF3               	movlw	-13
  9439  0144BE  50E3               	movf	plusw1,w,c
  9440  0144C0  E10C               	bnz	u10001
  9441  0144C2  0EF4               	movlw	-12
  9442  0144C4  50E3               	movf	plusw1,w,c
  9443  0144C6  E109               	bnz	u10001
  9444  0144C8  0EF5               	movlw	-11
  9445  0144CA  50E3               	movf	plusw1,w,c
  9446  0144CC  E106               	bnz	u10001
  9447  0144CE  0EF6               	movlw	-10
  9448  0144D0  50E3               	movf	plusw1,w,c
  9449  0144D2  E103               	bnz	u10001
  9450  0144D4  0EF7               	movlw	-9
  9451  0144D6  50E3               	movf	plusw1,w,c
  9452  0144D8  A4D8               	btfss	status,2,c
  9453  0144DA                     u10001:
  9454  0144DA  D6EB               	goto	l9983
  9455                           
  9456                           ;stkvar	_p @ sp[(-20)+18]
  9457  0144DC  0EFF               	movlw	-1
  9458  0144DE  BEE3               	btfsc	plusw1,7,c
  9459  0144E0  D007               	goto	u10010
  9460  0144E2  0EFF               	movlw	-1
  9461  0144E4  50E3               	movf	plusw1,w,c
  9462  0144E6  E103               	bnz	u10011
  9463  0144E8  0EFE               	movlw	-2
  9464  0144EA  04E3               	decf	plusw1,w,c
  9465  0144EC  B0D8               	btfsc	status,0,c
  9466  0144EE                     u10011:
  9467  0144EE  D6E1               	goto	l9983
  9468  0144F0                     u10010:
  9469                           
  9470                           ;stkvar	_w @ sp[(-20)+16]
  9471  0144F0  0EFD               	movlw	-3
  9472  0144F2  BEE3               	btfsc	plusw1,7,c
  9473  0144F4  D009               	goto	u10030
  9474  0144F6  0EFD               	movlw	-3
  9475  0144F8  50E3               	movf	plusw1,w,c
  9476  0144FA  E104               	bnz	u10020
  9477  0144FC  0EFC               	movlw	-4
  9478  0144FE  04E3               	decf	plusw1,w,c
  9479  014500  A0D8               	btfss	status,0,c
  9480  014502  D002               	goto	u10030
  9481  014504                     u10020:
  9482  014504  B21F               	btfsc	_flags^0,1,c
  9483  014506  D6D5               	goto	l9983
  9484  014508                     u10030:
  9485                           
  9486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9487  014508  A81F               	btfss	_flags^0,4,c
  9488  01450A  D036               	goto	l10031
  9489                           
  9490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9491                           ;stkvar	_i @ sp[(-20)+14]
  9492  01450C  50E1               	movf	fsr1l,w,c
  9493  01450E  0FFA               	addlw	-6
  9494  014510  6ED9               	movwf	fsr2l,c
  9495  014512  50E2               	movf	fsr1h,w,c
  9496  014514  6EDA               	movwf	fsr2h,c
  9497  014516  0EFF               	movlw	255
  9498  014518  22DA               	addwfc	fsr2h,f,c
  9499  01451A  06DE               	decf	postinc2,f,c
  9500  01451C  0E00               	movlw	0
  9501  01451E  5ADD               	subwfb	postdec2,f,c
  9502                           
  9503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9504                           ;stkvar	_x @ sp[(-20)+-11]
  9505                           ;stkvar	_i @ sp[(-20)+14]
  9506  014520  0EFA               	movlw	-6
  9507  014522  006F FF8C  F03C    	movff	plusw1,btemp+10
  9508  014528  0EFB               	movlw	-5
  9509  01452A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9510  014530  0E7C               	movlw	low _dbuf
  9511  014532  243C               	addwf	(btemp+10)^0,w,c
  9512  014534  6ED9               	movwf	fsr2l,c
  9513  014536  0E01               	movlw	high _dbuf
  9514  014538  203D               	addwfc	(btemp+11)^0,w,c
  9515  01453A  6EDA               	movwf	fsr2h,c
  9516  01453C  0EE1               	movlw	-31
  9517  01453E  006F FF8F FFDF     	movff	plusw1,indf2
  9518                           
  9519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9520                           ;stkvar	_i @ sp[(-20)+14]
  9521  014544  50E1               	movf	fsr1l,w,c
  9522  014546  0FFA               	addlw	-6
  9523  014548  6ED9               	movwf	fsr2l,c
  9524  01454A  50E2               	movf	fsr1h,w,c
  9525  01454C  6EDA               	movwf	fsr2h,c
  9526  01454E  0EFF               	movlw	255
  9527  014550  22DA               	addwfc	fsr2h,f,c
  9528  014552  06DE               	decf	postinc2,f,c
  9529  014554  0E00               	movlw	0
  9530  014556  5ADD               	subwfb	postdec2,f,c
  9531                           
  9532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9533                           ;stkvar	_i @ sp[(-20)+14]
  9534  014558  0EFA               	movlw	-6
  9535  01455A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9536  014560  0EFB               	movlw	-5
  9537  014562  006F FF8C  F03D    	movff	plusw1,btemp+11
  9538  014568  0E7C               	movlw	low _dbuf
  9539  01456A  243C               	addwf	(btemp+10)^0,w,c
  9540  01456C  6ED9               	movwf	fsr2l,c
  9541  01456E  0E01               	movlw	high _dbuf
  9542  014570  203D               	addwfc	(btemp+11)^0,w,c
  9543  014572  6EDA               	movwf	fsr2h,c
  9544  014574  0E30               	movlw	48
  9545  014576  6EDF               	movwf	indf2,c
  9546  014578                     l10031:
  9547                           
  9548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9549                           ;stkvar	_w @ sp[(-20)+16]
  9550  014578  0EFC               	movlw	-4
  9551  01457A  006F FF8F FFE6     	movff	plusw1,postinc1
  9552  014580  006F FF8F FFE6     	movff	plusw1,postinc1
  9553                           
  9554                           ;stkvar	_i @ sp[(-22)+14]
  9555  014586  0E7C               	movlw	low _dbuf
  9556  014588  6E3C               	movwf	(btemp+10)^0,c
  9557  01458A  0E01               	movlw	high _dbuf
  9558  01458C  6E3D               	movwf	(btemp+11)^0,c
  9559  01458E  0EF8               	movlw	-8
  9560  014590  50E3               	movf	plusw1,w,c
  9561  014592  263C               	addwf	(btemp+10)^0,f,c
  9562  014594  0EF9               	movlw	-7
  9563  014596  50E3               	movf	plusw1,w,c
  9564  014598  223D               	addwfc	(btemp+11)^0,f,c
  9565  01459A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9566  0145A0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9567                           
  9568                           ;stkvar	_fp @ sp[(-24)+-2]
  9569  0145A6  0EE6               	movlw	-26
  9570  0145A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9571  0145AE  006F FF8F FFE6     	movff	plusw1,postinc1
  9572  0145B4  EC77  F0B5         	call	_pad	;wreg free
  9573                           
  9574                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9575  0145B8  0EE1               	movlw	225
  9576  0145BA  26E1               	addwf	fsr1l,f,c
  9577  0145BC  0EFF               	movlw	255
  9578  0145BE  22E2               	addwfc	fsr1h,f,c
  9579  0145C0  0012               	return		;funcret
  9580  0145C2                     __end_of_xtoa:
  9581                           	opt callstack 0
  9582                           
  9583 ;; *************** function _toupper *****************
  9584 ;; Defined at:
  9585 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;  c               2  [STACK] int 
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;		None
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  2  [STACK] int 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/1
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9603 ;;Total ram usage:        0 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    7
  9606 ;; This function calls:
  9607 ;;		_islower
  9608 ;; This function is called by:
  9609 ;;		_xtoa
  9610 ;; This function uses a reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text41
  9614  01788E                     __ptext41:
  9615                           	opt callstack 0
  9616  01788E                     _toupper:
  9617                           	opt callstack 0
  9618                           
  9619                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9620  01788E  52E6               	movf	postinc1,f,c
  9621  017890  52E6               	movf	postinc1,f,c
  9622                           
  9623                           ;stkvar	_c @ sp[(-2)+-2]
  9624                           
  9625                           ;incstack = 0
  9626  017892  0EFC               	movlw	-4
  9627  017894  50E3               	movf	plusw1,w,c
  9628  017896  0F9F               	addlw	159
  9629  017898  6E3C               	movwf	(btemp+10)^0,c
  9630  01789A  0EFD               	movlw	-3
  9631  01789C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9632  0178A2  0EFF               	movlw	255
  9633  0178A4  223D               	addwfc	(btemp+11)^0,f,c
  9634  0178A6  503D               	movf	(btemp+11)^0,w,c
  9635  0178A8  E106               	bnz	u5320
  9636  0178AA  0E1A               	movlw	26
  9637  0178AC  5C3C               	subwf	(btemp+10)^0,w,c
  9638  0178AE  B0D8               	btfsc	status,0,c
  9639  0178B0  D002               	goto	u5320
  9640  0178B2  0E01               	movlw	1
  9641  0178B4  D001               	goto	u5330
  9642  0178B6                     u5320:
  9643  0178B6  0E00               	movlw	0
  9644  0178B8                     u5330:
  9645  0178B8  6E3C               	movwf	(btemp+10)^0,c
  9646  0178BA  6A3D               	clrf	(btemp+11)^0,c
  9647                           
  9648                           ;stkvar	_toupper$5199 @ sp[(-2)+0]
  9649  0178BC  0EFE               	movlw	-2
  9650  0178BE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9651  0178C4  0EFF               	movlw	-1
  9652  0178C6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9653                           
  9654                           ;stkvar	_toupper$5199 @ sp[(-2)+0]
  9655  0178CC  0EFE               	movlw	-2
  9656  0178CE  006F FF8C  F032    	movff	plusw1,btemp
  9657  0178D4  0EFF               	movlw	-1
  9658  0178D6  50E3               	movf	plusw1,w,c
  9659  0178D8  1032               	iorwf	btemp^0,w,c
  9660  0178DA  B4D8               	btfsc	status,2,c
  9661  0178DC  D00D               	goto	l6627
  9662                           
  9663                           ;stkvar	_c @ sp[(-2)+-2]
  9664  0178DE  0EFC               	movlw	-4
  9665  0178E0  006F FF8C  F032    	movff	plusw1,btemp
  9666  0178E6  0EFD               	movlw	-3
  9667  0178E8  006F FF8C  F033    	movff	plusw1,btemp+1
  9668  0178EE  0E5F               	movlw	95
  9669  0178F0  1632               	andwf	btemp^0,f,c
  9670  0178F2  0E00               	movlw	0
  9671  0178F4  1633               	andwf	(btemp+1)^0,f,c
  9672  0178F6  D008               	goto	l2936
  9673  0178F8                     l6627:
  9674                           
  9675                           ;stkvar	_c @ sp[(-2)+-2]
  9676  0178F8  0EFC               	movlw	-4
  9677  0178FA  006F FF8C  F032    	movff	plusw1,btemp
  9678  017900  0EFD               	movlw	-3
  9679  017902  006F FF8C  F033    	movff	plusw1,btemp+1
  9680  017908                     l2936:
  9681                           
  9682                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9683  017908  52E5               	movf	postdec1,f,c
  9684  01790A  52E5               	movf	postdec1,f,c
  9685  01790C  52E5               	movf	postdec1,f,c
  9686  01790E  52E5               	movf	postdec1,f,c
  9687  017910  0012               	return		;funcret
  9688  017912                     __end_of_toupper:
  9689                           	opt callstack 0
  9690                           
  9691 ;; *************** function _islower *****************
  9692 ;; Defined at:
  9693 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  c               2  [STACK] int 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;		None
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  2  [STACK] int 
  9700 ;; Registers used:
  9701 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9711 ;;Total ram usage:        0 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; Hardware stack levels required when called:    6
  9714 ;; This function calls:
  9715 ;;		Nothing
  9716 ;; This function is called by:
  9717 ;;		_toupper
  9718 ;; This function uses a reentrant model
  9719 ;;
  9720                           
  9721                           	psect	text42
  9722  0183C2                     __ptext42:
  9723                           	opt callstack 0
  9724  0183C2                     _islower:
  9725                           	opt callstack 16
  9726                           
  9727                           ;stkvar	_c @ sp[(0)+-2]
  9728                           
  9729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9730                           ;incstack = 0
  9731  0183C2  0EFE               	movlw	-2
  9732  0183C4  50E3               	movf	plusw1,w,c
  9733  0183C6  0F9F               	addlw	159
  9734  0183C8  6E3C               	movwf	(btemp+10)^0,c
  9735  0183CA  0EFF               	movlw	-1
  9736  0183CC  006F FF8C  F03D    	movff	plusw1,btemp+11
  9737  0183D2  0EFF               	movlw	255
  9738  0183D4  223D               	addwfc	(btemp+11)^0,f,c
  9739  0183D6  503D               	movf	(btemp+11)^0,w,c
  9740  0183D8  E106               	bnz	u5010
  9741  0183DA  0E1A               	movlw	26
  9742  0183DC  5C3C               	subwf	(btemp+10)^0,w,c
  9743  0183DE  B0D8               	btfsc	status,0,c
  9744  0183E0  D002               	goto	u5010
  9745  0183E2  0E01               	movlw	1
  9746  0183E4  D001               	goto	u5020
  9747  0183E6                     u5010:
  9748  0183E6  0E00               	movlw	0
  9749  0183E8                     u5020:
  9750  0183E8  6E32               	movwf	btemp^0,c
  9751  0183EA  6A33               	clrf	(btemp+1)^0,c
  9752                           
  9753                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9754  0183EC  52E5               	movf	postdec1,f,c
  9755  0183EE  52E5               	movf	postdec1,f,c
  9756  0183F0  0012               	return		;funcret
  9757  0183F2                     __end_of_islower:
  9758                           	opt callstack 0
  9759                           
  9760 ;; *************** function _isalpha *****************
  9761 ;; Defined at:
  9762 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  c               2  [STACK] int 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;		None
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  2  [STACK] int 
  9769 ;; Registers used:
  9770 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9780 ;;Total ram usage:        0 bytes
  9781 ;; Hardware stack levels used:    1
  9782 ;; Hardware stack levels required when called:    6
  9783 ;; This function calls:
  9784 ;;		Nothing
  9785 ;; This function is called by:
  9786 ;;		_xtoa
  9787 ;; This function uses a reentrant model
  9788 ;;
  9789                           
  9790                           	psect	text43
  9791  018176                     __ptext43:
  9792                           	opt callstack 0
  9793  018176                     _isalpha:
  9794                           	opt callstack 17
  9795                           
  9796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9797                           ;incstack = 0
  9798  018176  0E9F               	movlw	159
  9799  018178  6E3C               	movwf	(btemp+10)^0,c
  9800  01817A  0EFF               	movlw	255
  9801  01817C  6E3D               	movwf	(btemp+11)^0,c
  9802                           
  9803                           ;stkvar	_c @ sp[(0)+-2]
  9804  01817E  0EFE               	movlw	-2
  9805  018180  006F FF8C  F03A    	movff	plusw1,btemp+8
  9806  018186  0EFF               	movlw	-1
  9807  018188  006F FF8C  F03B    	movff	plusw1,btemp+9
  9808  01818E  0E20               	movlw	32
  9809  018190  123A               	iorwf	(btemp+8)^0,f,c
  9810  018192  0E00               	movlw	0
  9811  018194  123B               	iorwf	(btemp+9)^0,f,c
  9812  018196  503C               	movf	(btemp+10)^0,w,c
  9813  018198  263A               	addwf	(btemp+8)^0,f,c
  9814  01819A  503D               	movf	(btemp+11)^0,w,c
  9815  01819C  223B               	addwfc	(btemp+9)^0,f,c
  9816  01819E  503B               	movf	(btemp+9)^0,w,c
  9817  0181A0  E106               	bnz	u5300
  9818  0181A2  0E1A               	movlw	26
  9819  0181A4  5C3A               	subwf	(btemp+8)^0,w,c
  9820  0181A6  B0D8               	btfsc	status,0,c
  9821  0181A8  D002               	goto	u5300
  9822  0181AA  0E01               	movlw	1
  9823  0181AC  D001               	goto	u5310
  9824  0181AE                     u5300:
  9825  0181AE  0E00               	movlw	0
  9826  0181B0                     u5310:
  9827  0181B0  6E32               	movwf	btemp^0,c
  9828  0181B2  6A33               	clrf	(btemp+1)^0,c
  9829                           
  9830                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9831  0181B4  52E5               	movf	postdec1,f,c
  9832  0181B6  52E5               	movf	postdec1,f,c
  9833  0181B8  0012               	return		;funcret
  9834  0181BA                     __end_of_isalpha:
  9835                           	opt callstack 0
  9836                           
  9837 ;; *************** function _strncmp *****************
  9838 ;; Defined at:
  9839 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  _l              2  [STACK] PTR const unsigned char 
  9842 ;;		 -> ct(3), 
  9843 ;;  _r              2  [STACK] PTR const unsigned char 
  9844 ;;		 -> STR_53(3), 
  9845 ;;  n               2  [STACK] unsigned int 
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;  r               2  [STACK] PTR const unsigned char 
  9848 ;;		 -> STR_53(3), 
  9849 ;;  l               2  [STACK] PTR const unsigned char 
  9850 ;;		 -> ct(3), 
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  2  [STACK] int 
  9853 ;; Registers used:
  9854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/5
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9864 ;;Total ram usage:        0 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; Hardware stack levels required when called:    6
  9867 ;; This function calls:
  9868 ;;		Nothing
  9869 ;; This function is called by:
  9870 ;;		_vfpfcnvrt
  9871 ;; This function uses a reentrant model
  9872 ;;
  9873                           
  9874                           	psect	text44
  9875  015CFC                     __ptext44:
  9876                           	opt callstack 0
  9877  015CFC                     _strncmp:
  9878                           	opt callstack 0
  9879                           
  9880                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9881  015CFC  52E6               	movf	postinc1,f,c
  9882  015CFE  52E6               	movf	postinc1,f,c
  9883  015D00  52E6               	movf	postinc1,f,c
  9884  015D02  52E6               	movf	postinc1,f,c
  9885                           
  9886                           ;stkvar	__l @ sp[(-4)+-2]
  9887                           
  9888                           ;incstack = 0
  9889  015D04  0EFA               	movlw	-6
  9890  015D06  006F FF8C  F03C    	movff	plusw1,btemp+10
  9891  015D0C  0EFB               	movlw	-5
  9892  015D0E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9893                           
  9894                           ;stkvar	_l @ sp[(-4)+2]
  9895  015D14  0EFF               	movlw	-1
  9896  015D16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9897  015D1C  0EFE               	movlw	-2
  9898  015D1E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9899                           
  9900                           ;stkvar	__r @ sp[(-4)+-4]
  9901  015D24  0EF8               	movlw	-8
  9902  015D26  006F FF8C  F03C    	movff	plusw1,btemp+10
  9903  015D2C  0EF9               	movlw	-7
  9904  015D2E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9905                           
  9906                           ;stkvar	_r @ sp[(-4)+0]
  9907  015D34  0EFD               	movlw	-3
  9908  015D36  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9909  015D3C  0EFC               	movlw	-4
  9910  015D3E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9911                           
  9912                           ;stkvar	_n @ sp[(-4)+-6]
  9913  015D44  0EF6               	movlw	-10
  9914  015D46  006F FF8C  F032    	movff	plusw1,btemp
  9915  015D4C  0E01               	movlw	1
  9916  015D4E  5E32               	subwf	btemp^0,f,c
  9917  015D50  0EF6               	movlw	-10
  9918  015D52  0060  F0CB  FFE3   	movff	btemp,plusw1
  9919  015D58  0EF7               	movlw	-9
  9920  015D5A  006F FF8C  F032    	movff	plusw1,btemp
  9921  015D60  0E00               	movlw	0
  9922  015D62  5A32               	subwfb	btemp^0,f,c
  9923  015D64  0EF7               	movlw	-9
  9924  015D66  0060  F0CB  FFE3   	movff	btemp,plusw1
  9925  015D6C  0EF6               	movlw	-10
  9926  015D6E  28E3               	incf	plusw1,w,c
  9927  015D70  E13F               	bnz	l7785
  9928  015D72  0EF7               	movlw	-9
  9929  015D74  28E3               	incf	plusw1,w,c
  9930  015D76  A4D8               	btfss	status,2,c
  9931  015D78  D03B               	goto	l7785
  9932  015D7A  0E00               	movlw	0
  9933  015D7C  6E32               	movwf	btemp^0,c
  9934  015D7E  0E00               	movlw	0
  9935  015D80  6E33               	movwf	(btemp+1)^0,c
  9936  015D82  D09B               	goto	l2908
  9937  015D84                     l7783:
  9938                           
  9939                           ;stkvar	_l @ sp[(-4)+2]
  9940  015D84  0EFE               	movlw	-2
  9941  015D86  50E3               	movf	plusw1,w,c
  9942  015D88  0F01               	addlw	1
  9943  015D8A  6E32               	movwf	btemp^0,c
  9944  015D8C  0EFE               	movlw	-2
  9945  015D8E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9946  015D94  6A32               	clrf	btemp^0,c
  9947  015D96  0EFF               	movlw	-1
  9948  015D98  50E3               	movf	plusw1,w,c
  9949  015D9A  2032               	addwfc	btemp^0,w,c
  9950  015D9C  6E32               	movwf	btemp^0,c
  9951  015D9E  0EFF               	movlw	-1
  9952  015DA0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9953                           
  9954                           ;stkvar	_r @ sp[(-4)+0]
  9955  015DA6  0EFC               	movlw	-4
  9956  015DA8  50E3               	movf	plusw1,w,c
  9957  015DAA  0F01               	addlw	1
  9958  015DAC  6E32               	movwf	btemp^0,c
  9959  015DAE  0EFC               	movlw	-4
  9960  015DB0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9961  015DB6  6A32               	clrf	btemp^0,c
  9962  015DB8  0EFD               	movlw	-3
  9963  015DBA  50E3               	movf	plusw1,w,c
  9964  015DBC  2032               	addwfc	btemp^0,w,c
  9965  015DBE  6E32               	movwf	btemp^0,c
  9966  015DC0  0EFD               	movlw	-3
  9967  015DC2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9968                           
  9969                           ;stkvar	_n @ sp[(-4)+-6]
  9970  015DC8  0EF6               	movlw	-10
  9971  015DCA  006F FF8C  F032    	movff	plusw1,btemp
  9972  015DD0  0E01               	movlw	1
  9973  015DD2  5E32               	subwf	btemp^0,f,c
  9974  015DD4  0EF6               	movlw	-10
  9975  015DD6  0060  F0CB  FFE3   	movff	btemp,plusw1
  9976  015DDC  0EF7               	movlw	-9
  9977  015DDE  006F FF8C  F032    	movff	plusw1,btemp
  9978  015DE4  0E00               	movlw	0
  9979  015DE6  5A32               	subwfb	btemp^0,f,c
  9980  015DE8  0EF7               	movlw	-9
  9981  015DEA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9982  015DF0                     l7785:
  9983                           
  9984                           ;stkvar	_l @ sp[(-4)+2]
  9985  015DF0  0EFE               	movlw	-2
  9986  015DF2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9987  015DF8  0EFF               	movlw	-1
  9988  015DFA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9989  015E00  50DF               	movf	indf2,w,c
  9990  015E02  B4D8               	btfsc	status,2,c
  9991  015E04  D03B               	goto	u7500
  9992                           
  9993                           ;stkvar	_r @ sp[(-4)+0]
  9994  015E06  50E1               	movf	fsr1l,w,c
  9995  015E08  0FFC               	addlw	-4
  9996  015E0A  6ED9               	movwf	fsr2l,c
  9997  015E0C  50E2               	movf	fsr1h,w,c
  9998  015E0E  6EDA               	movwf	fsr2h,c
  9999  015E10  0EFF               	movlw	255
 10000  015E12  22DA               	addwfc	fsr2h,f,c
 10001  015E14  006F FF7B FFF6     	movff	postinc2,tblptrl
 10002  015E1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10003  015E20                     	if	0	;tblptru may be non-zero
 10004  015E20                     	endif
 10005  015E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10006  015E20  0E00               	movlw	low (__mediumconst shr (0+16))
 10007  015E22  6EF8               	movwf	tblptru,c
 10008  015E24                     	endif
 10009  015E24  0008               	tblrd		*
 10010  015E26  50F5               	movf	tablat,w,c
 10011  015E28  0900               	iorlw	0
 10012  015E2A  B4D8               	btfsc	status,2,c
 10013  015E2C  D027               	goto	u7500
 10014                           
 10015                           ;stkvar	_n @ sp[(-4)+-6]
 10016  015E2E  0EF6               	movlw	-10
 10017  015E30  006F FF8C  F032    	movff	plusw1,btemp
 10018  015E36  0EF7               	movlw	-9
 10019  015E38  50E3               	movf	plusw1,w,c
 10020  015E3A  1032               	iorwf	btemp^0,w,c
 10021  015E3C  B4D8               	btfsc	status,2,c
 10022  015E3E  D01E               	goto	u7500
 10023                           
 10024                           ;stkvar	_l @ sp[(-4)+2]
 10025  015E40  0EFE               	movlw	-2
 10026  015E42  006F FF8F FFD9     	movff	plusw1,fsr2l
 10027  015E48  0EFF               	movlw	-1
 10028  015E4A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10029  015E50  50DF               	movf	indf2,w,c
 10030  015E52  6E3D               	movwf	(btemp+11)^0,c
 10031                           
 10032                           ;stkvar	_r @ sp[(-4)+0]
 10033  015E54  50E1               	movf	fsr1l,w,c
 10034  015E56  0FFC               	addlw	-4
 10035  015E58  6ED9               	movwf	fsr2l,c
 10036  015E5A  50E2               	movf	fsr1h,w,c
 10037  015E5C  6EDA               	movwf	fsr2h,c
 10038  015E5E  0EFF               	movlw	255
 10039  015E60  22DA               	addwfc	fsr2h,f,c
 10040  015E62  006F FF7B FFF6     	movff	postinc2,tblptrl
 10041  015E68  006F FF77 FFF7     	movff	postdec2,tblptrh
 10042  015E6E                     	if	0	;tblptru may be non-zero
 10043  015E6E                     	endif
 10044  015E6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10045  015E6E  0E00               	movlw	low (__mediumconst shr (0+16))
 10046  015E70  6EF8               	movwf	tblptru,c
 10047  015E72                     	endif
 10048  015E72  0008               	tblrd		*
 10049  015E74  50F5               	movf	tablat,w,c
 10050  015E76  183D               	xorwf	(btemp+11)^0,w,c
 10051  015E78  B4D8               	btfsc	status,2,c
 10052  015E7A  D784               	goto	l7783
 10053  015E7C                     u7500:
 10054                           
 10055                           ;stkvar	_l @ sp[(-4)+2]
 10056  015E7C  0EFE               	movlw	-2
 10057  015E7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10058  015E84  0EFF               	movlw	-1
 10059  015E86  006F FF8F FFDA     	movff	plusw1,fsr2h
 10060  015E8C  50DF               	movf	indf2,w,c
 10061  015E8E  6E32               	movwf	btemp^0,c
 10062  015E90  6A33               	clrf	(btemp+1)^0,c
 10063                           
 10064                           ;stkvar	_r @ sp[(-4)+0]
 10065  015E92  50E1               	movf	fsr1l,w,c
 10066  015E94  0FFC               	addlw	-4
 10067  015E96  6ED9               	movwf	fsr2l,c
 10068  015E98  50E2               	movf	fsr1h,w,c
 10069  015E9A  6EDA               	movwf	fsr2h,c
 10070  015E9C  0EFF               	movlw	255
 10071  015E9E  22DA               	addwfc	fsr2h,f,c
 10072  015EA0  006F FF7B FFF6     	movff	postinc2,tblptrl
 10073  015EA6  006F FF77 FFF7     	movff	postdec2,tblptrh
 10074  015EAC                     	if	0	;tblptru may be non-zero
 10075  015EAC                     	endif
 10076  015EAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10077  015EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 10078  015EAE  6EF8               	movwf	tblptru,c
 10079  015EB0                     	endif
 10080  015EB0  0008               	tblrd		*
 10081  015EB2  50F5               	movf	tablat,w,c
 10082  015EB4  5E32               	subwf	btemp^0,f,c
 10083  015EB6  0E00               	movlw	0
 10084  015EB8  5A33               	subwfb	(btemp+1)^0,f,c
 10085  015EBA                     l2908:
 10086                           
 10087                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10088  015EBA  0EF6               	movlw	246
 10089  015EBC  26E1               	addwf	fsr1l,f,c
 10090  015EBE  0EFF               	movlw	255
 10091  015EC0  22E2               	addwfc	fsr1h,f,c
 10092  015EC2  0012               	return		;funcret
 10093  015EC4                     __end_of_strncmp:
 10094                           	opt callstack 0
 10095                           
 10096 ;; *************** function _stoa *****************
 10097 ;; Defined at:
 10098 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10101 ;;		 -> f(6), NULL(0), 
 10102 ;;  s               2  [STACK] PTR unsigned char 
 10103 ;;		 -> ?_printf(2), ?_sprintf(2), STR_25(9), STR_24(12), 
 10104 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
 10105 ;;		 -> STR_3(6), V(187), 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  nuls            7  [STACK] unsigned char [7]
 10108 ;;  l               2  [STACK] int 
 10109 ;;  p               2  [STACK] int 
 10110 ;;  cp              2  [STACK] PTR unsigned char 
 10111 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_25(9), 
 10112 ;;		 -> STR_24(12), D.lcd(216), D(218), T(144), 
 10113 ;;		 -> STR_7(6), STR_3(6), V(187), 
 10114 ;;  w               2  [STACK] int 
 10115 ;;  i               2  [STACK] int 
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  2  [STACK] int 
 10118 ;; Registers used:
 10119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/5
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10129 ;;Total ram usage:        0 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; Hardware stack levels required when called:    9
 10132 ;; This function calls:
 10133 ;;		_fputc
 10134 ;;		_strlen
 10135 ;; This function is called by:
 10136 ;;		_vfpfcnvrt
 10137 ;; This function uses a reentrant model
 10138 ;;
 10139                           
 10140                           	psect	text45
 10141  014EDE                     __ptext45:
 10142                           	opt callstack 0
 10143  014EDE                     _stoa:
 10144                           	opt callstack 0
 10145                           
 10146                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10147  014EDE  0E11               	movlw	17
 10148  014EE0  26E1               	addwf	fsr1l,f,c
 10149  014EE2  0E00               	movlw	0
 10150  014EE4  22E2               	addwfc	fsr1h,f,c
 10151                           
 10152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10153                           
 10154                           ;incstack = 0
 10155  014EE6  EE20  F1D4         	lfsr	2,stoa@F1166
 10156                           
 10157                           ;stkvar	_nuls @ sp[(-17)+0]
 10158  014EEA  0E07               	movlw	7
 10159  014EEC  6E32               	movwf	btemp^0,c
 10160  014EEE  0EEF               	movlw	-17
 10161  014EF0                     us977999:
 10162  014EF0  006F FF7B FFE3     	movff	postinc2,plusw1
 10163  014EF6  28E8               	incf	wreg,w,c
 10164  014EF8  2E32               	decfsz	btemp^0,f,c
 10165  014EFA  D7FA               	bra	us977999
 10166                           
 10167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10168                           ;stkvar	_s @ sp[(-17)+-4]
 10169  014EFC  0EEB               	movlw	-21
 10170  014EFE  006F FF8C  F03C    	movff	plusw1,btemp+10
 10171  014F04  0EEC               	movlw	-20
 10172  014F06  006F FF8C  F03D    	movff	plusw1,btemp+11
 10173                           
 10174                           ;stkvar	_cp @ sp[(-17)+11]
 10175  014F0C  0EFB               	movlw	-5
 10176  014F0E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10177  014F14  0EFA               	movlw	-6
 10178  014F16  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10179                           
 10180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10181                           ;stkvar	_cp @ sp[(-17)+11]
 10182  014F1C  0EFA               	movlw	-6
 10183  014F1E  006F FF8C  F032    	movff	plusw1,btemp
 10184  014F24  0EFB               	movlw	-5
 10185  014F26  50E3               	movf	plusw1,w,c
 10186  014F28  1032               	iorwf	btemp^0,w,c
 10187  014F2A  A4D8               	btfss	status,2,c
 10188  014F2C  D00E               	goto	l9919
 10189                           
 10190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10191                           ;stkvar	_nuls @ sp[(-17)+0]
 10192  014F2E  0EEF               	movlw	239
 10193  014F30  24E1               	addwf	fsr1l,w,c
 10194  014F32  6E3C               	movwf	(btemp+10)^0,c
 10195  014F34  0EFF               	movlw	255
 10196  014F36  20E2               	addwfc	fsr1h,w,c
 10197  014F38  6E3D               	movwf	(btemp+11)^0,c
 10198                           
 10199                           ;stkvar	_cp @ sp[(-17)+11]
 10200  014F3A  0EFB               	movlw	-5
 10201  014F3C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10202  014F42  0EFA               	movlw	-6
 10203  014F44  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10204  014F4A                     l9919:
 10205                           
 10206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10207                           ;stkvar	_cp @ sp[(-17)+11]
 10208  014F4A  0EFA               	movlw	-6
 10209  014F4C  006F FF8F FFE6     	movff	plusw1,postinc1
 10210  014F52  006F FF8F FFE6     	movff	plusw1,postinc1
 10211  014F58  EC8C  F0BA         	call	_strlen	;wreg free
 10212                           
 10213                           ;stkvar	_l @ sp[(-17)+7]
 10214  014F5C  0EF6               	movlw	-10
 10215  014F5E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10216  014F64  0EF7               	movlw	-9
 10217  014F66  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10218                           
 10219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10220                           ;stkvar	_p @ sp[(-17)+9]
 10221  014F6C  0EF8               	movlw	-8
 10222  014F6E  0060  F077  FFE3   	movff	_prec,plusw1
 10223  014F74  0EF9               	movlw	-7
 10224  014F76  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10225                           
 10226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10227                           ;stkvar	_p @ sp[(-17)+9]
 10228  014F7C  0EF9               	movlw	-7
 10229  014F7E  BEE3               	btfsc	plusw1,7,c
 10230  014F80  D023               	goto	l1982
 10231                           
 10232                           ;stkvar	_l @ sp[(-17)+7]
 10233                           ;stkvar	_p @ sp[(-17)+9]
 10234  014F82  50E1               	movf	fsr1l,w,c
 10235  014F84  0FF8               	addlw	-8
 10236  014F86  6ED9               	movwf	fsr2l,c
 10237  014F88  50E2               	movf	fsr1h,w,c
 10238  014F8A  6EDA               	movwf	fsr2h,c
 10239  014F8C  0EFF               	movlw	255
 10240  014F8E  22DA               	addwfc	fsr2h,f,c
 10241  014F90  0EF6               	movlw	-10
 10242  014F92  50E3               	movf	plusw1,w,c
 10243  014F94  5CDE               	subwf	postinc2,w,c
 10244  014F96  50DE               	movf	postinc2,w,c
 10245  014F98  0A80               	xorlw	128
 10246  014F9A  6E32               	movwf	btemp^0,c
 10247  014F9C  0EF7               	movlw	-9
 10248  014F9E  50E3               	movf	plusw1,w,c
 10249  014FA0  0A80               	xorlw	128
 10250  014FA2  5832               	subwfb	btemp^0,w,c
 10251  014FA4  B0D8               	btfsc	status,0,c
 10252  014FA6  D010               	goto	l1982
 10253                           
 10254                           ;stkvar	_p @ sp[(-17)+9]
 10255                           ;stkvar	_l @ sp[(-17)+7]
 10256  014FA8  0EF8               	movlw	-8
 10257  014FAA  006F FF8C  F032    	movff	plusw1,btemp
 10258  014FB0  0EF6               	movlw	-10
 10259  014FB2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10260  014FB8  0EF9               	movlw	-7
 10261  014FBA  006F FF8C  F032    	movff	plusw1,btemp
 10262  014FC0  0EF7               	movlw	-9
 10263  014FC2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10264  014FC8                     l1982:
 10265                           
 10266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10267                           ;stkvar	_l @ sp[(-17)+7]
 10268                           ;stkvar	_p @ sp[(-17)+9]
 10269  014FC8  0EF6               	movlw	-10
 10270  014FCA  006F FF8C  F032    	movff	plusw1,btemp
 10271  014FD0  0EF8               	movlw	-8
 10272  014FD2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10273  014FD8  0EF7               	movlw	-9
 10274  014FDA  006F FF8C  F032    	movff	plusw1,btemp
 10275  014FE0  0EF9               	movlw	-7
 10276  014FE2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10277                           
 10278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10279                           ;stkvar	_w @ sp[(-17)+13]
 10280  014FE8  0EFC               	movlw	-4
 10281  014FEA  0060  F06F  FFE3   	movff	_width,plusw1
 10282  014FF0  0EFD               	movlw	-3
 10283  014FF2  0060  F073  FFE3   	movff	_width+1,plusw1
 10284                           
 10285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10286  014FF8  A01F               	btfss	_flags^0,0,c
 10287  014FFA  D01F               	goto	l9939
 10288  014FFC  D031               	goto	u9820
 10289  014FFE                     l9935:
 10290                           
 10291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10292                           ;stkvar	_fp @ sp[(-17)+-2]
 10293  014FFE  0EED               	movlw	-19
 10294  015000  006F FF8F FFE6     	movff	plusw1,postinc1
 10295  015006  006F FF8F FFE6     	movff	plusw1,postinc1
 10296  01500C  0E20               	movlw	32
 10297  01500E  6EE6               	movwf	postinc1,c
 10298  015010  0E00               	movlw	0
 10299  015012  6EE6               	movwf	postinc1,c
 10300  015014  EC59  F0B4         	call	_fputc	;wreg free
 10301                           
 10302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10303                           ;stkvar	_l @ sp[(-17)+7]
 10304  015018  0EF6               	movlw	-10
 10305  01501A  50E3               	movf	plusw1,w,c
 10306  01501C  0F01               	addlw	1
 10307  01501E  6E32               	movwf	btemp^0,c
 10308  015020  0EF6               	movlw	-10
 10309  015022  0060  F0CB  FFE3   	movff	btemp,plusw1
 10310  015028  6A32               	clrf	btemp^0,c
 10311  01502A  0EF7               	movlw	-9
 10312  01502C  50E3               	movf	plusw1,w,c
 10313  01502E  2032               	addwfc	btemp^0,w,c
 10314  015030  6E32               	movwf	btemp^0,c
 10315  015032  0EF7               	movlw	-9
 10316  015034  0060  F0CB  FFE3   	movff	btemp,plusw1
 10317  01503A                     l9939:
 10318                           
 10319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10320                           ;stkvar	_w @ sp[(-17)+13]
 10321                           ;stkvar	_l @ sp[(-17)+7]
 10322  01503A  50E1               	movf	fsr1l,w,c
 10323  01503C  0FF6               	addlw	-10
 10324  01503E  6ED9               	movwf	fsr2l,c
 10325  015040  50E2               	movf	fsr1h,w,c
 10326  015042  6EDA               	movwf	fsr2h,c
 10327  015044  0EFF               	movlw	255
 10328  015046  22DA               	addwfc	fsr2h,f,c
 10329  015048  0EFC               	movlw	-4
 10330  01504A  50E3               	movf	plusw1,w,c
 10331  01504C  5CDE               	subwf	postinc2,w,c
 10332  01504E  50DE               	movf	postinc2,w,c
 10333  015050  0A80               	xorlw	128
 10334  015052  6E32               	movwf	btemp^0,c
 10335  015054  0EFD               	movlw	-3
 10336  015056  50E3               	movf	plusw1,w,c
 10337  015058  0A80               	xorlw	128
 10338  01505A  5832               	subwfb	btemp^0,w,c
 10339  01505C  A0D8               	btfss	status,0,c
 10340  01505E  D7CF               	goto	l9935
 10341  015060                     u9820:
 10342                           
 10343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10344                           ;stkvar	_i @ sp[(-17)+15]
 10345  015060  0EFE               	movlw	-2
 10346  015062  6AE3               	clrf	plusw1,c
 10347  015064  0EFF               	movlw	-1
 10348  015066  6AE3               	clrf	plusw1,c
 10349                           
 10350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10351  015068  D045               	goto	l9949
 10352  01506A                     l9943:
 10353                           
 10354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10355                           ;stkvar	_fp @ sp[(-17)+-2]
 10356  01506A  0EED               	movlw	-19
 10357  01506C  006F FF8F FFE6     	movff	plusw1,postinc1
 10358  015072  006F FF8F FFE6     	movff	plusw1,postinc1
 10359                           
 10360                           ;stkvar	_cp @ sp[(-19)+11]
 10361  015078  0EF8               	movlw	-8
 10362  01507A  006F FF8F FFF6     	movff	plusw1,tblptrl
 10363  015080  0EF9               	movlw	-7
 10364  015082  006F FF8F FFF7     	movff	plusw1,tblptrh
 10365  015088  0E00               	movlw	low (__mediumconst shr (0+16))
 10366  01508A  6EF8               	movwf	tblptru,c
 10367  01508C  0E1F               	movlw	(high __ramtop+-1)
 10368  01508E  64F7               	cpfsgt	tblptrh,c
 10369  015090  D003               	bra	u9837
 10370  015092  0008               	tblrd		*
 10371  015094  50F5               	movf	tablat,w,c
 10372  015096  D007               	bra	u9830
 10373  015098                     u9837:
 10374  015098  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10375  01509E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10376  0150A4  50EF               	movf	indf0,w,c
 10377  0150A6                     u9830:
 10378  0150A6  6EE6               	movwf	postinc1,c
 10379  0150A8  0E00               	movlw	0
 10380  0150AA  6EE6               	movwf	postinc1,c
 10381  0150AC  EC59  F0B4         	call	_fputc	;wreg free
 10382                           
 10383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10384                           ;stkvar	_cp @ sp[(-17)+11]
 10385  0150B0  0EFA               	movlw	-6
 10386  0150B2  50E3               	movf	plusw1,w,c
 10387  0150B4  0F01               	addlw	1
 10388  0150B6  6E32               	movwf	btemp^0,c
 10389  0150B8  0EFA               	movlw	-6
 10390  0150BA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10391  0150C0  6A32               	clrf	btemp^0,c
 10392  0150C2  0EFB               	movlw	-5
 10393  0150C4  50E3               	movf	plusw1,w,c
 10394  0150C6  2032               	addwfc	btemp^0,w,c
 10395  0150C8  6E32               	movwf	btemp^0,c
 10396  0150CA  0EFB               	movlw	-5
 10397  0150CC  0060  F0CB  FFE3   	movff	btemp,plusw1
 10398                           
 10399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10400                           ;stkvar	_i @ sp[(-17)+15]
 10401  0150D2  0EFE               	movlw	-2
 10402  0150D4  50E3               	movf	plusw1,w,c
 10403  0150D6  0F01               	addlw	1
 10404  0150D8  6E32               	movwf	btemp^0,c
 10405  0150DA  0EFE               	movlw	-2
 10406  0150DC  0060  F0CB  FFE3   	movff	btemp,plusw1
 10407  0150E2  6A32               	clrf	btemp^0,c
 10408  0150E4  0EFF               	movlw	-1
 10409  0150E6  50E3               	movf	plusw1,w,c
 10410  0150E8  2032               	addwfc	btemp^0,w,c
 10411  0150EA  6E32               	movwf	btemp^0,c
 10412  0150EC  0EFF               	movlw	-1
 10413  0150EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10414  0150F4                     l9949:
 10415                           
 10416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10417                           ;stkvar	_p @ sp[(-17)+9]
 10418                           ;stkvar	_i @ sp[(-17)+15]
 10419  0150F4  50E1               	movf	fsr1l,w,c
 10420  0150F6  0FFE               	addlw	-2
 10421  0150F8  6ED9               	movwf	fsr2l,c
 10422  0150FA  50E2               	movf	fsr1h,w,c
 10423  0150FC  6EDA               	movwf	fsr2h,c
 10424  0150FE  0EFF               	movlw	255
 10425  015100  22DA               	addwfc	fsr2h,f,c
 10426  015102  0EF8               	movlw	-8
 10427  015104  50E3               	movf	plusw1,w,c
 10428  015106  5CDE               	subwf	postinc2,w,c
 10429  015108  50DE               	movf	postinc2,w,c
 10430  01510A  0A80               	xorlw	128
 10431  01510C  6E32               	movwf	btemp^0,c
 10432  01510E  0EF9               	movlw	-7
 10433  015110  50E3               	movf	plusw1,w,c
 10434  015112  0A80               	xorlw	128
 10435  015114  5832               	subwfb	btemp^0,w,c
 10436  015116  A0D8               	btfss	status,0,c
 10437  015118  D7A8               	goto	l9943
 10438                           
 10439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10440  01511A  B01F               	btfsc	_flags^0,0,c
 10441  01511C  D01F               	goto	l9957
 10442  01511E  D031               	goto	u9860
 10443  015120                     l9953:
 10444                           
 10445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10446                           ;stkvar	_fp @ sp[(-17)+-2]
 10447  015120  0EED               	movlw	-19
 10448  015122  006F FF8F FFE6     	movff	plusw1,postinc1
 10449  015128  006F FF8F FFE6     	movff	plusw1,postinc1
 10450  01512E  0E20               	movlw	32
 10451  015130  6EE6               	movwf	postinc1,c
 10452  015132  0E00               	movlw	0
 10453  015134  6EE6               	movwf	postinc1,c
 10454  015136  EC59  F0B4         	call	_fputc	;wreg free
 10455                           
 10456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10457                           ;stkvar	_l @ sp[(-17)+7]
 10458  01513A  0EF6               	movlw	-10
 10459  01513C  50E3               	movf	plusw1,w,c
 10460  01513E  0F01               	addlw	1
 10461  015140  6E32               	movwf	btemp^0,c
 10462  015142  0EF6               	movlw	-10
 10463  015144  0060  F0CB  FFE3   	movff	btemp,plusw1
 10464  01514A  6A32               	clrf	btemp^0,c
 10465  01514C  0EF7               	movlw	-9
 10466  01514E  50E3               	movf	plusw1,w,c
 10467  015150  2032               	addwfc	btemp^0,w,c
 10468  015152  6E32               	movwf	btemp^0,c
 10469  015154  0EF7               	movlw	-9
 10470  015156  0060  F0CB  FFE3   	movff	btemp,plusw1
 10471  01515C                     l9957:
 10472                           
 10473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10474                           ;stkvar	_w @ sp[(-17)+13]
 10475                           ;stkvar	_l @ sp[(-17)+7]
 10476  01515C  50E1               	movf	fsr1l,w,c
 10477  01515E  0FF6               	addlw	-10
 10478  015160  6ED9               	movwf	fsr2l,c
 10479  015162  50E2               	movf	fsr1h,w,c
 10480  015164  6EDA               	movwf	fsr2h,c
 10481  015166  0EFF               	movlw	255
 10482  015168  22DA               	addwfc	fsr2h,f,c
 10483  01516A  0EFC               	movlw	-4
 10484  01516C  50E3               	movf	plusw1,w,c
 10485  01516E  5CDE               	subwf	postinc2,w,c
 10486  015170  50DE               	movf	postinc2,w,c
 10487  015172  0A80               	xorlw	128
 10488  015174  6E32               	movwf	btemp^0,c
 10489  015176  0EFD               	movlw	-3
 10490  015178  50E3               	movf	plusw1,w,c
 10491  01517A  0A80               	xorlw	128
 10492  01517C  5832               	subwfb	btemp^0,w,c
 10493  01517E  A0D8               	btfss	status,0,c
 10494  015180  D7CF               	goto	l9953
 10495  015182                     u9860:
 10496                           
 10497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10498                           ;stkvar	_l @ sp[(-17)+7]
 10499  015182  0EF6               	movlw	-10
 10500  015184  006F FF8C  F032    	movff	plusw1,btemp
 10501  01518A  0EF7               	movlw	-9
 10502  01518C  006F FF8C  F033    	movff	plusw1,btemp+1
 10503                           
 10504                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10505  015192  0EEB               	movlw	235
 10506  015194  26E1               	addwf	fsr1l,f,c
 10507  015196  0EFF               	movlw	255
 10508  015198  22E2               	addwfc	fsr1h,f,c
 10509  01519A  0012               	return		;funcret
 10510  01519C                     __end_of_stoa:
 10511                           	opt callstack 0
 10512                           
 10513 ;; *************** function _efgtoa *****************
 10514 ;; Defined at:
 10515 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10518 ;;		 -> f(6), NULL(0), 
 10519 ;;  f               4  [STACK] PTR struct _IO_FILE
 10520 ;;  c               1  [STACK] unsigned char 
 10521 ;; Auto vars:     Size  Location     Type
 10522 ;;  u               4  [STACK] unsigned char 
 10523 ;;  g               4  [STACK] unsigned char 
 10524 ;;  l               4  [STACK] unsigned char 
 10525 ;;  h               4  [STACK] unsigned char 
 10526 ;;  ou              4  [STACK] unsigned char 
 10527 ;;  n               2  [STACK] int 
 10528 ;;  e               2  [STACK] int 
 10529 ;;  i               2  [STACK] int 
 10530 ;;  w               2  [STACK] int 
 10531 ;;  p               2  [STACK] int 
 10532 ;;  sign            2  [STACK] int 
 10533 ;;  d               2  [STACK] int 
 10534 ;;  ne              2  [STACK] int 
 10535 ;;  m               2  [STACK] int 
 10536 ;;  pp              2  [STACK] int 
 10537 ;;  t               2  [STACK] int 
 10538 ;;  mode            1  [STACK] unsigned char 
 10539 ;;  nmode           1  [STACK] unsigned char 
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  2  [STACK] int 
 10542 ;; Registers used:
 10543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/5
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10553 ;;Total ram usage:        0 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:   11
 10556 ;; This function calls:
 10557 ;;		___awdiv
 10558 ;;		___awmod
 10559 ;;		___fladd
 10560 ;;		___fldiv
 10561 ;;		___fleq
 10562 ;;		___flge
 10563 ;;		___flmul
 10564 ;;		___flneg
 10565 ;;		___flsub
 10566 ;;		___fltol
 10567 ;;		___fpclassifyf
 10568 ;;		_floorf
 10569 ;;		_isupper
 10570 ;;		_pad
 10571 ;;		_strcpy
 10572 ;;		_tolower
 10573 ;; This function is called by:
 10574 ;;		_vfpfcnvrt
 10575 ;; This function uses a reentrant model
 10576 ;;
 10577                           
 10578                           	psect	text46
 10579  010000                     __ptext46:
 10580                           	opt callstack 0
 10581  010000                     _efgtoa:
 10582                           	opt callstack 0
 10583                           
 10584                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10585  010000  0E38               	movlw	56
 10586  010002  26E1               	addwf	fsr1l,f,c
 10587  010004  0E00               	movlw	0
 10588  010006  22E2               	addwfc	fsr1h,f,c
 10589                           
 10590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 10591                           ;stkvar	_sign @ sp[(-56)+42]
 10592                           
 10593                           ;incstack = 0
 10594  010008  0EF2               	movlw	-14
 10595  01000A  6AE3               	clrf	plusw1,c
 10596  01000C  0EF3               	movlw	-13
 10597  01000E  6AE3               	clrf	plusw1,c
 10598                           
 10599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 10600                           ;stkvar	_f @ sp[(-56)+-6]
 10601  010010  0EC2               	movlw	-62
 10602  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 10603  010018  0EC3               	movlw	-61
 10604  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 10605  010020  0EC4               	movlw	-60
 10606  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 10607  010028  0EC5               	movlw	-59
 10608  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10609                           
 10610                           ;stkvar	_g @ sp[(-56)+16]
 10611  010030  0ED8               	movlw	-40
 10612  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10613  010038  0ED9               	movlw	-39
 10614  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10615  010040  0EDA               	movlw	-38
 10616  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10617  010048  0EDB               	movlw	-37
 10618  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10619                           
 10620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 10621                           ;stkvar	_g @ sp[(-56)+16]
 10622  010050  0EDB               	movlw	-37
 10623  010052  AEE3               	btfss	plusw1,7,c
 10624  010054  D02B               	goto	l9617
 10625                           
 10626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 10627  010056  0E01               	movlw	1
 10628  010058  6E3C               	movwf	(btemp+10)^0,c
 10629  01005A  0E00               	movlw	0
 10630  01005C  6E3D               	movwf	(btemp+11)^0,c
 10631                           
 10632                           ;stkvar	_sign @ sp[(-56)+42]
 10633  01005E  0EF2               	movlw	-14
 10634  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10635  010066  0EF3               	movlw	-13
 10636  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10637                           
 10638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 10639                           ;stkvar	_g @ sp[(-56)+16]
 10640  01006E  0ED8               	movlw	-40
 10641  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 10642  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 10643  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10644  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10645  010088  ECE8  F0BF         	call	___flneg	;wreg free
 10646                           
 10647                           ;stkvar	_g @ sp[(-56)+16]
 10648  01008C  0ED8               	movlw	-40
 10649  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10650  010094  0ED9               	movlw	-39
 10651  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10652  01009C  0EDA               	movlw	-38
 10653  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10654  0100A4  0EDB               	movlw	-37
 10655  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10656  0100AC                     l9617:
 10657                           
 10658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10659                           ;stkvar	_n @ sp[(-56)+32]
 10660  0100AC  0EE8               	movlw	-24
 10661  0100AE  6AE3               	clrf	plusw1,c
 10662  0100B0  0EE9               	movlw	-23
 10663  0100B2  6AE3               	clrf	plusw1,c
 10664                           
 10665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10666                           ;stkvar	_w @ sp[(-56)+38]
 10667  0100B4  0EEE               	movlw	-18
 10668  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10669  0100BC  0EEF               	movlw	-17
 10670  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10671                           
 10672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10673                           ;stkvar	_sign @ sp[(-56)+42]
 10674  0100C4  0EF2               	movlw	-14
 10675  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10676  0100CC  0EF3               	movlw	-13
 10677  0100CE  50E3               	movf	plusw1,w,c
 10678  0100D0  1032               	iorwf	btemp^0,w,c
 10679  0100D2  A4D8               	btfss	status,2,c
 10680  0100D4  D002               	goto	u9270
 10681  0100D6  A41F               	btfss	_flags^0,2,c
 10682  0100D8  D036               	goto	l9637
 10683  0100DA                     u9270:
 10684                           
 10685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10686                           ;stkvar	_sign @ sp[(-56)+42]
 10687  0100DA  0EF2               	movlw	-14
 10688  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10689  0100E2  0EF3               	movlw	-13
 10690  0100E4  50E3               	movf	plusw1,w,c
 10691  0100E6  1032               	iorwf	btemp^0,w,c
 10692  0100E8  A4D8               	btfss	status,2,c
 10693  0100EA  D002               	goto	l9629
 10694  0100EC  0E2B               	movlw	43
 10695  0100EE  D001               	goto	L7
 10696  0100F0                     l9629:
 10697  0100F0  0E2D               	movlw	45
 10698  0100F2                     L7:
 10699  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10700  0100F4  0E00               	movlw	0
 10701  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10702                           
 10703                           ;stkvar	_efgtoa$4507 @ sp[(-56)+10]
 10704  0100F8  0ED2               	movlw	-46
 10705  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10706  010100  0ED3               	movlw	-45
 10707  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10708                           
 10709                           ;stkvar	_efgtoa$4507 @ sp[(-56)+10]
 10710  010108  0ED2               	movlw	-46
 10711  01010A  006F FF8C  F17C    	movff	plusw1,_dbuf
 10712                           
 10713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10714                           ;stkvar	_n @ sp[(-56)+32]
 10715  010110  0EE8               	movlw	-24
 10716  010112  50E3               	movf	plusw1,w,c
 10717  010114  0F01               	addlw	1
 10718  010116  6E32               	movwf	btemp^0,c
 10719  010118  0EE8               	movlw	-24
 10720  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10721  010120  6A32               	clrf	btemp^0,c
 10722  010122  0EE9               	movlw	-23
 10723  010124  50E3               	movf	plusw1,w,c
 10724  010126  2032               	addwfc	btemp^0,w,c
 10725  010128  6E32               	movwf	btemp^0,c
 10726  01012A  0EE9               	movlw	-23
 10727  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10728                           
 10729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10730                           ;stkvar	_w @ sp[(-56)+38]
 10731  010132  50E1               	movf	fsr1l,w,c
 10732  010134  0FEE               	addlw	-18
 10733  010136  6ED9               	movwf	fsr2l,c
 10734  010138  50E2               	movf	fsr1h,w,c
 10735  01013A  6EDA               	movwf	fsr2h,c
 10736  01013C  0EFF               	movlw	255
 10737  01013E  22DA               	addwfc	fsr2h,f,c
 10738  010140  06DE               	decf	postinc2,f,c
 10739  010142  0E00               	movlw	0
 10740  010144  5ADD               	subwfb	postdec2,f,c
 10741  010146                     l9637:
 10742                           
 10743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10744                           ;stkvar	_g @ sp[(-56)+16]
 10745  010146  0ED8               	movlw	-40
 10746  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10747  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10748  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10749  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10750  010160  EC42  F0B0         	call	___fpclassifyf	;wreg free
 10751  010164  0432               	decf	btemp^0,w,c
 10752  010166  1033               	iorwf	(btemp+1)^0,w,c
 10753  010168  A4D8               	btfss	status,2,c
 10754  01016A  D076               	goto	l9655
 10755  01016C  0EBF               	movlw	191
 10756  01016E  6E3C               	movwf	(btemp+10)^0,c
 10757  010170  0EFF               	movlw	255
 10758  010172  6E3D               	movwf	(btemp+11)^0,c
 10759                           
 10760                           ;stkvar	_c @ sp[(-56)+-7]
 10761  010174  0EC1               	movlw	-63
 10762  010176  50E3               	movf	plusw1,w,c
 10763  010178  6E3A               	movwf	(btemp+8)^0,c
 10764  01017A  6A3B               	clrf	(btemp+9)^0,c
 10765  01017C  503C               	movf	(btemp+10)^0,w,c
 10766  01017E  263A               	addwf	(btemp+8)^0,f,c
 10767  010180  503D               	movf	(btemp+11)^0,w,c
 10768  010182  223B               	addwfc	(btemp+9)^0,f,c
 10769  010184  503B               	movf	(btemp+9)^0,w,c
 10770  010186  E106               	bnz	u9300
 10771  010188  0E1A               	movlw	26
 10772  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10773  01018C  B0D8               	btfsc	status,0,c
 10774  01018E  D002               	goto	u9300
 10775  010190  0E01               	movlw	1
 10776  010192  D001               	goto	u9310
 10777  010194                     u9300:
 10778  010194  0E00               	movlw	0
 10779  010196                     u9310:
 10780  010196  6E3C               	movwf	(btemp+10)^0,c
 10781  010198  6A3D               	clrf	(btemp+11)^0,c
 10782                           
 10783                           ;stkvar	_efgtoa$4508 @ sp[(-56)+8]
 10784  01019A  0ED0               	movlw	-48
 10785  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10786  0101A2  0ED1               	movlw	-47
 10787  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10788                           
 10789                           ;stkvar	_efgtoa$4508 @ sp[(-56)+8]
 10790  0101AA  0ED0               	movlw	-48
 10791  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10792  0101B2  0ED1               	movlw	-47
 10793  0101B4  50E3               	movf	plusw1,w,c
 10794  0101B6  1032               	iorwf	btemp^0,w,c
 10795  0101B8  B4D8               	btfsc	status,2,c
 10796  0101BA  D017               	goto	l9647
 10797                           
 10798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10799  0101BC  0EE6               	movlw	low STR_43
 10800  0101BE  6EE6               	movwf	postinc1,c
 10801  0101C0  0EFF               	movlw	high STR_43
 10802  0101C2  6EE6               	movwf	postinc1,c
 10803                           
 10804                           ;stkvar	_n @ sp[(-58)+32]
 10805  0101C4  0E7C               	movlw	low _dbuf
 10806  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10807  0101C8  0E01               	movlw	high _dbuf
 10808  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10809  0101CC  0EE6               	movlw	-26
 10810  0101CE  50E3               	movf	plusw1,w,c
 10811  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10812  0101D2  0EE7               	movlw	-25
 10813  0101D4  50E3               	movf	plusw1,w,c
 10814  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10815  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10816  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10817  0101E4  EC66  F0B8         	call	_strcpy	;wreg free
 10818                           
 10819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10820  0101E8  D016               	goto	l9649
 10821  0101EA                     l9647:
 10822                           
 10823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10824  0101EA  0EEE               	movlw	low STR_44
 10825  0101EC  6EE6               	movwf	postinc1,c
 10826  0101EE  0EFF               	movlw	high STR_44
 10827  0101F0  6EE6               	movwf	postinc1,c
 10828                           
 10829                           ;stkvar	_n @ sp[(-58)+32]
 10830  0101F2  0E7C               	movlw	low _dbuf
 10831  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10832  0101F6  0E01               	movlw	high _dbuf
 10833  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10834  0101FA  0EE6               	movlw	-26
 10835  0101FC  50E3               	movf	plusw1,w,c
 10836  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10837  010200  0EE7               	movlw	-25
 10838  010202  50E3               	movf	plusw1,w,c
 10839  010204  223D               	addwfc	(btemp+11)^0,f,c
 10840  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10841  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10842  010212  EC66  F0B8         	call	_strcpy	;wreg free
 10843  010216                     l9649:
 10844                           
 10845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10846                           ;stkvar	_w @ sp[(-56)+38]
 10847  010216  50E1               	movf	fsr1l,w,c
 10848  010218  0FEE               	addlw	-18
 10849  01021A  6ED9               	movwf	fsr2l,c
 10850  01021C  50E2               	movf	fsr1h,w,c
 10851  01021E  6EDA               	movwf	fsr2h,c
 10852  010220  0EFF               	movlw	255
 10853  010222  22DA               	addwfc	fsr2h,f,c
 10854  010224  0EFD               	movlw	253
 10855  010226  26DE               	addwf	postinc2,f,c
 10856  010228  0EFF               	movlw	255
 10857  01022A  22DD               	addwfc	postdec2,f,c
 10858  01022C                     l9651:
 10859                           
 10860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10861                           ;stkvar	_w @ sp[(-56)+38]
 10862  01022C  0EEE               	movlw	-18
 10863  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10864  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10865  01023A  0E7C               	movlw	low _dbuf
 10866  01023C  6EE6               	movwf	postinc1,c
 10867  01023E  0E01               	movlw	high _dbuf
 10868  010240  6EE6               	movwf	postinc1,c
 10869                           
 10870                           ;stkvar	_fp @ sp[(-60)+-2]
 10871  010242  0EC2               	movlw	-62
 10872  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10873  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10874  010250  EC77  F0B5         	call	_pad	;wreg free
 10875  010254  EF1D  F089         	goto	l1900
 10876  010258                     l9655:
 10877                           
 10878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10879                           ;stkvar	_g @ sp[(-56)+16]
 10880  010258  0ED8               	movlw	-40
 10881  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10882  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10883  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10884  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10885  010272  EC42  F0B0         	call	___fpclassifyf	;wreg free
 10886  010276  5032               	movf	btemp^0,w,c
 10887  010278  1033               	iorwf	(btemp+1)^0,w,c
 10888  01027A  A4D8               	btfss	status,2,c
 10889  01027C  D056               	goto	l9673
 10890  01027E  0EBF               	movlw	191
 10891  010280  6E3C               	movwf	(btemp+10)^0,c
 10892  010282  0EFF               	movlw	255
 10893  010284  6E3D               	movwf	(btemp+11)^0,c
 10894                           
 10895                           ;stkvar	_c @ sp[(-56)+-7]
 10896  010286  0EC1               	movlw	-63
 10897  010288  50E3               	movf	plusw1,w,c
 10898  01028A  6E3A               	movwf	(btemp+8)^0,c
 10899  01028C  6A3B               	clrf	(btemp+9)^0,c
 10900  01028E  503C               	movf	(btemp+10)^0,w,c
 10901  010290  263A               	addwf	(btemp+8)^0,f,c
 10902  010292  503D               	movf	(btemp+11)^0,w,c
 10903  010294  223B               	addwfc	(btemp+9)^0,f,c
 10904  010296  503B               	movf	(btemp+9)^0,w,c
 10905  010298  E106               	bnz	u9340
 10906  01029A  0E1A               	movlw	26
 10907  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10908  01029E  B0D8               	btfsc	status,0,c
 10909  0102A0  D002               	goto	u9340
 10910  0102A2  0E01               	movlw	1
 10911  0102A4  D001               	goto	u9350
 10912  0102A6                     u9340:
 10913  0102A6  0E00               	movlw	0
 10914  0102A8                     u9350:
 10915  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10916  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10917                           
 10918                           ;stkvar	_efgtoa$4512 @ sp[(-56)+6]
 10919  0102AC  0ECE               	movlw	-50
 10920  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10921  0102B4  0ECF               	movlw	-49
 10922  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10923                           
 10924                           ;stkvar	_efgtoa$4512 @ sp[(-56)+6]
 10925  0102BC  0ECE               	movlw	-50
 10926  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10927  0102C4  0ECF               	movlw	-49
 10928  0102C6  50E3               	movf	plusw1,w,c
 10929  0102C8  1032               	iorwf	btemp^0,w,c
 10930  0102CA  B4D8               	btfsc	status,2,c
 10931  0102CC  D017               	goto	l9665
 10932                           
 10933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10934  0102CE  0EEA               	movlw	low STR_47
 10935  0102D0  6EE6               	movwf	postinc1,c
 10936  0102D2  0EFF               	movlw	high STR_47
 10937  0102D4  6EE6               	movwf	postinc1,c
 10938                           
 10939                           ;stkvar	_n @ sp[(-58)+32]
 10940  0102D6  0E7C               	movlw	low _dbuf
 10941  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10942  0102DA  0E01               	movlw	high _dbuf
 10943  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10944  0102DE  0EE6               	movlw	-26
 10945  0102E0  50E3               	movf	plusw1,w,c
 10946  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10947  0102E4  0EE7               	movlw	-25
 10948  0102E6  50E3               	movf	plusw1,w,c
 10949  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10950  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10951  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10952  0102F6  EC66  F0B8         	call	_strcpy	;wreg free
 10953                           
 10954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10955  0102FA  D78D               	goto	l9649
 10956  0102FC                     l9665:
 10957                           
 10958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10959  0102FC  0EF2               	movlw	low STR_48
 10960  0102FE  6EE6               	movwf	postinc1,c
 10961  010300  0EFF               	movlw	high STR_48
 10962  010302  6EE6               	movwf	postinc1,c
 10963                           
 10964                           ;stkvar	_n @ sp[(-58)+32]
 10965  010304  0E7C               	movlw	low _dbuf
 10966  010306  6E3C               	movwf	(btemp+10)^0,c
 10967  010308  0E01               	movlw	high _dbuf
 10968  01030A  6E3D               	movwf	(btemp+11)^0,c
 10969  01030C  0EE6               	movlw	-26
 10970  01030E  50E3               	movf	plusw1,w,c
 10971  010310  263C               	addwf	(btemp+10)^0,f,c
 10972  010312  0EE7               	movlw	-25
 10973  010314  50E3               	movf	plusw1,w,c
 10974  010316  223D               	addwfc	(btemp+11)^0,f,c
 10975  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10976  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10977  010324  EC66  F0B8         	call	_strcpy	;wreg free
 10978  010328  D776               	goto	l9649
 10979  01032A                     l9673:
 10980                           
 10981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10982  01032A  0E00               	movlw	0
 10983  01032C  6E3A               	movwf	(btemp+8)^0,c
 10984  01032E  0E00               	movlw	0
 10985  010330  6E3B               	movwf	(btemp+9)^0,c
 10986  010332  0E80               	movlw	128
 10987  010334  6E3C               	movwf	(btemp+10)^0,c
 10988  010336  0E3F               	movlw	63
 10989  010338  6E3D               	movwf	(btemp+11)^0,c
 10990                           
 10991                           ;stkvar	_u @ sp[(-56)+12]
 10992  01033A  0ED4               	movlw	-44
 10993  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10994  010342  0ED5               	movlw	-43
 10995  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10996  01034A  0ED6               	movlw	-42
 10997  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10998  010352  0ED7               	movlw	-41
 10999  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11000                           
 11001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11002                           ;stkvar	_e @ sp[(-56)+34]
 11003  01035A  0EEA               	movlw	-22
 11004  01035C  6AE3               	clrf	plusw1,c
 11005  01035E  0EEB               	movlw	-21
 11006  010360  6AE3               	clrf	plusw1,c
 11007                           
 11008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11009  010362  0E00               	movlw	0
 11010  010364  6EE6               	movwf	postinc1,c
 11011  010366  0E00               	movlw	0
 11012  010368  6EE6               	movwf	postinc1,c
 11013  01036A  0E00               	movlw	0
 11014  01036C  6EE6               	movwf	postinc1,c
 11015  01036E  0E00               	movlw	0
 11016  010370  6EE6               	movwf	postinc1,c
 11017                           
 11018                           ;stkvar	_g @ sp[(-60)+16]
 11019  010372  0ED4               	movlw	-44
 11020  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11021  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11022  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11023  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11024  01038C  ECD0  F0B8         	call	___fleq	;wreg free
 11025  010390  A032               	btfss	btemp& (0+255),0,c
 11026  010392  D039               	goto	l9685
 11027  010394  D0BC               	goto	u9390
 11028  010396                     l9681:
 11029                           
 11030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11031  010396  0E00               	movlw	0
 11032  010398  6EE6               	movwf	postinc1,c
 11033  01039A  0E00               	movlw	0
 11034  01039C  6EE6               	movwf	postinc1,c
 11035  01039E  0E20               	movlw	32
 11036  0103A0  6EE6               	movwf	postinc1,c
 11037  0103A2  0E41               	movlw	65
 11038  0103A4  6EE6               	movwf	postinc1,c
 11039                           
 11040                           ;stkvar	_u @ sp[(-60)+12]
 11041  0103A6  0ED0               	movlw	-48
 11042  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11043  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11044  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11045  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11046  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 11047                           
 11048                           ;stkvar	_u @ sp[(-56)+12]
 11049  0103C4  0ED4               	movlw	-44
 11050  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11051  0103CC  0ED5               	movlw	-43
 11052  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11053  0103D4  0ED6               	movlw	-42
 11054  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11055  0103DC  0ED7               	movlw	-41
 11056  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11057                           
 11058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11059                           ;stkvar	_e @ sp[(-56)+34]
 11060  0103E4  0EEA               	movlw	-22
 11061  0103E6  50E3               	movf	plusw1,w,c
 11062  0103E8  0F01               	addlw	1
 11063  0103EA  6E32               	movwf	btemp^0,c
 11064  0103EC  0EEA               	movlw	-22
 11065  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 11066  0103F4  6A32               	clrf	btemp^0,c
 11067  0103F6  0EEB               	movlw	-21
 11068  0103F8  50E3               	movf	plusw1,w,c
 11069  0103FA  2032               	addwfc	btemp^0,w,c
 11070  0103FC  6E32               	movwf	btemp^0,c
 11071  0103FE  0EEB               	movlw	-21
 11072  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 11073  010406                     l9685:
 11074                           
 11075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11076  010406  0E00               	movlw	0
 11077  010408  6EE6               	movwf	postinc1,c
 11078  01040A  0E00               	movlw	0
 11079  01040C  6EE6               	movwf	postinc1,c
 11080  01040E  0E20               	movlw	32
 11081  010410  6EE6               	movwf	postinc1,c
 11082  010412  0E41               	movlw	65
 11083  010414  6EE6               	movwf	postinc1,c
 11084                           
 11085                           ;stkvar	_u @ sp[(-60)+12]
 11086  010416  0ED0               	movlw	-48
 11087  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11088  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11089  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11090  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11091  010430  ECC1  F08E         	call	___flmul	;wreg free
 11092  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 11093  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11094  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11095  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11096                           
 11097                           ;stkvar	_g @ sp[(-60)+16]
 11098  01044C  0ED4               	movlw	-44
 11099  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11100  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11101  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11102  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11103  010466  ECC6  F0B1         	call	___flge	;wreg free
 11104  01046A  A032               	btfss	btemp& (0+255),0,c
 11105  01046C  D032               	goto	l9691
 11106  01046E  D793               	goto	l9681
 11107  010470                     l9687:
 11108                           
 11109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11110  010470  0E00               	movlw	0
 11111  010472  6EE6               	movwf	postinc1,c
 11112  010474  0E00               	movlw	0
 11113  010476  6EE6               	movwf	postinc1,c
 11114  010478  0E20               	movlw	32
 11115  01047A  6EE6               	movwf	postinc1,c
 11116  01047C  0E41               	movlw	65
 11117  01047E  6EE6               	movwf	postinc1,c
 11118                           
 11119                           ;stkvar	_u @ sp[(-60)+12]
 11120  010480  0ED0               	movlw	-48
 11121  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11122  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11123  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11124  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11125  01049A  ECB1  F099         	call	___fldiv	;wreg free
 11126                           
 11127                           ;stkvar	_u @ sp[(-56)+12]
 11128  01049E  0ED4               	movlw	-44
 11129  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11130  0104A6  0ED5               	movlw	-43
 11131  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11132  0104AE  0ED6               	movlw	-42
 11133  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11134  0104B6  0ED7               	movlw	-41
 11135  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11136                           
 11137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11138                           ;stkvar	_e @ sp[(-56)+34]
 11139  0104BE  50E1               	movf	fsr1l,w,c
 11140  0104C0  0FEA               	addlw	-22
 11141  0104C2  6ED9               	movwf	fsr2l,c
 11142  0104C4  50E2               	movf	fsr1h,w,c
 11143  0104C6  6EDA               	movwf	fsr2h,c
 11144  0104C8  0EFF               	movlw	255
 11145  0104CA  22DA               	addwfc	fsr2h,f,c
 11146  0104CC  06DE               	decf	postinc2,f,c
 11147  0104CE  0E00               	movlw	0
 11148  0104D0  5ADD               	subwfb	postdec2,f,c
 11149  0104D2                     l9691:
 11150                           
 11151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11152                           ;stkvar	_u @ sp[(-56)+12]
 11153  0104D2  0ED4               	movlw	-44
 11154  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11155  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11156  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11157  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11158                           
 11159                           ;stkvar	_g @ sp[(-60)+16]
 11160  0104EC  0ED4               	movlw	-44
 11161  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11162  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11163  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11164  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11165  010506  ECC6  F0B1         	call	___flge	;wreg free
 11166  01050A  A032               	btfss	btemp& (0+255),0,c
 11167  01050C  D7B1               	goto	l9687
 11168  01050E                     u9390:
 11169                           
 11170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11171                           ;stkvar	_c @ sp[(-56)+-7]
 11172  01050E  0EC1               	movlw	-63
 11173  010510  50E3               	movf	plusw1,w,c
 11174  010512  6EE6               	movwf	postinc1,c
 11175  010514  0E00               	movlw	0
 11176  010516  6EE6               	movwf	postinc1,c
 11177  010518  EC89  F0BC         	call	_tolower	;wreg free
 11178                           
 11179                           ;stkvar	_mode @ sp[(-56)+54]
 11180  01051C  0EFE               	movlw	-2
 11181  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11182                           
 11183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11184                           ;stkvar	_mode @ sp[(-56)+54]
 11185                           ;stkvar	_nmode @ sp[(-56)+55]
 11186  010524  0EFE               	movlw	-2
 11187  010526  006F FF8C  F032    	movff	plusw1,btemp
 11188  01052C  0EFF               	movlw	-1
 11189  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11190                           
 11191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11192                           ;stkvar	_mode @ sp[(-56)+54]
 11193  010534  0EFE               	movlw	-2
 11194  010536  006F FF8C  F032    	movff	plusw1,btemp
 11195  01053C  0E67               	movlw	103
 11196  01053E  1832               	xorwf	btemp^0,w,c
 11197  010540  A4D8               	btfss	status,2,c
 11198  010542  D025               	goto	l9709
 11199                           
 11200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11201  010544  501D               	movf	_prec^0,w,c
 11202  010546  101E               	iorwf	(_prec+1)^0,w,c
 11203  010548  A4D8               	btfss	status,2,c
 11204  01054A  D004               	goto	l9703
 11205                           
 11206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11207  01054C  0E00               	movlw	0
 11208  01054E  6E1E               	movwf	(_prec+1)^0,c
 11209  010550  0E01               	movlw	1
 11210  010552  6E1D               	movwf	_prec^0,c
 11211  010554                     l9703:
 11212                           
 11213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11214  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 11215  010556  D005               	goto	u9420
 11216  010558  501E               	movf	(_prec+1)^0,w,c
 11217  01055A  E110               	bnz	l9707
 11218  01055C  041D               	decf	_prec^0,w,c
 11219  01055E  B0D8               	btfsc	status,0,c
 11220  010560  D00D               	goto	l9707
 11221  010562                     u9420:
 11222  010562  0E06               	movlw	6
 11223  010564  6E3C               	movwf	(btemp+10)^0,c
 11224  010566  0E00               	movlw	0
 11225  010568  6E3D               	movwf	(btemp+11)^0,c
 11226                           
 11227                           ;stkvar	_p @ sp[(-56)+40]
 11228  01056A  0EF0               	movlw	-16
 11229  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11230  010572  0EF1               	movlw	-15
 11231  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11232  01057A  D00C               	goto	l9715
 11233  01057C                     l9707:
 11234                           
 11235                           ;stkvar	_p @ sp[(-56)+40]
 11236  01057C  0EF0               	movlw	-16
 11237  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 11238  010584  0EF1               	movlw	-15
 11239  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 11240  01058C  D003               	goto	l9715
 11241  01058E                     l9709:
 11242                           
 11243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11244  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 11245  010590  D7F5               	goto	l9707
 11246  010592  D7E7               	goto	u9420
 11247  010594                     l9715:
 11248                           
 11249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11250                           ;stkvar	_mode @ sp[(-56)+54]
 11251  010594  0EFE               	movlw	-2
 11252  010596  006F FF8C  F032    	movff	plusw1,btemp
 11253  01059C  0E67               	movlw	103
 11254  01059E  1832               	xorwf	btemp^0,w,c
 11255  0105A0  A4D8               	btfss	status,2,c
 11256  0105A2  D02F               	goto	l9725
 11257                           
 11258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11259                           ;stkvar	_e @ sp[(-56)+34]
 11260  0105A4  0EEB               	movlw	-21
 11261  0105A6  AEE3               	btfss	plusw1,7,c
 11262  0105A8  D00E               	goto	u9450
 11263  0105AA  0EEA               	movlw	-22
 11264  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 11265  0105B2  0EFC               	movlw	252
 11266  0105B4  5E32               	subwf	btemp^0,f,c
 11267  0105B6  0EEB               	movlw	-21
 11268  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 11269  0105BE  0EFF               	movlw	255
 11270  0105C0  5A32               	subwfb	btemp^0,f,c
 11271  0105C2  A0D8               	btfss	status,0,c
 11272  0105C4  D018               	goto	l9723
 11273  0105C6                     u9450:
 11274                           
 11275                           ;stkvar	_e @ sp[(-56)+34]
 11276                           ;stkvar	_p @ sp[(-56)+40]
 11277  0105C6  0EF0               	movlw	-16
 11278  0105C8  50E3               	movf	plusw1,w,c
 11279  0105CA  0FFF               	addlw	255
 11280  0105CC  6E3C               	movwf	(btemp+10)^0,c
 11281  0105CE  0EF1               	movlw	-15
 11282  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 11283  0105D6  0EFF               	movlw	255
 11284  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 11285  0105DA  0EEA               	movlw	-22
 11286  0105DC  50E3               	movf	plusw1,w,c
 11287  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 11288  0105E0  503D               	movf	(btemp+11)^0,w,c
 11289  0105E2  0A80               	xorlw	128
 11290  0105E4  6E32               	movwf	btemp^0,c
 11291  0105E6  0EEB               	movlw	-21
 11292  0105E8  50E3               	movf	plusw1,w,c
 11293  0105EA  0A80               	xorlw	128
 11294  0105EC  5832               	subwfb	btemp^0,w,c
 11295  0105EE  A0D8               	btfss	status,0,c
 11296  0105F0  D002               	goto	l9723
 11297                           
 11298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11299  0105F2  0E66               	movlw	102
 11300  0105F4  D001               	goto	L8
 11301  0105F6                     l9723:
 11302                           
 11303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11304  0105F6  0E65               	movlw	101
 11305  0105F8                     L8:
 11306  0105F8  6E3D               	movwf	(btemp+11)^0,c
 11307                           
 11308                           ;stkvar	_nmode @ sp[(-56)+55]
 11309  0105FA  0EFF               	movlw	-1
 11310  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11311  010602                     l9725:
 11312                           
 11313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11314                           ;stkvar	_p @ sp[(-56)+40]
 11315                           ;stkvar	_m @ sp[(-56)+48]
 11316  010602  0EF0               	movlw	-16
 11317  010604  006F FF8C  F032    	movff	plusw1,btemp
 11318  01060A  0EF8               	movlw	-8
 11319  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11320  010612  0EF1               	movlw	-15
 11321  010614  006F FF8C  F032    	movff	plusw1,btemp
 11322  01061A  0EF9               	movlw	-7
 11323  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11324                           
 11325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11326                           ;stkvar	_mode @ sp[(-56)+54]
 11327  010622  0EFE               	movlw	-2
 11328  010624  006F FF8C  F032    	movff	plusw1,btemp
 11329  01062A  0E67               	movlw	103
 11330  01062C  1832               	xorwf	btemp^0,w,c
 11331  01062E  A4D8               	btfss	status,2,c
 11332  010630  D00B               	goto	u9490
 11333                           
 11334                           ;stkvar	_nmode @ sp[(-56)+55]
 11335  010632  0EFF               	movlw	-1
 11336  010634  006F FF8C  F032    	movff	plusw1,btemp
 11337  01063A  0E66               	movlw	102
 11338  01063C  1832               	xorwf	btemp^0,w,c
 11339  01063E  A4D8               	btfss	status,2,c
 11340  010640  D014               	goto	l1929
 11341                           
 11342                           ;stkvar	_e @ sp[(-56)+34]
 11343  010642  0EEB               	movlw	-21
 11344  010644  AEE3               	btfss	plusw1,7,c
 11345  010646  D011               	goto	l1929
 11346  010648                     u9490:
 11347                           
 11348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11349                           ;stkvar	_m @ sp[(-56)+48]
 11350  010648  0EF8               	movlw	-8
 11351  01064A  50E3               	movf	plusw1,w,c
 11352  01064C  0F01               	addlw	1
 11353  01064E  6E32               	movwf	btemp^0,c
 11354  010650  0EF8               	movlw	-8
 11355  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11356  010658  6A32               	clrf	btemp^0,c
 11357  01065A  0EF9               	movlw	-7
 11358  01065C  50E3               	movf	plusw1,w,c
 11359  01065E  2032               	addwfc	btemp^0,w,c
 11360  010660  6E32               	movwf	btemp^0,c
 11361  010662  0EF9               	movlw	-7
 11362  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 11363  01066A                     l1929:
 11364                           
 11365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11366                           ;stkvar	_nmode @ sp[(-56)+55]
 11367  01066A  0EFF               	movlw	-1
 11368  01066C  006F FF8C  F032    	movff	plusw1,btemp
 11369  010672  0E66               	movlw	102
 11370  010674  1832               	xorwf	btemp^0,w,c
 11371  010676  A4D8               	btfss	status,2,c
 11372  010678  D03B               	goto	l9745
 11373                           
 11374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11375                           ;stkvar	_e @ sp[(-56)+34]
 11376  01067A  0EEB               	movlw	-21
 11377  01067C  AEE3               	btfss	plusw1,7,c
 11378  01067E  D01C               	goto	l9741
 11379                           
 11380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11381  010680  0E00               	movlw	0
 11382  010682  6E3A               	movwf	(btemp+8)^0,c
 11383  010684  0E00               	movlw	0
 11384  010686  6E3B               	movwf	(btemp+9)^0,c
 11385  010688  0E80               	movlw	128
 11386  01068A  6E3C               	movwf	(btemp+10)^0,c
 11387  01068C  0E3F               	movlw	63
 11388  01068E  6E3D               	movwf	(btemp+11)^0,c
 11389                           
 11390                           ;stkvar	_u @ sp[(-56)+12]
 11391  010690  0ED4               	movlw	-44
 11392  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11393  010698  0ED5               	movlw	-43
 11394  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11395  0106A0  0ED6               	movlw	-42
 11396  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11397  0106A8  0ED7               	movlw	-41
 11398  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11399                           
 11400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11401                           ;stkvar	_e @ sp[(-56)+34]
 11402  0106B0  0EEA               	movlw	-22
 11403  0106B2  6AE3               	clrf	plusw1,c
 11404  0106B4  0EEB               	movlw	-21
 11405  0106B6  6AE3               	clrf	plusw1,c
 11406  0106B8                     l9741:
 11407                           
 11408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11409                           ;stkvar	_mode @ sp[(-56)+54]
 11410  0106B8  0EFE               	movlw	-2
 11411  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 11412  0106C0  0E67               	movlw	103
 11413  0106C2  1832               	xorwf	btemp^0,w,c
 11414  0106C4  B4D8               	btfsc	status,2,c
 11415  0106C6  D014               	goto	l9745
 11416                           
 11417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 11418                           ;stkvar	_e @ sp[(-56)+34]
 11419                           ;stkvar	_m @ sp[(-56)+48]
 11420  0106C8  0EF8               	movlw	-8
 11421  0106CA  50E3               	movf	plusw1,w,c
 11422  0106CC  6E32               	movwf	btemp^0,c
 11423  0106CE  0EEA               	movlw	-22
 11424  0106D0  50E3               	movf	plusw1,w,c
 11425  0106D2  2632               	addwf	btemp^0,f,c
 11426  0106D4  0EF8               	movlw	-8
 11427  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11428  0106DC  0EF9               	movlw	-7
 11429  0106DE  50E3               	movf	plusw1,w,c
 11430  0106E0  6E32               	movwf	btemp^0,c
 11431  0106E2  0EEB               	movlw	-21
 11432  0106E4  50E3               	movf	plusw1,w,c
 11433  0106E6  2232               	addwfc	btemp^0,f,c
 11434  0106E8  0EF9               	movlw	-7
 11435  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11436  0106F0                     l9745:
 11437                           
 11438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 11439                           ;stkvar	_i @ sp[(-56)+36]
 11440  0106F0  0EEC               	movlw	-20
 11441  0106F2  6AE3               	clrf	plusw1,c
 11442  0106F4  0EED               	movlw	-19
 11443  0106F6  6AE3               	clrf	plusw1,c
 11444                           
 11445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 11446                           ;stkvar	_g @ sp[(-56)+16]
 11447  0106F8  0ED8               	movlw	-40
 11448  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 11449  010700  0ED9               	movlw	-39
 11450  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 11451  010708  0EDA               	movlw	-38
 11452  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11453  010710  0EDB               	movlw	-37
 11454  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 11455                           
 11456                           ;stkvar	_h @ sp[(-56)+24]
 11457  010718  0EE0               	movlw	-32
 11458  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11459  010720  0EE1               	movlw	-31
 11460  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11461  010728  0EE2               	movlw	-30
 11462  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11463  010730  0EE3               	movlw	-29
 11464  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11465                           
 11466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11467                           ;stkvar	_u @ sp[(-56)+12]
 11468  010738  0ED4               	movlw	-44
 11469  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 11470  010740  0ED5               	movlw	-43
 11471  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 11472  010748  0ED6               	movlw	-42
 11473  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11474  010750  0ED7               	movlw	-41
 11475  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 11476                           
 11477                           ;stkvar	_ou @ sp[(-56)+28]
 11478  010758  0EE4               	movlw	-28
 11479  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11480  010760  0EE5               	movlw	-27
 11481  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11482  010768  0EE6               	movlw	-26
 11483  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11484  010770  0EE7               	movlw	-25
 11485  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11486                           
 11487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11488  010778  D0D6               	goto	l9761
 11489  01077A                     l9751:
 11490                           
 11491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11492                           ;stkvar	_u @ sp[(-56)+12]
 11493  01077A  0ED4               	movlw	-44
 11494  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11495  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11496  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11497  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11498                           
 11499                           ;stkvar	_h @ sp[(-60)+24]
 11500  010794  0EDC               	movlw	-36
 11501  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11502  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11503  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11504  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11505  0107AE  ECB1  F099         	call	___fldiv	;wreg free
 11506  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11507  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11508  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11509  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11510  0107CA  ECE1  F0A2         	call	_floorf	;wreg free
 11511                           
 11512                           ;stkvar	_l @ sp[(-56)+20]
 11513  0107CE  0EDC               	movlw	-36
 11514  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11515  0107D6  0EDD               	movlw	-35
 11516  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11517  0107DE  0EDE               	movlw	-34
 11518  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11519  0107E6  0EDF               	movlw	-33
 11520  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11521                           
 11522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11523                           ;stkvar	_l @ sp[(-56)+20]
 11524  0107EE  0EDC               	movlw	-36
 11525  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11526  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11527  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11528  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 11529  010808  EC0D  F0B1         	call	___fltol	;wreg free
 11530  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 11531  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11532                           
 11533                           ;stkvar	_d @ sp[(-56)+44]
 11534  010818  0EF4               	movlw	-12
 11535  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11536  010820  0EF5               	movlw	-11
 11537  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11538                           
 11539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 11540                           ;stkvar	_u @ sp[(-56)+12]
 11541  010828  0ED4               	movlw	-44
 11542  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 11543  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 11544  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 11545  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 11546                           
 11547                           ;stkvar	_l @ sp[(-60)+20]
 11548  010842  0ED8               	movlw	-40
 11549  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 11550  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 11551  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 11552  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 11553  01085C  ECC1  F08E         	call	___flmul	;wreg free
 11554  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 11555  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11556  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11557  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11558                           
 11559                           ;stkvar	_h @ sp[(-60)+24]
 11560  010878  0EDC               	movlw	-36
 11561  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 11562  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 11563  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 11564  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 11565  010892  EC2F  F0C0         	call	___flsub	;wreg free
 11566                           
 11567                           ;stkvar	_h @ sp[(-56)+24]
 11568  010896  0EE0               	movlw	-32
 11569  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 11570  01089E  0EE1               	movlw	-31
 11571  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11572  0108A6  0EE2               	movlw	-30
 11573  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11574  0108AE  0EE3               	movlw	-29
 11575  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11576                           
 11577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 11578  0108B6  0E00               	movlw	0
 11579  0108B8  6EE6               	movwf	postinc1,c
 11580  0108BA  0E00               	movlw	0
 11581  0108BC  6EE6               	movwf	postinc1,c
 11582  0108BE  0E20               	movlw	32
 11583  0108C0  6EE6               	movwf	postinc1,c
 11584  0108C2  0E41               	movlw	65
 11585  0108C4  6EE6               	movwf	postinc1,c
 11586                           
 11587                           ;stkvar	_u @ sp[(-60)+12]
 11588  0108C6  0ED0               	movlw	-48
 11589  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11590  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11591  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11592  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11593  0108E0  ECB1  F099         	call	___fldiv	;wreg free
 11594                           
 11595                           ;stkvar	_u @ sp[(-56)+12]
 11596  0108E4  0ED4               	movlw	-44
 11597  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11598  0108EC  0ED5               	movlw	-43
 11599  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11600  0108F4  0ED6               	movlw	-42
 11601  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11602  0108FC  0ED7               	movlw	-41
 11603  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11604                           
 11605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 11606                           ;stkvar	_i @ sp[(-56)+36]
 11607  010904  0EEC               	movlw	-20
 11608  010906  50E3               	movf	plusw1,w,c
 11609  010908  0F01               	addlw	1
 11610  01090A  6E32               	movwf	btemp^0,c
 11611  01090C  0EEC               	movlw	-20
 11612  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11613  010914  6A32               	clrf	btemp^0,c
 11614  010916  0EED               	movlw	-19
 11615  010918  50E3               	movf	plusw1,w,c
 11616  01091A  2032               	addwfc	btemp^0,w,c
 11617  01091C  6E32               	movwf	btemp^0,c
 11618  01091E  0EED               	movlw	-19
 11619  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 11620  010926                     l9761:
 11621                           
 11622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11623                           ;stkvar	_m @ sp[(-56)+48]
 11624                           ;stkvar	_i @ sp[(-56)+36]
 11625  010926  50E1               	movf	fsr1l,w,c
 11626  010928  0FEC               	addlw	-20
 11627  01092A  6ED9               	movwf	fsr2l,c
 11628  01092C  50E2               	movf	fsr1h,w,c
 11629  01092E  6EDA               	movwf	fsr2h,c
 11630  010930  0EFF               	movlw	255
 11631  010932  22DA               	addwfc	fsr2h,f,c
 11632  010934  0EF8               	movlw	-8
 11633  010936  50E3               	movf	plusw1,w,c
 11634  010938  5CDE               	subwf	postinc2,w,c
 11635  01093A  50DE               	movf	postinc2,w,c
 11636  01093C  0A80               	xorlw	128
 11637  01093E  6E32               	movwf	btemp^0,c
 11638  010940  0EF9               	movlw	-7
 11639  010942  50E3               	movf	plusw1,w,c
 11640  010944  0A80               	xorlw	128
 11641  010946  5832               	subwfb	btemp^0,w,c
 11642  010948  A0D8               	btfss	status,0,c
 11643  01094A  D717               	goto	l9751
 11644                           
 11645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11646  01094C  0E00               	movlw	0
 11647  01094E  6EE6               	movwf	postinc1,c
 11648  010950  0E00               	movlw	0
 11649  010952  6EE6               	movwf	postinc1,c
 11650  010954  0EA0               	movlw	160
 11651  010956  6EE6               	movwf	postinc1,c
 11652  010958  0E40               	movlw	64
 11653  01095A  6EE6               	movwf	postinc1,c
 11654                           
 11655                           ;stkvar	_u @ sp[(-60)+12]
 11656  01095C  0ED0               	movlw	-48
 11657  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11658  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11659  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11660  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11661  010976  ECC1  F08E         	call	___flmul	;wreg free
 11662                           
 11663                           ;stkvar	_l @ sp[(-56)+20]
 11664  01097A  0EDC               	movlw	-36
 11665  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11666  010982  0EDD               	movlw	-35
 11667  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11668  01098A  0EDE               	movlw	-34
 11669  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11670  010992  0EDF               	movlw	-33
 11671  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11672                           
 11673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11674                           ;stkvar	_l @ sp[(-56)+20]
 11675  01099A  0EDC               	movlw	-36
 11676  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11677  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11678  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11679  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11680                           
 11681                           ;stkvar	_h @ sp[(-60)+24]
 11682  0109B4  0EDC               	movlw	-36
 11683  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11684  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11685  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11686  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11687  0109CE  ECC6  F0B1         	call	___flge	;wreg free
 11688  0109D2  A032               	btfss	btemp& (0+255),0,c
 11689  0109D4  D021               	goto	u9560
 11690                           
 11691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11692                           ;stkvar	_l @ sp[(-56)+20]
 11693                           
 11694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11695                           
 11696                           ;stkvar	_l @ sp[(-56)+20]
 11697                           
 11698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11699  0109D6  0EDC               	movlw	-36
 11700  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11701  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11702  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11703  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11704                           
 11705                           ;stkvar	_h @ sp[(-60)+24]
 11706  0109F0  0EDC               	movlw	-36
 11707  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11708  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11709  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11710  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11711  010A0A  ECD0  F0B8         	call	___fleq	;wreg free
 11712  010A0E  A032               	btfss	btemp& (0+255),0,c
 11713  010A10  D01B               	goto	l9775
 11714                           
 11715                           ;stkvar	_d @ sp[(-56)+44]
 11716  010A12  0EF4               	movlw	-12
 11717  010A14  B0E3               	btfsc	plusw1,0,c
 11718  010A16  D018               	goto	l9775
 11719  010A18                     u9560:
 11720                           
 11721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11722  010A18  0E00               	movlw	0
 11723  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11724  010A1C  0E00               	movlw	0
 11725  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11726  010A20  0E00               	movlw	0
 11727  010A22  6E3C               	movwf	(btemp+10)^0,c
 11728  010A24  0E00               	movlw	0
 11729  010A26  6E3D               	movwf	(btemp+11)^0,c
 11730                           
 11731                           ;stkvar	_l @ sp[(-56)+20]
 11732  010A28  0EDC               	movlw	-36
 11733  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11734  010A30  0EDD               	movlw	-35
 11735  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11736  010A38  0EDE               	movlw	-34
 11737  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11738  010A40  0EDF               	movlw	-33
 11739  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11740  010A48                     l9775:
 11741                           
 11742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11743                           ;stkvar	_l @ sp[(-56)+20]
 11744  010A48  0EDC               	movlw	-36
 11745  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11746  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11747  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11748  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11749                           
 11750                           ;stkvar	_g @ sp[(-60)+16]
 11751  010A62  0ED4               	movlw	-44
 11752  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11753  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11754  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11755  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11756  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11757                           
 11758                           ;stkvar	_h @ sp[(-56)+24]
 11759  010A80  0EE0               	movlw	-32
 11760  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11761  010A88  0EE1               	movlw	-31
 11762  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11763  010A90  0EE2               	movlw	-30
 11764  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11765  010A98  0EE3               	movlw	-29
 11766  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11767                           
 11768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11769                           ;stkvar	_ou @ sp[(-56)+28]
 11770  010AA0  0EE4               	movlw	-28
 11771  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11772  010AA8  0EE5               	movlw	-27
 11773  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11774  010AB0  0EE6               	movlw	-26
 11775  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11776  010AB8  0EE7               	movlw	-25
 11777  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11778                           
 11779                           ;stkvar	_u @ sp[(-56)+12]
 11780  010AC0  0ED4               	movlw	-44
 11781  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11782  010AC8  0ED5               	movlw	-43
 11783  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11784  010AD0  0ED6               	movlw	-42
 11785  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11786  010AD8  0ED7               	movlw	-41
 11787  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11788                           
 11789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11790                           ;stkvar	_nmode @ sp[(-56)+55]
 11791  010AE0  0EFF               	movlw	-1
 11792  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11793  010AE8  0E65               	movlw	101
 11794  010AEA  1832               	xorwf	btemp^0,w,c
 11795  010AEC  B4D8               	btfsc	status,2,c
 11796  010AEE  D011               	goto	l9783
 11797                           
 11798                           ;stkvar	_e @ sp[(-56)+34]
 11799                           ;stkvar	_ne @ sp[(-56)+46]
 11800  010AF0  0EEA               	movlw	-22
 11801  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11802  010AF8  0EF6               	movlw	-10
 11803  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11804  010B00  0EEB               	movlw	-21
 11805  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11806  010B08  0EF7               	movlw	-9
 11807  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11808  010B10  D004               	goto	l1944
 11809  010B12                     l9783:
 11810                           
 11811                           ;stkvar	_ne @ sp[(-56)+46]
 11812  010B12  0EF6               	movlw	-10
 11813  010B14  6AE3               	clrf	plusw1,c
 11814  010B16  0EF7               	movlw	-9
 11815  010B18  6AE3               	clrf	plusw1,c
 11816  010B1A                     l1944:
 11817                           
 11818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11819                           ;stkvar	_pp @ sp[(-56)+50]
 11820  010B1A  0EFA               	movlw	-6
 11821  010B1C  6AE3               	clrf	plusw1,c
 11822  010B1E  0EFB               	movlw	-5
 11823  010B20  6AE3               	clrf	plusw1,c
 11824                           
 11825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11826                           ;stkvar	_t @ sp[(-56)+52]
 11827  010B22  0EFC               	movlw	-4
 11828  010B24  6AE3               	clrf	plusw1,c
 11829  010B26  0EFD               	movlw	-3
 11830  010B28  6AE3               	clrf	plusw1,c
 11831                           
 11832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11833                           ;stkvar	_i @ sp[(-56)+36]
 11834  010B2A  0EEC               	movlw	-20
 11835  010B2C  6AE3               	clrf	plusw1,c
 11836  010B2E  0EED               	movlw	-19
 11837  010B30  6AE3               	clrf	plusw1,c
 11838                           
 11839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11840  010B32  D1B7               	goto	l9835
 11841  010B34                     l9785:
 11842                           
 11843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11844                           ;stkvar	_u @ sp[(-56)+12]
 11845  010B34  0ED4               	movlw	-44
 11846  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11847  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11848  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11849  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11850                           
 11851                           ;stkvar	_h @ sp[(-60)+24]
 11852  010B4E  0EDC               	movlw	-36
 11853  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11854  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11855  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11856  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11857  010B68  ECB1  F099         	call	___fldiv	;wreg free
 11858  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11859  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11860  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11861  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11862  010B84  ECE1  F0A2         	call	_floorf	;wreg free
 11863                           
 11864                           ;stkvar	_l @ sp[(-56)+20]
 11865  010B88  0EDC               	movlw	-36
 11866  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11867  010B90  0EDD               	movlw	-35
 11868  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11869  010B98  0EDE               	movlw	-34
 11870  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11871  010BA0  0EDF               	movlw	-33
 11872  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11873                           
 11874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11875                           ;stkvar	_l @ sp[(-56)+20]
 11876  010BA8  0EDC               	movlw	-36
 11877  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11878  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11879  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11880  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11881  010BC2  EC0D  F0B1         	call	___fltol	;wreg free
 11882  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11883  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11884                           
 11885                           ;stkvar	_d @ sp[(-56)+44]
 11886  010BD2  0EF4               	movlw	-12
 11887  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11888  010BDA  0EF5               	movlw	-11
 11889  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11890                           
 11891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11892  010BE2  B81F               	btfsc	_flags^0,4,c
 11893  010BE4  D026               	goto	l9799
 11894                           
 11895                           ;stkvar	_d @ sp[(-56)+44]
 11896  010BE6  0EF4               	movlw	-12
 11897  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11898  010BEE  0EF5               	movlw	-11
 11899  010BF0  50E3               	movf	plusw1,w,c
 11900  010BF2  1032               	iorwf	btemp^0,w,c
 11901  010BF4  A4D8               	btfss	status,2,c
 11902  010BF6  D01D               	goto	l9799
 11903                           
 11904                           ;stkvar	_mode @ sp[(-56)+54]
 11905  010BF8  0EFE               	movlw	-2
 11906  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11907  010C00  0E67               	movlw	103
 11908  010C02  1832               	xorwf	btemp^0,w,c
 11909  010C04  A4D8               	btfss	status,2,c
 11910  010C06  D015               	goto	l9799
 11911                           
 11912                           ;stkvar	_ne @ sp[(-56)+46]
 11913  010C08  0EF7               	movlw	-9
 11914  010C0A  AEE3               	btfss	plusw1,7,c
 11915  010C0C  D012               	goto	l9799
 11916                           
 11917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11918                           ;stkvar	_t @ sp[(-56)+52]
 11919  010C0E  0EFC               	movlw	-4
 11920  010C10  50E3               	movf	plusw1,w,c
 11921  010C12  0F01               	addlw	1
 11922  010C14  6E32               	movwf	btemp^0,c
 11923  010C16  0EFC               	movlw	-4
 11924  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11925  010C1E  6A32               	clrf	btemp^0,c
 11926  010C20  0EFD               	movlw	-3
 11927  010C22  50E3               	movf	plusw1,w,c
 11928  010C24  2032               	addwfc	btemp^0,w,c
 11929  010C26  6E32               	movwf	btemp^0,c
 11930  010C28  0EFD               	movlw	-3
 11931  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11932                           
 11933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11934  010C30  D0AF               	goto	l9827
 11935  010C32                     l9799:
 11936                           
 11937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11938                           ;stkvar	_pp @ sp[(-56)+50]
 11939  010C32  0EFA               	movlw	-6
 11940  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11941  010C3A  0EFB               	movlw	-5
 11942  010C3C  50E3               	movf	plusw1,w,c
 11943  010C3E  1032               	iorwf	btemp^0,w,c
 11944  010C40  A4D8               	btfss	status,2,c
 11945  010C42  D070               	goto	l9819
 11946                           
 11947                           ;stkvar	_ne @ sp[(-56)+46]
 11948  010C44  0EF7               	movlw	-9
 11949  010C46  AEE3               	btfss	plusw1,7,c
 11950  010C48  D06D               	goto	l9819
 11951                           
 11952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11953                           ;stkvar	_n @ sp[(-56)+32]
 11954  010C4A  0EE8               	movlw	-24
 11955  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11956  010C52  0EE9               	movlw	-23
 11957  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11958  010C5A  0E7C               	movlw	low _dbuf
 11959  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11960  010C5E  6ED9               	movwf	fsr2l,c
 11961  010C60  0E01               	movlw	high _dbuf
 11962  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11963  010C64  6EDA               	movwf	fsr2h,c
 11964  010C66  0E2E               	movlw	46
 11965  010C68  6EDF               	movwf	indf2,c
 11966                           
 11967                           ;stkvar	_n @ sp[(-56)+32]
 11968  010C6A  0EE8               	movlw	-24
 11969  010C6C  50E3               	movf	plusw1,w,c
 11970  010C6E  0F01               	addlw	1
 11971  010C70  6E32               	movwf	btemp^0,c
 11972  010C72  0EE8               	movlw	-24
 11973  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11974  010C7A  6A32               	clrf	btemp^0,c
 11975  010C7C  0EE9               	movlw	-23
 11976  010C7E  50E3               	movf	plusw1,w,c
 11977  010C80  2032               	addwfc	btemp^0,w,c
 11978  010C82  6E32               	movwf	btemp^0,c
 11979  010C84  0EE9               	movlw	-23
 11980  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11981                           
 11982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11983                           ;stkvar	_w @ sp[(-56)+38]
 11984  010C8C  50E1               	movf	fsr1l,w,c
 11985  010C8E  0FEE               	addlw	-18
 11986  010C90  6ED9               	movwf	fsr2l,c
 11987  010C92  50E2               	movf	fsr1h,w,c
 11988  010C94  6EDA               	movwf	fsr2h,c
 11989  010C96  0EFF               	movlw	255
 11990  010C98  22DA               	addwfc	fsr2h,f,c
 11991  010C9A  06DE               	decf	postinc2,f,c
 11992  010C9C  0E00               	movlw	0
 11993  010C9E  5ADD               	subwfb	postdec2,f,c
 11994                           
 11995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11996  010CA0  0E01               	movlw	1
 11997  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11998  010CA4  0E00               	movlw	0
 11999  010CA6  6E3D               	movwf	(btemp+11)^0,c
 12000                           
 12001                           ;stkvar	_pp @ sp[(-56)+50]
 12002  010CA8  0EFA               	movlw	-6
 12003  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12004  010CB0  0EFB               	movlw	-5
 12005  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12006  010CB8  D035               	goto	l9819
 12007  010CBA                     l9811:
 12008                           
 12009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12010                           ;stkvar	_n @ sp[(-56)+32]
 12011  010CBA  0EE8               	movlw	-24
 12012  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12013  010CC2  0EE9               	movlw	-23
 12014  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12015  010CCA  0E7C               	movlw	low _dbuf
 12016  010CCC  243C               	addwf	(btemp+10)^0,w,c
 12017  010CCE  6ED9               	movwf	fsr2l,c
 12018  010CD0  0E01               	movlw	high _dbuf
 12019  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 12020  010CD4  6EDA               	movwf	fsr2h,c
 12021  010CD6  0E30               	movlw	48
 12022  010CD8  6EDF               	movwf	indf2,c
 12023                           
 12024                           ;stkvar	_n @ sp[(-56)+32]
 12025  010CDA  0EE8               	movlw	-24
 12026  010CDC  50E3               	movf	plusw1,w,c
 12027  010CDE  0F01               	addlw	1
 12028  010CE0  6E32               	movwf	btemp^0,c
 12029  010CE2  0EE8               	movlw	-24
 12030  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 12031  010CEA  6A32               	clrf	btemp^0,c
 12032  010CEC  0EE9               	movlw	-23
 12033  010CEE  50E3               	movf	plusw1,w,c
 12034  010CF0  2032               	addwfc	btemp^0,w,c
 12035  010CF2  6E32               	movwf	btemp^0,c
 12036  010CF4  0EE9               	movlw	-23
 12037  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12038                           
 12039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12040                           ;stkvar	_w @ sp[(-56)+38]
 12041  010CFC  50E1               	movf	fsr1l,w,c
 12042  010CFE  0FEE               	addlw	-18
 12043  010D00  6ED9               	movwf	fsr2l,c
 12044  010D02  50E2               	movf	fsr1h,w,c
 12045  010D04  6EDA               	movwf	fsr2h,c
 12046  010D06  0EFF               	movlw	255
 12047  010D08  22DA               	addwfc	fsr2h,f,c
 12048  010D0A  06DE               	decf	postinc2,f,c
 12049  010D0C  0E00               	movlw	0
 12050  010D0E  5ADD               	subwfb	postdec2,f,c
 12051                           
 12052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12053                           ;stkvar	_t @ sp[(-56)+52]
 12054  010D10  50E1               	movf	fsr1l,w,c
 12055  010D12  0FFC               	addlw	-4
 12056  010D14  6ED9               	movwf	fsr2l,c
 12057  010D16  50E2               	movf	fsr1h,w,c
 12058  010D18  6EDA               	movwf	fsr2h,c
 12059  010D1A  0EFF               	movlw	255
 12060  010D1C  22DA               	addwfc	fsr2h,f,c
 12061  010D1E  06DE               	decf	postinc2,f,c
 12062  010D20  0E00               	movlw	0
 12063  010D22  5ADD               	subwfb	postdec2,f,c
 12064  010D24                     l9819:
 12065                           
 12066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12067                           ;stkvar	_t @ sp[(-56)+52]
 12068  010D24  0EFC               	movlw	-4
 12069  010D26  006F FF8C  F032    	movff	plusw1,btemp
 12070  010D2C  0EFD               	movlw	-3
 12071  010D2E  50E3               	movf	plusw1,w,c
 12072  010D30  1032               	iorwf	btemp^0,w,c
 12073  010D32  A4D8               	btfss	status,2,c
 12074  010D34  D7C2               	goto	l9811
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12077                           ;stkvar	_n @ sp[(-56)+32]
 12078  010D36  0EE8               	movlw	-24
 12079  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 12080  010D3E  0EE9               	movlw	-23
 12081  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 12082  010D46  0E7C               	movlw	low _dbuf
 12083  010D48  243C               	addwf	(btemp+10)^0,w,c
 12084  010D4A  6ED9               	movwf	fsr2l,c
 12085  010D4C  0E01               	movlw	high _dbuf
 12086  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 12087  010D50  6EDA               	movwf	fsr2h,c
 12088                           
 12089                           ;stkvar	_d @ sp[(-56)+44]
 12090  010D52  0EF4               	movlw	-12
 12091  010D54  50E3               	movf	plusw1,w,c
 12092  010D56  0F30               	addlw	48
 12093  010D58  6EDF               	movwf	indf2,c
 12094                           
 12095                           ;stkvar	_n @ sp[(-56)+32]
 12096  010D5A  0EE8               	movlw	-24
 12097  010D5C  50E3               	movf	plusw1,w,c
 12098  010D5E  0F01               	addlw	1
 12099  010D60  6E32               	movwf	btemp^0,c
 12100  010D62  0EE8               	movlw	-24
 12101  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 12102  010D6A  6A32               	clrf	btemp^0,c
 12103  010D6C  0EE9               	movlw	-23
 12104  010D6E  50E3               	movf	plusw1,w,c
 12105  010D70  2032               	addwfc	btemp^0,w,c
 12106  010D72  6E32               	movwf	btemp^0,c
 12107  010D74  0EE9               	movlw	-23
 12108  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 12109                           
 12110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12111                           ;stkvar	_w @ sp[(-56)+38]
 12112  010D7C  50E1               	movf	fsr1l,w,c
 12113  010D7E  0FEE               	addlw	-18
 12114  010D80  6ED9               	movwf	fsr2l,c
 12115  010D82  50E2               	movf	fsr1h,w,c
 12116  010D84  6EDA               	movwf	fsr2h,c
 12117  010D86  0EFF               	movlw	255
 12118  010D88  22DA               	addwfc	fsr2h,f,c
 12119  010D8A  06DE               	decf	postinc2,f,c
 12120  010D8C  0E00               	movlw	0
 12121  010D8E  5ADD               	subwfb	postdec2,f,c
 12122  010D90                     l9827:
 12123                           
 12124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12125                           ;stkvar	_u @ sp[(-56)+12]
 12126  010D90  0ED4               	movlw	-44
 12127  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12128  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12129  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12130  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12131                           
 12132                           ;stkvar	_l @ sp[(-60)+20]
 12133  010DAA  0ED8               	movlw	-40
 12134  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12135  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12136  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12137  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12138  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 12139  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 12140  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12141  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12142  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12143                           
 12144                           ;stkvar	_h @ sp[(-60)+24]
 12145  010DE0  0EDC               	movlw	-36
 12146  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12147  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12148  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12149  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12150  010DFA  EC2F  F0C0         	call	___flsub	;wreg free
 12151                           
 12152                           ;stkvar	_h @ sp[(-56)+24]
 12153  010DFE  0EE0               	movlw	-32
 12154  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 12155  010E06  0EE1               	movlw	-31
 12156  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12157  010E0E  0EE2               	movlw	-30
 12158  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12159  010E16  0EE3               	movlw	-29
 12160  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12161                           
 12162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12163  010E1E  0E00               	movlw	0
 12164  010E20  6EE6               	movwf	postinc1,c
 12165  010E22  0E00               	movlw	0
 12166  010E24  6EE6               	movwf	postinc1,c
 12167  010E26  0E20               	movlw	32
 12168  010E28  6EE6               	movwf	postinc1,c
 12169  010E2A  0E41               	movlw	65
 12170  010E2C  6EE6               	movwf	postinc1,c
 12171                           
 12172                           ;stkvar	_u @ sp[(-60)+12]
 12173  010E2E  0ED0               	movlw	-48
 12174  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12175  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12176  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12177  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12178  010E48  ECB1  F099         	call	___fldiv	;wreg free
 12179                           
 12180                           ;stkvar	_u @ sp[(-56)+12]
 12181  010E4C  0ED4               	movlw	-44
 12182  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12183  010E54  0ED5               	movlw	-43
 12184  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12185  010E5C  0ED6               	movlw	-42
 12186  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12187  010E64  0ED7               	movlw	-41
 12188  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12189                           
 12190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12191                           ;stkvar	_ne @ sp[(-56)+46]
 12192  010E6C  50E1               	movf	fsr1l,w,c
 12193  010E6E  0FF6               	addlw	-10
 12194  010E70  6ED9               	movwf	fsr2l,c
 12195  010E72  50E2               	movf	fsr1h,w,c
 12196  010E74  6EDA               	movwf	fsr2h,c
 12197  010E76  0EFF               	movlw	255
 12198  010E78  22DA               	addwfc	fsr2h,f,c
 12199  010E7A  06DE               	decf	postinc2,f,c
 12200  010E7C  0E00               	movlw	0
 12201  010E7E  5ADD               	subwfb	postdec2,f,c
 12202                           
 12203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12204                           ;stkvar	_i @ sp[(-56)+36]
 12205  010E80  0EEC               	movlw	-20
 12206  010E82  50E3               	movf	plusw1,w,c
 12207  010E84  0F01               	addlw	1
 12208  010E86  6E32               	movwf	btemp^0,c
 12209  010E88  0EEC               	movlw	-20
 12210  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12211  010E90  6A32               	clrf	btemp^0,c
 12212  010E92  0EED               	movlw	-19
 12213  010E94  50E3               	movf	plusw1,w,c
 12214  010E96  2032               	addwfc	btemp^0,w,c
 12215  010E98  6E32               	movwf	btemp^0,c
 12216  010E9A  0EED               	movlw	-19
 12217  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12218  010EA2                     l9835:
 12219                           
 12220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12221                           ;stkvar	_m @ sp[(-56)+48]
 12222                           ;stkvar	_i @ sp[(-56)+36]
 12223  010EA2  50E1               	movf	fsr1l,w,c
 12224  010EA4  0FEC               	addlw	-20
 12225  010EA6  6ED9               	movwf	fsr2l,c
 12226  010EA8  50E2               	movf	fsr1h,w,c
 12227  010EAA  6EDA               	movwf	fsr2h,c
 12228  010EAC  0EFF               	movlw	255
 12229  010EAE  22DA               	addwfc	fsr2h,f,c
 12230  010EB0  0EF8               	movlw	-8
 12231  010EB2  50E3               	movf	plusw1,w,c
 12232  010EB4  5CDE               	subwf	postinc2,w,c
 12233  010EB6  50DE               	movf	postinc2,w,c
 12234  010EB8  0A80               	xorlw	128
 12235  010EBA  6E32               	movwf	btemp^0,c
 12236  010EBC  0EF9               	movlw	-7
 12237  010EBE  50E3               	movf	plusw1,w,c
 12238  010EC0  0A80               	xorlw	128
 12239  010EC2  5832               	subwfb	btemp^0,w,c
 12240  010EC4  B0D8               	btfsc	status,0,c
 12241  010EC6  D00E               	goto	u9660
 12242                           
 12243                           ;stkvar	_n @ sp[(-56)+32]
 12244  010EC8  0EE9               	movlw	-23
 12245  010ECA  BEE3               	btfsc	plusw1,7,c
 12246  010ECC  D633               	goto	l9785
 12247  010ECE  0EE9               	movlw	-23
 12248  010ED0  50E3               	movf	plusw1,w,c
 12249  010ED2  E108               	bnz	u9660
 12250  010ED4  0EE8               	movlw	-24
 12251  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 12252  010EDC  0E4B               	movlw	75
 12253  010EDE  5E32               	subwf	btemp^0,f,c
 12254  010EE0  A0D8               	btfss	status,0,c
 12255  010EE2  D628               	goto	l9785
 12256  010EE4                     u9660:
 12257                           
 12258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12259                           ;stkvar	_pp @ sp[(-56)+50]
 12260  010EE4  0EFA               	movlw	-6
 12261  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 12262  010EEC  0EFB               	movlw	-5
 12263  010EEE  50E3               	movf	plusw1,w,c
 12264  010EF0  1032               	iorwf	btemp^0,w,c
 12265  010EF2  B4D8               	btfsc	status,2,c
 12266  010EF4  A81F               	btfss	_flags^0,4,c
 12267  010EF6  D021               	goto	l9847
 12268                           
 12269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12270                           ;stkvar	_n @ sp[(-56)+32]
 12271  010EF8  0EE8               	movlw	-24
 12272  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12273  010F00  0EE9               	movlw	-23
 12274  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 12275  010F08  0E7C               	movlw	low _dbuf
 12276  010F0A  243C               	addwf	(btemp+10)^0,w,c
 12277  010F0C  6ED9               	movwf	fsr2l,c
 12278  010F0E  0E01               	movlw	high _dbuf
 12279  010F10  203D               	addwfc	(btemp+11)^0,w,c
 12280  010F12  6EDA               	movwf	fsr2h,c
 12281  010F14  0E2E               	movlw	46
 12282  010F16  6EDF               	movwf	indf2,c
 12283                           
 12284                           ;stkvar	_n @ sp[(-56)+32]
 12285  010F18  0EE8               	movlw	-24
 12286  010F1A  50E3               	movf	plusw1,w,c
 12287  010F1C  0F01               	addlw	1
 12288  010F1E  6E32               	movwf	btemp^0,c
 12289  010F20  0EE8               	movlw	-24
 12290  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 12291  010F28  6A32               	clrf	btemp^0,c
 12292  010F2A  0EE9               	movlw	-23
 12293  010F2C  50E3               	movf	plusw1,w,c
 12294  010F2E  2032               	addwfc	btemp^0,w,c
 12295  010F30  6E32               	movwf	btemp^0,c
 12296  010F32  0EE9               	movlw	-23
 12297  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 12298  010F3A                     l9847:
 12299                           
 12300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12301                           ;stkvar	_n @ sp[(-56)+32]
 12302  010F3A  0EE8               	movlw	-24
 12303  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12304  010F42  0EE9               	movlw	-23
 12305  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 12306  010F4A  0E7C               	movlw	low _dbuf
 12307  010F4C  243C               	addwf	(btemp+10)^0,w,c
 12308  010F4E  6ED9               	movwf	fsr2l,c
 12309  010F50  0E01               	movlw	high _dbuf
 12310  010F52  203D               	addwfc	(btemp+11)^0,w,c
 12311  010F54  6EDA               	movwf	fsr2h,c
 12312  010F56  0E00               	movlw	0
 12313  010F58  6EDF               	movwf	indf2,c
 12314                           
 12315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12316                           ;stkvar	_nmode @ sp[(-56)+55]
 12317  010F5A  0EFF               	movlw	-1
 12318  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 12319  010F62  0E65               	movlw	101
 12320  010F64  1832               	xorwf	btemp^0,w,c
 12321  010F66  A4D8               	btfss	status,2,c
 12322  010F68  EF16  F081         	goto	l9651
 12323                           
 12324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12325  010F6C  0E4F               	movlw	79
 12326  010F6E  6E3C               	movwf	(btemp+10)^0,c
 12327  010F70  0E00               	movlw	0
 12328  010F72  6E3D               	movwf	(btemp+11)^0,c
 12329                           
 12330                           ;stkvar	_i @ sp[(-56)+36]
 12331  010F74  0EEC               	movlw	-20
 12332  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12333  010F7C  0EED               	movlw	-19
 12334  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12335                           
 12336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12337                           ;stkvar	_i @ sp[(-56)+36]
 12338  010F84  0EEC               	movlw	-20
 12339  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 12340  010F8C  0EED               	movlw	-19
 12341  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12342  010F94  0E7C               	movlw	low _dbuf
 12343  010F96  243C               	addwf	(btemp+10)^0,w,c
 12344  010F98  6ED9               	movwf	fsr2l,c
 12345  010F9A  0E01               	movlw	high _dbuf
 12346  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12347  010F9E  6EDA               	movwf	fsr2h,c
 12348  010FA0  0E00               	movlw	0
 12349  010FA2  6EDF               	movwf	indf2,c
 12350                           
 12351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12352                           ;stkvar	_sign @ sp[(-56)+42]
 12353  010FA4  0EF2               	movlw	-14
 12354  010FA6  6AE3               	clrf	plusw1,c
 12355  010FA8  0EF3               	movlw	-13
 12356  010FAA  6AE3               	clrf	plusw1,c
 12357                           
 12358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12359                           ;stkvar	_e @ sp[(-56)+34]
 12360  010FAC  0EEB               	movlw	-21
 12361  010FAE  AEE3               	btfss	plusw1,7,c
 12362  010FB0  D012               	goto	l9861
 12363                           
 12364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12365  010FB2  0E01               	movlw	1
 12366  010FB4  6E3C               	movwf	(btemp+10)^0,c
 12367  010FB6  0E00               	movlw	0
 12368  010FB8  6E3D               	movwf	(btemp+11)^0,c
 12369                           
 12370                           ;stkvar	_sign @ sp[(-56)+42]
 12371  010FBA  0EF2               	movlw	-14
 12372  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12373  010FC2  0EF3               	movlw	-13
 12374  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12375                           
 12376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12377                           ;stkvar	_e @ sp[(-56)+34]
 12378                           ;stkvar	_e @ sp[(-56)+34]
 12379  010FCA  0EEA               	movlw	-22
 12380  010FCC  6CE3               	negf	plusw1,c
 12381  010FCE  0EEB               	movlw	-21
 12382  010FD0  1EE3               	comf	plusw1,f,c
 12383  010FD2  B0D8               	btfsc	status,0,c
 12384  010FD4  2AE3               	incf	plusw1,f,c
 12385  010FD6                     l9861:
 12386                           
 12387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12388  010FD6  0E02               	movlw	2
 12389  010FD8  6E3C               	movwf	(btemp+10)^0,c
 12390  010FDA  0E00               	movlw	0
 12391  010FDC  6E3D               	movwf	(btemp+11)^0,c
 12392                           
 12393                           ;stkvar	_p @ sp[(-56)+40]
 12394  010FDE  0EF0               	movlw	-16
 12395  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12396  010FE6  0EF1               	movlw	-15
 12397  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12398                           
 12399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12400  010FEE  D051               	goto	l9873
 12401  010FF0                     l9863:
 12402                           
 12403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12404                           ;stkvar	_i @ sp[(-56)+36]
 12405  010FF0  50E1               	movf	fsr1l,w,c
 12406  010FF2  0FEC               	addlw	-20
 12407  010FF4  6ED9               	movwf	fsr2l,c
 12408  010FF6  50E2               	movf	fsr1h,w,c
 12409  010FF8  6EDA               	movwf	fsr2h,c
 12410  010FFA  0EFF               	movlw	255
 12411  010FFC  22DA               	addwfc	fsr2h,f,c
 12412  010FFE  06DE               	decf	postinc2,f,c
 12413  011000  0E00               	movlw	0
 12414  011002  5ADD               	subwfb	postdec2,f,c
 12415                           
 12416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 12417                           ;stkvar	_i @ sp[(-56)+36]
 12418  011004  0EEC               	movlw	-20
 12419  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 12420  01100C  0EED               	movlw	-19
 12421  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12422  011014  0E7C               	movlw	low _dbuf
 12423  011016  243C               	addwf	(btemp+10)^0,w,c
 12424  011018  6ED9               	movwf	fsr2l,c
 12425  01101A  0E01               	movlw	high _dbuf
 12426  01101C  203D               	addwfc	(btemp+11)^0,w,c
 12427  01101E  6EDA               	movwf	fsr2h,c
 12428  011020  0E0A               	movlw	10
 12429  011022  6EE6               	movwf	postinc1,c
 12430  011024  0E00               	movlw	0
 12431  011026  6EE6               	movwf	postinc1,c
 12432                           
 12433                           ;stkvar	_e @ sp[(-58)+34]
 12434  011028  0EE8               	movlw	-24
 12435  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 12436  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 12437  011036  ECEB  F0B4         	call	___awmod	;wreg free
 12438  01103A  5032               	movf	btemp^0,w,c
 12439  01103C  0F30               	addlw	48
 12440  01103E  6EDF               	movwf	indf2,c
 12441                           
 12442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 12443  011040  0E0A               	movlw	10
 12444  011042  6EE6               	movwf	postinc1,c
 12445  011044  0E00               	movlw	0
 12446  011046  6EE6               	movwf	postinc1,c
 12447                           
 12448                           ;stkvar	_e @ sp[(-58)+34]
 12449  011048  0EE8               	movlw	-24
 12450  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 12451  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 12452  011056  EC77  F0B2         	call	___awdiv	;wreg free
 12453                           
 12454                           ;stkvar	_e @ sp[(-56)+34]
 12455  01105A  0EEA               	movlw	-22
 12456  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12457  011062  0EEB               	movlw	-21
 12458  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12459                           
 12460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 12461                           ;stkvar	_p @ sp[(-56)+40]
 12462  01106A  50E1               	movf	fsr1l,w,c
 12463  01106C  0FF0               	addlw	-16
 12464  01106E  6ED9               	movwf	fsr2l,c
 12465  011070  50E2               	movf	fsr1h,w,c
 12466  011072  6EDA               	movwf	fsr2h,c
 12467  011074  0EFF               	movlw	255
 12468  011076  22DA               	addwfc	fsr2h,f,c
 12469  011078  06DE               	decf	postinc2,f,c
 12470  01107A  0E00               	movlw	0
 12471  01107C  5ADD               	subwfb	postdec2,f,c
 12472                           
 12473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12474                           ;stkvar	_w @ sp[(-56)+38]
 12475  01107E  50E1               	movf	fsr1l,w,c
 12476  011080  0FEE               	addlw	-18
 12477  011082  6ED9               	movwf	fsr2l,c
 12478  011084  50E2               	movf	fsr1h,w,c
 12479  011086  6EDA               	movwf	fsr2h,c
 12480  011088  0EFF               	movlw	255
 12481  01108A  22DA               	addwfc	fsr2h,f,c
 12482  01108C  06DE               	decf	postinc2,f,c
 12483  01108E  0E00               	movlw	0
 12484  011090  5ADD               	subwfb	postdec2,f,c
 12485  011092                     l9873:
 12486                           
 12487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12488                           ;stkvar	_e @ sp[(-56)+34]
 12489  011092  0EEA               	movlw	-22
 12490  011094  006F FF8C  F032    	movff	plusw1,btemp
 12491  01109A  0EEB               	movlw	-21
 12492  01109C  50E3               	movf	plusw1,w,c
 12493  01109E  1032               	iorwf	btemp^0,w,c
 12494  0110A0  A4D8               	btfss	status,2,c
 12495  0110A2  D7A6               	goto	l9863
 12496                           
 12497                           ;stkvar	_p @ sp[(-56)+40]
 12498  0110A4  0EF1               	movlw	-15
 12499  0110A6  BEE3               	btfsc	plusw1,7,c
 12500  0110A8  D007               	goto	u9720
 12501  0110AA  0EF1               	movlw	-15
 12502  0110AC  50E3               	movf	plusw1,w,c
 12503  0110AE  E1A0               	bnz	l9863
 12504  0110B0  0EF0               	movlw	-16
 12505  0110B2  04E3               	decf	plusw1,w,c
 12506  0110B4  B0D8               	btfsc	status,0,c
 12507  0110B6  D79C               	goto	l9863
 12508  0110B8                     u9720:
 12509                           
 12510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12511                           ;stkvar	_i @ sp[(-56)+36]
 12512  0110B8  50E1               	movf	fsr1l,w,c
 12513  0110BA  0FEC               	addlw	-20
 12514  0110BC  6ED9               	movwf	fsr2l,c
 12515  0110BE  50E2               	movf	fsr1h,w,c
 12516  0110C0  6EDA               	movwf	fsr2h,c
 12517  0110C2  0EFF               	movlw	255
 12518  0110C4  22DA               	addwfc	fsr2h,f,c
 12519  0110C6  06DE               	decf	postinc2,f,c
 12520  0110C8  0E00               	movlw	0
 12521  0110CA  5ADD               	subwfb	postdec2,f,c
 12522                           
 12523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12524                           ;stkvar	_sign @ sp[(-56)+42]
 12525  0110CC  0EF2               	movlw	-14
 12526  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12527  0110D4  0EF3               	movlw	-13
 12528  0110D6  50E3               	movf	plusw1,w,c
 12529  0110D8  1032               	iorwf	btemp^0,w,c
 12530  0110DA  A4D8               	btfss	status,2,c
 12531  0110DC  D002               	goto	l9883
 12532  0110DE  0E2B               	movlw	43
 12533  0110E0  D001               	goto	L9
 12534  0110E2                     l9883:
 12535  0110E2  0E2D               	movlw	45
 12536  0110E4                     L9:
 12537  0110E4  6E3C               	movwf	(btemp+10)^0,c
 12538  0110E6  0E00               	movlw	0
 12539  0110E8  6E3D               	movwf	(btemp+11)^0,c
 12540                           
 12541                           ;stkvar	_efgtoa$4516 @ sp[(-56)+4]
 12542  0110EA  0ECC               	movlw	-52
 12543  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12544  0110F2  0ECD               	movlw	-51
 12545  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12546                           
 12547                           ;stkvar	_efgtoa$4516 @ sp[(-56)+4]
 12548                           ;stkvar	_i @ sp[(-56)+36]
 12549  0110FA  0EEC               	movlw	-20
 12550  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12551  011102  0EED               	movlw	-19
 12552  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 12553  01110A  0E7C               	movlw	low _dbuf
 12554  01110C  243C               	addwf	(btemp+10)^0,w,c
 12555  01110E  6ED9               	movwf	fsr2l,c
 12556  011110  0E01               	movlw	high _dbuf
 12557  011112  203D               	addwfc	(btemp+11)^0,w,c
 12558  011114  6EDA               	movwf	fsr2h,c
 12559  011116  0ECC               	movlw	-52
 12560  011118  006F FF8F FFDF     	movff	plusw1,indf2
 12561                           
 12562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 12563                           ;stkvar	_w @ sp[(-56)+38]
 12564  01111E  50E1               	movf	fsr1l,w,c
 12565  011120  0FEE               	addlw	-18
 12566  011122  6ED9               	movwf	fsr2l,c
 12567  011124  50E2               	movf	fsr1h,w,c
 12568  011126  6EDA               	movwf	fsr2h,c
 12569  011128  0EFF               	movlw	255
 12570  01112A  22DA               	addwfc	fsr2h,f,c
 12571  01112C  06DE               	decf	postinc2,f,c
 12572  01112E  0E00               	movlw	0
 12573  011130  5ADD               	subwfb	postdec2,f,c
 12574                           
 12575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12576                           ;stkvar	_i @ sp[(-56)+36]
 12577  011132  50E1               	movf	fsr1l,w,c
 12578  011134  0FEC               	addlw	-20
 12579  011136  6ED9               	movwf	fsr2l,c
 12580  011138  50E2               	movf	fsr1h,w,c
 12581  01113A  6EDA               	movwf	fsr2h,c
 12582  01113C  0EFF               	movlw	255
 12583  01113E  22DA               	addwfc	fsr2h,f,c
 12584  011140  06DE               	decf	postinc2,f,c
 12585  011142  0E00               	movlw	0
 12586  011144  5ADD               	subwfb	postdec2,f,c
 12587  011146  0EBF               	movlw	191
 12588  011148  6E3C               	movwf	(btemp+10)^0,c
 12589  01114A  0EFF               	movlw	255
 12590  01114C  6E3D               	movwf	(btemp+11)^0,c
 12591                           
 12592                           ;stkvar	_c @ sp[(-56)+-7]
 12593  01114E  0EC1               	movlw	-63
 12594  011150  50E3               	movf	plusw1,w,c
 12595  011152  6E3A               	movwf	(btemp+8)^0,c
 12596  011154  6A3B               	clrf	(btemp+9)^0,c
 12597  011156  503C               	movf	(btemp+10)^0,w,c
 12598  011158  263A               	addwf	(btemp+8)^0,f,c
 12599  01115A  503D               	movf	(btemp+11)^0,w,c
 12600  01115C  223B               	addwfc	(btemp+9)^0,f,c
 12601  01115E  503B               	movf	(btemp+9)^0,w,c
 12602  011160  E106               	bnz	u9740
 12603  011162  0E1A               	movlw	26
 12604  011164  5C3A               	subwf	(btemp+8)^0,w,c
 12605  011166  B0D8               	btfsc	status,0,c
 12606  011168  D002               	goto	u9740
 12607  01116A  0E01               	movlw	1
 12608  01116C  D001               	goto	u9750
 12609  01116E                     u9740:
 12610  01116E  0E00               	movlw	0
 12611  011170                     u9750:
 12612  011170  6E3C               	movwf	(btemp+10)^0,c
 12613  011172  6A3D               	clrf	(btemp+11)^0,c
 12614                           
 12615                           ;stkvar	_efgtoa$4518 @ sp[(-56)+0]
 12616  011174  0EC8               	movlw	-56
 12617  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12618  01117C  0EC9               	movlw	-55
 12619  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12620                           
 12621                           ;stkvar	_efgtoa$4518 @ sp[(-56)+0]
 12622  011184  0EC8               	movlw	-56
 12623  011186  006F FF8C  F032    	movff	plusw1,btemp
 12624  01118C  0EC9               	movlw	-55
 12625  01118E  50E3               	movf	plusw1,w,c
 12626  011190  1032               	iorwf	btemp^0,w,c
 12627  011192  A4D8               	btfss	status,2,c
 12628  011194  D002               	goto	l9899
 12629  011196  0E65               	movlw	101
 12630  011198  D001               	goto	L10
 12631  01119A                     l9899:
 12632  01119A  0E45               	movlw	69
 12633  01119C                     L10:
 12634  01119C  6E3C               	movwf	(btemp+10)^0,c
 12635  01119E  0E00               	movlw	0
 12636  0111A0  6E3D               	movwf	(btemp+11)^0,c
 12637                           
 12638                           ;stkvar	_efgtoa$4517 @ sp[(-56)+2]
 12639  0111A2  0ECA               	movlw	-54
 12640  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12641  0111AA  0ECB               	movlw	-53
 12642  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12643                           
 12644                           ;stkvar	_efgtoa$4517 @ sp[(-56)+2]
 12645                           ;stkvar	_i @ sp[(-56)+36]
 12646  0111B2  0EEC               	movlw	-20
 12647  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12648  0111BA  0EED               	movlw	-19
 12649  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12650  0111C2  0E7C               	movlw	low _dbuf
 12651  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12652  0111C6  6ED9               	movwf	fsr2l,c
 12653  0111C8  0E01               	movlw	high _dbuf
 12654  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12655  0111CC  6EDA               	movwf	fsr2h,c
 12656  0111CE  0ECA               	movlw	-54
 12657  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12658                           
 12659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12660                           ;stkvar	_w @ sp[(-56)+38]
 12661  0111D6  50E1               	movf	fsr1l,w,c
 12662  0111D8  0FEE               	addlw	-18
 12663  0111DA  6ED9               	movwf	fsr2l,c
 12664  0111DC  50E2               	movf	fsr1h,w,c
 12665  0111DE  6EDA               	movwf	fsr2h,c
 12666  0111E0  0EFF               	movlw	255
 12667  0111E2  22DA               	addwfc	fsr2h,f,c
 12668  0111E4  06DE               	decf	postinc2,f,c
 12669  0111E6  0E00               	movlw	0
 12670  0111E8  5ADD               	subwfb	postdec2,f,c
 12671                           
 12672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12673                           ;stkvar	_i @ sp[(-56)+36]
 12674  0111EA  0EEC               	movlw	-20
 12675  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12676  0111F2  0EED               	movlw	-19
 12677  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12678  0111FA  0E7C               	movlw	low _dbuf
 12679  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12680  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12681  011200  0E01               	movlw	high _dbuf
 12682  011202  203D               	addwfc	(btemp+11)^0,w,c
 12683  011204  6E3B               	movwf	(btemp+9)^0,c
 12684  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12685  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12686                           
 12687                           ;stkvar	_n @ sp[(-58)+32]
 12688  011212  0E7C               	movlw	low _dbuf
 12689  011214  6E3C               	movwf	(btemp+10)^0,c
 12690  011216  0E01               	movlw	high _dbuf
 12691  011218  6E3D               	movwf	(btemp+11)^0,c
 12692  01121A  0EE6               	movlw	-26
 12693  01121C  50E3               	movf	plusw1,w,c
 12694  01121E  263C               	addwf	(btemp+10)^0,f,c
 12695  011220  0EE7               	movlw	-25
 12696  011222  50E3               	movf	plusw1,w,c
 12697  011224  223D               	addwfc	(btemp+11)^0,f,c
 12698  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12699  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12700  011232  EC66  F0B8         	call	_strcpy	;wreg free
 12701  011236  EF16  F081         	goto	l9651
 12702  01123A                     l1900:
 12703                           
 12704                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12705  01123A  0EC1               	movlw	193
 12706  01123C  26E1               	addwf	fsr1l,f,c
 12707  01123E  0EFF               	movlw	255
 12708  011240  22E2               	addwfc	fsr1h,f,c
 12709  011242  0012               	return		;funcret
 12710  011244                     __end_of_efgtoa:
 12711                           	opt callstack 0
 12712                           
 12713 ;; *************** function _tolower *****************
 12714 ;; Defined at:
 12715 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12716 ;; Parameters:    Size  Location     Type
 12717 ;;  c               2  [STACK] int 
 12718 ;; Auto vars:     Size  Location     Type
 12719 ;;		None
 12720 ;; Return value:  Size  Location     Type
 12721 ;;                  2  [STACK] int 
 12722 ;; Registers used:
 12723 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12724 ;; Tracked objects:
 12725 ;;		On entry : 0/5
 12726 ;;		On exit  : 0/0
 12727 ;;		Unchanged: 0/0
 12728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12733 ;;Total ram usage:        0 bytes
 12734 ;; Hardware stack levels used:    1
 12735 ;; Hardware stack levels required when called:    7
 12736 ;; This function calls:
 12737 ;;		_isupper
 12738 ;; This function is called by:
 12739 ;;		_efgtoa
 12740 ;;		_vfpfcnvrt
 12741 ;; This function uses a reentrant model
 12742 ;;
 12743                           
 12744                           	psect	text47
 12745  017912                     __ptext47:
 12746                           	opt callstack 0
 12747  017912                     _tolower:
 12748                           	opt callstack 0
 12749                           
 12750                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12751  017912  52E6               	movf	postinc1,f,c
 12752  017914  52E6               	movf	postinc1,f,c
 12753                           
 12754                           ;stkvar	_c @ sp[(-2)+-2]
 12755                           
 12756                           ;incstack = 0
 12757  017916  0EFC               	movlw	-4
 12758  017918  50E3               	movf	plusw1,w,c
 12759  01791A  0FBF               	addlw	191
 12760  01791C  6E3C               	movwf	(btemp+10)^0,c
 12761  01791E  0EFD               	movlw	-3
 12762  017920  006F FF8C  F03D    	movff	plusw1,btemp+11
 12763  017926  0EFF               	movlw	255
 12764  017928  223D               	addwfc	(btemp+11)^0,f,c
 12765  01792A  503D               	movf	(btemp+11)^0,w,c
 12766  01792C  E106               	bnz	u5170
 12767  01792E  0E1A               	movlw	26
 12768  017930  5C3C               	subwf	(btemp+10)^0,w,c
 12769  017932  B0D8               	btfsc	status,0,c
 12770  017934  D002               	goto	u5170
 12771  017936  0E01               	movlw	1
 12772  017938  D001               	goto	u5180
 12773  01793A                     u5170:
 12774  01793A  0E00               	movlw	0
 12775  01793C                     u5180:
 12776  01793C  6E3C               	movwf	(btemp+10)^0,c
 12777  01793E  6A3D               	clrf	(btemp+11)^0,c
 12778                           
 12779                           ;stkvar	_tolower$5184 @ sp[(-2)+0]
 12780  017940  0EFE               	movlw	-2
 12781  017942  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12782  017948  0EFF               	movlw	-1
 12783  01794A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12784                           
 12785                           ;stkvar	_tolower$5184 @ sp[(-2)+0]
 12786  017950  0EFE               	movlw	-2
 12787  017952  006F FF8C  F032    	movff	plusw1,btemp
 12788  017958  0EFF               	movlw	-1
 12789  01795A  50E3               	movf	plusw1,w,c
 12790  01795C  1032               	iorwf	btemp^0,w,c
 12791  01795E  B4D8               	btfsc	status,2,c
 12792  017960  D00D               	goto	l6571
 12793                           
 12794                           ;stkvar	_c @ sp[(-2)+-2]
 12795  017962  0EFC               	movlw	-4
 12796  017964  006F FF8C  F032    	movff	plusw1,btemp
 12797  01796A  0EFD               	movlw	-3
 12798  01796C  006F FF8C  F033    	movff	plusw1,btemp+1
 12799  017972  0E20               	movlw	32
 12800  017974  1232               	iorwf	btemp^0,f,c
 12801  017976  0E00               	movlw	0
 12802  017978  1233               	iorwf	(btemp+1)^0,f,c
 12803  01797A  D008               	goto	l2923
 12804  01797C                     l6571:
 12805                           
 12806                           ;stkvar	_c @ sp[(-2)+-2]
 12807  01797C  0EFC               	movlw	-4
 12808  01797E  006F FF8C  F032    	movff	plusw1,btemp
 12809  017984  0EFD               	movlw	-3
 12810  017986  006F FF8C  F033    	movff	plusw1,btemp+1
 12811  01798C                     l2923:
 12812                           
 12813                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12814  01798C  52E5               	movf	postdec1,f,c
 12815  01798E  52E5               	movf	postdec1,f,c
 12816  017990  52E5               	movf	postdec1,f,c
 12817  017992  52E5               	movf	postdec1,f,c
 12818  017994  0012               	return		;funcret
 12819  017996                     __end_of_tolower:
 12820                           	opt callstack 0
 12821                           
 12822 ;; *************** function _isupper *****************
 12823 ;; Defined at:
 12824 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12825 ;; Parameters:    Size  Location     Type
 12826 ;;  c               2  [STACK] int 
 12827 ;; Auto vars:     Size  Location     Type
 12828 ;;		None
 12829 ;; Return value:  Size  Location     Type
 12830 ;;                  2  [STACK] int 
 12831 ;; Registers used:
 12832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12833 ;; Tracked objects:
 12834 ;;		On entry : 0/0
 12835 ;;		On exit  : 0/0
 12836 ;;		Unchanged: 0/0
 12837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12842 ;;Total ram usage:        0 bytes
 12843 ;; Hardware stack levels used:    1
 12844 ;; Hardware stack levels required when called:    6
 12845 ;; This function calls:
 12846 ;;		Nothing
 12847 ;; This function is called by:
 12848 ;;		_efgtoa
 12849 ;;		_xtoa
 12850 ;;		_vfpfcnvrt
 12851 ;;		_tolower
 12852 ;; This function uses a reentrant model
 12853 ;;
 12854                           
 12855                           	psect	text48
 12856  0183F2                     __ptext48:
 12857                           	opt callstack 0
 12858  0183F2                     _isupper:
 12859                           	opt callstack 17
 12860                           
 12861                           ;stkvar	_c @ sp[(0)+-2]
 12862                           
 12863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12864                           ;incstack = 0
 12865  0183F2  0EFE               	movlw	-2
 12866  0183F4  50E3               	movf	plusw1,w,c
 12867  0183F6  0FBF               	addlw	191
 12868  0183F8  6E3C               	movwf	(btemp+10)^0,c
 12869  0183FA  0EFF               	movlw	-1
 12870  0183FC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12871  018402  0EFF               	movlw	255
 12872  018404  223D               	addwfc	(btemp+11)^0,f,c
 12873  018406  503D               	movf	(btemp+11)^0,w,c
 12874  018408  E106               	bnz	u4570
 12875  01840A  0E1A               	movlw	26
 12876  01840C  5C3C               	subwf	(btemp+10)^0,w,c
 12877  01840E  B0D8               	btfsc	status,0,c
 12878  018410  D002               	goto	u4570
 12879  018412  0E01               	movlw	1
 12880  018414  D001               	goto	u4580
 12881  018416                     u4570:
 12882  018416  0E00               	movlw	0
 12883  018418                     u4580:
 12884  018418  6E32               	movwf	btemp^0,c
 12885  01841A  6A33               	clrf	(btemp+1)^0,c
 12886                           
 12887                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12888  01841C  52E5               	movf	postdec1,f,c
 12889  01841E  52E5               	movf	postdec1,f,c
 12890  018420  0012               	return		;funcret
 12891  018422                     __end_of_isupper:
 12892                           	opt callstack 0
 12893                           
 12894 ;; *************** function _strcpy *****************
 12895 ;; Defined at:
 12896 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12897 ;; Parameters:    Size  Location     Type
 12898 ;;  dest            2  [STACK] PTR unsigned char 
 12899 ;;		 -> dbuf(80), 
 12900 ;;  src             2  [STACK] PTR const unsigned char 
 12901 ;;		 -> STR_48(4), STR_47(4), STR_44(4), STR_43(4), 
 12902 ;;		 -> dbuf(80), 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  d               2  [STACK] PTR unsigned char 
 12905 ;;		 -> dbuf(80), 
 12906 ;;  s               2  [STACK] PTR const unsigned char 
 12907 ;;		 -> STR_48(4), STR_47(4), STR_44(4), STR_43(4), 
 12908 ;;		 -> dbuf(80), 
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  2  [STACK] PTR unsigned char 
 12911 ;; Registers used:
 12912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/5
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12922 ;;Total ram usage:        0 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:    6
 12925 ;; This function calls:
 12926 ;;		Nothing
 12927 ;; This function is called by:
 12928 ;;		_efgtoa
 12929 ;; This function uses a reentrant model
 12930 ;;
 12931                           
 12932                           	psect	text49
 12933  0170CC                     __ptext49:
 12934                           	opt callstack 0
 12935  0170CC                     _strcpy:
 12936                           	opt callstack 0
 12937                           
 12938                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12939  0170CC  52E6               	movf	postinc1,f,c
 12940  0170CE  52E6               	movf	postinc1,f,c
 12941  0170D0  52E6               	movf	postinc1,f,c
 12942  0170D2  52E6               	movf	postinc1,f,c
 12943                           
 12944                           ;stkvar	_src @ sp[(-4)+-4]
 12945                           
 12946                           ;incstack = 0
 12947  0170D4  0EF8               	movlw	-8
 12948  0170D6  006F FF8C  F03C    	movff	plusw1,btemp+10
 12949  0170DC  0EF9               	movlw	-7
 12950  0170DE  006F FF8C  F03D    	movff	plusw1,btemp+11
 12951                           
 12952                           ;stkvar	_s @ sp[(-4)+2]
 12953  0170E4  0EFF               	movlw	-1
 12954  0170E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12955  0170EC  0EFE               	movlw	-2
 12956  0170EE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12957                           
 12958                           ;stkvar	_dest @ sp[(-4)+-2]
 12959  0170F4  0EFA               	movlw	-6
 12960  0170F6  006F FF8C  F03C    	movff	plusw1,btemp+10
 12961  0170FC  0EFB               	movlw	-5
 12962  0170FE  006F FF8C  F03D    	movff	plusw1,btemp+11
 12963                           
 12964                           ;stkvar	_d @ sp[(-4)+0]
 12965  017104  0EFD               	movlw	-3
 12966  017106  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12967  01710C  0EFC               	movlw	-4
 12968  01710E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12969  017114                     l9525:
 12970                           
 12971                           ;stkvar	_s @ sp[(-4)+2]
 12972  017114  50E1               	movf	fsr1l,w,c
 12973  017116  0FFE               	addlw	-2
 12974  017118  6ED9               	movwf	fsr2l,c
 12975  01711A  50E2               	movf	fsr1h,w,c
 12976  01711C  6EDA               	movwf	fsr2h,c
 12977  01711E  0EFF               	movlw	255
 12978  017120  22DA               	addwfc	fsr2h,f,c
 12979  017122  006F FF7C  F03C    	movff	indf2,btemp+10
 12980  017128  0E01               	movlw	1
 12981  01712A  26DE               	addwf	postinc2,f,c
 12982  01712C  006F FF7C  F03D    	movff	indf2,btemp+11
 12983  017132  0E00               	movlw	0
 12984  017134  22DD               	addwfc	postdec2,f,c
 12985  017136  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12986  01713C  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12987  017142  0E00               	movlw	low (__mediumconst shr (0+16))
 12988  017144  6EF8               	movwf	tblptru,c
 12989                           
 12990                           ;stkvar	_d @ sp[(-4)+0]
 12991  017146  50E1               	movf	fsr1l,w,c
 12992  017148  0FFC               	addlw	-4
 12993  01714A  6ED9               	movwf	fsr2l,c
 12994  01714C  50E2               	movf	fsr1h,w,c
 12995  01714E  6EDA               	movwf	fsr2h,c
 12996  017150  0EFF               	movlw	255
 12997  017152  22DA               	addwfc	fsr2h,f,c
 12998  017154  006F FF7C  F03C    	movff	indf2,btemp+10
 12999  01715A  0E01               	movlw	1
 13000  01715C  26DE               	addwf	postinc2,f,c
 13001  01715E  006F FF7C  F03D    	movff	indf2,btemp+11
 13002  017164  0E00               	movlw	0
 13003  017166  22DD               	addwfc	postdec2,f,c
 13004  017168  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 13005  01716E  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 13006  017174  0E1F               	movlw	(high __ramtop+-1)
 13007  017176  64F7               	cpfsgt	tblptrh,c
 13008  017178  D003               	bra	u9057
 13009  01717A  0008               	tblrd		*
 13010  01717C  50F5               	movf	tablat,w,c
 13011  01717E  D007               	bra	u9050
 13012  017180                     u9057:
 13013  017180  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13014  017186  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13015  01718C  50EF               	movf	indf0,w,c
 13016  01718E                     u9050:
 13017  01718E  6EDF               	movwf	indf2,c
 13018  017190  50DF               	movf	indf2,w,c
 13019  017192  A4D8               	btfss	status,2,c
 13020  017194  D7BF               	goto	l9525
 13021                           
 13022                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13023  017196  0EF8               	movlw	248
 13024  017198  26E1               	addwf	fsr1l,f,c
 13025  01719A  0EFF               	movlw	255
 13026  01719C  22E2               	addwfc	fsr1h,f,c
 13027  01719E  0012               	return		;funcret
 13028  0171A0                     __end_of_strcpy:
 13029                           	opt callstack 0
 13030                           
 13031 ;; *************** function _floorf *****************
 13032 ;; Defined at:
 13033 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13034 ;; Parameters:    Size  Location     Type
 13035 ;;  x               4  [STACK] float 
 13036 ;; Auto vars:     Size  Location     Type
 13037 ;;  u               4  [STACK] struct .
 13038 ;;  m               4  [STACK] unsigned long 
 13039 ;;  e               2  [STACK] int 
 13040 ;; Return value:  Size  Location     Type
 13041 ;;                  4  [STACK] float 
 13042 ;; Registers used:
 13043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13044 ;; Tracked objects:
 13045 ;;		On entry : 0/5
 13046 ;;		On exit  : 0/0
 13047 ;;		Unchanged: 0/0
 13048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13053 ;;Total ram usage:        0 bytes
 13054 ;; Hardware stack levels used:    1
 13055 ;; Hardware stack levels required when called:    6
 13056 ;; This function calls:
 13057 ;;		Nothing
 13058 ;; This function is called by:
 13059 ;;		_efgtoa
 13060 ;; This function uses a reentrant model
 13061 ;;
 13062                           
 13063                           	psect	text50
 13064  0145C2                     __ptext50:
 13065                           	opt callstack 0
 13066  0145C2                     _floorf:
 13067                           	opt callstack 0
 13068                           
 13069                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13070  0145C2  0E0A               	movlw	10
 13071  0145C4  26E1               	addwf	fsr1l,f,c
 13072  0145C6  0E00               	movlw	0
 13073  0145C8  22E2               	addwfc	fsr1h,f,c
 13074                           
 13075                           ;incstack = 0
 13076  0145CA  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 13077  0145D0  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 13078  0145D6  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 13079  0145DC  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 13080                           
 13081                           ;stkvar	_u @ sp[(-10)+0]
 13082  0145E2  0EF6               	movlw	-10
 13083  0145E4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13084  0145EA  0EF7               	movlw	-9
 13085  0145EC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13086  0145F2  0EF8               	movlw	-8
 13087  0145F4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13088  0145FA  0EF9               	movlw	-7
 13089  0145FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13090                           
 13091                           ;stkvar	_x @ sp[(-10)+-4]
 13092  014602  0EF2               	movlw	-14
 13093  014604  006F FF8C  F03A    	movff	plusw1,btemp+8
 13094  01460A  0EF3               	movlw	-13
 13095  01460C  006F FF8C  F03B    	movff	plusw1,btemp+9
 13096  014612  0EF4               	movlw	-12
 13097  014614  006F FF8C  F03C    	movff	plusw1,btemp+10
 13098  01461A  0EF5               	movlw	-11
 13099  01461C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13100                           
 13101                           ;stkvar	_u @ sp[(-10)+0]
 13102  014622  0EF6               	movlw	-10
 13103  014624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13104  01462A  0EF7               	movlw	-9
 13105  01462C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13106  014632  0EF8               	movlw	-8
 13107  014634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13108  01463A  0EF9               	movlw	-7
 13109  01463C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13110  014642  0E81               	movlw	129
 13111  014644  6E3C               	movwf	(btemp+10)^0,c
 13112  014646  0EFF               	movlw	255
 13113  014648  6E3D               	movwf	(btemp+11)^0,c
 13114                           
 13115                           ;stkvar	_u @ sp[(-10)+0]
 13116  01464A  0EF6               	movlw	-10
 13117  01464C  006F FF8C  F036    	movff	plusw1,btemp+4
 13118  014652  0EF7               	movlw	-9
 13119  014654  006F FF8C  F037    	movff	plusw1,btemp+5
 13120  01465A  0EF8               	movlw	-8
 13121  01465C  006F FF8C  F038    	movff	plusw1,btemp+6
 13122  014662  0EF9               	movlw	-7
 13123  014664  006F FF8C  F039    	movff	plusw1,btemp+7
 13124  01466A  0E18               	movlw	24
 13125  01466C  D005               	goto	u5200
 13126  01466E                     u5205:
 13127  01466E  90D8               	bcf	status,0,c
 13128  014670  3239               	rrcf	(btemp+7)^0,f,c
 13129  014672  3238               	rrcf	(btemp+6)^0,f,c
 13130  014674  3237               	rrcf	(btemp+5)^0,f,c
 13131  014676  3236               	rrcf	(btemp+4)^0,f,c
 13132  014678                     u5200:
 13133  014678  2EE8               	decfsz	wreg,f,c
 13134  01467A  D7F9               	goto	u5205
 13135  01467C  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 13136  014682  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 13137  014688  0EFF               	movlw	255
 13138  01468A  163A               	andwf	(btemp+8)^0,f,c
 13139  01468C  0E00               	movlw	0
 13140  01468E  163B               	andwf	(btemp+9)^0,f,c
 13141  014690  503C               	movf	(btemp+10)^0,w,c
 13142  014692  263A               	addwf	(btemp+8)^0,f,c
 13143  014694  503D               	movf	(btemp+11)^0,w,c
 13144  014696  223B               	addwfc	(btemp+9)^0,f,c
 13145                           
 13146                           ;stkvar	_e @ sp[(-10)+8]
 13147  014698  0EFE               	movlw	-2
 13148  01469A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13149  0146A0  0EFF               	movlw	-1
 13150  0146A2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13151                           
 13152                           ;stkvar	_e @ sp[(-10)+8]
 13153  0146A8  0EFF               	movlw	-1
 13154  0146AA  BEE3               	btfsc	plusw1,7,c
 13155  0146AC  D019               	goto	l6585
 13156  0146AE  0EFF               	movlw	-1
 13157  0146B0  50E3               	movf	plusw1,w,c
 13158  0146B2  E108               	bnz	u5210
 13159  0146B4  0EFE               	movlw	-2
 13160  0146B6  006F FF8C  F032    	movff	plusw1,btemp
 13161  0146BC  0E17               	movlw	23
 13162  0146BE  5E32               	subwf	btemp^0,f,c
 13163  0146C0  A0D8               	btfss	status,0,c
 13164  0146C2  D00E               	goto	l6585
 13165  0146C4                     u5210:
 13166                           
 13167                           ;stkvar	_x @ sp[(-10)+-4]
 13168  0146C4  0EF2               	movlw	-14
 13169  0146C6  006F FF8C  F032    	movff	plusw1,btemp
 13170  0146CC  0EF3               	movlw	-13
 13171  0146CE  006F FF8C  F033    	movff	plusw1,btemp+1
 13172  0146D4  0EF4               	movlw	-12
 13173  0146D6  006F FF8C  F034    	movff	plusw1,btemp+2
 13174  0146DC  0EF5               	movlw	-11
 13175  0146DE  D11F               	goto	L11
 13176  0146E0                     l6585:
 13177                           
 13178                           ;stkvar	_e @ sp[(-10)+8]
 13179  0146E0  0EFF               	movlw	-1
 13180  0146E2  BEE3               	btfsc	plusw1,7,c
 13181  0146E4  D0B4               	goto	l6601
 13182                           
 13183                           ;stkvar	_e @ sp[(-10)+8]
 13184  0146E6  0EFE               	movlw	-2
 13185  0146E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13186  0146EE  0EFF               	movlw	255
 13187  0146F0  6E36               	movwf	(btemp+4)^0,c
 13188  0146F2  0EFF               	movlw	255
 13189  0146F4  6E37               	movwf	(btemp+5)^0,c
 13190  0146F6  0E7F               	movlw	127
 13191  0146F8  6E38               	movwf	(btemp+6)^0,c
 13192  0146FA  0E00               	movlw	0
 13193  0146FC  6E39               	movwf	(btemp+7)^0,c
 13194  0146FE                     u5235:
 13195  0146FE  663D               	tstfsz	(btemp+11)^0,c
 13196  014700  D001               	goto	u5236
 13197  014702  D007               	goto	u5237
 13198  014704                     u5236:
 13199  014704  3439               	rlcf	(btemp+7)^0,w,c
 13200  014706  3239               	rrcf	(btemp+7)^0,f,c
 13201  014708  3238               	rrcf	(btemp+6)^0,f,c
 13202  01470A  3237               	rrcf	(btemp+5)^0,f,c
 13203  01470C  3236               	rrcf	(btemp+4)^0,f,c
 13204  01470E  2E3D               	decfsz	(btemp+11)^0,f,c
 13205  014710  D7F6               	goto	u5235
 13206  014712                     u5237:
 13207                           
 13208                           ;stkvar	_m @ sp[(-10)+4]
 13209  014712  0EFA               	movlw	-6
 13210  014714  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 13211  01471A  0EFB               	movlw	-5
 13212  01471C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 13213  014722  0EFC               	movlw	-4
 13214  014724  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13215  01472A  0EFD               	movlw	-3
 13216  01472C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13217                           
 13218                           ;stkvar	_m @ sp[(-10)+4]
 13219                           ;stkvar	_u @ sp[(-10)+0]
 13220  014732  0EF6               	movlw	-10
 13221  014734  006F FF8C  F03A    	movff	plusw1,btemp+8
 13222  01473A  0EF7               	movlw	-9
 13223  01473C  006F FF8C  F03B    	movff	plusw1,btemp+9
 13224  014742  0EF8               	movlw	-8
 13225  014744  006F FF8C  F03C    	movff	plusw1,btemp+10
 13226  01474A  0EF9               	movlw	-7
 13227  01474C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13228  014752  0EFA               	movlw	-6
 13229  014754  50E3               	movf	plusw1,w,c
 13230  014756  163A               	andwf	(btemp+8)^0,f,c
 13231  014758  0EFB               	movlw	-5
 13232  01475A  50E3               	movf	plusw1,w,c
 13233  01475C  163B               	andwf	(btemp+9)^0,f,c
 13234  01475E  0EFC               	movlw	-4
 13235  014760  50E3               	movf	plusw1,w,c
 13236  014762  163C               	andwf	(btemp+10)^0,f,c
 13237  014764  0EFD               	movlw	-3
 13238  014766  50E3               	movf	plusw1,w,c
 13239  014768  163D               	andwf	(btemp+11)^0,f,c
 13240  01476A  503A               	movf	(btemp+8)^0,w,c
 13241  01476C  103B               	iorwf	(btemp+9)^0,w,c
 13242  01476E  103C               	iorwf	(btemp+10)^0,w,c
 13243  014770  103D               	iorwf	(btemp+11)^0,w,c
 13244  014772  B4D8               	btfsc	status,2,c
 13245  014774  D7A7               	goto	u5210
 13246                           
 13247                           ;stkvar	_u @ sp[(-10)+0]
 13248  014776  0EF6               	movlw	-10
 13249  014778  006F FF8C  F03A    	movff	plusw1,btemp+8
 13250  01477E  0EF7               	movlw	-9
 13251  014780  006F FF8C  F03B    	movff	plusw1,btemp+9
 13252  014786  0EF8               	movlw	-8
 13253  014788  006F FF8C  F03C    	movff	plusw1,btemp+10
 13254  01478E  0EF9               	movlw	-7
 13255  014790  006F FF8C  F03D    	movff	plusw1,btemp+11
 13256  014796  0E20               	movlw	32
 13257  014798  D005               	goto	u5250
 13258  01479A                     u5255:
 13259  01479A  90D8               	bcf	status,0,c
 13260  01479C  323D               	rrcf	(btemp+11)^0,f,c
 13261  01479E  323C               	rrcf	(btemp+10)^0,f,c
 13262  0147A0  323B               	rrcf	(btemp+9)^0,f,c
 13263  0147A2  323A               	rrcf	(btemp+8)^0,f,c
 13264  0147A4                     u5250:
 13265  0147A4  2EE8               	decfsz	wreg,f,c
 13266  0147A6  D7F9               	goto	u5255
 13267  0147A8  503A               	movf	(btemp+8)^0,w,c
 13268  0147AA  B4D8               	btfsc	status,2,c
 13269  0147AC  D028               	goto	l6599
 13270                           
 13271                           ;stkvar	_m @ sp[(-10)+4]
 13272                           ;stkvar	_u @ sp[(-10)+0]
 13273  0147AE  0EF6               	movlw	-10
 13274  0147B0  50E3               	movf	plusw1,w,c
 13275  0147B2  6E32               	movwf	btemp^0,c
 13276  0147B4  0EFA               	movlw	-6
 13277  0147B6  50E3               	movf	plusw1,w,c
 13278  0147B8  2632               	addwf	btemp^0,f,c
 13279  0147BA  0EF6               	movlw	-10
 13280  0147BC  0060  F0CB  FFE3   	movff	btemp,plusw1
 13281  0147C2  0EF7               	movlw	-9
 13282  0147C4  50E3               	movf	plusw1,w,c
 13283  0147C6  6E32               	movwf	btemp^0,c
 13284  0147C8  0EFB               	movlw	-5
 13285  0147CA  50E3               	movf	plusw1,w,c
 13286  0147CC  2232               	addwfc	btemp^0,f,c
 13287  0147CE  0EF7               	movlw	-9
 13288  0147D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 13289  0147D6  0EF8               	movlw	-8
 13290  0147D8  50E3               	movf	plusw1,w,c
 13291  0147DA  6E32               	movwf	btemp^0,c
 13292  0147DC  0EFC               	movlw	-4
 13293  0147DE  50E3               	movf	plusw1,w,c
 13294  0147E0  2232               	addwfc	btemp^0,f,c
 13295  0147E2  0EF8               	movlw	-8
 13296  0147E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13297  0147EA  0EF9               	movlw	-7
 13298  0147EC  50E3               	movf	plusw1,w,c
 13299  0147EE  6E32               	movwf	btemp^0,c
 13300  0147F0  0EFD               	movlw	-3
 13301  0147F2  50E3               	movf	plusw1,w,c
 13302  0147F4  2232               	addwfc	btemp^0,f,c
 13303  0147F6  0EF9               	movlw	-7
 13304  0147F8  0060  F0CB  FFE3   	movff	btemp,plusw1
 13305  0147FE                     l6599:
 13306                           
 13307                           ;stkvar	_m @ sp[(-10)+4]
 13308  0147FE  0EFA               	movlw	-6
 13309  014800  006F FF8C  F03A    	movff	plusw1,btemp+8
 13310  014806  0EFB               	movlw	-5
 13311  014808  006F FF8C  F03B    	movff	plusw1,btemp+9
 13312  01480E  0EFC               	movlw	-4
 13313  014810  006F FF8C  F03C    	movff	plusw1,btemp+10
 13314  014816  0EFD               	movlw	-3
 13315  014818  006F FF8C  F03D    	movff	plusw1,btemp+11
 13316  01481E  1C3A               	comf	(btemp+8)^0,w,c
 13317  014820  6E36               	movwf	(btemp+4)^0,c
 13318  014822  1C3B               	comf	(btemp+9)^0,w,c
 13319  014824  6E37               	movwf	(btemp+5)^0,c
 13320  014826  1C3C               	comf	(btemp+10)^0,w,c
 13321  014828  6E38               	movwf	(btemp+6)^0,c
 13322  01482A  1C3D               	comf	(btemp+11)^0,w,c
 13323  01482C  6E39               	movwf	(btemp+7)^0,c
 13324                           
 13325                           ;stkvar	_u @ sp[(-10)+0]
 13326  01482E  50E1               	movf	fsr1l,w,c
 13327  014830  0FF6               	addlw	-10
 13328  014832  6ED9               	movwf	fsr2l,c
 13329  014834  50E2               	movf	fsr1h,w,c
 13330  014836  6EDA               	movwf	fsr2h,c
 13331  014838  0EFF               	movlw	255
 13332  01483A  22DA               	addwfc	fsr2h,f,c
 13333  01483C  5036               	movf	(btemp+4)^0,w,c
 13334  01483E  16DE               	andwf	postinc2,f,c
 13335  014840  5037               	movf	(btemp+5)^0,w,c
 13336  014842  16DE               	andwf	postinc2,f,c
 13337  014844  5038               	movf	(btemp+6)^0,w,c
 13338  014846  16DE               	andwf	postinc2,f,c
 13339  014848  5039               	movf	(btemp+7)^0,w,c
 13340  01484A  16DE               	andwf	postinc2,f,c
 13341  01484C  D05B               	goto	l6609
 13342  01484E                     l6601:
 13343                           
 13344                           ;stkvar	_u @ sp[(-10)+0]
 13345  01484E  0EF6               	movlw	-10
 13346  014850  006F FF8C  F03A    	movff	plusw1,btemp+8
 13347  014856  0EF7               	movlw	-9
 13348  014858  006F FF8C  F03B    	movff	plusw1,btemp+9
 13349  01485E  0EF8               	movlw	-8
 13350  014860  006F FF8C  F03C    	movff	plusw1,btemp+10
 13351  014866  0EF9               	movlw	-7
 13352  014868  006F FF8C  F03D    	movff	plusw1,btemp+11
 13353  01486E  0E20               	movlw	32
 13354  014870  D005               	goto	u5270
 13355  014872                     u5275:
 13356  014872  90D8               	bcf	status,0,c
 13357  014874  323D               	rrcf	(btemp+11)^0,f,c
 13358  014876  323C               	rrcf	(btemp+10)^0,f,c
 13359  014878  323B               	rrcf	(btemp+9)^0,f,c
 13360  01487A  323A               	rrcf	(btemp+8)^0,f,c
 13361  01487C                     u5270:
 13362  01487C  2EE8               	decfsz	wreg,f,c
 13363  01487E  D7F9               	goto	u5275
 13364  014880  663A               	tstfsz	(btemp+8)^0,c
 13365  014882  D009               	goto	l6605
 13366                           
 13367                           ;stkvar	_u @ sp[(-10)+0]
 13368  014884  0EF6               	movlw	-10
 13369  014886  6AE3               	clrf	plusw1,c
 13370  014888  0EF7               	movlw	-9
 13371  01488A  6AE3               	clrf	plusw1,c
 13372  01488C  0EF8               	movlw	-8
 13373  01488E  6AE3               	clrf	plusw1,c
 13374  014890  0EF9               	movlw	-7
 13375  014892  6AE3               	clrf	plusw1,c
 13376  014894  D037               	goto	l6609
 13377  014896                     l6605:
 13378                           
 13379                           ;stkvar	_u @ sp[(-10)+0]
 13380  014896  0EF6               	movlw	-10
 13381  014898  006F FF8C  F03A    	movff	plusw1,btemp+8
 13382  01489E  0EF7               	movlw	-9
 13383  0148A0  006F FF8C  F03B    	movff	plusw1,btemp+9
 13384  0148A6  0EF8               	movlw	-8
 13385  0148A8  006F FF8C  F03C    	movff	plusw1,btemp+10
 13386  0148AE  0EF9               	movlw	-7
 13387  0148B0  006F FF8C  F03D    	movff	plusw1,btemp+11
 13388  0148B6  90D8               	bcf	status,0,c
 13389  0148B8  343A               	rlcf	(btemp+8)^0,w,c
 13390  0148BA  6E36               	movwf	(btemp+4)^0,c
 13391  0148BC  343B               	rlcf	(btemp+9)^0,w,c
 13392  0148BE  6E37               	movwf	(btemp+5)^0,c
 13393  0148C0  343C               	rlcf	(btemp+10)^0,w,c
 13394  0148C2  6E38               	movwf	(btemp+6)^0,c
 13395  0148C4  343D               	rlcf	(btemp+11)^0,w,c
 13396  0148C6  6E39               	movwf	(btemp+7)^0,c
 13397  0148C8  5036               	movf	(btemp+4)^0,w,c
 13398  0148CA  1037               	iorwf	(btemp+5)^0,w,c
 13399  0148CC  1038               	iorwf	(btemp+6)^0,w,c
 13400  0148CE  1039               	iorwf	(btemp+7)^0,w,c
 13401  0148D0  B4D8               	btfsc	status,2,c
 13402  0148D2  D018               	goto	l6609
 13403  0148D4  0E00               	movlw	0
 13404  0148D6  6E3A               	movwf	(btemp+8)^0,c
 13405  0148D8  0E00               	movlw	0
 13406  0148DA  6E3B               	movwf	(btemp+9)^0,c
 13407  0148DC  0E80               	movlw	128
 13408  0148DE  6E3C               	movwf	(btemp+10)^0,c
 13409  0148E0  0EBF               	movlw	191
 13410  0148E2  6E3D               	movwf	(btemp+11)^0,c
 13411                           
 13412                           ;stkvar	_u @ sp[(-10)+0]
 13413  0148E4  0EF6               	movlw	-10
 13414  0148E6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13415  0148EC  0EF7               	movlw	-9
 13416  0148EE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13417  0148F4  0EF8               	movlw	-8
 13418  0148F6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13419  0148FC  0EF9               	movlw	-7
 13420  0148FE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13421  014904                     l6609:
 13422                           
 13423                           ;stkvar	_u @ sp[(-10)+0]
 13424  014904  0EF6               	movlw	-10
 13425  014906  006F FF8C  F032    	movff	plusw1,btemp
 13426  01490C  0EF7               	movlw	-9
 13427  01490E  006F FF8C  F033    	movff	plusw1,btemp+1
 13428  014914  0EF8               	movlw	-8
 13429  014916  006F FF8C  F034    	movff	plusw1,btemp+2
 13430  01491C  0EF9               	movlw	-7
 13431  01491E                     L11:
 13432  01491E  006F FF8C  F035    	movff	plusw1,btemp+3
 13433                           
 13434                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13435  014924  0EF2               	movlw	242
 13436  014926  26E1               	addwf	fsr1l,f,c
 13437  014928  0EFF               	movlw	255
 13438  01492A  22E2               	addwfc	fsr1h,f,c
 13439  01492C  0012               	return		;funcret
 13440  01492E                     __end_of_floorf:
 13441                           	opt callstack 0
 13442                           
 13443 ;; *************** function ___fpclassifyf *****************
 13444 ;; Defined at:
 13445 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 13446 ;; Parameters:    Size  Location     Type
 13447 ;;  x               4  [STACK] float 
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;  u               4  [STACK] struct .
 13450 ;;  e               2  [STACK] int 
 13451 ;; Return value:  Size  Location     Type
 13452 ;;                  2  [STACK] int 
 13453 ;; Registers used:
 13454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 13455 ;; Tracked objects:
 13456 ;;		On entry : 0/5
 13457 ;;		On exit  : 0/0
 13458 ;;		Unchanged: 0/0
 13459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13464 ;;Total ram usage:        0 bytes
 13465 ;; Hardware stack levels used:    1
 13466 ;; Hardware stack levels required when called:    6
 13467 ;; This function calls:
 13468 ;;		Nothing
 13469 ;; This function is called by:
 13470 ;;		_efgtoa
 13471 ;; This function uses a reentrant model
 13472 ;;
 13473                           
 13474                           	psect	text51
 13475  016084                     __ptext51:
 13476                           	opt callstack 0
 13477  016084                     ___fpclassifyf:
 13478                           	opt callstack 0
 13479                           
 13480                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13481  016084  0E06               	movlw	6
 13482  016086  26E1               	addwf	fsr1l,f,c
 13483  016088  0E00               	movlw	0
 13484  01608A  22E2               	addwfc	fsr1h,f,c
 13485                           
 13486                           ;incstack = 0
 13487  01608C  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 13488  016092  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 13489  016098  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 13490  01609E  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13491                           
 13492                           ;stkvar	_u @ sp[(-6)+0]
 13493  0160A4  0EFA               	movlw	-6
 13494  0160A6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13495  0160AC  0EFB               	movlw	-5
 13496  0160AE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13497  0160B4  0EFC               	movlw	-4
 13498  0160B6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13499  0160BC  0EFD               	movlw	-3
 13500  0160BE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13501                           
 13502                           ;stkvar	_x @ sp[(-6)+-4]
 13503  0160C4  0EF6               	movlw	-10
 13504  0160C6  006F FF8C  F03A    	movff	plusw1,btemp+8
 13505  0160CC  0EF7               	movlw	-9
 13506  0160CE  006F FF8C  F03B    	movff	plusw1,btemp+9
 13507  0160D4  0EF8               	movlw	-8
 13508  0160D6  006F FF8C  F03C    	movff	plusw1,btemp+10
 13509  0160DC  0EF9               	movlw	-7
 13510  0160DE  006F FF8C  F03D    	movff	plusw1,btemp+11
 13511                           
 13512                           ;stkvar	_u @ sp[(-6)+0]
 13513  0160E4  0EFA               	movlw	-6
 13514  0160E6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13515  0160EC  0EFB               	movlw	-5
 13516  0160EE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13517  0160F4  0EFC               	movlw	-4
 13518  0160F6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13519  0160FC  0EFD               	movlw	-3
 13520  0160FE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13521                           
 13522                           ;stkvar	_u @ sp[(-6)+0]
 13523  016104  0EFA               	movlw	-6
 13524  016106  006F FF8C  F03A    	movff	plusw1,btemp+8
 13525  01610C  0EFB               	movlw	-5
 13526  01610E  006F FF8C  F03B    	movff	plusw1,btemp+9
 13527  016114  0EFC               	movlw	-4
 13528  016116  006F FF8C  F03C    	movff	plusw1,btemp+10
 13529  01611C  0EFD               	movlw	-3
 13530  01611E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13531  016124  0E18               	movlw	24
 13532  016126  D005               	goto	u5080
 13533  016128                     u5085:
 13534  016128  90D8               	bcf	status,0,c
 13535  01612A  323D               	rrcf	(btemp+11)^0,f,c
 13536  01612C  323C               	rrcf	(btemp+10)^0,f,c
 13537  01612E  323B               	rrcf	(btemp+9)^0,f,c
 13538  016130  323A               	rrcf	(btemp+8)^0,f,c
 13539  016132                     u5080:
 13540  016132  2EE8               	decfsz	wreg,f,c
 13541  016134  D7F9               	goto	u5085
 13542  016136  0060  F0E8  F038   	movff	btemp+8,btemp+6
 13543  01613C  0060  F0EC  F039   	movff	btemp+9,btemp+7
 13544  016142  0EFF               	movlw	255
 13545  016144  1638               	andwf	(btemp+6)^0,f,c
 13546  016146  0E00               	movlw	0
 13547  016148  1639               	andwf	(btemp+7)^0,f,c
 13548                           
 13549                           ;stkvar	_e @ sp[(-6)+4]
 13550  01614A  0EFE               	movlw	-2
 13551  01614C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13552  016152  0EFF               	movlw	-1
 13553  016154  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13554                           
 13555                           ;stkvar	_e @ sp[(-6)+4]
 13556  01615A  0EFE               	movlw	-2
 13557  01615C  006F FF8C  F032    	movff	plusw1,btemp
 13558  016162  0EFF               	movlw	-1
 13559  016164  50E3               	movf	plusw1,w,c
 13560  016166  1032               	iorwf	btemp^0,w,c
 13561  016168  A4D8               	btfss	status,2,c
 13562  01616A  D023               	goto	l6547
 13563                           
 13564                           ;stkvar	_u @ sp[(-6)+0]
 13565  01616C  0EFA               	movlw	-6
 13566  01616E  006F FF8C  F03A    	movff	plusw1,btemp+8
 13567  016174  0EFB               	movlw	-5
 13568  016176  006F FF8C  F03B    	movff	plusw1,btemp+9
 13569  01617C  0EFC               	movlw	-4
 13570  01617E  006F FF8C  F03C    	movff	plusw1,btemp+10
 13571  016184  0EFD               	movlw	-3
 13572  016186  006F FF8C  F03D    	movff	plusw1,btemp+11
 13573  01618C  90D8               	bcf	status,0,c
 13574  01618E  343A               	rlcf	(btemp+8)^0,w,c
 13575  016190  6E36               	movwf	(btemp+4)^0,c
 13576  016192  343B               	rlcf	(btemp+9)^0,w,c
 13577  016194  6E37               	movwf	(btemp+5)^0,c
 13578  016196  343C               	rlcf	(btemp+10)^0,w,c
 13579  016198  6E38               	movwf	(btemp+6)^0,c
 13580  01619A  343D               	rlcf	(btemp+11)^0,w,c
 13581  01619C  6E39               	movwf	(btemp+7)^0,c
 13582  01619E  5036               	movf	(btemp+4)^0,w,c
 13583  0161A0  1037               	iorwf	(btemp+5)^0,w,c
 13584  0161A2  1038               	iorwf	(btemp+6)^0,w,c
 13585  0161A4  1039               	iorwf	(btemp+7)^0,w,c
 13586  0161A6  A4D8               	btfss	status,2,c
 13587  0161A8  D002               	goto	l6543
 13588  0161AA  0E02               	movlw	2
 13589  0161AC  D02E               	goto	L12
 13590  0161AE                     l6543:
 13591  0161AE  0E03               	movlw	3
 13592  0161B0  D02C               	goto	L12
 13593  0161B2                     l6547:
 13594                           
 13595                           ;stkvar	_e @ sp[(-6)+4]
 13596  0161B2  0EFE               	movlw	-2
 13597  0161B4  28E3               	incf	plusw1,w,c
 13598  0161B6  E128               	bnz	l6553
 13599  0161B8  0EFF               	movlw	-1
 13600  0161BA  50E3               	movf	plusw1,w,c
 13601  0161BC  A4D8               	btfss	status,2,c
 13602  0161BE  D024               	goto	l6553
 13603                           
 13604                           ;stkvar	_u @ sp[(-6)+0]
 13605  0161C0  0EFA               	movlw	-6
 13606  0161C2  006F FF8C  F03A    	movff	plusw1,btemp+8
 13607  0161C8  0EFB               	movlw	-5
 13608  0161CA  006F FF8C  F03B    	movff	plusw1,btemp+9
 13609  0161D0  0EFC               	movlw	-4
 13610  0161D2  006F FF8C  F03C    	movff	plusw1,btemp+10
 13611  0161D8  0EFD               	movlw	-3
 13612  0161DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 13613  0161E0  0E09               	movlw	9
 13614  0161E2                     u5125:
 13615  0161E2  90D8               	bcf	status,0,c
 13616  0161E4  363A               	rlcf	(btemp+8)^0,f,c
 13617  0161E6  363B               	rlcf	(btemp+9)^0,f,c
 13618  0161E8  363C               	rlcf	(btemp+10)^0,f,c
 13619  0161EA  363D               	rlcf	(btemp+11)^0,f,c
 13620  0161EC  2EE8               	decfsz	wreg,f,c
 13621  0161EE  D7F9               	goto	u5125
 13622  0161F0  503A               	movf	(btemp+8)^0,w,c
 13623  0161F2  103B               	iorwf	(btemp+9)^0,w,c
 13624  0161F4  103C               	iorwf	(btemp+10)^0,w,c
 13625  0161F6  103D               	iorwf	(btemp+11)^0,w,c
 13626  0161F8  A4D8               	btfss	status,2,c
 13627  0161FA  D002               	goto	u5130
 13628  0161FC  0E01               	movlw	1
 13629  0161FE  D001               	goto	u5140
 13630  016200                     u5130:
 13631  016200  0E00               	movlw	0
 13632  016202                     u5140:
 13633  016202  6E32               	movwf	btemp^0,c
 13634  016204  6A33               	clrf	(btemp+1)^0,c
 13635  016206  D004               	goto	l2759
 13636  016208                     l6553:
 13637  016208  0E04               	movlw	4
 13638  01620A                     L12:
 13639  01620A  6E32               	movwf	btemp^0,c
 13640  01620C  0E00               	movlw	0
 13641  01620E  6E33               	movwf	(btemp+1)^0,c
 13642  016210                     l2759:
 13643                           
 13644                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13645  016210  0EF6               	movlw	246
 13646  016212  26E1               	addwf	fsr1l,f,c
 13647  016214  0EFF               	movlw	255
 13648  016216  22E2               	addwfc	fsr1h,f,c
 13649  016218  0012               	return		;funcret
 13650  01621A                     __end_of___fpclassifyf:
 13651                           	opt callstack 0
 13652                           
 13653 ;; *************** function ___fltol *****************
 13654 ;; Defined at:
 13655 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13656 ;; Parameters:    Size  Location     Type
 13657 ;;  f1              4  [STACK] int 
 13658 ;; Auto vars:     Size  Location     Type
 13659 ;;  exp1            1  [STACK] unsigned char 
 13660 ;;  sign1           1  [STACK] unsigned char 
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  4  [STACK] long 
 13663 ;; Registers used:
 13664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13665 ;; Tracked objects:
 13666 ;;		On entry : 0/5
 13667 ;;		On exit  : 0/0
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13674 ;;Total ram usage:        0 bytes
 13675 ;; Hardware stack levels used:    1
 13676 ;; Hardware stack levels required when called:    6
 13677 ;; This function calls:
 13678 ;;		Nothing
 13679 ;; This function is called by:
 13680 ;;		_efgtoa
 13681 ;; This function uses a reentrant model
 13682 ;;
 13683                           
 13684                           	psect	text52
 13685  01621A                     __ptext52:
 13686                           	opt callstack 0
 13687  01621A                     ___fltol:
 13688                           	opt callstack 0
 13689                           
 13690                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13691  01621A  52E6               	movf	postinc1,f,c
 13692  01621C  52E6               	movf	postinc1,f,c
 13693                           
 13694                           ;stkvar	_f1 @ sp[(-2)+-4]
 13695                           
 13696                           ;incstack = 0
 13697  01621E  0EFA               	movlw	-6
 13698  016220  006F FF8C  F03A    	movff	plusw1,btemp+8
 13699  016226  0EFB               	movlw	-5
 13700  016228  006F FF8C  F03B    	movff	plusw1,btemp+9
 13701  01622E  0EFC               	movlw	-4
 13702  016230  006F FF8C  F03C    	movff	plusw1,btemp+10
 13703  016236  0EFD               	movlw	-3
 13704  016238  006F FF8C  F03D    	movff	plusw1,btemp+11
 13705  01623E  0E18               	movlw	24
 13706  016240  D005               	goto	u6290
 13707  016242                     u6295:
 13708  016242  90D8               	bcf	status,0,c
 13709  016244  323D               	rrcf	(btemp+11)^0,f,c
 13710  016246  323C               	rrcf	(btemp+10)^0,f,c
 13711  016248  323B               	rrcf	(btemp+9)^0,f,c
 13712  01624A  323A               	rrcf	(btemp+8)^0,f,c
 13713  01624C                     u6290:
 13714  01624C  2EE8               	decfsz	wreg,f,c
 13715  01624E  D7F9               	goto	u6295
 13716                           
 13717                           ;stkvar	_exp1 @ sp[(-2)+0]
 13718  016250  0EFE               	movlw	-2
 13719  016252  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13720  016258  0EFE               	movlw	-2
 13721  01625A  50E3               	movf	plusw1,w,c
 13722  01625C  A4D8               	btfss	status,2,c
 13723  01625E  D006               	goto	l7173
 13724  016260                     u6300:
 13725  016260  0E00               	movlw	0
 13726  016262  6E32               	movwf	btemp^0,c
 13727  016264  6A33               	clrf	(btemp+1)^0,c
 13728  016266  6A34               	clrf	(btemp+2)^0,c
 13729  016268  6A35               	clrf	(btemp+3)^0,c
 13730  01626A  D08B               	goto	l2375
 13731  01626C                     l7173:
 13732                           
 13733                           ;stkvar	_f1 @ sp[(-2)+-4]
 13734  01626C  0EFA               	movlw	-6
 13735  01626E  006F FF8C  F03A    	movff	plusw1,btemp+8
 13736  016274  0EFB               	movlw	-5
 13737  016276  006F FF8C  F03B    	movff	plusw1,btemp+9
 13738  01627C  0EFC               	movlw	-4
 13739  01627E  006F FF8C  F03C    	movff	plusw1,btemp+10
 13740  016284  0EFD               	movlw	-3
 13741  016286  006F FF8C  F03D    	movff	plusw1,btemp+11
 13742  01628C  0E20               	movlw	32
 13743  01628E  D005               	goto	u6310
 13744  016290                     u6315:
 13745  016290  90D8               	bcf	status,0,c
 13746  016292  323D               	rrcf	(btemp+11)^0,f,c
 13747  016294  323C               	rrcf	(btemp+10)^0,f,c
 13748  016296  323B               	rrcf	(btemp+9)^0,f,c
 13749  016298  323A               	rrcf	(btemp+8)^0,f,c
 13750  01629A                     u6310:
 13751  01629A  2EE8               	decfsz	wreg,f,c
 13752  01629C  D7F9               	goto	u6315
 13753                           
 13754                           ;stkvar	_sign1 @ sp[(-2)+1]
 13755  01629E  0EFF               	movlw	-1
 13756  0162A0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13757                           
 13758                           ;stkvar	_f1 @ sp[(-2)+-4]
 13759  0162A6  0EFC               	movlw	-4
 13760  0162A8  8EE3               	bsf	plusw1,7,c
 13761                           
 13762                           ;stkvar	_f1 @ sp[(-2)+-4]
 13763  0162AA  50E1               	movf	fsr1l,w,c
 13764  0162AC  0FFA               	addlw	-6
 13765  0162AE  6ED9               	movwf	fsr2l,c
 13766  0162B0  50E2               	movf	fsr1h,w,c
 13767  0162B2  6EDA               	movwf	fsr2h,c
 13768  0162B4  0EFF               	movlw	255
 13769  0162B6  22DA               	addwfc	fsr2h,f,c
 13770  0162B8  0EFF               	movlw	255
 13771  0162BA  16DE               	andwf	postinc2,f,c
 13772  0162BC  0EFF               	movlw	255
 13773  0162BE  16DE               	andwf	postinc2,f,c
 13774  0162C0  0EFF               	movlw	255
 13775  0162C2  16DE               	andwf	postinc2,f,c
 13776  0162C4  0E00               	movlw	0
 13777  0162C6  16DE               	andwf	postinc2,f,c
 13778                           
 13779                           ;stkvar	_exp1 @ sp[(-2)+0]
 13780  0162C8  0EFE               	movlw	-2
 13781  0162CA  006F FF8C  F032    	movff	plusw1,btemp
 13782  0162D0  0E96               	movlw	150
 13783  0162D2  5E32               	subwf	btemp^0,f,c
 13784  0162D4  0EFE               	movlw	-2
 13785  0162D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 13786                           
 13787                           ;stkvar	_exp1 @ sp[(-2)+0]
 13788  0162DC  0EFE               	movlw	-2
 13789  0162DE  AEE3               	btfss	plusw1,7,c
 13790  0162E0  D014               	goto	l7191
 13791                           
 13792                           ;stkvar	_exp1 @ sp[(-2)+0]
 13793  0162E2  0EFE               	movlw	-2
 13794  0162E4  50E3               	movf	plusw1,w,c
 13795  0162E6  0A80               	xorlw	128
 13796  0162E8  0F97               	addlw	151
 13797  0162EA  A0D8               	btfss	status,0,c
 13798  0162EC  D7B9               	goto	u6300
 13799  0162EE                     l7189:
 13800                           
 13801                           ;stkvar	_f1 @ sp[(-2)+-4]
 13802  0162EE  90D8               	bcf	status,0,c
 13803  0162F0  0EFD               	movlw	-3
 13804  0162F2  32E3               	rrcf	plusw1,f,c
 13805  0162F4  0EFC               	movlw	-4
 13806  0162F6  32E3               	rrcf	plusw1,f,c
 13807  0162F8  0EFB               	movlw	-5
 13808  0162FA  32E3               	rrcf	plusw1,f,c
 13809  0162FC  0EFA               	movlw	-6
 13810  0162FE  32E3               	rrcf	plusw1,f,c
 13811                           
 13812                           ;stkvar	_exp1 @ sp[(-2)+0]
 13813  016300  0EFE               	movlw	-2
 13814  016302  2AE3               	incf	plusw1,f,c
 13815  016304  B4D8               	btfsc	status,2,c
 13816  016306  D018               	goto	u6360
 13817  016308  D7F2               	goto	l7189
 13818  01630A                     l7191:
 13819                           
 13820                           ;stkvar	_exp1 @ sp[(-2)+0]
 13821  01630A  0EFE               	movlw	-2
 13822  01630C  006F FF8C  F032    	movff	plusw1,btemp
 13823  016312  0E1F               	movlw	31
 13824  016314  6432               	cpfsgt	btemp^0,c
 13825  016316  D00C               	goto	l7199
 13826  016318  D7A3               	goto	u6300
 13827  01631A                     l7197:
 13828                           
 13829                           ;stkvar	_f1 @ sp[(-2)+-4]
 13830  01631A  90D8               	bcf	status,0,c
 13831  01631C  0EFA               	movlw	-6
 13832  01631E  36E3               	rlcf	plusw1,f,c
 13833  016320  0EFB               	movlw	-5
 13834  016322  36E3               	rlcf	plusw1,f,c
 13835  016324  0EFC               	movlw	-4
 13836  016326  36E3               	rlcf	plusw1,f,c
 13837  016328  0EFD               	movlw	-3
 13838  01632A  36E3               	rlcf	plusw1,f,c
 13839                           
 13840                           ;stkvar	_exp1 @ sp[(-2)+0]
 13841  01632C  0EFE               	movlw	-2
 13842  01632E  06E3               	decf	plusw1,f,c
 13843  016330                     l7199:
 13844                           
 13845                           ;stkvar	_exp1 @ sp[(-2)+0]
 13846  016330  0EFE               	movlw	-2
 13847  016332  50E3               	movf	plusw1,w,c
 13848  016334  A4D8               	btfss	status,2,c
 13849  016336  D7F1               	goto	l7197
 13850  016338                     u6360:
 13851                           
 13852                           ;stkvar	_sign1 @ sp[(-2)+1]
 13853  016338  0EFF               	movlw	-1
 13854  01633A  50E3               	movf	plusw1,w,c
 13855  01633C  B4D8               	btfsc	status,2,c
 13856  01633E  D011               	goto	u6380
 13857                           
 13858                           ;stkvar	_f1 @ sp[(-2)+-4]
 13859                           ;stkvar	_f1 @ sp[(-2)+-4]
 13860  016340  0EFA               	movlw	-6
 13861  016342  6CE3               	negf	plusw1,c
 13862  016344  0EFB               	movlw	-5
 13863  016346  1EE3               	comf	plusw1,f,c
 13864  016348  0EFC               	movlw	-4
 13865  01634A  1EE3               	comf	plusw1,f,c
 13866  01634C  0EFD               	movlw	-3
 13867  01634E  1EE3               	comf	plusw1,f,c
 13868  016350  E308               	bnc	u6380
 13869  016352  0EFB               	movlw	-5
 13870  016354  2AE3               	incf	plusw1,f,c
 13871  016356  E305               	bnc	u6380
 13872  016358  0EFC               	movlw	-4
 13873  01635A  2AE3               	incf	plusw1,f,c
 13874  01635C  E302               	bnc	u6380
 13875  01635E  0EFD               	movlw	-3
 13876  016360  2AE3               	incf	plusw1,f,c
 13877  016362                     u6380:
 13878                           
 13879                           ;stkvar	_f1 @ sp[(-2)+-4]
 13880  016362  0EFA               	movlw	-6
 13881  016364  006F FF8C  F032    	movff	plusw1,btemp
 13882  01636A  0EFB               	movlw	-5
 13883  01636C  006F FF8C  F033    	movff	plusw1,btemp+1
 13884  016372  0EFC               	movlw	-4
 13885  016374  006F FF8C  F034    	movff	plusw1,btemp+2
 13886  01637A  0EFD               	movlw	-3
 13887  01637C  006F FF8C  F035    	movff	plusw1,btemp+3
 13888  016382                     l2375:
 13889                           
 13890                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13891  016382  0EFA               	movlw	250
 13892  016384  26E1               	addwf	fsr1l,f,c
 13893  016386  0EFF               	movlw	255
 13894  016388  22E2               	addwfc	fsr1h,f,c
 13895  01638A  0012               	return		;funcret
 13896  01638C                     __end_of___fltol:
 13897                           	opt callstack 0
 13898                           
 13899 ;; *************** function ___flneg *****************
 13900 ;; Defined at:
 13901 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 13902 ;; Parameters:    Size  Location     Type
 13903 ;;  f1              4  [STACK] long 
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;		None
 13906 ;; Return value:  Size  Location     Type
 13907 ;;                  4  [STACK] long 
 13908 ;; Registers used:
 13909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 13910 ;; Tracked objects:
 13911 ;;		On entry : 0/5
 13912 ;;		On exit  : 0/0
 13913 ;;		Unchanged: 0/0
 13914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13919 ;;Total ram usage:        0 bytes
 13920 ;; Hardware stack levels used:    1
 13921 ;; Hardware stack levels required when called:    6
 13922 ;; This function calls:
 13923 ;;		Nothing
 13924 ;; This function is called by:
 13925 ;;		_efgtoa
 13926 ;; This function uses a reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text53
 13930  017FD0                     __ptext53:
 13931                           	opt callstack 0
 13932  017FD0                     ___flneg:
 13933                           	opt callstack 17
 13934                           
 13935                           ;stkvar	_f1 @ sp[(0)+-4]
 13936                           
 13937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13938                           ;incstack = 0
 13939  017FD0  0EFC               	movlw	-4
 13940  017FD2  50E3               	movf	plusw1,w,c
 13941  017FD4  E10A               	bnz	u6280
 13942  017FD6  0EFD               	movlw	-3
 13943  017FD8  50E3               	movf	plusw1,w,c
 13944  017FDA  E107               	bnz	u6280
 13945  017FDC  0EFE               	movlw	-2
 13946  017FDE  50E3               	movf	plusw1,w,c
 13947  017FE0  E104               	bnz	u6280
 13948  017FE2  0EFF               	movlw	-1
 13949  017FE4  50E3               	movf	plusw1,w,c
 13950  017FE6  B4D8               	btfsc	status,2,c
 13951  017FE8  D002               	goto	l7163
 13952  017FEA                     u6280:
 13953                           
 13954                           ;stkvar	_f1 @ sp[(0)+-4]
 13955  017FEA  0EFF               	movlw	-1
 13956  017FEC  7EE3               	btg	plusw1,7,c
 13957  017FEE                     l7163:
 13958                           
 13959                           ;stkvar	_f1 @ sp[(0)+-4]
 13960  017FEE  0EFC               	movlw	-4
 13961  017FF0  006F FF8C  F032    	movff	plusw1,btemp
 13962  017FF6  0EFD               	movlw	-3
 13963  017FF8  006F FF8C  F033    	movff	plusw1,btemp+1
 13964  017FFE  0EFE               	movlw	-2
 13965  018000  006F FF8C  F034    	movff	plusw1,btemp+2
 13966  018006  0EFF               	movlw	-1
 13967  018008  006F FF8C  F035    	movff	plusw1,btemp+3
 13968                           
 13969                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13970  01800E  52E5               	movf	postdec1,f,c
 13971  018010  52E5               	movf	postdec1,f,c
 13972  018012  52E5               	movf	postdec1,f,c
 13973  018014  52E5               	movf	postdec1,f,c
 13974  018016  0012               	return		;funcret
 13975  018018                     __end_of___flneg:
 13976                           	opt callstack 0
 13977                           
 13978 ;; *************** function ___flge *****************
 13979 ;; Defined at:
 13980 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;  ff1             4  [STACK] long 
 13983 ;;  ff2             4  [STACK] long 
 13984 ;; Auto vars:     Size  Location     Type
 13985 ;;		None
 13986 ;; Return value:  Size  Location     Type
 13987 ;;		None               void
 13988 ;; Registers used:
 13989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13990 ;; Tracked objects:
 13991 ;;		On entry : 0/5
 13992 ;;		On exit  : 0/0
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13999 ;;Total ram usage:        0 bytes
 14000 ;; Hardware stack levels used:    1
 14001 ;; Hardware stack levels required when called:    6
 14002 ;; This function calls:
 14003 ;;		Nothing
 14004 ;; This function is called by:
 14005 ;;		_efgtoa
 14006 ;; This function uses a reentrant model
 14007 ;;
 14008                           
 14009                           	psect	text54
 14010  01638C                     __ptext54:
 14011                           	opt callstack 0
 14012  01638C                     ___flge:
 14013                           	opt callstack 17
 14014                           
 14015                           ;stkvar	_ff1 @ sp[(0)+-4]
 14016                           
 14017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14018                           ;incstack = 0
 14019  01638C  50E1               	movf	fsr1l,w,c
 14020  01638E  0FFC               	addlw	-4
 14021  016390  6ED9               	movwf	fsr2l,c
 14022  016392  50E2               	movf	fsr1h,w,c
 14023  016394  6EDA               	movwf	fsr2h,c
 14024  016396  0EFF               	movlw	255
 14025  016398  22DA               	addwfc	fsr2h,f,c
 14026  01639A  0E00               	movlw	0
 14027  01639C  14DE               	andwf	postinc2,w,c
 14028  01639E  6E3A               	movwf	(btemp+8)^0,c
 14029  0163A0  0E00               	movlw	0
 14030  0163A2  14DE               	andwf	postinc2,w,c
 14031  0163A4  6E3B               	movwf	(btemp+9)^0,c
 14032  0163A6  0E80               	movlw	128
 14033  0163A8  14DE               	andwf	postinc2,w,c
 14034  0163AA  6E3C               	movwf	(btemp+10)^0,c
 14035  0163AC  0E7F               	movlw	127
 14036  0163AE  14DE               	andwf	postinc2,w,c
 14037  0163B0  6E3D               	movwf	(btemp+11)^0,c
 14038  0163B2  503A               	movf	(btemp+8)^0,w,c
 14039  0163B4  103B               	iorwf	(btemp+9)^0,w,c
 14040  0163B6  103C               	iorwf	(btemp+10)^0,w,c
 14041  0163B8  103D               	iorwf	(btemp+11)^0,w,c
 14042  0163BA  A4D8               	btfss	status,2,c
 14043  0163BC  D008               	goto	l7137
 14044                           
 14045                           ;stkvar	_ff1 @ sp[(0)+-4]
 14046  0163BE  0EFC               	movlw	-4
 14047  0163C0  6AE3               	clrf	plusw1,c
 14048  0163C2  0EFD               	movlw	-3
 14049  0163C4  6AE3               	clrf	plusw1,c
 14050  0163C6  0EFE               	movlw	-2
 14051  0163C8  6AE3               	clrf	plusw1,c
 14052  0163CA  0EFF               	movlw	-1
 14053  0163CC  6AE3               	clrf	plusw1,c
 14054  0163CE                     l7137:
 14055                           
 14056                           ;stkvar	_ff2 @ sp[(0)+-8]
 14057  0163CE  50E1               	movf	fsr1l,w,c
 14058  0163D0  0FF8               	addlw	-8
 14059  0163D2  6ED9               	movwf	fsr2l,c
 14060  0163D4  50E2               	movf	fsr1h,w,c
 14061  0163D6  6EDA               	movwf	fsr2h,c
 14062  0163D8  0EFF               	movlw	255
 14063  0163DA  22DA               	addwfc	fsr2h,f,c
 14064  0163DC  0E00               	movlw	0
 14065  0163DE  14DE               	andwf	postinc2,w,c
 14066  0163E0  6E3A               	movwf	(btemp+8)^0,c
 14067  0163E2  0E00               	movlw	0
 14068  0163E4  14DE               	andwf	postinc2,w,c
 14069  0163E6  6E3B               	movwf	(btemp+9)^0,c
 14070  0163E8  0E80               	movlw	128
 14071  0163EA  14DE               	andwf	postinc2,w,c
 14072  0163EC  6E3C               	movwf	(btemp+10)^0,c
 14073  0163EE  0E7F               	movlw	127
 14074  0163F0  14DE               	andwf	postinc2,w,c
 14075  0163F2  6E3D               	movwf	(btemp+11)^0,c
 14076  0163F4  503A               	movf	(btemp+8)^0,w,c
 14077  0163F6  103B               	iorwf	(btemp+9)^0,w,c
 14078  0163F8  103C               	iorwf	(btemp+10)^0,w,c
 14079  0163FA  103D               	iorwf	(btemp+11)^0,w,c
 14080  0163FC  A4D8               	btfss	status,2,c
 14081  0163FE  D008               	goto	l2341
 14082                           
 14083                           ;stkvar	_ff2 @ sp[(0)+-8]
 14084  016400  0EF8               	movlw	-8
 14085  016402  6AE3               	clrf	plusw1,c
 14086  016404  0EF9               	movlw	-7
 14087  016406  6AE3               	clrf	plusw1,c
 14088  016408  0EFA               	movlw	-6
 14089  01640A  6AE3               	clrf	plusw1,c
 14090  01640C  0EFB               	movlw	-5
 14091  01640E  6AE3               	clrf	plusw1,c
 14092  016410                     l2341:
 14093                           
 14094                           ;stkvar	_ff1 @ sp[(0)+-4]
 14095  016410  0EFF               	movlw	-1
 14096  016412  AEE3               	btfss	plusw1,7,c
 14097  016414  D024               	goto	l7143
 14098                           
 14099                           ;stkvar	_ff1 @ sp[(0)+-4]
 14100  016416  0E00               	movlw	0
 14101  016418  6E3A               	movwf	(btemp+8)^0,c
 14102  01641A  0E00               	movlw	0
 14103  01641C  6E3B               	movwf	(btemp+9)^0,c
 14104  01641E  0E00               	movlw	0
 14105  016420  6E3C               	movwf	(btemp+10)^0,c
 14106  016422  0E80               	movlw	128
 14107  016424  6E3D               	movwf	(btemp+11)^0,c
 14108  016426  0EFC               	movlw	-4
 14109  016428  50E3               	movf	plusw1,w,c
 14110  01642A  5E3A               	subwf	(btemp+8)^0,f,c
 14111  01642C  0EFD               	movlw	-3
 14112  01642E  50E3               	movf	plusw1,w,c
 14113  016430  5A3B               	subwfb	(btemp+9)^0,f,c
 14114  016432  0EFE               	movlw	-2
 14115  016434  50E3               	movf	plusw1,w,c
 14116  016436  5A3C               	subwfb	(btemp+10)^0,f,c
 14117  016438  0EFF               	movlw	-1
 14118  01643A  50E3               	movf	plusw1,w,c
 14119  01643C  5A3D               	subwfb	(btemp+11)^0,f,c
 14120                           
 14121                           ;stkvar	_ff1 @ sp[(0)+-4]
 14122  01643E  0EFC               	movlw	-4
 14123  016440  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14124  016446  0EFD               	movlw	-3
 14125  016448  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14126  01644E  0EFE               	movlw	-2
 14127  016450  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14128  016456  0EFF               	movlw	-1
 14129  016458  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14130  01645E                     l7143:
 14131                           
 14132                           ;stkvar	_ff2 @ sp[(0)+-8]
 14133  01645E  0EFB               	movlw	-5
 14134  016460  AEE3               	btfss	plusw1,7,c
 14135  016462  D024               	goto	l7147
 14136                           
 14137                           ;stkvar	_ff2 @ sp[(0)+-8]
 14138  016464  0E00               	movlw	0
 14139  016466  6E3A               	movwf	(btemp+8)^0,c
 14140  016468  0E00               	movlw	0
 14141  01646A  6E3B               	movwf	(btemp+9)^0,c
 14142  01646C  0E00               	movlw	0
 14143  01646E  6E3C               	movwf	(btemp+10)^0,c
 14144  016470  0E80               	movlw	128
 14145  016472  6E3D               	movwf	(btemp+11)^0,c
 14146  016474  0EF8               	movlw	-8
 14147  016476  50E3               	movf	plusw1,w,c
 14148  016478  5E3A               	subwf	(btemp+8)^0,f,c
 14149  01647A  0EF9               	movlw	-7
 14150  01647C  50E3               	movf	plusw1,w,c
 14151  01647E  5A3B               	subwfb	(btemp+9)^0,f,c
 14152  016480  0EFA               	movlw	-6
 14153  016482  50E3               	movf	plusw1,w,c
 14154  016484  5A3C               	subwfb	(btemp+10)^0,f,c
 14155  016486  0EFB               	movlw	-5
 14156  016488  50E3               	movf	plusw1,w,c
 14157  01648A  5A3D               	subwfb	(btemp+11)^0,f,c
 14158                           
 14159                           ;stkvar	_ff2 @ sp[(0)+-8]
 14160  01648C  0EF8               	movlw	-8
 14161  01648E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14162  016494  0EF9               	movlw	-7
 14163  016496  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14164  01649C  0EFA               	movlw	-6
 14165  01649E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14166  0164A4  0EFB               	movlw	-5
 14167  0164A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14168  0164AC                     l7147:
 14169                           
 14170                           ;stkvar	_ff1 @ sp[(0)+-4]
 14171  0164AC  0EFF               	movlw	-1
 14172  0164AE  7EE3               	btg	plusw1,7,c
 14173                           
 14174                           ;stkvar	_ff2 @ sp[(0)+-8]
 14175  0164B0  0EFB               	movlw	-5
 14176  0164B2  7EE3               	btg	plusw1,7,c
 14177                           
 14178                           ;stkvar	_ff2 @ sp[(0)+-8]
 14179                           ;stkvar	_ff1 @ sp[(0)+-4]
 14180  0164B4  50E1               	movf	fsr1l,w,c
 14181  0164B6  0FFC               	addlw	-4
 14182  0164B8  6ED9               	movwf	fsr2l,c
 14183  0164BA  50E2               	movf	fsr1h,w,c
 14184  0164BC  6EDA               	movwf	fsr2h,c
 14185  0164BE  0EFF               	movlw	255
 14186  0164C0  22DA               	addwfc	fsr2h,f,c
 14187  0164C2  0EF8               	movlw	-8
 14188  0164C4  50E3               	movf	plusw1,w,c
 14189  0164C6  5CDE               	subwf	postinc2,w,c
 14190  0164C8  0EF9               	movlw	-7
 14191  0164CA  50E3               	movf	plusw1,w,c
 14192  0164CC  58DE               	subwfb	postinc2,w,c
 14193  0164CE  0EFA               	movlw	-6
 14194  0164D0  50E3               	movf	plusw1,w,c
 14195  0164D2  58DE               	subwfb	postinc2,w,c
 14196  0164D4  0EFB               	movlw	-5
 14197  0164D6  50E3               	movf	plusw1,w,c
 14198  0164D8  58DE               	subwfb	postinc2,w,c
 14199  0164DA  B0D8               	btfsc	status,0,c
 14200  0164DC  D002               	goto	l7155
 14201  0164DE  9032               	bcf	btemp& (0+255),0,c
 14202  0164E0  D001               	goto	l2348
 14203  0164E2                     l7155:
 14204  0164E2  8032               	bsf	btemp& (0+255),0,c
 14205  0164E4                     l2348:
 14206                           
 14207                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14208  0164E4  0EF8               	movlw	248
 14209  0164E6  26E1               	addwf	fsr1l,f,c
 14210  0164E8  0EFF               	movlw	255
 14211  0164EA  22E2               	addwfc	fsr1h,f,c
 14212  0164EC  0012               	return		;funcret
 14213  0164EE                     __end_of___flge:
 14214                           	opt callstack 0
 14215                           
 14216 ;; *************** function ___fleq *****************
 14217 ;; Defined at:
 14218 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 14219 ;; Parameters:    Size  Location     Type
 14220 ;;  ff1             4  [STACK] long 
 14221 ;;  ff2             4  [STACK] long 
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;		None
 14224 ;; Return value:  Size  Location     Type
 14225 ;;		None               void
 14226 ;; Registers used:
 14227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/5
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14237 ;;Total ram usage:        0 bytes
 14238 ;; Hardware stack levels used:    1
 14239 ;; Hardware stack levels required when called:    6
 14240 ;; This function calls:
 14241 ;;		Nothing
 14242 ;; This function is called by:
 14243 ;;		_efgtoa
 14244 ;; This function uses a reentrant model
 14245 ;;
 14246                           
 14247                           	psect	text55
 14248  0171A0                     __ptext55:
 14249                           	opt callstack 0
 14250  0171A0                     ___fleq:
 14251                           	opt callstack 17
 14252                           
 14253                           ;stkvar	_ff1 @ sp[(0)+-4]
 14254                           
 14255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14256                           ;incstack = 0
 14257  0171A0  50E1               	movf	fsr1l,w,c
 14258  0171A2  0FFC               	addlw	-4
 14259  0171A4  6ED9               	movwf	fsr2l,c
 14260  0171A6  50E2               	movf	fsr1h,w,c
 14261  0171A8  6EDA               	movwf	fsr2h,c
 14262  0171AA  0EFF               	movlw	255
 14263  0171AC  22DA               	addwfc	fsr2h,f,c
 14264  0171AE  0E00               	movlw	0
 14265  0171B0  14DE               	andwf	postinc2,w,c
 14266  0171B2  6E3A               	movwf	(btemp+8)^0,c
 14267  0171B4  0E00               	movlw	0
 14268  0171B6  14DE               	andwf	postinc2,w,c
 14269  0171B8  6E3B               	movwf	(btemp+9)^0,c
 14270  0171BA  0E80               	movlw	128
 14271  0171BC  14DE               	andwf	postinc2,w,c
 14272  0171BE  6E3C               	movwf	(btemp+10)^0,c
 14273  0171C0  0E7F               	movlw	127
 14274  0171C2  14DE               	andwf	postinc2,w,c
 14275  0171C4  6E3D               	movwf	(btemp+11)^0,c
 14276  0171C6  503A               	movf	(btemp+8)^0,w,c
 14277  0171C8  103B               	iorwf	(btemp+9)^0,w,c
 14278  0171CA  103C               	iorwf	(btemp+10)^0,w,c
 14279  0171CC  103D               	iorwf	(btemp+11)^0,w,c
 14280  0171CE  A4D8               	btfss	status,2,c
 14281  0171D0  D008               	goto	l7121
 14282                           
 14283                           ;stkvar	_ff1 @ sp[(0)+-4]
 14284  0171D2  0EFC               	movlw	-4
 14285  0171D4  6AE3               	clrf	plusw1,c
 14286  0171D6  0EFD               	movlw	-3
 14287  0171D8  6AE3               	clrf	plusw1,c
 14288  0171DA  0EFE               	movlw	-2
 14289  0171DC  6AE3               	clrf	plusw1,c
 14290  0171DE  0EFF               	movlw	-1
 14291  0171E0  6AE3               	clrf	plusw1,c
 14292  0171E2                     l7121:
 14293                           
 14294                           ;stkvar	_ff2 @ sp[(0)+-8]
 14295  0171E2  50E1               	movf	fsr1l,w,c
 14296  0171E4  0FF8               	addlw	-8
 14297  0171E6  6ED9               	movwf	fsr2l,c
 14298  0171E8  50E2               	movf	fsr1h,w,c
 14299  0171EA  6EDA               	movwf	fsr2h,c
 14300  0171EC  0EFF               	movlw	255
 14301  0171EE  22DA               	addwfc	fsr2h,f,c
 14302  0171F0  0E00               	movlw	0
 14303  0171F2  14DE               	andwf	postinc2,w,c
 14304  0171F4  6E3A               	movwf	(btemp+8)^0,c
 14305  0171F6  0E00               	movlw	0
 14306  0171F8  14DE               	andwf	postinc2,w,c
 14307  0171FA  6E3B               	movwf	(btemp+9)^0,c
 14308  0171FC  0E80               	movlw	128
 14309  0171FE  14DE               	andwf	postinc2,w,c
 14310  017200  6E3C               	movwf	(btemp+10)^0,c
 14311  017202  0E7F               	movlw	127
 14312  017204  14DE               	andwf	postinc2,w,c
 14313  017206  6E3D               	movwf	(btemp+11)^0,c
 14314  017208  503A               	movf	(btemp+8)^0,w,c
 14315  01720A  103B               	iorwf	(btemp+9)^0,w,c
 14316  01720C  103C               	iorwf	(btemp+10)^0,w,c
 14317  01720E  103D               	iorwf	(btemp+11)^0,w,c
 14318  017210  A4D8               	btfss	status,2,c
 14319  017212  D008               	goto	l7125
 14320                           
 14321                           ;stkvar	_ff2 @ sp[(0)+-8]
 14322  017214  0EF8               	movlw	-8
 14323  017216  6AE3               	clrf	plusw1,c
 14324  017218  0EF9               	movlw	-7
 14325  01721A  6AE3               	clrf	plusw1,c
 14326  01721C  0EFA               	movlw	-6
 14327  01721E  6AE3               	clrf	plusw1,c
 14328  017220  0EFB               	movlw	-5
 14329  017222  6AE3               	clrf	plusw1,c
 14330  017224                     l7125:
 14331                           
 14332                           ;stkvar	_ff2 @ sp[(0)+-8]
 14333                           ;stkvar	_ff1 @ sp[(0)+-4]
 14334  017224  50E1               	movf	fsr1l,w,c
 14335  017226  0FFC               	addlw	-4
 14336  017228  6ED9               	movwf	fsr2l,c
 14337  01722A  50E2               	movf	fsr1h,w,c
 14338  01722C  6EDA               	movwf	fsr2h,c
 14339  01722E  0EFF               	movlw	255
 14340  017230  22DA               	addwfc	fsr2h,f,c
 14341  017232  0EF8               	movlw	-8
 14342  017234  50E3               	movf	plusw1,w,c
 14343  017236  18DE               	xorwf	postinc2,w,c
 14344  017238  E10D               	bnz	u6220
 14345  01723A  0EF9               	movlw	-7
 14346  01723C  50E3               	movf	plusw1,w,c
 14347  01723E  18DE               	xorwf	postinc2,w,c
 14348  017240  E109               	bnz	u6220
 14349  017242  0EFA               	movlw	-6
 14350  017244  50E3               	movf	plusw1,w,c
 14351  017246  18DE               	xorwf	postinc2,w,c
 14352  017248  E105               	bnz	u6220
 14353  01724A  0EFB               	movlw	-5
 14354  01724C  50E3               	movf	plusw1,w,c
 14355  01724E  18DE               	xorwf	postinc2,w,c
 14356  017250  B4D8               	btfsc	status,2,c
 14357  017252  D002               	goto	l7129
 14358  017254                     u6220:
 14359  017254  9032               	bcf	btemp& (0+255),0,c
 14360  017256  D001               	goto	l2337
 14361  017258                     l7129:
 14362  017258  8032               	bsf	btemp& (0+255),0,c
 14363  01725A                     l2337:
 14364                           
 14365                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14366  01725A  0EF8               	movlw	248
 14367  01725C  26E1               	addwf	fsr1l,f,c
 14368  01725E  0EFF               	movlw	255
 14369  017260  22E2               	addwfc	fsr1h,f,c
 14370  017262  0012               	return		;funcret
 14371  017264                     __end_of___fleq:
 14372                           	opt callstack 0
 14373                           
 14374 ;; *************** function ___fldiv *****************
 14375 ;; Defined at:
 14376 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;  b               4  [STACK] long 
 14379 ;;  a               4  [STACK] long 
 14380 ;; Auto vars:     Size  Location     Type
 14381 ;;  grs             4  [STACK] unsigned long 
 14382 ;;  rem             4  [STACK] unsigned long 
 14383 ;;  new_exp         2  [STACK] short 
 14384 ;;  aexp            1  [STACK] unsigned char 
 14385 ;;  bexp            1  [STACK] unsigned char 
 14386 ;;  sign            1  [STACK] unsigned char 
 14387 ;; Return value:  Size  Location     Type
 14388 ;;                  4  [STACK] unsigned char 
 14389 ;; Registers used:
 14390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14391 ;; Tracked objects:
 14392 ;;		On entry : 0/39
 14393 ;;		On exit  : 0/0
 14394 ;;		Unchanged: 0/0
 14395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14400 ;;Total ram usage:        0 bytes
 14401 ;; Hardware stack levels used:    1
 14402 ;; Hardware stack levels required when called:    6
 14403 ;; This function calls:
 14404 ;;		Nothing
 14405 ;; This function is called by:
 14406 ;;		_conv_raw_result
 14407 ;;		_efgtoa
 14408 ;; This function uses a reentrant model
 14409 ;;
 14410                           
 14411                           	psect	text56
 14412  013362                     __ptext56:
 14413                           	opt callstack 0
 14414  013362                     ___fldiv:
 14415                           	opt callstack 0
 14416                           
 14417                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14418  013362  0E0D               	movlw	13
 14419  013364  26E1               	addwf	fsr1l,f,c
 14420  013366  0E00               	movlw	0
 14421  013368  22E2               	addwfc	fsr1h,f,c
 14422                           
 14423                           ;stkvar	_b @ sp[(-13)+-4]
 14424                           
 14425                           ;incstack = 0
 14426  01336A  0EF2               	movlw	242
 14427  01336C  24E1               	addwf	fsr1l,w,c
 14428  01336E  6ED9               	movwf	fsr2l,c
 14429  013370  0EFF               	movlw	255
 14430  013372  20E2               	addwfc	fsr1h,w,c
 14431  013374  6EDA               	movwf	fsr2h,c
 14432  013376  50DF               	movf	indf2,w,c
 14433  013378  6E3D               	movwf	(btemp+11)^0,c
 14434  01337A  0E80               	movlw	128
 14435  01337C  163D               	andwf	(btemp+11)^0,f,c
 14436                           
 14437                           ;stkvar	_sign @ sp[(-13)+12]
 14438  01337E  0EFF               	movlw	-1
 14439  013380  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14440                           
 14441                           ;stkvar	_b @ sp[(-13)+-4]
 14442  013386  0EF2               	movlw	242
 14443  013388  24E1               	addwf	fsr1l,w,c
 14444  01338A  6ED9               	movwf	fsr2l,c
 14445  01338C  0EFF               	movlw	255
 14446  01338E  20E2               	addwfc	fsr1h,w,c
 14447  013390  6EDA               	movwf	fsr2h,c
 14448  013392  50DF               	movf	indf2,w,c
 14449  013394  6E3D               	movwf	(btemp+11)^0,c
 14450  013396  90D8               	bcf	status,0,c
 14451  013398  343D               	rlcf	(btemp+11)^0,w,c
 14452  01339A  6E3C               	movwf	(btemp+10)^0,c
 14453                           
 14454                           ;stkvar	_bexp @ sp[(-13)+11]
 14455  01339C  0EFE               	movlw	-2
 14456  01339E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14457                           
 14458                           ;stkvar	_b @ sp[(-13)+-4]
 14459  0133A4  0EF1               	movlw	241
 14460  0133A6  24E1               	addwf	fsr1l,w,c
 14461  0133A8  6ED9               	movwf	fsr2l,c
 14462  0133AA  0EFF               	movlw	255
 14463  0133AC  20E2               	addwfc	fsr1h,w,c
 14464  0133AE  6EDA               	movwf	fsr2h,c
 14465  0133B0  AEDF               	btfss	indf2,7,c
 14466  0133B2  D002               	goto	l6723
 14467                           
 14468                           ;stkvar	_bexp @ sp[(-13)+11]
 14469  0133B4  0EFE               	movlw	-2
 14470  0133B6  80E3               	bsf	plusw1,0,c
 14471  0133B8                     l6723:
 14472                           
 14473                           ;stkvar	_bexp @ sp[(-13)+11]
 14474  0133B8  0EFE               	movlw	-2
 14475  0133BA  50E3               	movf	plusw1,w,c
 14476  0133BC  B4D8               	btfsc	status,2,c
 14477  0133BE  D027               	goto	l6733
 14478                           
 14479                           ;stkvar	_bexp @ sp[(-13)+11]
 14480  0133C0  0EFE               	movlw	-2
 14481  0133C2  28E3               	incf	plusw1,w,c
 14482  0133C4  A4D8               	btfss	status,2,c
 14483  0133C6  D018               	goto	l6729
 14484  0133C8  0E00               	movlw	0
 14485  0133CA  6E3A               	movwf	(btemp+8)^0,c
 14486  0133CC  0E00               	movlw	0
 14487  0133CE  6E3B               	movwf	(btemp+9)^0,c
 14488  0133D0  0E00               	movlw	0
 14489  0133D2  6E3C               	movwf	(btemp+10)^0,c
 14490  0133D4  0E00               	movlw	0
 14491  0133D6  6E3D               	movwf	(btemp+11)^0,c
 14492                           
 14493                           ;stkvar	_b @ sp[(-13)+-4]
 14494  0133D8  0EEF               	movlw	-17
 14495  0133DA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14496  0133E0  0EF0               	movlw	-16
 14497  0133E2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14498  0133E8  0EF1               	movlw	-15
 14499  0133EA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14500  0133F0  0EF2               	movlw	-14
 14501  0133F2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14502  0133F8                     l6729:
 14503                           
 14504                           ;stkvar	_b @ sp[(-13)+-4]
 14505  0133F8  0EF1               	movlw	-15
 14506  0133FA  8EE3               	bsf	plusw1,7,c
 14507                           
 14508                           ;stkvar	_b @ sp[(-13)+-4]
 14509  0133FC  0EF2               	movlw	242
 14510  0133FE  24E1               	addwf	fsr1l,w,c
 14511  013400  6ED9               	movwf	fsr2l,c
 14512  013402  0EFF               	movlw	255
 14513  013404  20E2               	addwfc	fsr1h,w,c
 14514  013406  6EDA               	movwf	fsr2h,c
 14515  013408  0E00               	movlw	0
 14516  01340A  6EDF               	movwf	indf2,c
 14517  01340C  D018               	goto	l6735
 14518  01340E                     l6733:
 14519  01340E  0E00               	movlw	0
 14520  013410  6E3A               	movwf	(btemp+8)^0,c
 14521  013412  0E00               	movlw	0
 14522  013414  6E3B               	movwf	(btemp+9)^0,c
 14523  013416  0E00               	movlw	0
 14524  013418  6E3C               	movwf	(btemp+10)^0,c
 14525  01341A  0E00               	movlw	0
 14526  01341C  6E3D               	movwf	(btemp+11)^0,c
 14527                           
 14528                           ;stkvar	_b @ sp[(-13)+-4]
 14529  01341E  0EEF               	movlw	-17
 14530  013420  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14531  013426  0EF0               	movlw	-16
 14532  013428  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14533  01342E  0EF1               	movlw	-15
 14534  013430  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14535  013436  0EF2               	movlw	-14
 14536  013438  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14537  01343E                     l6735:
 14538                           
 14539                           ;stkvar	_a @ sp[(-13)+-8]
 14540  01343E  0EEE               	movlw	238
 14541  013440  24E1               	addwf	fsr1l,w,c
 14542  013442  6ED9               	movwf	fsr2l,c
 14543  013444  0EFF               	movlw	255
 14544  013446  20E2               	addwfc	fsr1h,w,c
 14545  013448  6EDA               	movwf	fsr2h,c
 14546  01344A  50DF               	movf	indf2,w,c
 14547  01344C  6E3D               	movwf	(btemp+11)^0,c
 14548  01344E  0E80               	movlw	128
 14549  013450  163D               	andwf	(btemp+11)^0,f,c
 14550                           
 14551                           ;stkvar	_sign @ sp[(-13)+12]
 14552  013452  50E1               	movf	fsr1l,w,c
 14553  013454  0FFF               	addlw	-1
 14554  013456  6ED9               	movwf	fsr2l,c
 14555  013458  50E2               	movf	fsr1h,w,c
 14556  01345A  6EDA               	movwf	fsr2h,c
 14557  01345C  0EFF               	movlw	255
 14558  01345E  22DA               	addwfc	fsr2h,f,c
 14559  013460  503D               	movf	(btemp+11)^0,w,c
 14560  013462  1ADF               	xorwf	indf2,f,c
 14561                           
 14562                           ;stkvar	_a @ sp[(-13)+-8]
 14563  013464  0EEE               	movlw	238
 14564  013466  24E1               	addwf	fsr1l,w,c
 14565  013468  6ED9               	movwf	fsr2l,c
 14566  01346A  0EFF               	movlw	255
 14567  01346C  20E2               	addwfc	fsr1h,w,c
 14568  01346E  6EDA               	movwf	fsr2h,c
 14569  013470  50DF               	movf	indf2,w,c
 14570  013472  6E3D               	movwf	(btemp+11)^0,c
 14571  013474  90D8               	bcf	status,0,c
 14572  013476  343D               	rlcf	(btemp+11)^0,w,c
 14573  013478  6E3C               	movwf	(btemp+10)^0,c
 14574                           
 14575                           ;stkvar	_aexp @ sp[(-13)+10]
 14576  01347A  0EFD               	movlw	-3
 14577  01347C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14578                           
 14579                           ;stkvar	_a @ sp[(-13)+-8]
 14580  013482  0EED               	movlw	237
 14581  013484  24E1               	addwf	fsr1l,w,c
 14582  013486  6ED9               	movwf	fsr2l,c
 14583  013488  0EFF               	movlw	255
 14584  01348A  20E2               	addwfc	fsr1h,w,c
 14585  01348C  6EDA               	movwf	fsr2h,c
 14586  01348E  AEDF               	btfss	indf2,7,c
 14587  013490  D002               	goto	l6743
 14588                           
 14589                           ;stkvar	_aexp @ sp[(-13)+10]
 14590  013492  0EFD               	movlw	-3
 14591  013494  80E3               	bsf	plusw1,0,c
 14592  013496                     l6743:
 14593                           
 14594                           ;stkvar	_aexp @ sp[(-13)+10]
 14595  013496  0EFD               	movlw	-3
 14596  013498  50E3               	movf	plusw1,w,c
 14597  01349A  B4D8               	btfsc	status,2,c
 14598  01349C  D027               	goto	l6753
 14599                           
 14600                           ;stkvar	_aexp @ sp[(-13)+10]
 14601  01349E  0EFD               	movlw	-3
 14602  0134A0  28E3               	incf	plusw1,w,c
 14603  0134A2  A4D8               	btfss	status,2,c
 14604  0134A4  D018               	goto	l6749
 14605  0134A6  0E00               	movlw	0
 14606  0134A8  6E3A               	movwf	(btemp+8)^0,c
 14607  0134AA  0E00               	movlw	0
 14608  0134AC  6E3B               	movwf	(btemp+9)^0,c
 14609  0134AE  0E00               	movlw	0
 14610  0134B0  6E3C               	movwf	(btemp+10)^0,c
 14611  0134B2  0E00               	movlw	0
 14612  0134B4  6E3D               	movwf	(btemp+11)^0,c
 14613                           
 14614                           ;stkvar	_a @ sp[(-13)+-8]
 14615  0134B6  0EEB               	movlw	-21
 14616  0134B8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14617  0134BE  0EEC               	movlw	-20
 14618  0134C0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14619  0134C6  0EED               	movlw	-19
 14620  0134C8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14621  0134CE  0EEE               	movlw	-18
 14622  0134D0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14623  0134D6                     l6749:
 14624                           
 14625                           ;stkvar	_a @ sp[(-13)+-8]
 14626  0134D6  0EED               	movlw	-19
 14627  0134D8  8EE3               	bsf	plusw1,7,c
 14628                           
 14629                           ;stkvar	_a @ sp[(-13)+-8]
 14630  0134DA  0EEE               	movlw	238
 14631  0134DC  24E1               	addwf	fsr1l,w,c
 14632  0134DE  6ED9               	movwf	fsr2l,c
 14633  0134E0  0EFF               	movlw	255
 14634  0134E2  20E2               	addwfc	fsr1h,w,c
 14635  0134E4  6EDA               	movwf	fsr2h,c
 14636  0134E6  0E00               	movlw	0
 14637  0134E8  6EDF               	movwf	indf2,c
 14638  0134EA  D018               	goto	l6755
 14639  0134EC                     l6753:
 14640  0134EC  0E00               	movlw	0
 14641  0134EE  6E3A               	movwf	(btemp+8)^0,c
 14642  0134F0  0E00               	movlw	0
 14643  0134F2  6E3B               	movwf	(btemp+9)^0,c
 14644  0134F4  0E00               	movlw	0
 14645  0134F6  6E3C               	movwf	(btemp+10)^0,c
 14646  0134F8  0E00               	movlw	0
 14647  0134FA  6E3D               	movwf	(btemp+11)^0,c
 14648                           
 14649                           ;stkvar	_a @ sp[(-13)+-8]
 14650  0134FC  0EEB               	movlw	-21
 14651  0134FE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14652  013504  0EEC               	movlw	-20
 14653  013506  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14654  01350C  0EED               	movlw	-19
 14655  01350E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14656  013514  0EEE               	movlw	-18
 14657  013516  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14658  01351C                     l6755:
 14659                           
 14660                           ;stkvar	_a @ sp[(-13)+-8]
 14661  01351C  0EEB               	movlw	-21
 14662  01351E  50E3               	movf	plusw1,w,c
 14663  013520  E139               	bnz	l6767
 14664  013522  0EEC               	movlw	-20
 14665  013524  50E3               	movf	plusw1,w,c
 14666  013526  E136               	bnz	l6767
 14667  013528  0EED               	movlw	-19
 14668  01352A  50E3               	movf	plusw1,w,c
 14669  01352C  E133               	bnz	l6767
 14670  01352E  0EEE               	movlw	-18
 14671  013530  50E3               	movf	plusw1,w,c
 14672  013532  A4D8               	btfss	status,2,c
 14673  013534  D02F               	goto	l6767
 14674                           
 14675                           ;stkvar	_b @ sp[(-13)+-4]
 14676  013536  0EEF               	movlw	-17
 14677  013538  6AE3               	clrf	plusw1,c
 14678  01353A  0EF0               	movlw	-16
 14679  01353C  6AE3               	clrf	plusw1,c
 14680  01353E  0EF1               	movlw	-15
 14681  013540  6AE3               	clrf	plusw1,c
 14682  013542  0EF2               	movlw	-14
 14683  013544  6AE3               	clrf	plusw1,c
 14684                           
 14685                           ;stkvar	_b @ sp[(-13)+-4]
 14686  013546  0EF1               	movlw	241
 14687  013548  24E1               	addwf	fsr1l,w,c
 14688  01354A  6ED9               	movwf	fsr2l,c
 14689  01354C  0EFF               	movlw	255
 14690  01354E  20E2               	addwfc	fsr1h,w,c
 14691  013550  6EDA               	movwf	fsr2h,c
 14692  013552  0E80               	movlw	128
 14693  013554  12DE               	iorwf	postinc2,f,c
 14694  013556  0E7F               	movlw	127
 14695  013558  12DD               	iorwf	postdec2,f,c
 14696  01355A                     l6761:
 14697                           
 14698                           ;stkvar	_sign @ sp[(-13)+12]
 14699  01355A  0EFF               	movlw	-1
 14700  01355C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14701                           
 14702                           ;stkvar	_b @ sp[(-13)+-4]
 14703  013562  0EF2               	movlw	242
 14704  013564  24E1               	addwf	fsr1l,w,c
 14705  013566  6ED9               	movwf	fsr2l,c
 14706  013568  0EFF               	movlw	255
 14707  01356A  20E2               	addwfc	fsr1h,w,c
 14708  01356C  6EDA               	movwf	fsr2h,c
 14709  01356E  503D               	movf	(btemp+11)^0,w,c
 14710  013570  12DF               	iorwf	indf2,f,c
 14711                           
 14712                           ;stkvar	_b @ sp[(-13)+-4]
 14713  013572  0EEF               	movlw	-17
 14714  013574  006F FF8C  F032    	movff	plusw1,btemp
 14715  01357A  0EF0               	movlw	-16
 14716  01357C  006F FF8C  F033    	movff	plusw1,btemp+1
 14717  013582  0EF1               	movlw	-15
 14718  013584  006F FF8C  F034    	movff	plusw1,btemp+2
 14719  01358A  0EF2               	movlw	-14
 14720  01358C  006F FF8C  F035    	movff	plusw1,btemp+3
 14721  013592  D19F               	goto	l2660
 14722  013594                     l6767:
 14723                           
 14724                           ;stkvar	_bexp @ sp[(-13)+11]
 14725  013594  0EFE               	movlw	-2
 14726  013596  50E3               	movf	plusw1,w,c
 14727  013598  A4D8               	btfss	status,2,c
 14728  01359A  D009               	goto	l6775
 14729  01359C  0E00               	movlw	0
 14730  01359E  6E32               	movwf	btemp^0,c
 14731  0135A0  0E00               	movlw	0
 14732  0135A2  6E33               	movwf	(btemp+1)^0,c
 14733  0135A4  0E00               	movlw	0
 14734  0135A6  6E34               	movwf	(btemp+2)^0,c
 14735  0135A8  0E00               	movlw	0
 14736  0135AA  6E35               	movwf	(btemp+3)^0,c
 14737  0135AC  D192               	goto	l2660
 14738  0135AE                     l6775:
 14739                           
 14740                           ;stkvar	_bexp @ sp[(-13)+11]
 14741  0135AE  0EFE               	movlw	-2
 14742  0135B0  50E3               	movf	plusw1,w,c
 14743  0135B2  6E3C               	movwf	(btemp+10)^0,c
 14744  0135B4  6A3D               	clrf	(btemp+11)^0,c
 14745                           
 14746                           ;stkvar	_aexp @ sp[(-13)+10]
 14747  0135B6  0EFD               	movlw	-3
 14748  0135B8  50E3               	movf	plusw1,w,c
 14749  0135BA  5E3C               	subwf	(btemp+10)^0,f,c
 14750  0135BC  0E00               	movlw	0
 14751  0135BE  5A3D               	subwfb	(btemp+11)^0,f,c
 14752  0135C0  0E7F               	movlw	127
 14753  0135C2  263C               	addwf	(btemp+10)^0,f,c
 14754  0135C4  0E00               	movlw	0
 14755  0135C6  223D               	addwfc	(btemp+11)^0,f,c
 14756                           
 14757                           ;stkvar	_new_exp @ sp[(-13)+8]
 14758  0135C8  0EFB               	movlw	-5
 14759  0135CA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14760  0135D0  0EFC               	movlw	-4
 14761  0135D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14762                           
 14763                           ;stkvar	_b @ sp[(-13)+-4]
 14764  0135D8  0EEF               	movlw	-17
 14765  0135DA  006F FF8C  F03A    	movff	plusw1,btemp+8
 14766  0135E0  0EF0               	movlw	-16
 14767  0135E2  006F FF8C  F03B    	movff	plusw1,btemp+9
 14768  0135E8  0EF1               	movlw	-15
 14769  0135EA  006F FF8C  F03C    	movff	plusw1,btemp+10
 14770  0135F0  0EF2               	movlw	-14
 14771  0135F2  006F FF8C  F03D    	movff	plusw1,btemp+11
 14772                           
 14773                           ;stkvar	_rem @ sp[(-13)+4]
 14774  0135F8  0EF7               	movlw	-9
 14775  0135FA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14776  013600  0EF8               	movlw	-8
 14777  013602  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14778  013608  0EF9               	movlw	-7
 14779  01360A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14780  013610  0EFA               	movlw	-6
 14781  013612  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14782                           
 14783                           ;stkvar	_b @ sp[(-13)+-4]
 14784  013618  0EEF               	movlw	-17
 14785  01361A  6AE3               	clrf	plusw1,c
 14786  01361C  0EF0               	movlw	-16
 14787  01361E  6AE3               	clrf	plusw1,c
 14788  013620  0EF1               	movlw	-15
 14789  013622  6AE3               	clrf	plusw1,c
 14790  013624  0EF2               	movlw	-14
 14791  013626  6AE3               	clrf	plusw1,c
 14792                           
 14793                           ;stkvar	_grs @ sp[(-13)+0]
 14794  013628  0EF3               	movlw	-13
 14795  01362A  6AE3               	clrf	plusw1,c
 14796  01362C  0EF4               	movlw	-12
 14797  01362E  6AE3               	clrf	plusw1,c
 14798  013630  0EF5               	movlw	-11
 14799  013632  6AE3               	clrf	plusw1,c
 14800  013634  0EF6               	movlw	-10
 14801  013636  6AE3               	clrf	plusw1,c
 14802                           
 14803                           ;stkvar	_aexp @ sp[(-13)+10]
 14804  013638  0EFD               	movlw	-3
 14805  01363A  6AE3               	clrf	plusw1,c
 14806  01363C  D050               	goto	l6803
 14807  01363E                     l6785:
 14808                           
 14809                           ;stkvar	_aexp @ sp[(-13)+10]
 14810  01363E  0EFD               	movlw	-3
 14811  013640  50E3               	movf	plusw1,w,c
 14812  013642  B4D8               	btfsc	status,2,c
 14813  013644  D020               	goto	l6795
 14814                           
 14815                           ;stkvar	_rem @ sp[(-13)+4]
 14816  013646  90D8               	bcf	status,0,c
 14817  013648  0EF7               	movlw	-9
 14818  01364A  36E3               	rlcf	plusw1,f,c
 14819  01364C  0EF8               	movlw	-8
 14820  01364E  36E3               	rlcf	plusw1,f,c
 14821  013650  0EF9               	movlw	-7
 14822  013652  36E3               	rlcf	plusw1,f,c
 14823  013654  0EFA               	movlw	-6
 14824  013656  36E3               	rlcf	plusw1,f,c
 14825                           
 14826                           ;stkvar	_b @ sp[(-13)+-4]
 14827  013658  90D8               	bcf	status,0,c
 14828  01365A  0EEF               	movlw	-17
 14829  01365C  36E3               	rlcf	plusw1,f,c
 14830  01365E  0EF0               	movlw	-16
 14831  013660  36E3               	rlcf	plusw1,f,c
 14832  013662  0EF1               	movlw	-15
 14833  013664  36E3               	rlcf	plusw1,f,c
 14834  013666  0EF2               	movlw	-14
 14835  013668  36E3               	rlcf	plusw1,f,c
 14836                           
 14837                           ;stkvar	_grs @ sp[(-13)+0]
 14838  01366A  0EF6               	movlw	-10
 14839  01366C  AEE3               	btfss	plusw1,7,c
 14840  01366E  D002               	goto	l6793
 14841                           
 14842                           ;stkvar	_b @ sp[(-13)+-4]
 14843  013670  0EEF               	movlw	-17
 14844  013672  80E3               	bsf	plusw1,0,c
 14845  013674                     l6793:
 14846                           
 14847                           ;stkvar	_grs @ sp[(-13)+0]
 14848  013674  90D8               	bcf	status,0,c
 14849  013676  0EF3               	movlw	-13
 14850  013678  36E3               	rlcf	plusw1,f,c
 14851  01367A  0EF4               	movlw	-12
 14852  01367C  36E3               	rlcf	plusw1,f,c
 14853  01367E  0EF5               	movlw	-11
 14854  013680  36E3               	rlcf	plusw1,f,c
 14855  013682  0EF6               	movlw	-10
 14856  013684  36E3               	rlcf	plusw1,f,c
 14857  013686                     l6795:
 14858                           
 14859                           ;stkvar	_a @ sp[(-13)+-8]
 14860                           ;stkvar	_rem @ sp[(-13)+4]
 14861  013686  50E1               	movf	fsr1l,w,c
 14862  013688  0FF7               	addlw	-9
 14863  01368A  6ED9               	movwf	fsr2l,c
 14864  01368C  50E2               	movf	fsr1h,w,c
 14865  01368E  6EDA               	movwf	fsr2h,c
 14866  013690  0EFF               	movlw	255
 14867  013692  22DA               	addwfc	fsr2h,f,c
 14868  013694  0EEB               	movlw	-21
 14869  013696  50E3               	movf	plusw1,w,c
 14870  013698  5CDE               	subwf	postinc2,w,c
 14871  01369A  0EEC               	movlw	-20
 14872  01369C  50E3               	movf	plusw1,w,c
 14873  01369E  58DE               	subwfb	postinc2,w,c
 14874  0136A0  0EED               	movlw	-19
 14875  0136A2  50E3               	movf	plusw1,w,c
 14876  0136A4  58DE               	subwfb	postinc2,w,c
 14877  0136A6  0EEE               	movlw	-18
 14878  0136A8  50E3               	movf	plusw1,w,c
 14879  0136AA  58DE               	subwfb	postinc2,w,c
 14880  0136AC  A0D8               	btfss	status,0,c
 14881  0136AE  D015               	goto	l6801
 14882                           
 14883                           ;stkvar	_grs @ sp[(-13)+0]
 14884  0136B0  0EF6               	movlw	-10
 14885  0136B2  8CE3               	bsf	plusw1,6,c
 14886                           
 14887                           ;stkvar	_a @ sp[(-13)+-8]
 14888                           ;stkvar	_rem @ sp[(-13)+4]
 14889  0136B4  50E1               	movf	fsr1l,w,c
 14890  0136B6  0FF7               	addlw	-9
 14891  0136B8  6ED9               	movwf	fsr2l,c
 14892  0136BA  50E2               	movf	fsr1h,w,c
 14893  0136BC  6EDA               	movwf	fsr2h,c
 14894  0136BE  0EFF               	movlw	255
 14895  0136C0  22DA               	addwfc	fsr2h,f,c
 14896  0136C2  0EEB               	movlw	-21
 14897  0136C4  50E3               	movf	plusw1,w,c
 14898  0136C6  5EDE               	subwf	postinc2,f,c
 14899  0136C8  0EEC               	movlw	-20
 14900  0136CA  50E3               	movf	plusw1,w,c
 14901  0136CC  5ADE               	subwfb	postinc2,f,c
 14902  0136CE  0EED               	movlw	-19
 14903  0136D0  50E3               	movf	plusw1,w,c
 14904  0136D2  5ADE               	subwfb	postinc2,f,c
 14905  0136D4  0EEE               	movlw	-18
 14906  0136D6  50E3               	movf	plusw1,w,c
 14907  0136D8  5ADE               	subwfb	postinc2,f,c
 14908  0136DA                     l6801:
 14909                           
 14910                           ;stkvar	_aexp @ sp[(-13)+10]
 14911  0136DA  0EFD               	movlw	-3
 14912  0136DC  2AE3               	incf	plusw1,f,c
 14913  0136DE                     l6803:
 14914                           
 14915                           ;stkvar	_aexp @ sp[(-13)+10]
 14916  0136DE  0EFD               	movlw	-3
 14917  0136E0  006F FF8C  F032    	movff	plusw1,btemp
 14918  0136E6  0E19               	movlw	25
 14919  0136E8  6432               	cpfsgt	btemp^0,c
 14920  0136EA  D7A9               	goto	l6785
 14921                           
 14922                           ;stkvar	_rem @ sp[(-13)+4]
 14923  0136EC  0EF7               	movlw	-9
 14924  0136EE  50E3               	movf	plusw1,w,c
 14925  0136F0  E10A               	bnz	u5720
 14926  0136F2  0EF8               	movlw	-8
 14927  0136F4  50E3               	movf	plusw1,w,c
 14928  0136F6  E107               	bnz	u5720
 14929  0136F8  0EF9               	movlw	-7
 14930  0136FA  50E3               	movf	plusw1,w,c
 14931  0136FC  E104               	bnz	u5720
 14932  0136FE  0EFA               	movlw	-6
 14933  013700  50E3               	movf	plusw1,w,c
 14934  013702  B4D8               	btfsc	status,2,c
 14935  013704  D024               	goto	l6819
 14936  013706                     u5720:
 14937                           
 14938                           ;stkvar	_grs @ sp[(-13)+0]
 14939  013706  0EF3               	movlw	-13
 14940  013708  80E3               	bsf	plusw1,0,c
 14941  01370A  D021               	goto	l6819
 14942  01370C                     l6809:
 14943                           
 14944                           ;stkvar	_b @ sp[(-13)+-4]
 14945  01370C  90D8               	bcf	status,0,c
 14946  01370E  0EEF               	movlw	-17
 14947  013710  36E3               	rlcf	plusw1,f,c
 14948  013712  0EF0               	movlw	-16
 14949  013714  36E3               	rlcf	plusw1,f,c
 14950  013716  0EF1               	movlw	-15
 14951  013718  36E3               	rlcf	plusw1,f,c
 14952  01371A  0EF2               	movlw	-14
 14953  01371C  36E3               	rlcf	plusw1,f,c
 14954                           
 14955                           ;stkvar	_grs @ sp[(-13)+0]
 14956  01371E  0EF6               	movlw	-10
 14957  013720  AEE3               	btfss	plusw1,7,c
 14958  013722  D002               	goto	l6815
 14959                           
 14960                           ;stkvar	_b @ sp[(-13)+-4]
 14961  013724  0EEF               	movlw	-17
 14962  013726  80E3               	bsf	plusw1,0,c
 14963  013728                     l6815:
 14964                           
 14965                           ;stkvar	_grs @ sp[(-13)+0]
 14966  013728  90D8               	bcf	status,0,c
 14967  01372A  0EF3               	movlw	-13
 14968  01372C  36E3               	rlcf	plusw1,f,c
 14969  01372E  0EF4               	movlw	-12
 14970  013730  36E3               	rlcf	plusw1,f,c
 14971  013732  0EF5               	movlw	-11
 14972  013734  36E3               	rlcf	plusw1,f,c
 14973  013736  0EF6               	movlw	-10
 14974  013738  36E3               	rlcf	plusw1,f,c
 14975                           
 14976                           ;stkvar	_new_exp @ sp[(-13)+8]
 14977  01373A  50E1               	movf	fsr1l,w,c
 14978  01373C  0FFB               	addlw	-5
 14979  01373E  6ED9               	movwf	fsr2l,c
 14980  013740  50E2               	movf	fsr1h,w,c
 14981  013742  6EDA               	movwf	fsr2h,c
 14982  013744  0EFF               	movlw	255
 14983  013746  22DA               	addwfc	fsr2h,f,c
 14984  013748  06DE               	decf	postinc2,f,c
 14985  01374A  0E00               	movlw	0
 14986  01374C  5ADD               	subwfb	postdec2,f,c
 14987  01374E                     l6819:
 14988                           
 14989                           ;stkvar	_b @ sp[(-13)+-4]
 14990  01374E  0EF1               	movlw	-15
 14991  013750  AEE3               	btfss	plusw1,7,c
 14992  013752  D7DC               	goto	l6809
 14993                           
 14994                           ;stkvar	_aexp @ sp[(-13)+10]
 14995  013754  0EFD               	movlw	-3
 14996  013756  6AE3               	clrf	plusw1,c
 14997                           
 14998                           ;stkvar	_grs @ sp[(-13)+0]
 14999  013758  0EF6               	movlw	-10
 15000  01375A  AEE3               	btfss	plusw1,7,c
 15001  01375C  D020               	goto	l6833
 15002                           
 15003                           ;stkvar	_grs @ sp[(-13)+0]
 15004  01375E  50E1               	movf	fsr1l,w,c
 15005  013760  0FF3               	addlw	-13
 15006  013762  6ED9               	movwf	fsr2l,c
 15007  013764  50E2               	movf	fsr1h,w,c
 15008  013766  6EDA               	movwf	fsr2h,c
 15009  013768  0EFF               	movlw	255
 15010  01376A  22DA               	addwfc	fsr2h,f,c
 15011  01376C  0EFF               	movlw	255
 15012  01376E  14DE               	andwf	postinc2,w,c
 15013  013770  6E3A               	movwf	(btemp+8)^0,c
 15014  013772  0EFF               	movlw	255
 15015  013774  14DE               	andwf	postinc2,w,c
 15016  013776  6E3B               	movwf	(btemp+9)^0,c
 15017  013778  0EFF               	movlw	255
 15018  01377A  14DE               	andwf	postinc2,w,c
 15019  01377C  6E3C               	movwf	(btemp+10)^0,c
 15020  01377E  0E7F               	movlw	127
 15021  013780  14DE               	andwf	postinc2,w,c
 15022  013782  6E3D               	movwf	(btemp+11)^0,c
 15023  013784  503A               	movf	(btemp+8)^0,w,c
 15024  013786  103B               	iorwf	(btemp+9)^0,w,c
 15025  013788  103C               	iorwf	(btemp+10)^0,w,c
 15026  01378A  103D               	iorwf	(btemp+11)^0,w,c
 15027  01378C  B4D8               	btfsc	status,2,c
 15028  01378E  D004               	goto	l6829
 15029  013790                     u5760:
 15030                           
 15031                           ;stkvar	_aexp @ sp[(-13)+10]
 15032  013790  0EFD               	movlw	-3
 15033  013792  6AE3               	clrf	plusw1,c
 15034  013794  2AE3               	incf	plusw1,f,c
 15035  013796  D003               	goto	l6833
 15036  013798                     l6829:
 15037                           
 15038                           ;stkvar	_b @ sp[(-13)+-4]
 15039  013798  0EEF               	movlw	-17
 15040  01379A  B0E3               	btfsc	plusw1,0,c
 15041  01379C  D7F9               	goto	u5760
 15042  01379E                     l6833:
 15043                           
 15044                           ;stkvar	_aexp @ sp[(-13)+10]
 15045  01379E  0EFD               	movlw	-3
 15046  0137A0  50E3               	movf	plusw1,w,c
 15047  0137A2  B4D8               	btfsc	status,2,c
 15048  0137A4  D036               	goto	l6843
 15049                           
 15050                           ;stkvar	_b @ sp[(-13)+-4]
 15051  0137A6  50E1               	movf	fsr1l,w,c
 15052  0137A8  0FEF               	addlw	-17
 15053  0137AA  6ED9               	movwf	fsr2l,c
 15054  0137AC  50E2               	movf	fsr1h,w,c
 15055  0137AE  6EDA               	movwf	fsr2h,c
 15056  0137B0  0EFF               	movlw	255
 15057  0137B2  22DA               	addwfc	fsr2h,f,c
 15058  0137B4  2ADE               	incf	postinc2,f,c
 15059  0137B6  0E00               	movlw	0
 15060  0137B8  22DE               	addwfc	postinc2,f,c
 15061  0137BA  22DE               	addwfc	postinc2,f,c
 15062  0137BC  22DE               	addwfc	postinc2,f,c
 15063                           
 15064                           ;stkvar	_b @ sp[(-13)+-4]
 15065  0137BE  0EF2               	movlw	-14
 15066  0137C0  A0E3               	btfss	plusw1,0,c
 15067  0137C2  D027               	goto	l6843
 15068  0137C4  0E01               	movlw	1
 15069  0137C6  6E3D               	movwf	(btemp+11)^0,c
 15070                           
 15071                           ;stkvar	_b @ sp[(-13)+-4]
 15072  0137C8  50E1               	movf	fsr1l,w,c
 15073  0137CA  0FEF               	addlw	-17
 15074  0137CC  6ED9               	movwf	fsr2l,c
 15075  0137CE  50E2               	movf	fsr1h,w,c
 15076  0137D0  6EDA               	movwf	fsr2h,c
 15077  0137D2  0EFF               	movlw	255
 15078  0137D4  22DA               	addwfc	fsr2h,f,c
 15079  0137D6  283D               	incf	(btemp+11)^0,w,c
 15080  0137D8  52DE               	movf	postinc2,f,c
 15081  0137DA  D008               	goto	u5800
 15082  0137DC                     u5805:
 15083  0137DC  52DE               	movf	postinc2,f,c
 15084  0137DE  90D8               	bcf	status,0,c
 15085  0137E0  BEDC               	btfsc	preinc2,7,c
 15086  0137E2  80D8               	bsf	status,0,c
 15087  0137E4  32DD               	rrcf	postdec2,f,c
 15088  0137E6  32DD               	rrcf	postdec2,f,c
 15089  0137E8  32DD               	rrcf	postdec2,f,c
 15090  0137EA  32DE               	rrcf	postinc2,f,c
 15091  0137EC                     u5800:
 15092  0137EC  2EE8               	decfsz	wreg,f,c
 15093  0137EE  D7F6               	goto	u5805
 15094                           
 15095                           ;stkvar	_new_exp @ sp[(-13)+8]
 15096  0137F0  0EFB               	movlw	-5
 15097  0137F2  50E3               	movf	plusw1,w,c
 15098  0137F4  0F01               	addlw	1
 15099  0137F6  6E32               	movwf	btemp^0,c
 15100  0137F8  0EFB               	movlw	-5
 15101  0137FA  0060  F0CB  FFE3   	movff	btemp,plusw1
 15102  013800  6A32               	clrf	btemp^0,c
 15103  013802  0EFC               	movlw	-4
 15104  013804  50E3               	movf	plusw1,w,c
 15105  013806  2032               	addwfc	btemp^0,w,c
 15106  013808  6E32               	movwf	btemp^0,c
 15107  01380A  0EFC               	movlw	-4
 15108  01380C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15109  013812                     l6843:
 15110                           
 15111                           ;stkvar	_new_exp @ sp[(-13)+8]
 15112  013812  0EFC               	movlw	-4
 15113  013814  BEE3               	btfsc	plusw1,7,c
 15114  013816  D01B               	goto	l6849
 15115  013818  0EFC               	movlw	-4
 15116  01381A  50E3               	movf	plusw1,w,c
 15117  01381C  E104               	bnz	u5810
 15118  01381E  0EFB               	movlw	-5
 15119  013820  28E3               	incf	plusw1,w,c
 15120  013822  A0D8               	btfss	status,0,c
 15121  013824  D014               	goto	l6849
 15122  013826                     u5810:
 15123  013826  0EFF               	movlw	255
 15124  013828  6E3C               	movwf	(btemp+10)^0,c
 15125  01382A  0E00               	movlw	0
 15126  01382C  6E3D               	movwf	(btemp+11)^0,c
 15127                           
 15128                           ;stkvar	_new_exp @ sp[(-13)+8]
 15129  01382E  0EFB               	movlw	-5
 15130  013830  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15131  013836  0EFC               	movlw	-4
 15132  013838  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15133                           
 15134                           ;stkvar	_b @ sp[(-13)+-4]
 15135  01383E  0EEF               	movlw	-17
 15136  013840  6AE3               	clrf	plusw1,c
 15137  013842  0EF0               	movlw	-16
 15138  013844  6AE3               	clrf	plusw1,c
 15139  013846  0EF1               	movlw	-15
 15140  013848  6AE3               	clrf	plusw1,c
 15141  01384A  0EF2               	movlw	-14
 15142  01384C  6AE3               	clrf	plusw1,c
 15143  01384E                     l6849:
 15144                           
 15145                           ;stkvar	_new_exp @ sp[(-13)+8]
 15146  01384E  0EFC               	movlw	-4
 15147  013850  BEE3               	btfsc	plusw1,7,c
 15148  013852  D007               	goto	u5820
 15149  013854  0EFC               	movlw	-4
 15150  013856  50E3               	movf	plusw1,w,c
 15151  013858  E112               	bnz	l6855
 15152  01385A  0EFB               	movlw	-5
 15153  01385C  04E3               	decf	plusw1,w,c
 15154  01385E  B0D8               	btfsc	status,0,c
 15155  013860  D00E               	goto	l6855
 15156  013862                     u5820:
 15157                           
 15158                           ;stkvar	_new_exp @ sp[(-13)+8]
 15159  013862  0EFB               	movlw	-5
 15160  013864  6AE3               	clrf	plusw1,c
 15161  013866  0EFC               	movlw	-4
 15162  013868  6AE3               	clrf	plusw1,c
 15163                           
 15164                           ;stkvar	_b @ sp[(-13)+-4]
 15165  01386A  0EEF               	movlw	-17
 15166  01386C  6AE3               	clrf	plusw1,c
 15167  01386E  0EF0               	movlw	-16
 15168  013870  6AE3               	clrf	plusw1,c
 15169  013872  0EF1               	movlw	-15
 15170  013874  6AE3               	clrf	plusw1,c
 15171  013876  0EF2               	movlw	-14
 15172  013878  6AE3               	clrf	plusw1,c
 15173                           
 15174                           ;stkvar	_sign @ sp[(-13)+12]
 15175  01387A  0EFF               	movlw	-1
 15176  01387C  6AE3               	clrf	plusw1,c
 15177  01387E                     l6855:
 15178                           
 15179                           ;stkvar	_new_exp @ sp[(-13)+8]
 15180                           ;stkvar	_bexp @ sp[(-13)+11]
 15181  01387E  0EFB               	movlw	-5
 15182  013880  006F FF8C  F032    	movff	plusw1,btemp
 15183  013886  0EFE               	movlw	-2
 15184  013888  0060  F0CB  FFE3   	movff	btemp,plusw1
 15185                           
 15186                           ;stkvar	_bexp @ sp[(-13)+11]
 15187  01388E  0EFE               	movlw	-2
 15188  013890  A0E3               	btfss	plusw1,0,c
 15189  013892  D009               	goto	l6861
 15190                           
 15191                           ;stkvar	_b @ sp[(-13)+-4]
 15192  013894  0EF1               	movlw	241
 15193  013896  24E1               	addwf	fsr1l,w,c
 15194  013898  6ED9               	movwf	fsr2l,c
 15195  01389A  0EFF               	movlw	255
 15196  01389C  20E2               	addwfc	fsr1h,w,c
 15197  01389E  6EDA               	movwf	fsr2h,c
 15198  0138A0  0E00               	movlw	0
 15199  0138A2  8EDB               	bsf	plusw2,7,c
 15200  0138A4  D008               	goto	l6863
 15201  0138A6                     l6861:
 15202                           
 15203                           ;stkvar	_b @ sp[(-13)+-4]
 15204  0138A6  0EF1               	movlw	241
 15205  0138A8  24E1               	addwf	fsr1l,w,c
 15206  0138AA  6ED9               	movwf	fsr2l,c
 15207  0138AC  0EFF               	movlw	255
 15208  0138AE  20E2               	addwfc	fsr1h,w,c
 15209  0138B0  6EDA               	movwf	fsr2h,c
 15210  0138B2  0E7F               	movlw	127
 15211  0138B4  16DF               	andwf	indf2,f,c
 15212  0138B6                     l6863:
 15213                           
 15214                           ;stkvar	_b @ sp[(-13)+-4]
 15215  0138B6  0EF2               	movlw	242
 15216  0138B8  24E1               	addwf	fsr1l,w,c
 15217  0138BA  6ED9               	movwf	fsr2l,c
 15218  0138BC  0EFF               	movlw	255
 15219  0138BE  20E2               	addwfc	fsr1h,w,c
 15220  0138C0  6EDA               	movwf	fsr2h,c
 15221                           
 15222                           ;stkvar	_bexp @ sp[(-13)+11]
 15223  0138C2  0EFE               	movlw	-2
 15224  0138C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 15225  0138CA  90D8               	bcf	status,0,c
 15226  0138CC  303D               	rrcf	(btemp+11)^0,w,c
 15227  0138CE  6EDF               	movwf	indf2,c
 15228  0138D0  D644               	goto	l6761
 15229  0138D2                     l2660:
 15230                           
 15231                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15232  0138D2  0EEB               	movlw	235
 15233  0138D4  26E1               	addwf	fsr1l,f,c
 15234  0138D6  0EFF               	movlw	255
 15235  0138D8  22E2               	addwfc	fsr1h,f,c
 15236  0138DA  0012               	return		;funcret
 15237  0138DC                     __end_of___fldiv:
 15238                           	opt callstack 0
 15239                           
 15240 ;; *************** function ___awmod *****************
 15241 ;; Defined at:
 15242 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;  dividend        2  [STACK] int 
 15245 ;;  divisor         2  [STACK] int 
 15246 ;; Auto vars:     Size  Location     Type
 15247 ;;  sign            1  [STACK] unsigned char 
 15248 ;;  counter         1  [STACK] unsigned char 
 15249 ;; Return value:  Size  Location     Type
 15250 ;;                  2  [STACK] int 
 15251 ;; Registers used:
 15252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15253 ;; Tracked objects:
 15254 ;;		On entry : 0/5
 15255 ;;		On exit  : 0/0
 15256 ;;		Unchanged: 0/0
 15257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15262 ;;Total ram usage:        0 bytes
 15263 ;; Hardware stack levels used:    1
 15264 ;; Hardware stack levels required when called:    6
 15265 ;; This function calls:
 15266 ;;		Nothing
 15267 ;; This function is called by:
 15268 ;;		_efgtoa
 15269 ;; This function uses a reentrant model
 15270 ;;
 15271                           
 15272                           	psect	text57
 15273  0169D6                     __ptext57:
 15274                           	opt callstack 0
 15275  0169D6                     ___awmod:
 15276                           	opt callstack 0
 15277                           
 15278                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15279  0169D6  52E6               	movf	postinc1,f,c
 15280  0169D8  52E6               	movf	postinc1,f,c
 15281                           
 15282                           ;stkvar	_sign @ sp[(-2)+0]
 15283                           
 15284                           ;incstack = 0
 15285  0169DA  0EFE               	movlw	-2
 15286  0169DC  6AE3               	clrf	plusw1,c
 15287                           
 15288                           ;stkvar	_dividend @ sp[(-2)+-2]
 15289  0169DE  0EFD               	movlw	-3
 15290  0169E0  AEE3               	btfss	plusw1,7,c
 15291  0169E2  D009               	goto	l7087
 15292                           
 15293                           ;stkvar	_dividend @ sp[(-2)+-2]
 15294                           ;stkvar	_dividend @ sp[(-2)+-2]
 15295  0169E4  0EFC               	movlw	-4
 15296  0169E6  6CE3               	negf	plusw1,c
 15297  0169E8  0EFD               	movlw	-3
 15298  0169EA  1EE3               	comf	plusw1,f,c
 15299  0169EC  B0D8               	btfsc	status,0,c
 15300  0169EE  2AE3               	incf	plusw1,f,c
 15301                           
 15302                           ;stkvar	_sign @ sp[(-2)+0]
 15303  0169F0  0EFE               	movlw	-2
 15304  0169F2  6AE3               	clrf	plusw1,c
 15305  0169F4  2AE3               	incf	plusw1,f,c
 15306  0169F6                     l7087:
 15307                           
 15308                           ;stkvar	_divisor @ sp[(-2)+-4]
 15309  0169F6  0EFB               	movlw	-5
 15310  0169F8  AEE3               	btfss	plusw1,7,c
 15311  0169FA  D006               	goto	l7091
 15312                           
 15313                           ;stkvar	_divisor @ sp[(-2)+-4]
 15314                           ;stkvar	_divisor @ sp[(-2)+-4]
 15315  0169FC  0EFA               	movlw	-6
 15316  0169FE  6CE3               	negf	plusw1,c
 15317  016A00  0EFB               	movlw	-5
 15318  016A02  1EE3               	comf	plusw1,f,c
 15319  016A04  B0D8               	btfsc	status,0,c
 15320  016A06  2AE3               	incf	plusw1,f,c
 15321  016A08                     l7091:
 15322                           
 15323                           ;stkvar	_divisor @ sp[(-2)+-4]
 15324  016A08  0EFA               	movlw	-6
 15325  016A0A  006F FF8C  F032    	movff	plusw1,btemp
 15326  016A10  0EFB               	movlw	-5
 15327  016A12  50E3               	movf	plusw1,w,c
 15328  016A14  1032               	iorwf	btemp^0,w,c
 15329  016A16  B4D8               	btfsc	status,2,c
 15330  016A18  D053               	goto	u6180
 15331                           
 15332                           ;stkvar	_counter @ sp[(-2)+1]
 15333  016A1A  0EFF               	movlw	-1
 15334  016A1C  6AE3               	clrf	plusw1,c
 15335  016A1E  D012               	goto	L13
 15336  016A20                     l7095:
 15337                           
 15338                           ;stkvar	_divisor @ sp[(-2)+-4]
 15339  016A20  0EFA               	movlw	-6
 15340  016A22  50E3               	movf	plusw1,w,c
 15341  016A24  90D8               	bcf	status,0,c
 15342  016A26  34E8               	rlcf	wreg,w,c
 15343  016A28  6E32               	movwf	btemp^0,c
 15344  016A2A  0EFA               	movlw	-6
 15345  016A2C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15346  016A32  0EFB               	movlw	-5
 15347  016A34  50E3               	movf	plusw1,w,c
 15348  016A36  34E8               	rlcf	wreg,w,c
 15349  016A38  6E32               	movwf	btemp^0,c
 15350  016A3A  0EFB               	movlw	-5
 15351  016A3C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15352                           
 15353                           ;stkvar	_counter @ sp[(-2)+1]
 15354  016A42  0EFF               	movlw	-1
 15355  016A44                     L13:
 15356  016A44  2AE3               	incf	plusw1,f,c
 15357                           
 15358                           ;stkvar	_divisor @ sp[(-2)+-4]
 15359  016A46  0EFB               	movlw	-5
 15360  016A48  AEE3               	btfss	plusw1,7,c
 15361  016A4A  D7EA               	goto	l7095
 15362  016A4C                     u6160:
 15363                           
 15364                           ;stkvar	_divisor @ sp[(-2)+-4]
 15365  016A4C  0EFA               	movlw	-6
 15366  016A4E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15367  016A54  0EFB               	movlw	-5
 15368  016A56  006F FF8C  F03D    	movff	plusw1,btemp+11
 15369                           
 15370                           ;stkvar	_dividend @ sp[(-2)+-2]
 15371  016A5C  0EFC               	movlw	-4
 15372  016A5E  006F FF8C  F03A    	movff	plusw1,btemp+8
 15373  016A64  0EFD               	movlw	-3
 15374  016A66  006F FF8C  F03B    	movff	plusw1,btemp+9
 15375  016A6C  503C               	movf	(btemp+10)^0,w,c
 15376  016A6E  5C3A               	subwf	(btemp+8)^0,w,c
 15377  016A70  503D               	movf	(btemp+11)^0,w,c
 15378  016A72  583B               	subwfb	(btemp+9)^0,w,c
 15379  016A74  A0D8               	btfss	status,0,c
 15380  016A76  D014               	goto	l7105
 15381                           
 15382                           ;stkvar	_divisor @ sp[(-2)+-4]
 15383                           ;stkvar	_dividend @ sp[(-2)+-2]
 15384  016A78  0EFC               	movlw	-4
 15385  016A7A  50E3               	movf	plusw1,w,c
 15386  016A7C  6E32               	movwf	btemp^0,c
 15387  016A7E  0EFA               	movlw	-6
 15388  016A80  50E3               	movf	plusw1,w,c
 15389  016A82  5E32               	subwf	btemp^0,f,c
 15390  016A84  0EFC               	movlw	-4
 15391  016A86  0060  F0CB  FFE3   	movff	btemp,plusw1
 15392  016A8C  0EFD               	movlw	-3
 15393  016A8E  50E3               	movf	plusw1,w,c
 15394  016A90  6E32               	movwf	btemp^0,c
 15395  016A92  0EFB               	movlw	-5
 15396  016A94  50E3               	movf	plusw1,w,c
 15397  016A96  5A32               	subwfb	btemp^0,f,c
 15398  016A98  0EFD               	movlw	-3
 15399  016A9A  0060  F0CB  FFE3   	movff	btemp,plusw1
 15400  016AA0                     l7105:
 15401                           
 15402                           ;stkvar	_divisor @ sp[(-2)+-4]
 15403  016AA0  90D8               	bcf	status,0,c
 15404  016AA2  0EFB               	movlw	-5
 15405  016AA4  32E3               	rrcf	plusw1,f,c
 15406  016AA6  0EFA               	movlw	-6
 15407  016AA8  32E3               	rrcf	plusw1,f,c
 15408                           
 15409                           ;stkvar	_counter @ sp[(-2)+1]
 15410  016AAA  0EFF               	movlw	-1
 15411  016AAC  50E3               	movf	plusw1,w,c
 15412  016AAE  6E32               	movwf	btemp^0,c
 15413  016AB0  0E01               	movlw	1
 15414  016AB2  5E32               	subwf	btemp^0,f,c
 15415  016AB4  0EFF               	movlw	-1
 15416  016AB6  0060  F0CB  FFE3   	movff	btemp,plusw1
 15417  016ABC  A4D8               	btfss	status,2,c
 15418  016ABE  D7C6               	goto	u6160
 15419  016AC0                     u6180:
 15420                           
 15421                           ;stkvar	_sign @ sp[(-2)+0]
 15422  016AC0  0EFE               	movlw	-2
 15423  016AC2  50E3               	movf	plusw1,w,c
 15424  016AC4  B4D8               	btfsc	status,2,c
 15425  016AC6  D006               	goto	l7113
 15426                           
 15427                           ;stkvar	_dividend @ sp[(-2)+-2]
 15428                           ;stkvar	_dividend @ sp[(-2)+-2]
 15429  016AC8  0EFC               	movlw	-4
 15430  016ACA  6CE3               	negf	plusw1,c
 15431  016ACC  0EFD               	movlw	-3
 15432  016ACE  1EE3               	comf	plusw1,f,c
 15433  016AD0  B0D8               	btfsc	status,0,c
 15434  016AD2  2AE3               	incf	plusw1,f,c
 15435  016AD4                     l7113:
 15436                           
 15437                           ;stkvar	_dividend @ sp[(-2)+-2]
 15438  016AD4  0EFC               	movlw	-4
 15439  016AD6  006F FF8C  F032    	movff	plusw1,btemp
 15440  016ADC  0EFD               	movlw	-3
 15441  016ADE  006F FF8C  F033    	movff	plusw1,btemp+1
 15442                           
 15443                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15444  016AE4  0EFA               	movlw	250
 15445  016AE6  26E1               	addwf	fsr1l,f,c
 15446  016AE8  0EFF               	movlw	255
 15447  016AEA  22E2               	addwfc	fsr1h,f,c
 15448  016AEC  0012               	return		;funcret
 15449  016AEE                     __end_of___awmod:
 15450                           	opt callstack 0
 15451                           
 15452 ;; *************** function ___awdiv *****************
 15453 ;; Defined at:
 15454 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 15455 ;; Parameters:    Size  Location     Type
 15456 ;;  dividend        2  [STACK] int 
 15457 ;;  divisor         2  [STACK] int 
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;  quotient        2  [STACK] int 
 15460 ;;  sign            1  [STACK] unsigned char 
 15461 ;;  counter         1  [STACK] unsigned char 
 15462 ;; Return value:  Size  Location     Type
 15463 ;;                  2  [STACK] int 
 15464 ;; Registers used:
 15465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15466 ;; Tracked objects:
 15467 ;;		On entry : 0/5
 15468 ;;		On exit  : 0/0
 15469 ;;		Unchanged: 0/0
 15470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15475 ;;Total ram usage:        0 bytes
 15476 ;; Hardware stack levels used:    1
 15477 ;; Hardware stack levels required when called:    6
 15478 ;; This function calls:
 15479 ;;		Nothing
 15480 ;; This function is called by:
 15481 ;;		_efgtoa
 15482 ;; This function uses a reentrant model
 15483 ;;
 15484                           
 15485                           	psect	text58
 15486  0164EE                     __ptext58:
 15487                           	opt callstack 0
 15488  0164EE                     ___awdiv:
 15489                           	opt callstack 0
 15490                           
 15491                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15492  0164EE  52E6               	movf	postinc1,f,c
 15493  0164F0  52E6               	movf	postinc1,f,c
 15494  0164F2  52E6               	movf	postinc1,f,c
 15495  0164F4  52E6               	movf	postinc1,f,c
 15496                           
 15497                           ;stkvar	_sign @ sp[(-4)+2]
 15498                           
 15499                           ;incstack = 0
 15500  0164F6  0EFE               	movlw	-2
 15501  0164F8  6AE3               	clrf	plusw1,c
 15502                           
 15503                           ;stkvar	_divisor @ sp[(-4)+-4]
 15504  0164FA  0EF9               	movlw	-7
 15505  0164FC  AEE3               	btfss	plusw1,7,c
 15506  0164FE  D009               	goto	l7041
 15507                           
 15508                           ;stkvar	_divisor @ sp[(-4)+-4]
 15509                           ;stkvar	_divisor @ sp[(-4)+-4]
 15510  016500  0EF8               	movlw	-8
 15511  016502  6CE3               	negf	plusw1,c
 15512  016504  0EF9               	movlw	-7
 15513  016506  1EE3               	comf	plusw1,f,c
 15514  016508  B0D8               	btfsc	status,0,c
 15515  01650A  2AE3               	incf	plusw1,f,c
 15516                           
 15517                           ;stkvar	_sign @ sp[(-4)+2]
 15518  01650C  0EFE               	movlw	-2
 15519  01650E  6AE3               	clrf	plusw1,c
 15520  016510  2AE3               	incf	plusw1,f,c
 15521  016512                     l7041:
 15522                           
 15523                           ;stkvar	_dividend @ sp[(-4)+-2]
 15524  016512  0EFB               	movlw	-5
 15525  016514  AEE3               	btfss	plusw1,7,c
 15526  016516  D008               	goto	l7047
 15527                           
 15528                           ;stkvar	_dividend @ sp[(-4)+-2]
 15529                           ;stkvar	_dividend @ sp[(-4)+-2]
 15530  016518  0EFA               	movlw	-6
 15531  01651A  6CE3               	negf	plusw1,c
 15532  01651C  0EFB               	movlw	-5
 15533  01651E  1EE3               	comf	plusw1,f,c
 15534  016520  B0D8               	btfsc	status,0,c
 15535  016522  2AE3               	incf	plusw1,f,c
 15536                           
 15537                           ;stkvar	_sign @ sp[(-4)+2]
 15538  016524  0EFE               	movlw	-2
 15539  016526  70E3               	btg	plusw1,0,c
 15540  016528                     l7047:
 15541                           
 15542                           ;stkvar	_quotient @ sp[(-4)+0]
 15543  016528  0EFC               	movlw	-4
 15544  01652A  6AE3               	clrf	plusw1,c
 15545  01652C  0EFD               	movlw	-3
 15546  01652E  6AE3               	clrf	plusw1,c
 15547                           
 15548                           ;stkvar	_divisor @ sp[(-4)+-4]
 15549  016530  0EF8               	movlw	-8
 15550  016532  006F FF8C  F032    	movff	plusw1,btemp
 15551  016538  0EF9               	movlw	-7
 15552  01653A  50E3               	movf	plusw1,w,c
 15553  01653C  1032               	iorwf	btemp^0,w,c
 15554  01653E  B4D8               	btfsc	status,2,c
 15555  016540  D066               	goto	u6110
 15556                           
 15557                           ;stkvar	_counter @ sp[(-4)+3]
 15558  016542  0EFF               	movlw	-1
 15559  016544  6AE3               	clrf	plusw1,c
 15560  016546  D012               	goto	L14
 15561  016548                     l7053:
 15562                           
 15563                           ;stkvar	_divisor @ sp[(-4)+-4]
 15564  016548  0EF8               	movlw	-8
 15565  01654A  50E3               	movf	plusw1,w,c
 15566  01654C  90D8               	bcf	status,0,c
 15567  01654E  34E8               	rlcf	wreg,w,c
 15568  016550  6E32               	movwf	btemp^0,c
 15569  016552  0EF8               	movlw	-8
 15570  016554  0060  F0CB  FFE3   	movff	btemp,plusw1
 15571  01655A  0EF9               	movlw	-7
 15572  01655C  50E3               	movf	plusw1,w,c
 15573  01655E  34E8               	rlcf	wreg,w,c
 15574  016560  6E32               	movwf	btemp^0,c
 15575  016562  0EF9               	movlw	-7
 15576  016564  0060  F0CB  FFE3   	movff	btemp,plusw1
 15577                           
 15578                           ;stkvar	_counter @ sp[(-4)+3]
 15579  01656A  0EFF               	movlw	-1
 15580  01656C                     L14:
 15581  01656C  2AE3               	incf	plusw1,f,c
 15582                           
 15583                           ;stkvar	_divisor @ sp[(-4)+-4]
 15584  01656E  0EF9               	movlw	-7
 15585  016570  AEE3               	btfss	plusw1,7,c
 15586  016572  D7EA               	goto	l7053
 15587  016574                     u6090:
 15588                           
 15589                           ;stkvar	_quotient @ sp[(-4)+0]
 15590  016574  0EFC               	movlw	-4
 15591  016576  50E3               	movf	plusw1,w,c
 15592  016578  90D8               	bcf	status,0,c
 15593  01657A  34E8               	rlcf	wreg,w,c
 15594  01657C  6E32               	movwf	btemp^0,c
 15595  01657E  0EFC               	movlw	-4
 15596  016580  0060  F0CB  FFE3   	movff	btemp,plusw1
 15597  016586  0EFD               	movlw	-3
 15598  016588  50E3               	movf	plusw1,w,c
 15599  01658A  34E8               	rlcf	wreg,w,c
 15600  01658C  6E32               	movwf	btemp^0,c
 15601  01658E  0EFD               	movlw	-3
 15602  016590  0060  F0CB  FFE3   	movff	btemp,plusw1
 15603                           
 15604                           ;stkvar	_divisor @ sp[(-4)+-4]
 15605  016596  0EF8               	movlw	-8
 15606  016598  006F FF8C  F03C    	movff	plusw1,btemp+10
 15607  01659E  0EF9               	movlw	-7
 15608  0165A0  006F FF8C  F03D    	movff	plusw1,btemp+11
 15609                           
 15610                           ;stkvar	_dividend @ sp[(-4)+-2]
 15611  0165A6  0EFA               	movlw	-6
 15612  0165A8  006F FF8C  F03A    	movff	plusw1,btemp+8
 15613  0165AE  0EFB               	movlw	-5
 15614  0165B0  006F FF8C  F03B    	movff	plusw1,btemp+9
 15615  0165B6  503C               	movf	(btemp+10)^0,w,c
 15616  0165B8  5C3A               	subwf	(btemp+8)^0,w,c
 15617  0165BA  503D               	movf	(btemp+11)^0,w,c
 15618  0165BC  583B               	subwfb	(btemp+9)^0,w,c
 15619  0165BE  A0D8               	btfss	status,0,c
 15620  0165C0  D016               	goto	l7067
 15621                           
 15622                           ;stkvar	_divisor @ sp[(-4)+-4]
 15623                           ;stkvar	_dividend @ sp[(-4)+-2]
 15624  0165C2  0EFA               	movlw	-6
 15625  0165C4  50E3               	movf	plusw1,w,c
 15626  0165C6  6E32               	movwf	btemp^0,c
 15627  0165C8  0EF8               	movlw	-8
 15628  0165CA  50E3               	movf	plusw1,w,c
 15629  0165CC  5E32               	subwf	btemp^0,f,c
 15630  0165CE  0EFA               	movlw	-6
 15631  0165D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 15632  0165D6  0EFB               	movlw	-5
 15633  0165D8  50E3               	movf	plusw1,w,c
 15634  0165DA  6E32               	movwf	btemp^0,c
 15635  0165DC  0EF9               	movlw	-7
 15636  0165DE  50E3               	movf	plusw1,w,c
 15637  0165E0  5A32               	subwfb	btemp^0,f,c
 15638  0165E2  0EFB               	movlw	-5
 15639  0165E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 15640                           
 15641                           ;stkvar	_quotient @ sp[(-4)+0]
 15642  0165EA  0EFC               	movlw	-4
 15643  0165EC  80E3               	bsf	plusw1,0,c
 15644  0165EE                     l7067:
 15645                           
 15646                           ;stkvar	_divisor @ sp[(-4)+-4]
 15647  0165EE  90D8               	bcf	status,0,c
 15648  0165F0  0EF9               	movlw	-7
 15649  0165F2  32E3               	rrcf	plusw1,f,c
 15650  0165F4  0EF8               	movlw	-8
 15651  0165F6  32E3               	rrcf	plusw1,f,c
 15652                           
 15653                           ;stkvar	_counter @ sp[(-4)+3]
 15654  0165F8  0EFF               	movlw	-1
 15655  0165FA  50E3               	movf	plusw1,w,c
 15656  0165FC  6E32               	movwf	btemp^0,c
 15657  0165FE  0E01               	movlw	1
 15658  016600  5E32               	subwf	btemp^0,f,c
 15659  016602  0EFF               	movlw	-1
 15660  016604  0060  F0CB  FFE3   	movff	btemp,plusw1
 15661  01660A  A4D8               	btfss	status,2,c
 15662  01660C  D7B3               	goto	u6090
 15663  01660E                     u6110:
 15664                           
 15665                           ;stkvar	_sign @ sp[(-4)+2]
 15666  01660E  0EFE               	movlw	-2
 15667  016610  50E3               	movf	plusw1,w,c
 15668  016612  B4D8               	btfsc	status,2,c
 15669  016614  D006               	goto	l7075
 15670                           
 15671                           ;stkvar	_quotient @ sp[(-4)+0]
 15672                           ;stkvar	_quotient @ sp[(-4)+0]
 15673  016616  0EFC               	movlw	-4
 15674  016618  6CE3               	negf	plusw1,c
 15675  01661A  0EFD               	movlw	-3
 15676  01661C  1EE3               	comf	plusw1,f,c
 15677  01661E  B0D8               	btfsc	status,0,c
 15678  016620  2AE3               	incf	plusw1,f,c
 15679  016622                     l7075:
 15680                           
 15681                           ;stkvar	_quotient @ sp[(-4)+0]
 15682  016622  0EFC               	movlw	-4
 15683  016624  006F FF8C  F032    	movff	plusw1,btemp
 15684  01662A  0EFD               	movlw	-3
 15685  01662C  006F FF8C  F033    	movff	plusw1,btemp+1
 15686                           
 15687                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15688  016632  0EF8               	movlw	248
 15689  016634  26E1               	addwf	fsr1l,f,c
 15690  016636  0EFF               	movlw	255
 15691  016638  22E2               	addwfc	fsr1h,f,c
 15692  01663A  0012               	return		;funcret
 15693  01663C                     __end_of___awdiv:
 15694                           	opt callstack 0
 15695                           
 15696 ;; *************** function _dtoa *****************
 15697 ;; Defined at:
 15698 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15699 ;; Parameters:    Size  Location     Type
 15700 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15701 ;;		 -> f(6), NULL(0), 
 15702 ;;  d               8  [STACK] long long 
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;  n               8  [STACK] long long 
 15705 ;;  i               2  [STACK] int 
 15706 ;;  s               2  [STACK] int 
 15707 ;;  w               2  [STACK] int 
 15708 ;;  p               2  [STACK] int 
 15709 ;; Return value:  Size  Location     Type
 15710 ;;                  2  [STACK] int 
 15711 ;; Registers used:
 15712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 15713 ;; Tracked objects:
 15714 ;;		On entry : 0/5
 15715 ;;		On exit  : 0/0
 15716 ;;		Unchanged: 0/0
 15717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15722 ;;Total ram usage:        0 bytes
 15723 ;; Hardware stack levels used:    1
 15724 ;; Hardware stack levels required when called:   11
 15725 ;; This function calls:
 15726 ;;		___aodiv
 15727 ;;		___aomod
 15728 ;;		_abs
 15729 ;;		_pad
 15730 ;; This function is called by:
 15731 ;;		_vfpfcnvrt
 15732 ;; This function uses a reentrant model
 15733 ;;
 15734                           
 15735                           	psect	text59
 15736  013D88                     __ptext59:
 15737                           	opt callstack 0
 15738  013D88                     _dtoa:
 15739                           	opt callstack 0
 15740                           
 15741                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15742  013D88  0E12               	movlw	18
 15743  013D8A  26E1               	addwf	fsr1l,f,c
 15744  013D8C  0E00               	movlw	0
 15745  013D8E  22E2               	addwfc	fsr1h,f,c
 15746                           
 15747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 15748                           ;stkvar	_d @ sp[(-18)+-10]
 15749                           
 15750                           ;incstack = 0
 15751  013D90  0EE4               	movlw	228
 15752  013D92  24E1               	addwf	fsr1l,w,c
 15753  013D94  6ED9               	movwf	fsr2l,c
 15754  013D96  0EFF               	movlw	255
 15755  013D98  20E2               	addwfc	fsr1h,w,c
 15756  013D9A  6EDA               	movwf	fsr2h,c
 15757                           
 15758                           ;stkvar	_n @ sp[(-18)+2]
 15759  013D9C  0E08               	movlw	8
 15760  013D9E  6E32               	movwf	btemp^0,c
 15761  013DA0  0EF0               	movlw	-16
 15762  013DA2                     us908999:
 15763  013DA2  006F FF7B FFE3     	movff	postinc2,plusw1
 15764  013DA8  28E8               	incf	wreg,w,c
 15765  013DAA  2E32               	decfsz	btemp^0,f,c
 15766  013DAC  D7FA               	bra	us908999
 15767                           
 15768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 15769                           ;stkvar	_n @ sp[(-18)+2]
 15770  013DAE  0EF7               	movlw	-9
 15771  013DB0  AEE3               	btfss	plusw1,7,c
 15772  013DB2  D002               	goto	u9090
 15773  013DB4  0E01               	movlw	1
 15774  013DB6  D001               	goto	u9100
 15775  013DB8                     u9090:
 15776  013DB8  0E00               	movlw	0
 15777  013DBA                     u9100:
 15778  013DBA  6E3C               	movwf	(btemp+10)^0,c
 15779  013DBC  6A3D               	clrf	(btemp+11)^0,c
 15780                           
 15781                           ;stkvar	_s @ sp[(-18)+12]
 15782  013DBE  0EFA               	movlw	-6
 15783  013DC0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15784  013DC6  0EFB               	movlw	-5
 15785  013DC8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15786                           
 15787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 15788                           ;stkvar	_s @ sp[(-18)+12]
 15789  013DCE  0EFA               	movlw	-6
 15790  013DD0  006F FF8C  F032    	movff	plusw1,btemp
 15791  013DD6  0EFB               	movlw	-5
 15792  013DD8  50E3               	movf	plusw1,w,c
 15793  013DDA  1032               	iorwf	btemp^0,w,c
 15794  013DDC  B4D8               	btfsc	status,2,c
 15795  013DDE  D025               	goto	u9120
 15796                           
 15797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 15798                           ;stkvar	_n @ sp[(-18)+2]
 15799                           ;stkvar	_n @ sp[(-18)+2]
 15800  013DE0  0EF0               	movlw	-16
 15801  013DE2  6CE3               	negf	plusw1,c
 15802  013DE4  0EF1               	movlw	-15
 15803  013DE6  1EE3               	comf	plusw1,f,c
 15804  013DE8  0EF2               	movlw	-14
 15805  013DEA  1EE3               	comf	plusw1,f,c
 15806  013DEC  0EF3               	movlw	-13
 15807  013DEE  1EE3               	comf	plusw1,f,c
 15808  013DF0  0EF4               	movlw	-12
 15809  013DF2  1EE3               	comf	plusw1,f,c
 15810  013DF4  0EF5               	movlw	-11
 15811  013DF6  1EE3               	comf	plusw1,f,c
 15812  013DF8  0EF6               	movlw	-10
 15813  013DFA  1EE3               	comf	plusw1,f,c
 15814  013DFC  0EF7               	movlw	-9
 15815  013DFE  1EE3               	comf	plusw1,f,c
 15816  013E00  E314               	bnc	u9120
 15817  013E02  0EF1               	movlw	-15
 15818  013E04  2AE3               	incf	plusw1,f,c
 15819  013E06  E311               	bnc	u9120
 15820  013E08  0EF2               	movlw	-14
 15821  013E0A  2AE3               	incf	plusw1,f,c
 15822  013E0C  E30E               	bnc	u9120
 15823  013E0E  0EF3               	movlw	-13
 15824  013E10  2AE3               	incf	plusw1,f,c
 15825  013E12  E30B               	bnc	u9120
 15826  013E14  0EF4               	movlw	-12
 15827  013E16  2AE3               	incf	plusw1,f,c
 15828  013E18  E308               	bnc	u9120
 15829  013E1A  0EF5               	movlw	-11
 15830  013E1C  2AE3               	incf	plusw1,f,c
 15831  013E1E  E305               	bnc	u9120
 15832  013E20  0EF6               	movlw	-10
 15833  013E22  2AE3               	incf	plusw1,f,c
 15834  013E24  E302               	bnc	u9120
 15835  013E26  0EF7               	movlw	-9
 15836  013E28  2AE3               	incf	plusw1,f,c
 15837  013E2A                     u9120:
 15838                           
 15839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 15840  013E2A  AE1E               	btfss	(_prec+1)^0,7,c
 15841                           
 15842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 15843  013E2C  921F               	bcf	_flags^0,1,c
 15844                           
 15845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 15846  013E2E  BE1E               	btfsc	(_prec+1)^0,7,c
 15847  013E30  D005               	goto	u9140
 15848  013E32  501E               	movf	(_prec+1)^0,w,c
 15849  013E34  E110               	bnz	l9557
 15850  013E36  041D               	decf	_prec^0,w,c
 15851  013E38  B0D8               	btfsc	status,0,c
 15852  013E3A  D00D               	goto	l9557
 15853  013E3C                     u9140:
 15854  013E3C  0E01               	movlw	1
 15855  013E3E  6E3C               	movwf	(btemp+10)^0,c
 15856  013E40  0E00               	movlw	0
 15857  013E42  6E3D               	movwf	(btemp+11)^0,c
 15858                           
 15859                           ;stkvar	_p @ sp[(-18)+16]
 15860  013E44  0EFE               	movlw	-2
 15861  013E46  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15862  013E4C  0EFF               	movlw	-1
 15863  013E4E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15864  013E54  D008               	goto	l1864
 15865  013E56                     l9557:
 15866                           
 15867                           ;stkvar	_p @ sp[(-18)+16]
 15868  013E56  0EFE               	movlw	-2
 15869  013E58  0060  F077  FFE3   	movff	_prec,plusw1
 15870  013E5E  0EFF               	movlw	-1
 15871  013E60  0060  F07B  FFE3   	movff	_prec+1,plusw1
 15872  013E66                     l1864:
 15873                           
 15874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 15875                           ;stkvar	_w @ sp[(-18)+14]
 15876  013E66  0EFC               	movlw	-4
 15877  013E68  0060  F06F  FFE3   	movff	_width,plusw1
 15878  013E6E  0EFD               	movlw	-3
 15879  013E70  0060  F073  FFE3   	movff	_width+1,plusw1
 15880                           
 15881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 15882                           ;stkvar	_s @ sp[(-18)+12]
 15883  013E76  0EFA               	movlw	-6
 15884  013E78  006F FF8C  F032    	movff	plusw1,btemp
 15885  013E7E  0EFB               	movlw	-5
 15886  013E80  50E3               	movf	plusw1,w,c
 15887  013E82  1032               	iorwf	btemp^0,w,c
 15888  013E84  A4D8               	btfss	status,2,c
 15889  013E86  D002               	goto	u9160
 15890  013E88  A41F               	btfss	_flags^0,2,c
 15891  013E8A  D00A               	goto	l9565
 15892  013E8C                     u9160:
 15893                           
 15894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 15895                           ;stkvar	_w @ sp[(-18)+14]
 15896  013E8C  50E1               	movf	fsr1l,w,c
 15897  013E8E  0FFC               	addlw	-4
 15898  013E90  6ED9               	movwf	fsr2l,c
 15899  013E92  50E2               	movf	fsr1h,w,c
 15900  013E94  6EDA               	movwf	fsr2h,c
 15901  013E96  0EFF               	movlw	255
 15902  013E98  22DA               	addwfc	fsr2h,f,c
 15903  013E9A  06DE               	decf	postinc2,f,c
 15904  013E9C  0E00               	movlw	0
 15905  013E9E  5ADD               	subwfb	postdec2,f,c
 15906  013EA0                     l9565:
 15907                           
 15908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 15909  013EA0  0E4F               	movlw	79
 15910  013EA2  6E3C               	movwf	(btemp+10)^0,c
 15911  013EA4  0E00               	movlw	0
 15912  013EA6  6E3D               	movwf	(btemp+11)^0,c
 15913                           
 15914                           ;stkvar	_i @ sp[(-18)+10]
 15915  013EA8  0EF8               	movlw	-8
 15916  013EAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15917  013EB0  0EF9               	movlw	-7
 15918  013EB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15919                           
 15920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 15921  013EB8  0101               	movlb	1	; () banked
 15922  013EBA  6BCB               	clrf	(_dbuf+79)& (0+255),b
 15923                           
 15924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15925  013EBC  D109               	goto	l9579
 15926  013EBE                     l9569:
 15927                           
 15928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 15929                           ;stkvar	_i @ sp[(-18)+10]
 15930  013EBE  50E1               	movf	fsr1l,w,c
 15931  013EC0  0FF8               	addlw	-8
 15932  013EC2  6ED9               	movwf	fsr2l,c
 15933  013EC4  50E2               	movf	fsr1h,w,c
 15934  013EC6  6EDA               	movwf	fsr2h,c
 15935  013EC8  0EFF               	movlw	255
 15936  013ECA  22DA               	addwfc	fsr2h,f,c
 15937  013ECC  06DE               	decf	postinc2,f,c
 15938  013ECE  0E00               	movlw	0
 15939  013ED0  5ADD               	subwfb	postdec2,f,c
 15940                           
 15941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 15942  013ED2  0E0A               	movlw	10
 15943  013ED4  6EE6               	movwf	postinc1,c
 15944  013ED6  0E00               	movlw	0
 15945  013ED8  6EE6               	movwf	postinc1,c
 15946  013EDA  0E00               	movlw	0
 15947  013EDC  6EE6               	movwf	postinc1,c
 15948  013EDE  0E00               	movlw	0
 15949  013EE0  6EE6               	movwf	postinc1,c
 15950  013EE2  0E00               	movlw	0
 15951  013EE4  6EE6               	movwf	postinc1,c
 15952  013EE6  0E00               	movlw	0
 15953  013EE8  6EE6               	movwf	postinc1,c
 15954  013EEA  0E00               	movlw	0
 15955  013EEC  6EE6               	movwf	postinc1,c
 15956  013EEE  0E00               	movlw	0
 15957  013EF0  6EE6               	movwf	postinc1,c
 15958                           
 15959                           ;stkvar	_n @ sp[(-26)+2]
 15960  013EF2  50E1               	movf	fsr1l,w,c
 15961  013EF4  0FE8               	addlw	-24
 15962  013EF6  6ED9               	movwf	fsr2l,c
 15963  013EF8  50E2               	movf	fsr1h,w,c
 15964  013EFA  6EDA               	movwf	fsr2h,c
 15965  013EFC  0EFF               	movlw	255
 15966  013EFE  22DA               	addwfc	fsr2h,f,c
 15967  013F00  006F FF7B FFE6     	movff	postinc2,postinc1
 15968  013F06  006F FF7B FFE6     	movff	postinc2,postinc1
 15969  013F0C  006F FF7B FFE6     	movff	postinc2,postinc1
 15970  013F12  006F FF7B FFE6     	movff	postinc2,postinc1
 15971  013F18  006F FF7B FFE6     	movff	postinc2,postinc1
 15972  013F1E  006F FF7B FFE6     	movff	postinc2,postinc1
 15973  013F24  006F FF7B FFE6     	movff	postinc2,postinc1
 15974  013F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 15975  013F30  EC48  F0AB         	call	___aomod	;wreg free
 15976  013F34  52E5               	movf	postdec1,f,c
 15977  013F36  006F FF9C  F049    	movff	indf1,btemp+23
 15978  013F3C  52E5               	movf	postdec1,f,c
 15979  013F3E  006F FF9C  F048    	movff	indf1,btemp+22
 15980  013F44  52E5               	movf	postdec1,f,c
 15981  013F46  006F FF9C  F047    	movff	indf1,btemp+21
 15982  013F4C  52E5               	movf	postdec1,f,c
 15983  013F4E  006F FF9C  F046    	movff	indf1,btemp+20
 15984  013F54  52E5               	movf	postdec1,f,c
 15985  013F56  006F FF9C  F045    	movff	indf1,btemp+19
 15986  013F5C  52E5               	movf	postdec1,f,c
 15987  013F5E  006F FF9C  F044    	movff	indf1,btemp+18
 15988  013F64  52E5               	movf	postdec1,f,c
 15989  013F66  006F FF9C  F043    	movff	indf1,btemp+17
 15990  013F6C  52E5               	movf	postdec1,f,c
 15991  013F6E  006F FF9C  F042    	movff	indf1,btemp+16
 15992  013F74  0EF8               	movlw	248
 15993  013F76  26E1               	addwf	fsr1l,f,c
 15994  013F78  0EFF               	movlw	255
 15995  013F7A  22E2               	addwfc	fsr1h,f,c
 15996  013F7C  0060  F108  F03C   	movff	btemp+16,btemp+10
 15997  013F82  0060  F10C  F03D   	movff	btemp+17,btemp+11
 15998  013F88  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 15999  013F8E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16000  013F94  EC0C  F0C0         	call	_abs	;wreg free
 16001  013F98  0E30               	movlw	48
 16002  013F9A  2632               	addwf	btemp^0,f,c
 16003                           
 16004                           ;stkvar	_i @ sp[(-18)+10]
 16005  013F9C  0EF8               	movlw	-8
 16006  013F9E  006F FF8C  F03C    	movff	plusw1,btemp+10
 16007  013FA4  0EF9               	movlw	-7
 16008  013FA6  006F FF8C  F03D    	movff	plusw1,btemp+11
 16009  013FAC  0E7C               	movlw	low _dbuf
 16010  013FAE  243C               	addwf	(btemp+10)^0,w,c
 16011  013FB0  6ED9               	movwf	fsr2l,c
 16012  013FB2  0E01               	movlw	high _dbuf
 16013  013FB4  203D               	addwfc	(btemp+11)^0,w,c
 16014  013FB6  6EDA               	movwf	fsr2h,c
 16015  013FB8  0060  F0CB  FFDF   	movff	btemp,indf2
 16016                           
 16017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16018                           ;stkvar	_p @ sp[(-18)+16]
 16019  013FBE  50E1               	movf	fsr1l,w,c
 16020  013FC0  0FFE               	addlw	-2
 16021  013FC2  6ED9               	movwf	fsr2l,c
 16022  013FC4  50E2               	movf	fsr1h,w,c
 16023  013FC6  6EDA               	movwf	fsr2h,c
 16024  013FC8  0EFF               	movlw	255
 16025  013FCA  22DA               	addwfc	fsr2h,f,c
 16026  013FCC  06DE               	decf	postinc2,f,c
 16027  013FCE  0E00               	movlw	0
 16028  013FD0  5ADD               	subwfb	postdec2,f,c
 16029                           
 16030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16031                           ;stkvar	_w @ sp[(-18)+14]
 16032  013FD2  50E1               	movf	fsr1l,w,c
 16033  013FD4  0FFC               	addlw	-4
 16034  013FD6  6ED9               	movwf	fsr2l,c
 16035  013FD8  50E2               	movf	fsr1h,w,c
 16036  013FDA  6EDA               	movwf	fsr2h,c
 16037  013FDC  0EFF               	movlw	255
 16038  013FDE  22DA               	addwfc	fsr2h,f,c
 16039  013FE0  06DE               	decf	postinc2,f,c
 16040  013FE2  0E00               	movlw	0
 16041  013FE4  5ADD               	subwfb	postdec2,f,c
 16042                           
 16043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16044  013FE6  0E0A               	movlw	10
 16045  013FE8  6EE6               	movwf	postinc1,c
 16046  013FEA  0E00               	movlw	0
 16047  013FEC  6EE6               	movwf	postinc1,c
 16048  013FEE  0E00               	movlw	0
 16049  013FF0  6EE6               	movwf	postinc1,c
 16050  013FF2  0E00               	movlw	0
 16051  013FF4  6EE6               	movwf	postinc1,c
 16052  013FF6  0E00               	movlw	0
 16053  013FF8  6EE6               	movwf	postinc1,c
 16054  013FFA  0E00               	movlw	0
 16055  013FFC  6EE6               	movwf	postinc1,c
 16056  013FFE  0E00               	movlw	0
 16057  014000  6EE6               	movwf	postinc1,c
 16058  014002  0E00               	movlw	0
 16059  014004  6EE6               	movwf	postinc1,c
 16060                           
 16061                           ;stkvar	_n @ sp[(-26)+2]
 16062  014006  50E1               	movf	fsr1l,w,c
 16063  014008  0FE8               	addlw	-24
 16064  01400A  6ED9               	movwf	fsr2l,c
 16065  01400C  50E2               	movf	fsr1h,w,c
 16066  01400E  6EDA               	movwf	fsr2h,c
 16067  014010  0EFF               	movlw	255
 16068  014012  22DA               	addwfc	fsr2h,f,c
 16069  014014  006F FF7B FFE6     	movff	postinc2,postinc1
 16070  01401A  006F FF7B FFE6     	movff	postinc2,postinc1
 16071  014020  006F FF7B FFE6     	movff	postinc2,postinc1
 16072  014026  006F FF7B FFE6     	movff	postinc2,postinc1
 16073  01402C  006F FF7B FFE6     	movff	postinc2,postinc1
 16074  014032  006F FF7B FFE6     	movff	postinc2,postinc1
 16075  014038  006F FF7B FFE6     	movff	postinc2,postinc1
 16076  01403E  006F FF7B FFE6     	movff	postinc2,postinc1
 16077  014044  ECCE  F0A8         	call	___aodiv	;wreg free
 16078  014048  52E5               	movf	postdec1,f,c
 16079  01404A  006F FF9C  F049    	movff	indf1,btemp+23
 16080  014050  52E5               	movf	postdec1,f,c
 16081  014052  006F FF9C  F048    	movff	indf1,btemp+22
 16082  014058  52E5               	movf	postdec1,f,c
 16083  01405A  006F FF9C  F047    	movff	indf1,btemp+21
 16084  014060  52E5               	movf	postdec1,f,c
 16085  014062  006F FF9C  F046    	movff	indf1,btemp+20
 16086  014068  52E5               	movf	postdec1,f,c
 16087  01406A  006F FF9C  F045    	movff	indf1,btemp+19
 16088  014070  52E5               	movf	postdec1,f,c
 16089  014072  006F FF9C  F044    	movff	indf1,btemp+18
 16090  014078  52E5               	movf	postdec1,f,c
 16091  01407A  006F FF9C  F043    	movff	indf1,btemp+17
 16092  014080  52E5               	movf	postdec1,f,c
 16093  014082  006F FF9C  F042    	movff	indf1,btemp+16
 16094  014088  0EF8               	movlw	248
 16095  01408A  26E1               	addwf	fsr1l,f,c
 16096  01408C  0EFF               	movlw	255
 16097  01408E  22E2               	addwfc	fsr1h,f,c
 16098                           
 16099                           ;stkvar	_n @ sp[(-18)+2]
 16100  014090  0EF0               	movlw	-16
 16101  014092  0060  F10B  FFE3   	movff	btemp+16,plusw1
 16102  014098  0EF1               	movlw	-15
 16103  01409A  0060  F10F  FFE3   	movff	btemp+17,plusw1
 16104  0140A0  0EF2               	movlw	-14
 16105  0140A2  0060  F113  FFE3   	movff	btemp+18,plusw1
 16106  0140A8  0EF3               	movlw	-13
 16107  0140AA  0060  F117  FFE3   	movff	btemp+19,plusw1
 16108  0140B0  0EF4               	movlw	-12
 16109  0140B2  0060  F11B  FFE3   	movff	btemp+20,plusw1
 16110  0140B8  0EF5               	movlw	-11
 16111  0140BA  0060  F11F  FFE3   	movff	btemp+21,plusw1
 16112  0140C0  0EF6               	movlw	-10
 16113  0140C2  0060  F123  FFE3   	movff	btemp+22,plusw1
 16114  0140C8  0EF7               	movlw	-9
 16115  0140CA  0060  F127  FFE3   	movff	btemp+23,plusw1
 16116  0140D0                     l9579:
 16117                           
 16118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16119                           ;stkvar	_i @ sp[(-18)+10]
 16120  0140D0  0EF9               	movlw	-7
 16121  0140D2  BEE3               	btfsc	plusw1,7,c
 16122  0140D4  D036               	goto	u9210
 16123  0140D6  0EF9               	movlw	-7
 16124  0140D8  50E3               	movf	plusw1,w,c
 16125  0140DA  E104               	bnz	u9170
 16126  0140DC  0EF8               	movlw	-8
 16127  0140DE  04E3               	decf	plusw1,w,c
 16128  0140E0  A0D8               	btfss	status,0,c
 16129  0140E2  D02F               	goto	u9210
 16130  0140E4                     u9170:
 16131                           
 16132                           ;stkvar	_n @ sp[(-18)+2]
 16133  0140E4  0EF0               	movlw	-16
 16134  0140E6  50E3               	movf	plusw1,w,c
 16135  0140E8  E115               	bnz	u9181
 16136  0140EA  0EF1               	movlw	-15
 16137  0140EC  50E3               	movf	plusw1,w,c
 16138  0140EE  E112               	bnz	u9181
 16139  0140F0  0EF2               	movlw	-14
 16140  0140F2  50E3               	movf	plusw1,w,c
 16141  0140F4  E10F               	bnz	u9181
 16142  0140F6  0EF3               	movlw	-13
 16143  0140F8  50E3               	movf	plusw1,w,c
 16144  0140FA  E10C               	bnz	u9181
 16145  0140FC  0EF4               	movlw	-12
 16146  0140FE  50E3               	movf	plusw1,w,c
 16147  014100  E109               	bnz	u9181
 16148  014102  0EF5               	movlw	-11
 16149  014104  50E3               	movf	plusw1,w,c
 16150  014106  E106               	bnz	u9181
 16151  014108  0EF6               	movlw	-10
 16152  01410A  50E3               	movf	plusw1,w,c
 16153  01410C  E103               	bnz	u9181
 16154  01410E  0EF7               	movlw	-9
 16155  014110  50E3               	movf	plusw1,w,c
 16156  014112  A4D8               	btfss	status,2,c
 16157  014114                     u9181:
 16158  014114  D6D4               	goto	l9569
 16159                           
 16160                           ;stkvar	_p @ sp[(-18)+16]
 16161  014116  0EFF               	movlw	-1
 16162  014118  BEE3               	btfsc	plusw1,7,c
 16163  01411A  D007               	goto	u9190
 16164  01411C  0EFF               	movlw	-1
 16165  01411E  50E3               	movf	plusw1,w,c
 16166  014120  E103               	bnz	u9191
 16167  014122  0EFE               	movlw	-2
 16168  014124  04E3               	decf	plusw1,w,c
 16169  014126  B0D8               	btfsc	status,0,c
 16170  014128                     u9191:
 16171  014128  D6CA               	goto	l9569
 16172  01412A                     u9190:
 16173                           
 16174                           ;stkvar	_w @ sp[(-18)+14]
 16175  01412A  0EFD               	movlw	-3
 16176  01412C  BEE3               	btfsc	plusw1,7,c
 16177  01412E  D009               	goto	u9210
 16178  014130  0EFD               	movlw	-3
 16179  014132  50E3               	movf	plusw1,w,c
 16180  014134  E104               	bnz	u9200
 16181  014136  0EFC               	movlw	-4
 16182  014138  04E3               	decf	plusw1,w,c
 16183  01413A  A0D8               	btfss	status,0,c
 16184  01413C  D002               	goto	u9210
 16185  01413E                     u9200:
 16186  01413E  B21F               	btfsc	_flags^0,1,c
 16187  014140  D6BE               	goto	l9569
 16188  014142                     u9210:
 16189                           
 16190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16191                           ;stkvar	_s @ sp[(-18)+12]
 16192  014142  0EFA               	movlw	-6
 16193  014144  006F FF8C  F032    	movff	plusw1,btemp
 16194  01414A  0EFB               	movlw	-5
 16195  01414C  50E3               	movf	plusw1,w,c
 16196  01414E  1032               	iorwf	btemp^0,w,c
 16197  014150  A4D8               	btfss	status,2,c
 16198  014152  D002               	goto	u9230
 16199  014154  A41F               	btfss	_flags^0,2,c
 16200  014156  D033               	goto	l9603
 16201  014158                     u9230:
 16202                           
 16203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 16204                           ;stkvar	_i @ sp[(-18)+10]
 16205  014158  50E1               	movf	fsr1l,w,c
 16206  01415A  0FF8               	addlw	-8
 16207  01415C  6ED9               	movwf	fsr2l,c
 16208  01415E  50E2               	movf	fsr1h,w,c
 16209  014160  6EDA               	movwf	fsr2h,c
 16210  014162  0EFF               	movlw	255
 16211  014164  22DA               	addwfc	fsr2h,f,c
 16212  014166  06DE               	decf	postinc2,f,c
 16213  014168  0E00               	movlw	0
 16214  01416A  5ADD               	subwfb	postdec2,f,c
 16215                           
 16216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 16217                           ;stkvar	_s @ sp[(-18)+12]
 16218  01416C  0EFA               	movlw	-6
 16219  01416E  006F FF8C  F032    	movff	plusw1,btemp
 16220  014174  0EFB               	movlw	-5
 16221  014176  50E3               	movf	plusw1,w,c
 16222  014178  1032               	iorwf	btemp^0,w,c
 16223  01417A  A4D8               	btfss	status,2,c
 16224  01417C  D002               	goto	l9599
 16225  01417E  0E2B               	movlw	43
 16226  014180  D001               	goto	L15
 16227  014182                     l9599:
 16228  014182  0E2D               	movlw	45
 16229  014184                     L15:
 16230  014184  6E3C               	movwf	(btemp+10)^0,c
 16231  014186  0E00               	movlw	0
 16232  014188  6E3D               	movwf	(btemp+11)^0,c
 16233                           
 16234                           ;stkvar	_dtoa$4484 @ sp[(-18)+0]
 16235  01418A  0EEE               	movlw	-18
 16236  01418C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16237  014192  0EEF               	movlw	-17
 16238  014194  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16239                           
 16240                           ;stkvar	_dtoa$4484 @ sp[(-18)+0]
 16241                           ;stkvar	_i @ sp[(-18)+10]
 16242  01419A  0EF8               	movlw	-8
 16243  01419C  006F FF8C  F03C    	movff	plusw1,btemp+10
 16244  0141A2  0EF9               	movlw	-7
 16245  0141A4  006F FF8C  F03D    	movff	plusw1,btemp+11
 16246  0141AA  0E7C               	movlw	low _dbuf
 16247  0141AC  243C               	addwf	(btemp+10)^0,w,c
 16248  0141AE  6ED9               	movwf	fsr2l,c
 16249  0141B0  0E01               	movlw	high _dbuf
 16250  0141B2  203D               	addwfc	(btemp+11)^0,w,c
 16251  0141B4  6EDA               	movwf	fsr2h,c
 16252  0141B6  0EEE               	movlw	-18
 16253  0141B8  006F FF8F FFDF     	movff	plusw1,indf2
 16254  0141BE                     l9603:
 16255                           
 16256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 16257                           ;stkvar	_w @ sp[(-18)+14]
 16258  0141BE  0EFC               	movlw	-4
 16259  0141C0  006F FF8F FFE6     	movff	plusw1,postinc1
 16260  0141C6  006F FF8F FFE6     	movff	plusw1,postinc1
 16261                           
 16262                           ;stkvar	_i @ sp[(-20)+10]
 16263  0141CC  0E7C               	movlw	low _dbuf
 16264  0141CE  6E3C               	movwf	(btemp+10)^0,c
 16265  0141D0  0E01               	movlw	high _dbuf
 16266  0141D2  6E3D               	movwf	(btemp+11)^0,c
 16267  0141D4  0EF6               	movlw	-10
 16268  0141D6  50E3               	movf	plusw1,w,c
 16269  0141D8  263C               	addwf	(btemp+10)^0,f,c
 16270  0141DA  0EF7               	movlw	-9
 16271  0141DC  50E3               	movf	plusw1,w,c
 16272  0141DE  223D               	addwfc	(btemp+11)^0,f,c
 16273  0141E0  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16274  0141E6  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16275                           
 16276                           ;stkvar	_fp @ sp[(-22)+-2]
 16277  0141EC  0EE8               	movlw	-24
 16278  0141EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16279  0141F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16280  0141FA  EC77  F0B5         	call	_pad	;wreg free
 16281                           
 16282                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16283  0141FE  0EE4               	movlw	228
 16284  014200  26E1               	addwf	fsr1l,f,c
 16285  014202  0EFF               	movlw	255
 16286  014204  22E2               	addwfc	fsr1h,f,c
 16287  014206  0012               	return		;funcret
 16288  014208                     __end_of_dtoa:
 16289                           	opt callstack 0
 16290                           
 16291 ;; *************** function _abs *****************
 16292 ;; Defined at:
 16293 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;  a               2  [STACK] int 
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;		None
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  2  [STACK] int 
 16300 ;; Registers used:
 16301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/1
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16311 ;;Total ram usage:        0 bytes
 16312 ;; Hardware stack levels used:    1
 16313 ;; Hardware stack levels required when called:    6
 16314 ;; This function calls:
 16315 ;;		Nothing
 16316 ;; This function is called by:
 16317 ;;		_dtoa
 16318 ;; This function uses a reentrant model
 16319 ;;
 16320                           
 16321                           	psect	text60
 16322  018018                     __ptext60:
 16323                           	opt callstack 0
 16324  018018                     _abs:
 16325                           	opt callstack 17
 16326                           
 16327                           ;stkvar	_a @ sp[(0)+-2]
 16328                           
 16329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16330                           ;incstack = 0
 16331  018018  0EFF               	movlw	-1
 16332  01801A  BEE3               	btfsc	plusw1,7,c
 16333  01801C  D007               	goto	u5070
 16334  01801E  0EFF               	movlw	-1
 16335  018020  50E3               	movf	plusw1,w,c
 16336  018022  E112               	bnz	l6529
 16337  018024  0EFE               	movlw	-2
 16338  018026  04E3               	decf	plusw1,w,c
 16339  018028  B0D8               	btfsc	status,0,c
 16340  01802A  D00E               	goto	l6529
 16341  01802C                     u5070:
 16342                           
 16343                           ;stkvar	_a @ sp[(0)+-2]
 16344  01802C  0EFE               	movlw	-2
 16345  01802E  006F FF8C  F032    	movff	plusw1,btemp
 16346  018034  1E32               	comf	btemp^0,f,c
 16347  018036  0EFF               	movlw	-1
 16348  018038  006F FF8C  F033    	movff	plusw1,btemp+1
 16349  01803E  1E33               	comf	(btemp+1)^0,f,c
 16350  018040  2A32               	incf	btemp^0,f,c
 16351  018042  B4D8               	btfsc	status,2,c
 16352  018044  2A33               	incf	(btemp+1)^0,f,c
 16353  018046  D008               	goto	l2767
 16354  018048                     l6529:
 16355                           
 16356                           ;stkvar	_a @ sp[(0)+-2]
 16357  018048  0EFE               	movlw	-2
 16358  01804A  006F FF8C  F032    	movff	plusw1,btemp
 16359  018050  0EFF               	movlw	-1
 16360  018052  006F FF8C  F033    	movff	plusw1,btemp+1
 16361  018058                     l2767:
 16362                           
 16363                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 16364  018058  52E5               	movf	postdec1,f,c
 16365  01805A  52E5               	movf	postdec1,f,c
 16366  01805C  0012               	return		;funcret
 16367  01805E                     __end_of_abs:
 16368                           	opt callstack 0
 16369                           
 16370 ;; *************** function ___aomod *****************
 16371 ;; Defined at:
 16372 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 16373 ;; Parameters:    Size  Location     Type
 16374 ;;  dividend        8  [STACK] long long 
 16375 ;;  divisor         8  [STACK] long long 
 16376 ;; Auto vars:     Size  Location     Type
 16377 ;;  sign            1  [STACK] unsigned char 
 16378 ;;  counter         1  [STACK] unsigned char 
 16379 ;; Return value:  Size  Location     Type
 16380 ;;                  8  [STACK] long long 
 16381 ;; Registers used:
 16382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16383 ;; Tracked objects:
 16384 ;;		On entry : 0/1
 16385 ;;		On exit  : 0/0
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16392 ;;Total ram usage:        0 bytes
 16393 ;; Hardware stack levels used:    1
 16394 ;; Hardware stack levels required when called:    6
 16395 ;; This function calls:
 16396 ;;		Nothing
 16397 ;; This function is called by:
 16398 ;;		_dtoa
 16399 ;; This function uses a reentrant model
 16400 ;;
 16401                           
 16402                           	psect	text61
 16403  015690                     __ptext61:
 16404                           	opt callstack 0
 16405  015690                     ___aomod:
 16406                           	opt callstack 0
 16407                           
 16408                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16409  015690  52E6               	movf	postinc1,f,c
 16410  015692  52E6               	movf	postinc1,f,c
 16411                           
 16412                           ;stkvar	_sign @ sp[(-2)+0]
 16413                           
 16414                           ;incstack = 0
 16415  015694  0EFE               	movlw	-2
 16416  015696  6AE3               	clrf	plusw1,c
 16417                           
 16418                           ;stkvar	_dividend @ sp[(-2)+-8]
 16419  015698  0EFD               	movlw	-3
 16420  01569A  AEE3               	btfss	plusw1,7,c
 16421  01569C  D028               	goto	l6687
 16422                           
 16423                           ;stkvar	_dividend @ sp[(-2)+-8]
 16424                           ;stkvar	_dividend @ sp[(-2)+-8]
 16425  01569E  0EF6               	movlw	-10
 16426  0156A0  6CE3               	negf	plusw1,c
 16427  0156A2  0EF7               	movlw	-9
 16428  0156A4  1EE3               	comf	plusw1,f,c
 16429  0156A6  0EF8               	movlw	-8
 16430  0156A8  1EE3               	comf	plusw1,f,c
 16431  0156AA  0EF9               	movlw	-7
 16432  0156AC  1EE3               	comf	plusw1,f,c
 16433  0156AE  0EFA               	movlw	-6
 16434  0156B0  1EE3               	comf	plusw1,f,c
 16435  0156B2  0EFB               	movlw	-5
 16436  0156B4  1EE3               	comf	plusw1,f,c
 16437  0156B6  0EFC               	movlw	-4
 16438  0156B8  1EE3               	comf	plusw1,f,c
 16439  0156BA  0EFD               	movlw	-3
 16440  0156BC  1EE3               	comf	plusw1,f,c
 16441  0156BE  E314               	bnc	u5500
 16442  0156C0  0EF7               	movlw	-9
 16443  0156C2  2AE3               	incf	plusw1,f,c
 16444  0156C4  E311               	bnc	u5500
 16445  0156C6  0EF8               	movlw	-8
 16446  0156C8  2AE3               	incf	plusw1,f,c
 16447  0156CA  E30E               	bnc	u5500
 16448  0156CC  0EF9               	movlw	-7
 16449  0156CE  2AE3               	incf	plusw1,f,c
 16450  0156D0  E30B               	bnc	u5500
 16451  0156D2  0EFA               	movlw	-6
 16452  0156D4  2AE3               	incf	plusw1,f,c
 16453  0156D6  E308               	bnc	u5500
 16454  0156D8  0EFB               	movlw	-5
 16455  0156DA  2AE3               	incf	plusw1,f,c
 16456  0156DC  E305               	bnc	u5500
 16457  0156DE  0EFC               	movlw	-4
 16458  0156E0  2AE3               	incf	plusw1,f,c
 16459  0156E2  E302               	bnc	u5500
 16460  0156E4  0EFD               	movlw	-3
 16461  0156E6  2AE3               	incf	plusw1,f,c
 16462  0156E8                     u5500:
 16463                           
 16464                           ;stkvar	_sign @ sp[(-2)+0]
 16465  0156E8  0EFE               	movlw	-2
 16466  0156EA  6AE3               	clrf	plusw1,c
 16467  0156EC  2AE3               	incf	plusw1,f,c
 16468  0156EE                     l6687:
 16469                           
 16470                           ;stkvar	_divisor @ sp[(-2)+-16]
 16471  0156EE  0EF5               	movlw	-11
 16472  0156F0  AEE3               	btfss	plusw1,7,c
 16473  0156F2  D025               	goto	u5520
 16474                           
 16475                           ;stkvar	_divisor @ sp[(-2)+-16]
 16476                           ;stkvar	_divisor @ sp[(-2)+-16]
 16477  0156F4  0EEE               	movlw	-18
 16478  0156F6  6CE3               	negf	plusw1,c
 16479  0156F8  0EEF               	movlw	-17
 16480  0156FA  1EE3               	comf	plusw1,f,c
 16481  0156FC  0EF0               	movlw	-16
 16482  0156FE  1EE3               	comf	plusw1,f,c
 16483  015700  0EF1               	movlw	-15
 16484  015702  1EE3               	comf	plusw1,f,c
 16485  015704  0EF2               	movlw	-14
 16486  015706  1EE3               	comf	plusw1,f,c
 16487  015708  0EF3               	movlw	-13
 16488  01570A  1EE3               	comf	plusw1,f,c
 16489  01570C  0EF4               	movlw	-12
 16490  01570E  1EE3               	comf	plusw1,f,c
 16491  015710  0EF5               	movlw	-11
 16492  015712  1EE3               	comf	plusw1,f,c
 16493  015714  E314               	bnc	u5520
 16494  015716  0EEF               	movlw	-17
 16495  015718  2AE3               	incf	plusw1,f,c
 16496  01571A  E311               	bnc	u5520
 16497  01571C  0EF0               	movlw	-16
 16498  01571E  2AE3               	incf	plusw1,f,c
 16499  015720  E30E               	bnc	u5520
 16500  015722  0EF1               	movlw	-15
 16501  015724  2AE3               	incf	plusw1,f,c
 16502  015726  E30B               	bnc	u5520
 16503  015728  0EF2               	movlw	-14
 16504  01572A  2AE3               	incf	plusw1,f,c
 16505  01572C  E308               	bnc	u5520
 16506  01572E  0EF3               	movlw	-13
 16507  015730  2AE3               	incf	plusw1,f,c
 16508  015732  E305               	bnc	u5520
 16509  015734  0EF4               	movlw	-12
 16510  015736  2AE3               	incf	plusw1,f,c
 16511  015738  E302               	bnc	u5520
 16512  01573A  0EF5               	movlw	-11
 16513  01573C  2AE3               	incf	plusw1,f,c
 16514  01573E                     u5520:
 16515                           
 16516                           ;stkvar	_divisor @ sp[(-2)+-16]
 16517  01573E  0EEE               	movlw	-18
 16518  015740  50E3               	movf	plusw1,w,c
 16519  015742  E116               	bnz	u5530
 16520  015744  0EEF               	movlw	-17
 16521  015746  50E3               	movf	plusw1,w,c
 16522  015748  E113               	bnz	u5530
 16523  01574A  0EF0               	movlw	-16
 16524  01574C  50E3               	movf	plusw1,w,c
 16525  01574E  E110               	bnz	u5530
 16526  015750  0EF1               	movlw	-15
 16527  015752  50E3               	movf	plusw1,w,c
 16528  015754  E10D               	bnz	u5530
 16529  015756  0EF2               	movlw	-14
 16530  015758  50E3               	movf	plusw1,w,c
 16531  01575A  E10A               	bnz	u5530
 16532  01575C  0EF3               	movlw	-13
 16533  01575E  50E3               	movf	plusw1,w,c
 16534  015760  E107               	bnz	u5530
 16535  015762  0EF4               	movlw	-12
 16536  015764  50E3               	movf	plusw1,w,c
 16537  015766  E104               	bnz	u5530
 16538  015768  0EF5               	movlw	-11
 16539  01576A  50E3               	movf	plusw1,w,c
 16540  01576C  B4D8               	btfsc	status,2,c
 16541  01576E  D075               	goto	u5560
 16542  015770                     u5530:
 16543                           
 16544                           ;stkvar	_counter @ sp[(-2)+1]
 16545  015770  0EFF               	movlw	-1
 16546  015772  6AE3               	clrf	plusw1,c
 16547  015774  D012               	goto	L16
 16548  015776                     l6695:
 16549                           
 16550                           ;stkvar	_divisor @ sp[(-2)+-16]
 16551  015776  90D8               	bcf	status,0,c
 16552  015778  0EEE               	movlw	-18
 16553  01577A  36E3               	rlcf	plusw1,f,c
 16554  01577C  0EEF               	movlw	-17
 16555  01577E  36E3               	rlcf	plusw1,f,c
 16556  015780  0EF0               	movlw	-16
 16557  015782  36E3               	rlcf	plusw1,f,c
 16558  015784  0EF1               	movlw	-15
 16559  015786  36E3               	rlcf	plusw1,f,c
 16560  015788  0EF2               	movlw	-14
 16561  01578A  36E3               	rlcf	plusw1,f,c
 16562  01578C  0EF3               	movlw	-13
 16563  01578E  36E3               	rlcf	plusw1,f,c
 16564  015790  0EF4               	movlw	-12
 16565  015792  36E3               	rlcf	plusw1,f,c
 16566  015794  0EF5               	movlw	-11
 16567  015796  36E3               	rlcf	plusw1,f,c
 16568                           
 16569                           ;stkvar	_counter @ sp[(-2)+1]
 16570  015798  0EFF               	movlw	-1
 16571  01579A                     L16:
 16572  01579A  2AE3               	incf	plusw1,f,c
 16573                           
 16574                           ;stkvar	_divisor @ sp[(-2)+-16]
 16575  01579C  0EF5               	movlw	-11
 16576  01579E  AEE3               	btfss	plusw1,7,c
 16577  0157A0  D7EA               	goto	l6695
 16578  0157A2                     u5540:
 16579                           
 16580                           ;stkvar	_divisor @ sp[(-2)+-16]
 16581                           ;stkvar	_dividend @ sp[(-2)+-8]
 16582  0157A2  50E1               	movf	fsr1l,w,c
 16583  0157A4  0FF6               	addlw	-10
 16584  0157A6  6ED9               	movwf	fsr2l,c
 16585  0157A8  50E2               	movf	fsr1h,w,c
 16586  0157AA  6EDA               	movwf	fsr2h,c
 16587  0157AC  0EFF               	movlw	255
 16588  0157AE  22DA               	addwfc	fsr2h,f,c
 16589  0157B0  0EEE               	movlw	-18
 16590  0157B2  50E3               	movf	plusw1,w,c
 16591  0157B4  5CDE               	subwf	postinc2,w,c
 16592  0157B6  0EEF               	movlw	-17
 16593  0157B8  50E3               	movf	plusw1,w,c
 16594  0157BA  58DE               	subwfb	postinc2,w,c
 16595  0157BC  0EF0               	movlw	-16
 16596  0157BE  50E3               	movf	plusw1,w,c
 16597  0157C0  58DE               	subwfb	postinc2,w,c
 16598  0157C2  0EF1               	movlw	-15
 16599  0157C4  50E3               	movf	plusw1,w,c
 16600  0157C6  58DE               	subwfb	postinc2,w,c
 16601  0157C8  0EF2               	movlw	-14
 16602  0157CA  50E3               	movf	plusw1,w,c
 16603  0157CC  58DE               	subwfb	postinc2,w,c
 16604  0157CE  0EF3               	movlw	-13
 16605  0157D0  50E3               	movf	plusw1,w,c
 16606  0157D2  58DE               	subwfb	postinc2,w,c
 16607  0157D4  0EF4               	movlw	-12
 16608  0157D6  50E3               	movf	plusw1,w,c
 16609  0157D8  58DE               	subwfb	postinc2,w,c
 16610  0157DA  0EF5               	movlw	-11
 16611  0157DC  50E3               	movf	plusw1,w,c
 16612  0157DE  58DE               	subwfb	postinc2,w,c
 16613  0157E0  A0D8               	btfss	status,0,c
 16614  0157E2  D01F               	goto	l6703
 16615                           
 16616                           ;stkvar	_divisor @ sp[(-2)+-16]
 16617                           ;stkvar	_dividend @ sp[(-2)+-8]
 16618  0157E4  50E1               	movf	fsr1l,w,c
 16619  0157E6  0FF6               	addlw	-10
 16620  0157E8  6ED9               	movwf	fsr2l,c
 16621  0157EA  50E2               	movf	fsr1h,w,c
 16622  0157EC  6EDA               	movwf	fsr2h,c
 16623  0157EE  0EFF               	movlw	255
 16624  0157F0  22DA               	addwfc	fsr2h,f,c
 16625  0157F2  0EEE               	movlw	-18
 16626  0157F4  50E3               	movf	plusw1,w,c
 16627  0157F6  5EDE               	subwf	postinc2,f,c
 16628  0157F8  0EEF               	movlw	-17
 16629  0157FA  50E3               	movf	plusw1,w,c
 16630  0157FC  5ADE               	subwfb	postinc2,f,c
 16631  0157FE  0EF0               	movlw	-16
 16632  015800  50E3               	movf	plusw1,w,c
 16633  015802  5ADE               	subwfb	postinc2,f,c
 16634  015804  0EF1               	movlw	-15
 16635  015806  50E3               	movf	plusw1,w,c
 16636  015808  5ADE               	subwfb	postinc2,f,c
 16637  01580A  0EF2               	movlw	-14
 16638  01580C  50E3               	movf	plusw1,w,c
 16639  01580E  5ADE               	subwfb	postinc2,f,c
 16640  015810  0EF3               	movlw	-13
 16641  015812  50E3               	movf	plusw1,w,c
 16642  015814  5ADE               	subwfb	postinc2,f,c
 16643  015816  0EF4               	movlw	-12
 16644  015818  50E3               	movf	plusw1,w,c
 16645  01581A  5ADE               	subwfb	postinc2,f,c
 16646  01581C  0EF5               	movlw	-11
 16647  01581E  50E3               	movf	plusw1,w,c
 16648  015820  5ADE               	subwfb	postinc2,f,c
 16649  015822                     l6703:
 16650                           
 16651                           ;stkvar	_divisor @ sp[(-2)+-16]
 16652  015822  90D8               	bcf	status,0,c
 16653  015824  0EF5               	movlw	-11
 16654  015826  32E3               	rrcf	plusw1,f,c
 16655  015828  0EF4               	movlw	-12
 16656  01582A  32E3               	rrcf	plusw1,f,c
 16657  01582C  0EF3               	movlw	-13
 16658  01582E  32E3               	rrcf	plusw1,f,c
 16659  015830  0EF2               	movlw	-14
 16660  015832  32E3               	rrcf	plusw1,f,c
 16661  015834  0EF1               	movlw	-15
 16662  015836  32E3               	rrcf	plusw1,f,c
 16663  015838  0EF0               	movlw	-16
 16664  01583A  32E3               	rrcf	plusw1,f,c
 16665  01583C  0EEF               	movlw	-17
 16666  01583E  32E3               	rrcf	plusw1,f,c
 16667  015840  0EEE               	movlw	-18
 16668  015842  32E3               	rrcf	plusw1,f,c
 16669                           
 16670                           ;stkvar	_counter @ sp[(-2)+1]
 16671  015844  0EFF               	movlw	-1
 16672  015846  50E3               	movf	plusw1,w,c
 16673  015848  6E32               	movwf	btemp^0,c
 16674  01584A  0E01               	movlw	1
 16675  01584C  5E32               	subwf	btemp^0,f,c
 16676  01584E  0EFF               	movlw	-1
 16677  015850  0060  F0CB  FFE3   	movff	btemp,plusw1
 16678  015856  A4D8               	btfss	status,2,c
 16679  015858  D7A4               	goto	u5540
 16680  01585A                     u5560:
 16681                           
 16682                           ;stkvar	_sign @ sp[(-2)+0]
 16683  01585A  0EFE               	movlw	-2
 16684  01585C  50E3               	movf	plusw1,w,c
 16685  01585E  B4D8               	btfsc	status,2,c
 16686  015860  D025               	goto	u5580
 16687                           
 16688                           ;stkvar	_dividend @ sp[(-2)+-8]
 16689                           ;stkvar	_dividend @ sp[(-2)+-8]
 16690  015862  0EF6               	movlw	-10
 16691  015864  6CE3               	negf	plusw1,c
 16692  015866  0EF7               	movlw	-9
 16693  015868  1EE3               	comf	plusw1,f,c
 16694  01586A  0EF8               	movlw	-8
 16695  01586C  1EE3               	comf	plusw1,f,c
 16696  01586E  0EF9               	movlw	-7
 16697  015870  1EE3               	comf	plusw1,f,c
 16698  015872  0EFA               	movlw	-6
 16699  015874  1EE3               	comf	plusw1,f,c
 16700  015876  0EFB               	movlw	-5
 16701  015878  1EE3               	comf	plusw1,f,c
 16702  01587A  0EFC               	movlw	-4
 16703  01587C  1EE3               	comf	plusw1,f,c
 16704  01587E  0EFD               	movlw	-3
 16705  015880  1EE3               	comf	plusw1,f,c
 16706  015882  E314               	bnc	u5580
 16707  015884  0EF7               	movlw	-9
 16708  015886  2AE3               	incf	plusw1,f,c
 16709  015888  E311               	bnc	u5580
 16710  01588A  0EF8               	movlw	-8
 16711  01588C  2AE3               	incf	plusw1,f,c
 16712  01588E  E30E               	bnc	u5580
 16713  015890  0EF9               	movlw	-7
 16714  015892  2AE3               	incf	plusw1,f,c
 16715  015894  E30B               	bnc	u5580
 16716  015896  0EFA               	movlw	-6
 16717  015898  2AE3               	incf	plusw1,f,c
 16718  01589A  E308               	bnc	u5580
 16719  01589C  0EFB               	movlw	-5
 16720  01589E  2AE3               	incf	plusw1,f,c
 16721  0158A0  E305               	bnc	u5580
 16722  0158A2  0EFC               	movlw	-4
 16723  0158A4  2AE3               	incf	plusw1,f,c
 16724  0158A6  E302               	bnc	u5580
 16725  0158A8  0EFD               	movlw	-3
 16726  0158AA  2AE3               	incf	plusw1,f,c
 16727  0158AC                     u5580:
 16728                           
 16729                           ;stkvar	_dividend @ sp[(-2)+-8]
 16730  0158AC  0EF6               	movlw	246
 16731  0158AE  24E1               	addwf	fsr1l,w,c
 16732  0158B0  6ED9               	movwf	fsr2l,c
 16733  0158B2  0EFF               	movlw	255
 16734  0158B4  20E2               	addwfc	fsr1h,w,c
 16735  0158B6  6EDA               	movwf	fsr2h,c
 16736                           
 16737                           ;stkvar	?___aomod @ sp[(-2)+-8]
 16738  0158B8  0E08               	movlw	8
 16739  0158BA  6E32               	movwf	btemp^0,c
 16740  0158BC  0EF6               	movlw	-10
 16741  0158BE                     us559999:
 16742  0158BE  006F FF7B FFE3     	movff	postinc2,plusw1
 16743  0158C4  28E8               	incf	wreg,w,c
 16744  0158C6  2E32               	decfsz	btemp^0,f,c
 16745  0158C8  D7FA               	bra	us559999
 16746                           
 16747                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16748  0158CA  52E5               	movf	postdec1,f,c
 16749  0158CC  52E5               	movf	postdec1,f,c
 16750  0158CE  0012               	return		;funcret
 16751  0158D0                     __end_of___aomod:
 16752                           	opt callstack 0
 16753                           
 16754 ;; *************** function ___aodiv *****************
 16755 ;; Defined at:
 16756 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 16757 ;; Parameters:    Size  Location     Type
 16758 ;;  dividend        8  [STACK] long long 
 16759 ;;  divisor         8  [STACK] long long 
 16760 ;; Auto vars:     Size  Location     Type
 16761 ;;  quotient        8  [STACK] long long 
 16762 ;;  sign            1  [STACK] unsigned char 
 16763 ;;  counter         1  [STACK] unsigned char 
 16764 ;; Return value:  Size  Location     Type
 16765 ;;                  8  [STACK] long long 
 16766 ;; Registers used:
 16767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16768 ;; Tracked objects:
 16769 ;;		On entry : 0/1
 16770 ;;		On exit  : 0/0
 16771 ;;		Unchanged: 0/0
 16772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16777 ;;Total ram usage:        0 bytes
 16778 ;; Hardware stack levels used:    1
 16779 ;; Hardware stack levels required when called:    6
 16780 ;; This function calls:
 16781 ;;		Nothing
 16782 ;; This function is called by:
 16783 ;;		_dtoa
 16784 ;; This function uses a reentrant model
 16785 ;;
 16786                           
 16787                           	psect	text62
 16788  01519C                     __ptext62:
 16789                           	opt callstack 0
 16790  01519C                     ___aodiv:
 16791                           	opt callstack 0
 16792                           
 16793                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 16794  01519C  0E0A               	movlw	10
 16795  01519E  26E1               	addwf	fsr1l,f,c
 16796  0151A0  0E00               	movlw	0
 16797  0151A2  22E2               	addwfc	fsr1h,f,c
 16798                           
 16799                           ;stkvar	_sign @ sp[(-10)+8]
 16800                           
 16801                           ;incstack = 0
 16802  0151A4  0EFE               	movlw	-2
 16803  0151A6  6AE3               	clrf	plusw1,c
 16804                           
 16805                           ;stkvar	_divisor @ sp[(-10)+-16]
 16806  0151A8  0EED               	movlw	-19
 16807  0151AA  AEE3               	btfss	plusw1,7,c
 16808  0151AC  D028               	goto	l6643
 16809                           
 16810                           ;stkvar	_divisor @ sp[(-10)+-16]
 16811                           ;stkvar	_divisor @ sp[(-10)+-16]
 16812  0151AE  0EE6               	movlw	-26
 16813  0151B0  6CE3               	negf	plusw1,c
 16814  0151B2  0EE7               	movlw	-25
 16815  0151B4  1EE3               	comf	plusw1,f,c
 16816  0151B6  0EE8               	movlw	-24
 16817  0151B8  1EE3               	comf	plusw1,f,c
 16818  0151BA  0EE9               	movlw	-23
 16819  0151BC  1EE3               	comf	plusw1,f,c
 16820  0151BE  0EEA               	movlw	-22
 16821  0151C0  1EE3               	comf	plusw1,f,c
 16822  0151C2  0EEB               	movlw	-21
 16823  0151C4  1EE3               	comf	plusw1,f,c
 16824  0151C6  0EEC               	movlw	-20
 16825  0151C8  1EE3               	comf	plusw1,f,c
 16826  0151CA  0EED               	movlw	-19
 16827  0151CC  1EE3               	comf	plusw1,f,c
 16828  0151CE  E314               	bnc	u5380
 16829  0151D0  0EE7               	movlw	-25
 16830  0151D2  2AE3               	incf	plusw1,f,c
 16831  0151D4  E311               	bnc	u5380
 16832  0151D6  0EE8               	movlw	-24
 16833  0151D8  2AE3               	incf	plusw1,f,c
 16834  0151DA  E30E               	bnc	u5380
 16835  0151DC  0EE9               	movlw	-23
 16836  0151DE  2AE3               	incf	plusw1,f,c
 16837  0151E0  E30B               	bnc	u5380
 16838  0151E2  0EEA               	movlw	-22
 16839  0151E4  2AE3               	incf	plusw1,f,c
 16840  0151E6  E308               	bnc	u5380
 16841  0151E8  0EEB               	movlw	-21
 16842  0151EA  2AE3               	incf	plusw1,f,c
 16843  0151EC  E305               	bnc	u5380
 16844  0151EE  0EEC               	movlw	-20
 16845  0151F0  2AE3               	incf	plusw1,f,c
 16846  0151F2  E302               	bnc	u5380
 16847  0151F4  0EED               	movlw	-19
 16848  0151F6  2AE3               	incf	plusw1,f,c
 16849  0151F8                     u5380:
 16850                           
 16851                           ;stkvar	_sign @ sp[(-10)+8]
 16852  0151F8  0EFE               	movlw	-2
 16853  0151FA  6AE3               	clrf	plusw1,c
 16854  0151FC  2AE3               	incf	plusw1,f,c
 16855  0151FE                     l6643:
 16856                           
 16857                           ;stkvar	_dividend @ sp[(-10)+-8]
 16858  0151FE  0EF5               	movlw	-11
 16859  015200  AEE3               	btfss	plusw1,7,c
 16860  015202  D027               	goto	l6649
 16861                           
 16862                           ;stkvar	_dividend @ sp[(-10)+-8]
 16863                           ;stkvar	_dividend @ sp[(-10)+-8]
 16864  015204  0EEE               	movlw	-18
 16865  015206  6CE3               	negf	plusw1,c
 16866  015208  0EEF               	movlw	-17
 16867  01520A  1EE3               	comf	plusw1,f,c
 16868  01520C  0EF0               	movlw	-16
 16869  01520E  1EE3               	comf	plusw1,f,c
 16870  015210  0EF1               	movlw	-15
 16871  015212  1EE3               	comf	plusw1,f,c
 16872  015214  0EF2               	movlw	-14
 16873  015216  1EE3               	comf	plusw1,f,c
 16874  015218  0EF3               	movlw	-13
 16875  01521A  1EE3               	comf	plusw1,f,c
 16876  01521C  0EF4               	movlw	-12
 16877  01521E  1EE3               	comf	plusw1,f,c
 16878  015220  0EF5               	movlw	-11
 16879  015222  1EE3               	comf	plusw1,f,c
 16880  015224  E314               	bnc	u5400
 16881  015226  0EEF               	movlw	-17
 16882  015228  2AE3               	incf	plusw1,f,c
 16883  01522A  E311               	bnc	u5400
 16884  01522C  0EF0               	movlw	-16
 16885  01522E  2AE3               	incf	plusw1,f,c
 16886  015230  E30E               	bnc	u5400
 16887  015232  0EF1               	movlw	-15
 16888  015234  2AE3               	incf	plusw1,f,c
 16889  015236  E30B               	bnc	u5400
 16890  015238  0EF2               	movlw	-14
 16891  01523A  2AE3               	incf	plusw1,f,c
 16892  01523C  E308               	bnc	u5400
 16893  01523E  0EF3               	movlw	-13
 16894  015240  2AE3               	incf	plusw1,f,c
 16895  015242  E305               	bnc	u5400
 16896  015244  0EF4               	movlw	-12
 16897  015246  2AE3               	incf	plusw1,f,c
 16898  015248  E302               	bnc	u5400
 16899  01524A  0EF5               	movlw	-11
 16900  01524C  2AE3               	incf	plusw1,f,c
 16901  01524E                     u5400:
 16902                           
 16903                           ;stkvar	_sign @ sp[(-10)+8]
 16904  01524E  0EFE               	movlw	-2
 16905  015250  70E3               	btg	plusw1,0,c
 16906  015252                     l6649:
 16907                           
 16908                           ;stkvar	_quotient @ sp[(-10)+0]
 16909  015252  0E07               	movlw	7
 16910  015254  6E32               	movwf	btemp^0,c
 16911  015256  0EF6               	movlw	-10
 16912  015258                     u5411:
 16913  015258  6AE3               	clrf	plusw1,c
 16914  01525A  2AE8               	incf	wreg,f,c
 16915  01525C  0632               	decf	btemp^0,f,c
 16916  01525E  E2FC               	bc	u5411
 16917                           
 16918                           ;stkvar	_divisor @ sp[(-10)+-16]
 16919  015260  0EE6               	movlw	-26
 16920  015262  50E3               	movf	plusw1,w,c
 16921  015264  E116               	bnz	u5420
 16922  015266  0EE7               	movlw	-25
 16923  015268  50E3               	movf	plusw1,w,c
 16924  01526A  E113               	bnz	u5420
 16925  01526C  0EE8               	movlw	-24
 16926  01526E  50E3               	movf	plusw1,w,c
 16927  015270  E110               	bnz	u5420
 16928  015272  0EE9               	movlw	-23
 16929  015274  50E3               	movf	plusw1,w,c
 16930  015276  E10D               	bnz	u5420
 16931  015278  0EEA               	movlw	-22
 16932  01527A  50E3               	movf	plusw1,w,c
 16933  01527C  E10A               	bnz	u5420
 16934  01527E  0EEB               	movlw	-21
 16935  015280  50E3               	movf	plusw1,w,c
 16936  015282  E107               	bnz	u5420
 16937  015284  0EEC               	movlw	-20
 16938  015286  50E3               	movf	plusw1,w,c
 16939  015288  E104               	bnz	u5420
 16940  01528A  0EED               	movlw	-19
 16941  01528C  50E3               	movf	plusw1,w,c
 16942  01528E  B4D8               	btfsc	status,2,c
 16943  015290  D088               	goto	u5450
 16944  015292                     u5420:
 16945                           
 16946                           ;stkvar	_counter @ sp[(-10)+9]
 16947  015292  0EFF               	movlw	-1
 16948  015294  6AE3               	clrf	plusw1,c
 16949  015296  D012               	goto	L17
 16950  015298                     l6655:
 16951                           
 16952                           ;stkvar	_divisor @ sp[(-10)+-16]
 16953  015298  90D8               	bcf	status,0,c
 16954  01529A  0EE6               	movlw	-26
 16955  01529C  36E3               	rlcf	plusw1,f,c
 16956  01529E  0EE7               	movlw	-25
 16957  0152A0  36E3               	rlcf	plusw1,f,c
 16958  0152A2  0EE8               	movlw	-24
 16959  0152A4  36E3               	rlcf	plusw1,f,c
 16960  0152A6  0EE9               	movlw	-23
 16961  0152A8  36E3               	rlcf	plusw1,f,c
 16962  0152AA  0EEA               	movlw	-22
 16963  0152AC  36E3               	rlcf	plusw1,f,c
 16964  0152AE  0EEB               	movlw	-21
 16965  0152B0  36E3               	rlcf	plusw1,f,c
 16966  0152B2  0EEC               	movlw	-20
 16967  0152B4  36E3               	rlcf	plusw1,f,c
 16968  0152B6  0EED               	movlw	-19
 16969  0152B8  36E3               	rlcf	plusw1,f,c
 16970                           
 16971                           ;stkvar	_counter @ sp[(-10)+9]
 16972  0152BA  0EFF               	movlw	-1
 16973  0152BC                     L17:
 16974  0152BC  2AE3               	incf	plusw1,f,c
 16975                           
 16976                           ;stkvar	_divisor @ sp[(-10)+-16]
 16977  0152BE  0EED               	movlw	-19
 16978  0152C0  AEE3               	btfss	plusw1,7,c
 16979  0152C2  D7EA               	goto	l6655
 16980  0152C4                     u5430:
 16981                           
 16982                           ;stkvar	_quotient @ sp[(-10)+0]
 16983  0152C4  90D8               	bcf	status,0,c
 16984  0152C6  0EF6               	movlw	-10
 16985  0152C8  36E3               	rlcf	plusw1,f,c
 16986  0152CA  0EF7               	movlw	-9
 16987  0152CC  36E3               	rlcf	plusw1,f,c
 16988  0152CE  0EF8               	movlw	-8
 16989  0152D0  36E3               	rlcf	plusw1,f,c
 16990  0152D2  0EF9               	movlw	-7
 16991  0152D4  36E3               	rlcf	plusw1,f,c
 16992  0152D6  0EFA               	movlw	-6
 16993  0152D8  36E3               	rlcf	plusw1,f,c
 16994  0152DA  0EFB               	movlw	-5
 16995  0152DC  36E3               	rlcf	plusw1,f,c
 16996  0152DE  0EFC               	movlw	-4
 16997  0152E0  36E3               	rlcf	plusw1,f,c
 16998  0152E2  0EFD               	movlw	-3
 16999  0152E4  36E3               	rlcf	plusw1,f,c
 17000                           
 17001                           ;stkvar	_divisor @ sp[(-10)+-16]
 17002                           ;stkvar	_dividend @ sp[(-10)+-8]
 17003  0152E6  50E1               	movf	fsr1l,w,c
 17004  0152E8  0FEE               	addlw	-18
 17005  0152EA  6ED9               	movwf	fsr2l,c
 17006  0152EC  50E2               	movf	fsr1h,w,c
 17007  0152EE  6EDA               	movwf	fsr2h,c
 17008  0152F0  0EFF               	movlw	255
 17009  0152F2  22DA               	addwfc	fsr2h,f,c
 17010  0152F4  0EE6               	movlw	-26
 17011  0152F6  50E3               	movf	plusw1,w,c
 17012  0152F8  5CDE               	subwf	postinc2,w,c
 17013  0152FA  0EE7               	movlw	-25
 17014  0152FC  50E3               	movf	plusw1,w,c
 17015  0152FE  58DE               	subwfb	postinc2,w,c
 17016  015300  0EE8               	movlw	-24
 17017  015302  50E3               	movf	plusw1,w,c
 17018  015304  58DE               	subwfb	postinc2,w,c
 17019  015306  0EE9               	movlw	-23
 17020  015308  50E3               	movf	plusw1,w,c
 17021  01530A  58DE               	subwfb	postinc2,w,c
 17022  01530C  0EEA               	movlw	-22
 17023  01530E  50E3               	movf	plusw1,w,c
 17024  015310  58DE               	subwfb	postinc2,w,c
 17025  015312  0EEB               	movlw	-21
 17026  015314  50E3               	movf	plusw1,w,c
 17027  015316  58DE               	subwfb	postinc2,w,c
 17028  015318  0EEC               	movlw	-20
 17029  01531A  50E3               	movf	plusw1,w,c
 17030  01531C  58DE               	subwfb	postinc2,w,c
 17031  01531E  0EED               	movlw	-19
 17032  015320  50E3               	movf	plusw1,w,c
 17033  015322  58DE               	subwfb	postinc2,w,c
 17034  015324  A0D8               	btfss	status,0,c
 17035  015326  D021               	goto	l6667
 17036                           
 17037                           ;stkvar	_divisor @ sp[(-10)+-16]
 17038                           ;stkvar	_dividend @ sp[(-10)+-8]
 17039  015328  50E1               	movf	fsr1l,w,c
 17040  01532A  0FEE               	addlw	-18
 17041  01532C  6ED9               	movwf	fsr2l,c
 17042  01532E  50E2               	movf	fsr1h,w,c
 17043  015330  6EDA               	movwf	fsr2h,c
 17044  015332  0EFF               	movlw	255
 17045  015334  22DA               	addwfc	fsr2h,f,c
 17046  015336  0EE6               	movlw	-26
 17047  015338  50E3               	movf	plusw1,w,c
 17048  01533A  5EDE               	subwf	postinc2,f,c
 17049  01533C  0EE7               	movlw	-25
 17050  01533E  50E3               	movf	plusw1,w,c
 17051  015340  5ADE               	subwfb	postinc2,f,c
 17052  015342  0EE8               	movlw	-24
 17053  015344  50E3               	movf	plusw1,w,c
 17054  015346  5ADE               	subwfb	postinc2,f,c
 17055  015348  0EE9               	movlw	-23
 17056  01534A  50E3               	movf	plusw1,w,c
 17057  01534C  5ADE               	subwfb	postinc2,f,c
 17058  01534E  0EEA               	movlw	-22
 17059  015350  50E3               	movf	plusw1,w,c
 17060  015352  5ADE               	subwfb	postinc2,f,c
 17061  015354  0EEB               	movlw	-21
 17062  015356  50E3               	movf	plusw1,w,c
 17063  015358  5ADE               	subwfb	postinc2,f,c
 17064  01535A  0EEC               	movlw	-20
 17065  01535C  50E3               	movf	plusw1,w,c
 17066  01535E  5ADE               	subwfb	postinc2,f,c
 17067  015360  0EED               	movlw	-19
 17068  015362  50E3               	movf	plusw1,w,c
 17069  015364  5ADE               	subwfb	postinc2,f,c
 17070                           
 17071                           ;stkvar	_quotient @ sp[(-10)+0]
 17072  015366  0EF6               	movlw	-10
 17073  015368  80E3               	bsf	plusw1,0,c
 17074  01536A                     l6667:
 17075                           
 17076                           ;stkvar	_divisor @ sp[(-10)+-16]
 17077  01536A  90D8               	bcf	status,0,c
 17078  01536C  0EED               	movlw	-19
 17079  01536E  32E3               	rrcf	plusw1,f,c
 17080  015370  0EEC               	movlw	-20
 17081  015372  32E3               	rrcf	plusw1,f,c
 17082  015374  0EEB               	movlw	-21
 17083  015376  32E3               	rrcf	plusw1,f,c
 17084  015378  0EEA               	movlw	-22
 17085  01537A  32E3               	rrcf	plusw1,f,c
 17086  01537C  0EE9               	movlw	-23
 17087  01537E  32E3               	rrcf	plusw1,f,c
 17088  015380  0EE8               	movlw	-24
 17089  015382  32E3               	rrcf	plusw1,f,c
 17090  015384  0EE7               	movlw	-25
 17091  015386  32E3               	rrcf	plusw1,f,c
 17092  015388  0EE6               	movlw	-26
 17093  01538A  32E3               	rrcf	plusw1,f,c
 17094                           
 17095                           ;stkvar	_counter @ sp[(-10)+9]
 17096  01538C  0EFF               	movlw	-1
 17097  01538E  50E3               	movf	plusw1,w,c
 17098  015390  6E32               	movwf	btemp^0,c
 17099  015392  0E01               	movlw	1
 17100  015394  5E32               	subwf	btemp^0,f,c
 17101  015396  0EFF               	movlw	-1
 17102  015398  0060  F0CB  FFE3   	movff	btemp,plusw1
 17103  01539E  A4D8               	btfss	status,2,c
 17104  0153A0  D791               	goto	u5430
 17105  0153A2                     u5450:
 17106                           
 17107                           ;stkvar	_sign @ sp[(-10)+8]
 17108  0153A2  0EFE               	movlw	-2
 17109  0153A4  50E3               	movf	plusw1,w,c
 17110  0153A6  B4D8               	btfsc	status,2,c
 17111  0153A8  D025               	goto	u5470
 17112                           
 17113                           ;stkvar	_quotient @ sp[(-10)+0]
 17114                           ;stkvar	_quotient @ sp[(-10)+0]
 17115  0153AA  0EF6               	movlw	-10
 17116  0153AC  6CE3               	negf	plusw1,c
 17117  0153AE  0EF7               	movlw	-9
 17118  0153B0  1EE3               	comf	plusw1,f,c
 17119  0153B2  0EF8               	movlw	-8
 17120  0153B4  1EE3               	comf	plusw1,f,c
 17121  0153B6  0EF9               	movlw	-7
 17122  0153B8  1EE3               	comf	plusw1,f,c
 17123  0153BA  0EFA               	movlw	-6
 17124  0153BC  1EE3               	comf	plusw1,f,c
 17125  0153BE  0EFB               	movlw	-5
 17126  0153C0  1EE3               	comf	plusw1,f,c
 17127  0153C2  0EFC               	movlw	-4
 17128  0153C4  1EE3               	comf	plusw1,f,c
 17129  0153C6  0EFD               	movlw	-3
 17130  0153C8  1EE3               	comf	plusw1,f,c
 17131  0153CA  E314               	bnc	u5470
 17132  0153CC  0EF7               	movlw	-9
 17133  0153CE  2AE3               	incf	plusw1,f,c
 17134  0153D0  E311               	bnc	u5470
 17135  0153D2  0EF8               	movlw	-8
 17136  0153D4  2AE3               	incf	plusw1,f,c
 17137  0153D6  E30E               	bnc	u5470
 17138  0153D8  0EF9               	movlw	-7
 17139  0153DA  2AE3               	incf	plusw1,f,c
 17140  0153DC  E30B               	bnc	u5470
 17141  0153DE  0EFA               	movlw	-6
 17142  0153E0  2AE3               	incf	plusw1,f,c
 17143  0153E2  E308               	bnc	u5470
 17144  0153E4  0EFB               	movlw	-5
 17145  0153E6  2AE3               	incf	plusw1,f,c
 17146  0153E8  E305               	bnc	u5470
 17147  0153EA  0EFC               	movlw	-4
 17148  0153EC  2AE3               	incf	plusw1,f,c
 17149  0153EE  E302               	bnc	u5470
 17150  0153F0  0EFD               	movlw	-3
 17151  0153F2  2AE3               	incf	plusw1,f,c
 17152  0153F4                     u5470:
 17153                           
 17154                           ;stkvar	_quotient @ sp[(-10)+0]
 17155  0153F4  0EF6               	movlw	246
 17156  0153F6  24E1               	addwf	fsr1l,w,c
 17157  0153F8  6ED9               	movwf	fsr2l,c
 17158  0153FA  0EFF               	movlw	255
 17159  0153FC  20E2               	addwfc	fsr1h,w,c
 17160  0153FE  6EDA               	movwf	fsr2h,c
 17161                           
 17162                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17163  015400  0E08               	movlw	8
 17164  015402  6E32               	movwf	btemp^0,c
 17165  015404  0EEE               	movlw	-18
 17166  015406                     us548999:
 17167  015406  006F FF7B FFE3     	movff	postinc2,plusw1
 17168  01540C  28E8               	incf	wreg,w,c
 17169  01540E  2E32               	decfsz	btemp^0,f,c
 17170  015410  D7FA               	bra	us548999
 17171                           
 17172                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17173  015412  0EF6               	movlw	246
 17174  015414  26E1               	addwf	fsr1l,f,c
 17175  015416  0EFF               	movlw	255
 17176  015418  22E2               	addwfc	fsr1h,f,c
 17177  01541A  0012               	return		;funcret
 17178  01541C                     __end_of___aodiv:
 17179                           	opt callstack 0
 17180                           
 17181 ;; *************** function _ctoa *****************
 17182 ;; Defined at:
 17183 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17184 ;; Parameters:    Size  Location     Type
 17185 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17186 ;;		 -> f(6), NULL(0), 
 17187 ;;  c               1  [STACK] unsigned char 
 17188 ;; Auto vars:     Size  Location     Type
 17189 ;;  w               2  [STACK] int 
 17190 ;;  l               2    0        int 
 17191 ;; Return value:  Size  Location     Type
 17192 ;;                  2  [STACK] int 
 17193 ;; Registers used:
 17194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17195 ;; Tracked objects:
 17196 ;;		On entry : 0/5
 17197 ;;		On exit  : 0/0
 17198 ;;		Unchanged: 0/0
 17199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17204 ;;Total ram usage:        0 bytes
 17205 ;; Hardware stack levels used:    1
 17206 ;; Hardware stack levels required when called:   11
 17207 ;; This function calls:
 17208 ;;		_pad
 17209 ;; This function is called by:
 17210 ;;		_vfpfcnvrt
 17211 ;; This function uses a reentrant model
 17212 ;;
 17213                           
 17214                           	psect	text63
 17215  017806                     __ptext63:
 17216                           	opt callstack 0
 17217  017806                     _ctoa:
 17218                           	opt callstack 0
 17219                           
 17220                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17221  017806  52E6               	movf	postinc1,f,c
 17222  017808  52E6               	movf	postinc1,f,c
 17223                           
 17224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17225                           
 17226                           ;incstack = 0
 17227  01780A  501B               	movf	_width^0,w,c
 17228  01780C  101C               	iorwf	(_width+1)^0,w,c
 17229  01780E  A4D8               	btfss	status,2,c
 17230  017810  D009               	goto	l9531
 17231                           
 17232                           ;stkvar	_w @ sp[(-2)+0]
 17233  017812  0EFE               	movlw	-2
 17234  017814  0060  F06F  FFE3   	movff	_width,plusw1
 17235  01781A  0EFF               	movlw	-1
 17236  01781C  0060  F073  FFE3   	movff	_width+1,plusw1
 17237  017822  D016               	goto	l9533
 17238  017824                     l9531:
 17239  017824  0EFF               	movlw	255
 17240  017826  6E3C               	movwf	(btemp+10)^0,c
 17241  017828  0EFF               	movlw	255
 17242  01782A  6E3D               	movwf	(btemp+11)^0,c
 17243  01782C  0060  F06C  F03A   	movff	_width,btemp+8
 17244  017832  0060  F070  F03B   	movff	_width+1,btemp+9
 17245  017838  503C               	movf	(btemp+10)^0,w,c
 17246  01783A  263A               	addwf	(btemp+8)^0,f,c
 17247  01783C  503D               	movf	(btemp+11)^0,w,c
 17248  01783E  223B               	addwfc	(btemp+9)^0,f,c
 17249                           
 17250                           ;stkvar	_w @ sp[(-2)+0]
 17251  017840  0EFE               	movlw	-2
 17252  017842  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17253  017848  0EFF               	movlw	-1
 17254  01784A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17255  017850                     l9533:
 17256                           
 17257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17258                           ;stkvar	_c @ sp[(-2)+-3]
 17259  017850  0EFB               	movlw	-5
 17260  017852  006F FF8C  F17C    	movff	plusw1,_dbuf
 17261                           
 17262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17263  017858  0101               	movlb	1	; () banked
 17264  01785A  6B7D               	clrf	(_dbuf+1)& (0+255),b
 17265                           
 17266                           ; BSR set to: 1
 17267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17268                           ;stkvar	_w @ sp[(-2)+0]
 17269  01785C  0EFE               	movlw	-2
 17270  01785E  006F FF8F FFE6     	movff	plusw1,postinc1
 17271  017864  006F FF8F FFE6     	movff	plusw1,postinc1
 17272  01786A  0E7C               	movlw	low _dbuf
 17273  01786C  6EE6               	movwf	postinc1,c
 17274  01786E  0E01               	movlw	high _dbuf
 17275  017870  6EE6               	movwf	postinc1,c
 17276                           
 17277                           ;stkvar	_fp @ sp[(-6)+-2]
 17278  017872  0EF8               	movlw	-8
 17279  017874  006F FF8F FFE6     	movff	plusw1,postinc1
 17280  01787A  006F FF8F FFE6     	movff	plusw1,postinc1
 17281  017880  EC77  F0B5         	call	_pad	;wreg free
 17282                           
 17283                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 17284  017884  0EFB               	movlw	251
 17285  017886  26E1               	addwf	fsr1l,f,c
 17286  017888  0EFF               	movlw	255
 17287  01788A  22E2               	addwfc	fsr1h,f,c
 17288  01788C  0012               	return		;funcret
 17289  01788E                     __end_of_ctoa:
 17290                           	opt callstack 0
 17291                           
 17292 ;; *************** function _pad *****************
 17293 ;; Defined at:
 17294 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17295 ;; Parameters:    Size  Location     Type
 17296 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17297 ;;		 -> f(6), NULL(0), 
 17298 ;;  buf             2  [STACK] PTR unsigned char 
 17299 ;;		 -> dbuf(80), 
 17300 ;;  p               2  [STACK] int 
 17301 ;; Auto vars:     Size  Location     Type
 17302 ;;  w               2  [STACK] int 
 17303 ;;  i               2  [STACK] int 
 17304 ;; Return value:  Size  Location     Type
 17305 ;;                  2  [STACK] int 
 17306 ;; Registers used:
 17307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17308 ;; Tracked objects:
 17309 ;;		On entry : 0/1
 17310 ;;		On exit  : 0/0
 17311 ;;		Unchanged: 0/0
 17312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17317 ;;Total ram usage:        0 bytes
 17318 ;; Hardware stack levels used:    1
 17319 ;; Hardware stack levels required when called:   10
 17320 ;; This function calls:
 17321 ;;		_fputc
 17322 ;;		_fputs
 17323 ;;		_strlen
 17324 ;; This function is called by:
 17325 ;;		_ctoa
 17326 ;;		_dtoa
 17327 ;;		_efgtoa
 17328 ;;		_xtoa
 17329 ;; This function uses a reentrant model
 17330 ;;
 17331                           
 17332                           	psect	text64
 17333  016AEE                     __ptext64:
 17334                           	opt callstack 0
 17335  016AEE                     _pad:
 17336                           	opt callstack 0
 17337                           
 17338                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17339  016AEE  52E6               	movf	postinc1,f,c
 17340  016AF0  52E6               	movf	postinc1,f,c
 17341  016AF2  52E6               	movf	postinc1,f,c
 17342  016AF4  52E6               	movf	postinc1,f,c
 17343                           
 17344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17345                           
 17346                           ;incstack = 0
 17347  016AF6  A01F               	btfss	_flags^0,0,c
 17348  016AF8  D010               	goto	l9505
 17349                           
 17350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17351                           ;stkvar	_fp @ sp[(-4)+-2]
 17352  016AFA  0EFA               	movlw	-6
 17353  016AFC  006F FF8F FFE6     	movff	plusw1,postinc1
 17354  016B02  006F FF8F FFE6     	movff	plusw1,postinc1
 17355                           
 17356                           ;stkvar	_buf @ sp[(-6)+-4]
 17357  016B08  0EF6               	movlw	-10
 17358  016B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 17359  016B10  006F FF8F FFE6     	movff	plusw1,postinc1
 17360  016B16  ECDD  F0BA         	call	_fputs	;wreg free
 17361  016B1A                     l9505:
 17362                           
 17363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17364                           ;stkvar	_p @ sp[(-4)+-6]
 17365  016B1A  0EF7               	movlw	-9
 17366  016B1C  BEE3               	btfsc	plusw1,7,c
 17367  016B1E  D011               	goto	l9509
 17368                           
 17369                           ;stkvar	_p @ sp[(-4)+-6]
 17370                           ;stkvar	_w @ sp[(-4)+0]
 17371  016B20  0EF6               	movlw	-10
 17372  016B22  006F FF8C  F032    	movff	plusw1,btemp
 17373  016B28  0EFC               	movlw	-4
 17374  016B2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17375  016B30  0EF7               	movlw	-9
 17376  016B32  006F FF8C  F032    	movff	plusw1,btemp
 17377  016B38  0EFD               	movlw	-3
 17378  016B3A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17379  016B40  D004               	goto	l1844
 17380  016B42                     l9509:
 17381                           
 17382                           ;stkvar	_w @ sp[(-4)+0]
 17383  016B42  0EFC               	movlw	-4
 17384  016B44  6AE3               	clrf	plusw1,c
 17385  016B46  0EFD               	movlw	-3
 17386  016B48  6AE3               	clrf	plusw1,c
 17387  016B4A                     l1844:
 17388                           
 17389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17390                           ;stkvar	_i @ sp[(-4)+2]
 17391  016B4A  0EFE               	movlw	-2
 17392  016B4C  6AE3               	clrf	plusw1,c
 17393  016B4E  0EFF               	movlw	-1
 17394  016B50  6AE3               	clrf	plusw1,c
 17395                           
 17396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17397  016B52  D01E               	goto	l9515
 17398  016B54                     l9511:
 17399                           
 17400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 17401                           ;stkvar	_fp @ sp[(-4)+-2]
 17402  016B54  0EFA               	movlw	-6
 17403  016B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17404  016B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17405  016B62  0E20               	movlw	32
 17406  016B64  6EE6               	movwf	postinc1,c
 17407  016B66  0E00               	movlw	0
 17408  016B68  6EE6               	movwf	postinc1,c
 17409  016B6A  EC59  F0B4         	call	_fputc	;wreg free
 17410                           
 17411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17412                           ;stkvar	_i @ sp[(-4)+2]
 17413  016B6E  0EFE               	movlw	-2
 17414  016B70  50E3               	movf	plusw1,w,c
 17415  016B72  0F01               	addlw	1
 17416  016B74  6E32               	movwf	btemp^0,c
 17417  016B76  0EFE               	movlw	-2
 17418  016B78  0060  F0CB  FFE3   	movff	btemp,plusw1
 17419  016B7E  6A32               	clrf	btemp^0,c
 17420  016B80  0EFF               	movlw	-1
 17421  016B82  50E3               	movf	plusw1,w,c
 17422  016B84  2032               	addwfc	btemp^0,w,c
 17423  016B86  6E32               	movwf	btemp^0,c
 17424  016B88  0EFF               	movlw	-1
 17425  016B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17426  016B90                     l9515:
 17427                           
 17428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17429                           ;stkvar	_w @ sp[(-4)+0]
 17430                           ;stkvar	_i @ sp[(-4)+2]
 17431  016B90  50E1               	movf	fsr1l,w,c
 17432  016B92  0FFE               	addlw	-2
 17433  016B94  6ED9               	movwf	fsr2l,c
 17434  016B96  50E2               	movf	fsr1h,w,c
 17435  016B98  6EDA               	movwf	fsr2h,c
 17436  016B9A  0EFF               	movlw	255
 17437  016B9C  22DA               	addwfc	fsr2h,f,c
 17438  016B9E  0EFC               	movlw	-4
 17439  016BA0  50E3               	movf	plusw1,w,c
 17440  016BA2  5CDE               	subwf	postinc2,w,c
 17441  016BA4  50DE               	movf	postinc2,w,c
 17442  016BA6  0A80               	xorlw	128
 17443  016BA8  6E32               	movwf	btemp^0,c
 17444  016BAA  0EFD               	movlw	-3
 17445  016BAC  50E3               	movf	plusw1,w,c
 17446  016BAE  0A80               	xorlw	128
 17447  016BB0  5832               	subwfb	btemp^0,w,c
 17448  016BB2  A0D8               	btfss	status,0,c
 17449  016BB4  D7CF               	goto	l9511
 17450                           
 17451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 17452  016BB6  B01F               	btfsc	_flags^0,0,c
 17453  016BB8  D010               	goto	l9519
 17454                           
 17455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 17456                           ;stkvar	_fp @ sp[(-4)+-2]
 17457  016BBA  0EFA               	movlw	-6
 17458  016BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17459  016BC2  006F FF8F FFE6     	movff	plusw1,postinc1
 17460                           
 17461                           ;stkvar	_buf @ sp[(-6)+-4]
 17462  016BC8  0EF6               	movlw	-10
 17463  016BCA  006F FF8F FFE6     	movff	plusw1,postinc1
 17464  016BD0  006F FF8F FFE6     	movff	plusw1,postinc1
 17465  016BD6  ECDD  F0BA         	call	_fputs	;wreg free
 17466  016BDA                     l9519:
 17467                           
 17468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 17469                           ;stkvar	_w @ sp[(-4)+0]
 17470                           ;stkvar	_buf @ sp[(-4)+-4]
 17471  016BDA  0EF8               	movlw	-8
 17472  016BDC  006F FF8F FFE6     	movff	plusw1,postinc1
 17473  016BE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17474  016BE8  EC8C  F0BA         	call	_strlen	;wreg free
 17475  016BEC  0EFC               	movlw	-4
 17476  016BEE  50E3               	movf	plusw1,w,c
 17477  016BF0  2632               	addwf	btemp^0,f,c
 17478  016BF2  0EFD               	movlw	-3
 17479  016BF4  50E3               	movf	plusw1,w,c
 17480  016BF6  2233               	addwfc	(btemp+1)^0,f,c
 17481                           
 17482                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 17483  016BF8  0EF6               	movlw	246
 17484  016BFA  26E1               	addwf	fsr1l,f,c
 17485  016BFC  0EFF               	movlw	255
 17486  016BFE  22E2               	addwfc	fsr1h,f,c
 17487  016C00  0012               	return		;funcret
 17488  016C02                     __end_of_pad:
 17489                           	opt callstack 0
 17490                           
 17491 ;; *************** function _strlen *****************
 17492 ;; Defined at:
 17493 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 17494 ;; Parameters:    Size  Location     Type
 17495 ;;  s               2  [STACK] PTR const unsigned char 
 17496 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17497 ;;		 -> STR_25(9), STR_24(12), D.lcd(216), D(218), 
 17498 ;;		 -> T(144), STR_7(6), STR_3(6), V(187), 
 17499 ;; Auto vars:     Size  Location     Type
 17500 ;;  a               2  [STACK] PTR const unsigned char 
 17501 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17502 ;;		 -> STR_25(9), STR_24(12), D.lcd(216), D(218), 
 17503 ;;		 -> T(144), STR_7(6), STR_3(6), V(187), 
 17504 ;; Return value:  Size  Location     Type
 17505 ;;                  2  [STACK] unsigned int 
 17506 ;; Registers used:
 17507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 17508 ;; Tracked objects:
 17509 ;;		On entry : 0/0
 17510 ;;		On exit  : 0/0
 17511 ;;		Unchanged: 0/0
 17512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17517 ;;Total ram usage:        0 bytes
 17518 ;; Hardware stack levels used:    1
 17519 ;; Hardware stack levels required when called:    6
 17520 ;; This function calls:
 17521 ;;		Nothing
 17522 ;; This function is called by:
 17523 ;;		_eaDogM_WriteString
 17524 ;;		_pad
 17525 ;;		_stoa
 17526 ;; This function uses a reentrant model
 17527 ;;
 17528                           
 17529                           	psect	text65
 17530  017518                     __ptext65:
 17531                           	opt callstack 0
 17532  017518                     _strlen:
 17533                           	opt callstack 0
 17534                           
 17535                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17536  017518  52E6               	movf	postinc1,f,c
 17537  01751A  52E6               	movf	postinc1,f,c
 17538                           
 17539                           ;stkvar	_s @ sp[(-2)+-2]
 17540                           
 17541                           ;incstack = 0
 17542  01751C  0EFC               	movlw	-4
 17543  01751E  006F FF8C  F03C    	movff	plusw1,btemp+10
 17544  017524  0EFD               	movlw	-3
 17545  017526  006F FF8C  F03D    	movff	plusw1,btemp+11
 17546                           
 17547                           ;stkvar	_a @ sp[(-2)+0]
 17548  01752C  0EFF               	movlw	-1
 17549  01752E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17550  017534  0EFE               	movlw	-2
 17551  017536  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17552  01753C  D011               	goto	l9487
 17553  01753E                     l9485:
 17554                           
 17555                           ;stkvar	_s @ sp[(-2)+-2]
 17556  01753E  0EFC               	movlw	-4
 17557  017540  50E3               	movf	plusw1,w,c
 17558  017542  0F01               	addlw	1
 17559  017544  6E32               	movwf	btemp^0,c
 17560  017546  0EFC               	movlw	-4
 17561  017548  0060  F0CB  FFE3   	movff	btemp,plusw1
 17562  01754E  6A32               	clrf	btemp^0,c
 17563  017550  0EFD               	movlw	-3
 17564  017552  50E3               	movf	plusw1,w,c
 17565  017554  2032               	addwfc	btemp^0,w,c
 17566  017556  6E32               	movwf	btemp^0,c
 17567  017558  0EFD               	movlw	-3
 17568  01755A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17569  017560                     l9487:
 17570                           
 17571                           ;stkvar	_s @ sp[(-2)+-2]
 17572  017560  0EFC               	movlw	-4
 17573  017562  006F FF8F FFF6     	movff	plusw1,tblptrl
 17574  017568  0EFD               	movlw	-3
 17575  01756A  006F FF8F FFF7     	movff	plusw1,tblptrh
 17576  017570  0E00               	movlw	low (__mediumconst shr (0+16))
 17577  017572  6EF8               	movwf	tblptru,c
 17578  017574  0E1F               	movlw	(high __ramtop+-1)
 17579  017576  64F7               	cpfsgt	tblptrh,c
 17580  017578  D003               	bra	u8987
 17581  01757A  0008               	tblrd		*
 17582  01757C  50F5               	movf	tablat,w,c
 17583  01757E  D007               	bra	u8980
 17584  017580                     u8987:
 17585  017580  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17586  017586  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17587  01758C  50EF               	movf	indf0,w,c
 17588  01758E                     u8980:
 17589  01758E  0900               	iorlw	0
 17590  017590  A4D8               	btfss	status,2,c
 17591  017592  D7D5               	goto	l9485
 17592                           
 17593                           ;stkvar	_a @ sp[(-2)+0]
 17594                           ;stkvar	_s @ sp[(-2)+-2]
 17595  017594  0EFC               	movlw	-4
 17596  017596  006F FF8C  F032    	movff	plusw1,btemp
 17597  01759C  0EFD               	movlw	-3
 17598  01759E  006F FF8C  F033    	movff	plusw1,btemp+1
 17599  0175A4  0EFE               	movlw	-2
 17600  0175A6  50E3               	movf	plusw1,w,c
 17601  0175A8  5E32               	subwf	btemp^0,f,c
 17602  0175AA  0EFF               	movlw	-1
 17603  0175AC  50E3               	movf	plusw1,w,c
 17604  0175AE  5A33               	subwfb	(btemp+1)^0,f,c
 17605                           
 17606                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 17607  0175B0  52E5               	movf	postdec1,f,c
 17608  0175B2  52E5               	movf	postdec1,f,c
 17609  0175B4  52E5               	movf	postdec1,f,c
 17610  0175B6  52E5               	movf	postdec1,f,c
 17611  0175B8  0012               	return		;funcret
 17612  0175BA                     __end_of_strlen:
 17613                           	opt callstack 0
 17614                           
 17615 ;; *************** function _fputs *****************
 17616 ;; Defined at:
 17617 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 17618 ;; Parameters:    Size  Location     Type
 17619 ;;  s               2  [STACK] PTR const unsigned char 
 17620 ;;		 -> dbuf(80), 
 17621 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17622 ;;		 -> f(6), NULL(0), 
 17623 ;; Auto vars:     Size  Location     Type
 17624 ;;  i               2  [STACK] int 
 17625 ;;  c               1  [STACK] unsigned char 
 17626 ;; Return value:  Size  Location     Type
 17627 ;;                  2  [STACK] int 
 17628 ;; Registers used:
 17629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17630 ;; Tracked objects:
 17631 ;;		On entry : 0/1
 17632 ;;		On exit  : 0/0
 17633 ;;		Unchanged: 0/0
 17634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17639 ;;Total ram usage:        0 bytes
 17640 ;; Hardware stack levels used:    1
 17641 ;; Hardware stack levels required when called:    9
 17642 ;; This function calls:
 17643 ;;		_fputc
 17644 ;; This function is called by:
 17645 ;;		_pad
 17646 ;; This function uses a reentrant model
 17647 ;;
 17648                           
 17649                           	psect	text66
 17650  0175BA                     __ptext66:
 17651                           	opt callstack 0
 17652  0175BA                     _fputs:
 17653                           	opt callstack 0
 17654                           
 17655                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17656  0175BA  52E6               	movf	postinc1,f,c
 17657  0175BC  52E6               	movf	postinc1,f,c
 17658  0175BE  52E6               	movf	postinc1,f,c
 17659                           
 17660                           ;stkvar	_i @ sp[(-3)+0]
 17661                           
 17662                           ;incstack = 0
 17663  0175C0  0EFD               	movlw	-3
 17664  0175C2  6AE3               	clrf	plusw1,c
 17665  0175C4  0EFE               	movlw	-2
 17666  0175C6  6AE3               	clrf	plusw1,c
 17667  0175C8  D01F               	goto	l9499
 17668  0175CA                     l9495:
 17669                           
 17670                           ;stkvar	_fp @ sp[(-3)+-4]
 17671  0175CA  0EF9               	movlw	-7
 17672  0175CC  006F FF8F FFE6     	movff	plusw1,postinc1
 17673  0175D2  006F FF8F FFE6     	movff	plusw1,postinc1
 17674                           
 17675                           ;stkvar	_c @ sp[(-5)+2]
 17676  0175D8  0EFD               	movlw	-3
 17677  0175DA  50E3               	movf	plusw1,w,c
 17678  0175DC  6EE6               	movwf	postinc1,c
 17679  0175DE  0E00               	movlw	0
 17680  0175E0  6EE6               	movwf	postinc1,c
 17681  0175E2  EC59  F0B4         	call	_fputc	;wreg free
 17682                           
 17683                           ;stkvar	_i @ sp[(-3)+0]
 17684  0175E6  0EFD               	movlw	-3
 17685  0175E8  50E3               	movf	plusw1,w,c
 17686  0175EA  0F01               	addlw	1
 17687  0175EC  6E32               	movwf	btemp^0,c
 17688  0175EE  0EFD               	movlw	-3
 17689  0175F0  0060  F0CB  FFE3   	movff	btemp,plusw1
 17690  0175F6  6A32               	clrf	btemp^0,c
 17691  0175F8  0EFE               	movlw	-2
 17692  0175FA  50E3               	movf	plusw1,w,c
 17693  0175FC  2032               	addwfc	btemp^0,w,c
 17694  0175FE  6E32               	movwf	btemp^0,c
 17695  017600  0EFE               	movlw	-2
 17696  017602  0060  F0CB  FFE3   	movff	btemp,plusw1
 17697  017608                     l9499:
 17698                           
 17699                           ;stkvar	_i @ sp[(-3)+0]
 17700  017608  0EFD               	movlw	-3
 17701  01760A  006F FF8C  F03C    	movff	plusw1,btemp+10
 17702  017610  0EFE               	movlw	-2
 17703  017612  006F FF8C  F03D    	movff	plusw1,btemp+11
 17704                           
 17705                           ;stkvar	_s @ sp[(-3)+-2]
 17706  017618  0EFB               	movlw	-5
 17707  01761A  006F FF8C  F03A    	movff	plusw1,btemp+8
 17708  017620  0EFC               	movlw	-4
 17709  017622  006F FF8C  F03B    	movff	plusw1,btemp+9
 17710  017628  503C               	movf	(btemp+10)^0,w,c
 17711  01762A  243A               	addwf	(btemp+8)^0,w,c
 17712  01762C  6ED9               	movwf	fsr2l,c
 17713  01762E  503D               	movf	(btemp+11)^0,w,c
 17714  017630  203B               	addwfc	(btemp+9)^0,w,c
 17715  017632  6EDA               	movwf	fsr2h,c
 17716  017634  50DF               	movf	indf2,w,c
 17717  017636  6E3D               	movwf	(btemp+11)^0,c
 17718                           
 17719                           ;stkvar	_c @ sp[(-3)+2]
 17720  017638  0EFF               	movlw	-1
 17721  01763A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17722  017640  0EFF               	movlw	-1
 17723  017642  50E3               	movf	plusw1,w,c
 17724  017644  A4D8               	btfss	status,2,c
 17725  017646  D7C1               	goto	l9495
 17726                           
 17727                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17728  017648  0EF9               	movlw	249
 17729  01764A  26E1               	addwf	fsr1l,f,c
 17730  01764C  0EFF               	movlw	255
 17731  01764E  22E2               	addwfc	fsr1h,f,c
 17732  017650  0012               	return		;funcret
 17733  017652                     __end_of_fputs:
 17734                           	opt callstack 0
 17735                           
 17736 ;; *************** function _fputc *****************
 17737 ;; Defined at:
 17738 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 17739 ;; Parameters:    Size  Location     Type
 17740 ;;  c               2  [STACK] int 
 17741 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17742 ;;		 -> f(6), NULL(0), 
 17743 ;; Auto vars:     Size  Location     Type
 17744 ;;		None
 17745 ;; Return value:  Size  Location     Type
 17746 ;;                  2  [STACK] int 
 17747 ;; Registers used:
 17748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17749 ;; Tracked objects:
 17750 ;;		On entry : 0/5
 17751 ;;		On exit  : 0/0
 17752 ;;		Unchanged: 0/0
 17753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17758 ;;Total ram usage:        0 bytes
 17759 ;; Hardware stack levels used:    1
 17760 ;; Hardware stack levels required when called:    8
 17761 ;; This function calls:
 17762 ;;		_putch
 17763 ;; This function is called by:
 17764 ;;		_pad
 17765 ;;		_stoa
 17766 ;;		_vfpfcnvrt
 17767 ;;		_fputs
 17768 ;; This function uses a reentrant model
 17769 ;;
 17770                           
 17771                           	psect	text67
 17772  0168B2                     __ptext67:
 17773                           	opt callstack 0
 17774  0168B2                     _fputc:
 17775                           	opt callstack 13
 17776                           
 17777                           ;stkvar	_fp @ sp[(0)+-4]
 17778                           
 17779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17780                           ;incstack = 0
 17781  0168B2  0EFC               	movlw	-4
 17782  0168B4  006F FF8C  F032    	movff	plusw1,btemp
 17783  0168BA  0EFD               	movlw	-3
 17784  0168BC  50E3               	movf	plusw1,w,c
 17785  0168BE  1032               	iorwf	btemp^0,w,c
 17786  0168C0  B4D8               	btfsc	status,2,c
 17787  0168C2  D009               	goto	u8950
 17788                           
 17789                           ;stkvar	_fp @ sp[(0)+-4]
 17790  0168C4  0EFC               	movlw	-4
 17791  0168C6  006F FF8C  F032    	movff	plusw1,btemp
 17792  0168CC  0EFD               	movlw	-3
 17793  0168CE  50E3               	movf	plusw1,w,c
 17794  0168D0  1032               	iorwf	btemp^0,w,c
 17795  0168D2  A4D8               	btfss	status,2,c
 17796  0168D4  D006               	goto	l9473
 17797  0168D6                     u8950:
 17798                           
 17799                           ;stkvar	_c @ sp[(0)+-2]
 17800  0168D6  0EFE               	movlw	-2
 17801  0168D8  50E3               	movf	plusw1,w,c
 17802  0168DA  6EE6               	movwf	postinc1,c
 17803  0168DC  EC0C  F0C5         	call	_putch	;wreg free
 17804  0168E0  D075               	goto	l2862
 17805  0168E2                     l9473:
 17806                           
 17807                           ;stkvar	_fp @ sp[(0)+-4]
 17808  0168E2  0EFC               	movlw	-4
 17809  0168E4  006F FF8C  F03C    	movff	plusw1,btemp+10
 17810  0168EA  0EFD               	movlw	-3
 17811  0168EC  006F FF8C  F03D    	movff	plusw1,btemp+11
 17812  0168F2  0E04               	movlw	4
 17813  0168F4  243C               	addwf	(btemp+10)^0,w,c
 17814  0168F6  6ED9               	movwf	fsr2l,c
 17815  0168F8  0E00               	movlw	0
 17816  0168FA  203D               	addwfc	(btemp+11)^0,w,c
 17817  0168FC  6EDA               	movwf	fsr2h,c
 17818  0168FE  50DE               	movf	postinc2,w,c
 17819  016900  10DE               	iorwf	postinc2,w,c
 17820  016902  B4D8               	btfsc	status,2,c
 17821  016904  D026               	goto	u8970
 17822                           
 17823                           ;stkvar	_fp @ sp[(0)+-4]
 17824  016906  0EFC               	movlw	-4
 17825  016908  006F FF8C  F03C    	movff	plusw1,btemp+10
 17826  01690E  0EFD               	movlw	-3
 17827  016910  006F FF8C  F03D    	movff	plusw1,btemp+11
 17828  016916  0E04               	movlw	4
 17829  016918  243C               	addwf	(btemp+10)^0,w,c
 17830  01691A  6ED9               	movwf	fsr2l,c
 17831  01691C  0E00               	movlw	0
 17832  01691E  203D               	addwfc	(btemp+11)^0,w,c
 17833  016920  6EDA               	movwf	fsr2h,c
 17834                           
 17835                           ;stkvar	_fp @ sp[(0)+-4]
 17836  016922  0EFC               	movlw	-4
 17837  016924  006F FF8C  F03C    	movff	plusw1,btemp+10
 17838  01692A  0EFD               	movlw	-3
 17839  01692C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17840  016932  0E02               	movlw	2
 17841  016934  243C               	addwf	(btemp+10)^0,w,c
 17842  016936  6EE9               	movwf	fsr0l,c
 17843  016938  0E00               	movlw	0
 17844  01693A  203D               	addwfc	(btemp+11)^0,w,c
 17845  01693C  6EEA               	movwf	fsr0h,c
 17846  01693E  50DE               	movf	postinc2,w,c
 17847  016940  5CEE               	subwf	postinc0,w,c
 17848  016942  50EE               	movf	postinc0,w,c
 17849  016944  0A80               	xorlw	128
 17850  016946  6E32               	movwf	btemp^0,c
 17851  016948  50DE               	movf	postinc2,w,c
 17852  01694A  0A80               	xorlw	128
 17853  01694C  5832               	subwfb	btemp^0,w,c
 17854  01694E  B0D8               	btfsc	status,0,c
 17855  016950  D03D               	goto	l2862
 17856  016952                     u8970:
 17857                           
 17858                           ;stkvar	_c @ sp[(0)+-2]
 17859                           ;stkvar	_fp @ sp[(0)+-4]
 17860  016952  0EFC               	movlw	-4
 17861  016954  006F FF8C  F03C    	movff	plusw1,btemp+10
 17862  01695A  0EFD               	movlw	-3
 17863  01695C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17864  016962  0E02               	movlw	2
 17865  016964  243C               	addwf	(btemp+10)^0,w,c
 17866  016966  6ED9               	movwf	fsr2l,c
 17867  016968  0E00               	movlw	0
 17868  01696A  203D               	addwfc	(btemp+11)^0,w,c
 17869  01696C  6EDA               	movwf	fsr2h,c
 17870  01696E  006F FF78  F03C    	movff	postinc2,btemp+10
 17871  016974  006F FF74  F03D    	movff	postdec2,btemp+11
 17872                           
 17873                           ;stkvar	_fp @ sp[(0)+-4]
 17874  01697A  0EFC               	movlw	-4
 17875  01697C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17876  016982  0EFD               	movlw	-3
 17877  016984  006F FF8F FFDA     	movff	plusw1,fsr2h
 17878  01698A  006F FF78  F03A    	movff	postinc2,btemp+8
 17879  016990  006F FF74  F03B    	movff	postdec2,btemp+9
 17880  016996  503C               	movf	(btemp+10)^0,w,c
 17881  016998  243A               	addwf	(btemp+8)^0,w,c
 17882  01699A  6ED9               	movwf	fsr2l,c
 17883  01699C  503D               	movf	(btemp+11)^0,w,c
 17884  01699E  203B               	addwfc	(btemp+9)^0,w,c
 17885  0169A0  6EDA               	movwf	fsr2h,c
 17886  0169A2  0EFE               	movlw	-2
 17887  0169A4  006F FF8F FFDF     	movff	plusw1,indf2
 17888                           
 17889                           ;stkvar	_fp @ sp[(0)+-4]
 17890  0169AA  0EFC               	movlw	-4
 17891  0169AC  006F FF8C  F03C    	movff	plusw1,btemp+10
 17892  0169B2  0EFD               	movlw	-3
 17893  0169B4  006F FF8C  F03D    	movff	plusw1,btemp+11
 17894  0169BA  0E02               	movlw	2
 17895  0169BC  243C               	addwf	(btemp+10)^0,w,c
 17896  0169BE  6ED9               	movwf	fsr2l,c
 17897  0169C0  0E00               	movlw	0
 17898  0169C2  203D               	addwfc	(btemp+11)^0,w,c
 17899  0169C4  6EDA               	movwf	fsr2h,c
 17900  0169C6  2ADE               	incf	postinc2,f,c
 17901  0169C8  0E00               	movlw	0
 17902  0169CA  22DD               	addwfc	postdec2,f,c
 17903  0169CC                     l2862:
 17904                           
 17905                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17906  0169CC  52E5               	movf	postdec1,f,c
 17907  0169CE  52E5               	movf	postdec1,f,c
 17908  0169D0  52E5               	movf	postdec1,f,c
 17909  0169D2  52E5               	movf	postdec1,f,c
 17910  0169D4  0012               	return		;funcret
 17911  0169D6                     __end_of_fputc:
 17912                           	opt callstack 0
 17913                           
 17914 ;; *************** function _putch *****************
 17915 ;; Defined at:
 17916 ;;		line 155 in file "eadog.c"
 17917 ;; Parameters:    Size  Location     Type
 17918 ;;  c               1  [STACK] unsigned char 
 17919 ;; Auto vars:     Size  Location     Type
 17920 ;;		None
 17921 ;; Return value:  Size  Location     Type
 17922 ;;                  1  [STACK] void 
 17923 ;; Registers used:
 17924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17925 ;; Tracked objects:
 17926 ;;		On entry : 0/5
 17927 ;;		On exit  : 0/0
 17928 ;;		Unchanged: 0/0
 17929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17934 ;;Total ram usage:        0 bytes
 17935 ;; Hardware stack levels used:    1
 17936 ;; Hardware stack levels required when called:    7
 17937 ;; This function calls:
 17938 ;;		_ringBufS_put_dma
 17939 ;; This function is called by:
 17940 ;;		_fputc
 17941 ;; This function uses a reentrant model
 17942 ;;
 17943                           
 17944                           	psect	text68
 17945  018A18                     __ptext68:
 17946                           	opt callstack 0
 17947  018A18                     _putch:
 17948                           	opt callstack 13
 17949                           
 17950                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 17951                           ;stkvar	_c @ sp[(0)+-1]
 17952                           
 17953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17954                           ;incstack = 0
 17955  018A18  0EFF               	movlw	-1
 17956  018A1A  50E3               	movf	plusw1,w,c
 17957  018A1C  6EE6               	movwf	postinc1,c
 17958  018A1E  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 17959  018A24  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 17960  018A2A  EC90  F0B9         	call	_ringBufS_put_dma	;wreg free
 17961                           
 17962                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 17963  018A2E  52E5               	movf	postdec1,f,c
 17964  018A30  0012               	return		;funcret
 17965  018A32                     __end_of_putch:
 17966                           	opt callstack 0
 17967                           
 17968 ;; *************** function _ringBufS_put_dma *****************
 17969 ;; Defined at:
 17970 ;;		line 67 in file "ringbufs.c"
 17971 ;; Parameters:    Size  Location     Type
 17972 ;;  _this           2  [STACK] PTR struct ringBufS_t
 17973 ;;		 -> ring_buf1(67), 
 17974 ;;  c               1  [STACK] const unsigned char 
 17975 ;; Auto vars:     Size  Location     Type
 17976 ;;		None
 17977 ;; Return value:  Size  Location     Type
 17978 ;;                  1  [STACK] void 
 17979 ;; Registers used:
 17980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17981 ;; Tracked objects:
 17982 ;;		On entry : 0/5
 17983 ;;		On exit  : 0/0
 17984 ;;		Unchanged: 0/0
 17985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17990 ;;Total ram usage:        0 bytes
 17991 ;; Hardware stack levels used:    1
 17992 ;; Hardware stack levels required when called:    6
 17993 ;; This function calls:
 17994 ;;		Nothing
 17995 ;; This function is called by:
 17996 ;;		_putch
 17997 ;; This function uses a reentrant model
 17998 ;;
 17999                           
 18000                           	psect	text69
 18001  017320                     __ptext69:
 18002                           	opt callstack 0
 18003  017320                     _ringBufS_put_dma:
 18004                           	opt callstack 13
 18005                           
 18006                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18007                           ;stkvar	__this @ sp[(0)+-2]
 18008                           
 18009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18010                           ;incstack = 0
 18011  017320  0EFE               	movlw	-2
 18012  017322  006F FF8C  F03C    	movff	plusw1,btemp+10
 18013  017328  0EFF               	movlw	-1
 18014  01732A  006F FF8C  F03D    	movff	plusw1,btemp+11
 18015  017330  0E42               	movlw	66
 18016  017332  243C               	addwf	(btemp+10)^0,w,c
 18017  017334  6ED9               	movwf	fsr2l,c
 18018  017336  0E00               	movlw	0
 18019  017338  203D               	addwfc	(btemp+11)^0,w,c
 18020  01733A  6EDA               	movwf	fsr2h,c
 18021  01733C  0E40               	movlw	64
 18022  01733E  60DF               	cpfslt	indf2,c
 18023  017340  D040               	goto	l1481
 18024                           
 18025                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18026                           ;stkvar	_c @ sp[(0)+-3]
 18027                           ;stkvar	__this @ sp[(0)+-2]
 18028  017342  0EFE               	movlw	-2
 18029  017344  006F FF8C  F03C    	movff	plusw1,btemp+10
 18030  01734A  0EFF               	movlw	-1
 18031  01734C  006F FF8C  F03D    	movff	plusw1,btemp+11
 18032  017352  0E40               	movlw	64
 18033  017354  243C               	addwf	(btemp+10)^0,w,c
 18034  017356  6ED9               	movwf	fsr2l,c
 18035  017358  0E00               	movlw	0
 18036  01735A  203D               	addwfc	(btemp+11)^0,w,c
 18037  01735C  6EDA               	movwf	fsr2h,c
 18038  01735E  50DF               	movf	indf2,w,c
 18039  017360  6E3D               	movwf	(btemp+11)^0,c
 18040                           
 18041                           ;stkvar	__this @ sp[(0)+-2]
 18042  017362  0EFE               	movlw	-2
 18043  017364  006F FF8C  F03A    	movff	plusw1,btemp+8
 18044  01736A  0EFF               	movlw	-1
 18045  01736C  006F FF8C  F03B    	movff	plusw1,btemp+9
 18046  017372  503D               	movf	(btemp+11)^0,w,c
 18047  017374  243A               	addwf	(btemp+8)^0,w,c
 18048  017376  6ED9               	movwf	fsr2l,c
 18049  017378  0E00               	movlw	0
 18050  01737A  203B               	addwfc	(btemp+9)^0,w,c
 18051  01737C  6EDA               	movwf	fsr2h,c
 18052  01737E  0EFD               	movlw	-3
 18053  017380  006F FF8F FFDF     	movff	plusw1,indf2
 18054                           
 18055                           ;ringbufs.c: 71:   ++_this->head;
 18056                           ;stkvar	__this @ sp[(0)+-2]
 18057  017386  0EFE               	movlw	-2
 18058  017388  006F FF8C  F03C    	movff	plusw1,btemp+10
 18059  01738E  0EFF               	movlw	-1
 18060  017390  006F FF8C  F03D    	movff	plusw1,btemp+11
 18061  017396  0E40               	movlw	64
 18062  017398  243C               	addwf	(btemp+10)^0,w,c
 18063  01739A  6ED9               	movwf	fsr2l,c
 18064  01739C  0E00               	movlw	0
 18065  01739E  203D               	addwfc	(btemp+11)^0,w,c
 18066  0173A0  6EDA               	movwf	fsr2h,c
 18067  0173A2  2ADF               	incf	indf2,f,c
 18068                           
 18069                           ;ringbufs.c: 72:   ++_this->count;
 18070                           ;stkvar	__this @ sp[(0)+-2]
 18071  0173A4  0EFE               	movlw	-2
 18072  0173A6  006F FF8C  F03C    	movff	plusw1,btemp+10
 18073  0173AC  0EFF               	movlw	-1
 18074  0173AE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18075  0173B4  0E42               	movlw	66
 18076  0173B6  243C               	addwf	(btemp+10)^0,w,c
 18077  0173B8  6ED9               	movwf	fsr2l,c
 18078  0173BA  0E00               	movlw	0
 18079  0173BC  203D               	addwfc	(btemp+11)^0,w,c
 18080  0173BE  6EDA               	movwf	fsr2h,c
 18081  0173C0  2ADF               	incf	indf2,f,c
 18082  0173C2                     l1481:
 18083                           
 18084                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18085  0173C2  52E5               	movf	postdec1,f,c
 18086  0173C4  52E5               	movf	postdec1,f,c
 18087  0173C6  52E5               	movf	postdec1,f,c
 18088  0173C8  0012               	return		;funcret
 18089  0173CA                     __end_of_ringBufS_put_dma:
 18090                           	opt callstack 0
 18091                           
 18092 ;; *************** function _atoi *****************
 18093 ;; Defined at:
 18094 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18095 ;; Parameters:    Size  Location     Type
 18096 ;;  s               2  [STACK] PTR const unsigned char 
 18097 ;;		 -> STR_41(3), STR_40(3), STR_39(19), STR_38(19), 
 18098 ;;		 -> STR_37(19), STR_36(19), STR_35(19), STR_34(19), 
 18099 ;;		 -> STR_33(24), STR_32(15), STR_31(15), STR_30(15), 
 18100 ;;		 -> STR_29(10), STR_28(10), STR_27(19), STR_26(19), 
 18101 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(19), 
 18102 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
 18103 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
 18104 ;;		 -> STR_11(19), STR_10(19), STR_9(19), STR_8(17), 
 18105 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 18106 ;;		 -> STR_1(17), 
 18107 ;; Auto vars:     Size  Location     Type
 18108 ;;  n               2  [STACK] int 
 18109 ;;  neg             2  [STACK] int 
 18110 ;; Return value:  Size  Location     Type
 18111 ;;                  2  [STACK] int 
 18112 ;; Registers used:
 18113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18114 ;; Tracked objects:
 18115 ;;		On entry : 0/5
 18116 ;;		On exit  : 0/0
 18117 ;;		Unchanged: 0/0
 18118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18123 ;;Total ram usage:        0 bytes
 18124 ;; Hardware stack levels used:    1
 18125 ;; Hardware stack levels required when called:    7
 18126 ;; This function calls:
 18127 ;;		_isdigit
 18128 ;;		_isspace
 18129 ;; This function is called by:
 18130 ;;		_vfpfcnvrt
 18131 ;; This function uses a reentrant model
 18132 ;;
 18133                           
 18134                           	psect	text70
 18135  01541C                     __ptext70:
 18136                           	opt callstack 0
 18137  01541C                     _atoi:
 18138                           	opt callstack 0
 18139                           
 18140                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18141  01541C  0E09               	movlw	9
 18142  01541E  26E1               	addwf	fsr1l,f,c
 18143  015420  0E00               	movlw	0
 18144  015422  22E2               	addwfc	fsr1h,f,c
 18145                           
 18146                           ;stkvar	_n @ sp[(-9)+5]
 18147                           
 18148                           ;incstack = 0
 18149  015424  0EFC               	movlw	-4
 18150  015426  6AE3               	clrf	plusw1,c
 18151  015428  0EFD               	movlw	-3
 18152  01542A  6AE3               	clrf	plusw1,c
 18153                           
 18154                           ;stkvar	_neg @ sp[(-9)+7]
 18155  01542C  0EFE               	movlw	-2
 18156  01542E  6AE3               	clrf	plusw1,c
 18157  015430  0EFF               	movlw	-1
 18158  015432  6AE3               	clrf	plusw1,c
 18159  015434  D011               	goto	l7733
 18160  015436                     l7731:
 18161                           
 18162                           ;stkvar	_s @ sp[(-9)+-2]
 18163  015436  0EF5               	movlw	-11
 18164  015438  50E3               	movf	plusw1,w,c
 18165  01543A  0F01               	addlw	1
 18166  01543C  6E32               	movwf	btemp^0,c
 18167  01543E  0EF5               	movlw	-11
 18168  015440  0060  F0CB  FFE3   	movff	btemp,plusw1
 18169  015446  6A32               	clrf	btemp^0,c
 18170  015448  0EF6               	movlw	-10
 18171  01544A  50E3               	movf	plusw1,w,c
 18172  01544C  2032               	addwfc	btemp^0,w,c
 18173  01544E  6E32               	movwf	btemp^0,c
 18174  015450  0EF6               	movlw	-10
 18175  015452  0060  F0CB  FFE3   	movff	btemp,plusw1
 18176  015458                     l7733:
 18177                           
 18178                           ;stkvar	_atoi$5036 @ sp[(-9)+4]
 18179  015458  0EFB               	movlw	-5
 18180  01545A  6AE3               	clrf	plusw1,c
 18181  01545C  2AE3               	incf	plusw1,f,c
 18182                           
 18183                           ;stkvar	_s @ sp[(-9)+-2]
 18184  01545E  50E1               	movf	fsr1l,w,c
 18185  015460  0FF5               	addlw	-11
 18186  015462  6ED9               	movwf	fsr2l,c
 18187  015464  50E2               	movf	fsr1h,w,c
 18188  015466  6EDA               	movwf	fsr2h,c
 18189  015468  0EFF               	movlw	255
 18190  01546A  22DA               	addwfc	fsr2h,f,c
 18191  01546C  006F FF7B FFF6     	movff	postinc2,tblptrl
 18192  015472  006F FF77 FFF7     	movff	postdec2,tblptrh
 18193  015478                     	if	0	;tblptru may be non-zero
 18194  015478                     	endif
 18195  015478                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18196  015478  0E00               	movlw	low (__mediumconst shr (0+16))
 18197  01547A  6EF8               	movwf	tblptru,c
 18198  01547C                     	endif
 18199  01547C  0008               	tblrd		*
 18200  01547E  50F5               	movf	tablat,w,c
 18201  015480  0A20               	xorlw	32
 18202  015482  B4D8               	btfsc	status,2,c
 18203  015484  D023               	goto	l7741
 18204  015486  0EF7               	movlw	247
 18205  015488  6E3C               	movwf	(btemp+10)^0,c
 18206  01548A  0EFF               	movlw	255
 18207  01548C  6E3D               	movwf	(btemp+11)^0,c
 18208                           
 18209                           ;stkvar	_s @ sp[(-9)+-2]
 18210  01548E  50E1               	movf	fsr1l,w,c
 18211  015490  0FF5               	addlw	-11
 18212  015492  6ED9               	movwf	fsr2l,c
 18213  015494  50E2               	movf	fsr1h,w,c
 18214  015496  6EDA               	movwf	fsr2h,c
 18215  015498  0EFF               	movlw	255
 18216  01549A  22DA               	addwfc	fsr2h,f,c
 18217  01549C  006F FF7B FFF6     	movff	postinc2,tblptrl
 18218  0154A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 18219  0154A8                     	if	0	;tblptru may be non-zero
 18220  0154A8                     	endif
 18221  0154A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18222  0154A8  0E00               	movlw	low (__mediumconst shr (0+16))
 18223  0154AA  6EF8               	movwf	tblptru,c
 18224  0154AC                     	endif
 18225  0154AC  0008               	tblrd		*
 18226  0154AE  50F5               	movf	tablat,w,c
 18227  0154B0  6E3A               	movwf	(btemp+8)^0,c
 18228  0154B2  6A3B               	clrf	(btemp+9)^0,c
 18229  0154B4  503C               	movf	(btemp+10)^0,w,c
 18230  0154B6  263A               	addwf	(btemp+8)^0,f,c
 18231  0154B8  503D               	movf	(btemp+11)^0,w,c
 18232  0154BA  223B               	addwfc	(btemp+9)^0,f,c
 18233  0154BC  503B               	movf	(btemp+9)^0,w,c
 18234  0154BE  E104               	bnz	u7400
 18235  0154C0  0E05               	movlw	5
 18236  0154C2  5C3A               	subwf	(btemp+8)^0,w,c
 18237  0154C4  A0D8               	btfss	status,0,c
 18238  0154C6  D002               	goto	l7741
 18239  0154C8                     u7400:
 18240                           
 18241                           ;stkvar	_atoi$5036 @ sp[(-9)+4]
 18242  0154C8  0EFB               	movlw	-5
 18243  0154CA  6AE3               	clrf	plusw1,c
 18244  0154CC                     l7741:
 18245                           
 18246                           ;stkvar	_atoi$5036 @ sp[(-9)+4]
 18247  0154CC  0EFB               	movlw	-5
 18248  0154CE  50E3               	movf	plusw1,w,c
 18249  0154D0  6E3C               	movwf	(btemp+10)^0,c
 18250  0154D2  6A3D               	clrf	(btemp+11)^0,c
 18251                           
 18252                           ;stkvar	_atoi$5035 @ sp[(-9)+2]
 18253  0154D4  0EF9               	movlw	-7
 18254  0154D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18255  0154DC  0EFA               	movlw	-6
 18256  0154DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18257                           
 18258                           ;stkvar	_atoi$5035 @ sp[(-9)+2]
 18259  0154E4  0EF9               	movlw	-7
 18260  0154E6  006F FF8C  F032    	movff	plusw1,btemp
 18261  0154EC  0EFA               	movlw	-6
 18262  0154EE  50E3               	movf	plusw1,w,c
 18263  0154F0  1032               	iorwf	btemp^0,w,c
 18264  0154F2  B4D8               	btfsc	status,2,c
 18265  0154F4  D01F               	goto	l7751
 18266  0154F6  D79F               	goto	l7731
 18267  0154F8                     l7747:
 18268  0154F8  0E01               	movlw	1
 18269  0154FA  6E3C               	movwf	(btemp+10)^0,c
 18270  0154FC  0E00               	movlw	0
 18271  0154FE  6E3D               	movwf	(btemp+11)^0,c
 18272                           
 18273                           ;stkvar	_neg @ sp[(-9)+7]
 18274  015500  0EFE               	movlw	-2
 18275  015502  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18276  015508  0EFF               	movlw	-1
 18277  01550A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18278  015510                     l7749:
 18279                           
 18280                           ;stkvar	_s @ sp[(-9)+-2]
 18281  015510  0EF5               	movlw	-11
 18282  015512  50E3               	movf	plusw1,w,c
 18283  015514  0F01               	addlw	1
 18284  015516  6E32               	movwf	btemp^0,c
 18285  015518  0EF5               	movlw	-11
 18286  01551A  0060  F0CB  FFE3   	movff	btemp,plusw1
 18287  015520  6A32               	clrf	btemp^0,c
 18288  015522  0EF6               	movlw	-10
 18289  015524  50E3               	movf	plusw1,w,c
 18290  015526  2032               	addwfc	btemp^0,w,c
 18291  015528  6E32               	movwf	btemp^0,c
 18292  01552A  0EF6               	movlw	-10
 18293  01552C  0060  F0CB  FFE3   	movff	btemp,plusw1
 18294  015532  D053               	goto	l7757
 18295  015534                     l7751:
 18296                           
 18297                           ;stkvar	_s @ sp[(-9)+-2]
 18298  015534  50E1               	movf	fsr1l,w,c
 18299  015536  0FF5               	addlw	-11
 18300  015538  6ED9               	movwf	fsr2l,c
 18301  01553A  50E2               	movf	fsr1h,w,c
 18302  01553C  6EDA               	movwf	fsr2h,c
 18303  01553E  0EFF               	movlw	255
 18304  015540  22DA               	addwfc	fsr2h,f,c
 18305  015542  006F FF7B FFF6     	movff	postinc2,tblptrl
 18306  015548  006F FF77 FFF7     	movff	postdec2,tblptrh
 18307  01554E                     	if	0	;tblptru may be non-zero
 18308  01554E                     	endif
 18309  01554E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18310  01554E  0E00               	movlw	low (__mediumconst shr (0+16))
 18311  015550  6EF8               	movwf	tblptru,c
 18312  015552                     	endif
 18313  015552  0008               	tblrd		*
 18314  015554  50F5               	movf	tablat,w,c
 18315  015556  6E3C               	movwf	(btemp+10)^0,c
 18316  015558  6A3D               	clrf	(btemp+11)^0,c
 18317                           
 18318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18319                           ; Switch size 1, requested type "simple"
 18320                           ; Number of cases is 1, Range of values is 0 to 0
 18321                           ; switch strategies available:
 18322                           ; Name         Instructions Cycles
 18323                           ; simple_byte            4     3 (average)
 18324                           ;	Chosen strategy is simple_byte
 18325  01555A  503D               	movf	(btemp+11)^0,w,c
 18326  01555C  0A00               	xorlw	0	; case 0
 18327  01555E  A4D8               	btfss	status,2,c
 18328  015560  D03C               	goto	l7757
 18329                           
 18330                           ; Switch size 1, requested type "simple"
 18331                           ; Number of cases is 2, Range of values is 43 to 45
 18332                           ; switch strategies available:
 18333                           ; Name         Instructions Cycles
 18334                           ; simple_byte            7     4 (average)
 18335                           ;	Chosen strategy is simple_byte
 18336  015562  503C               	movf	(btemp+10)^0,w,c
 18337  015564  0A2B               	xorlw	43	; case 43
 18338  015566  B4D8               	btfsc	status,2,c
 18339  015568  D7D3               	goto	l7749
 18340  01556A  0A06               	xorlw	6	; case 45
 18341  01556C  B4D8               	btfsc	status,2,c
 18342  01556E  D7C4               	goto	l7747
 18343  015570  D034               	goto	l7757
 18344  015572                     l7753:
 18345                           
 18346                           ;stkvar	_n @ sp[(-9)+5]
 18347  015572  0EFC               	movlw	-4
 18348  015574  006F FF8C  F03C    	movff	plusw1,btemp+10
 18349  01557A  0EFD               	movlw	-3
 18350  01557C  006F FF8C  F03D    	movff	plusw1,btemp+11
 18351  015582  0E0A               	movlw	10
 18352  015584  023C               	mulwf	(btemp+10)^0,c
 18353  015586  006F FFCC  F03A    	movff	prodl,btemp+8
 18354  01558C  006F FFD0  F03B    	movff	prodh,btemp+9
 18355  015592  023D               	mulwf	(btemp+11)^0,c
 18356  015594  50F3               	movf	prodl,w,c
 18357  015596  263B               	addwf	(btemp+9)^0,f,c
 18358                           
 18359                           ;stkvar	_s @ sp[(-9)+-2]
 18360  015598  50E1               	movf	fsr1l,w,c
 18361  01559A  0FF5               	addlw	-11
 18362  01559C  6ED9               	movwf	fsr2l,c
 18363  01559E  50E2               	movf	fsr1h,w,c
 18364  0155A0  6EDA               	movwf	fsr2h,c
 18365  0155A2  0EFF               	movlw	255
 18366  0155A4  22DA               	addwfc	fsr2h,f,c
 18367  0155A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 18368  0155AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 18369  0155B2                     	if	0	;tblptru may be non-zero
 18370  0155B2                     	endif
 18371  0155B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18372  0155B2  0E00               	movlw	low (__mediumconst shr (0+16))
 18373  0155B4  6EF8               	movwf	tblptru,c
 18374  0155B6                     	endif
 18375  0155B6  0008               	tblrd		*
 18376  0155B8  50F5               	movf	tablat,w,c
 18377  0155BA  5E3A               	subwf	(btemp+8)^0,f,c
 18378  0155BC  0E00               	movlw	0
 18379  0155BE  5A3B               	subwfb	(btemp+9)^0,f,c
 18380  0155C0  0E30               	movlw	48
 18381  0155C2  263A               	addwf	(btemp+8)^0,f,c
 18382  0155C4  0E00               	movlw	0
 18383  0155C6  223B               	addwfc	(btemp+9)^0,f,c
 18384                           
 18385                           ;stkvar	_n @ sp[(-9)+5]
 18386  0155C8  0EFC               	movlw	-4
 18387  0155CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 18388  0155D0  0EFD               	movlw	-3
 18389  0155D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 18390  0155D8  D79B               	goto	l7749
 18391  0155DA                     l7757:
 18392  0155DA  0ED0               	movlw	208
 18393  0155DC  6E3C               	movwf	(btemp+10)^0,c
 18394  0155DE  0EFF               	movlw	255
 18395  0155E0  6E3D               	movwf	(btemp+11)^0,c
 18396                           
 18397                           ;stkvar	_s @ sp[(-9)+-2]
 18398  0155E2  50E1               	movf	fsr1l,w,c
 18399  0155E4  0FF5               	addlw	-11
 18400  0155E6  6ED9               	movwf	fsr2l,c
 18401  0155E8  50E2               	movf	fsr1h,w,c
 18402  0155EA  6EDA               	movwf	fsr2h,c
 18403  0155EC  0EFF               	movlw	255
 18404  0155EE  22DA               	addwfc	fsr2h,f,c
 18405  0155F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 18406  0155F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 18407  0155FC                     	if	0	;tblptru may be non-zero
 18408  0155FC                     	endif
 18409  0155FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18410  0155FC  0E00               	movlw	low (__mediumconst shr (0+16))
 18411  0155FE  6EF8               	movwf	tblptru,c
 18412  015600                     	endif
 18413  015600  0008               	tblrd		*
 18414  015602  50F5               	movf	tablat,w,c
 18415  015604  6E3A               	movwf	(btemp+8)^0,c
 18416  015606  6A3B               	clrf	(btemp+9)^0,c
 18417  015608  503C               	movf	(btemp+10)^0,w,c
 18418  01560A  263A               	addwf	(btemp+8)^0,f,c
 18419  01560C  503D               	movf	(btemp+11)^0,w,c
 18420  01560E  223B               	addwfc	(btemp+9)^0,f,c
 18421  015610  503B               	movf	(btemp+9)^0,w,c
 18422  015612  E106               	bnz	u7420
 18423  015614  0E0A               	movlw	10
 18424  015616  5C3A               	subwf	(btemp+8)^0,w,c
 18425  015618  B0D8               	btfsc	status,0,c
 18426  01561A  D002               	goto	u7420
 18427  01561C  0E01               	movlw	1
 18428  01561E  D001               	goto	u7430
 18429  015620                     u7420:
 18430  015620  0E00               	movlw	0
 18431  015622                     u7430:
 18432  015622  6E3C               	movwf	(btemp+10)^0,c
 18433  015624  6A3D               	clrf	(btemp+11)^0,c
 18434                           
 18435                           ;stkvar	_atoi$5037 @ sp[(-9)+0]
 18436  015626  0EF7               	movlw	-9
 18437  015628  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18438  01562E  0EF8               	movlw	-8
 18439  015630  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18440                           
 18441                           ;stkvar	_atoi$5037 @ sp[(-9)+0]
 18442  015636  0EF7               	movlw	-9
 18443  015638  006F FF8C  F032    	movff	plusw1,btemp
 18444  01563E  0EF8               	movlw	-8
 18445  015640  50E3               	movf	plusw1,w,c
 18446  015642  1032               	iorwf	btemp^0,w,c
 18447  015644  A4D8               	btfss	status,2,c
 18448  015646  D795               	goto	l7753
 18449                           
 18450                           ;stkvar	_neg @ sp[(-9)+7]
 18451  015648  0EFE               	movlw	-2
 18452  01564A  006F FF8C  F032    	movff	plusw1,btemp
 18453  015650  0EFF               	movlw	-1
 18454  015652  50E3               	movf	plusw1,w,c
 18455  015654  1032               	iorwf	btemp^0,w,c
 18456  015656  A4D8               	btfss	status,2,c
 18457  015658  D00E               	goto	l7767
 18458                           
 18459                           ;stkvar	_n @ sp[(-9)+5]
 18460  01565A  0EFC               	movlw	-4
 18461  01565C  006F FF8C  F032    	movff	plusw1,btemp
 18462  015662  1E32               	comf	btemp^0,f,c
 18463  015664  0EFD               	movlw	-3
 18464  015666  006F FF8C  F033    	movff	plusw1,btemp+1
 18465  01566C  1E33               	comf	(btemp+1)^0,f,c
 18466  01566E  2A32               	incf	btemp^0,f,c
 18467  015670  B4D8               	btfsc	status,2,c
 18468  015672  2A33               	incf	(btemp+1)^0,f,c
 18469  015674  D008               	goto	l2798
 18470  015676                     l7767:
 18471                           
 18472                           ;stkvar	_n @ sp[(-9)+5]
 18473  015676  0EFC               	movlw	-4
 18474  015678  006F FF8C  F032    	movff	plusw1,btemp
 18475  01567E  0EFD               	movlw	-3
 18476  015680  006F FF8C  F033    	movff	plusw1,btemp+1
 18477  015686                     l2798:
 18478                           
 18479                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 18480  015686  0EF5               	movlw	245
 18481  015688  26E1               	addwf	fsr1l,f,c
 18482  01568A  0EFF               	movlw	255
 18483  01568C  22E2               	addwfc	fsr1h,f,c
 18484  01568E  0012               	return		;funcret
 18485  015690                     __end_of_atoi:
 18486                           	opt callstack 0
 18487                           
 18488 ;; *************** function _isspace *****************
 18489 ;; Defined at:
 18490 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 18491 ;; Parameters:    Size  Location     Type
 18492 ;;  c               2  [STACK] int 
 18493 ;; Auto vars:     Size  Location     Type
 18494 ;;		None
 18495 ;; Return value:  Size  Location     Type
 18496 ;;                  2  [STACK] int 
 18497 ;; Registers used:
 18498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18499 ;; Tracked objects:
 18500 ;;		On entry : 0/0
 18501 ;;		On exit  : 0/0
 18502 ;;		Unchanged: 0/0
 18503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18508 ;;Total ram usage:        0 bytes
 18509 ;; Hardware stack levels used:    1
 18510 ;; Hardware stack levels required when called:    6
 18511 ;; This function calls:
 18512 ;;		Nothing
 18513 ;; This function is called by:
 18514 ;;		_atoi
 18515 ;; This function uses a reentrant model
 18516 ;;
 18517                           
 18518                           	psect	text71
 18519  017F7E                     __ptext71:
 18520                           	opt callstack 0
 18521  017F7E                     _isspace:
 18522                           	opt callstack 0
 18523                           
 18524                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18525  017F7E  52E6               	movf	postinc1,f,c
 18526                           
 18527                           ;stkvar	_isspace$5075 @ sp[(-1)+0]
 18528                           
 18529                           ;incstack = 0
 18530  017F80  0EFF               	movlw	-1
 18531  017F82  6AE3               	clrf	plusw1,c
 18532  017F84  2AE3               	incf	plusw1,f,c
 18533                           
 18534                           ;stkvar	_c @ sp[(-1)+-2]
 18535  017F86  0EFD               	movlw	-3
 18536  017F88  006F FF8C  F032    	movff	plusw1,btemp
 18537  017F8E  0E20               	movlw	32
 18538  017F90  1832               	xorwf	btemp^0,w,c
 18539  017F92  E104               	bnz	u6390
 18540  017F94  0EFE               	movlw	-2
 18541  017F96  50E3               	movf	plusw1,w,c
 18542  017F98  B4D8               	btfsc	status,2,c
 18543  017F9A  D012               	goto	l7217
 18544  017F9C                     u6390:
 18545                           
 18546                           ;stkvar	_c @ sp[(-1)+-2]
 18547  017F9C  0EFD               	movlw	-3
 18548  017F9E  50E3               	movf	plusw1,w,c
 18549  017FA0  0FF7               	addlw	247
 18550  017FA2  6E3C               	movwf	(btemp+10)^0,c
 18551  017FA4  0EFE               	movlw	-2
 18552  017FA6  006F FF8C  F03D    	movff	plusw1,btemp+11
 18553  017FAC  0EFF               	movlw	255
 18554  017FAE  223D               	addwfc	(btemp+11)^0,f,c
 18555  017FB0  503D               	movf	(btemp+11)^0,w,c
 18556  017FB2  E104               	bnz	u6400
 18557  017FB4  0E05               	movlw	5
 18558  017FB6  5C3C               	subwf	(btemp+10)^0,w,c
 18559  017FB8  A0D8               	btfss	status,0,c
 18560  017FBA  D002               	goto	l7217
 18561  017FBC                     u6400:
 18562                           
 18563                           ;stkvar	_isspace$5075 @ sp[(-1)+0]
 18564  017FBC  0EFF               	movlw	-1
 18565  017FBE  6AE3               	clrf	plusw1,c
 18566  017FC0                     l7217:
 18567                           
 18568                           ;stkvar	_isspace$5075 @ sp[(-1)+0]
 18569  017FC0  0EFF               	movlw	-1
 18570  017FC2  50E3               	movf	plusw1,w,c
 18571  017FC4  6E32               	movwf	btemp^0,c
 18572  017FC6  6A33               	clrf	(btemp+1)^0,c
 18573                           
 18574                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18575  017FC8  52E5               	movf	postdec1,f,c
 18576  017FCA  52E5               	movf	postdec1,f,c
 18577  017FCC  52E5               	movf	postdec1,f,c
 18578  017FCE  0012               	return		;funcret
 18579  017FD0                     __end_of_isspace:
 18580                           	opt callstack 0
 18581                           
 18582 ;; *************** function _isdigit *****************
 18583 ;; Defined at:
 18584 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 18585 ;; Parameters:    Size  Location     Type
 18586 ;;  c               2  [STACK] int 
 18587 ;; Auto vars:     Size  Location     Type
 18588 ;;		None
 18589 ;; Return value:  Size  Location     Type
 18590 ;;                  2  [STACK] int 
 18591 ;; Registers used:
 18592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18593 ;; Tracked objects:
 18594 ;;		On entry : 0/0
 18595 ;;		On exit  : 0/0
 18596 ;;		Unchanged: 0/0
 18597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18602 ;;Total ram usage:        0 bytes
 18603 ;; Hardware stack levels used:    1
 18604 ;; Hardware stack levels required when called:    6
 18605 ;; This function calls:
 18606 ;;		Nothing
 18607 ;; This function is called by:
 18608 ;;		_vfpfcnvrt
 18609 ;;		_atoi
 18610 ;; This function uses a reentrant model
 18611 ;;
 18612                           
 18613                           	psect	text72
 18614  018422                     __ptext72:
 18615                           	opt callstack 0
 18616  018422                     _isdigit:
 18617                           	opt callstack 18
 18618                           
 18619                           ;stkvar	_c @ sp[(0)+-2]
 18620                           
 18621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18622                           ;incstack = 0
 18623  018422  0EFE               	movlw	-2
 18624  018424  50E3               	movf	plusw1,w,c
 18625  018426  0FD0               	addlw	208
 18626  018428  6E3C               	movwf	(btemp+10)^0,c
 18627  01842A  0EFF               	movlw	-1
 18628  01842C  006F FF8C  F03D    	movff	plusw1,btemp+11
 18629  018432  0EFF               	movlw	255
 18630  018434  223D               	addwfc	(btemp+11)^0,f,c
 18631  018436  503D               	movf	(btemp+11)^0,w,c
 18632  018438  E106               	bnz	u5350
 18633  01843A  0E0A               	movlw	10
 18634  01843C  5C3C               	subwf	(btemp+10)^0,w,c
 18635  01843E  B0D8               	btfsc	status,0,c
 18636  018440  D002               	goto	u5350
 18637  018442  0E01               	movlw	1
 18638  018444  D001               	goto	u5360
 18639  018446                     u5350:
 18640  018446  0E00               	movlw	0
 18641  018448                     u5360:
 18642  018448  6E32               	movwf	btemp^0,c
 18643  01844A  6A33               	clrf	(btemp+1)^0,c
 18644                           
 18645                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18646  01844C  52E5               	movf	postdec1,f,c
 18647  01844E  52E5               	movf	postdec1,f,c
 18648  018450  0012               	return		;funcret
 18649  018452                     __end_of_isdigit:
 18650                           	opt callstack 0
 18651                           
 18652 ;; *************** function _set_vterm *****************
 18653 ;; Defined at:
 18654 ;;		line 107 in file "mconfig.c"
 18655 ;; Parameters:    Size  Location     Type
 18656 ;;  vterm           1  [STACK] const unsigned char 
 18657 ;; Auto vars:     Size  Location     Type
 18658 ;;		None
 18659 ;; Return value:  Size  Location     Type
 18660 ;;                  1  [STACK] unsigned char 
 18661 ;; Registers used:
 18662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 18663 ;; Tracked objects:
 18664 ;;		On entry : 0/1
 18665 ;;		On exit  : 3F/5
 18666 ;;		Unchanged: 0/0
 18667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18672 ;;Total ram usage:        0 bytes
 18673 ;; Hardware stack levels used:    1
 18674 ;; Hardware stack levels required when called:    6
 18675 ;; This function calls:
 18676 ;;		Nothing
 18677 ;; This function is called by:
 18678 ;;		_main
 18679 ;;		_check_help
 18680 ;; This function uses a reentrant model
 18681 ;;
 18682                           
 18683                           	psect	text73
 18684  0189FC                     __ptext73:
 18685                           	opt callstack 0
 18686  0189FC                     _set_vterm:
 18687                           	opt callstack 24
 18688                           
 18689                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 18690                           ;stkvar	_vterm @ sp[(0)+-1]
 18691                           
 18692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18693                           ;incstack = 0
 18694  0189FC  0EFF               	movlw	-1
 18695  0189FE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18696  018A04  0E03               	movlw	3
 18697  018A06  163D               	andwf	(btemp+11)^0,f,c
 18698  018A08  0105               	movlb	5	; () banked
 18699  018A0A  51D8               	movf	(_D+216)& (0+255),w,b
 18700  018A0C  183D               	xorwf	(btemp+11)^0,w,c
 18701  018A0E  0BFE               	andlw	-2
 18702  018A10  183D               	xorwf	(btemp+11)^0,w,c
 18703  018A12  6FD8               	movwf	(_D+216)& (0+255),b
 18704                           
 18705                           ; BSR set to: 5
 18706                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 18707  018A14  52E5               	movf	postdec1,f,c
 18708  018A16  0012               	return		;funcret
 18709  018A18                     __end_of_set_vterm:
 18710                           	opt callstack 0
 18711                           
 18712 ;; *************** function _set_temp_display_help *****************
 18713 ;; Defined at:
 18714 ;;		line 211 in file "mconfig.c"
 18715 ;; Parameters:    Size  Location     Type
 18716 ;;  new_response    1  [STACK] const enum E16501
 18717 ;; Auto vars:     Size  Location     Type
 18718 ;;		None
 18719 ;; Return value:  Size  Location     Type
 18720 ;;                  1  [STACK] enum E16501
 18721 ;; Registers used:
 18722 ;;		wreg, fsr1l, fsr1h
 18723 ;; Tracked objects:
 18724 ;;		On entry : 0/5
 18725 ;;		On exit  : 3F/2
 18726 ;;		Unchanged: 0/0
 18727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18732 ;;Total ram usage:        0 bytes
 18733 ;; Hardware stack levels used:    1
 18734 ;; Hardware stack levels required when called:    6
 18735 ;; This function calls:
 18736 ;;		Nothing
 18737 ;; This function is called by:
 18738 ;;		_check_help
 18739 ;; This function uses a reentrant model
 18740 ;;
 18741                           
 18742                           	psect	text74
 18743  018AFE                     __ptext74:
 18744                           	opt callstack 0
 18745  018AFE                     _set_temp_display_help:
 18746                           	opt callstack 23
 18747                           
 18748                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 18749                           
 18750                           ; BSR set to: 5
 18751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18752                           ;incstack = 0
 18753  018AFE  0102               	movlb	2	; () banked
 18754  018B00  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 18755                           
 18756                           ; BSR set to: 2
 18757                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 18758                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18759  018B02  0EFF               	movlw	-1
 18760  018B04  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 18761                           
 18762                           ; BSR set to: 2
 18763                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 18764  018B0A  52E5               	movf	postdec1,f,c
 18765  018B0C  0012               	return		;funcret
 18766  018B0E                     __end_of_set_temp_display_help:
 18767                           	opt callstack 0
 18768                           
 18769 ;; *************** function _set_display_info *****************
 18770 ;; Defined at:
 18771 ;;		line 200 in file "mconfig.c"
 18772 ;; Parameters:    Size  Location     Type
 18773 ;;  new_response    1  [STACK] const enum E16501
 18774 ;; Auto vars:     Size  Location     Type
 18775 ;;		None
 18776 ;; Return value:  Size  Location     Type
 18777 ;;                  1  [STACK] enum E16986
 18778 ;; Registers used:
 18779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18780 ;; Tracked objects:
 18781 ;;		On entry : 0/39
 18782 ;;		On exit  : 0/0
 18783 ;;		Unchanged: 0/0
 18784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18789 ;;Total ram usage:        0 bytes
 18790 ;; Hardware stack levels used:    1
 18791 ;; Hardware stack levels required when called:    7
 18792 ;; This function calls:
 18793 ;;		_TimerDone
 18794 ;; This function is called by:
 18795 ;;		_main
 18796 ;;		_check_help
 18797 ;; This function uses a reentrant model
 18798 ;;
 18799                           
 18800                           	psect	text75
 18801  018986                     __ptext75:
 18802                           	opt callstack 0
 18803  018986                     _set_display_info:
 18804                           	opt callstack 23
 18805                           
 18806                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 18807                           
 18808                           ; BSR set to: 2
 18809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18810                           ;incstack = 0
 18811  018986  0E07               	movlw	7
 18812  018988  6EE6               	movwf	postinc1,c
 18813  01898A  EC3D  F0C4         	call	_TimerDone	;wreg free
 18814  01898E  5032               	movf	btemp^0,w,c
 18815  018990  B4D8               	btfsc	status,2,c
 18816  018992  D006               	goto	l1618
 18817                           
 18818                           ;mconfig.c: 205:   old_info = V.response.info;
 18819  018994  0102               	movlb	2	; () banked
 18820  018996  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 18821                           
 18822                           ; BSR set to: 2
 18823                           ;mconfig.c: 206:   V.response.info = new_response_info;
 18824                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18825  018998  0EFF               	movlw	-1
 18826  01899A  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 18827  0189A0                     l1618:
 18828                           
 18829                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 18830  0189A0  52E5               	movf	postdec1,f,c
 18831  0189A2  0012               	return		;funcret
 18832  0189A4                     __end_of_set_display_info:
 18833                           	opt callstack 0
 18834                           
 18835 ;; *************** function _mode_lamp_dim *****************
 18836 ;; Defined at:
 18837 ;;		line 13 in file "mconfig.c"
 18838 ;; Parameters:    Size  Location     Type
 18839 ;;  level           2  [STACK] const unsigned short 
 18840 ;; Auto vars:     Size  Location     Type
 18841 ;;		None
 18842 ;; Return value:  Size  Location     Type
 18843 ;;                  1  [STACK] void 
 18844 ;; Registers used:
 18845 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18846 ;; Tracked objects:
 18847 ;;		On entry : 0/2
 18848 ;;		On exit  : 0/0
 18849 ;;		Unchanged: 0/0
 18850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18855 ;;Total ram usage:        0 bytes
 18856 ;; Hardware stack levels used:    1
 18857 ;; Hardware stack levels required when called:    7
 18858 ;; This function calls:
 18859 ;;		_PWM8_LoadDutyValue
 18860 ;; This function is called by:
 18861 ;;		_main
 18862 ;;		_check_help
 18863 ;; This function uses a reentrant model
 18864 ;;
 18865                           
 18866                           	psect	text76
 18867  018A4E                     __ptext76:
 18868                           	opt callstack 0
 18869  018A4E                     _mode_lamp_dim:
 18870                           	opt callstack 23
 18871                           
 18872                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 18873                           ;stkvar	_level @ sp[(0)+-2]
 18874                           
 18875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18876                           ;incstack = 0
 18877  018A4E  0EFE               	movlw	-2
 18878  018A50  006F FF8F FFE6     	movff	plusw1,postinc1
 18879  018A56  006F FF8F FFE6     	movff	plusw1,postinc1
 18880  018A5C  ECDD  F0C0         	call	_PWM8_LoadDutyValue	;wreg free
 18881                           
 18882                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 18883  018A60  52E5               	movf	postdec1,f,c
 18884  018A62  52E5               	movf	postdec1,f,c
 18885  018A64  0012               	return		;funcret
 18886  018A66                     __end_of_mode_lamp_dim:
 18887                           	opt callstack 0
 18888                           
 18889 ;; *************** function _mode_lamp_bright *****************
 18890 ;; Defined at:
 18891 ;;		line 18 in file "mconfig.c"
 18892 ;; Parameters:    Size  Location     Type
 18893 ;;		None
 18894 ;; Auto vars:     Size  Location     Type
 18895 ;;		None
 18896 ;; Return value:  Size  Location     Type
 18897 ;;                  1  [STACK] void 
 18898 ;; Registers used:
 18899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18900 ;; Tracked objects:
 18901 ;;		On entry : 0/2
 18902 ;;		On exit  : 0/0
 18903 ;;		Unchanged: 0/0
 18904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18909 ;;Total ram usage:        0 bytes
 18910 ;; Hardware stack levels used:    1
 18911 ;; Hardware stack levels required when called:    7
 18912 ;; This function calls:
 18913 ;;		_PWM8_LoadDutyValue
 18914 ;; This function is called by:
 18915 ;;		_check_help
 18916 ;; This function uses a reentrant model
 18917 ;;
 18918                           
 18919                           	psect	text77
 18920  018B1C                     __ptext77:
 18921                           	opt callstack 0
 18922  018B1C                     _mode_lamp_bright:
 18923                           	opt callstack 22
 18924                           
 18925                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 18926                           
 18927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18928                           ;incstack = 0
 18929  018B1C  0E2C               	movlw	44
 18930  018B1E  6EE6               	movwf	postinc1,c
 18931  018B20  0E01               	movlw	1
 18932  018B22  6EE6               	movwf	postinc1,c
 18933  018B24  ECDD  F0C0         	call	_PWM8_LoadDutyValue	;wreg free
 18934                           
 18935                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 18936  018B28  0012               	return		;funcret
 18937  018B2A                     __end_of_mode_lamp_bright:
 18938                           	opt callstack 0
 18939                           
 18940 ;; *************** function _PWM8_LoadDutyValue *****************
 18941 ;; Defined at:
 18942 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 18943 ;; Parameters:    Size  Location     Type
 18944 ;;  dutyValue       2  [STACK] unsigned short 
 18945 ;; Auto vars:     Size  Location     Type
 18946 ;;		None
 18947 ;; Return value:  Size  Location     Type
 18948 ;;                  1  [STACK] void 
 18949 ;; Registers used:
 18950 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18951 ;; Tracked objects:
 18952 ;;		On entry : 0/2
 18953 ;;		On exit  : 0/0
 18954 ;;		Unchanged: 0/0
 18955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18960 ;;Total ram usage:        0 bytes
 18961 ;; Hardware stack levels used:    1
 18962 ;; Hardware stack levels required when called:    6
 18963 ;; This function calls:
 18964 ;;		Nothing
 18965 ;; This function is called by:
 18966 ;;		_mode_lamp_dim
 18967 ;;		_mode_lamp_bright
 18968 ;; This function uses a reentrant model
 18969 ;;
 18970                           
 18971                           	psect	text78
 18972  0181BA                     __ptext78:
 18973                           	opt callstack 0
 18974  0181BA                     _PWM8_LoadDutyValue:
 18975                           	opt callstack 23
 18976                           
 18977                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18978                           ;stkvar	_dutyValue @ sp[(0)+-2]
 18979                           
 18980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18981                           ;incstack = 0
 18982  0181BA  0EFE               	movlw	-2
 18983  0181BC  006F FF8C  F03C    	movff	plusw1,btemp+10
 18984  0181C2  0EFF               	movlw	-1
 18985  0181C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 18986  0181CA  90D8               	bcf	status,0,c
 18987  0181CC  323D               	rrcf	(btemp+11)^0,f,c
 18988  0181CE  323C               	rrcf	(btemp+10)^0,f,c
 18989  0181D0  90D8               	bcf	status,0,c
 18990  0181D2  323D               	rrcf	(btemp+11)^0,f,c
 18991  0181D4  323C               	rrcf	(btemp+10)^0,f,c
 18992  0181D6  503C               	movf	(btemp+10)^0,w,c
 18993  0181D8  6E61               	movwf	97,c	;volatile
 18994                           
 18995                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 18996                           ;stkvar	_dutyValue @ sp[(0)+-2]
 18997  0181DA  0EFE               	movlw	-2
 18998  0181DC  006F FF8C  F03D    	movff	plusw1,btemp+11
 18999  0181E2  0E03               	movlw	3
 19000  0181E4  163D               	andwf	(btemp+11)^0,f,c
 19001  0181E6  0E06               	movlw	6
 19002  0181E8  6E32               	movwf	btemp^0,c
 19003  0181EA                     u7885:
 19004  0181EA  90D8               	bcf	status,0,c
 19005  0181EC  363D               	rlcf	(btemp+11)^0,f,c
 19006  0181EE  2E32               	decfsz	btemp^0,f,c
 19007  0181F0  D7FC               	goto	u7885
 19008  0181F2  503D               	movf	(btemp+11)^0,w,c
 19009  0181F4  6E60               	movwf	96,c	;volatile
 19010                           
 19011                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19012  0181F6  52E5               	movf	postdec1,f,c
 19013  0181F8  52E5               	movf	postdec1,f,c
 19014  0181FA  0012               	return		;funcret
 19015  0181FC                     __end_of_PWM8_LoadDutyValue:
 19016                           	opt callstack 0
 19017                           
 19018 ;; *************** function _help_button *****************
 19019 ;; Defined at:
 19020 ;;		line 26 in file "mconfig.c"
 19021 ;; Parameters:    Size  Location     Type
 19022 ;;		None
 19023 ;; Auto vars:     Size  Location     Type
 19024 ;;		None
 19025 ;; Return value:  Size  Location     Type
 19026 ;;                  1  [STACK] _Bool 
 19027 ;; Registers used:
 19028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19029 ;; Tracked objects:
 19030 ;;		On entry : 0/2
 19031 ;;		On exit  : 0/0
 19032 ;;		Unchanged: 0/0
 19033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19038 ;;Total ram usage:        0 bytes
 19039 ;; Hardware stack levels used:    1
 19040 ;; Hardware stack levels required when called:    7
 19041 ;; This function calls:
 19042 ;;		_StartTimer
 19043 ;;		_TimerDone
 19044 ;; This function is called by:
 19045 ;;		_check_help
 19046 ;; This function uses a reentrant model
 19047 ;;
 19048                           
 19049                           	psect	text79
 19050  0182B6                     __ptext79:
 19051                           	opt callstack 0
 19052  0182B6                     _help_button:
 19053                           	opt callstack 22
 19054                           
 19055                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19056                           
 19057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19058                           ;incstack = 0
 19059  0182B6  B0CB               	btfsc	203,0,c	;volatile
 19060  0182B8  D00C               	goto	l1561
 19061                           
 19062                           ;mconfig.c: 29:   V.help = 1;
 19063  0182BA  0102               	movlb	2	; () banked
 19064  0182BC  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19065                           
 19066                           ; BSR set to: 2
 19067                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19068  0182BE  0E08               	movlw	8
 19069  0182C0  6EE6               	movwf	postinc1,c
 19070  0182C2  EC3D  F0C4         	call	_TimerDone	;wreg free
 19071  0182C6  5032               	movf	btemp^0,w,c
 19072  0182C8  B4D8               	btfsc	status,2,c
 19073  0182CA  D003               	goto	l1561
 19074                           
 19075                           ;mconfig.c: 31:    return 1;
 19076  0182CC  0E01               	movlw	1
 19077  0182CE  6E32               	movwf	btemp^0,c
 19078  0182D0  0012               	return	
 19079  0182D2                     l1561:
 19080                           
 19081                           ;mconfig.c: 34:  if (!V.help)
 19082  0182D2  0102               	movlb	2	; () banked
 19083  0182D4  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19084  0182D6  D008               	goto	l8667
 19085                           
 19086                           ; BSR set to: 2
 19087                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19088  0182D8  0E2C               	movlw	44
 19089  0182DA  6EE6               	movwf	postinc1,c
 19090  0182DC  0E01               	movlw	1
 19091  0182DE  6EE6               	movwf	postinc1,c
 19092  0182E0  0E08               	movlw	8
 19093  0182E2  6EE6               	movwf	postinc1,c
 19094  0182E4  EC3D  F0C1         	call	_StartTimer	;wreg free
 19095  0182E8                     l8667:
 19096                           
 19097                           ;mconfig.c: 37:  return 0;
 19098  0182E8  0E00               	movlw	0
 19099  0182EA  6E32               	movwf	btemp^0,c
 19100                           
 19101                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19102  0182EC  0012               	return		;funcret
 19103  0182EE                     __end_of_help_button:
 19104                           	opt callstack 0
 19105                           
 19106 ;; *************** function _TimerDone *****************
 19107 ;; Defined at:
 19108 ;;		line 20 in file "timers.c"
 19109 ;; Parameters:    Size  Location     Type
 19110 ;;  timer           1  [STACK] const unsigned char 
 19111 ;; Auto vars:     Size  Location     Type
 19112 ;;		None
 19113 ;; Return value:  Size  Location     Type
 19114 ;;                  1  [STACK] _Bool 
 19115 ;; Registers used:
 19116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19117 ;; Tracked objects:
 19118 ;;		On entry : 0/39
 19119 ;;		On exit  : 0/0
 19120 ;;		Unchanged: 0/0
 19121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19126 ;;Total ram usage:        0 bytes
 19127 ;; Hardware stack levels used:    1
 19128 ;; Hardware stack levels required when called:    6
 19129 ;; This function calls:
 19130 ;;		Nothing
 19131 ;; This function is called by:
 19132 ;;		_main
 19133 ;;		_WaitMs
 19134 ;;		_help_button
 19135 ;;		_check_help
 19136 ;;		_set_display_info
 19137 ;; This function uses a reentrant model
 19138 ;;
 19139                           
 19140                           	psect	text80
 19141  01887A                     __ptext80:
 19142                           	opt callstack 0
 19143  01887A                     _TimerDone:
 19144                           	opt callstack 23
 19145                           
 19146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19147                           ;incstack = 0
 19148  01887A  0004               	clrwdt		;# 
 19149                           
 19150                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19151                           ;stkvar	_timer @ sp[(0)+-1]
 19152  01887C  0EFF               	movlw	-1
 19153  01887E  50E3               	movf	plusw1,w,c
 19154  018880  0D02               	mullw	2
 19155  018882  50F3               	movf	243,w,c
 19156  018884  0F89               	addlw	low _tickCount
 19157  018886  6ED9               	movwf	fsr2l,c
 19158  018888  6ADA               	clrf	fsr2h,c
 19159  01888A  50DE               	movf	postinc2,w,c
 19160  01888C  10DE               	iorwf	postinc2,w,c
 19161  01888E  A4D8               	btfss	status,2,c
 19162  018890  D002               	goto	l8053
 19163                           
 19164                           ;timers.c: 24:   return 1;
 19165  018892  0E01               	movlw	1
 19166  018894  D001               	goto	L18
 19167  018896                     l8053:
 19168                           
 19169                           ;timers.c: 26:  return 0;
 19170  018896  0E00               	movlw	0
 19171  018898                     L18:
 19172  018898  6E32               	movwf	btemp^0,c
 19173                           
 19174                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19175  01889A  52E5               	movf	postdec1,f,c
 19176  01889C  0012               	return		;funcret
 19177  01889E                     __end_of_TimerDone:
 19178                           	opt callstack 0
 19179                           
 19180 ;; *************** function _StartTimer *****************
 19181 ;; Defined at:
 19182 ;;		line 12 in file "timers.c"
 19183 ;; Parameters:    Size  Location     Type
 19184 ;;  timer           1  [STACK] const unsigned char 
 19185 ;;  count           2  [STACK] const unsigned short 
 19186 ;; Auto vars:     Size  Location     Type
 19187 ;;		None
 19188 ;; Return value:  Size  Location     Type
 19189 ;;                  1  [STACK] void 
 19190 ;; Registers used:
 19191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19192 ;; Tracked objects:
 19193 ;;		On entry : 0/5
 19194 ;;		On exit  : 0/0
 19195 ;;		Unchanged: 0/0
 19196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19201 ;;Total ram usage:        0 bytes
 19202 ;; Hardware stack levels used:    1
 19203 ;; Hardware stack levels required when called:    6
 19204 ;; This function calls:
 19205 ;;		Nothing
 19206 ;; This function is called by:
 19207 ;;		_main
 19208 ;;		_WaitMs
 19209 ;;		_help_button
 19210 ;;		_check_help
 19211 ;; This function uses a reentrant model
 19212 ;;
 19213                           
 19214                           	psect	text81
 19215  01827A                     __ptext81:
 19216                           	opt callstack 0
 19217  01827A                     _StartTimer:
 19218                           	opt callstack 21
 19219                           
 19220                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 19221                           ;stkvar	_count @ sp[(0)+-3]
 19222                           
 19223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19224                           ;incstack = 0
 19225  01827A  0EFD               	movlw	-3
 19226  01827C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19227  018282  0EFE               	movlw	-2
 19228  018284  006F FF8C  F03D    	movff	plusw1,btemp+11
 19229  01828A  90D8               	bcf	status,0,c
 19230  01828C  343C               	rlcf	(btemp+10)^0,w,c
 19231  01828E  6E3A               	movwf	(btemp+8)^0,c
 19232  018290  343D               	rlcf	(btemp+11)^0,w,c
 19233  018292  6E3B               	movwf	(btemp+9)^0,c
 19234                           
 19235                           ;stkvar	_timer @ sp[(0)+-1]
 19236  018294  0EFF               	movlw	-1
 19237  018296  50E3               	movf	plusw1,w,c
 19238  018298  0D02               	mullw	2
 19239  01829A  50F3               	movf	243,w,c
 19240  01829C  0F89               	addlw	low _tickCount
 19241  01829E  6ED9               	movwf	fsr2l,c
 19242  0182A0  6ADA               	clrf	fsr2h,c
 19243  0182A2  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 19244  0182A8  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 19245                           
 19246                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 19247  0182AE  52E5               	movf	postdec1,f,c
 19248  0182B0  52E5               	movf	postdec1,f,c
 19249  0182B2  52E5               	movf	postdec1,f,c
 19250  0182B4  0012               	return		;funcret
 19251  0182B6                     __end_of_StartTimer:
 19252                           	opt callstack 0
 19253                           
 19254 ;; *************** function _display_info *****************
 19255 ;; Defined at:
 19256 ;;		line 190 in file "mconfig.c"
 19257 ;; Parameters:    Size  Location     Type
 19258 ;;		None
 19259 ;; Auto vars:     Size  Location     Type
 19260 ;;		None
 19261 ;; Return value:  Size  Location     Type
 19262 ;;                  1  [STACK] enum E16501
 19263 ;; Registers used:
 19264 ;;		btemp
 19265 ;; Tracked objects:
 19266 ;;		On entry : 0/2
 19267 ;;		On exit  : 0/0
 19268 ;;		Unchanged: 0/0
 19269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19274 ;;Total ram usage:        0 bytes
 19275 ;; Hardware stack levels used:    1
 19276 ;; Hardware stack levels required when called:    6
 19277 ;; This function calls:
 19278 ;;		Nothing
 19279 ;; This function is called by:
 19280 ;;		_check_help
 19281 ;; This function uses a reentrant model
 19282 ;;
 19283                           
 19284                           	psect	text82
 19285  018B7E                     __ptext82:
 19286                           	opt callstack 0
 19287  018B7E                     _display_info:
 19288                           	opt callstack 23
 19289                           
 19290                           ;mconfig.c: 192:  return V.response.info;
 19291                           
 19292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19293                           ;incstack = 0
 19294  018B7E  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 19295                           
 19296                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19297  018B84  0012               	return		;funcret
 19298  018B86                     __end_of_display_info:
 19299                           	opt callstack 0
 19300                           
 19301 ;; *************** function _display_help *****************
 19302 ;; Defined at:
 19303 ;;		line 195 in file "mconfig.c"
 19304 ;; Parameters:    Size  Location     Type
 19305 ;;		None
 19306 ;; Auto vars:     Size  Location     Type
 19307 ;;		None
 19308 ;; Return value:  Size  Location     Type
 19309 ;;                  1  [STACK] enum E16501
 19310 ;; Registers used:
 19311 ;;		btemp
 19312 ;; Tracked objects:
 19313 ;;		On entry : 3F/2
 19314 ;;		On exit  : 0/0
 19315 ;;		Unchanged: 0/0
 19316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19321 ;;Total ram usage:        0 bytes
 19322 ;; Hardware stack levels used:    1
 19323 ;; Hardware stack levels required when called:    6
 19324 ;; This function calls:
 19325 ;;		Nothing
 19326 ;; This function is called by:
 19327 ;;		_check_help
 19328 ;; This function uses a reentrant model
 19329 ;;
 19330                           
 19331                           	psect	text83
 19332  018B86                     __ptext83:
 19333                           	opt callstack 0
 19334  018B86                     _display_help:
 19335                           	opt callstack 23
 19336                           
 19337                           ;mconfig.c: 197:  return V.response.help_temp;
 19338                           
 19339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19340                           ;incstack = 0
 19341  018B86  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 19342                           
 19343                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19344  018B8C  0012               	return		;funcret
 19345  018B8E                     __end_of_display_help:
 19346                           	opt callstack 0
 19347                           
 19348 ;; *************** function _check_adc_scan *****************
 19349 ;; Defined at:
 19350 ;;		line 56 in file "daq.c"
 19351 ;; Parameters:    Size  Location     Type
 19352 ;;		None
 19353 ;; Auto vars:     Size  Location     Type
 19354 ;;		None
 19355 ;; Return value:  Size  Location     Type
 19356 ;;                  1  [STACK] _Bool 
 19357 ;; Registers used:
 19358 ;;		btemp
 19359 ;; Tracked objects:
 19360 ;;		On entry : 0/39
 19361 ;;		On exit  : 0/0
 19362 ;;		Unchanged: 0/0
 19363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19368 ;;Total ram usage:        0 bytes
 19369 ;; Hardware stack levels used:    1
 19370 ;; Hardware stack levels required when called:    6
 19371 ;; This function calls:
 19372 ;;		Nothing
 19373 ;; This function is called by:
 19374 ;;		_main
 19375 ;; This function uses a reentrant model
 19376 ;;
 19377                           
 19378                           	psect	text84
 19379  018B8E                     __ptext84:
 19380                           	opt callstack 0
 19381  018B8E                     _check_adc_scan:
 19382                           	opt callstack 24
 19383                           
 19384                           ;daq.c: 58:  return R.done;
 19385                           
 19386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19387                           ;incstack = 0
 19388  018B8E  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 19389                           
 19390                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 19391  018B94  0012               	return		;funcret
 19392  018B96                     __end_of_check_adc_scan:
 19393                           	opt callstack 0
 19394                           
 19395 ;; *************** function _calc_model_data *****************
 19396 ;; Defined at:
 19397 ;;		line 54 in file "mbmc.c"
 19398 ;; Parameters:    Size  Location     Type
 19399 ;;		None
 19400 ;; Auto vars:     Size  Location     Type
 19401 ;;		None
 19402 ;; Return value:  Size  Location     Type
 19403 ;;                  1  [STACK] void 
 19404 ;; Registers used:
 19405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19406 ;; Tracked objects:
 19407 ;;		On entry : 0/39
 19408 ;;		On exit  : 3F/1
 19409 ;;		Unchanged: 0/0
 19410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19415 ;;Total ram usage:        0 bytes
 19416 ;; Hardware stack levels used:    1
 19417 ;; Hardware stack levels required when called:    9
 19418 ;; This function calls:
 19419 ;;		___fladd
 19420 ;;		___flmul
 19421 ;;		___flsub
 19422 ;;		_lp_filter
 19423 ;; This function is called by:
 19424 ;;		_main
 19425 ;; This function uses a reentrant model
 19426 ;;
 19427                           
 19428                           	psect	text85
 19429  014C1A                     __ptext85:
 19430                           	opt callstack 0
 19431  014C1A                     _calc_model_data:
 19432                           	opt callstack 21
 19433                           
 19434                           ;mbmc.c: 56:  C.c_bat = C.calc[C_BATT];
 19435                           
 19436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19437                           ;incstack = 0
 19438  014C1A  C100  F144         	movff	_C,_C+68
 19439  014C1E  C101  F145         	movff	_C+1,_C+69
 19440  014C22  C102  F146         	movff	_C+2,_C+70
 19441  014C26  C103  F147         	movff	_C+3,_C+71
 19442                           
 19443                           ;mbmc.c: 57:  C.c_pv = C.calc[C_PV];
 19444  014C2A  C104  F148         	movff	_C+4,_C+72
 19445  014C2E  C105  F149         	movff	_C+5,_C+73
 19446  014C32  C106  F14A         	movff	_C+6,_C+74
 19447  014C36  C107  F14B         	movff	_C+7,_C+75
 19448                           
 19449                           ;mbmc.c: 58:  C.v_bat = C.calc[V_BAT];
 19450  014C3A  C110  F154         	movff	_C+16,_C+84
 19451  014C3E  C111  F155         	movff	_C+17,_C+85
 19452  014C42  C112  F156         	movff	_C+18,_C+86
 19453  014C46  C113  F157         	movff	_C+19,_C+87
 19454                           
 19455                           ;mbmc.c: 59:  C.v_pv = C.calc[V_PV];
 19456  014C4A  C114  F150         	movff	_C+20,_C+80
 19457  014C4E  C115  F151         	movff	_C+21,_C+81
 19458  014C52  C116  F152         	movff	_C+22,_C+82
 19459  014C56  C117  F153         	movff	_C+23,_C+83
 19460                           
 19461                           ;mbmc.c: 60:  C.v_inverter = C.calc[V_INVERTER];
 19462  014C5A  C130  F164         	movff	_C+48,_C+100
 19463  014C5E  C131  F165         	movff	_C+49,_C+101
 19464  014C62  C132  F166         	movff	_C+50,_C+102
 19465  014C66  C133  F167         	movff	_C+51,_C+103
 19466                           
 19467                           ;mbmc.c: 61:  C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 19468  014C6A  0E01               	movlw	1
 19469  014C6C  6EE6               	movwf	postinc1,c
 19470  014C6E  0E10               	movlw	16
 19471  014C70  6EE6               	movwf	postinc1,c
 19472  014C72  0060  F403  FFE6   	movff	_C,postinc1
 19473  014C78  0060  F407  FFE6   	movff	_C+1,postinc1
 19474  014C7E  0060  F40B  FFE6   	movff	_C+2,postinc1
 19475  014C84  0060  F40F  FFE6   	movff	_C+3,postinc1
 19476  014C8A  0060  F413  FFE6   	movff	_C+4,postinc1
 19477  014C90  0060  F417  FFE6   	movff	_C+5,postinc1
 19478  014C96  0060  F41B  FFE6   	movff	_C+6,postinc1
 19479  014C9C  0060  F41F  FFE6   	movff	_C+7,postinc1
 19480  014CA2  EC2F  F0C0         	call	___flsub	;wreg free
 19481  014CA6  0060  F0CB  FFE6   	movff	btemp,postinc1
 19482  014CAC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19483  014CB2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19484  014CB8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19485  014CBE  EC62  F0AF         	call	_lp_filter	;wreg free
 19486  014CC2  0060  F0C8  F140   	movff	btemp,_C+64
 19487  014CC8  0060  F0CC  F141   	movff	btemp+1,_C+65
 19488  014CCE  0060  F0D0  F142   	movff	btemp+2,_C+66
 19489  014CD4  0060  F0D4  F143   	movff	btemp+3,_C+67
 19490                           
 19491                           ;mbmc.c: 62:  C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 19492  014CDA  0E01               	movlw	1
 19493  014CDC  6EE6               	movwf	postinc1,c
 19494  014CDE  0E11               	movlw	17
 19495  014CE0  6EE6               	movwf	postinc1,c
 19496  014CE2  0060  F553  FFE6   	movff	_C+84,postinc1
 19497  014CE8  0060  F557  FFE6   	movff	_C+85,postinc1
 19498  014CEE  0060  F55B  FFE6   	movff	_C+86,postinc1
 19499  014CF4  0060  F55F  FFE6   	movff	_C+87,postinc1
 19500  014CFA  0060  F503  FFE6   	movff	_C+64,postinc1
 19501  014D00  0060  F507  FFE6   	movff	_C+65,postinc1
 19502  014D06  0060  F50B  FFE6   	movff	_C+66,postinc1
 19503  014D0C  0060  F50F  FFE6   	movff	_C+67,postinc1
 19504  014D12  ECC1  F08E         	call	___flmul	;wreg free
 19505  014D16  0060  F0CB  FFE6   	movff	btemp,postinc1
 19506  014D1C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19507  014D22  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19508  014D28  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19509  014D2E  EC62  F0AF         	call	_lp_filter	;wreg free
 19510  014D32  0060  F0C8  F168   	movff	btemp,_C+104
 19511  014D38  0060  F0CC  F169   	movff	btemp+1,_C+105
 19512  014D3E  0060  F0D0  F16A   	movff	btemp+2,_C+106
 19513  014D44  0060  F0D4  F16B   	movff	btemp+3,_C+107
 19514                           
 19515                           ;mbmc.c: 63:  C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 19516  014D4A  0E01               	movlw	1
 19517  014D4C  6EE6               	movwf	postinc1,c
 19518  014D4E  0E12               	movlw	18
 19519  014D50  6EE6               	movwf	postinc1,c
 19520  014D52  0060  F543  FFE6   	movff	_C+80,postinc1
 19521  014D58  0060  F547  FFE6   	movff	_C+81,postinc1
 19522  014D5E  0060  F54B  FFE6   	movff	_C+82,postinc1
 19523  014D64  0060  F54F  FFE6   	movff	_C+83,postinc1
 19524  014D6A  0060  F523  FFE6   	movff	_C+72,postinc1
 19525  014D70  0060  F527  FFE6   	movff	_C+73,postinc1
 19526  014D76  0060  F52B  FFE6   	movff	_C+74,postinc1
 19527  014D7C  0060  F52F  FFE6   	movff	_C+75,postinc1
 19528  014D82  ECC1  F08E         	call	___flmul	;wreg free
 19529  014D86  0060  F0CB  FFE6   	movff	btemp,postinc1
 19530  014D8C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19531  014D92  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19532  014D98  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19533  014D9E  EC62  F0AF         	call	_lp_filter	;wreg free
 19534  014DA2  0060  F0C8  F170   	movff	btemp,_C+112
 19535  014DA8  0060  F0CC  F171   	movff	btemp+1,_C+113
 19536  014DAE  0060  F0D0  F172   	movff	btemp+2,_C+114
 19537  014DB4  0060  F0D4  F173   	movff	btemp+3,_C+115
 19538                           
 19539                           ;mbmc.c: 64:  C.p_inverter = lp_filter((C.c_load * C.v_inverter)-14.00, 19, 1);
 19540  014DBA  0E01               	movlw	1
 19541  014DBC  6EE6               	movwf	postinc1,c
 19542  014DBE  0E13               	movlw	19
 19543  014DC0  6EE6               	movwf	postinc1,c
 19544  014DC2  0E00               	movlw	0
 19545  014DC4  6EE6               	movwf	postinc1,c
 19546  014DC6  0E00               	movlw	0
 19547  014DC8  6EE6               	movwf	postinc1,c
 19548  014DCA  0E60               	movlw	96
 19549  014DCC  6EE6               	movwf	postinc1,c
 19550  014DCE  0EC1               	movlw	193
 19551  014DD0  6EE6               	movwf	postinc1,c
 19552  014DD2  0060  F593  FFE6   	movff	_C+100,postinc1
 19553  014DD8  0060  F597  FFE6   	movff	_C+101,postinc1
 19554  014DDE  0060  F59B  FFE6   	movff	_C+102,postinc1
 19555  014DE4  0060  F59F  FFE6   	movff	_C+103,postinc1
 19556  014DEA  0060  F503  FFE6   	movff	_C+64,postinc1
 19557  014DF0  0060  F507  FFE6   	movff	_C+65,postinc1
 19558  014DF6  0060  F50B  FFE6   	movff	_C+66,postinc1
 19559  014DFC  0060  F50F  FFE6   	movff	_C+67,postinc1
 19560  014E02  ECC1  F08E         	call	___flmul	;wreg free
 19561  014E06  0060  F0CB  FFE6   	movff	btemp,postinc1
 19562  014E0C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19563  014E12  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19564  014E18  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19565  014E1E  ECD6  F092         	call	___fladd	;wreg free
 19566  014E22  0060  F0CB  FFE6   	movff	btemp,postinc1
 19567  014E28  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19568  014E2E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19569  014E34  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19570  014E3A  EC62  F0AF         	call	_lp_filter	;wreg free
 19571  014E3E  0060  F0C8  F16C   	movff	btemp,_C+108
 19572  014E44  0060  F0CC  F16D   	movff	btemp+1,_C+109
 19573  014E4A  0060  F0D0  F16E   	movff	btemp+2,_C+110
 19574  014E50  0060  F0D4  F16F   	movff	btemp+3,_C+111
 19575                           
 19576                           ;mbmc.c: 65:  C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 19577  014E56  0E01               	movlw	1
 19578  014E58  6EE6               	movwf	postinc1,c
 19579  014E5A  0E14               	movlw	20
 19580  014E5C  6EE6               	movwf	postinc1,c
 19581  014E5E  0060  F553  FFE6   	movff	_C+84,postinc1
 19582  014E64  0060  F557  FFE6   	movff	_C+85,postinc1
 19583  014E6A  0060  F55B  FFE6   	movff	_C+86,postinc1
 19584  014E70  0060  F55F  FFE6   	movff	_C+87,postinc1
 19585  014E76  0060  F513  FFE6   	movff	_C+68,postinc1
 19586  014E7C  0060  F517  FFE6   	movff	_C+69,postinc1
 19587  014E82  0060  F51B  FFE6   	movff	_C+70,postinc1
 19588  014E88  0060  F51F  FFE6   	movff	_C+71,postinc1
 19589  014E8E  ECC1  F08E         	call	___flmul	;wreg free
 19590  014E92  0060  F0CB  FFE6   	movff	btemp,postinc1
 19591  014E98  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19592  014E9E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19593  014EA4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19594  014EAA  EC62  F0AF         	call	_lp_filter	;wreg free
 19595  014EAE  0060  F0C8  F174   	movff	btemp,_C+116
 19596  014EB4  0060  F0CC  F175   	movff	btemp+1,_C+117
 19597  014EBA  0060  F0D0  F176   	movff	btemp+2,_C+118
 19598  014EC0  0060  F0D4  F177   	movff	btemp+3,_C+119
 19599                           
 19600                           ;mbmc.c: 69:  if (C.p_inverter<0.0)
 19601  014EC6  0101               	movlb	1	; () banked
 19602  014EC8  AF6F               	btfss	(_C+111)& (0+255),7,b
 19603  014ECA  0012               	return	
 19604                           
 19605                           ; BSR set to: 1
 19606                           ;mbmc.c: 70:   C.p_inverter=0.0001;
 19607  014ECC  0E17               	movlw	23
 19608  014ECE  6F6C               	movwf	(_C+108)& (0+255),b
 19609  014ED0  0EB7               	movlw	183
 19610  014ED2  6F6D               	movwf	(_C+109)& (0+255),b
 19611  014ED4  0ED1               	movlw	209
 19612  014ED6  6F6E               	movwf	(_C+110)& (0+255),b
 19613  014ED8  0E38               	movlw	56
 19614  014EDA  6F6F               	movwf	(_C+111)& (0+255),b
 19615                           
 19616                           ; BSR set to: 1
 19617                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 19618  014EDC  0012               	return		;funcret
 19619  014EDE                     __end_of_calc_model_data:
 19620                           	opt callstack 0
 19621                           
 19622 ;; *************** function _lp_filter *****************
 19623 ;; Defined at:
 19624 ;;		line 16 in file "mbmc.c"
 19625 ;; Parameters:    Size  Location     Type
 19626 ;;  new             4  [STACK] const float 
 19627 ;;  bn              1  [STACK] const unsigned char 
 19628 ;;  slow            1  [STACK] const char 
 19629 ;; Auto vars:     Size  Location     Type
 19630 ;;  lp_speed        4  [STACK] float 
 19631 ;; Return value:  Size  Location     Type
 19632 ;;                  4  [STACK] float 
 19633 ;; Registers used:
 19634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19635 ;; Tracked objects:
 19636 ;;		On entry : 0/39
 19637 ;;		On exit  : 0/0
 19638 ;;		Unchanged: 0/0
 19639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19644 ;;Total ram usage:        0 bytes
 19645 ;; Hardware stack levels used:    1
 19646 ;; Hardware stack levels required when called:    8
 19647 ;; This function calls:
 19648 ;;		___fladd
 19649 ;;		___flmul
 19650 ;;		___flsub
 19651 ;; This function is called by:
 19652 ;;		_convert_adc_data
 19653 ;;		_calc_model_data
 19654 ;; This function uses a reentrant model
 19655 ;;
 19656                           
 19657                           	psect	text86
 19658  015EC4                     __ptext86:
 19659                           	opt callstack 0
 19660  015EC4                     _lp_filter:
 19661                           	opt callstack 0
 19662                           
 19663                           ; BSR set to: 1
 19664                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19665  015EC4  52E6               	movf	postinc1,f,c
 19666  015EC6  52E6               	movf	postinc1,f,c
 19667  015EC8  52E6               	movf	postinc1,f,c
 19668  015ECA  52E6               	movf	postinc1,f,c
 19669                           
 19670                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16 +5];;mbmc.c: 19:  float lp_speed;;mbmc.c: 2
      +                          1:  if (bn >= 16 +5)
 19671                           ;stkvar	_bn @ sp[(-4)+-5]
 19672                           
 19673                           ;incstack = 0
 19674  015ECC  0EF7               	movlw	-9
 19675  015ECE  006F FF8C  F032    	movff	plusw1,btemp
 19676  015ED4  0E14               	movlw	20
 19677  015ED6  6432               	cpfsgt	btemp^0,c
 19678  015ED8  D011               	goto	l8773
 19679  015EDA                     u8260:
 19680                           
 19681                           ;mbmc.c: 22:   return new;
 19682                           ;stkvar	_new @ sp[(-4)+-4]
 19683  015EDA  0EF8               	movlw	-8
 19684  015EDC  006F FF8C  F032    	movff	plusw1,btemp
 19685  015EE2  0EF9               	movlw	-7
 19686  015EE4  006F FF8C  F033    	movff	plusw1,btemp+1
 19687  015EEA  0EFA               	movlw	-6
 19688  015EEC  006F FF8C  F034    	movff	plusw1,btemp+2
 19689  015EF2  0EFB               	movlw	-5
 19690  015EF4  006F FF8C  F035    	movff	plusw1,btemp+3
 19691  015EFA  D0BF               	goto	l1703
 19692  015EFC                     l8773:
 19693                           
 19694                           ;mbmc.c: 24:  if (slow == (-1)) {
 19695                           ;stkvar	_slow @ sp[(-4)+-6]
 19696  015EFC  0EF6               	movlw	-10
 19697  015EFE  28E3               	incf	plusw1,w,c
 19698  015F00  A4D8               	btfss	status,2,c
 19699  015F02  D012               	goto	l8781
 19700                           
 19701                           ;mbmc.c: 25:   smooth[bn] = 0.0;
 19702                           ;stkvar	_bn @ sp[(-4)+-5]
 19703  015F04  0EF7               	movlw	-9
 19704  015F06  50E3               	movf	plusw1,w,c
 19705  015F08  0D04               	mullw	4
 19706  015F0A  0E00               	movlw	low lp_filter@smooth
 19707  015F0C  24F3               	addwf	243,w,c
 19708  015F0E  6ED9               	movwf	fsr2l,c
 19709  015F10  0E03               	movlw	high lp_filter@smooth
 19710  015F12  20F4               	addwfc	prodh,w,c
 19711  015F14  6EDA               	movwf	fsr2h,c
 19712  015F16  0E00               	movlw	0
 19713  015F18  6EDE               	movwf	postinc2,c
 19714  015F1A  0E00               	movlw	0
 19715  015F1C  6EDE               	movwf	postinc2,c
 19716  015F1E  0E00               	movlw	0
 19717  015F20  6EDE               	movwf	postinc2,c
 19718  015F22  0E00               	movlw	0
 19719  015F24  6EDD               	movwf	postdec2,c
 19720  015F26  D7D9               	goto	u8260
 19721  015F28                     l8781:
 19722                           
 19723                           ;mbmc.c: 29:  if (slow) {
 19724                           ;stkvar	_slow @ sp[(-4)+-6]
 19725  015F28  0EF6               	movlw	-10
 19726  015F2A  50E3               	movf	plusw1,w,c
 19727  015F2C  B4D8               	btfsc	status,2,c
 19728  015F2E  D008               	goto	l8785
 19729                           
 19730                           ;mbmc.c: 30:   lp_speed = 0.033;
 19731  015F30  0E02               	movlw	2
 19732  015F32  6E3A               	movwf	(btemp+8)^0,c
 19733  015F34  0E2B               	movlw	43
 19734  015F36  6E3B               	movwf	(btemp+9)^0,c
 19735  015F38  0E07               	movlw	7
 19736  015F3A  6E3C               	movwf	(btemp+10)^0,c
 19737  015F3C  0E3D               	movlw	61
 19738  015F3E  D007               	goto	L19
 19739  015F40                     l8785:
 19740                           
 19741                           ;mbmc.c: 32:   lp_speed = 0.125;
 19742  015F40  0E00               	movlw	0
 19743  015F42  6E3A               	movwf	(btemp+8)^0,c
 19744  015F44  0E00               	movlw	0
 19745  015F46  6E3B               	movwf	(btemp+9)^0,c
 19746  015F48  0E00               	movlw	0
 19747  015F4A  6E3C               	movwf	(btemp+10)^0,c
 19748  015F4C  0E3E               	movlw	62
 19749  015F4E                     L19:
 19750  015F4E  6E3D               	movwf	(btemp+11)^0,c
 19751                           
 19752                           ;stkvar	_lp_speed @ sp[(-4)+0]
 19753  015F50  0EFC               	movlw	-4
 19754  015F52  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19755  015F58  0EFD               	movlw	-3
 19756  015F5A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19757  015F60  0EFE               	movlw	-2
 19758  015F62  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19759  015F68  0EFF               	movlw	-1
 19760  015F6A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19761                           
 19762                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 19763                           ;stkvar	_bn @ sp[(-4)+-5]
 19764  015F70  0EF7               	movlw	-9
 19765  015F72  50E3               	movf	plusw1,w,c
 19766  015F74  0D04               	mullw	4
 19767  015F76  0E00               	movlw	low lp_filter@smooth
 19768  015F78  24F3               	addwf	243,w,c
 19769  015F7A  6ED9               	movwf	fsr2l,c
 19770  015F7C  0E03               	movlw	high lp_filter@smooth
 19771  015F7E  20F4               	addwfc	prodh,w,c
 19772  015F80  6EDA               	movwf	fsr2h,c
 19773  015F82  006F FF7B FFE6     	movff	postinc2,postinc1
 19774  015F88  006F FF7B FFE6     	movff	postinc2,postinc1
 19775  015F8E  006F FF7B FFE6     	movff	postinc2,postinc1
 19776  015F94  006F FF7B FFE6     	movff	postinc2,postinc1
 19777                           
 19778                           ;stkvar	_lp_speed @ sp[(-8)+0]
 19779  015F9A  0EF8               	movlw	-8
 19780  015F9C  006F FF8F FFE6     	movff	plusw1,postinc1
 19781  015FA2  006F FF8F FFE6     	movff	plusw1,postinc1
 19782  015FA8  006F FF8F FFE6     	movff	plusw1,postinc1
 19783  015FAE  006F FF8F FFE6     	movff	plusw1,postinc1
 19784                           
 19785                           ;stkvar	_bn @ sp[(-12)+-5]
 19786  015FB4  0EEF               	movlw	-17
 19787  015FB6  50E3               	movf	plusw1,w,c
 19788  015FB8  0D04               	mullw	4
 19789  015FBA  0E00               	movlw	low lp_filter@smooth
 19790  015FBC  24F3               	addwf	243,w,c
 19791  015FBE  6ED9               	movwf	fsr2l,c
 19792  015FC0  0E03               	movlw	high lp_filter@smooth
 19793  015FC2  20F4               	addwfc	prodh,w,c
 19794  015FC4  6EDA               	movwf	fsr2h,c
 19795  015FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 19796  015FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 19797  015FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 19798  015FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 19799                           
 19800                           ;stkvar	_new @ sp[(-16)+-4]
 19801  015FDE  0EEC               	movlw	-20
 19802  015FE0  006F FF8F FFE6     	movff	plusw1,postinc1
 19803  015FE6  006F FF8F FFE6     	movff	plusw1,postinc1
 19804  015FEC  006F FF8F FFE6     	movff	plusw1,postinc1
 19805  015FF2  006F FF8F FFE6     	movff	plusw1,postinc1
 19806  015FF8  EC2F  F0C0         	call	___flsub	;wreg free
 19807  015FFC  0060  F0CB  FFE6   	movff	btemp,postinc1
 19808  016002  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19809  016008  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19810  01600E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19811  016014  ECC1  F08E         	call	___flmul	;wreg free
 19812  016018  0060  F0CB  FFE6   	movff	btemp,postinc1
 19813  01601E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19814  016024  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19815  01602A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19816  016030  ECD6  F092         	call	___fladd	;wreg free
 19817                           
 19818                           ;stkvar	_bn @ sp[(-4)+-5]
 19819  016034  0EF7               	movlw	-9
 19820  016036  50E3               	movf	plusw1,w,c
 19821  016038  0D04               	mullw	4
 19822  01603A  0E00               	movlw	low lp_filter@smooth
 19823  01603C  24F3               	addwf	243,w,c
 19824  01603E  6ED9               	movwf	fsr2l,c
 19825  016040  0E03               	movlw	high lp_filter@smooth
 19826  016042  20F4               	addwfc	prodh,w,c
 19827  016044  6EDA               	movwf	fsr2h,c
 19828  016046  0060  F0CB  FFDE   	movff	btemp,postinc2
 19829  01604C  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 19830  016052  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 19831  016058  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 19832  01605E  52DD               	movf	postdec2,f,c
 19833  016060  52DD               	movf	postdec2,f,c
 19834  016062  006F FF78  F032    	movff	postinc2,btemp
 19835  016068  006F FF78  F033    	movff	postinc2,btemp+1
 19836  01606E  006F FF78  F034    	movff	postinc2,btemp+2
 19837  016074  006F FF78  F035    	movff	postinc2,btemp+3
 19838  01607A                     l1703:
 19839                           
 19840                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 19841  01607A  0EF6               	movlw	246
 19842  01607C  26E1               	addwf	fsr1l,f,c
 19843  01607E  0EFF               	movlw	255
 19844  016080  22E2               	addwfc	fsr1h,f,c
 19845  016082  0012               	return		;funcret
 19846  016084                     __end_of_lp_filter:
 19847                           	opt callstack 0
 19848                           
 19849 ;; *************** function ___flsub *****************
 19850 ;; Defined at:
 19851 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19852 ;; Parameters:    Size  Location     Type
 19853 ;;  b               4  [STACK] float 
 19854 ;;  a               4  [STACK] float 
 19855 ;; Auto vars:     Size  Location     Type
 19856 ;;		None
 19857 ;; Return value:  Size  Location     Type
 19858 ;;                  4  [STACK] float 
 19859 ;; Registers used:
 19860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19861 ;; Tracked objects:
 19862 ;;		On entry : 0/39
 19863 ;;		On exit  : 0/0
 19864 ;;		Unchanged: 0/0
 19865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19870 ;;Total ram usage:        0 bytes
 19871 ;; Hardware stack levels used:    1
 19872 ;; Hardware stack levels required when called:    7
 19873 ;; This function calls:
 19874 ;;		___fladd
 19875 ;; This function is called by:
 19876 ;;		_conv_raw_result
 19877 ;;		_lp_filter
 19878 ;;		_calc_model_data
 19879 ;;		_efgtoa
 19880 ;; This function uses a reentrant model
 19881 ;;
 19882                           
 19883                           	psect	text87
 19884  01805E                     __ptext87:
 19885                           	opt callstack 0
 19886  01805E                     ___flsub:
 19887                           	opt callstack 16
 19888                           
 19889                           ;stkvar	_a @ sp[(0)+-8]
 19890                           
 19891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19892                           ;incstack = 0
 19893  01805E  0EFB               	movlw	-5
 19894  018060  7EE3               	btg	plusw1,7,c
 19895                           
 19896                           ;stkvar	_a @ sp[(0)+-8]
 19897  018062  0EF8               	movlw	-8
 19898  018064  006F FF8F FFE6     	movff	plusw1,postinc1
 19899  01806A  006F FF8F FFE6     	movff	plusw1,postinc1
 19900  018070  006F FF8F FFE6     	movff	plusw1,postinc1
 19901  018076  006F FF8F FFE6     	movff	plusw1,postinc1
 19902                           
 19903                           ;stkvar	_b @ sp[(-4)+-4]
 19904  01807C  0EF8               	movlw	-8
 19905  01807E  006F FF8F FFE6     	movff	plusw1,postinc1
 19906  018084  006F FF8F FFE6     	movff	plusw1,postinc1
 19907  01808A  006F FF8F FFE6     	movff	plusw1,postinc1
 19908  018090  006F FF8F FFE6     	movff	plusw1,postinc1
 19909  018096  ECD6  F092         	call	___fladd	;wreg free
 19910                           
 19911                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19912  01809A  0EF8               	movlw	248
 19913  01809C  26E1               	addwf	fsr1l,f,c
 19914  01809E  0EFF               	movlw	255
 19915  0180A0  22E2               	addwfc	fsr1h,f,c
 19916  0180A2  0012               	return		;funcret
 19917  0180A4                     __end_of___flsub:
 19918                           	opt callstack 0
 19919                           
 19920 ;; *************** function ___fladd *****************
 19921 ;; Defined at:
 19922 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19923 ;; Parameters:    Size  Location     Type
 19924 ;;  b               4  [STACK] float 
 19925 ;;  a               4  [STACK] float 
 19926 ;; Auto vars:     Size  Location     Type
 19927 ;;  grs             1  [STACK] unsigned char 
 19928 ;;  bexp            1  [STACK] unsigned char 
 19929 ;;  aexp            1  [STACK] unsigned char 
 19930 ;;  signs           1  [STACK] unsigned char 
 19931 ;; Return value:  Size  Location     Type
 19932 ;;                  4  [STACK] unsigned char 
 19933 ;; Registers used:
 19934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19935 ;; Tracked objects:
 19936 ;;		On entry : 0/5
 19937 ;;		On exit  : 0/0
 19938 ;;		Unchanged: 0/0
 19939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19944 ;;Total ram usage:        0 bytes
 19945 ;; Hardware stack levels used:    1
 19946 ;; Hardware stack levels required when called:    6
 19947 ;; This function calls:
 19948 ;;		Nothing
 19949 ;; This function is called by:
 19950 ;;		_lp_filter
 19951 ;;		_calc_model_data
 19952 ;;		_efgtoa
 19953 ;;		___flsub
 19954 ;; This function uses a reentrant model
 19955 ;;
 19956                           
 19957                           	psect	text88
 19958  0125AC                     __ptext88:
 19959                           	opt callstack 0
 19960  0125AC                     ___fladd:
 19961                           	opt callstack 0
 19962                           
 19963                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19964  0125AC  52E6               	movf	postinc1,f,c
 19965  0125AE  52E6               	movf	postinc1,f,c
 19966  0125B0  52E6               	movf	postinc1,f,c
 19967  0125B2  52E6               	movf	postinc1,f,c
 19968                           
 19969                           ;stkvar	_b @ sp[(-4)+-4]
 19970                           
 19971                           ;incstack = 0
 19972  0125B4  0EFB               	movlw	251
 19973  0125B6  24E1               	addwf	fsr1l,w,c
 19974  0125B8  6ED9               	movwf	fsr2l,c
 19975  0125BA  0EFF               	movlw	255
 19976  0125BC  20E2               	addwfc	fsr1h,w,c
 19977  0125BE  6EDA               	movwf	fsr2h,c
 19978  0125C0  50DF               	movf	indf2,w,c
 19979  0125C2  6E3D               	movwf	(btemp+11)^0,c
 19980  0125C4  0E80               	movlw	128
 19981  0125C6  163D               	andwf	(btemp+11)^0,f,c
 19982                           
 19983                           ;stkvar	_signs @ sp[(-4)+3]
 19984  0125C8  0EFF               	movlw	-1
 19985  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19986                           
 19987                           ;stkvar	_b @ sp[(-4)+-4]
 19988  0125D0  0EFB               	movlw	251
 19989  0125D2  24E1               	addwf	fsr1l,w,c
 19990  0125D4  6ED9               	movwf	fsr2l,c
 19991  0125D6  0EFF               	movlw	255
 19992  0125D8  20E2               	addwfc	fsr1h,w,c
 19993  0125DA  6EDA               	movwf	fsr2h,c
 19994  0125DC  50DF               	movf	indf2,w,c
 19995  0125DE  6E3D               	movwf	(btemp+11)^0,c
 19996  0125E0  90D8               	bcf	status,0,c
 19997  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 19998  0125E4  6E3C               	movwf	(btemp+10)^0,c
 19999                           
 20000                           ;stkvar	_bexp @ sp[(-4)+1]
 20001  0125E6  0EFD               	movlw	-3
 20002  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20003                           
 20004                           ;stkvar	_b @ sp[(-4)+-4]
 20005  0125EE  0EFA               	movlw	250
 20006  0125F0  24E1               	addwf	fsr1l,w,c
 20007  0125F2  6ED9               	movwf	fsr2l,c
 20008  0125F4  0EFF               	movlw	255
 20009  0125F6  20E2               	addwfc	fsr1h,w,c
 20010  0125F8  6EDA               	movwf	fsr2h,c
 20011  0125FA  AEDF               	btfss	indf2,7,c
 20012  0125FC  D002               	goto	l6287
 20013                           
 20014                           ;stkvar	_bexp @ sp[(-4)+1]
 20015  0125FE  0EFD               	movlw	-3
 20016  012600  80E3               	bsf	plusw1,0,c
 20017  012602                     l6287:
 20018                           
 20019                           ;stkvar	_bexp @ sp[(-4)+1]
 20020  012602  0EFD               	movlw	-3
 20021  012604  50E3               	movf	plusw1,w,c
 20022  012606  B4D8               	btfsc	status,2,c
 20023  012608  D027               	goto	l6297
 20024                           
 20025                           ;stkvar	_bexp @ sp[(-4)+1]
 20026  01260A  0EFD               	movlw	-3
 20027  01260C  28E3               	incf	plusw1,w,c
 20028  01260E  A4D8               	btfss	status,2,c
 20029  012610  D018               	goto	l6293
 20030  012612  0E00               	movlw	0
 20031  012614  6E3A               	movwf	(btemp+8)^0,c
 20032  012616  0E00               	movlw	0
 20033  012618  6E3B               	movwf	(btemp+9)^0,c
 20034  01261A  0E00               	movlw	0
 20035  01261C  6E3C               	movwf	(btemp+10)^0,c
 20036  01261E  0E00               	movlw	0
 20037  012620  6E3D               	movwf	(btemp+11)^0,c
 20038                           
 20039                           ;stkvar	_b @ sp[(-4)+-4]
 20040  012622  0EF8               	movlw	-8
 20041  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20042  01262A  0EF9               	movlw	-7
 20043  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20044  012632  0EFA               	movlw	-6
 20045  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20046  01263A  0EFB               	movlw	-5
 20047  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20048  012642                     l6293:
 20049                           
 20050                           ;stkvar	_b @ sp[(-4)+-4]
 20051  012642  0EFA               	movlw	-6
 20052  012644  8EE3               	bsf	plusw1,7,c
 20053                           
 20054                           ;stkvar	_b @ sp[(-4)+-4]
 20055  012646  0EFB               	movlw	251
 20056  012648  24E1               	addwf	fsr1l,w,c
 20057  01264A  6ED9               	movwf	fsr2l,c
 20058  01264C  0EFF               	movlw	255
 20059  01264E  20E2               	addwfc	fsr1h,w,c
 20060  012650  6EDA               	movwf	fsr2h,c
 20061  012652  0E00               	movlw	0
 20062  012654  6EDF               	movwf	indf2,c
 20063  012656  D018               	goto	l6299
 20064  012658                     l6297:
 20065  012658  0E00               	movlw	0
 20066  01265A  6E3A               	movwf	(btemp+8)^0,c
 20067  01265C  0E00               	movlw	0
 20068  01265E  6E3B               	movwf	(btemp+9)^0,c
 20069  012660  0E00               	movlw	0
 20070  012662  6E3C               	movwf	(btemp+10)^0,c
 20071  012664  0E00               	movlw	0
 20072  012666  6E3D               	movwf	(btemp+11)^0,c
 20073                           
 20074                           ;stkvar	_b @ sp[(-4)+-4]
 20075  012668  0EF8               	movlw	-8
 20076  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20077  012670  0EF9               	movlw	-7
 20078  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20079  012678  0EFA               	movlw	-6
 20080  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20081  012680  0EFB               	movlw	-5
 20082  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20083  012688                     l6299:
 20084                           
 20085                           ;stkvar	_a @ sp[(-4)+-8]
 20086  012688  0EF7               	movlw	247
 20087  01268A  24E1               	addwf	fsr1l,w,c
 20088  01268C  6ED9               	movwf	fsr2l,c
 20089  01268E  0EFF               	movlw	255
 20090  012690  20E2               	addwfc	fsr1h,w,c
 20091  012692  6EDA               	movwf	fsr2h,c
 20092  012694  50DF               	movf	indf2,w,c
 20093  012696  6E3D               	movwf	(btemp+11)^0,c
 20094  012698  0E80               	movlw	128
 20095  01269A  163D               	andwf	(btemp+11)^0,f,c
 20096                           
 20097                           ;stkvar	_aexp @ sp[(-4)+2]
 20098  01269C  0EFE               	movlw	-2
 20099  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20100                           
 20101                           ;stkvar	_signs @ sp[(-4)+3]
 20102                           ;stkvar	_aexp @ sp[(-4)+2]
 20103  0126A4  50E1               	movf	fsr1l,w,c
 20104  0126A6  0FFE               	addlw	-2
 20105  0126A8  6ED9               	movwf	fsr2l,c
 20106  0126AA  50E2               	movf	fsr1h,w,c
 20107  0126AC  6EDA               	movwf	fsr2h,c
 20108  0126AE  0EFF               	movlw	255
 20109  0126B0  22DA               	addwfc	fsr2h,f,c
 20110  0126B2  0EFF               	movlw	-1
 20111  0126B4  50E3               	movf	plusw1,w,c
 20112  0126B6  18DE               	xorwf	postinc2,w,c
 20113  0126B8  B4D8               	btfsc	status,2,c
 20114  0126BA  D002               	goto	l6305
 20115                           
 20116                           ;stkvar	_signs @ sp[(-4)+3]
 20117  0126BC  0EFF               	movlw	-1
 20118  0126BE  8CE3               	bsf	plusw1,6,c
 20119  0126C0                     l6305:
 20120                           
 20121                           ;stkvar	_a @ sp[(-4)+-8]
 20122  0126C0  0EF7               	movlw	247
 20123  0126C2  24E1               	addwf	fsr1l,w,c
 20124  0126C4  6ED9               	movwf	fsr2l,c
 20125  0126C6  0EFF               	movlw	255
 20126  0126C8  20E2               	addwfc	fsr1h,w,c
 20127  0126CA  6EDA               	movwf	fsr2h,c
 20128  0126CC  50DF               	movf	indf2,w,c
 20129  0126CE  6E3D               	movwf	(btemp+11)^0,c
 20130  0126D0  90D8               	bcf	status,0,c
 20131  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 20132  0126D4  6E3C               	movwf	(btemp+10)^0,c
 20133                           
 20134                           ;stkvar	_aexp @ sp[(-4)+2]
 20135  0126D6  0EFE               	movlw	-2
 20136  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20137                           
 20138                           ;stkvar	_a @ sp[(-4)+-8]
 20139  0126DE  0EF6               	movlw	246
 20140  0126E0  24E1               	addwf	fsr1l,w,c
 20141  0126E2  6ED9               	movwf	fsr2l,c
 20142  0126E4  0EFF               	movlw	255
 20143  0126E6  20E2               	addwfc	fsr1h,w,c
 20144  0126E8  6EDA               	movwf	fsr2h,c
 20145  0126EA  AEDF               	btfss	indf2,7,c
 20146  0126EC  D002               	goto	l6311
 20147                           
 20148                           ;stkvar	_aexp @ sp[(-4)+2]
 20149  0126EE  0EFE               	movlw	-2
 20150  0126F0  80E3               	bsf	plusw1,0,c
 20151  0126F2                     l6311:
 20152                           
 20153                           ;stkvar	_aexp @ sp[(-4)+2]
 20154  0126F2  0EFE               	movlw	-2
 20155  0126F4  50E3               	movf	plusw1,w,c
 20156  0126F6  B4D8               	btfsc	status,2,c
 20157  0126F8  D027               	goto	l6321
 20158                           
 20159                           ;stkvar	_aexp @ sp[(-4)+2]
 20160  0126FA  0EFE               	movlw	-2
 20161  0126FC  28E3               	incf	plusw1,w,c
 20162  0126FE  A4D8               	btfss	status,2,c
 20163  012700  D018               	goto	l6317
 20164  012702  0E00               	movlw	0
 20165  012704  6E3A               	movwf	(btemp+8)^0,c
 20166  012706  0E00               	movlw	0
 20167  012708  6E3B               	movwf	(btemp+9)^0,c
 20168  01270A  0E00               	movlw	0
 20169  01270C  6E3C               	movwf	(btemp+10)^0,c
 20170  01270E  0E00               	movlw	0
 20171  012710  6E3D               	movwf	(btemp+11)^0,c
 20172                           
 20173                           ;stkvar	_a @ sp[(-4)+-8]
 20174  012712  0EF4               	movlw	-12
 20175  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20176  01271A  0EF5               	movlw	-11
 20177  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20178  012722  0EF6               	movlw	-10
 20179  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20180  01272A  0EF7               	movlw	-9
 20181  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20182  012732                     l6317:
 20183                           
 20184                           ;stkvar	_a @ sp[(-4)+-8]
 20185  012732  0EF6               	movlw	-10
 20186  012734  8EE3               	bsf	plusw1,7,c
 20187                           
 20188                           ;stkvar	_a @ sp[(-4)+-8]
 20189  012736  0EF7               	movlw	247
 20190  012738  24E1               	addwf	fsr1l,w,c
 20191  01273A  6ED9               	movwf	fsr2l,c
 20192  01273C  0EFF               	movlw	255
 20193  01273E  20E2               	addwfc	fsr1h,w,c
 20194  012740  6EDA               	movwf	fsr2h,c
 20195  012742  0E00               	movlw	0
 20196  012744  6EDF               	movwf	indf2,c
 20197  012746  D018               	goto	l6323
 20198  012748                     l6321:
 20199  012748  0E00               	movlw	0
 20200  01274A  6E3A               	movwf	(btemp+8)^0,c
 20201  01274C  0E00               	movlw	0
 20202  01274E  6E3B               	movwf	(btemp+9)^0,c
 20203  012750  0E00               	movlw	0
 20204  012752  6E3C               	movwf	(btemp+10)^0,c
 20205  012754  0E00               	movlw	0
 20206  012756  6E3D               	movwf	(btemp+11)^0,c
 20207                           
 20208                           ;stkvar	_a @ sp[(-4)+-8]
 20209  012758  0EF4               	movlw	-12
 20210  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20211  012760  0EF5               	movlw	-11
 20212  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20213  012768  0EF6               	movlw	-10
 20214  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20215  012770  0EF7               	movlw	-9
 20216  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20217  012778                     l6323:
 20218                           
 20219                           ;stkvar	_bexp @ sp[(-4)+1]
 20220                           ;stkvar	_aexp @ sp[(-4)+2]
 20221  012778  50E1               	movf	fsr1l,w,c
 20222  01277A  0FFE               	addlw	-2
 20223  01277C  6ED9               	movwf	fsr2l,c
 20224  01277E  50E2               	movf	fsr1h,w,c
 20225  012780  6EDA               	movwf	fsr2h,c
 20226  012782  0EFF               	movlw	255
 20227  012784  22DA               	addwfc	fsr2h,f,c
 20228  012786  0EFD               	movlw	-3
 20229  012788  50E3               	movf	plusw1,w,c
 20230  01278A  5CDE               	subwf	postinc2,w,c
 20231  01278C  B0D8               	btfsc	status,0,c
 20232  01278E  D0A4               	goto	l6359
 20233                           
 20234                           ;stkvar	_signs @ sp[(-4)+3]
 20235  012790  0EFF               	movlw	-1
 20236  012792  ACE3               	btfss	plusw1,6,c
 20237  012794  D002               	goto	l6329
 20238                           
 20239                           ;stkvar	_signs @ sp[(-4)+3]
 20240  012796  0EFF               	movlw	-1
 20241  012798  7EE3               	btg	plusw1,7,c
 20242  01279A                     l6329:
 20243                           
 20244                           ;stkvar	_bexp @ sp[(-4)+1]
 20245                           ;stkvar	_grs @ sp[(-4)+0]
 20246  01279A  0EFD               	movlw	-3
 20247  01279C  006F FF8C  F032    	movff	plusw1,btemp
 20248  0127A2  0EFC               	movlw	-4
 20249  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20250                           
 20251                           ;stkvar	_aexp @ sp[(-4)+2]
 20252                           ;stkvar	_bexp @ sp[(-4)+1]
 20253  0127AA  0EFE               	movlw	-2
 20254  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 20255  0127B2  0EFD               	movlw	-3
 20256  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20257                           
 20258                           ;stkvar	_grs @ sp[(-4)+0]
 20259                           ;stkvar	_aexp @ sp[(-4)+2]
 20260  0127BA  0EFC               	movlw	-4
 20261  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 20262  0127C2  0EFE               	movlw	-2
 20263  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20264                           
 20265                           ;stkvar	_b @ sp[(-4)+-4]
 20266                           ;stkvar	_grs @ sp[(-4)+0]
 20267  0127CA  0EF8               	movlw	-8
 20268  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 20269  0127D2  0EFC               	movlw	-4
 20270  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20271                           
 20272                           ;stkvar	_a @ sp[(-4)+-8]
 20273                           ;stkvar	_b @ sp[(-4)+-4]
 20274  0127DA  0EF4               	movlw	-12
 20275  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 20276  0127E2  0EF8               	movlw	-8
 20277  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20278                           
 20279                           ;stkvar	_grs @ sp[(-4)+0]
 20280                           ;stkvar	_a @ sp[(-4)+-8]
 20281  0127EA  0EFC               	movlw	-4
 20282  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 20283  0127F2  0EF4               	movlw	-12
 20284  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20285                           
 20286                           ;stkvar	_b @ sp[(-4)+-4]
 20287  0127FA  0EF9               	movlw	249
 20288  0127FC  24E1               	addwf	fsr1l,w,c
 20289  0127FE  6ED9               	movwf	fsr2l,c
 20290  012800  0EFF               	movlw	255
 20291  012802  20E2               	addwfc	fsr1h,w,c
 20292  012804  6EDA               	movwf	fsr2h,c
 20293  012806  50DF               	movf	indf2,w,c
 20294  012808  6E3D               	movwf	(btemp+11)^0,c
 20295                           
 20296                           ;stkvar	_grs @ sp[(-4)+0]
 20297  01280A  0EFC               	movlw	-4
 20298  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20299                           
 20300                           ;stkvar	_a @ sp[(-4)+-8]
 20301  012812  0EF5               	movlw	245
 20302  012814  24E1               	addwf	fsr1l,w,c
 20303  012816  6ED9               	movwf	fsr2l,c
 20304  012818  0EFF               	movlw	255
 20305  01281A  20E2               	addwfc	fsr1h,w,c
 20306  01281C  6EDA               	movwf	fsr2h,c
 20307                           
 20308                           ;stkvar	_b @ sp[(-4)+-4]
 20309  01281E  0EF9               	movlw	249
 20310  012820  24E1               	addwf	fsr1l,w,c
 20311  012822  6EE9               	movwf	fsr0l,c
 20312  012824  0EFF               	movlw	255
 20313  012826  20E2               	addwfc	fsr1h,w,c
 20314  012828  6EEA               	movwf	fsr0h,c
 20315  01282A  006F FF7F FFEF     	movff	indf2,indf0
 20316                           
 20317                           ;stkvar	_grs @ sp[(-4)+0]
 20318                           ;stkvar	_a @ sp[(-4)+-8]
 20319  012830  0EF5               	movlw	245
 20320  012832  24E1               	addwf	fsr1l,w,c
 20321  012834  6ED9               	movwf	fsr2l,c
 20322  012836  0EFF               	movlw	255
 20323  012838  20E2               	addwfc	fsr1h,w,c
 20324  01283A  6EDA               	movwf	fsr2h,c
 20325  01283C  0EFC               	movlw	-4
 20326  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 20327                           
 20328                           ;stkvar	_b @ sp[(-4)+-4]
 20329  012844  0EFA               	movlw	250
 20330  012846  24E1               	addwf	fsr1l,w,c
 20331  012848  6ED9               	movwf	fsr2l,c
 20332  01284A  0EFF               	movlw	255
 20333  01284C  20E2               	addwfc	fsr1h,w,c
 20334  01284E  6EDA               	movwf	fsr2h,c
 20335  012850  50DF               	movf	indf2,w,c
 20336  012852  6E3D               	movwf	(btemp+11)^0,c
 20337                           
 20338                           ;stkvar	_grs @ sp[(-4)+0]
 20339  012854  0EFC               	movlw	-4
 20340  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20341                           
 20342                           ;stkvar	_a @ sp[(-4)+-8]
 20343  01285C  0EF6               	movlw	246
 20344  01285E  24E1               	addwf	fsr1l,w,c
 20345  012860  6ED9               	movwf	fsr2l,c
 20346  012862  0EFF               	movlw	255
 20347  012864  20E2               	addwfc	fsr1h,w,c
 20348  012866  6EDA               	movwf	fsr2h,c
 20349                           
 20350                           ;stkvar	_b @ sp[(-4)+-4]
 20351  012868  0EFA               	movlw	250
 20352  01286A  24E1               	addwf	fsr1l,w,c
 20353  01286C  6EE9               	movwf	fsr0l,c
 20354  01286E  0EFF               	movlw	255
 20355  012870  20E2               	addwfc	fsr1h,w,c
 20356  012872  6EEA               	movwf	fsr0h,c
 20357  012874  006F FF7F FFEF     	movff	indf2,indf0
 20358                           
 20359                           ;stkvar	_grs @ sp[(-4)+0]
 20360                           ;stkvar	_a @ sp[(-4)+-8]
 20361  01287A  0EF6               	movlw	246
 20362  01287C  24E1               	addwf	fsr1l,w,c
 20363  01287E  6ED9               	movwf	fsr2l,c
 20364  012880  0EFF               	movlw	255
 20365  012882  20E2               	addwfc	fsr1h,w,c
 20366  012884  6EDA               	movwf	fsr2h,c
 20367  012886  0EFC               	movlw	-4
 20368  012888  006F FF8F FFDF     	movff	plusw1,indf2
 20369                           
 20370                           ;stkvar	_b @ sp[(-4)+-4]
 20371  01288E  0EFB               	movlw	251
 20372  012890  24E1               	addwf	fsr1l,w,c
 20373  012892  6ED9               	movwf	fsr2l,c
 20374  012894  0EFF               	movlw	255
 20375  012896  20E2               	addwfc	fsr1h,w,c
 20376  012898  6EDA               	movwf	fsr2h,c
 20377  01289A  50DF               	movf	indf2,w,c
 20378  01289C  6E3D               	movwf	(btemp+11)^0,c
 20379                           
 20380                           ;stkvar	_grs @ sp[(-4)+0]
 20381  01289E  0EFC               	movlw	-4
 20382  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20383                           
 20384                           ;stkvar	_a @ sp[(-4)+-8]
 20385  0128A6  0EF7               	movlw	247
 20386  0128A8  24E1               	addwf	fsr1l,w,c
 20387  0128AA  6ED9               	movwf	fsr2l,c
 20388  0128AC  0EFF               	movlw	255
 20389  0128AE  20E2               	addwfc	fsr1h,w,c
 20390  0128B0  6EDA               	movwf	fsr2h,c
 20391                           
 20392                           ;stkvar	_b @ sp[(-4)+-4]
 20393  0128B2  0EFB               	movlw	251
 20394  0128B4  24E1               	addwf	fsr1l,w,c
 20395  0128B6  6EE9               	movwf	fsr0l,c
 20396  0128B8  0EFF               	movlw	255
 20397  0128BA  20E2               	addwfc	fsr1h,w,c
 20398  0128BC  6EEA               	movwf	fsr0h,c
 20399  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 20400                           
 20401                           ;stkvar	_grs @ sp[(-4)+0]
 20402                           ;stkvar	_a @ sp[(-4)+-8]
 20403  0128C4  0EF7               	movlw	247
 20404  0128C6  24E1               	addwf	fsr1l,w,c
 20405  0128C8  6ED9               	movwf	fsr2l,c
 20406  0128CA  0EFF               	movlw	255
 20407  0128CC  20E2               	addwfc	fsr1h,w,c
 20408  0128CE  6EDA               	movwf	fsr2h,c
 20409  0128D0  0EFC               	movlw	-4
 20410  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 20411  0128D8                     l6359:
 20412                           
 20413                           ;stkvar	_grs @ sp[(-4)+0]
 20414  0128D8  0EFC               	movlw	-4
 20415  0128DA  6AE3               	clrf	plusw1,c
 20416                           
 20417                           ;stkvar	_aexp @ sp[(-4)+2]
 20418  0128DC  0EFE               	movlw	-2
 20419  0128DE  50E3               	movf	plusw1,w,c
 20420  0128E0  6E3C               	movwf	(btemp+10)^0,c
 20421  0128E2  6A3D               	clrf	(btemp+11)^0,c
 20422                           
 20423                           ;stkvar	_bexp @ sp[(-4)+1]
 20424  0128E4  0EFD               	movlw	-3
 20425  0128E6  50E3               	movf	plusw1,w,c
 20426  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 20427  0128EA  0E00               	movlw	0
 20428  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 20429  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 20430  0128F0  D062               	goto	l6383
 20431  0128F2  503D               	movf	(btemp+11)^0,w,c
 20432  0128F4  E104               	bnz	u4680
 20433  0128F6  0E1A               	movlw	26
 20434  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 20435  0128FA  A0D8               	btfss	status,0,c
 20436  0128FC  D05C               	goto	l6383
 20437  0128FE                     u4680:
 20438                           
 20439                           ;stkvar	_b @ sp[(-4)+-4]
 20440  0128FE  0EF8               	movlw	-8
 20441  012900  50E3               	movf	plusw1,w,c
 20442  012902  E10A               	bnz	u4691
 20443  012904  0EF9               	movlw	-7
 20444  012906  50E3               	movf	plusw1,w,c
 20445  012908  E107               	bnz	u4691
 20446  01290A  0EFA               	movlw	-6
 20447  01290C  50E3               	movf	plusw1,w,c
 20448  01290E  E104               	bnz	u4691
 20449  012910  0EFB               	movlw	-5
 20450  012912  50E3               	movf	plusw1,w,c
 20451  012914  B4D8               	btfsc	status,2,c
 20452  012916  D003               	goto	u4690
 20453  012918                     u4691:
 20454  012918  6A3D               	clrf	(btemp+11)^0,c
 20455  01291A  2A3D               	incf	(btemp+11)^0,f,c
 20456  01291C  D001               	goto	u4708
 20457  01291E                     u4690:
 20458  01291E  6A3D               	clrf	(btemp+11)^0,c
 20459  012920                     u4708:
 20460                           
 20461                           ;stkvar	_grs @ sp[(-4)+0]
 20462  012920  0EFC               	movlw	-4
 20463  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20464                           
 20465                           ;stkvar	_b @ sp[(-4)+-4]
 20466  012928  0EF8               	movlw	-8
 20467  01292A  6AE3               	clrf	plusw1,c
 20468  01292C  0EF9               	movlw	-7
 20469  01292E  6AE3               	clrf	plusw1,c
 20470  012930  0EFA               	movlw	-6
 20471  012932  6AE3               	clrf	plusw1,c
 20472  012934  0EFB               	movlw	-5
 20473  012936  6AE3               	clrf	plusw1,c
 20474                           
 20475                           ;stkvar	_aexp @ sp[(-4)+2]
 20476                           ;stkvar	_bexp @ sp[(-4)+1]
 20477  012938  0EFE               	movlw	-2
 20478  01293A  006F FF8C  F032    	movff	plusw1,btemp
 20479  012940  0EFD               	movlw	-3
 20480  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 20481  012948  D042               	goto	u4740
 20482  01294A                     l6369:
 20483                           
 20484                           ;stkvar	_grs @ sp[(-4)+0]
 20485  01294A  0EFC               	movlw	-4
 20486  01294C  A0E3               	btfss	plusw1,0,c
 20487  01294E  D00D               	goto	l6373
 20488                           
 20489                           ;stkvar	_grs @ sp[(-4)+0]
 20490  012950  0EFC               	movlw	-4
 20491  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 20492  012958  90D8               	bcf	status,0,c
 20493  01295A  323D               	rrcf	(btemp+11)^0,f,c
 20494  01295C  0E01               	movlw	1
 20495  01295E  123D               	iorwf	(btemp+11)^0,f,c
 20496                           
 20497                           ;stkvar	_grs @ sp[(-4)+0]
 20498  012960  0EFC               	movlw	-4
 20499  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20500  012968  D009               	goto	l6375
 20501  01296A                     l6373:
 20502                           
 20503                           ;stkvar	_grs @ sp[(-4)+0]
 20504  01296A  50E1               	movf	fsr1l,w,c
 20505  01296C  0FFC               	addlw	-4
 20506  01296E  6ED9               	movwf	fsr2l,c
 20507  012970  50E2               	movf	fsr1h,w,c
 20508  012972  6EDA               	movwf	fsr2h,c
 20509  012974  0EFF               	movlw	255
 20510  012976  22DA               	addwfc	fsr2h,f,c
 20511  012978  90D8               	bcf	status,0,c
 20512  01297A  32DF               	rrcf	indf2,f,c
 20513  01297C                     l6375:
 20514                           
 20515                           ;stkvar	_b @ sp[(-4)+-4]
 20516  01297C  0EF8               	movlw	-8
 20517  01297E  A0E3               	btfss	plusw1,0,c
 20518  012980  D002               	goto	l6379
 20519                           
 20520                           ;stkvar	_grs @ sp[(-4)+0]
 20521  012982  0EFC               	movlw	-4
 20522  012984  8EE3               	bsf	plusw1,7,c
 20523  012986                     l6379:
 20524  012986  0E01               	movlw	1
 20525  012988  6E3D               	movwf	(btemp+11)^0,c
 20526                           
 20527                           ;stkvar	_b @ sp[(-4)+-4]
 20528  01298A  50E1               	movf	fsr1l,w,c
 20529  01298C  0FF8               	addlw	-8
 20530  01298E  6ED9               	movwf	fsr2l,c
 20531  012990  50E2               	movf	fsr1h,w,c
 20532  012992  6EDA               	movwf	fsr2h,c
 20533  012994  0EFF               	movlw	255
 20534  012996  22DA               	addwfc	fsr2h,f,c
 20535  012998  283D               	incf	(btemp+11)^0,w,c
 20536  01299A  52DE               	movf	postinc2,f,c
 20537  01299C  D008               	goto	u4730
 20538  01299E                     u4735:
 20539  01299E  52DE               	movf	postinc2,f,c
 20540  0129A0  90D8               	bcf	status,0,c
 20541  0129A2  BEDC               	btfsc	preinc2,7,c
 20542  0129A4  80D8               	bsf	status,0,c
 20543  0129A6  32DD               	rrcf	postdec2,f,c
 20544  0129A8  32DD               	rrcf	postdec2,f,c
 20545  0129AA  32DD               	rrcf	postdec2,f,c
 20546  0129AC  32DE               	rrcf	postinc2,f,c
 20547  0129AE                     u4730:
 20548  0129AE  2EE8               	decfsz	wreg,f,c
 20549  0129B0  D7F6               	goto	u4735
 20550                           
 20551                           ;stkvar	_bexp @ sp[(-4)+1]
 20552  0129B2  0EFD               	movlw	-3
 20553  0129B4  2AE3               	incf	plusw1,f,c
 20554  0129B6                     l6383:
 20555                           
 20556                           ;stkvar	_aexp @ sp[(-4)+2]
 20557                           ;stkvar	_bexp @ sp[(-4)+1]
 20558  0129B6  50E1               	movf	fsr1l,w,c
 20559  0129B8  0FFD               	addlw	-3
 20560  0129BA  6ED9               	movwf	fsr2l,c
 20561  0129BC  50E2               	movf	fsr1h,w,c
 20562  0129BE  6EDA               	movwf	fsr2h,c
 20563  0129C0  0EFF               	movlw	255
 20564  0129C2  22DA               	addwfc	fsr2h,f,c
 20565  0129C4  0EFE               	movlw	-2
 20566  0129C6  50E3               	movf	plusw1,w,c
 20567  0129C8  5CDE               	subwf	postinc2,w,c
 20568  0129CA  A0D8               	btfss	status,0,c
 20569  0129CC  D7BE               	goto	l6369
 20570  0129CE                     u4740:
 20571                           
 20572                           ;stkvar	_signs @ sp[(-4)+3]
 20573  0129CE  0EFF               	movlw	-1
 20574  0129D0  BCE3               	btfsc	plusw1,6,c
 20575  0129D2  D066               	goto	l6411
 20576                           
 20577                           ;stkvar	_bexp @ sp[(-4)+1]
 20578  0129D4  0EFD               	movlw	-3
 20579  0129D6  50E3               	movf	plusw1,w,c
 20580  0129D8  B4D8               	btfsc	status,2,c
 20581  0129DA  D0F2               	goto	u4840
 20582                           
 20583                           ;stkvar	_a @ sp[(-4)+-8]
 20584                           ;stkvar	_b @ sp[(-4)+-4]
 20585  0129DC  0EF8               	movlw	-8
 20586  0129DE  50E3               	movf	plusw1,w,c
 20587  0129E0  6E32               	movwf	btemp^0,c
 20588  0129E2  0EF4               	movlw	-12
 20589  0129E4  50E3               	movf	plusw1,w,c
 20590  0129E6  2632               	addwf	btemp^0,f,c
 20591  0129E8  0EF8               	movlw	-8
 20592  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 20593  0129F0  0EF9               	movlw	-7
 20594  0129F2  50E3               	movf	plusw1,w,c
 20595  0129F4  6E32               	movwf	btemp^0,c
 20596  0129F6  0EF5               	movlw	-11
 20597  0129F8  50E3               	movf	plusw1,w,c
 20598  0129FA  2232               	addwfc	btemp^0,f,c
 20599  0129FC  0EF9               	movlw	-7
 20600  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 20601  012A04  0EFA               	movlw	-6
 20602  012A06  50E3               	movf	plusw1,w,c
 20603  012A08  6E32               	movwf	btemp^0,c
 20604  012A0A  0EF6               	movlw	-10
 20605  012A0C  50E3               	movf	plusw1,w,c
 20606  012A0E  2232               	addwfc	btemp^0,f,c
 20607  012A10  0EFA               	movlw	-6
 20608  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 20609  012A18  0EFB               	movlw	-5
 20610  012A1A  50E3               	movf	plusw1,w,c
 20611  012A1C  6E32               	movwf	btemp^0,c
 20612  012A1E  0EF7               	movlw	-9
 20613  012A20  50E3               	movf	plusw1,w,c
 20614  012A22  2232               	addwfc	btemp^0,f,c
 20615  012A24  0EFB               	movlw	-5
 20616  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 20617                           
 20618                           ;stkvar	_b @ sp[(-4)+-4]
 20619  012A2C  0EFB               	movlw	-5
 20620  012A2E  A0E3               	btfss	plusw1,0,c
 20621  012A30  D101               	goto	u4880
 20622                           
 20623                           ;stkvar	_grs @ sp[(-4)+0]
 20624  012A32  0EFC               	movlw	-4
 20625  012A34  A0E3               	btfss	plusw1,0,c
 20626  012A36  D00D               	goto	l6401
 20627                           
 20628                           ;stkvar	_grs @ sp[(-4)+0]
 20629  012A38  0EFC               	movlw	-4
 20630  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 20631  012A40  90D8               	bcf	status,0,c
 20632  012A42  323D               	rrcf	(btemp+11)^0,f,c
 20633  012A44  0E01               	movlw	1
 20634  012A46  123D               	iorwf	(btemp+11)^0,f,c
 20635                           
 20636                           ;stkvar	_grs @ sp[(-4)+0]
 20637  012A48  0EFC               	movlw	-4
 20638  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20639  012A50  D009               	goto	l6403
 20640  012A52                     l6401:
 20641                           
 20642                           ;stkvar	_grs @ sp[(-4)+0]
 20643  012A52  50E1               	movf	fsr1l,w,c
 20644  012A54  0FFC               	addlw	-4
 20645  012A56  6ED9               	movwf	fsr2l,c
 20646  012A58  50E2               	movf	fsr1h,w,c
 20647  012A5A  6EDA               	movwf	fsr2h,c
 20648  012A5C  0EFF               	movlw	255
 20649  012A5E  22DA               	addwfc	fsr2h,f,c
 20650  012A60  90D8               	bcf	status,0,c
 20651  012A62  32DF               	rrcf	indf2,f,c
 20652  012A64                     l6403:
 20653                           
 20654                           ;stkvar	_b @ sp[(-4)+-4]
 20655  012A64  0EF8               	movlw	-8
 20656  012A66  A0E3               	btfss	plusw1,0,c
 20657  012A68  D002               	goto	l6407
 20658                           
 20659                           ;stkvar	_grs @ sp[(-4)+0]
 20660  012A6A  0EFC               	movlw	-4
 20661  012A6C  8EE3               	bsf	plusw1,7,c
 20662  012A6E                     l6407:
 20663  012A6E  0E01               	movlw	1
 20664  012A70  6E3D               	movwf	(btemp+11)^0,c
 20665                           
 20666                           ;stkvar	_b @ sp[(-4)+-4]
 20667  012A72  50E1               	movf	fsr1l,w,c
 20668  012A74  0FF8               	addlw	-8
 20669  012A76  6ED9               	movwf	fsr2l,c
 20670  012A78  50E2               	movf	fsr1h,w,c
 20671  012A7A  6EDA               	movwf	fsr2h,c
 20672  012A7C  0EFF               	movlw	255
 20673  012A7E  22DA               	addwfc	fsr2h,f,c
 20674  012A80  283D               	incf	(btemp+11)^0,w,c
 20675  012A82  52DE               	movf	postinc2,f,c
 20676  012A84  D008               	goto	u4800
 20677  012A86                     u4805:
 20678  012A86  52DE               	movf	postinc2,f,c
 20679  012A88  90D8               	bcf	status,0,c
 20680  012A8A  BEDC               	btfsc	preinc2,7,c
 20681  012A8C  80D8               	bsf	status,0,c
 20682  012A8E  32DD               	rrcf	postdec2,f,c
 20683  012A90  32DD               	rrcf	postdec2,f,c
 20684  012A92  32DD               	rrcf	postdec2,f,c
 20685  012A94  32DE               	rrcf	postinc2,f,c
 20686  012A96                     u4800:
 20687  012A96  2EE8               	decfsz	wreg,f,c
 20688  012A98  D7F6               	goto	u4805
 20689                           
 20690                           ;stkvar	_bexp @ sp[(-4)+1]
 20691  012A9A  0EFD               	movlw	-3
 20692  012A9C  2AE3               	incf	plusw1,f,c
 20693  012A9E  D0CA               	goto	u4880
 20694  012AA0                     l6411:
 20695                           
 20696                           ;stkvar	_a @ sp[(-4)+-8]
 20697                           ;stkvar	_b @ sp[(-4)+-4]
 20698  012AA0  50E1               	movf	fsr1l,w,c
 20699  012AA2  0FF8               	addlw	-8
 20700  012AA4  6ED9               	movwf	fsr2l,c
 20701  012AA6  50E2               	movf	fsr1h,w,c
 20702  012AA8  6EDA               	movwf	fsr2h,c
 20703  012AAA  0EFF               	movlw	255
 20704  012AAC  22DA               	addwfc	fsr2h,f,c
 20705  012AAE  0EF4               	movlw	-12
 20706  012AB0  50E3               	movf	plusw1,w,c
 20707  012AB2  5CDE               	subwf	postinc2,w,c
 20708  012AB4  0EF5               	movlw	-11
 20709  012AB6  50E3               	movf	plusw1,w,c
 20710  012AB8  58DE               	subwfb	postinc2,w,c
 20711  012ABA  0EF6               	movlw	-10
 20712  012ABC  50E3               	movf	plusw1,w,c
 20713  012ABE  58DE               	subwfb	postinc2,w,c
 20714  012AC0  50DE               	movf	postinc2,w,c
 20715  012AC2  0A80               	xorlw	128
 20716  012AC4  6E32               	movwf	btemp^0,c
 20717  012AC6  0EF7               	movlw	-9
 20718  012AC8  50E3               	movf	plusw1,w,c
 20719  012ACA  0A80               	xorlw	128
 20720  012ACC  5832               	subwfb	btemp^0,w,c
 20721  012ACE  B0D8               	btfsc	status,0,c
 20722  012AD0  D053               	goto	l6423
 20723                           
 20724                           ;stkvar	_b @ sp[(-4)+-4]
 20725                           ;stkvar	_a @ sp[(-4)+-8]
 20726  012AD2  0EF4               	movlw	-12
 20727  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 20728  012ADA  0EF5               	movlw	-11
 20729  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 20730  012AE2  0EF6               	movlw	-10
 20731  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 20732  012AEA  0EF7               	movlw	-9
 20733  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20734  012AF2  0EF8               	movlw	-8
 20735  012AF4  50E3               	movf	plusw1,w,c
 20736  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 20737  012AF8  0EF9               	movlw	-7
 20738  012AFA  50E3               	movf	plusw1,w,c
 20739  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 20740  012AFE  0EFA               	movlw	-6
 20741  012B00  50E3               	movf	plusw1,w,c
 20742  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 20743  012B04  0EFB               	movlw	-5
 20744  012B06  50E3               	movf	plusw1,w,c
 20745  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 20746  012B0A  0EFF               	movlw	255
 20747  012B0C  243A               	addwf	(btemp+8)^0,w,c
 20748  012B0E  6E36               	movwf	(btemp+4)^0,c
 20749  012B10  0EFF               	movlw	255
 20750  012B12  203B               	addwfc	(btemp+9)^0,w,c
 20751  012B14  6E37               	movwf	(btemp+5)^0,c
 20752  012B16  0EFF               	movlw	255
 20753  012B18  203C               	addwfc	(btemp+10)^0,w,c
 20754  012B1A  6E38               	movwf	(btemp+6)^0,c
 20755  012B1C  0EFF               	movlw	255
 20756  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 20757  012B20  6E39               	movwf	(btemp+7)^0,c
 20758                           
 20759                           ;stkvar	_b @ sp[(-4)+-4]
 20760  012B22  0EF8               	movlw	-8
 20761  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 20762  012B2A  0EF9               	movlw	-7
 20763  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 20764  012B32  0EFA               	movlw	-6
 20765  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 20766  012B3A  0EFB               	movlw	-5
 20767  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 20768                           
 20769                           ;stkvar	_signs @ sp[(-4)+3]
 20770  012B42  0EFF               	movlw	-1
 20771  012B44  7EE3               	btg	plusw1,7,c
 20772                           
 20773                           ;stkvar	_grs @ sp[(-4)+0]
 20774  012B46  0EFC               	movlw	-4
 20775  012B48  50E3               	movf	plusw1,w,c
 20776  012B4A  0800               	sublw	0
 20777  012B4C  6E3D               	movwf	(btemp+11)^0,c
 20778                           
 20779                           ;stkvar	_grs @ sp[(-4)+0]
 20780  012B4E  0EFC               	movlw	-4
 20781  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20782                           
 20783                           ;stkvar	_grs @ sp[(-4)+0]
 20784  012B56  0EFC               	movlw	-4
 20785  012B58  50E3               	movf	plusw1,w,c
 20786  012B5A  A4D8               	btfss	status,2,c
 20787  012B5C  D020               	goto	l6425
 20788                           
 20789                           ;stkvar	_b @ sp[(-4)+-4]
 20790  012B5E  50E1               	movf	fsr1l,w,c
 20791  012B60  0FF8               	addlw	-8
 20792  012B62  6ED9               	movwf	fsr2l,c
 20793  012B64  50E2               	movf	fsr1h,w,c
 20794  012B66  6EDA               	movwf	fsr2h,c
 20795  012B68  0EFF               	movlw	255
 20796  012B6A  22DA               	addwfc	fsr2h,f,c
 20797  012B6C  2ADE               	incf	postinc2,f,c
 20798  012B6E  0E00               	movlw	0
 20799  012B70  22DE               	addwfc	postinc2,f,c
 20800  012B72  22DE               	addwfc	postinc2,f,c
 20801  012B74  22DE               	addwfc	postinc2,f,c
 20802  012B76  D013               	goto	l6425
 20803  012B78                     l6423:
 20804                           
 20805                           ;stkvar	_a @ sp[(-4)+-8]
 20806                           ;stkvar	_b @ sp[(-4)+-4]
 20807  012B78  50E1               	movf	fsr1l,w,c
 20808  012B7A  0FF8               	addlw	-8
 20809  012B7C  6ED9               	movwf	fsr2l,c
 20810  012B7E  50E2               	movf	fsr1h,w,c
 20811  012B80  6EDA               	movwf	fsr2h,c
 20812  012B82  0EFF               	movlw	255
 20813  012B84  22DA               	addwfc	fsr2h,f,c
 20814  012B86  0EF4               	movlw	-12
 20815  012B88  50E3               	movf	plusw1,w,c
 20816  012B8A  5EDE               	subwf	postinc2,f,c
 20817  012B8C  0EF5               	movlw	-11
 20818  012B8E  50E3               	movf	plusw1,w,c
 20819  012B90  5ADE               	subwfb	postinc2,f,c
 20820  012B92  0EF6               	movlw	-10
 20821  012B94  50E3               	movf	plusw1,w,c
 20822  012B96  5ADE               	subwfb	postinc2,f,c
 20823  012B98  0EF7               	movlw	-9
 20824  012B9A  50E3               	movf	plusw1,w,c
 20825  012B9C  5ADE               	subwfb	postinc2,f,c
 20826  012B9E                     l6425:
 20827                           
 20828                           ;stkvar	_b @ sp[(-4)+-4]
 20829  012B9E  0EF8               	movlw	-8
 20830  012BA0  50E3               	movf	plusw1,w,c
 20831  012BA2  E145               	bnz	l6447
 20832  012BA4  0EF9               	movlw	-7
 20833  012BA6  50E3               	movf	plusw1,w,c
 20834  012BA8  E142               	bnz	l6447
 20835  012BAA  0EFA               	movlw	-6
 20836  012BAC  50E3               	movf	plusw1,w,c
 20837  012BAE  E13F               	bnz	l6447
 20838  012BB0  0EFB               	movlw	-5
 20839  012BB2  50E3               	movf	plusw1,w,c
 20840  012BB4  A4D8               	btfss	status,2,c
 20841  012BB6  D03B               	goto	l6447
 20842                           
 20843                           ;stkvar	_grs @ sp[(-4)+0]
 20844  012BB8  0EFC               	movlw	-4
 20845  012BBA  50E3               	movf	plusw1,w,c
 20846  012BBC  A4D8               	btfss	status,2,c
 20847  012BBE  D037               	goto	l6447
 20848  012BC0                     u4840:
 20849  012BC0  0E00               	movlw	0
 20850  012BC2  6E32               	movwf	btemp^0,c
 20851  012BC4  0E00               	movlw	0
 20852  012BC6  6E33               	movwf	(btemp+1)^0,c
 20853  012BC8  0E00               	movlw	0
 20854  012BCA  6E34               	movwf	(btemp+2)^0,c
 20855  012BCC  0E00               	movlw	0
 20856  012BCE  6E35               	movwf	(btemp+3)^0,c
 20857  012BD0  D0C6               	goto	l2615
 20858  012BD2                     l6433:
 20859                           
 20860                           ;stkvar	_b @ sp[(-4)+-4]
 20861  012BD2  90D8               	bcf	status,0,c
 20862  012BD4  0EF8               	movlw	-8
 20863  012BD6  36E3               	rlcf	plusw1,f,c
 20864  012BD8  0EF9               	movlw	-7
 20865  012BDA  36E3               	rlcf	plusw1,f,c
 20866  012BDC  0EFA               	movlw	-6
 20867  012BDE  36E3               	rlcf	plusw1,f,c
 20868  012BE0  0EFB               	movlw	-5
 20869  012BE2  36E3               	rlcf	plusw1,f,c
 20870                           
 20871                           ;stkvar	_grs @ sp[(-4)+0]
 20872  012BE4  0EFC               	movlw	-4
 20873  012BE6  AEE3               	btfss	plusw1,7,c
 20874  012BE8  D002               	goto	l2627
 20875                           
 20876                           ;stkvar	_b @ sp[(-4)+-4]
 20877  012BEA  0EF8               	movlw	-8
 20878  012BEC  80E3               	bsf	plusw1,0,c
 20879  012BEE                     l2627:
 20880                           
 20881                           ;stkvar	_grs @ sp[(-4)+0]
 20882  012BEE  0EFC               	movlw	-4
 20883  012BF0  A0E3               	btfss	plusw1,0,c
 20884  012BF2  D00E               	goto	l6441
 20885                           
 20886                           ;stkvar	_grs @ sp[(-4)+0]
 20887  012BF4  0EFC               	movlw	-4
 20888  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 20889  012BFC  90D8               	bcf	status,0,c
 20890  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 20891  012C00  6E3C               	movwf	(btemp+10)^0,c
 20892  012C02  0E01               	movlw	1
 20893  012C04  123C               	iorwf	(btemp+10)^0,f,c
 20894                           
 20895                           ;stkvar	_grs @ sp[(-4)+0]
 20896  012C06  0EFC               	movlw	-4
 20897  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20898  012C0E  D009               	goto	l6443
 20899  012C10                     l6441:
 20900                           
 20901                           ;stkvar	_grs @ sp[(-4)+0]
 20902  012C10  50E1               	movf	fsr1l,w,c
 20903  012C12  0FFC               	addlw	-4
 20904  012C14  6ED9               	movwf	fsr2l,c
 20905  012C16  50E2               	movf	fsr1h,w,c
 20906  012C18  6EDA               	movwf	fsr2h,c
 20907  012C1A  0EFF               	movlw	255
 20908  012C1C  22DA               	addwfc	fsr2h,f,c
 20909  012C1E  90D8               	bcf	status,0,c
 20910  012C20  36DF               	rlcf	indf2,f,c
 20911  012C22                     l6443:
 20912                           
 20913                           ;stkvar	_bexp @ sp[(-4)+1]
 20914  012C22  0EFD               	movlw	-3
 20915  012C24  50E3               	movf	plusw1,w,c
 20916  012C26  B4D8               	btfsc	status,2,c
 20917  012C28  D002               	goto	l6447
 20918                           
 20919                           ;stkvar	_bexp @ sp[(-4)+1]
 20920  012C2A  0EFD               	movlw	-3
 20921  012C2C  06E3               	decf	plusw1,f,c
 20922  012C2E                     l6447:
 20923                           
 20924                           ;stkvar	_b @ sp[(-4)+-4]
 20925  012C2E  0EFA               	movlw	-6
 20926  012C30  AEE3               	btfss	plusw1,7,c
 20927  012C32  D7CF               	goto	l6433
 20928  012C34                     u4880:
 20929                           
 20930                           ;stkvar	_aexp @ sp[(-4)+2]
 20931  012C34  0EFE               	movlw	-2
 20932  012C36  6AE3               	clrf	plusw1,c
 20933                           
 20934                           ;stkvar	_grs @ sp[(-4)+0]
 20935  012C38  0EFC               	movlw	-4
 20936  012C3A  AEE3               	btfss	plusw1,7,c
 20937  012C3C  D00F               	goto	l6461
 20938                           
 20939                           ;stkvar	_grs @ sp[(-4)+0]
 20940  012C3E  0EFC               	movlw	-4
 20941  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 20942  012C46  0E7F               	movlw	127
 20943  012C48  163D               	andwf	(btemp+11)^0,f,c
 20944  012C4A  B4D8               	btfsc	status,2,c
 20945  012C4C  D004               	goto	l6457
 20946  012C4E                     u4900:
 20947                           
 20948                           ;stkvar	_aexp @ sp[(-4)+2]
 20949  012C4E  0EFE               	movlw	-2
 20950  012C50  6AE3               	clrf	plusw1,c
 20951  012C52  2AE3               	incf	plusw1,f,c
 20952  012C54  D003               	goto	l6461
 20953  012C56                     l6457:
 20954                           
 20955                           ;stkvar	_b @ sp[(-4)+-4]
 20956  012C56  0EF8               	movlw	-8
 20957  012C58  B0E3               	btfsc	plusw1,0,c
 20958  012C5A  D7F9               	goto	u4900
 20959  012C5C                     l6461:
 20960                           
 20961                           ;stkvar	_aexp @ sp[(-4)+2]
 20962  012C5C  0EFE               	movlw	-2
 20963  012C5E  50E3               	movf	plusw1,w,c
 20964  012C60  B4D8               	btfsc	status,2,c
 20965  012C62  D02B               	goto	l6473
 20966                           
 20967                           ;stkvar	_b @ sp[(-4)+-4]
 20968  012C64  50E1               	movf	fsr1l,w,c
 20969  012C66  0FF8               	addlw	-8
 20970  012C68  6ED9               	movwf	fsr2l,c
 20971  012C6A  50E2               	movf	fsr1h,w,c
 20972  012C6C  6EDA               	movwf	fsr2h,c
 20973  012C6E  0EFF               	movlw	255
 20974  012C70  22DA               	addwfc	fsr2h,f,c
 20975  012C72  2ADE               	incf	postinc2,f,c
 20976  012C74  0E00               	movlw	0
 20977  012C76  22DE               	addwfc	postinc2,f,c
 20978  012C78  22DE               	addwfc	postinc2,f,c
 20979  012C7A  22DE               	addwfc	postinc2,f,c
 20980                           
 20981                           ;stkvar	_b @ sp[(-4)+-4]
 20982  012C7C  0EFB               	movlw	-5
 20983  012C7E  A0E3               	btfss	plusw1,0,c
 20984  012C80  D01C               	goto	l6473
 20985  012C82  0E01               	movlw	1
 20986  012C84  6E3D               	movwf	(btemp+11)^0,c
 20987                           
 20988                           ;stkvar	_b @ sp[(-4)+-4]
 20989  012C86  50E1               	movf	fsr1l,w,c
 20990  012C88  0FF8               	addlw	-8
 20991  012C8A  6ED9               	movwf	fsr2l,c
 20992  012C8C  50E2               	movf	fsr1h,w,c
 20993  012C8E  6EDA               	movwf	fsr2h,c
 20994  012C90  0EFF               	movlw	255
 20995  012C92  22DA               	addwfc	fsr2h,f,c
 20996  012C94  283D               	incf	(btemp+11)^0,w,c
 20997  012C96  52DE               	movf	postinc2,f,c
 20998  012C98  D008               	goto	u4940
 20999  012C9A                     u4945:
 21000  012C9A  52DE               	movf	postinc2,f,c
 21001  012C9C  90D8               	bcf	status,0,c
 21002  012C9E  BEDC               	btfsc	preinc2,7,c
 21003  012CA0  80D8               	bsf	status,0,c
 21004  012CA2  32DD               	rrcf	postdec2,f,c
 21005  012CA4  32DD               	rrcf	postdec2,f,c
 21006  012CA6  32DD               	rrcf	postdec2,f,c
 21007  012CA8  32DE               	rrcf	postinc2,f,c
 21008  012CAA                     u4940:
 21009  012CAA  2EE8               	decfsz	wreg,f,c
 21010  012CAC  D7F6               	goto	u4945
 21011                           
 21012                           ;stkvar	_bexp @ sp[(-4)+1]
 21013  012CAE  0EFD               	movlw	-3
 21014  012CB0  28E3               	incf	plusw1,w,c
 21015  012CB2  B4D8               	btfsc	status,2,c
 21016  012CB4  D002               	goto	l6473
 21017                           
 21018                           ;stkvar	_bexp @ sp[(-4)+1]
 21019  012CB6  0EFD               	movlw	-3
 21020  012CB8  2AE3               	incf	plusw1,f,c
 21021  012CBA                     l6473:
 21022                           
 21023                           ;stkvar	_bexp @ sp[(-4)+1]
 21024  012CBA  0EFD               	movlw	-3
 21025  012CBC  28E3               	incf	plusw1,w,c
 21026  012CBE  B4D8               	btfsc	status,2,c
 21027  012CC0  D004               	goto	u4970
 21028                           
 21029                           ;stkvar	_bexp @ sp[(-4)+1]
 21030  012CC2  0EFD               	movlw	-3
 21031  012CC4  50E3               	movf	plusw1,w,c
 21032  012CC6  A4D8               	btfss	status,2,c
 21033  012CC8  D00E               	goto	l6483
 21034  012CCA                     u4970:
 21035                           
 21036                           ;stkvar	_b @ sp[(-4)+-4]
 21037  012CCA  0EF8               	movlw	-8
 21038  012CCC  6AE3               	clrf	plusw1,c
 21039  012CCE  0EF9               	movlw	-7
 21040  012CD0  6AE3               	clrf	plusw1,c
 21041  012CD2  0EFA               	movlw	-6
 21042  012CD4  6AE3               	clrf	plusw1,c
 21043  012CD6  0EFB               	movlw	-5
 21044  012CD8  6AE3               	clrf	plusw1,c
 21045                           
 21046                           ;stkvar	_bexp @ sp[(-4)+1]
 21047  012CDA  0EFD               	movlw	-3
 21048  012CDC  50E3               	movf	plusw1,w,c
 21049  012CDE  A4D8               	btfss	status,2,c
 21050  012CE0  D002               	goto	l6483
 21051                           
 21052                           ;stkvar	_signs @ sp[(-4)+3]
 21053  012CE2  0EFF               	movlw	-1
 21054  012CE4  6AE3               	clrf	plusw1,c
 21055  012CE6                     l6483:
 21056                           
 21057                           ;stkvar	_bexp @ sp[(-4)+1]
 21058  012CE6  0EFD               	movlw	-3
 21059  012CE8  A0E3               	btfss	plusw1,0,c
 21060  012CEA  D009               	goto	l6487
 21061                           
 21062                           ;stkvar	_b @ sp[(-4)+-4]
 21063  012CEC  0EFA               	movlw	250
 21064  012CEE  24E1               	addwf	fsr1l,w,c
 21065  012CF0  6ED9               	movwf	fsr2l,c
 21066  012CF2  0EFF               	movlw	255
 21067  012CF4  20E2               	addwfc	fsr1h,w,c
 21068  012CF6  6EDA               	movwf	fsr2h,c
 21069  012CF8  0E00               	movlw	0
 21070  012CFA  8EDB               	bsf	plusw2,7,c
 21071  012CFC  D008               	goto	l6489
 21072  012CFE                     l6487:
 21073                           
 21074                           ;stkvar	_b @ sp[(-4)+-4]
 21075  012CFE  0EFA               	movlw	250
 21076  012D00  24E1               	addwf	fsr1l,w,c
 21077  012D02  6ED9               	movwf	fsr2l,c
 21078  012D04  0EFF               	movlw	255
 21079  012D06  20E2               	addwfc	fsr1h,w,c
 21080  012D08  6EDA               	movwf	fsr2h,c
 21081  012D0A  0E7F               	movlw	127
 21082  012D0C  16DF               	andwf	indf2,f,c
 21083  012D0E                     l6489:
 21084                           
 21085                           ;stkvar	_b @ sp[(-4)+-4]
 21086  012D0E  0EFB               	movlw	251
 21087  012D10  24E1               	addwf	fsr1l,w,c
 21088  012D12  6ED9               	movwf	fsr2l,c
 21089  012D14  0EFF               	movlw	255
 21090  012D16  20E2               	addwfc	fsr1h,w,c
 21091  012D18  6EDA               	movwf	fsr2h,c
 21092                           
 21093                           ;stkvar	_bexp @ sp[(-4)+1]
 21094  012D1A  0EFD               	movlw	-3
 21095  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21096  012D22  90D8               	bcf	status,0,c
 21097  012D24  303D               	rrcf	(btemp+11)^0,w,c
 21098  012D26  6EDF               	movwf	indf2,c
 21099                           
 21100                           ;stkvar	_signs @ sp[(-4)+3]
 21101  012D28  0EFF               	movlw	-1
 21102  012D2A  AEE3               	btfss	plusw1,7,c
 21103  012D2C  D008               	goto	l6495
 21104                           
 21105                           ;stkvar	_b @ sp[(-4)+-4]
 21106  012D2E  0EFB               	movlw	251
 21107  012D30  24E1               	addwf	fsr1l,w,c
 21108  012D32  6ED9               	movwf	fsr2l,c
 21109  012D34  0EFF               	movlw	255
 21110  012D36  20E2               	addwfc	fsr1h,w,c
 21111  012D38  6EDA               	movwf	fsr2h,c
 21112  012D3A  0E00               	movlw	0
 21113  012D3C  8EDB               	bsf	plusw2,7,c
 21114  012D3E                     l6495:
 21115                           
 21116                           ;stkvar	_b @ sp[(-4)+-4]
 21117  012D3E  0EF8               	movlw	-8
 21118  012D40  006F FF8C  F032    	movff	plusw1,btemp
 21119  012D46  0EF9               	movlw	-7
 21120  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 21121  012D4E  0EFA               	movlw	-6
 21122  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 21123  012D56  0EFB               	movlw	-5
 21124  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 21125  012D5E                     l2615:
 21126                           
 21127                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 21128  012D5E  0EF4               	movlw	244
 21129  012D60  26E1               	addwf	fsr1l,f,c
 21130  012D62  0EFF               	movlw	255
 21131  012D64  22E2               	addwfc	fsr1h,f,c
 21132  012D66  0012               	return		;funcret
 21133  012D68                     __end_of___fladd:
 21134                           	opt callstack 0
 21135                           
 21136 ;; *************** function ___flmul *****************
 21137 ;; Defined at:
 21138 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 21139 ;; Parameters:    Size  Location     Type
 21140 ;;  b               4  [STACK] unsigned char 
 21141 ;;  a               4  [STACK] unsigned char 
 21142 ;; Auto vars:     Size  Location     Type
 21143 ;;  prod            4  [STACK] struct .
 21144 ;;  grs             4  [STACK] unsigned long 
 21145 ;;  temp            2  [STACK] struct .
 21146 ;;  bexp            1  [STACK] unsigned char 
 21147 ;;  aexp            1  [STACK] unsigned char 
 21148 ;;  sign            1  [STACK] unsigned char 
 21149 ;; Return value:  Size  Location     Type
 21150 ;;                  4  [STACK] unsigned char 
 21151 ;; Registers used:
 21152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21153 ;; Tracked objects:
 21154 ;;		On entry : 0/39
 21155 ;;		On exit  : 0/0
 21156 ;;		Unchanged: 0/0
 21157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21162 ;;Total ram usage:        0 bytes
 21163 ;; Hardware stack levels used:    1
 21164 ;; Hardware stack levels required when called:    6
 21165 ;; This function calls:
 21166 ;;		Nothing
 21167 ;; This function is called by:
 21168 ;;		_conv_raw_result
 21169 ;;		_lp_filter
 21170 ;;		_calc_model_data
 21171 ;;		_efgtoa
 21172 ;; This function uses a reentrant model
 21173 ;;
 21174                           
 21175                           	psect	text89
 21176  011D82                     __ptext89:
 21177                           	opt callstack 0
 21178  011D82                     ___flmul:
 21179                           	opt callstack 0
 21180                           
 21181                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21182  011D82  0E0D               	movlw	13
 21183  011D84  26E1               	addwf	fsr1l,f,c
 21184  011D86  0E00               	movlw	0
 21185  011D88  22E2               	addwfc	fsr1h,f,c
 21186                           
 21187                           ;stkvar	_b @ sp[(-13)+-4]
 21188                           
 21189                           ;incstack = 0
 21190  011D8A  0EF2               	movlw	242
 21191  011D8C  24E1               	addwf	fsr1l,w,c
 21192  011D8E  6ED9               	movwf	fsr2l,c
 21193  011D90  0EFF               	movlw	255
 21194  011D92  20E2               	addwfc	fsr1h,w,c
 21195  011D94  6EDA               	movwf	fsr2h,c
 21196  011D96  50DF               	movf	indf2,w,c
 21197  011D98  6E3D               	movwf	(btemp+11)^0,c
 21198  011D9A  0E80               	movlw	128
 21199  011D9C  163D               	andwf	(btemp+11)^0,f,c
 21200                           
 21201                           ;stkvar	_sign @ sp[(-13)+12]
 21202  011D9E  0EFF               	movlw	-1
 21203  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21204                           
 21205                           ;stkvar	_b @ sp[(-13)+-4]
 21206  011DA6  0EF2               	movlw	242
 21207  011DA8  24E1               	addwf	fsr1l,w,c
 21208  011DAA  6ED9               	movwf	fsr2l,c
 21209  011DAC  0EFF               	movlw	255
 21210  011DAE  20E2               	addwfc	fsr1h,w,c
 21211  011DB0  6EDA               	movwf	fsr2h,c
 21212  011DB2  50DF               	movf	indf2,w,c
 21213  011DB4  6E3D               	movwf	(btemp+11)^0,c
 21214  011DB6  90D8               	bcf	status,0,c
 21215  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 21216  011DBA  6E3C               	movwf	(btemp+10)^0,c
 21217                           
 21218                           ;stkvar	_bexp @ sp[(-13)+10]
 21219  011DBC  0EFD               	movlw	-3
 21220  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21221                           
 21222                           ;stkvar	_b @ sp[(-13)+-4]
 21223  011DC4  0EF1               	movlw	241
 21224  011DC6  24E1               	addwf	fsr1l,w,c
 21225  011DC8  6ED9               	movwf	fsr2l,c
 21226  011DCA  0EFF               	movlw	255
 21227  011DCC  20E2               	addwfc	fsr1h,w,c
 21228  011DCE  6EDA               	movwf	fsr2h,c
 21229  011DD0  AEDF               	btfss	indf2,7,c
 21230  011DD2  D002               	goto	l6879
 21231                           
 21232                           ;stkvar	_bexp @ sp[(-13)+10]
 21233  011DD4  0EFD               	movlw	-3
 21234  011DD6  80E3               	bsf	plusw1,0,c
 21235  011DD8                     l6879:
 21236                           
 21237                           ;stkvar	_bexp @ sp[(-13)+10]
 21238  011DD8  0EFD               	movlw	-3
 21239  011DDA  50E3               	movf	plusw1,w,c
 21240  011DDC  B4D8               	btfsc	status,2,c
 21241  011DDE  D01F               	goto	l6887
 21242                           
 21243                           ;stkvar	_bexp @ sp[(-13)+10]
 21244  011DE0  0EFD               	movlw	-3
 21245  011DE2  28E3               	incf	plusw1,w,c
 21246  011DE4  A4D8               	btfss	status,2,c
 21247  011DE6  D018               	goto	l6885
 21248  011DE8  0E00               	movlw	0
 21249  011DEA  6E3A               	movwf	(btemp+8)^0,c
 21250  011DEC  0E00               	movlw	0
 21251  011DEE  6E3B               	movwf	(btemp+9)^0,c
 21252  011DF0  0E00               	movlw	0
 21253  011DF2  6E3C               	movwf	(btemp+10)^0,c
 21254  011DF4  0E00               	movlw	0
 21255  011DF6  6E3D               	movwf	(btemp+11)^0,c
 21256                           
 21257                           ;stkvar	_b @ sp[(-13)+-4]
 21258  011DF8  0EEF               	movlw	-17
 21259  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21260  011E00  0EF0               	movlw	-16
 21261  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21262  011E08  0EF1               	movlw	-15
 21263  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21264  011E10  0EF2               	movlw	-14
 21265  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21266  011E18                     l6885:
 21267                           
 21268                           ;stkvar	_b @ sp[(-13)+-4]
 21269  011E18  0EF1               	movlw	-15
 21270  011E1A  8EE3               	bsf	plusw1,7,c
 21271  011E1C  D018               	goto	l6889
 21272  011E1E                     l6887:
 21273  011E1E  0E00               	movlw	0
 21274  011E20  6E3A               	movwf	(btemp+8)^0,c
 21275  011E22  0E00               	movlw	0
 21276  011E24  6E3B               	movwf	(btemp+9)^0,c
 21277  011E26  0E00               	movlw	0
 21278  011E28  6E3C               	movwf	(btemp+10)^0,c
 21279  011E2A  0E00               	movlw	0
 21280  011E2C  6E3D               	movwf	(btemp+11)^0,c
 21281                           
 21282                           ;stkvar	_b @ sp[(-13)+-4]
 21283  011E2E  0EEF               	movlw	-17
 21284  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21285  011E36  0EF0               	movlw	-16
 21286  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21287  011E3E  0EF1               	movlw	-15
 21288  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21289  011E46  0EF2               	movlw	-14
 21290  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21291  011E4E                     l6889:
 21292                           
 21293                           ;stkvar	_a @ sp[(-13)+-8]
 21294  011E4E  0EEE               	movlw	238
 21295  011E50  24E1               	addwf	fsr1l,w,c
 21296  011E52  6ED9               	movwf	fsr2l,c
 21297  011E54  0EFF               	movlw	255
 21298  011E56  20E2               	addwfc	fsr1h,w,c
 21299  011E58  6EDA               	movwf	fsr2h,c
 21300  011E5A  50DF               	movf	indf2,w,c
 21301  011E5C  6E3D               	movwf	(btemp+11)^0,c
 21302  011E5E  0E80               	movlw	128
 21303  011E60  163D               	andwf	(btemp+11)^0,f,c
 21304                           
 21305                           ;stkvar	_sign @ sp[(-13)+12]
 21306  011E62  50E1               	movf	fsr1l,w,c
 21307  011E64  0FFF               	addlw	-1
 21308  011E66  6ED9               	movwf	fsr2l,c
 21309  011E68  50E2               	movf	fsr1h,w,c
 21310  011E6A  6EDA               	movwf	fsr2h,c
 21311  011E6C  0EFF               	movlw	255
 21312  011E6E  22DA               	addwfc	fsr2h,f,c
 21313  011E70  503D               	movf	(btemp+11)^0,w,c
 21314  011E72  1ADF               	xorwf	indf2,f,c
 21315                           
 21316                           ;stkvar	_a @ sp[(-13)+-8]
 21317  011E74  0EEE               	movlw	238
 21318  011E76  24E1               	addwf	fsr1l,w,c
 21319  011E78  6ED9               	movwf	fsr2l,c
 21320  011E7A  0EFF               	movlw	255
 21321  011E7C  20E2               	addwfc	fsr1h,w,c
 21322  011E7E  6EDA               	movwf	fsr2h,c
 21323  011E80  50DF               	movf	indf2,w,c
 21324  011E82  6E3D               	movwf	(btemp+11)^0,c
 21325  011E84  90D8               	bcf	status,0,c
 21326  011E86  343D               	rlcf	(btemp+11)^0,w,c
 21327  011E88  6E3C               	movwf	(btemp+10)^0,c
 21328                           
 21329                           ;stkvar	_aexp @ sp[(-13)+11]
 21330  011E8A  0EFE               	movlw	-2
 21331  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21332                           
 21333                           ;stkvar	_a @ sp[(-13)+-8]
 21334  011E92  0EED               	movlw	237
 21335  011E94  24E1               	addwf	fsr1l,w,c
 21336  011E96  6ED9               	movwf	fsr2l,c
 21337  011E98  0EFF               	movlw	255
 21338  011E9A  20E2               	addwfc	fsr1h,w,c
 21339  011E9C  6EDA               	movwf	fsr2h,c
 21340  011E9E  AEDF               	btfss	indf2,7,c
 21341  011EA0  D002               	goto	l6897
 21342                           
 21343                           ;stkvar	_aexp @ sp[(-13)+11]
 21344  011EA2  0EFE               	movlw	-2
 21345  011EA4  80E3               	bsf	plusw1,0,c
 21346  011EA6                     l6897:
 21347                           
 21348                           ;stkvar	_aexp @ sp[(-13)+11]
 21349  011EA6  0EFE               	movlw	-2
 21350  011EA8  50E3               	movf	plusw1,w,c
 21351  011EAA  B4D8               	btfsc	status,2,c
 21352  011EAC  D01F               	goto	l6905
 21353                           
 21354                           ;stkvar	_aexp @ sp[(-13)+11]
 21355  011EAE  0EFE               	movlw	-2
 21356  011EB0  28E3               	incf	plusw1,w,c
 21357  011EB2  A4D8               	btfss	status,2,c
 21358  011EB4  D018               	goto	l6903
 21359  011EB6  0E00               	movlw	0
 21360  011EB8  6E3A               	movwf	(btemp+8)^0,c
 21361  011EBA  0E00               	movlw	0
 21362  011EBC  6E3B               	movwf	(btemp+9)^0,c
 21363  011EBE  0E00               	movlw	0
 21364  011EC0  6E3C               	movwf	(btemp+10)^0,c
 21365  011EC2  0E00               	movlw	0
 21366  011EC4  6E3D               	movwf	(btemp+11)^0,c
 21367                           
 21368                           ;stkvar	_a @ sp[(-13)+-8]
 21369  011EC6  0EEB               	movlw	-21
 21370  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21371  011ECE  0EEC               	movlw	-20
 21372  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21373  011ED6  0EED               	movlw	-19
 21374  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21375  011EDE  0EEE               	movlw	-18
 21376  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21377  011EE6                     l6903:
 21378                           
 21379                           ;stkvar	_a @ sp[(-13)+-8]
 21380  011EE6  0EED               	movlw	-19
 21381  011EE8  8EE3               	bsf	plusw1,7,c
 21382  011EEA  D018               	goto	l6907
 21383  011EEC                     l6905:
 21384  011EEC  0E00               	movlw	0
 21385  011EEE  6E3A               	movwf	(btemp+8)^0,c
 21386  011EF0  0E00               	movlw	0
 21387  011EF2  6E3B               	movwf	(btemp+9)^0,c
 21388  011EF4  0E00               	movlw	0
 21389  011EF6  6E3C               	movwf	(btemp+10)^0,c
 21390  011EF8  0E00               	movlw	0
 21391  011EFA  6E3D               	movwf	(btemp+11)^0,c
 21392                           
 21393                           ;stkvar	_a @ sp[(-13)+-8]
 21394  011EFC  0EEB               	movlw	-21
 21395  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21396  011F04  0EEC               	movlw	-20
 21397  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21398  011F0C  0EED               	movlw	-19
 21399  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21400  011F14  0EEE               	movlw	-18
 21401  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21402  011F1C                     l6907:
 21403                           
 21404                           ;stkvar	_aexp @ sp[(-13)+11]
 21405  011F1C  0EFE               	movlw	-2
 21406  011F1E  50E3               	movf	plusw1,w,c
 21407  011F20  B4D8               	btfsc	status,2,c
 21408  011F22  D004               	goto	u5910
 21409                           
 21410                           ;stkvar	_bexp @ sp[(-13)+10]
 21411  011F24  0EFD               	movlw	-3
 21412  011F26  50E3               	movf	plusw1,w,c
 21413  011F28  A4D8               	btfss	status,2,c
 21414  011F2A  D009               	goto	l6915
 21415  011F2C                     u5910:
 21416  011F2C  0E00               	movlw	0
 21417  011F2E  6E32               	movwf	btemp^0,c
 21418  011F30  0E00               	movlw	0
 21419  011F32  6E33               	movwf	(btemp+1)^0,c
 21420  011F34  0E00               	movlw	0
 21421  011F36  6E34               	movwf	(btemp+2)^0,c
 21422  011F38  0E00               	movlw	0
 21423  011F3A  6E35               	movwf	(btemp+3)^0,c
 21424  011F3C  D332               	goto	l2696
 21425  011F3E                     l6915:
 21426                           
 21427                           ;stkvar	_b @ sp[(-13)+-4]
 21428  011F3E  0EEF               	movlw	-17
 21429  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 21430                           
 21431                           ;stkvar	_a @ sp[(-13)+-8]
 21432  011F46  0EED               	movlw	237
 21433  011F48  24E1               	addwf	fsr1l,w,c
 21434  011F4A  6ED9               	movwf	fsr2l,c
 21435  011F4C  0EFF               	movlw	255
 21436  011F4E  20E2               	addwfc	fsr1h,w,c
 21437  011F50  6EDA               	movwf	fsr2h,c
 21438  011F52  50DF               	movf	indf2,w,c
 21439  011F54  023D               	mulwf	(btemp+11)^0,c
 21440                           
 21441                           ;stkvar	_temp @ sp[(-13)+8]
 21442  011F56  0EFB               	movlw	-5
 21443  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 21444  011F5E  0EFC               	movlw	-4
 21445  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 21446                           
 21447                           ;stkvar	_temp @ sp[(-13)+8]
 21448  011F66  0EFB               	movlw	-5
 21449  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 21450  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21451  011F74  6A37               	clrf	(btemp+5)^0,c
 21452  011F76  6A38               	clrf	(btemp+6)^0,c
 21453  011F78  6A39               	clrf	(btemp+7)^0,c
 21454                           
 21455                           ;stkvar	_grs @ sp[(-13)+4]
 21456  011F7A  0EF7               	movlw	-9
 21457  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21458  011F82  0EF8               	movlw	-8
 21459  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21460  011F8A  0EF9               	movlw	-7
 21461  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21462  011F92  0EFA               	movlw	-6
 21463  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21464                           
 21465                           ;stkvar	_temp @ sp[(-13)+8]
 21466  011F9A  0EFC               	movlw	252
 21467  011F9C  24E1               	addwf	fsr1l,w,c
 21468  011F9E  6ED9               	movwf	fsr2l,c
 21469  011FA0  0EFF               	movlw	255
 21470  011FA2  20E2               	addwfc	fsr1h,w,c
 21471  011FA4  6EDA               	movwf	fsr2h,c
 21472  011FA6  50DF               	movf	indf2,w,c
 21473  011FA8  6E3D               	movwf	(btemp+11)^0,c
 21474  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21475  011FB0  6A37               	clrf	(btemp+5)^0,c
 21476  011FB2  6A38               	clrf	(btemp+6)^0,c
 21477  011FB4  6A39               	clrf	(btemp+7)^0,c
 21478                           
 21479                           ;stkvar	_prod @ sp[(-13)+0]
 21480  011FB6  0EF3               	movlw	-13
 21481  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21482  011FBE  0EF4               	movlw	-12
 21483  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21484  011FC6  0EF5               	movlw	-11
 21485  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21486  011FCE  0EF6               	movlw	-10
 21487  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21488                           
 21489                           ;stkvar	_b @ sp[(-13)+-4]
 21490  011FD6  0EF0               	movlw	240
 21491  011FD8  24E1               	addwf	fsr1l,w,c
 21492  011FDA  6ED9               	movwf	fsr2l,c
 21493  011FDC  0EFF               	movlw	255
 21494  011FDE  20E2               	addwfc	fsr1h,w,c
 21495  011FE0  6EDA               	movwf	fsr2h,c
 21496  011FE2  50DF               	movf	indf2,w,c
 21497  011FE4  6E3D               	movwf	(btemp+11)^0,c
 21498                           
 21499                           ;stkvar	_a @ sp[(-13)+-8]
 21500  011FE6  0EEC               	movlw	236
 21501  011FE8  24E1               	addwf	fsr1l,w,c
 21502  011FEA  6ED9               	movwf	fsr2l,c
 21503  011FEC  0EFF               	movlw	255
 21504  011FEE  20E2               	addwfc	fsr1h,w,c
 21505  011FF0  6EDA               	movwf	fsr2h,c
 21506  011FF2  50DF               	movf	indf2,w,c
 21507  011FF4  023D               	mulwf	(btemp+11)^0,c
 21508                           
 21509                           ;stkvar	_temp @ sp[(-13)+8]
 21510  011FF6  0EFB               	movlw	-5
 21511  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 21512  011FFE  0EFC               	movlw	-4
 21513  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 21514                           
 21515                           ;stkvar	_grs @ sp[(-13)+4]
 21516  012006  50E1               	movf	fsr1l,w,c
 21517  012008  0FF7               	addlw	-9
 21518  01200A  6ED9               	movwf	fsr2l,c
 21519  01200C  50E2               	movf	fsr1h,w,c
 21520  01200E  6EDA               	movwf	fsr2h,c
 21521  012010  0EFF               	movlw	255
 21522  012012  22DA               	addwfc	fsr2h,f,c
 21523                           
 21524                           ;stkvar	_temp @ sp[(-13)+8]
 21525  012014  0EFB               	movlw	-5
 21526  012016  50E3               	movf	plusw1,w,c
 21527  012018  26DE               	addwf	postinc2,f,c
 21528  01201A  0E00               	movlw	0
 21529  01201C  22DE               	addwfc	postinc2,f,c
 21530  01201E  22DE               	addwfc	postinc2,f,c
 21531  012020  22DE               	addwfc	postinc2,f,c
 21532                           
 21533                           ;stkvar	_prod @ sp[(-13)+0]
 21534  012022  50E1               	movf	fsr1l,w,c
 21535  012024  0FF3               	addlw	-13
 21536  012026  6ED9               	movwf	fsr2l,c
 21537  012028  50E2               	movf	fsr1h,w,c
 21538  01202A  6EDA               	movwf	fsr2h,c
 21539  01202C  0EFF               	movlw	255
 21540  01202E  22DA               	addwfc	fsr2h,f,c
 21541                           
 21542                           ;stkvar	_temp @ sp[(-13)+8]
 21543  012030  0EFC               	movlw	252
 21544  012032  24E1               	addwf	fsr1l,w,c
 21545  012034  6EE9               	movwf	fsr0l,c
 21546  012036  0EFF               	movlw	255
 21547  012038  20E2               	addwfc	fsr1h,w,c
 21548  01203A  6EEA               	movwf	fsr0h,c
 21549  01203C  50EF               	movf	indf0,w,c
 21550  01203E  26DE               	addwf	postinc2,f,c
 21551  012040  0E00               	movlw	0
 21552  012042  22DE               	addwfc	postinc2,f,c
 21553  012044  22DE               	addwfc	postinc2,f,c
 21554  012046  22DE               	addwfc	postinc2,f,c
 21555                           
 21556                           ;stkvar	_b @ sp[(-13)+-4]
 21557  012048  0EF1               	movlw	241
 21558  01204A  24E1               	addwf	fsr1l,w,c
 21559  01204C  6ED9               	movwf	fsr2l,c
 21560  01204E  0EFF               	movlw	255
 21561  012050  20E2               	addwfc	fsr1h,w,c
 21562  012052  6EDA               	movwf	fsr2h,c
 21563  012054  50DF               	movf	indf2,w,c
 21564  012056  6E3D               	movwf	(btemp+11)^0,c
 21565                           
 21566                           ;stkvar	_a @ sp[(-13)+-8]
 21567  012058  0EEB               	movlw	-21
 21568  01205A  50E3               	movf	plusw1,w,c
 21569  01205C  023D               	mulwf	(btemp+11)^0,c
 21570                           
 21571                           ;stkvar	_temp @ sp[(-13)+8]
 21572  01205E  0EFB               	movlw	-5
 21573  012060  006F FFCF FFE3     	movff	prodl,plusw1
 21574  012066  0EFC               	movlw	-4
 21575  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 21576                           
 21577                           ;stkvar	_grs @ sp[(-13)+4]
 21578  01206E  50E1               	movf	fsr1l,w,c
 21579  012070  0FF7               	addlw	-9
 21580  012072  6ED9               	movwf	fsr2l,c
 21581  012074  50E2               	movf	fsr1h,w,c
 21582  012076  6EDA               	movwf	fsr2h,c
 21583  012078  0EFF               	movlw	255
 21584  01207A  22DA               	addwfc	fsr2h,f,c
 21585                           
 21586                           ;stkvar	_temp @ sp[(-13)+8]
 21587  01207C  0EFB               	movlw	-5
 21588  01207E  50E3               	movf	plusw1,w,c
 21589  012080  26DE               	addwf	postinc2,f,c
 21590  012082  0E00               	movlw	0
 21591  012084  22DE               	addwfc	postinc2,f,c
 21592  012086  22DE               	addwfc	postinc2,f,c
 21593  012088  22DE               	addwfc	postinc2,f,c
 21594                           
 21595                           ;stkvar	_prod @ sp[(-13)+0]
 21596  01208A  50E1               	movf	fsr1l,w,c
 21597  01208C  0FF3               	addlw	-13
 21598  01208E  6ED9               	movwf	fsr2l,c
 21599  012090  50E2               	movf	fsr1h,w,c
 21600  012092  6EDA               	movwf	fsr2h,c
 21601  012094  0EFF               	movlw	255
 21602  012096  22DA               	addwfc	fsr2h,f,c
 21603                           
 21604                           ;stkvar	_temp @ sp[(-13)+8]
 21605  012098  0EFC               	movlw	252
 21606  01209A  24E1               	addwf	fsr1l,w,c
 21607  01209C  6EE9               	movwf	fsr0l,c
 21608  01209E  0EFF               	movlw	255
 21609  0120A0  20E2               	addwfc	fsr1h,w,c
 21610  0120A2  6EEA               	movwf	fsr0h,c
 21611  0120A4  50EF               	movf	indf0,w,c
 21612  0120A6  26DE               	addwf	postinc2,f,c
 21613  0120A8  0E00               	movlw	0
 21614  0120AA  22DE               	addwfc	postinc2,f,c
 21615  0120AC  22DE               	addwfc	postinc2,f,c
 21616  0120AE  22DE               	addwfc	postinc2,f,c
 21617                           
 21618                           ;stkvar	_grs @ sp[(-13)+4]
 21619  0120B0  50E1               	movf	fsr1l,w,c
 21620  0120B2  0FF7               	addlw	-9
 21621  0120B4  6ED9               	movwf	fsr2l,c
 21622  0120B6  50E2               	movf	fsr1h,w,c
 21623  0120B8  6EDA               	movwf	fsr2h,c
 21624  0120BA  0EFF               	movlw	255
 21625  0120BC  22DA               	addwfc	fsr2h,f,c
 21626  0120BE  0E08               	movlw	8
 21627  0120C0                     u5925:
 21628  0120C0  90D8               	bcf	status,0,c
 21629  0120C2  36DE               	rlcf	postinc2,f,c
 21630  0120C4  36DE               	rlcf	postinc2,f,c
 21631  0120C6  36DE               	rlcf	postinc2,f,c
 21632  0120C8  36DD               	rlcf	postdec2,f,c
 21633  0120CA  52DD               	movf	postdec2,f,c
 21634  0120CC  52DD               	movf	postdec2,f,c
 21635  0120CE  2EE8               	decfsz	wreg,f,c
 21636  0120D0  D7F7               	goto	u5925
 21637                           
 21638                           ;stkvar	_b @ sp[(-13)+-4]
 21639  0120D2  0EF0               	movlw	240
 21640  0120D4  24E1               	addwf	fsr1l,w,c
 21641  0120D6  6ED9               	movwf	fsr2l,c
 21642  0120D8  0EFF               	movlw	255
 21643  0120DA  20E2               	addwfc	fsr1h,w,c
 21644  0120DC  6EDA               	movwf	fsr2h,c
 21645  0120DE  50DF               	movf	indf2,w,c
 21646  0120E0  6E3D               	movwf	(btemp+11)^0,c
 21647                           
 21648                           ;stkvar	_a @ sp[(-13)+-8]
 21649  0120E2  0EEB               	movlw	-21
 21650  0120E4  50E3               	movf	plusw1,w,c
 21651  0120E6  023D               	mulwf	(btemp+11)^0,c
 21652                           
 21653                           ;stkvar	_temp @ sp[(-13)+8]
 21654  0120E8  0EFB               	movlw	-5
 21655  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 21656  0120F0  0EFC               	movlw	-4
 21657  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 21658                           
 21659                           ;stkvar	_temp @ sp[(-13)+8]
 21660  0120F8  0EFB               	movlw	-5
 21661  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21662  012100  0EFC               	movlw	-4
 21663  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 21664                           
 21665                           ;stkvar	_grs @ sp[(-13)+4]
 21666  012108  50E1               	movf	fsr1l,w,c
 21667  01210A  0FF7               	addlw	-9
 21668  01210C  6ED9               	movwf	fsr2l,c
 21669  01210E  50E2               	movf	fsr1h,w,c
 21670  012110  6EDA               	movwf	fsr2h,c
 21671  012112  0EFF               	movlw	255
 21672  012114  22DA               	addwfc	fsr2h,f,c
 21673  012116  503C               	movf	(btemp+10)^0,w,c
 21674  012118  26DE               	addwf	postinc2,f,c
 21675  01211A  503D               	movf	(btemp+11)^0,w,c
 21676  01211C  22DE               	addwfc	postinc2,f,c
 21677  01211E  0E00               	movlw	0
 21678  012120  22DE               	addwfc	postinc2,f,c
 21679  012122  22DE               	addwfc	postinc2,f,c
 21680                           
 21681                           ;stkvar	_b @ sp[(-13)+-4]
 21682  012124  0EEF               	movlw	-17
 21683  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 21684                           
 21685                           ;stkvar	_a @ sp[(-13)+-8]
 21686  01212C  0EEC               	movlw	236
 21687  01212E  24E1               	addwf	fsr1l,w,c
 21688  012130  6ED9               	movwf	fsr2l,c
 21689  012132  0EFF               	movlw	255
 21690  012134  20E2               	addwfc	fsr1h,w,c
 21691  012136  6EDA               	movwf	fsr2h,c
 21692  012138  50DF               	movf	indf2,w,c
 21693  01213A  023D               	mulwf	(btemp+11)^0,c
 21694                           
 21695                           ;stkvar	_temp @ sp[(-13)+8]
 21696  01213C  0EFB               	movlw	-5
 21697  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 21698  012144  0EFC               	movlw	-4
 21699  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 21700                           
 21701                           ;stkvar	_temp @ sp[(-13)+8]
 21702  01214C  0EFB               	movlw	-5
 21703  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 21704  012154  0EFC               	movlw	-4
 21705  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 21706                           
 21707                           ;stkvar	_grs @ sp[(-13)+4]
 21708  01215C  50E1               	movf	fsr1l,w,c
 21709  01215E  0FF7               	addlw	-9
 21710  012160  6ED9               	movwf	fsr2l,c
 21711  012162  50E2               	movf	fsr1h,w,c
 21712  012164  6EDA               	movwf	fsr2h,c
 21713  012166  0EFF               	movlw	255
 21714  012168  22DA               	addwfc	fsr2h,f,c
 21715  01216A  503C               	movf	(btemp+10)^0,w,c
 21716  01216C  26DE               	addwf	postinc2,f,c
 21717  01216E  503D               	movf	(btemp+11)^0,w,c
 21718  012170  22DE               	addwfc	postinc2,f,c
 21719  012172  0E00               	movlw	0
 21720  012174  22DE               	addwfc	postinc2,f,c
 21721  012176  22DE               	addwfc	postinc2,f,c
 21722                           
 21723                           ;stkvar	_grs @ sp[(-13)+4]
 21724  012178  50E1               	movf	fsr1l,w,c
 21725  01217A  0FF7               	addlw	-9
 21726  01217C  6ED9               	movwf	fsr2l,c
 21727  01217E  50E2               	movf	fsr1h,w,c
 21728  012180  6EDA               	movwf	fsr2h,c
 21729  012182  0EFF               	movlw	255
 21730  012184  22DA               	addwfc	fsr2h,f,c
 21731  012186  0E08               	movlw	8
 21732  012188                     u5935:
 21733  012188  90D8               	bcf	status,0,c
 21734  01218A  36DE               	rlcf	postinc2,f,c
 21735  01218C  36DE               	rlcf	postinc2,f,c
 21736  01218E  36DE               	rlcf	postinc2,f,c
 21737  012190  36DD               	rlcf	postdec2,f,c
 21738  012192  52DD               	movf	postdec2,f,c
 21739  012194  52DD               	movf	postdec2,f,c
 21740  012196  2EE8               	decfsz	wreg,f,c
 21741  012198  D7F7               	goto	u5935
 21742                           
 21743                           ;stkvar	_b @ sp[(-13)+-4]
 21744  01219A  0EEF               	movlw	-17
 21745  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21746                           
 21747                           ;stkvar	_a @ sp[(-13)+-8]
 21748  0121A2  0EEB               	movlw	-21
 21749  0121A4  50E3               	movf	plusw1,w,c
 21750  0121A6  023D               	mulwf	(btemp+11)^0,c
 21751                           
 21752                           ;stkvar	_temp @ sp[(-13)+8]
 21753  0121A8  0EFB               	movlw	-5
 21754  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 21755  0121B0  0EFC               	movlw	-4
 21756  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 21757                           
 21758                           ;stkvar	_temp @ sp[(-13)+8]
 21759  0121B8  0EFB               	movlw	-5
 21760  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21761  0121C0  0EFC               	movlw	-4
 21762  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 21763                           
 21764                           ;stkvar	_grs @ sp[(-13)+4]
 21765  0121C8  50E1               	movf	fsr1l,w,c
 21766  0121CA  0FF7               	addlw	-9
 21767  0121CC  6ED9               	movwf	fsr2l,c
 21768  0121CE  50E2               	movf	fsr1h,w,c
 21769  0121D0  6EDA               	movwf	fsr2h,c
 21770  0121D2  0EFF               	movlw	255
 21771  0121D4  22DA               	addwfc	fsr2h,f,c
 21772  0121D6  503C               	movf	(btemp+10)^0,w,c
 21773  0121D8  26DE               	addwf	postinc2,f,c
 21774  0121DA  503D               	movf	(btemp+11)^0,w,c
 21775  0121DC  22DE               	addwfc	postinc2,f,c
 21776  0121DE  0E00               	movlw	0
 21777  0121E0  22DE               	addwfc	postinc2,f,c
 21778  0121E2  22DE               	addwfc	postinc2,f,c
 21779                           
 21780                           ;stkvar	_b @ sp[(-13)+-4]
 21781  0121E4  0EF0               	movlw	240
 21782  0121E6  24E1               	addwf	fsr1l,w,c
 21783  0121E8  6ED9               	movwf	fsr2l,c
 21784  0121EA  0EFF               	movlw	255
 21785  0121EC  20E2               	addwfc	fsr1h,w,c
 21786  0121EE  6EDA               	movwf	fsr2h,c
 21787  0121F0  50DF               	movf	indf2,w,c
 21788  0121F2  6E3D               	movwf	(btemp+11)^0,c
 21789                           
 21790                           ;stkvar	_a @ sp[(-13)+-8]
 21791  0121F4  0EED               	movlw	237
 21792  0121F6  24E1               	addwf	fsr1l,w,c
 21793  0121F8  6ED9               	movwf	fsr2l,c
 21794  0121FA  0EFF               	movlw	255
 21795  0121FC  20E2               	addwfc	fsr1h,w,c
 21796  0121FE  6EDA               	movwf	fsr2h,c
 21797  012200  50DF               	movf	indf2,w,c
 21798  012202  023D               	mulwf	(btemp+11)^0,c
 21799                           
 21800                           ;stkvar	_temp @ sp[(-13)+8]
 21801  012204  0EFB               	movlw	-5
 21802  012206  006F FFCF FFE3     	movff	prodl,plusw1
 21803  01220C  0EFC               	movlw	-4
 21804  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 21805                           
 21806                           ;stkvar	_temp @ sp[(-13)+8]
 21807  012214  0EFB               	movlw	-5
 21808  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 21809  01221C  0EFC               	movlw	-4
 21810  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21811                           
 21812                           ;stkvar	_prod @ sp[(-13)+0]
 21813  012224  50E1               	movf	fsr1l,w,c
 21814  012226  0FF3               	addlw	-13
 21815  012228  6ED9               	movwf	fsr2l,c
 21816  01222A  50E2               	movf	fsr1h,w,c
 21817  01222C  6EDA               	movwf	fsr2h,c
 21818  01222E  0EFF               	movlw	255
 21819  012230  22DA               	addwfc	fsr2h,f,c
 21820  012232  503C               	movf	(btemp+10)^0,w,c
 21821  012234  26DE               	addwf	postinc2,f,c
 21822  012236  503D               	movf	(btemp+11)^0,w,c
 21823  012238  22DE               	addwfc	postinc2,f,c
 21824  01223A  0E00               	movlw	0
 21825  01223C  22DE               	addwfc	postinc2,f,c
 21826  01223E  22DE               	addwfc	postinc2,f,c
 21827                           
 21828                           ;stkvar	_b @ sp[(-13)+-4]
 21829  012240  0EF1               	movlw	241
 21830  012242  24E1               	addwf	fsr1l,w,c
 21831  012244  6ED9               	movwf	fsr2l,c
 21832  012246  0EFF               	movlw	255
 21833  012248  20E2               	addwfc	fsr1h,w,c
 21834  01224A  6EDA               	movwf	fsr2h,c
 21835  01224C  50DF               	movf	indf2,w,c
 21836  01224E  6E3D               	movwf	(btemp+11)^0,c
 21837                           
 21838                           ;stkvar	_a @ sp[(-13)+-8]
 21839  012250  0EEC               	movlw	236
 21840  012252  24E1               	addwf	fsr1l,w,c
 21841  012254  6ED9               	movwf	fsr2l,c
 21842  012256  0EFF               	movlw	255
 21843  012258  20E2               	addwfc	fsr1h,w,c
 21844  01225A  6EDA               	movwf	fsr2h,c
 21845  01225C  50DF               	movf	indf2,w,c
 21846  01225E  023D               	mulwf	(btemp+11)^0,c
 21847                           
 21848                           ;stkvar	_temp @ sp[(-13)+8]
 21849  012260  0EFB               	movlw	-5
 21850  012262  006F FFCF FFE3     	movff	prodl,plusw1
 21851  012268  0EFC               	movlw	-4
 21852  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 21853                           
 21854                           ;stkvar	_temp @ sp[(-13)+8]
 21855  012270  0EFB               	movlw	-5
 21856  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 21857  012278  0EFC               	movlw	-4
 21858  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 21859                           
 21860                           ;stkvar	_prod @ sp[(-13)+0]
 21861  012280  50E1               	movf	fsr1l,w,c
 21862  012282  0FF3               	addlw	-13
 21863  012284  6ED9               	movwf	fsr2l,c
 21864  012286  50E2               	movf	fsr1h,w,c
 21865  012288  6EDA               	movwf	fsr2h,c
 21866  01228A  0EFF               	movlw	255
 21867  01228C  22DA               	addwfc	fsr2h,f,c
 21868  01228E  503C               	movf	(btemp+10)^0,w,c
 21869  012290  26DE               	addwf	postinc2,f,c
 21870  012292  503D               	movf	(btemp+11)^0,w,c
 21871  012294  22DE               	addwfc	postinc2,f,c
 21872  012296  0E00               	movlw	0
 21873  012298  22DE               	addwfc	postinc2,f,c
 21874  01229A  22DE               	addwfc	postinc2,f,c
 21875                           
 21876                           ;stkvar	_b @ sp[(-13)+-4]
 21877  01229C  0EF1               	movlw	241
 21878  01229E  24E1               	addwf	fsr1l,w,c
 21879  0122A0  6ED9               	movwf	fsr2l,c
 21880  0122A2  0EFF               	movlw	255
 21881  0122A4  20E2               	addwfc	fsr1h,w,c
 21882  0122A6  6EDA               	movwf	fsr2h,c
 21883  0122A8  50DF               	movf	indf2,w,c
 21884  0122AA  6E3D               	movwf	(btemp+11)^0,c
 21885                           
 21886                           ;stkvar	_a @ sp[(-13)+-8]
 21887  0122AC  0EED               	movlw	237
 21888  0122AE  24E1               	addwf	fsr1l,w,c
 21889  0122B0  6ED9               	movwf	fsr2l,c
 21890  0122B2  0EFF               	movlw	255
 21891  0122B4  20E2               	addwfc	fsr1h,w,c
 21892  0122B6  6EDA               	movwf	fsr2h,c
 21893  0122B8  50DF               	movf	indf2,w,c
 21894  0122BA  023D               	mulwf	(btemp+11)^0,c
 21895                           
 21896                           ;stkvar	_temp @ sp[(-13)+8]
 21897  0122BC  0EFB               	movlw	-5
 21898  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 21899  0122C4  0EFC               	movlw	-4
 21900  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 21901                           
 21902                           ;stkvar	_temp @ sp[(-13)+8]
 21903  0122CC  0EFB               	movlw	-5
 21904  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 21905  0122D4  0EFC               	movlw	-4
 21906  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 21907  0122DC  503C               	movf	(btemp+10)^0,w,c
 21908  0122DE  6E36               	movwf	(btemp+4)^0,c
 21909  0122E0  503D               	movf	(btemp+11)^0,w,c
 21910  0122E2  6E37               	movwf	(btemp+5)^0,c
 21911  0122E4  6A38               	clrf	(btemp+6)^0,c
 21912  0122E6  6A39               	clrf	(btemp+7)^0,c
 21913  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 21914  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 21915  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 21916  0122FA  6A36               	clrf	(btemp+4)^0,c
 21917                           
 21918                           ;stkvar	_prod @ sp[(-13)+0]
 21919  0122FC  50E1               	movf	fsr1l,w,c
 21920  0122FE  0FF3               	addlw	-13
 21921  012300  6ED9               	movwf	fsr2l,c
 21922  012302  50E2               	movf	fsr1h,w,c
 21923  012304  6EDA               	movwf	fsr2h,c
 21924  012306  0EFF               	movlw	255
 21925  012308  22DA               	addwfc	fsr2h,f,c
 21926  01230A  5036               	movf	(btemp+4)^0,w,c
 21927  01230C  26DE               	addwf	postinc2,f,c
 21928  01230E  5037               	movf	(btemp+5)^0,w,c
 21929  012310  22DE               	addwfc	postinc2,f,c
 21930  012312  5038               	movf	(btemp+6)^0,w,c
 21931  012314  22DE               	addwfc	postinc2,f,c
 21932  012316  5039               	movf	(btemp+7)^0,w,c
 21933  012318  22DE               	addwfc	postinc2,f,c
 21934                           
 21935                           ;stkvar	_prod @ sp[(-13)+0]
 21936  01231A  50E1               	movf	fsr1l,w,c
 21937  01231C  0FF3               	addlw	-13
 21938  01231E  6ED9               	movwf	fsr2l,c
 21939  012320  50E2               	movf	fsr1h,w,c
 21940  012322  6EDA               	movwf	fsr2h,c
 21941  012324  0EFF               	movlw	255
 21942  012326  22DA               	addwfc	fsr2h,f,c
 21943                           
 21944                           ;stkvar	_grs @ sp[(-13)+4]
 21945  012328  0EFA               	movlw	250
 21946  01232A  24E1               	addwf	fsr1l,w,c
 21947  01232C  6EE9               	movwf	fsr0l,c
 21948  01232E  0EFF               	movlw	255
 21949  012330  20E2               	addwfc	fsr1h,w,c
 21950  012332  6EEA               	movwf	fsr0h,c
 21951  012334  50EF               	movf	indf0,w,c
 21952  012336  26DE               	addwf	postinc2,f,c
 21953  012338  0E00               	movlw	0
 21954  01233A  22DE               	addwfc	postinc2,f,c
 21955  01233C  22DE               	addwfc	postinc2,f,c
 21956  01233E  22DE               	addwfc	postinc2,f,c
 21957                           
 21958                           ;stkvar	_grs @ sp[(-13)+4]
 21959  012340  50E1               	movf	fsr1l,w,c
 21960  012342  0FF7               	addlw	-9
 21961  012344  6ED9               	movwf	fsr2l,c
 21962  012346  50E2               	movf	fsr1h,w,c
 21963  012348  6EDA               	movwf	fsr2h,c
 21964  01234A  0EFF               	movlw	255
 21965  01234C  22DA               	addwfc	fsr2h,f,c
 21966  01234E  0E08               	movlw	8
 21967  012350                     u5945:
 21968  012350  90D8               	bcf	status,0,c
 21969  012352  36DE               	rlcf	postinc2,f,c
 21970  012354  36DE               	rlcf	postinc2,f,c
 21971  012356  36DE               	rlcf	postinc2,f,c
 21972  012358  36DD               	rlcf	postdec2,f,c
 21973  01235A  52DD               	movf	postdec2,f,c
 21974  01235C  52DD               	movf	postdec2,f,c
 21975  01235E  2EE8               	decfsz	wreg,f,c
 21976  012360  D7F7               	goto	u5945
 21977  012362  0E82               	movlw	130
 21978  012364  6E3C               	movwf	(btemp+10)^0,c
 21979  012366  0EFF               	movlw	255
 21980  012368  6E3D               	movwf	(btemp+11)^0,c
 21981                           
 21982                           ;stkvar	_bexp @ sp[(-13)+10]
 21983  01236A  0EFD               	movlw	-3
 21984  01236C  50E3               	movf	plusw1,w,c
 21985  01236E  6E3A               	movwf	(btemp+8)^0,c
 21986  012370  6A3B               	clrf	(btemp+9)^0,c
 21987                           
 21988                           ;stkvar	_aexp @ sp[(-13)+11]
 21989  012372  0EFE               	movlw	-2
 21990  012374  50E3               	movf	plusw1,w,c
 21991  012376  263A               	addwf	(btemp+8)^0,f,c
 21992  012378  0E00               	movlw	0
 21993  01237A  223B               	addwfc	(btemp+9)^0,f,c
 21994  01237C  503C               	movf	(btemp+10)^0,w,c
 21995  01237E  263A               	addwf	(btemp+8)^0,f,c
 21996  012380  503D               	movf	(btemp+11)^0,w,c
 21997  012382  223B               	addwfc	(btemp+9)^0,f,c
 21998                           
 21999                           ;stkvar	_temp @ sp[(-13)+8]
 22000  012384  0EFB               	movlw	-5
 22001  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22002  01238C  0EFC               	movlw	-4
 22003  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22004  012394  D021               	goto	l6977
 22005  012396                     l6967:
 22006                           
 22007                           ;stkvar	_prod @ sp[(-13)+0]
 22008  012396  90D8               	bcf	status,0,c
 22009  012398  0EF3               	movlw	-13
 22010  01239A  36E3               	rlcf	plusw1,f,c
 22011  01239C  0EF4               	movlw	-12
 22012  01239E  36E3               	rlcf	plusw1,f,c
 22013  0123A0  0EF5               	movlw	-11
 22014  0123A2  36E3               	rlcf	plusw1,f,c
 22015  0123A4  0EF6               	movlw	-10
 22016  0123A6  36E3               	rlcf	plusw1,f,c
 22017                           
 22018                           ;stkvar	_grs @ sp[(-13)+4]
 22019  0123A8  0EFA               	movlw	-6
 22020  0123AA  AEE3               	btfss	plusw1,7,c
 22021  0123AC  D002               	goto	l6973
 22022                           
 22023                           ;stkvar	_prod @ sp[(-13)+0]
 22024  0123AE  0EF3               	movlw	-13
 22025  0123B0  80E3               	bsf	plusw1,0,c
 22026  0123B2                     l6973:
 22027                           
 22028                           ;stkvar	_grs @ sp[(-13)+4]
 22029  0123B2  90D8               	bcf	status,0,c
 22030  0123B4  0EF7               	movlw	-9
 22031  0123B6  36E3               	rlcf	plusw1,f,c
 22032  0123B8  0EF8               	movlw	-8
 22033  0123BA  36E3               	rlcf	plusw1,f,c
 22034  0123BC  0EF9               	movlw	-7
 22035  0123BE  36E3               	rlcf	plusw1,f,c
 22036  0123C0  0EFA               	movlw	-6
 22037  0123C2  36E3               	rlcf	plusw1,f,c
 22038                           
 22039                           ;stkvar	_temp @ sp[(-13)+8]
 22040  0123C4  50E1               	movf	fsr1l,w,c
 22041  0123C6  0FFB               	addlw	-5
 22042  0123C8  6ED9               	movwf	fsr2l,c
 22043  0123CA  50E2               	movf	fsr1h,w,c
 22044  0123CC  6EDA               	movwf	fsr2h,c
 22045  0123CE  0EFF               	movlw	255
 22046  0123D0  22DA               	addwfc	fsr2h,f,c
 22047  0123D2  06DE               	decf	postinc2,f,c
 22048  0123D4  0E00               	movlw	0
 22049  0123D6  5ADD               	subwfb	postdec2,f,c
 22050  0123D8                     l6977:
 22051                           
 22052                           ;stkvar	_prod @ sp[(-13)+0]
 22053  0123D8  0EF5               	movlw	-11
 22054  0123DA  AEE3               	btfss	plusw1,7,c
 22055  0123DC  D7DC               	goto	l6967
 22056                           
 22057                           ;stkvar	_aexp @ sp[(-13)+11]
 22058  0123DE  0EFE               	movlw	-2
 22059  0123E0  6AE3               	clrf	plusw1,c
 22060                           
 22061                           ;stkvar	_grs @ sp[(-13)+4]
 22062  0123E2  0EFA               	movlw	-6
 22063  0123E4  AEE3               	btfss	plusw1,7,c
 22064  0123E6  D020               	goto	l6991
 22065                           
 22066                           ;stkvar	_grs @ sp[(-13)+4]
 22067  0123E8  50E1               	movf	fsr1l,w,c
 22068  0123EA  0FF7               	addlw	-9
 22069  0123EC  6ED9               	movwf	fsr2l,c
 22070  0123EE  50E2               	movf	fsr1h,w,c
 22071  0123F0  6EDA               	movwf	fsr2h,c
 22072  0123F2  0EFF               	movlw	255
 22073  0123F4  22DA               	addwfc	fsr2h,f,c
 22074  0123F6  0EFF               	movlw	255
 22075  0123F8  14DE               	andwf	postinc2,w,c
 22076  0123FA  6E3A               	movwf	(btemp+8)^0,c
 22077  0123FC  0EFF               	movlw	255
 22078  0123FE  14DE               	andwf	postinc2,w,c
 22079  012400  6E3B               	movwf	(btemp+9)^0,c
 22080  012402  0EFF               	movlw	255
 22081  012404  14DE               	andwf	postinc2,w,c
 22082  012406  6E3C               	movwf	(btemp+10)^0,c
 22083  012408  0E7F               	movlw	127
 22084  01240A  14DE               	andwf	postinc2,w,c
 22085  01240C  6E3D               	movwf	(btemp+11)^0,c
 22086  01240E  503A               	movf	(btemp+8)^0,w,c
 22087  012410  103B               	iorwf	(btemp+9)^0,w,c
 22088  012412  103C               	iorwf	(btemp+10)^0,w,c
 22089  012414  103D               	iorwf	(btemp+11)^0,w,c
 22090  012416  B4D8               	btfsc	status,2,c
 22091  012418  D004               	goto	l6987
 22092  01241A                     u5980:
 22093                           
 22094                           ;stkvar	_aexp @ sp[(-13)+11]
 22095  01241A  0EFE               	movlw	-2
 22096  01241C  6AE3               	clrf	plusw1,c
 22097  01241E  2AE3               	incf	plusw1,f,c
 22098  012420  D003               	goto	l6991
 22099  012422                     l6987:
 22100                           
 22101                           ;stkvar	_prod @ sp[(-13)+0]
 22102  012422  0EF3               	movlw	-13
 22103  012424  B0E3               	btfsc	plusw1,0,c
 22104  012426  D7F9               	goto	u5980
 22105  012428                     l6991:
 22106                           
 22107                           ;stkvar	_aexp @ sp[(-13)+11]
 22108  012428  0EFE               	movlw	-2
 22109  01242A  50E3               	movf	plusw1,w,c
 22110  01242C  B4D8               	btfsc	status,2,c
 22111  01242E  D036               	goto	l7001
 22112                           
 22113                           ;stkvar	_prod @ sp[(-13)+0]
 22114  012430  50E1               	movf	fsr1l,w,c
 22115  012432  0FF3               	addlw	-13
 22116  012434  6ED9               	movwf	fsr2l,c
 22117  012436  50E2               	movf	fsr1h,w,c
 22118  012438  6EDA               	movwf	fsr2h,c
 22119  01243A  0EFF               	movlw	255
 22120  01243C  22DA               	addwfc	fsr2h,f,c
 22121  01243E  2ADE               	incf	postinc2,f,c
 22122  012440  0E00               	movlw	0
 22123  012442  22DE               	addwfc	postinc2,f,c
 22124  012444  22DE               	addwfc	postinc2,f,c
 22125  012446  22DE               	addwfc	postinc2,f,c
 22126                           
 22127                           ;stkvar	_prod @ sp[(-13)+0]
 22128  012448  0EF6               	movlw	-10
 22129  01244A  A0E3               	btfss	plusw1,0,c
 22130  01244C  D027               	goto	l7001
 22131  01244E  0E01               	movlw	1
 22132  012450  6E3D               	movwf	(btemp+11)^0,c
 22133                           
 22134                           ;stkvar	_prod @ sp[(-13)+0]
 22135  012452  50E1               	movf	fsr1l,w,c
 22136  012454  0FF3               	addlw	-13
 22137  012456  6ED9               	movwf	fsr2l,c
 22138  012458  50E2               	movf	fsr1h,w,c
 22139  01245A  6EDA               	movwf	fsr2h,c
 22140  01245C  0EFF               	movlw	255
 22141  01245E  22DA               	addwfc	fsr2h,f,c
 22142  012460  283D               	incf	(btemp+11)^0,w,c
 22143  012462  52DE               	movf	postinc2,f,c
 22144  012464  D008               	goto	u6020
 22145  012466                     u6025:
 22146  012466  52DE               	movf	postinc2,f,c
 22147  012468  90D8               	bcf	status,0,c
 22148  01246A  BEDC               	btfsc	preinc2,7,c
 22149  01246C  80D8               	bsf	status,0,c
 22150  01246E  32DD               	rrcf	postdec2,f,c
 22151  012470  32DD               	rrcf	postdec2,f,c
 22152  012472  32DD               	rrcf	postdec2,f,c
 22153  012474  32DE               	rrcf	postinc2,f,c
 22154  012476                     u6020:
 22155  012476  2EE8               	decfsz	wreg,f,c
 22156  012478  D7F6               	goto	u6025
 22157                           
 22158                           ;stkvar	_temp @ sp[(-13)+8]
 22159  01247A  0EFB               	movlw	-5
 22160  01247C  50E3               	movf	plusw1,w,c
 22161  01247E  0F01               	addlw	1
 22162  012480  6E32               	movwf	btemp^0,c
 22163  012482  0EFB               	movlw	-5
 22164  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 22165  01248A  6A32               	clrf	btemp^0,c
 22166  01248C  0EFC               	movlw	-4
 22167  01248E  50E3               	movf	plusw1,w,c
 22168  012490  2032               	addwfc	btemp^0,w,c
 22169  012492  6E32               	movwf	btemp^0,c
 22170  012494  0EFC               	movlw	-4
 22171  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 22172  01249C                     l7001:
 22173                           
 22174                           ;stkvar	_temp @ sp[(-13)+8]
 22175  01249C  0EFC               	movlw	-4
 22176  01249E  BEE3               	btfsc	plusw1,7,c
 22177  0124A0  D020               	goto	l7005
 22178  0124A2  0EFC               	movlw	-4
 22179  0124A4  50E3               	movf	plusw1,w,c
 22180  0124A6  E104               	bnz	u6030
 22181  0124A8  0EFB               	movlw	-5
 22182  0124AA  28E3               	incf	plusw1,w,c
 22183  0124AC  A0D8               	btfss	status,0,c
 22184  0124AE  D019               	goto	l7005
 22185  0124B0                     u6030:
 22186  0124B0  0E00               	movlw	0
 22187  0124B2  6E3A               	movwf	(btemp+8)^0,c
 22188  0124B4  0E00               	movlw	0
 22189  0124B6  6E3B               	movwf	(btemp+9)^0,c
 22190  0124B8  0E80               	movlw	128
 22191  0124BA  6E3C               	movwf	(btemp+10)^0,c
 22192  0124BC  0E7F               	movlw	127
 22193  0124BE  6E3D               	movwf	(btemp+11)^0,c
 22194                           
 22195                           ;stkvar	_prod @ sp[(-13)+0]
 22196  0124C0  0EF3               	movlw	-13
 22197  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22198  0124C8  0EF4               	movlw	-12
 22199  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22200  0124D0  0EF5               	movlw	-11
 22201  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22202  0124D8  0EF6               	movlw	-10
 22203  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22204  0124E0  D044               	goto	l7021
 22205  0124E2                     l7005:
 22206                           
 22207                           ;stkvar	_temp @ sp[(-13)+8]
 22208  0124E2  0EFC               	movlw	-4
 22209  0124E4  BEE3               	btfsc	plusw1,7,c
 22210  0124E6  D007               	goto	u6040
 22211  0124E8  0EFC               	movlw	-4
 22212  0124EA  50E3               	movf	plusw1,w,c
 22213  0124EC  E10F               	bnz	l7011
 22214  0124EE  0EFB               	movlw	-5
 22215  0124F0  04E3               	decf	plusw1,w,c
 22216  0124F2  B0D8               	btfsc	status,0,c
 22217  0124F4  D00B               	goto	l7011
 22218  0124F6                     u6040:
 22219                           
 22220                           ;stkvar	_prod @ sp[(-13)+0]
 22221  0124F6  0EF3               	movlw	-13
 22222  0124F8  6AE3               	clrf	plusw1,c
 22223  0124FA  0EF4               	movlw	-12
 22224  0124FC  6AE3               	clrf	plusw1,c
 22225  0124FE  0EF5               	movlw	-11
 22226  012500  6AE3               	clrf	plusw1,c
 22227  012502  0EF6               	movlw	-10
 22228  012504  6AE3               	clrf	plusw1,c
 22229                           
 22230                           ;stkvar	_sign @ sp[(-13)+12]
 22231  012506  0EFF               	movlw	-1
 22232  012508  6AE3               	clrf	plusw1,c
 22233  01250A  D02F               	goto	l7021
 22234  01250C                     l7011:
 22235                           
 22236                           ;stkvar	_temp @ sp[(-13)+8]
 22237                           ;stkvar	_bexp @ sp[(-13)+10]
 22238  01250C  0EFB               	movlw	-5
 22239  01250E  006F FF8C  F032    	movff	plusw1,btemp
 22240  012514  0EFD               	movlw	-3
 22241  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 22242                           
 22243                           ;stkvar	_prod @ sp[(-13)+0]
 22244  01251C  50E1               	movf	fsr1l,w,c
 22245  01251E  0FF3               	addlw	-13
 22246  012520  6ED9               	movwf	fsr2l,c
 22247  012522  50E2               	movf	fsr1h,w,c
 22248  012524  6EDA               	movwf	fsr2h,c
 22249  012526  0EFF               	movlw	255
 22250  012528  22DA               	addwfc	fsr2h,f,c
 22251  01252A  0EFF               	movlw	255
 22252  01252C  16DE               	andwf	postinc2,f,c
 22253  01252E  0EFF               	movlw	255
 22254  012530  16DE               	andwf	postinc2,f,c
 22255  012532  0E7F               	movlw	127
 22256  012534  16DE               	andwf	postinc2,f,c
 22257  012536  0E00               	movlw	0
 22258  012538  16DE               	andwf	postinc2,f,c
 22259                           
 22260                           ;stkvar	_bexp @ sp[(-13)+10]
 22261  01253A  0EFD               	movlw	-3
 22262  01253C  A0E3               	btfss	plusw1,0,c
 22263  01253E  D008               	goto	l7019
 22264                           
 22265                           ;stkvar	_prod @ sp[(-13)+0]
 22266  012540  0EF5               	movlw	245
 22267  012542  24E1               	addwf	fsr1l,w,c
 22268  012544  6ED9               	movwf	fsr2l,c
 22269  012546  0EFF               	movlw	255
 22270  012548  20E2               	addwfc	fsr1h,w,c
 22271  01254A  6EDA               	movwf	fsr2h,c
 22272  01254C  0E00               	movlw	0
 22273  01254E  8EDB               	bsf	plusw2,7,c
 22274  012550                     l7019:
 22275                           
 22276                           ;stkvar	_prod @ sp[(-13)+0]
 22277  012550  0EF6               	movlw	246
 22278  012552  24E1               	addwf	fsr1l,w,c
 22279  012554  6ED9               	movwf	fsr2l,c
 22280  012556  0EFF               	movlw	255
 22281  012558  20E2               	addwfc	fsr1h,w,c
 22282  01255A  6EDA               	movwf	fsr2h,c
 22283                           
 22284                           ;stkvar	_bexp @ sp[(-13)+10]
 22285  01255C  0EFD               	movlw	-3
 22286  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 22287  012564  90D8               	bcf	status,0,c
 22288  012566  303D               	rrcf	(btemp+11)^0,w,c
 22289  012568  6EDF               	movwf	indf2,c
 22290  01256A                     l7021:
 22291                           
 22292                           ;stkvar	_sign @ sp[(-13)+12]
 22293  01256A  0EFF               	movlw	-1
 22294  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22295                           
 22296                           ;stkvar	_prod @ sp[(-13)+0]
 22297  012572  0EF6               	movlw	246
 22298  012574  24E1               	addwf	fsr1l,w,c
 22299  012576  6ED9               	movwf	fsr2l,c
 22300  012578  0EFF               	movlw	255
 22301  01257A  20E2               	addwfc	fsr1h,w,c
 22302  01257C  6EDA               	movwf	fsr2h,c
 22303  01257E  503D               	movf	(btemp+11)^0,w,c
 22304  012580  12DF               	iorwf	indf2,f,c
 22305                           
 22306                           ;stkvar	_prod @ sp[(-13)+0]
 22307  012582  0EF3               	movlw	-13
 22308  012584  006F FF8C  F032    	movff	plusw1,btemp
 22309  01258A  0EF4               	movlw	-12
 22310  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 22311  012592  0EF5               	movlw	-11
 22312  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 22313  01259A  0EF6               	movlw	-10
 22314  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 22315  0125A2                     l2696:
 22316                           
 22317                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 22318  0125A2  0EEB               	movlw	235
 22319  0125A4  26E1               	addwf	fsr1l,f,c
 22320  0125A6  0EFF               	movlw	255
 22321  0125A8  22E2               	addwfc	fsr1h,f,c
 22322  0125AA  0012               	return		;funcret
 22323  0125AC                     __end_of___flmul:
 22324                           	opt callstack 0
 22325                           
 22326 ;; *************** function _SYSTEM_Initialize *****************
 22327 ;; Defined at:
 22328 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22329 ;; Parameters:    Size  Location     Type
 22330 ;;		None
 22331 ;; Auto vars:     Size  Location     Type
 22332 ;;		None
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  1  [STACK] void 
 22335 ;; Registers used:
 22336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 3F/3C
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22346 ;;Total ram usage:        0 bytes
 22347 ;; Hardware stack levels used:    1
 22348 ;; Hardware stack levels required when called:    8
 22349 ;; This function calls:
 22350 ;;		_ADCC_Initialize
 22351 ;;		_CLKREF_Initialize
 22352 ;;		_DMA1_Initialize
 22353 ;;		_DMA2_Initialize
 22354 ;;		_EXT_INT_Initialize
 22355 ;;		_FVR_Initialize
 22356 ;;		_INTERRUPT_Initialize
 22357 ;;		_OSCILLATOR_Initialize
 22358 ;;		_PIN_MANAGER_Initialize
 22359 ;;		_PMD_Initialize
 22360 ;;		_PWM8_Initialize
 22361 ;;		_SPI1_Initialize
 22362 ;;		_TMR2_Initialize
 22363 ;;		_TMR5_Initialize
 22364 ;;		_TMR6_Initialize
 22365 ;;		_UART1_Initialize
 22366 ;;		_UART2_Initialize
 22367 ;; This function is called by:
 22368 ;;		_main
 22369 ;; This function uses a reentrant model
 22370 ;;
 22371                           
 22372                           	psect	text90
 22373  0180A4                     __ptext90:
 22374                           	opt callstack 0
 22375  0180A4                     _SYSTEM_Initialize:
 22376                           	opt callstack 22
 22377                           
 22378                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22379                           
 22380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22381                           ;incstack = 0
 22382  0180A4  ECE6  F0BD         	call	_INTERRUPT_Initialize	;wreg free
 22383                           
 22384                           ; BSR set to: 57
 22385                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22386  0180A8  EC6C  F0C5         	call	_PMD_Initialize	;wreg free
 22387                           
 22388                           ; BSR set to: 57
 22389                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22390  0180AC  EC72  F0BB         	call	_PIN_MANAGER_Initialize	;wreg free
 22391                           
 22392                           ; BSR set to: 58
 22393                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22394  0180B0  EC61  F0C5         	call	_OSCILLATOR_Initialize	;wreg free
 22395                           
 22396                           ; BSR set to: 57
 22397                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22398  0180B4  ECCB  F0C5         	call	_FVR_Initialize	;wreg free
 22399                           
 22400                           ; BSR set to: 62
 22401                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22402  0180B8  EC7C  F0BD         	call	_ADCC_Initialize	;wreg free
 22403                           
 22404                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 22405  0180BC  EC33  F0C5         	call	_TMR2_Initialize	;wreg free
 22406                           
 22407                           ; BSR set to: 57
 22408                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 22409  0180C0  EC56  F0C5         	call	_PWM8_Initialize	;wreg free
 22410                           
 22411                           ; BSR set to: 63
 22412                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22413  0180C4  ECC7  F0C1         	call	_EXT_INT_Initialize	;wreg free
 22414                           
 22415                           ; BSR set to: 57
 22416                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22417  0180C8  EC84  F0C2         	call	_TMR6_Initialize	;wreg free
 22418                           
 22419                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22420  0180CC  EC75  F0C0         	call	_TMR5_Initialize	;wreg free
 22421                           
 22422                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22423  0180D0  EC4B  F0BE         	call	_UART1_Initialize	;wreg free
 22424                           
 22425                           ; BSR set to: 57
 22426                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22427  0180D4  ECDF  F0BE         	call	_UART2_Initialize	;wreg free
 22428                           
 22429                           ; BSR set to: 57
 22430                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22431  0180D8  EC4B  F0C5         	call	_SPI1_Initialize	;wreg free
 22432                           
 22433                           ; BSR set to: 61
 22434                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22435  0180DC  EC69  F0BF         	call	_DMA2_Initialize	;wreg free
 22436                           
 22437                           ; BSR set to: 59
 22438                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22439  0180E0  EC47  F0BD         	call	_DMA1_Initialize	;wreg free
 22440                           
 22441                           ; BSR set to: 59
 22442                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22443  0180E4  ECA5  F0C5         	call	_CLKREF_Initialize	;wreg free
 22444                           
 22445                           ; BSR set to: 60
 22446                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22447  0180E8  0012               	return		;funcret
 22448  0180EA                     __end_of_SYSTEM_Initialize:
 22449                           	opt callstack 0
 22450                           
 22451 ;; *************** function _UART2_Initialize *****************
 22452 ;; Defined at:
 22453 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22454 ;; Parameters:    Size  Location     Type
 22455 ;;		None
 22456 ;; Auto vars:     Size  Location     Type
 22457 ;;		None
 22458 ;; Return value:  Size  Location     Type
 22459 ;;                  1  [STACK] void 
 22460 ;; Registers used:
 22461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22462 ;; Tracked objects:
 22463 ;;		On entry : 3F/39
 22464 ;;		On exit  : 3F/39
 22465 ;;		Unchanged: 0/0
 22466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22471 ;;Total ram usage:        0 bytes
 22472 ;; Hardware stack levels used:    1
 22473 ;; Hardware stack levels required when called:    7
 22474 ;; This function calls:
 22475 ;;		_UART2_SetRxInterruptHandler
 22476 ;;		_UART2_SetTxInterruptHandler
 22477 ;; This function is called by:
 22478 ;;		_SYSTEM_Initialize
 22479 ;; This function uses a reentrant model
 22480 ;;
 22481                           
 22482                           	psect	text91
 22483  017DBE                     __ptext91:
 22484                           	opt callstack 0
 22485  017DBE                     _UART2_Initialize:
 22486                           	opt callstack 22
 22487                           
 22488                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22489                           
 22490                           ; BSR set to: 60
 22491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22492                           ;incstack = 0
 22493  017DBE  0139               	movlb	57	; () banked
 22494  017DC0  9596               	bcf	150,2,b	;volatile
 22495                           
 22496                           ; BSR set to: 57
 22497                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22498  017DC2  0EC2               	movlw	low _UART2_Receive_ISR
 22499  017DC4  6EE6               	movwf	postinc1,c
 22500  017DC6  0E89               	movlw	high _UART2_Receive_ISR
 22501  017DC8  6EE6               	movwf	postinc1,c
 22502  017DCA  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22503  017DCC  6EE6               	movwf	postinc1,c
 22504  017DCE  EC13  F0C3         	call	_UART2_SetRxInterruptHandler	;wreg free
 22505                           
 22506                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22507  017DD2  0139               	movlb	57	; () banked
 22508  017DD4  9796               	bcf	150,3,b	;volatile
 22509                           
 22510                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22511  017DD6  0EDC               	movlw	low _UART2_Transmit_ISR
 22512  017DD8  6EE6               	movwf	postinc1,c
 22513  017DDA  0E84               	movlw	high _UART2_Transmit_ISR
 22514  017DDC  6EE6               	movwf	postinc1,c
 22515  017DDE  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22516  017DE0  6EE6               	movwf	postinc1,c
 22517  017DE2  ECFF  F0C2         	call	_UART2_SetTxInterruptHandler	;wreg free
 22518                           
 22519                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22520  017DE6  013D               	movlb	61	; () banked
 22521  017DE8  6BD4               	clrf	212,b	;volatile
 22522                           
 22523                           ; BSR set to: 61
 22524                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22525  017DEA  6BD6               	clrf	214,b	;volatile
 22526                           
 22527                           ; BSR set to: 61
 22528                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22529  017DEC  6BD8               	clrf	216,b	;volatile
 22530                           
 22531                           ; BSR set to: 61
 22532                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22533  017DEE  0EB0               	movlw	176
 22534  017DF0  6FDA               	movwf	218,b	;volatile
 22535                           
 22536                           ; BSR set to: 61
 22537                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22538  017DF2  0E80               	movlw	128
 22539  017DF4  6FDB               	movwf	219,b	;volatile
 22540                           
 22541                           ; BSR set to: 61
 22542                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22543  017DF6  6BDC               	clrf	220,b	;volatile
 22544                           
 22545                           ; BSR set to: 61
 22546                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22547  017DF8  0E82               	movlw	130
 22548  017DFA  6FDD               	movwf	221,b	;volatile
 22549                           
 22550                           ; BSR set to: 61
 22551                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22552  017DFC  0E06               	movlw	6
 22553  017DFE  6FDE               	movwf	222,b	;volatile
 22554                           
 22555                           ; BSR set to: 61
 22556                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22557  017E00  6BDF               	clrf	223,b	;volatile
 22558                           
 22559                           ; BSR set to: 61
 22560                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22561  017E02  6BE0               	clrf	224,b	;volatile
 22562                           
 22563                           ; BSR set to: 61
 22564                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22565  017E04  6BE1               	clrf	225,b	;volatile
 22566                           
 22567                           ; BSR set to: 61
 22568                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22569  017E06  6BE2               	clrf	226,b	;volatile
 22570                           
 22571                           ; BSR set to: 61
 22572                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22573  017E08  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 22574                           
 22575                           ; BSR set to: 61
 22576                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22577  017E0A  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 22578                           
 22579                           ; BSR set to: 61
 22580                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22581  017E0C  0E40               	movlw	64
 22582  017E0E  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22583                           
 22584                           ; BSR set to: 61
 22585                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22586  017E10  6A28               	clrf	_uart2RxHead^0,c	;volatile
 22587                           
 22588                           ; BSR set to: 61
 22589                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22590  017E12  6A27               	clrf	_uart2RxTail^0,c	;volatile
 22591                           
 22592                           ; BSR set to: 61
 22593                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22594  017E14  6A26               	clrf	_uart2RxCount^0,c	;volatile
 22595                           
 22596                           ; BSR set to: 61
 22597                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22598  017E16  0139               	movlb	57	; () banked
 22599  017E18  8596               	bsf	150,2,b	;volatile
 22600                           
 22601                           ; BSR set to: 57
 22602                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22603  017E1A  0012               	return		;funcret
 22604  017E1C                     __end_of_UART2_Initialize:
 22605                           	opt callstack 0
 22606                           
 22607 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22608 ;; Defined at:
 22609 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22610 ;; Parameters:    Size  Location     Type
 22611 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22612 ;;		 -> UART2_Transmit_ISR(1), 
 22613 ;; Auto vars:     Size  Location     Type
 22614 ;;		None
 22615 ;; Return value:  Size  Location     Type
 22616 ;;                  1  [STACK] void 
 22617 ;; Registers used:
 22618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22619 ;; Tracked objects:
 22620 ;;		On entry : 3F/39
 22621 ;;		On exit  : 0/0
 22622 ;;		Unchanged: 0/0
 22623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22628 ;;Total ram usage:        0 bytes
 22629 ;; Hardware stack levels used:    1
 22630 ;; Hardware stack levels required when called:    6
 22631 ;; This function calls:
 22632 ;;		Nothing
 22633 ;; This function is called by:
 22634 ;;		_UART2_Initialize
 22635 ;; This function uses a reentrant model
 22636 ;;
 22637                           
 22638                           	psect	text92
 22639  0185FE                     __ptext92:
 22640                           	opt callstack 0
 22641  0185FE                     _UART2_SetTxInterruptHandler:
 22642                           	opt callstack 22
 22643                           
 22644                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22645                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22646                           
 22647                           ; BSR set to: 57
 22648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22649                           ;incstack = 0
 22650  0185FE  50E1               	movf	fsr1l,w,c
 22651  018600  0FFD               	addlw	-3
 22652  018602  6ED9               	movwf	fsr2l,c
 22653  018604  50E2               	movf	fsr1h,w,c
 22654  018606  6EDA               	movwf	fsr2h,c
 22655  018608  0EFF               	movlw	255
 22656  01860A  22DA               	addwfc	fsr2h,f,c
 22657  01860C  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 22658  018612  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 22659  018618  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 22660                           
 22661                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22662  01861E  52E5               	movf	postdec1,f,c
 22663  018620  52E5               	movf	postdec1,f,c
 22664  018622  52E5               	movf	postdec1,f,c
 22665  018624  0012               	return		;funcret
 22666  018626                     __end_of_UART2_SetTxInterruptHandler:
 22667                           	opt callstack 0
 22668                           
 22669 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22670 ;; Defined at:
 22671 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22672 ;; Parameters:    Size  Location     Type
 22673 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22674 ;;		 -> UART2_Receive_ISR(1), 
 22675 ;; Auto vars:     Size  Location     Type
 22676 ;;		None
 22677 ;; Return value:  Size  Location     Type
 22678 ;;                  1  [STACK] void 
 22679 ;; Registers used:
 22680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22681 ;; Tracked objects:
 22682 ;;		On entry : 3F/39
 22683 ;;		On exit  : 0/0
 22684 ;;		Unchanged: 0/0
 22685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22690 ;;Total ram usage:        0 bytes
 22691 ;; Hardware stack levels used:    1
 22692 ;; Hardware stack levels required when called:    6
 22693 ;; This function calls:
 22694 ;;		Nothing
 22695 ;; This function is called by:
 22696 ;;		_UART2_Initialize
 22697 ;; This function uses a reentrant model
 22698 ;;
 22699                           
 22700                           	psect	text93
 22701  018626                     __ptext93:
 22702                           	opt callstack 0
 22703  018626                     _UART2_SetRxInterruptHandler:
 22704                           	opt callstack 22
 22705                           
 22706                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 22707                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22708                           
 22709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22710                           ;incstack = 0
 22711  018626  50E1               	movf	fsr1l,w,c
 22712  018628  0FFD               	addlw	-3
 22713  01862A  6ED9               	movwf	fsr2l,c
 22714  01862C  50E2               	movf	fsr1h,w,c
 22715  01862E  6EDA               	movwf	fsr2h,c
 22716  018630  0EFF               	movlw	255
 22717  018632  22DA               	addwfc	fsr2h,f,c
 22718  018634  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 22719  01863A  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 22720  018640  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 22721                           
 22722                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22723  018646  52E5               	movf	postdec1,f,c
 22724  018648  52E5               	movf	postdec1,f,c
 22725  01864A  52E5               	movf	postdec1,f,c
 22726  01864C  0012               	return		;funcret
 22727  01864E                     __end_of_UART2_SetRxInterruptHandler:
 22728                           	opt callstack 0
 22729                           
 22730 ;; *************** function _UART1_Initialize *****************
 22731 ;; Defined at:
 22732 ;;		line 79 in file "mcc_generated_files/uart1.c"
 22733 ;; Parameters:    Size  Location     Type
 22734 ;;		None
 22735 ;; Auto vars:     Size  Location     Type
 22736 ;;		None
 22737 ;; Return value:  Size  Location     Type
 22738 ;;                  1  [STACK] void 
 22739 ;; Registers used:
 22740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22741 ;; Tracked objects:
 22742 ;;		On entry : 0/39
 22743 ;;		On exit  : 3F/39
 22744 ;;		Unchanged: 0/0
 22745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22750 ;;Total ram usage:        0 bytes
 22751 ;; Hardware stack levels used:    1
 22752 ;; Hardware stack levels required when called:    7
 22753 ;; This function calls:
 22754 ;;		_UART1_SetRxInterruptHandler
 22755 ;;		_UART1_SetTxInterruptHandler
 22756 ;; This function is called by:
 22757 ;;		_SYSTEM_Initialize
 22758 ;; This function uses a reentrant model
 22759 ;;
 22760                           
 22761                           	psect	text94
 22762  017C96                     __ptext94:
 22763                           	opt callstack 0
 22764  017C96                     _UART1_Initialize:
 22765                           	opt callstack 22
 22766                           
 22767                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 22768                           
 22769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22770                           ;incstack = 0
 22771  017C96  0139               	movlb	57	; () banked
 22772  017C98  9793               	bcf	147,3,b	;volatile
 22773                           
 22774                           ; BSR set to: 57
 22775                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 22776  017C9A  0EA4               	movlw	low _UART1_Receive_ISR
 22777  017C9C  6EE6               	movwf	postinc1,c
 22778  017C9E  0E89               	movlw	high _UART1_Receive_ISR
 22779  017CA0  6EE6               	movwf	postinc1,c
 22780  017CA2  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 22781  017CA4  6EE6               	movwf	postinc1,c
 22782  017CA6  EC3B  F0C3         	call	_UART1_SetRxInterruptHandler	;wreg free
 22783                           
 22784                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 22785  017CAA  0139               	movlb	57	; () banked
 22786  017CAC  9993               	bcf	147,4,b	;volatile
 22787                           
 22788                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 22789  017CAE  0EB0               	movlw	low _UART1_Transmit_ISR
 22790  017CB0  6EE6               	movwf	postinc1,c
 22791  017CB2  0E84               	movlw	high _UART1_Transmit_ISR
 22792  017CB4  6EE6               	movwf	postinc1,c
 22793  017CB6  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 22794  017CB8  6EE6               	movwf	postinc1,c
 22795  017CBA  EC27  F0C3         	call	_UART1_SetTxInterruptHandler	;wreg free
 22796                           
 22797                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 22798  017CBE  013D               	movlb	61	; () banked
 22799  017CC0  6BEC               	clrf	236,b	;volatile
 22800                           
 22801                           ; BSR set to: 61
 22802                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 22803  017CC2  6BED               	clrf	237,b	;volatile
 22804                           
 22805                           ; BSR set to: 61
 22806                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 22807  017CC4  6BEE               	clrf	238,b	;volatile
 22808                           
 22809                           ; BSR set to: 61
 22810                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 22811  017CC6  6BEF               	clrf	239,b	;volatile
 22812                           
 22813                           ; BSR set to: 61
 22814                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 22815  017CC8  6BF0               	clrf	240,b	;volatile
 22816                           
 22817                           ; BSR set to: 61
 22818                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 22819  017CCA  6BF1               	clrf	241,b	;volatile
 22820                           
 22821                           ; BSR set to: 61
 22822                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 22823  017CCC  0EB0               	movlw	176
 22824  017CCE  6FF2               	movwf	242,b	;volatile
 22825                           
 22826                           ; BSR set to: 61
 22827                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 22828  017CD0  0E80               	movlw	128
 22829  017CD2  6FF3               	movwf	243,b	;volatile
 22830                           
 22831                           ; BSR set to: 61
 22832                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 22833  017CD4  6BF4               	clrf	244,b	;volatile
 22834                           
 22835                           ; BSR set to: 61
 22836                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 22837  017CD6  0E82               	movlw	130
 22838  017CD8  6FF5               	movwf	245,b	;volatile
 22839                           
 22840                           ; BSR set to: 61
 22841                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 22842  017CDA  0E06               	movlw	6
 22843  017CDC  6FF6               	movwf	246,b	;volatile
 22844                           
 22845                           ; BSR set to: 61
 22846                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 22847  017CDE  6BF7               	clrf	247,b	;volatile
 22848                           
 22849                           ; BSR set to: 61
 22850                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 22851  017CE0  6BF8               	clrf	248,b	;volatile
 22852                           
 22853                           ; BSR set to: 61
 22854                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 22855  017CE2  6BF9               	clrf	249,b	;volatile
 22856                           
 22857                           ; BSR set to: 61
 22858                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 22859  017CE4  6BFA               	clrf	250,b	;volatile
 22860                           
 22861                           ; BSR set to: 61
 22862                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 22863  017CE6  6A31               	clrf	_uart1TxHead^0,c	;volatile
 22864                           
 22865                           ; BSR set to: 61
 22866                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 22867  017CE8  6A30               	clrf	_uart1TxTail^0,c	;volatile
 22868                           
 22869                           ; BSR set to: 61
 22870                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 22871  017CEA  0E40               	movlw	64
 22872  017CEC  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 22873                           
 22874                           ; BSR set to: 61
 22875                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 22876  017CEE  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 22877                           
 22878                           ; BSR set to: 61
 22879                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 22880  017CF0  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 22881                           
 22882                           ; BSR set to: 61
 22883                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 22884  017CF2  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 22885                           
 22886                           ; BSR set to: 61
 22887                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 22888  017CF4  0139               	movlb	57	; () banked
 22889  017CF6  8793               	bsf	147,3,b	;volatile
 22890                           
 22891                           ; BSR set to: 57
 22892                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22893  017CF8  0012               	return		;funcret
 22894  017CFA                     __end_of_UART1_Initialize:
 22895                           	opt callstack 0
 22896                           
 22897 ;; *************** function _UART1_SetTxInterruptHandler *****************
 22898 ;; Defined at:
 22899 ;;		line 246 in file "mcc_generated_files/uart1.c"
 22900 ;; Parameters:    Size  Location     Type
 22901 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22902 ;;		 -> UART1_Transmit_ISR(1), 
 22903 ;; Auto vars:     Size  Location     Type
 22904 ;;		None
 22905 ;; Return value:  Size  Location     Type
 22906 ;;                  1  [STACK] void 
 22907 ;; Registers used:
 22908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22909 ;; Tracked objects:
 22910 ;;		On entry : 3F/39
 22911 ;;		On exit  : 0/0
 22912 ;;		Unchanged: 0/0
 22913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22918 ;;Total ram usage:        0 bytes
 22919 ;; Hardware stack levels used:    1
 22920 ;; Hardware stack levels required when called:    6
 22921 ;; This function calls:
 22922 ;;		Nothing
 22923 ;; This function is called by:
 22924 ;;		_UART1_Initialize
 22925 ;; This function uses a reentrant model
 22926 ;;
 22927                           
 22928                           	psect	text95
 22929  01864E                     __ptext95:
 22930                           	opt callstack 0
 22931  01864E                     _UART1_SetTxInterruptHandler:
 22932                           	opt callstack 22
 22933                           
 22934                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 22935                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22936                           
 22937                           ; BSR set to: 57
 22938                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22939                           ;incstack = 0
 22940  01864E  50E1               	movf	fsr1l,w,c
 22941  018650  0FFD               	addlw	-3
 22942  018652  6ED9               	movwf	fsr2l,c
 22943  018654  50E2               	movf	fsr1h,w,c
 22944  018656  6EDA               	movwf	fsr2h,c
 22945  018658  0EFF               	movlw	255
 22946  01865A  22DA               	addwfc	fsr2h,f,c
 22947  01865C  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 22948  018662  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 22949  018668  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 22950                           
 22951                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22952  01866E  52E5               	movf	postdec1,f,c
 22953  018670  52E5               	movf	postdec1,f,c
 22954  018672  52E5               	movf	postdec1,f,c
 22955  018674  0012               	return		;funcret
 22956  018676                     __end_of_UART1_SetTxInterruptHandler:
 22957                           	opt callstack 0
 22958                           
 22959 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22960 ;; Defined at:
 22961 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22962 ;; Parameters:    Size  Location     Type
 22963 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22964 ;;		 -> UART1_Receive_ISR(1), 
 22965 ;; Auto vars:     Size  Location     Type
 22966 ;;		None
 22967 ;; Return value:  Size  Location     Type
 22968 ;;                  1  [STACK] void 
 22969 ;; Registers used:
 22970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22971 ;; Tracked objects:
 22972 ;;		On entry : 3F/39
 22973 ;;		On exit  : 0/0
 22974 ;;		Unchanged: 0/0
 22975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22980 ;;Total ram usage:        0 bytes
 22981 ;; Hardware stack levels used:    1
 22982 ;; Hardware stack levels required when called:    6
 22983 ;; This function calls:
 22984 ;;		Nothing
 22985 ;; This function is called by:
 22986 ;;		_UART1_Initialize
 22987 ;; This function uses a reentrant model
 22988 ;;
 22989                           
 22990                           	psect	text96
 22991  018676                     __ptext96:
 22992                           	opt callstack 0
 22993  018676                     _UART1_SetRxInterruptHandler:
 22994                           	opt callstack 22
 22995                           
 22996                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 22997                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22998                           
 22999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23000                           ;incstack = 0
 23001  018676  50E1               	movf	fsr1l,w,c
 23002  018678  0FFD               	addlw	-3
 23003  01867A  6ED9               	movwf	fsr2l,c
 23004  01867C  50E2               	movf	fsr1h,w,c
 23005  01867E  6EDA               	movwf	fsr2h,c
 23006  018680  0EFF               	movlw	255
 23007  018682  22DA               	addwfc	fsr2h,f,c
 23008  018684  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 23009  01868A  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 23010  018690  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 23011                           
 23012                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23013  018696  52E5               	movf	postdec1,f,c
 23014  018698  52E5               	movf	postdec1,f,c
 23015  01869A  52E5               	movf	postdec1,f,c
 23016  01869C  0012               	return		;funcret
 23017  01869E                     __end_of_UART1_SetRxInterruptHandler:
 23018                           	opt callstack 0
 23019                           
 23020 ;; *************** function _TMR6_Initialize *****************
 23021 ;; Defined at:
 23022 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23023 ;; Parameters:    Size  Location     Type
 23024 ;;		None
 23025 ;; Auto vars:     Size  Location     Type
 23026 ;;		None
 23027 ;; Return value:  Size  Location     Type
 23028 ;;                  1  [STACK] void 
 23029 ;; Registers used:
 23030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23031 ;; Tracked objects:
 23032 ;;		On entry : 3F/39
 23033 ;;		On exit  : 0/0
 23034 ;;		Unchanged: 0/0
 23035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23040 ;;Total ram usage:        0 bytes
 23041 ;; Hardware stack levels used:    1
 23042 ;; Hardware stack levels required when called:    7
 23043 ;; This function calls:
 23044 ;;		_TMR6_SetInterruptHandler
 23045 ;; This function is called by:
 23046 ;;		_SYSTEM_Initialize
 23047 ;; This function uses a reentrant model
 23048 ;;
 23049                           
 23050                           	psect	text97
 23051  018508                     __ptext97:
 23052                           	opt callstack 0
 23053  018508                     _TMR6_Initialize:
 23054                           	opt callstack 22
 23055                           
 23056                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23057                           
 23058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23059                           ;incstack = 0
 23060  018508  0E01               	movlw	1
 23061  01850A  6E96               	movwf	150,c	;volatile
 23062                           
 23063                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23064  01850C  6A95               	clrf	149,c	;volatile
 23065                           
 23066                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23067  01850E  6A97               	clrf	151,c	;volatile
 23068                           
 23069                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23070  018510  0E7C               	movlw	124
 23071  018512  6E93               	movwf	147,c	;volatile
 23072                           
 23073                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23074  018514  6A92               	clrf	146,c	;volatile
 23075                           
 23076                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23077  018516  0139               	movlb	57	; () banked
 23078  018518  91A9               	bcf	169,0,b	;volatile
 23079                           
 23080                           ; BSR set to: 57
 23081                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23082  01851A  8199               	bsf	153,0,b	;volatile
 23083                           
 23084                           ; BSR set to: 57
 23085                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23086  01851C  0E30               	movlw	low _TMR6_DefaultInterruptHandler
 23087  01851E  6EE6               	movwf	postinc1,c
 23088  018520  0E81               	movlw	high _TMR6_DefaultInterruptHandler
 23089  018522  6EE6               	movwf	postinc1,c
 23090  018524  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23091  018526  6EE6               	movwf	postinc1,c
 23092  018528  EC4F  F0C3         	call	_TMR6_SetInterruptHandler	;wreg free
 23093                           
 23094                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23095  01852C  0EE0               	movlw	224
 23096  01852E  6E94               	movwf	148,c	;volatile
 23097                           
 23098                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23099  018530  0012               	return		;funcret
 23100  018532                     __end_of_TMR6_Initialize:
 23101                           	opt callstack 0
 23102                           
 23103 ;; *************** function _TMR6_SetInterruptHandler *****************
 23104 ;; Defined at:
 23105 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23106 ;; Parameters:    Size  Location     Type
 23107 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23108 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23109 ;; Auto vars:     Size  Location     Type
 23110 ;;		None
 23111 ;; Return value:  Size  Location     Type
 23112 ;;                  1  [STACK] void 
 23113 ;; Registers used:
 23114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23115 ;; Tracked objects:
 23116 ;;		On entry : 3F/39
 23117 ;;		On exit  : 0/0
 23118 ;;		Unchanged: 0/0
 23119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23124 ;;Total ram usage:        0 bytes
 23125 ;; Hardware stack levels used:    1
 23126 ;; Hardware stack levels required when called:    6
 23127 ;; This function calls:
 23128 ;;		Nothing
 23129 ;; This function is called by:
 23130 ;;		_TMR6_Initialize
 23131 ;; This function uses a reentrant model
 23132 ;;
 23133                           
 23134                           	psect	text98
 23135  01869E                     __ptext98:
 23136                           	opt callstack 0
 23137  01869E                     _TMR6_SetInterruptHandler:
 23138                           	opt callstack 22
 23139                           
 23140                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23141                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23142                           
 23143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23144                           ;incstack = 0
 23145  01869E  50E1               	movf	fsr1l,w,c
 23146  0186A0  0FFD               	addlw	-3
 23147  0186A2  6ED9               	movwf	fsr2l,c
 23148  0186A4  50E2               	movf	fsr1h,w,c
 23149  0186A6  6EDA               	movwf	fsr2h,c
 23150  0186A8  0EFF               	movlw	255
 23151  0186AA  22DA               	addwfc	fsr2h,f,c
 23152  0186AC  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 23153  0186B2  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 23154  0186B8  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 23155                           
 23156                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23157  0186BE  52E5               	movf	postdec1,f,c
 23158  0186C0  52E5               	movf	postdec1,f,c
 23159  0186C2  52E5               	movf	postdec1,f,c
 23160  0186C4  0012               	return		;funcret
 23161  0186C6                     __end_of_TMR6_SetInterruptHandler:
 23162                           	opt callstack 0
 23163                           
 23164 ;; *************** function _TMR5_Initialize *****************
 23165 ;; Defined at:
 23166 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23167 ;; Parameters:    Size  Location     Type
 23168 ;;		None
 23169 ;; Auto vars:     Size  Location     Type
 23170 ;;		None
 23171 ;; Return value:  Size  Location     Type
 23172 ;;                  1  [STACK] void 
 23173 ;; Registers used:
 23174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23175 ;; Tracked objects:
 23176 ;;		On entry : 0/39
 23177 ;;		On exit  : 0/0
 23178 ;;		Unchanged: 0/0
 23179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23184 ;;Total ram usage:        0 bytes
 23185 ;; Hardware stack levels used:    1
 23186 ;; Hardware stack levels required when called:    7
 23187 ;; This function calls:
 23188 ;;		_TMR5_SetInterruptHandler
 23189 ;; This function is called by:
 23190 ;;		_SYSTEM_Initialize
 23191 ;; This function uses a reentrant model
 23192 ;;
 23193                           
 23194                           	psect	text99
 23195  0180EA                     __ptext99:
 23196                           	opt callstack 0
 23197  0180EA                     _TMR5_Initialize:
 23198                           	opt callstack 22
 23199                           
 23200                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23201                           
 23202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23203                           ;incstack = 0
 23204  0180EA  6A9B               	clrf	155,c	;volatile
 23205                           
 23206                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23207  0180EC  6A9C               	clrf	156,c	;volatile
 23208                           
 23209                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23210  0180EE  0E01               	movlw	1
 23211  0180F0  6E9D               	movwf	157,c	;volatile
 23212                           
 23213                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23214  0180F2  0E63               	movlw	99
 23215  0180F4  6E99               	movwf	153,c	;volatile
 23216                           
 23217                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23218  0180F6  0EC0               	movlw	192
 23219  0180F8  6E98               	movwf	152,c	;volatile
 23220                           
 23221                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23222  0180FA  5098               	movf	152,w,c	;volatile
 23223  0180FC  006F FE64  F032    	movff	16281,btemp	;volatile
 23224  018102  6A33               	clrf	(btemp+1)^0,c
 23225  018104  0060  F0C8  F033   	movff	btemp,btemp+1
 23226  01810A  6A32               	clrf	btemp^0,c
 23227  01810C  1032               	iorwf	btemp^0,w,c
 23228  01810E  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 23229  018110  5033               	movf	(btemp+1)^0,w,c
 23230  018112  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23231                           
 23232                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23233  018114  0139               	movlb	57	; () banked
 23234  018116  9DA8               	bcf	168,6,b	;volatile
 23235                           
 23236                           ; BSR set to: 57
 23237                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23238  018118  8D98               	bsf	152,6,b	;volatile
 23239                           
 23240                           ; BSR set to: 57
 23241                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23242  01811A  0E8E               	movlw	low _TMR5_DefaultInterruptHandler
 23243  01811C  6EE6               	movwf	postinc1,c
 23244  01811E  0E87               	movlw	high _TMR5_DefaultInterruptHandler
 23245  018120  6EE6               	movwf	postinc1,c
 23246  018122  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23247  018124  6EE6               	movwf	postinc1,c
 23248  018126  EC63  F0C3         	call	_TMR5_SetInterruptHandler	;wreg free
 23249                           
 23250                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23251  01812A  0E31               	movlw	49
 23252  01812C  6E9A               	movwf	154,c	;volatile
 23253                           
 23254                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23255  01812E  0012               	return		;funcret
 23256  018130                     __end_of_TMR5_Initialize:
 23257                           	opt callstack 0
 23258                           
 23259 ;; *************** function _TMR5_SetInterruptHandler *****************
 23260 ;; Defined at:
 23261 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23262 ;; Parameters:    Size  Location     Type
 23263 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23264 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23265 ;; Auto vars:     Size  Location     Type
 23266 ;;		None
 23267 ;; Return value:  Size  Location     Type
 23268 ;;                  1  [STACK] void 
 23269 ;; Registers used:
 23270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23271 ;; Tracked objects:
 23272 ;;		On entry : 3F/39
 23273 ;;		On exit  : 0/0
 23274 ;;		Unchanged: 0/0
 23275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23280 ;;Total ram usage:        0 bytes
 23281 ;; Hardware stack levels used:    1
 23282 ;; Hardware stack levels required when called:    6
 23283 ;; This function calls:
 23284 ;;		Nothing
 23285 ;; This function is called by:
 23286 ;;		_TMR5_Initialize
 23287 ;; This function uses a reentrant model
 23288 ;;
 23289                           
 23290                           	psect	text100
 23291  0186C6                     __ptext100:
 23292                           	opt callstack 0
 23293  0186C6                     _TMR5_SetInterruptHandler:
 23294                           	opt callstack 22
 23295                           
 23296                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23297                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23298                           
 23299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23300                           ;incstack = 0
 23301  0186C6  50E1               	movf	fsr1l,w,c
 23302  0186C8  0FFD               	addlw	-3
 23303  0186CA  6ED9               	movwf	fsr2l,c
 23304  0186CC  50E2               	movf	fsr1h,w,c
 23305  0186CE  6EDA               	movwf	fsr2h,c
 23306  0186D0  0EFF               	movlw	255
 23307  0186D2  22DA               	addwfc	fsr2h,f,c
 23308  0186D4  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 23309  0186DA  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 23310  0186E0  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 23311                           
 23312                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23313  0186E6  52E5               	movf	postdec1,f,c
 23314  0186E8  52E5               	movf	postdec1,f,c
 23315  0186EA  52E5               	movf	postdec1,f,c
 23316  0186EC  0012               	return		;funcret
 23317  0186EE                     __end_of_TMR5_SetInterruptHandler:
 23318                           	opt callstack 0
 23319                           
 23320 ;; *************** function _TMR2_Initialize *****************
 23321 ;; Defined at:
 23322 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23323 ;; Parameters:    Size  Location     Type
 23324 ;;		None
 23325 ;; Auto vars:     Size  Location     Type
 23326 ;;		None
 23327 ;; Return value:  Size  Location     Type
 23328 ;;                  1  [STACK] void 
 23329 ;; Registers used:
 23330 ;;		wreg, status,2
 23331 ;; Tracked objects:
 23332 ;;		On entry : 0/3E
 23333 ;;		On exit  : 3F/39
 23334 ;;		Unchanged: 0/0
 23335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23340 ;;Total ram usage:        0 bytes
 23341 ;; Hardware stack levels used:    1
 23342 ;; Hardware stack levels required when called:    6
 23343 ;; This function calls:
 23344 ;;		Nothing
 23345 ;; This function is called by:
 23346 ;;		_SYSTEM_Initialize
 23347 ;; This function uses a reentrant model
 23348 ;;
 23349                           
 23350                           	psect	text101
 23351  018A66                     __ptext101:
 23352                           	opt callstack 0
 23353  018A66                     _TMR2_Initialize:
 23354                           	opt callstack 23
 23355                           
 23356                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23357                           
 23358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23359                           ;incstack = 0
 23360  018A66  0E01               	movlw	1
 23361  018A68  6EAE               	movwf	174,c	;volatile
 23362                           
 23363                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23364  018A6A  6AAD               	clrf	173,c	;volatile
 23365                           
 23366                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23367  018A6C  6AAF               	clrf	175,c	;volatile
 23368                           
 23369                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23370  018A6E  0E63               	movlw	99
 23371  018A70  6EAB               	movwf	171,c	;volatile
 23372                           
 23373                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23374  018A72  6AAA               	clrf	170,c	;volatile
 23375                           
 23376                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23377  018A74  0139               	movlb	57	; () banked
 23378  018A76  95A4               	bcf	164,2,b	;volatile
 23379                           
 23380                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23381  018A78  0EC0               	movlw	192
 23382  018A7A  6EAC               	movwf	172,c	;volatile
 23383                           
 23384                           ; BSR set to: 57
 23385                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23386  018A7C  0012               	return		;funcret
 23387  018A7E                     __end_of_TMR2_Initialize:
 23388                           	opt callstack 0
 23389                           
 23390 ;; *************** function _SPI1_Initialize *****************
 23391 ;; Defined at:
 23392 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23393 ;; Parameters:    Size  Location     Type
 23394 ;;		None
 23395 ;; Auto vars:     Size  Location     Type
 23396 ;;		None
 23397 ;; Return value:  Size  Location     Type
 23398 ;;                  1  [STACK] void 
 23399 ;; Registers used:
 23400 ;;		wreg, status,2
 23401 ;; Tracked objects:
 23402 ;;		On entry : 3F/39
 23403 ;;		On exit  : 3F/3D
 23404 ;;		Unchanged: 0/0
 23405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23410 ;;Total ram usage:        0 bytes
 23411 ;; Hardware stack levels used:    1
 23412 ;; Hardware stack levels required when called:    6
 23413 ;; This function calls:
 23414 ;;		Nothing
 23415 ;; This function is called by:
 23416 ;;		_SYSTEM_Initialize
 23417 ;; This function uses a reentrant model
 23418 ;;
 23419                           
 23420                           	psect	text102
 23421  018A96                     __ptext102:
 23422                           	opt callstack 0
 23423  018A96                     _SPI1_Initialize:
 23424                           	opt callstack 23
 23425                           
 23426                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23427                           
 23428                           ; BSR set to: 57
 23429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23430                           ;incstack = 0
 23431  018A96  0E40               	movlw	64
 23432  018A98  013D               	movlb	61	; () banked
 23433  018A9A  6F15               	movwf	21,b	;volatile
 23434                           
 23435                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23436  018A9C  0E03               	movlw	3
 23437  018A9E  6F16               	movwf	22,b	;volatile
 23438                           
 23439                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23440  018AA0  0E4F               	movlw	79
 23441  018AA2  6F19               	movwf	25,b	;volatile
 23442                           
 23443                           ; BSR set to: 61
 23444                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23445  018AA4  6B1C               	clrf	28,b	;volatile
 23446                           
 23447                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23448  018AA6  0E83               	movlw	131
 23449  018AA8  6F14               	movwf	20,b	;volatile
 23450                           
 23451                           ; BSR set to: 61
 23452                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23453  018AAA  0012               	return		;funcret
 23454  018AAC                     __end_of_SPI1_Initialize:
 23455                           	opt callstack 0
 23456                           
 23457 ;; *************** function _PWM8_Initialize *****************
 23458 ;; Defined at:
 23459 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23460 ;; Parameters:    Size  Location     Type
 23461 ;;		None
 23462 ;; Auto vars:     Size  Location     Type
 23463 ;;		None
 23464 ;; Return value:  Size  Location     Type
 23465 ;;                  1  [STACK] void 
 23466 ;; Registers used:
 23467 ;;		wreg, status,2
 23468 ;; Tracked objects:
 23469 ;;		On entry : 3F/39
 23470 ;;		On exit  : 3F/3F
 23471 ;;		Unchanged: 0/0
 23472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23477 ;;Total ram usage:        0 bytes
 23478 ;; Hardware stack levels used:    1
 23479 ;; Hardware stack levels required when called:    6
 23480 ;; This function calls:
 23481 ;;		Nothing
 23482 ;; This function is called by:
 23483 ;;		_SYSTEM_Initialize
 23484 ;; This function uses a reentrant model
 23485 ;;
 23486                           
 23487                           	psect	text103
 23488  018AAC                     __ptext103:
 23489                           	opt callstack 0
 23490  018AAC                     _PWM8_Initialize:
 23491                           	opt callstack 23
 23492                           
 23493                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23494                           
 23495                           ; BSR set to: 61
 23496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23497                           ;incstack = 0
 23498  018AAC  0E80               	movlw	128
 23499  018AAE  6E62               	movwf	98,c	;volatile
 23500                           
 23501                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23502  018AB0  6A61               	clrf	97,c	;volatile
 23503                           
 23504                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23505  018AB2  0E40               	movlw	64
 23506  018AB4  6E60               	movwf	96,c	;volatile
 23507                           
 23508                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23509  018AB6  013F               	movlb	63	; () banked
 23510  018AB8  515F               	movf	95,w,b	;volatile
 23511  018ABA  0B3F               	andlw	-193
 23512  018ABC  0940               	iorlw	64
 23513  018ABE  6F5F               	movwf	95,b	;volatile
 23514                           
 23515                           ; BSR set to: 63
 23516                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23517  018AC0  0012               	return		;funcret
 23518  018AC2                     __end_of_PWM8_Initialize:
 23519                           	opt callstack 0
 23520                           
 23521 ;; *************** function _PMD_Initialize *****************
 23522 ;; Defined at:
 23523 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23524 ;; Parameters:    Size  Location     Type
 23525 ;;		None
 23526 ;; Auto vars:     Size  Location     Type
 23527 ;;		None
 23528 ;; Return value:  Size  Location     Type
 23529 ;;                  1  [STACK] void 
 23530 ;; Registers used:
 23531 ;;		None
 23532 ;; Tracked objects:
 23533 ;;		On entry : 3F/39
 23534 ;;		On exit  : 3F/39
 23535 ;;		Unchanged: 0/0
 23536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23541 ;;Total ram usage:        0 bytes
 23542 ;; Hardware stack levels used:    1
 23543 ;; Hardware stack levels required when called:    6
 23544 ;; This function calls:
 23545 ;;		Nothing
 23546 ;; This function is called by:
 23547 ;;		_SYSTEM_Initialize
 23548 ;; This function uses a reentrant model
 23549 ;;
 23550                           
 23551                           	psect	text104
 23552  018AD8                     __ptext104:
 23553                           	opt callstack 0
 23554  018AD8                     _PMD_Initialize:
 23555                           	opt callstack 23
 23556                           
 23557                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23558                           
 23559                           ; BSR set to: 63
 23560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23561                           ;incstack = 0
 23562  018AD8  0139               	movlb	57	; () banked
 23563  018ADA  6BC0               	clrf	192,b	;volatile
 23564                           
 23565                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23566  018ADC  6BC1               	clrf	193,b	;volatile
 23567                           
 23568                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23569  018ADE  6BC2               	clrf	194,b	;volatile
 23570                           
 23571                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23572  018AE0  6BC3               	clrf	195,b	;volatile
 23573                           
 23574                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23575  018AE2  6BC4               	clrf	196,b	;volatile
 23576                           
 23577                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23578  018AE4  6BC5               	clrf	197,b	;volatile
 23579                           
 23580                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23581  018AE6  6BC6               	clrf	198,b	;volatile
 23582                           
 23583                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23584  018AE8  6BC7               	clrf	199,b	;volatile
 23585                           
 23586                           ; BSR set to: 57
 23587                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23588  018AEA  0012               	return		;funcret
 23589  018AEC                     __end_of_PMD_Initialize:
 23590                           	opt callstack 0
 23591                           
 23592 ;; *************** function _PIN_MANAGER_Initialize *****************
 23593 ;; Defined at:
 23594 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23595 ;; Parameters:    Size  Location     Type
 23596 ;;		None
 23597 ;; Auto vars:     Size  Location     Type
 23598 ;;		None
 23599 ;; Return value:  Size  Location     Type
 23600 ;;                  1  [STACK] void 
 23601 ;; Registers used:
 23602 ;;		wreg, status,2
 23603 ;; Tracked objects:
 23604 ;;		On entry : 3F/39
 23605 ;;		On exit  : 3F/3A
 23606 ;;		Unchanged: 0/0
 23607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23612 ;;Total ram usage:        0 bytes
 23613 ;; Hardware stack levels used:    1
 23614 ;; Hardware stack levels required when called:    6
 23615 ;; This function calls:
 23616 ;;		Nothing
 23617 ;; This function is called by:
 23618 ;;		_SYSTEM_Initialize
 23619 ;; This function uses a reentrant model
 23620 ;;
 23621                           
 23622                           	psect	text105
 23623  0176E4                     __ptext105:
 23624                           	opt callstack 0
 23625  0176E4                     _PIN_MANAGER_Initialize:
 23626                           	opt callstack 23
 23627                           
 23628                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23629                           
 23630                           ; BSR set to: 57
 23631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23632                           ;incstack = 0
 23633  0176E4  0E07               	movlw	7
 23634  0176E6  6EBE               	movwf	190,c	;volatile
 23635                           
 23636                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 23637  0176E8  0E80               	movlw	128
 23638  0176EA  6EBD               	movwf	189,c	;volatile
 23639                           
 23640                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23641  0176EC  6ABA               	clrf	186,c	;volatile
 23642                           
 23643                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23644  0176EE  6ABF               	clrf	191,c	;volatile
 23645                           
 23646                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23647  0176F0  6ABB               	clrf	187,c	;volatile
 23648                           
 23649                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23650  0176F2  0E07               	movlw	7
 23651  0176F4  6EBC               	movwf	188,c	;volatile
 23652                           
 23653                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23654  0176F6  6AC6               	clrf	198,c	;volatile
 23655                           
 23656                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23657  0176F8  0E0F               	movlw	15
 23658  0176FA  6EC7               	movwf	199,c	;volatile
 23659                           
 23660                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23661  0176FC  68C2               	setf	194,c	;volatile
 23662                           
 23663                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23664  0176FE  0EBF               	movlw	191
 23665  017700  6EC3               	movwf	195,c	;volatile
 23666                           
 23667                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23668  017702  0E90               	movlw	144
 23669  017704  6EC4               	movwf	196,c	;volatile
 23670                           
 23671                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23672  017706  0E0C               	movlw	12
 23673  017708  6EC5               	movwf	197,c	;volatile
 23674                           
 23675                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23676  01770A  013A               	movlb	58	; () banked
 23677  01770C  6B70               	clrf	112,b	;volatile
 23678                           
 23679                           ; BSR set to: 58
 23680                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23681  01770E  6B60               	clrf	96,b	;volatile
 23682                           
 23683                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23684  017710  0E3C               	movlw	60
 23685  017712  6F50               	movwf	80,b	;volatile
 23686                           
 23687                           ; BSR set to: 58
 23688                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 23689  017714  6B80               	clrf	128,b	;volatile
 23690                           
 23691                           ; BSR set to: 58
 23692                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 23693  017716  6B90               	clrf	144,b	;volatile
 23694                           
 23695                           ; BSR set to: 58
 23696                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 23697  017718  6940               	setf	64,b	;volatile
 23698                           
 23699                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 23700  01771A  0E0C               	movlw	12
 23701  01771C  6F71               	movwf	113,b	;volatile
 23702                           
 23703                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 23704  01771E  0E0F               	movlw	15
 23705  017720  6F91               	movwf	145,b	;volatile
 23706                           
 23707                           ; BSR set to: 58
 23708                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23709  017722  6B81               	clrf	129,b	;volatile
 23710                           
 23711                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 23712  017724  0E83               	movlw	131
 23713  017726  6F51               	movwf	81,b	;volatile
 23714                           
 23715                           ; BSR set to: 58
 23716                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23717  017728  6B41               	clrf	65,b	;volatile
 23718                           
 23719                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 23720  01772A  0E97               	movlw	151
 23721  01772C  6F61               	movwf	97,b	;volatile
 23722                           
 23723                           ; BSR set to: 58
 23724                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 23725  01772E  6B82               	clrf	130,b	;volatile
 23726                           
 23727                           ; BSR set to: 58
 23728                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 23729  017730  6B92               	clrf	146,b	;volatile
 23730                           
 23731                           ; BSR set to: 58
 23732                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 23733  017732  6B42               	clrf	66,b	;volatile
 23734                           
 23735                           ; BSR set to: 58
 23736                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 23737  017734  6B52               	clrf	82,b	;volatile
 23738                           
 23739                           ; BSR set to: 58
 23740                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 23741  017736  6B62               	clrf	98,b	;volatile
 23742                           
 23743                           ; BSR set to: 58
 23744                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 23745  017738  6B72               	clrf	114,b	;volatile
 23746                           
 23747                           ; BSR set to: 58
 23748                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 23749  01773A  6943               	setf	67,b	;volatile
 23750                           
 23751                           ; BSR set to: 58
 23752                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 23753  01773C  6953               	setf	83,b	;volatile
 23754                           
 23755                           ; BSR set to: 58
 23756                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 23757  01773E  6963               	setf	99,b	;volatile
 23758                           
 23759                           ; BSR set to: 58
 23760                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 23761  017740  6973               	setf	115,b	;volatile
 23762                           
 23763                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 23764  017742  0E07               	movlw	7
 23765  017744  6F83               	movwf	131,b	;volatile
 23766                           
 23767                           ; BSR set to: 58
 23768                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 23769  017746  6993               	setf	147,b	;volatile
 23770                           
 23771                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 23772  017748  0E0F               	movlw	15
 23773  01774A  6FE8               	movwf	232,b	;volatile
 23774                           
 23775                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 23776  01774C  0E13               	movlw	19
 23777  01774E  6FDE               	movwf	222,b	;volatile
 23778                           
 23779                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 23780  017750  0E16               	movlw	22
 23781  017752  6F0E               	movwf	14,b	;volatile
 23782                           
 23783                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 23784  017754  0E1E               	movlw	30
 23785  017756  6F13               	movwf	19,b	;volatile
 23786                           
 23787                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 23788  017758  0E08               	movlw	8
 23789  01775A  6FC0               	movwf	192,b	;volatile
 23790                           
 23791                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 23792  01775C  0E10               	movlw	16
 23793  01775E  6F19               	movwf	25,b	;volatile
 23794                           
 23795                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 23796  017760  0E09               	movlw	9
 23797  017762  6FC1               	movwf	193,b	;volatile
 23798                           
 23799                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 23800  017764  0E1F               	movlw	31
 23801  017766  6F15               	movwf	21,b	;volatile
 23802                           
 23803                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 23804  017768  0E13               	movlw	19
 23805  01776A  6F16               	movwf	22,b	;volatile
 23806                           
 23807                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 23808  01776C  0E17               	movlw	23
 23809  01776E  6FE5               	movwf	229,b	;volatile
 23810                           
 23811                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 23812  017770  0E14               	movlw	20
 23813  017772  6FDF               	movwf	223,b	;volatile
 23814                           
 23815                           ; BSR set to: 58
 23816                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 23817  017774  0012               	return		;funcret
 23818  017776                     __end_of_PIN_MANAGER_Initialize:
 23819                           	opt callstack 0
 23820                           
 23821 ;; *************** function _OSCILLATOR_Initialize *****************
 23822 ;; Defined at:
 23823 ;;		line 71 in file "mcc_generated_files/mcc.c"
 23824 ;; Parameters:    Size  Location     Type
 23825 ;;		None
 23826 ;; Auto vars:     Size  Location     Type
 23827 ;;		None
 23828 ;; Return value:  Size  Location     Type
 23829 ;;                  1  [STACK] void 
 23830 ;; Registers used:
 23831 ;;		wreg, status,2
 23832 ;; Tracked objects:
 23833 ;;		On entry : 3F/3A
 23834 ;;		On exit  : 3F/39
 23835 ;;		Unchanged: 0/0
 23836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23841 ;;Total ram usage:        0 bytes
 23842 ;; Hardware stack levels used:    1
 23843 ;; Hardware stack levels required when called:    6
 23844 ;; This function calls:
 23845 ;;		Nothing
 23846 ;; This function is called by:
 23847 ;;		_SYSTEM_Initialize
 23848 ;; This function uses a reentrant model
 23849 ;;
 23850                           
 23851                           	psect	text106
 23852  018AC2                     __ptext106:
 23853                           	opt callstack 0
 23854  018AC2                     _OSCILLATOR_Initialize:
 23855                           	opt callstack 23
 23856                           
 23857                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 23858                           
 23859                           ; BSR set to: 58
 23860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23861                           ;incstack = 0
 23862  018AC2  0E20               	movlw	32
 23863  018AC4  0139               	movlb	57	; () banked
 23864  018AC6  6FD9               	movwf	217,b	;volatile
 23865                           
 23866                           ; BSR set to: 57
 23867                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 23868  018AC8  6BDB               	clrf	219,b	;volatile
 23869                           
 23870                           ; BSR set to: 57
 23871                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 23872  018ACA  6BDD               	clrf	221,b	;volatile
 23873                           
 23874                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 23875  018ACC  0E02               	movlw	2
 23876  018ACE  6FDF               	movwf	223,b	;volatile
 23877                           
 23878                           ; BSR set to: 57
 23879                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 23880  018AD0  6BDE               	clrf	222,b	;volatile
 23881  018AD2                     l171:
 23882                           
 23883                           ; BSR set to: 57
 23884                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 23885  018AD2  B1DC               	btfsc	220,0,b	;volatile
 23886  018AD4  0012               	return	
 23887  018AD6  D7FD               	goto	l171
 23888  018AD8                     __end_of_OSCILLATOR_Initialize:
 23889                           	opt callstack 0
 23890                           
 23891 ;; *************** function _INTERRUPT_Initialize *****************
 23892 ;; Defined at:
 23893 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23894 ;; Parameters:    Size  Location     Type
 23895 ;;		None
 23896 ;; Auto vars:     Size  Location     Type
 23897 ;;  state           1  [STACK] _Bool 
 23898 ;; Return value:  Size  Location     Type
 23899 ;;                  1  [STACK] void 
 23900 ;; Registers used:
 23901 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 23902 ;; Tracked objects:
 23903 ;;		On entry : 0/0
 23904 ;;		On exit  : 3F/39
 23905 ;;		Unchanged: 0/0
 23906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23911 ;;Total ram usage:        0 bytes
 23912 ;; Hardware stack levels used:    1
 23913 ;; Hardware stack levels required when called:    6
 23914 ;; This function calls:
 23915 ;;		Nothing
 23916 ;; This function is called by:
 23917 ;;		_SYSTEM_Initialize
 23918 ;; This function uses a reentrant model
 23919 ;;
 23920                           
 23921                           	psect	text107
 23922  017BCC                     __ptext107:
 23923                           	opt callstack 0
 23924  017BCC                     _INTERRUPT_Initialize:
 23925                           	opt callstack 0
 23926                           
 23927                           ; BSR set to: 57
 23928                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23929  017BCC  52E6               	movf	postinc1,f,c
 23930                           
 23931                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 23932                           
 23933                           ;incstack = 0
 23934  017BCE  8AD2               	bsf	210,5,c	;volatile
 23935                           
 23936                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 23937  017BD0  AED2               	btfss	16338,7,c	;volatile
 23938  017BD2  D003               	goto	u8010
 23939  017BD4  6A3D               	clrf	(btemp+11)^0,c
 23940  017BD6  2A3D               	incf	(btemp+11)^0,f,c
 23941  017BD8  D001               	goto	u8028
 23942  017BDA                     u8010:
 23943  017BDA  6A3D               	clrf	(btemp+11)^0,c
 23944  017BDC                     u8028:
 23945                           
 23946                           ;stkvar	_state @ sp[(-1)+0]
 23947  017BDC  0EFF               	movlw	-1
 23948  017BDE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 23949                           
 23950                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23951  017BE4  9ED2               	bcf	16338,7,c	;volatile
 23952                           
 23953                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23954  017BE6  0E55               	movlw	85
 23955  017BE8  6ED4               	movwf	212,c	;volatile
 23956                           
 23957                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23958  017BEA  0EAA               	movlw	170
 23959  017BEC  6ED4               	movwf	212,c	;volatile
 23960                           
 23961                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23962  017BEE  90D4               	bcf	212,0,c	;volatile
 23963                           
 23964                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23965  017BF0  0138               	movlb	56	; () banked
 23966  017BF2  6B9F               	clrf	159,b	;volatile
 23967                           
 23968                           ; BSR set to: 56
 23969                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23970  017BF4  6B9E               	clrf	158,b	;volatile
 23971                           
 23972                           ; BSR set to: 56
 23973                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23974  017BF6  0E08               	movlw	8
 23975  017BF8  6F9D               	movwf	157,b	;volatile
 23976                           
 23977                           ; BSR set to: 56
 23978                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23979  017BFA  0E55               	movlw	85
 23980  017BFC  6ED4               	movwf	212,c	;volatile
 23981                           
 23982                           ; BSR set to: 56
 23983                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 23984  017BFE  0EAA               	movlw	170
 23985  017C00  6ED4               	movwf	212,c	;volatile
 23986                           
 23987                           ; BSR set to: 56
 23988                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 23989  017C02  80D4               	bsf	212,0,c	;volatile
 23990                           
 23991                           ; BSR set to: 56
 23992                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 23993                           ;stkvar	_state @ sp[(-1)+0]
 23994  017C04  0EFF               	movlw	-1
 23995  017C06  B0E3               	btfsc	plusw1,0,c
 23996  017C08  D002               	bra	u8035
 23997  017C0A  9ED2               	bcf	16338,7,c	;volatile
 23998  017C0C  D001               	bra	u8036
 23999  017C0E                     u8035:
 24000  017C0E  8ED2               	bsf	16338,7,c	;volatile
 24001  017C10                     u8036:
 24002                           
 24003                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24004  017C10  0139               	movlb	57	; () banked
 24005  017C12  8782               	bsf	130,3,b	;volatile
 24006                           
 24007                           ; BSR set to: 57
 24008                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24009  017C14  8382               	bsf	130,1,b	;volatile
 24010                           
 24011                           ; BSR set to: 57
 24012                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24013  017C16  8182               	bsf	130,0,b	;volatile
 24014                           
 24015                           ; BSR set to: 57
 24016                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24017  017C18  8582               	bsf	130,2,b	;volatile
 24018                           
 24019                           ; BSR set to: 57
 24020                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24021  017C1A  8786               	bsf	134,3,b	;volatile
 24022                           
 24023                           ; BSR set to: 57
 24024                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24025  017C1C  8586               	bsf	134,2,b	;volatile
 24026                           
 24027                           ; BSR set to: 57
 24028                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24029  017C1E  8983               	bsf	131,4,b	;volatile
 24030                           
 24031                           ; BSR set to: 57
 24032                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24033  017C20  8783               	bsf	131,3,b	;volatile
 24034                           
 24035                           ; BSR set to: 57
 24036                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24037  017C22  8181               	bsf	129,0,b	;volatile
 24038                           
 24039                           ; BSR set to: 57
 24040                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 24041  017C24  9185               	bcf	133,0,b	;volatile
 24042                           
 24043                           ; BSR set to: 57
 24044                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24045  017C26  8189               	bsf	137,0,b	;volatile
 24046                           
 24047                           ; BSR set to: 57
 24048                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24049  017C28  9D88               	bcf	136,6,b	;volatile
 24050                           
 24051                           ; BSR set to: 57
 24052                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24053  017C2A  8581               	bsf	129,2,b	;volatile
 24054                           
 24055                           ; BSR set to: 57
 24056                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24057  017C2C  8781               	bsf	129,3,b	;volatile
 24058                           
 24059                           ; BSR set to: 57
 24060                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24061  017C2E  52E5               	movf	postdec1,f,c
 24062  017C30  0012               	return		;funcret
 24063  017C32                     __end_of_INTERRUPT_Initialize:
 24064                           	opt callstack 0
 24065                           
 24066 ;; *************** function _FVR_Initialize *****************
 24067 ;; Defined at:
 24068 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24069 ;; Parameters:    Size  Location     Type
 24070 ;;		None
 24071 ;; Auto vars:     Size  Location     Type
 24072 ;;		None
 24073 ;; Return value:  Size  Location     Type
 24074 ;;                  1  [STACK] void 
 24075 ;; Registers used:
 24076 ;;		wreg, status,2
 24077 ;; Tracked objects:
 24078 ;;		On entry : 3F/39
 24079 ;;		On exit  : 3F/3E
 24080 ;;		Unchanged: 0/0
 24081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24086 ;;Total ram usage:        0 bytes
 24087 ;; Hardware stack levels used:    1
 24088 ;; Hardware stack levels required when called:    6
 24089 ;; This function calls:
 24090 ;;		Nothing
 24091 ;; This function is called by:
 24092 ;;		_SYSTEM_Initialize
 24093 ;; This function uses a reentrant model
 24094 ;;
 24095                           
 24096                           	psect	text108
 24097  018B96                     __ptext108:
 24098                           	opt callstack 0
 24099  018B96                     _FVR_Initialize:
 24100                           	opt callstack 23
 24101                           
 24102                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24103                           
 24104                           ; BSR set to: 57
 24105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24106                           ;incstack = 0
 24107  018B96  0EAF               	movlw	175
 24108  018B98  013E               	movlb	62	; () banked
 24109  018B9A  6FC1               	movwf	193,b	;volatile
 24110                           
 24111                           ; BSR set to: 62
 24112                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24113  018B9C  0012               	return		;funcret
 24114  018B9E                     __end_of_FVR_Initialize:
 24115                           	opt callstack 0
 24116                           
 24117 ;; *************** function _EXT_INT_Initialize *****************
 24118 ;; Defined at:
 24119 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 24120 ;; Parameters:    Size  Location     Type
 24121 ;;		None
 24122 ;; Auto vars:     Size  Location     Type
 24123 ;;		None
 24124 ;; Return value:  Size  Location     Type
 24125 ;;                  1  [STACK] void 
 24126 ;; Registers used:
 24127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24128 ;; Tracked objects:
 24129 ;;		On entry : 3F/3F
 24130 ;;		On exit  : 3F/39
 24131 ;;		Unchanged: 0/0
 24132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24137 ;;Total ram usage:        0 bytes
 24138 ;; Hardware stack levels used:    1
 24139 ;; Hardware stack levels required when called:    7
 24140 ;; This function calls:
 24141 ;;		_INT0_SetInterruptHandler
 24142 ;;		_INT1_SetInterruptHandler
 24143 ;; This function is called by:
 24144 ;;		_SYSTEM_Initialize
 24145 ;; This function uses a reentrant model
 24146 ;;
 24147                           
 24148                           	psect	text109
 24149  01838E                     __ptext109:
 24150                           	opt callstack 0
 24151  01838E                     _EXT_INT_Initialize:
 24152                           	opt callstack 22
 24153                           
 24154                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 24155                           
 24156                           ; BSR set to: 62
 24157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24158                           ;incstack = 0
 24159  01838E  0139               	movlb	57	; () banked
 24160  018390  91A1               	bcf	161,0,b	;volatile
 24161                           
 24162                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 24163  018392  90D2               	bcf	210,0,c	;volatile
 24164                           
 24165                           ; BSR set to: 57
 24166                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24167  018394  0EB8               	movlw	low _INT0_DefaultInterruptHandler
 24168  018396  6EE6               	movwf	postinc1,c
 24169  018398  0E8B               	movlw	high _INT0_DefaultInterruptHandler
 24170  01839A  6EE6               	movwf	postinc1,c
 24171  01839C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24172  01839E  6EE6               	movwf	postinc1,c
 24173  0183A0  EC8B  F0C3         	call	_INT0_SetInterruptHandler	;wreg free
 24174                           
 24175                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 24176  0183A4  0139               	movlb	57	; () banked
 24177  0183A6  8191               	bsf	145,0,b	;volatile
 24178                           
 24179                           ; BSR set to: 57
 24180                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 24181  0183A8  91A5               	bcf	165,0,b	;volatile
 24182                           
 24183                           ; BSR set to: 57
 24184                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 24185  0183AA  92D2               	bcf	210,1,c	;volatile
 24186                           
 24187                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24188  0183AC  0EB6               	movlw	low _INT1_DefaultInterruptHandler
 24189  0183AE  6EE6               	movwf	postinc1,c
 24190  0183B0  0E8B               	movlw	high _INT1_DefaultInterruptHandler
 24191  0183B2  6EE6               	movwf	postinc1,c
 24192  0183B4  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24193  0183B6  6EE6               	movwf	postinc1,c
 24194  0183B8  EC77  F0C3         	call	_INT1_SetInterruptHandler	;wreg free
 24195                           
 24196                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 24197  0183BC  0139               	movlb	57	; () banked
 24198  0183BE  8195               	bsf	149,0,b	;volatile
 24199                           
 24200                           ; BSR set to: 57
 24201                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24202  0183C0  0012               	return		;funcret
 24203  0183C2                     __end_of_EXT_INT_Initialize:
 24204                           	opt callstack 0
 24205                           
 24206 ;; *************** function _INT1_SetInterruptHandler *****************
 24207 ;; Defined at:
 24208 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 24209 ;; Parameters:    Size  Location     Type
 24210 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24211 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 24212 ;; Auto vars:     Size  Location     Type
 24213 ;;		None
 24214 ;; Return value:  Size  Location     Type
 24215 ;;                  1  [STACK] void 
 24216 ;; Registers used:
 24217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24218 ;; Tracked objects:
 24219 ;;		On entry : 3F/39
 24220 ;;		On exit  : 0/0
 24221 ;;		Unchanged: 0/0
 24222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24227 ;;Total ram usage:        0 bytes
 24228 ;; Hardware stack levels used:    1
 24229 ;; Hardware stack levels required when called:    6
 24230 ;; This function calls:
 24231 ;;		Nothing
 24232 ;; This function is called by:
 24233 ;;		_EXT_INT_Initialize
 24234 ;;		_start_switch_handler
 24235 ;; This function uses a reentrant model
 24236 ;;
 24237                           
 24238                           	psect	text110
 24239  0186EE                     __ptext110:
 24240                           	opt callstack 0
 24241  0186EE                     _INT1_SetInterruptHandler:
 24242                           	opt callstack 23
 24243                           
 24244                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24245                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24246                           
 24247                           ; BSR set to: 57
 24248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24249                           ;incstack = 0
 24250  0186EE  50E1               	movf	fsr1l,w,c
 24251  0186F0  0FFD               	addlw	-3
 24252  0186F2  6ED9               	movwf	fsr2l,c
 24253  0186F4  50E2               	movf	fsr1h,w,c
 24254  0186F6  6EDA               	movwf	fsr2h,c
 24255  0186F8  0EFF               	movlw	255
 24256  0186FA  22DA               	addwfc	fsr2h,f,c
 24257  0186FC  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 24258  018702  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 24259  018708  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 24260                           
 24261                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24262  01870E  52E5               	movf	postdec1,f,c
 24263  018710  52E5               	movf	postdec1,f,c
 24264  018712  52E5               	movf	postdec1,f,c
 24265  018714  0012               	return		;funcret
 24266  018716                     __end_of_INT1_SetInterruptHandler:
 24267                           	opt callstack 0
 24268                           
 24269 ;; *************** function _INT0_SetInterruptHandler *****************
 24270 ;; Defined at:
 24271 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24272 ;; Parameters:    Size  Location     Type
 24273 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24274 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24275 ;; Auto vars:     Size  Location     Type
 24276 ;;		None
 24277 ;; Return value:  Size  Location     Type
 24278 ;;                  1  [STACK] void 
 24279 ;; Registers used:
 24280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24281 ;; Tracked objects:
 24282 ;;		On entry : 3F/39
 24283 ;;		On exit  : 0/0
 24284 ;;		Unchanged: 0/0
 24285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24290 ;;Total ram usage:        0 bytes
 24291 ;; Hardware stack levels used:    1
 24292 ;; Hardware stack levels required when called:    6
 24293 ;; This function calls:
 24294 ;;		Nothing
 24295 ;; This function is called by:
 24296 ;;		_EXT_INT_Initialize
 24297 ;; This function uses a reentrant model
 24298 ;;
 24299                           
 24300                           	psect	text111
 24301  018716                     __ptext111:
 24302                           	opt callstack 0
 24303  018716                     _INT0_SetInterruptHandler:
 24304                           	opt callstack 22
 24305                           
 24306                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24307                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24308                           
 24309                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24310                           ;incstack = 0
 24311  018716  50E1               	movf	fsr1l,w,c
 24312  018718  0FFD               	addlw	-3
 24313  01871A  6ED9               	movwf	fsr2l,c
 24314  01871C  50E2               	movf	fsr1h,w,c
 24315  01871E  6EDA               	movwf	fsr2h,c
 24316  018720  0EFF               	movlw	255
 24317  018722  22DA               	addwfc	fsr2h,f,c
 24318  018724  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 24319  01872A  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 24320  018730  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 24321                           
 24322                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24323  018736  52E5               	movf	postdec1,f,c
 24324  018738  52E5               	movf	postdec1,f,c
 24325  01873A  52E5               	movf	postdec1,f,c
 24326  01873C  0012               	return		;funcret
 24327  01873E                     __end_of_INT0_SetInterruptHandler:
 24328                           	opt callstack 0
 24329                           
 24330 ;; *************** function _DMA2_Initialize *****************
 24331 ;; Defined at:
 24332 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24333 ;; Parameters:    Size  Location     Type
 24334 ;;		None
 24335 ;; Auto vars:     Size  Location     Type
 24336 ;;		None
 24337 ;; Return value:  Size  Location     Type
 24338 ;;                  1  [STACK] void 
 24339 ;; Registers used:
 24340 ;;		wreg, status,2
 24341 ;; Tracked objects:
 24342 ;;		On entry : 3F/3D
 24343 ;;		On exit  : 3F/3B
 24344 ;;		Unchanged: 0/0
 24345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24350 ;;Total ram usage:        0 bytes
 24351 ;; Hardware stack levels used:    1
 24352 ;; Hardware stack levels required when called:    6
 24353 ;; This function calls:
 24354 ;;		Nothing
 24355 ;; This function is called by:
 24356 ;;		_SYSTEM_Initialize
 24357 ;; This function uses a reentrant model
 24358 ;;
 24359                           
 24360                           	psect	text112
 24361  017ED2                     __ptext112:
 24362                           	opt callstack 0
 24363  017ED2                     _DMA2_Initialize:
 24364                           	opt callstack 23
 24365                           
 24366                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24367                           
 24368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24369                           ;incstack = 0
 24370  017ED2  0E00               	movlw	0
 24371  017ED4  013B               	movlb	59	; () banked
 24372  017ED6  6FD9               	movwf	217,b	;volatile
 24373  017ED8  0E10               	movlw	16
 24374  017EDA  6FDA               	movwf	218,b	;volatile
 24375  017EDC  0E00               	movlw	0
 24376  017EDE  6FDB               	movwf	219,b	;volatile
 24377                           
 24378                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24379  017EE0  0E3F               	movlw	63
 24380  017EE2  6FD1               	movwf	209,b	;volatile
 24381  017EE4  0EBB               	movlw	187
 24382  017EE6  6FD0               	movwf	208,b	;volatile
 24383                           
 24384                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24385  017EE8  0E03               	movlw	3
 24386  017EEA  6FDD               	movwf	221,b	;volatile
 24387                           
 24388                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24389  017EEC  0E00               	movlw	0
 24390  017EEE  6FD8               	movwf	216,b	;volatile
 24391  017EF0  0E01               	movlw	1
 24392  017EF2  6FD7               	movwf	215,b	;volatile
 24393                           
 24394                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24395  017EF4  0E00               	movlw	0
 24396  017EF6  6FCF               	movwf	207,b	;volatile
 24397  017EF8  0E01               	movlw	1
 24398  017EFA  6FCE               	movwf	206,b	;volatile
 24399                           
 24400                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24401  017EFC  0E46               	movlw	70
 24402  017EFE  6FDF               	movwf	223,b	;volatile
 24403                           
 24404                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24405  017F00  0E3D               	movlw	61
 24406  017F02  6FDE               	movwf	222,b	;volatile
 24407                           
 24408                           ; BSR set to: 59
 24409                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24410  017F04  0139               	movlb	57	; () banked
 24411  017F06  97A5               	bcf	165,3,b	;volatile
 24412                           
 24413                           ; BSR set to: 57
 24414                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24415  017F08  95A5               	bcf	165,2,b	;volatile
 24416                           
 24417                           ; BSR set to: 57
 24418                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24419  017F0A  9BA5               	bcf	165,5,b	;volatile
 24420                           
 24421                           ; BSR set to: 57
 24422                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24423  017F0C  99A5               	bcf	165,4,b	;volatile
 24424                           
 24425                           ; BSR set to: 57
 24426                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24427  017F0E  9795               	bcf	149,3,b	;volatile
 24428                           
 24429                           ; BSR set to: 57
 24430                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24431  017F10  9595               	bcf	149,2,b	;volatile
 24432                           
 24433                           ; BSR set to: 57
 24434                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24435  017F12  9B95               	bcf	149,5,b	;volatile
 24436                           
 24437                           ; BSR set to: 57
 24438                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24439  017F14  9995               	bcf	149,4,b	;volatile
 24440  017F16  9ED2               	bcf	16338,7,c	;# 
 24441  017F18  0139               	banksel	14831	;# 
 24442  017F1A  0E55               	movlw	85	;# 
 24443  017F1C  6FEF               	movwf	14831,b	;# 
 24444  017F1E  0EAA               	movlw	170	;# 
 24445  017F20  6FEF               	movwf	14831,b	;# 
 24446  017F22  81EF               	bsf	14831,0,b	;# 
 24447  017F24  8ED2               	bsf	16338,7,c	;# 
 24448                           
 24449                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24450  017F26  013B               	movlb	59	; () banked
 24451  017F28  6BDC               	clrf	220,b	;volatile
 24452                           
 24453                           ; BSR set to: 59
 24454                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24455  017F2A  0012               	return		;funcret
 24456  017F2C                     __end_of_DMA2_Initialize:
 24457                           	opt callstack 0
 24458                           
 24459 ;; *************** function _DMA1_Initialize *****************
 24460 ;; Defined at:
 24461 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24462 ;; Parameters:    Size  Location     Type
 24463 ;;		None
 24464 ;; Auto vars:     Size  Location     Type
 24465 ;;		None
 24466 ;; Return value:  Size  Location     Type
 24467 ;;                  1  [STACK] void 
 24468 ;; Registers used:
 24469 ;;		wreg, status,2
 24470 ;; Tracked objects:
 24471 ;;		On entry : 3F/3B
 24472 ;;		On exit  : 3F/3B
 24473 ;;		Unchanged: 0/0
 24474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24479 ;;Total ram usage:        0 bytes
 24480 ;; Hardware stack levels used:    1
 24481 ;; Hardware stack levels required when called:    6
 24482 ;; This function calls:
 24483 ;;		Nothing
 24484 ;; This function is called by:
 24485 ;;		_SYSTEM_Initialize
 24486 ;; This function uses a reentrant model
 24487 ;;
 24488                           
 24489                           	psect	text113
 24490  017A8E                     __ptext113:
 24491                           	opt callstack 0
 24492  017A8E                     _DMA1_Initialize:
 24493                           	opt callstack 23
 24494                           
 24495                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24496                           
 24497                           ; BSR set to: 59
 24498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24499                           ;incstack = 0
 24500  017A8E  0E00               	movlw	0
 24501  017A90  013B               	movlb	59	; () banked
 24502  017A92  6FF9               	movwf	249,b	;volatile
 24503  017A94  0E10               	movlw	16
 24504  017A96  6FFA               	movwf	250,b	;volatile
 24505  017A98  0E00               	movlw	0
 24506  017A9A  6FFB               	movwf	251,b	;volatile
 24507                           
 24508                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24509  017A9C  0E3D               	movlw	61
 24510  017A9E  6FF1               	movwf	241,b	;volatile
 24511  017AA0  0E11               	movlw	17
 24512  017AA2  6FF0               	movwf	240,b	;volatile
 24513                           
 24514                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24515  017AA4  0E03               	movlw	3
 24516  017AA6  6FFD               	movwf	253,b	;volatile
 24517                           
 24518                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24519  017AA8  0E00               	movlw	0
 24520  017AAA  6FF8               	movwf	248,b	;volatile
 24521  017AAC  0E01               	movlw	1
 24522  017AAE  6FF7               	movwf	247,b	;volatile
 24523                           
 24524                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24525  017AB0  0E00               	movlw	0
 24526  017AB2  6FEF               	movwf	239,b	;volatile
 24527  017AB4  0E01               	movlw	1
 24528  017AB6  6FEE               	movwf	238,b	;volatile
 24529                           
 24530                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24531  017AB8  0E15               	movlw	21
 24532  017ABA  6FFF               	movwf	255,b	;volatile
 24533                           
 24534                           ; BSR set to: 59
 24535                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24536  017ABC  6BFE               	clrf	254,b	;volatile
 24537                           
 24538                           ; BSR set to: 59
 24539                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24540  017ABE  0139               	movlb	57	; () banked
 24541  017AC0  93A2               	bcf	162,1,b	;volatile
 24542                           
 24543                           ; BSR set to: 57
 24544                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24545  017AC2  91A2               	bcf	162,0,b	;volatile
 24546                           
 24547                           ; BSR set to: 57
 24548                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24549  017AC4  97A2               	bcf	162,3,b	;volatile
 24550                           
 24551                           ; BSR set to: 57
 24552                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24553  017AC6  95A2               	bcf	162,2,b	;volatile
 24554                           
 24555                           ; BSR set to: 57
 24556                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24557  017AC8  8392               	bsf	146,1,b	;volatile
 24558                           
 24559                           ; BSR set to: 57
 24560                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24561  017ACA  8192               	bsf	146,0,b	;volatile
 24562                           
 24563                           ; BSR set to: 57
 24564                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24565  017ACC  8792               	bsf	146,3,b	;volatile
 24566                           
 24567                           ; BSR set to: 57
 24568                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24569  017ACE  8592               	bsf	146,2,b	;volatile
 24570                           
 24571                           ; BSR set to: 57
 24572                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24573  017AD0  6BF1               	clrf	241,b	;volatile
 24574                           
 24575                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24576  017AD2  0E01               	movlw	1
 24577  017AD4  6FF2               	movwf	242,b	;volatile
 24578                           
 24579                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24580  017AD6  0E04               	movlw	4
 24581  017AD8  6FF3               	movwf	243,b	;volatile
 24582                           
 24583                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24584  017ADA  0E02               	movlw	2
 24585  017ADC  6FF4               	movwf	244,b	;volatile
 24586                           
 24587                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24588  017ADE  0E03               	movlw	3
 24589  017AE0  6FF7               	movwf	247,b	;volatile
 24590  017AE2  9ED2               	bcf	16338,7,c	;# 
 24591  017AE4  0139               	banksel	14831	;# 
 24592  017AE6  0E55               	movlw	85	;# 
 24593  017AE8  6FEF               	movwf	14831,b	;# 
 24594  017AEA  0EAA               	movlw	170	;# 
 24595  017AEC  6FEF               	movwf	14831,b	;# 
 24596  017AEE  81EF               	bsf	14831,0,b	;# 
 24597  017AF0  8ED2               	bsf	16338,7,c	;# 
 24598                           
 24599                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24600  017AF2  013B               	movlb	59	; () banked
 24601  017AF4  6BFC               	clrf	252,b	;volatile
 24602                           
 24603                           ; BSR set to: 59
 24604                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24605  017AF6  0012               	return		;funcret
 24606  017AF8                     __end_of_DMA1_Initialize:
 24607                           	opt callstack 0
 24608                           
 24609 ;; *************** function _CLKREF_Initialize *****************
 24610 ;; Defined at:
 24611 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24612 ;; Parameters:    Size  Location     Type
 24613 ;;		None
 24614 ;; Auto vars:     Size  Location     Type
 24615 ;;		None
 24616 ;; Return value:  Size  Location     Type
 24617 ;;                  1  [STACK] void 
 24618 ;; Registers used:
 24619 ;;		wreg, status,2
 24620 ;; Tracked objects:
 24621 ;;		On entry : 3F/3B
 24622 ;;		On exit  : 3F/3C
 24623 ;;		Unchanged: 0/0
 24624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24629 ;;Total ram usage:        0 bytes
 24630 ;; Hardware stack levels used:    1
 24631 ;; Hardware stack levels required when called:    6
 24632 ;; This function calls:
 24633 ;;		Nothing
 24634 ;; This function is called by:
 24635 ;;		_SYSTEM_Initialize
 24636 ;; This function uses a reentrant model
 24637 ;;
 24638                           
 24639                           	psect	text114
 24640  018B4A                     __ptext114:
 24641                           	opt callstack 0
 24642  018B4A                     _CLKREF_Initialize:
 24643                           	opt callstack 23
 24644                           
 24645                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24646                           
 24647                           ; BSR set to: 59
 24648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24649                           ;incstack = 0
 24650  018B4A  013C               	movlb	60	; () banked
 24651  018B4C  6BE6               	clrf	230,b	;volatile
 24652                           
 24653                           ; BSR set to: 60
 24654                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24655  018B4E  0E94               	movlw	148
 24656  018B50  6FE5               	movwf	229,b	;volatile
 24657                           
 24658                           ; BSR set to: 60
 24659                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24660  018B52  0012               	return		;funcret
 24661  018B54                     __end_of_CLKREF_Initialize:
 24662                           	opt callstack 0
 24663                           
 24664 ;; *************** function _ADCC_Initialize *****************
 24665 ;; Defined at:
 24666 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24667 ;; Parameters:    Size  Location     Type
 24668 ;;		None
 24669 ;; Auto vars:     Size  Location     Type
 24670 ;;		None
 24671 ;; Return value:  Size  Location     Type
 24672 ;;                  1  [STACK] void 
 24673 ;; Registers used:
 24674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24675 ;; Tracked objects:
 24676 ;;		On entry : 3F/3E
 24677 ;;		On exit  : 0/0
 24678 ;;		Unchanged: 0/0
 24679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24684 ;;Total ram usage:        0 bytes
 24685 ;; Hardware stack levels used:    1
 24686 ;; Hardware stack levels required when called:    7
 24687 ;; This function calls:
 24688 ;;		_ADCC_SetADIInterruptHandler
 24689 ;;		_ADCC_SetADTIInterruptHandler
 24690 ;; This function is called by:
 24691 ;;		_SYSTEM_Initialize
 24692 ;; This function uses a reentrant model
 24693 ;;
 24694                           
 24695                           	psect	text115
 24696  017AF8                     __ptext115:
 24697                           	opt callstack 0
 24698  017AF8                     _ADCC_Initialize:
 24699                           	opt callstack 22
 24700                           
 24701                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 24702                           
 24703                           ; BSR set to: 60
 24704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24705                           ;incstack = 0
 24706  017AF8  013E               	movlb	62	; () banked
 24707  017AFA  6BDE               	clrf	222,b	;volatile
 24708                           
 24709                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24710  017AFC  6BDF               	clrf	223,b	;volatile
 24711                           
 24712                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24713  017AFE  6BE0               	clrf	224,b	;volatile
 24714                           
 24715                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24716  017B00  6BE1               	clrf	225,b	;volatile
 24717                           
 24718                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 24719  017B02  6BE4               	clrf	228,b	;volatile
 24720                           
 24721                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 24722  017B04  6BE5               	clrf	229,b	;volatile
 24723                           
 24724                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 24725  017B06  6BEA               	clrf	234,b	;volatile
 24726                           
 24727                           ; BSR set to: 62
 24728                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 24729  017B08  0E40               	movlw	64
 24730  017B0A  6FEC               	movwf	236,b	;volatile
 24731                           
 24732                           ; BSR set to: 62
 24733                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 24734  017B0C  6BF1               	clrf	241,b	;volatile
 24735                           
 24736                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 24737  017B0E  0E20               	movlw	32
 24738  017B10  6FF3               	movwf	243,b	;volatile
 24739                           
 24740                           ; BSR set to: 62
 24741                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 24742  017B12  6BF4               	clrf	244,b	;volatile
 24743                           
 24744                           ; BSR set to: 62
 24745                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 24746  017B14  6BF5               	clrf	245,b	;volatile
 24747                           
 24748                           ; BSR set to: 62
 24749                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 24750  017B16  6BF6               	clrf	246,b	;volatile
 24751                           
 24752                           ; BSR set to: 62
 24753                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 24754  017B18  6BF7               	clrf	247,b	;volatile
 24755                           
 24756                           ; BSR set to: 62
 24757                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 24758  017B1A  6BF9               	clrf	249,b	;volatile
 24759                           
 24760                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 24761  017B1C  0E5B               	movlw	91
 24762  017B1E  6FFA               	movwf	250,b	;volatile
 24763                           
 24764                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 24765  017B20  0E27               	movlw	39
 24766  017B22  6FFB               	movwf	251,b	;volatile
 24767                           
 24768                           ; BSR set to: 62
 24769                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 24770  017B24  6BFC               	clrf	252,b	;volatile
 24771                           
 24772                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 24773  017B26  0E02               	movlw	2
 24774  017B28  6FFD               	movwf	253,b	;volatile
 24775                           
 24776                           ; BSR set to: 62
 24777                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 24778  017B2A  6BFE               	clrf	254,b	;volatile
 24779                           
 24780                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 24781  017B2C  0E07               	movlw	7
 24782  017B2E  6FFF               	movwf	255,b	;volatile
 24783                           
 24784                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 24785  017B30  0E84               	movlw	132
 24786  017B32  6FF8               	movwf	248,b	;volatile
 24787                           
 24788                           ; BSR set to: 62
 24789                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 24790  017B34  0139               	movlb	57	; () banked
 24791  017B36  95A1               	bcf	161,2,b	;volatile
 24792                           
 24793                           ; BSR set to: 57
 24794                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 24795  017B38  8591               	bsf	145,2,b	;volatile
 24796                           
 24797                           ; BSR set to: 57
 24798                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 24799  017B3A  0EBA               	movlw	low _ADCC_DefaultInterruptHandler
 24800  017B3C  6EE6               	movwf	postinc1,c
 24801  017B3E  0E8B               	movlw	high _ADCC_DefaultInterruptHandler
 24802  017B40  6EE6               	movwf	postinc1,c
 24803  017B42  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24804  017B44  6EE6               	movwf	postinc1,c
 24805  017B46  ECB3  F0C3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 24806                           
 24807                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 24808  017B4A  0139               	movlb	57	; () banked
 24809  017B4C  97A1               	bcf	161,3,b	;volatile
 24810                           
 24811                           ; BSR set to: 57
 24812                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 24813  017B4E  8791               	bsf	145,3,b	;volatile
 24814                           
 24815                           ; BSR set to: 57
 24816                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 24817  017B50  0EBA               	movlw	low _ADCC_DefaultInterruptHandler
 24818  017B52  6EE6               	movwf	postinc1,c
 24819  017B54  0E8B               	movlw	high _ADCC_DefaultInterruptHandler
 24820  017B56  6EE6               	movwf	postinc1,c
 24821  017B58  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24822  017B5A  6EE6               	movwf	postinc1,c
 24823  017B5C  EC9F  F0C3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24824                           
 24825                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24826  017B60  0012               	return		;funcret
 24827  017B62                     __end_of_ADCC_Initialize:
 24828                           	opt callstack 0
 24829                           
 24830 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24831 ;; Defined at:
 24832 ;;		line 336 in file "mcc_generated_files/adcc.c"
 24833 ;; Parameters:    Size  Location     Type
 24834 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24835 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 24836 ;; Auto vars:     Size  Location     Type
 24837 ;;		None
 24838 ;; Return value:  Size  Location     Type
 24839 ;;                  1  [STACK] void 
 24840 ;; Registers used:
 24841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24842 ;; Tracked objects:
 24843 ;;		On entry : 0/0
 24844 ;;		On exit  : 0/0
 24845 ;;		Unchanged: 0/0
 24846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24851 ;;Total ram usage:        0 bytes
 24852 ;; Hardware stack levels used:    1
 24853 ;; Hardware stack levels required when called:    6
 24854 ;; This function calls:
 24855 ;;		Nothing
 24856 ;; This function is called by:
 24857 ;;		_ADCC_Initialize
 24858 ;;		_start_adc_scan
 24859 ;; This function uses a reentrant model
 24860 ;;
 24861                           
 24862                           	psect	text116
 24863  01873E                     __ptext116:
 24864                           	opt callstack 0
 24865  01873E                     _ADCC_SetADTIInterruptHandler:
 24866                           	opt callstack 23
 24867                           
 24868                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 24869                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24870                           
 24871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24872                           ;incstack = 0
 24873  01873E  50E1               	movf	fsr1l,w,c
 24874  018740  0FFD               	addlw	-3
 24875  018742  6ED9               	movwf	fsr2l,c
 24876  018744  50E2               	movf	fsr1h,w,c
 24877  018746  6EDA               	movwf	fsr2h,c
 24878  018748  0EFF               	movlw	255
 24879  01874A  22DA               	addwfc	fsr2h,f,c
 24880  01874C  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 24881  018752  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 24882  018758  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 24883                           
 24884                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 24885  01875E  52E5               	movf	postdec1,f,c
 24886  018760  52E5               	movf	postdec1,f,c
 24887  018762  52E5               	movf	postdec1,f,c
 24888  018764  0012               	return		;funcret
 24889  018766                     __end_of_ADCC_SetADTIInterruptHandler:
 24890                           	opt callstack 0
 24891                           
 24892 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 24893 ;; Defined at:
 24894 ;;		line 323 in file "mcc_generated_files/adcc.c"
 24895 ;; Parameters:    Size  Location     Type
 24896 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24897 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 24898 ;; Auto vars:     Size  Location     Type
 24899 ;;		None
 24900 ;; Return value:  Size  Location     Type
 24901 ;;                  1  [STACK] void 
 24902 ;; Registers used:
 24903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24904 ;; Tracked objects:
 24905 ;;		On entry : 6/0
 24906 ;;		On exit  : 0/0
 24907 ;;		Unchanged: 0/0
 24908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24913 ;;Total ram usage:        0 bytes
 24914 ;; Hardware stack levels used:    1
 24915 ;; Hardware stack levels required when called:    6
 24916 ;; This function calls:
 24917 ;;		Nothing
 24918 ;; This function is called by:
 24919 ;;		_ADCC_Initialize
 24920 ;;		_start_adc_scan
 24921 ;; This function uses a reentrant model
 24922 ;;
 24923                           
 24924                           	psect	text117
 24925  018766                     __ptext117:
 24926                           	opt callstack 0
 24927  018766                     _ADCC_SetADIInterruptHandler:
 24928                           	opt callstack 23
 24929                           
 24930                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 24931                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24932                           
 24933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24934                           ;incstack = 0
 24935  018766  50E1               	movf	fsr1l,w,c
 24936  018768  0FFD               	addlw	-3
 24937  01876A  6ED9               	movwf	fsr2l,c
 24938  01876C  50E2               	movf	fsr1h,w,c
 24939  01876E  6EDA               	movwf	fsr2h,c
 24940  018770  0EFF               	movlw	255
 24941  018772  22DA               	addwfc	fsr2h,f,c
 24942  018774  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 24943  01877A  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 24944  018780  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 24945                           
 24946                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24947  018786  52E5               	movf	postdec1,f,c
 24948  018788  52E5               	movf	postdec1,f,c
 24949  01878A  52E5               	movf	postdec1,f,c
 24950  01878C  0012               	return		;funcret
 24951  01878E                     __end_of_ADCC_SetADIInterruptHandler:
 24952                           	opt callstack 0
 24953                           
 24954 ;; *************** function _INT1_ISR *****************
 24955 ;; Defined at:
 24956 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24957 ;; Parameters:    Size  Location     Type
 24958 ;;		None
 24959 ;; Auto vars:     Size  Location     Type
 24960 ;;		None
 24961 ;; Return value:  Size  Location     Type
 24962 ;;                  1    wreg      void 
 24963 ;; Registers used:
 24964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24965 ;; Tracked objects:
 24966 ;;		On entry : 0/0
 24967 ;;		On exit  : 0/0
 24968 ;;		Unchanged: 0/0
 24969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24972 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24973 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24974 ;;Total ram usage:        4 bytes
 24975 ;; Hardware stack levels used:    1
 24976 ;; Hardware stack levels required when called:    5
 24977 ;; This function calls:
 24978 ;;		_INT1_CallBack
 24979 ;; This function is called by:
 24980 ;;		Interrupt level 1
 24981 ;; This function uses a non-reentrant model
 24982 ;;
 24983                           
 24984                           	psect	text118
 24985  01823C                     __ptext118:
 24986                           	opt callstack 0
 24987  01823C                     _INT1_ISR:
 24988                           	opt callstack 12
 24989                           
 24990                           ;incstack = 0
 24991  01823C  006F FF60  F0F6    	movff	status,??_INT1_ISR
 24992  018242  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 24993  018248  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 24994  01824E  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 24995  018254  EE16  F000         	lfsr	1,___intlo_sp
 24996                           
 24997                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 24998  018258  0139               	movlb	57	; () banked
 24999  01825A  91A5               	bcf	165,0,b	;volatile
 25000                           
 25001                           ; BSR set to: 57
 25002                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 25003  01825C  EC73  F0C4         	call	_INT1_CallBack	;wreg free
 25004  018260  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 25005  018266  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 25006  01826C  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 25007  018272  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 25008  018278  0011               	retfie		f
 25009  01827A                     __end_of_INT1_ISR:
 25010                           	opt callstack 0
 25011                           
 25012 ;; *************** function _INT1_CallBack *****************
 25013 ;; Defined at:
 25014 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 25015 ;; Parameters:    Size  Location     Type
 25016 ;;		None
 25017 ;; Auto vars:     Size  Location     Type
 25018 ;;		None
 25019 ;; Return value:  Size  Location     Type
 25020 ;;                  1  [STACK] void 
 25021 ;; Registers used:
 25022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25023 ;; Tracked objects:
 25024 ;;		On entry : 3F/39
 25025 ;;		On exit  : 0/0
 25026 ;;		Unchanged: 0/0
 25027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25032 ;;Total ram usage:        0 bytes
 25033 ;; Hardware stack levels used:    1
 25034 ;; Hardware stack levels required when called:    4
 25035 ;; This function calls:
 25036 ;;		Absolute function
 25037 ;;		_INT1_DefaultInterruptHandler
 25038 ;;		_switch_handler
 25039 ;; This function is called by:
 25040 ;;		_INT1_ISR
 25041 ;; This function uses a reentrant model
 25042 ;;
 25043                           
 25044                           	psect	text119
 25045  0188E6                     __ptext119:
 25046                           	opt callstack 0
 25047  0188E6                     _INT1_CallBack:
 25048                           	opt callstack 12
 25049                           
 25050                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 25051                           
 25052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25053                           ;incstack = 0
 25054  0188E6  5013               	movf	_INT1_InterruptHandler^0,w,c
 25055  0188E8  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25056  0188EA  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25057  0188EC  B4D8               	btfsc	status,2,c
 25058  0188EE  0012               	return	
 25059                           
 25060                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 25061  0188F0  D801               	call	u846_28
 25062  0188F2  0012               	return	
 25063  0188F4                     u846_28:
 25064  0188F4  0005               	push	
 25065  0188F6  6EFA               	movwf	pclath,c
 25066  0188F8  5013               	movf	_INT1_InterruptHandler^0,w,c
 25067  0188FA  6EFD               	movwf	tosl,c
 25068  0188FC  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25069  0188FE  6EFE               	movwf	tosh,c
 25070  018900  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25071  018902  6EFF               	movwf	tosu,c
 25072  018904  50FA               	movf	pclath,w,c
 25073  018906  0012               	return		;indir
 25074  018908                     __end_of_INT1_CallBack:
 25075                           	opt callstack 0
 25076                           
 25077 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25078 ;; Defined at:
 25079 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 25080 ;; Parameters:    Size  Location     Type
 25081 ;;		None
 25082 ;; Auto vars:     Size  Location     Type
 25083 ;;		None
 25084 ;; Return value:  Size  Location     Type
 25085 ;;                  1  [STACK] void 
 25086 ;; Registers used:
 25087 ;;		None
 25088 ;; Tracked objects:
 25089 ;;		On entry : 0/39
 25090 ;;		On exit  : 0/0
 25091 ;;		Unchanged: 0/0
 25092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25097 ;;Total ram usage:        0 bytes
 25098 ;; Hardware stack levels used:    1
 25099 ;; Hardware stack levels required when called:    3
 25100 ;; This function calls:
 25101 ;;		Nothing
 25102 ;; This function is called by:
 25103 ;;		_EXT_INT_Initialize
 25104 ;;		_INT1_CallBack
 25105 ;; This function uses a reentrant model
 25106 ;;
 25107                           
 25108                           	psect	text120
 25109  018BB6                     __ptext120:
 25110                           	opt callstack 0
 25111  018BB6                     _INT1_DefaultInterruptHandler:
 25112                           	opt callstack 12
 25113                           
 25114                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25115                           
 25116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25117                           ;incstack = 0
 25118  018BB6  0012               	return		;funcret
 25119  018BB8                     __end_of_INT1_DefaultInterruptHandler:
 25120                           	opt callstack 0
 25121                           
 25122 ;; *************** function _switch_handler *****************
 25123 ;; Defined at:
 25124 ;;		line 58 in file "dio.c"
 25125 ;; Parameters:    Size  Location     Type
 25126 ;;		None
 25127 ;; Auto vars:     Size  Location     Type
 25128 ;;  i               1  [STACK] unsigned char 
 25129 ;;  sw_value        1  [STACK] unsigned char 
 25130 ;; Return value:  Size  Location     Type
 25131 ;;                  1  [STACK] void 
 25132 ;; Registers used:
 25133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 25134 ;; Tracked objects:
 25135 ;;		On entry : 0/39
 25136 ;;		On exit  : 0/0
 25137 ;;		Unchanged: 0/0
 25138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25143 ;;Total ram usage:        0 bytes
 25144 ;; Hardware stack levels used:    1
 25145 ;; Hardware stack levels required when called:    3
 25146 ;; This function calls:
 25147 ;;		Nothing
 25148 ;; This function is called by:
 25149 ;;		_start_switch_handler
 25150 ;;		_INT1_CallBack
 25151 ;; This function uses a reentrant model
 25152 ;;
 25153                           
 25154                           	psect	text121
 25155  01663C                     __ptext121:
 25156                           	opt callstack 0
 25157  01663C                     _switch_handler:
 25158                           	opt callstack 0
 25159                           
 25160                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25161  01663C  52E6               	movf	postinc1,f,c
 25162  01663E  52E6               	movf	postinc1,f,c
 25163                           
 25164                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 25165                           ;stkvar	_i @ sp[(-2)+0]
 25166                           
 25167                           ;incstack = 0
 25168  016640  0EFE               	movlw	-2
 25169  016642  6AE3               	clrf	plusw1,c
 25170  016644  9EBD               	bcf	189,7,c	;volatile
 25171  016646  82BE               	bsf	190,1,c	;volatile
 25172                           
 25173                           ;dio.c: 72:  __nop();
 25174  016648  F000               	nop	
 25175                           
 25176                           ;dio.c: 73:  __nop();
 25177  01664A  F000               	nop	
 25178                           
 25179                           ;dio.c: 74:  __nop();
 25180  01664C  F000               	nop	
 25181  01664E  D019               	goto	l8815
 25182  016650                     l8803:
 25183                           
 25184                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 25185  016650  A6CF               	btfss	207,3,c	;volatile
 25186  016652  D011               	goto	u832_20
 25187  016654  D00D               	goto	u832_21
 25188  016656                     u829_28:
 25189                           
 25190                           ;stkvar	_sw_value @ sp[(-2)+1]
 25191  016656  0EFF               	movlw	-1
 25192  016658  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 25193                           
 25194                           ;dio.c: 80:    break;
 25195  01665E  D027               	goto	l8817
 25196  016660                     l8805:
 25197                           
 25198                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 25199  016660  A4CF               	btfss	207,2,c	;volatile
 25200  016662  D009               	goto	u832_20
 25201  016664  D005               	goto	u832_21
 25202  016666                     l8807:
 25203                           
 25204                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 25205  016666  A2CF               	btfss	207,1,c	;volatile
 25206  016668  D006               	goto	u832_20
 25207  01666A  D002               	goto	u832_21
 25208  01666C                     l8809:
 25209                           
 25210                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 25211  01666C  A0CF               	btfss	207,0,c	;volatile
 25212  01666E  D003               	goto	u832_20
 25213  016670                     u832_21:
 25214  016670  6A3D               	clrf	(btemp+11)^0,c
 25215  016672  2A3D               	incf	(btemp+11)^0,f,c
 25216  016674  D7F0               	goto	u829_28
 25217  016676                     u832_20:
 25218  016676  6A3D               	clrf	(btemp+11)^0,c
 25219  016678  D7EE               	goto	u829_28
 25220  01667A                     l8811:
 25221                           
 25222                           ;dio.c: 91:    sw_value = 1;
 25223                           ;stkvar	_sw_value @ sp[(-2)+1]
 25224  01667A  0EFF               	movlw	-1
 25225  01667C  6AE3               	clrf	plusw1,c
 25226  01667E  2AE3               	incf	plusw1,f,c
 25227                           
 25228                           ;dio.c: 92:    break;
 25229  016680  D016               	goto	l8817
 25230  016682                     l8815:
 25231                           
 25232                           ;stkvar	_i @ sp[(-2)+0]
 25233  016682  0EFE               	movlw	-2
 25234  016684  50E3               	movf	plusw1,w,c
 25235  016686  6E3C               	movwf	(btemp+10)^0,c
 25236  016688  6A3D               	clrf	(btemp+11)^0,c
 25237                           
 25238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25239                           ; Switch size 1, requested type "simple"
 25240                           ; Number of cases is 1, Range of values is 0 to 0
 25241                           ; switch strategies available:
 25242                           ; Name         Instructions Cycles
 25243                           ; simple_byte            4     3 (average)
 25244                           ;	Chosen strategy is simple_byte
 25245  01668A  503D               	movf	(btemp+11)^0,w,c
 25246  01668C  0A00               	xorlw	0	; case 0
 25247  01668E  A4D8               	btfss	status,2,c
 25248  016690  D7F4               	goto	l8811
 25249                           
 25250                           ; Switch size 1, requested type "simple"
 25251                           ; Number of cases is 4, Range of values is 0 to 3
 25252                           ; switch strategies available:
 25253                           ; Name         Instructions Cycles
 25254                           ; simple_byte           13     7 (average)
 25255                           ;	Chosen strategy is simple_byte
 25256  016692  503C               	movf	(btemp+10)^0,w,c
 25257  016694  0A00               	xorlw	0	; case 0
 25258  016696  B4D8               	btfsc	status,2,c
 25259  016698  D7E9               	goto	l8809
 25260  01669A  0A01               	xorlw	1	; case 1
 25261  01669C  B4D8               	btfsc	status,2,c
 25262  01669E  D7E3               	goto	l8807
 25263  0166A0  0A03               	xorlw	3	; case 2
 25264  0166A2  B4D8               	btfsc	status,2,c
 25265  0166A4  D7DD               	goto	l8805
 25266  0166A6  0A01               	xorlw	1	; case 3
 25267  0166A8  B4D8               	btfsc	status,2,c
 25268  0166AA  D7D2               	goto	l8803
 25269  0166AC  D7E6               	goto	l8811
 25270  0166AE                     l8817:
 25271                           
 25272                           ;dio.c: 96:   if (sw_value) {
 25273                           ;stkvar	_sw_value @ sp[(-2)+1]
 25274  0166AE  0EFF               	movlw	-1
 25275  0166B0  50E3               	movf	plusw1,w,c
 25276  0166B2  B4D8               	btfsc	status,2,c
 25277  0166B4  D014               	goto	l8823
 25278                           
 25279                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 25280                           ;stkvar	_i @ sp[(-2)+0]
 25281  0166B6  0EFE               	movlw	-2
 25282  0166B8  50E3               	movf	plusw1,w,c
 25283  0166BA  0D05               	mullw	5
 25284  0166BC  50F3               	movf	243,w,c
 25285  0166BE  0F60               	addlw	low _S
 25286  0166C0  6ED9               	movwf	fsr2l,c
 25287  0166C2  6ADA               	clrf	fsr2h,c
 25288  0166C4  04DE               	decf	postinc2,w,c
 25289  0166C6  A4D8               	btfss	status,2,c
 25290  0166C8  D041               	goto	l8831
 25291                           
 25292                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 25293                           ;stkvar	_i @ sp[(-2)+0]
 25294  0166CA  0EFE               	movlw	-2
 25295  0166CC  50E3               	movf	plusw1,w,c
 25296  0166CE  0D05               	mullw	5
 25297  0166D0  50F3               	movf	243,w,c
 25298  0166D2  0F60               	addlw	low _S
 25299  0166D4  6ED9               	movwf	fsr2l,c
 25300  0166D6  6ADA               	clrf	fsr2h,c
 25301  0166D8  0E00               	movlw	0
 25302  0166DA  6EDF               	movwf	indf2,c
 25303  0166DC  D037               	goto	l8831
 25304  0166DE                     l8823:
 25305                           
 25306                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 25307                           ;stkvar	_i @ sp[(-2)+0]
 25308  0166DE  0EFE               	movlw	-2
 25309  0166E0  50E3               	movf	plusw1,w,c
 25310  0166E2  0D05               	mullw	5
 25311  0166E4  50F3               	movf	243,w,c
 25312  0166E6  0F60               	addlw	low _S
 25313  0166E8  6ED9               	movwf	fsr2l,c
 25314  0166EA  6ADA               	clrf	fsr2h,c
 25315  0166EC  50DF               	movf	indf2,w,c
 25316  0166EE  A4D8               	btfss	status,2,c
 25317  0166F0  D02D               	goto	l8831
 25318                           
 25319                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 25320                           ;stkvar	_i @ sp[(-2)+0]
 25321  0166F2  0EFE               	movlw	-2
 25322  0166F4  50E3               	movf	plusw1,w,c
 25323  0166F6  0D05               	mullw	5
 25324  0166F8  50F3               	movf	243,w,c
 25325  0166FA  0F60               	addlw	low _S
 25326  0166FC  6ED9               	movwf	fsr2l,c
 25327  0166FE  6ADA               	clrf	fsr2h,c
 25328  016700  0E01               	movlw	1
 25329  016702  6EDF               	movwf	indf2,c
 25330                           
 25331                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 25332  016704  EE20  F2B7         	lfsr	2,_V+183	;volatile
 25333                           
 25334                           ;stkvar	_i @ sp[(-2)+0]
 25335  016708  0EFE               	movlw	-2
 25336  01670A  50E3               	movf	plusw1,w,c
 25337  01670C  0D05               	mullw	5
 25338  01670E  50F3               	movf	243,w,c
 25339  016710  0F61               	addlw	low (_S+1)
 25340  016712  6EE9               	movwf	fsr0l,c
 25341  016714  6AEA               	clrf	fsr0h,c
 25342  016716  006F FF7B FFEE     	movff	postinc2,postinc0
 25343  01671C  006F FF7B FFEE     	movff	postinc2,postinc0
 25344  016722  006F FF7B FFEE     	movff	postinc2,postinc0
 25345  016728  006F FF7B FFEE     	movff	postinc2,postinc0
 25346                           
 25347                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 25348                           ;stkvar	_i @ sp[(-2)+0]
 25349  01672E  0EFE               	movlw	-2
 25350  016730  006F FF8C  F03D    	movff	plusw1,btemp+11
 25351  016736  0E01               	movlw	1
 25352  016738  6E3C               	movwf	(btemp+10)^0,c
 25353  01673A  2A3D               	incf	(btemp+11)^0,f,c
 25354  01673C  D002               	goto	u836_24
 25355  01673E                     u836_25:
 25356  01673E  90D8               	bcf	status,0,c
 25357  016740  363C               	rlcf	(btemp+10)^0,f,c
 25358  016742                     u836_24:
 25359  016742  2E3D               	decfsz	(btemp+11)^0,f,c
 25360  016744  D7FC               	goto	u836_25
 25361  016746  503C               	movf	(btemp+10)^0,w,c
 25362  016748  0100               	movlb	0	; () banked
 25363  01674A  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 25364  01674C                     l8831:
 25365                           
 25366                           ;dio.c: 107:  } while (++i < 4);
 25367                           ;stkvar	_i @ sp[(-2)+0]
 25368  01674C  0EFE               	movlw	-2
 25369  01674E  2AE3               	incf	plusw1,f,c
 25370  016750  0EFE               	movlw	-2
 25371  016752  006F FF8C  F032    	movff	plusw1,btemp
 25372  016758  0E03               	movlw	3
 25373  01675A  6432               	cpfsgt	btemp^0,c
 25374  01675C  D792               	goto	l8815
 25375                           
 25376                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 25377  01675E  92BE               	bcf	190,1,c	;volatile
 25378  016760  A4BE               	btfss	190,2,c	;volatile
 25379  016762  D002               	goto	u838_20
 25380  016764  0E01               	movlw	1
 25381  016766  D001               	goto	u838_26
 25382  016768                     u838_20:
 25383  016768  0E00               	movlw	0
 25384  01676A                     u838_26:
 25385  01676A  0AFF               	xorlw	255
 25386  01676C  6E3D               	movwf	(btemp+11)^0,c
 25387  01676E  463D               	rlncf	(btemp+11)^0,f,c
 25388  016770  463D               	rlncf	(btemp+11)^0,f,c
 25389  016772  50BE               	movf	190,w,c	;volatile
 25390  016774  183D               	xorwf	(btemp+11)^0,w,c
 25391  016776  0BFB               	andlw	-5
 25392  016778  183D               	xorwf	(btemp+11)^0,w,c
 25393  01677A  6EBE               	movwf	190,c	;volatile
 25394  01677C  8EBD               	bsf	189,7,c	;volatile
 25395                           
 25396                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25397  01677E  52E5               	movf	postdec1,f,c
 25398  016780  52E5               	movf	postdec1,f,c
 25399  016782  0012               	return		;funcret
 25400  016784                     __end_of_switch_handler:
 25401                           	opt callstack 0
 25402                           
 25403 ;; *************** function _TMR5_ISR *****************
 25404 ;; Defined at:
 25405 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25406 ;; Parameters:    Size  Location     Type
 25407 ;;		None
 25408 ;; Auto vars:     Size  Location     Type
 25409 ;;		None
 25410 ;; Return value:  Size  Location     Type
 25411 ;;                  1    wreg      void 
 25412 ;; Registers used:
 25413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25414 ;; Tracked objects:
 25415 ;;		On entry : 0/0
 25416 ;;		On exit  : 0/0
 25417 ;;		Unchanged: 0/0
 25418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25421 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25422 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25423 ;;Total ram usage:        4 bytes
 25424 ;; Hardware stack levels used:    1
 25425 ;; Hardware stack levels required when called:    5
 25426 ;; This function calls:
 25427 ;;		_TMR5_CallBack
 25428 ;;		_TMR5_WriteTimer
 25429 ;; This function is called by:
 25430 ;;		Interrupt level 1
 25431 ;; This function uses a non-reentrant model
 25432 ;;
 25433                           
 25434                           	psect	text122
 25435  017E1C                     __ptext122:
 25436                           	opt callstack 0
 25437  017E1C                     _TMR5_ISR:
 25438                           	opt callstack 12
 25439                           
 25440                           ;incstack = 0
 25441  017E1C  006F FF60  F1ED    	movff	status,??_TMR5_ISR+2
 25442  017E22  0060  F0F4  F1EE   	movff	btemp+11,??_TMR5_ISR+3
 25443  017E28  EE16  F000         	lfsr	1,___intlo_sp
 25444                           
 25445                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25446  017E2C  0139               	movlb	57	; () banked
 25447  017E2E  9DA8               	bcf	168,6,b	;volatile
 25448                           
 25449                           ; BSR set to: 57
 25450                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25451  017E30  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 25452  017E36  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25453  017E3C  ECFE  F0C0         	call	_TMR5_WriteTimer	;wreg free
 25454                           
 25455                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25456  017E40  0102               	movlb	2	; () banked
 25457  017E42  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25458  017E44  0101               	movlb	1	; () banked
 25459  017E46  6FEB               	movwf	??_TMR5_ISR& (0+255),b
 25460  017E48  6BEC               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25461  017E4A  0E05               	movlw	5
 25462  017E4C  27EB               	addwf	??_TMR5_ISR& (0+255),f,b
 25463  017E4E  0E00               	movlw	0
 25464  017E50  23EC               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25465  017E52  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25466  017E54  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25467  017E56  51EB               	movf	??_TMR5_ISR& (0+255),w,b
 25468  017E58  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25469  017E5A  51EC               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25470  017E5C  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25471  017E5E  A0D8               	btfss	status,0,c
 25472  017E60  D004               	goto	i1l1045
 25473                           
 25474                           ; BSR set to: 1
 25475                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25476  017E62  EC4F  F0C4         	call	_TMR5_CallBack	;wreg free
 25477                           
 25478                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25479  017E66  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25480  017E68  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25481  017E6A                     i1l1045:
 25482  017E6A  0060  F7B8  F03D   	movff	??_TMR5_ISR+3,btemp+11
 25483  017E70  0060  F7B7  FFD8   	movff	??_TMR5_ISR+2,status
 25484  017E76  0011               	retfie		f
 25485  017E78                     __end_of_TMR5_ISR:
 25486                           	opt callstack 0
 25487                           
 25488 ;; *************** function _TMR5_WriteTimer *****************
 25489 ;; Defined at:
 25490 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25491 ;; Parameters:    Size  Location     Type
 25492 ;;  timerVal        2  [STACK] unsigned short 
 25493 ;; Auto vars:     Size  Location     Type
 25494 ;;		None
 25495 ;; Return value:  Size  Location     Type
 25496 ;;                  1  [STACK] void 
 25497 ;; Registers used:
 25498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25499 ;; Tracked objects:
 25500 ;;		On entry : 3F/39
 25501 ;;		On exit  : 0/0
 25502 ;;		Unchanged: 0/0
 25503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25508 ;;Total ram usage:        0 bytes
 25509 ;; Hardware stack levels used:    1
 25510 ;; Hardware stack levels required when called:    3
 25511 ;; This function calls:
 25512 ;;		Nothing
 25513 ;; This function is called by:
 25514 ;;		_TMR5_ISR
 25515 ;; This function uses a reentrant model
 25516 ;;
 25517                           
 25518                           	psect	text123
 25519  0181FC                     __ptext123:
 25520                           	opt callstack 0
 25521  0181FC                     _TMR5_WriteTimer:
 25522                           	opt callstack 13
 25523                           
 25524                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25525                           
 25526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25527                           ;incstack = 0
 25528  0181FC  A49A               	btfss	154,2,c	;volatile
 25529  0181FE  D00F               	goto	l8951
 25530                           
 25531                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25532  018200  909A               	bcf	154,0,c	;volatile
 25533                           
 25534                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25535                           ;stkvar	_timerVal @ sp[(0)+-2]
 25536  018202  0EFF               	movlw	255
 25537  018204  24E1               	addwf	fsr1l,w,c
 25538  018206  6ED9               	movwf	fsr2l,c
 25539  018208  0EFF               	movlw	255
 25540  01820A  20E2               	addwfc	fsr1h,w,c
 25541  01820C  6EDA               	movwf	fsr2h,c
 25542  01820E  50DF               	movf	indf2,w,c
 25543  018210  6E99               	movwf	153,c	;volatile
 25544                           
 25545                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25546                           ;stkvar	_timerVal @ sp[(0)+-2]
 25547  018212  0EFE               	movlw	-2
 25548  018214  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25549                           
 25550                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25551  01821A  809A               	bsf	154,0,c	;volatile
 25552                           
 25553                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25554  01821C  D00C               	goto	l1028
 25555  01821E                     l8951:
 25556                           
 25557                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25558                           ;stkvar	_timerVal @ sp[(0)+-2]
 25559  01821E  0EFF               	movlw	255
 25560  018220  24E1               	addwf	fsr1l,w,c
 25561  018222  6ED9               	movwf	fsr2l,c
 25562  018224  0EFF               	movlw	255
 25563  018226  20E2               	addwfc	fsr1h,w,c
 25564  018228  6EDA               	movwf	fsr2h,c
 25565  01822A  50DF               	movf	indf2,w,c
 25566  01822C  6E99               	movwf	153,c	;volatile
 25567                           
 25568                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25569                           ;stkvar	_timerVal @ sp[(0)+-2]
 25570  01822E  0EFE               	movlw	-2
 25571  018230  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25572  018236                     l1028:
 25573                           
 25574                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25575  018236  52E5               	movf	postdec1,f,c
 25576  018238  52E5               	movf	postdec1,f,c
 25577  01823A  0012               	return		;funcret
 25578  01823C                     __end_of_TMR5_WriteTimer:
 25579                           	opt callstack 0
 25580                           
 25581 ;; *************** function _TMR5_CallBack *****************
 25582 ;; Defined at:
 25583 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25584 ;; Parameters:    Size  Location     Type
 25585 ;;		None
 25586 ;; Auto vars:     Size  Location     Type
 25587 ;;		None
 25588 ;; Return value:  Size  Location     Type
 25589 ;;                  1  [STACK] void 
 25590 ;; Registers used:
 25591 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25592 ;; Tracked objects:
 25593 ;;		On entry : 3F/1
 25594 ;;		On exit  : 0/0
 25595 ;;		Unchanged: 0/0
 25596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25601 ;;Total ram usage:        0 bytes
 25602 ;; Hardware stack levels used:    1
 25603 ;; Hardware stack levels required when called:    4
 25604 ;; This function calls:
 25605 ;;		Absolute function
 25606 ;;		_TMR5_DefaultInterruptHandler
 25607 ;; This function is called by:
 25608 ;;		_TMR5_ISR
 25609 ;; This function uses a reentrant model
 25610 ;;
 25611                           
 25612                           	psect	text124
 25613  01889E                     __ptext124:
 25614                           	opt callstack 0
 25615  01889E                     _TMR5_CallBack:
 25616                           	opt callstack 12
 25617                           
 25618                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25619                           
 25620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25621                           ;incstack = 0
 25622  01889E  0100               	movlb	0	; () banked
 25623  0188A0  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25624  0188A2  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25625  0188A4  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25626  0188A6  B4D8               	btfsc	status,2,c
 25627  0188A8  0012               	return	
 25628                           
 25629                           ; BSR set to: 0
 25630                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25631  0188AA  D801               	call	u857_28
 25632  0188AC  0012               	return	
 25633  0188AE                     u857_28:
 25634  0188AE  0005               	push	
 25635  0188B0  6EFA               	movwf	pclath,c
 25636  0188B2  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25637  0188B4  6EFD               	movwf	tosl,c
 25638  0188B6  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25639  0188B8  6EFE               	movwf	tosh,c
 25640  0188BA  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25641  0188BC  6EFF               	movwf	tosu,c
 25642  0188BE  50FA               	movf	pclath,w,c
 25643  0188C0  0012               	return		;indir
 25644  0188C2                     __end_of_TMR5_CallBack:
 25645                           	opt callstack 0
 25646                           
 25647 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25648 ;; Defined at:
 25649 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25650 ;; Parameters:    Size  Location     Type
 25651 ;;		None
 25652 ;; Auto vars:     Size  Location     Type
 25653 ;;		None
 25654 ;; Return value:  Size  Location     Type
 25655 ;;                  1  [STACK] void 
 25656 ;; Registers used:
 25657 ;;		wreg, status,2, status,0, btemp+11
 25658 ;; Tracked objects:
 25659 ;;		On entry : 3F/0
 25660 ;;		On exit  : 3F/2
 25661 ;;		Unchanged: 0/0
 25662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25667 ;;Total ram usage:        0 bytes
 25668 ;; Hardware stack levels used:    1
 25669 ;; Hardware stack levels required when called:    3
 25670 ;; This function calls:
 25671 ;;		Nothing
 25672 ;; This function is called by:
 25673 ;;		_TMR5_Initialize
 25674 ;;		_TMR5_CallBack
 25675 ;; This function uses a reentrant model
 25676 ;;
 25677                           
 25678                           	psect	text125
 25679  01878E                     __ptext125:
 25680                           	opt callstack 0
 25681  01878E                     _TMR5_DefaultInterruptHandler:
 25682                           	opt callstack 12
 25683                           
 25684                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25685                           
 25686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25687                           ;incstack = 0
 25688  01878E  A0BE               	btfss	190,0,c	;volatile
 25689  018790  D002               	goto	u807_20
 25690  018792  0E01               	movlw	1
 25691  018794  D001               	goto	u807_26
 25692  018796                     u807_20:
 25693  018796  0E00               	movlw	0
 25694  018798                     u807_26:
 25695  018798  0AFF               	xorlw	255
 25696  01879A  6E3D               	movwf	(btemp+11)^0,c
 25697  01879C  50BE               	movf	190,w,c	;volatile
 25698  01879E  183D               	xorwf	(btemp+11)^0,w,c
 25699  0187A0  0BFE               	andlw	-2
 25700  0187A2  183D               	xorwf	(btemp+11)^0,w,c
 25701  0187A4  6EBE               	movwf	190,c	;volatile
 25702                           
 25703                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25704  0187A6  0E01               	movlw	1
 25705  0187A8  0102               	movlb	2	; () banked
 25706  0187AA  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25707  0187AC  0E00               	movlw	0
 25708  0187AE  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25709  0187B0  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25710  0187B2  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25711                           
 25712                           ; BSR set to: 2
 25713                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25714  0187B4  0012               	return		;funcret
 25715  0187B6                     __end_of_TMR5_DefaultInterruptHandler:
 25716                           	opt callstack 0
 25717                           
 25718 ;; *************** function _INT0_ISR *****************
 25719 ;; Defined at:
 25720 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25721 ;; Parameters:    Size  Location     Type
 25722 ;;		None
 25723 ;; Auto vars:     Size  Location     Type
 25724 ;;		None
 25725 ;; Return value:  Size  Location     Type
 25726 ;;                  1    wreg      void 
 25727 ;; Registers used:
 25728 ;;		wreg, status,2, status,0, pclath, tosl
 25729 ;; Tracked objects:
 25730 ;;		On entry : 0/0
 25731 ;;		On exit  : 0/0
 25732 ;;		Unchanged: 0/0
 25733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25738 ;;Total ram usage:        0 bytes
 25739 ;; Hardware stack levels used:    1
 25740 ;; Hardware stack levels required when called:    2
 25741 ;; This function calls:
 25742 ;;		_INT0_CallBack
 25743 ;; This function is called by:
 25744 ;;		Interrupt level 2
 25745 ;; This function uses a non-reentrant model
 25746 ;;
 25747                           
 25748                           	psect	text126
 25749  018B2C                     __ptext126:
 25750                           	opt callstack 0
 25751  018B2C                     _INT0_ISR:
 25752                           	opt callstack 12
 25753                           
 25754                           ; BSR set to: 2
 25755                           ;incstack = 0
 25756  018B2C  EE14  F000         	lfsr	1,___inthi_sp
 25757                           
 25758                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25759  018B30  0139               	movlb	57	; () banked
 25760  018B32  91A1               	bcf	161,0,b	;volatile
 25761                           
 25762                           ; BSR set to: 57
 25763                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25764  018B34  EC84  F0C4         	call	_INT0_CallBack	;wreg free
 25765  018B38  0011               	retfie		f
 25766  018B3A                     __end_of_INT0_ISR:
 25767                           	opt callstack 0
 25768                           
 25769 ;; *************** function _INT0_CallBack *****************
 25770 ;; Defined at:
 25771 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25772 ;; Parameters:    Size  Location     Type
 25773 ;;		None
 25774 ;; Auto vars:     Size  Location     Type
 25775 ;;		None
 25776 ;; Return value:  Size  Location     Type
 25777 ;;                  1  [STACK] void 
 25778 ;; Registers used:
 25779 ;;		wreg, status,2, status,0, pclath, tosl
 25780 ;; Tracked objects:
 25781 ;;		On entry : 3F/39
 25782 ;;		On exit  : 0/0
 25783 ;;		Unchanged: 0/0
 25784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25789 ;;Total ram usage:        0 bytes
 25790 ;; Hardware stack levels used:    1
 25791 ;; Hardware stack levels required when called:    1
 25792 ;; This function calls:
 25793 ;;		Absolute function
 25794 ;;		_INT0_DefaultInterruptHandler
 25795 ;; This function is called by:
 25796 ;;		_INT0_ISR
 25797 ;; This function uses a reentrant model
 25798 ;;
 25799                           
 25800                           	psect	text127
 25801  018908                     __ptext127:
 25802                           	opt callstack 0
 25803  018908                     _INT0_CallBack:
 25804                           	opt callstack 12
 25805                           
 25806                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25807                           
 25808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25809                           ;incstack = 0
 25810  018908  5016               	movf	_INT0_InterruptHandler^0,w,c
 25811  01890A  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25812  01890C  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25813  01890E  B4D8               	btfsc	status,2,c
 25814  018910  0012               	return	
 25815                           
 25816                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25817  018912  D801               	call	u398_48
 25818  018914  0012               	return	
 25819  018916                     u398_48:
 25820  018916  0005               	push	
 25821  018918  6EFA               	movwf	pclath,c
 25822  01891A  5016               	movf	_INT0_InterruptHandler^0,w,c
 25823  01891C  6EFD               	movwf	tosl,c
 25824  01891E  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25825  018920  6EFE               	movwf	tosh,c
 25826  018922  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25827  018924  6EFF               	movwf	tosu,c
 25828  018926  50FA               	movf	pclath,w,c
 25829  018928  0012               	return		;indir
 25830  01892A                     __end_of_INT0_CallBack:
 25831                           	opt callstack 0
 25832                           
 25833 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25834 ;; Defined at:
 25835 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25836 ;; Parameters:    Size  Location     Type
 25837 ;;		None
 25838 ;; Auto vars:     Size  Location     Type
 25839 ;;		None
 25840 ;; Return value:  Size  Location     Type
 25841 ;;                  1  [STACK] void 
 25842 ;; Registers used:
 25843 ;;		None
 25844 ;; Tracked objects:
 25845 ;;		On entry : 0/39
 25846 ;;		On exit  : 0/0
 25847 ;;		Unchanged: 0/0
 25848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25853 ;;Total ram usage:        0 bytes
 25854 ;; Hardware stack levels used:    1
 25855 ;; This function calls:
 25856 ;;		Nothing
 25857 ;; This function is called by:
 25858 ;;		_EXT_INT_Initialize
 25859 ;;		_INT0_CallBack
 25860 ;; This function uses a reentrant model
 25861 ;;
 25862                           
 25863                           	psect	text128
 25864  018BB8                     __ptext128:
 25865                           	opt callstack 0
 25866  018BB8                     _INT0_DefaultInterruptHandler:
 25867                           	opt callstack 12
 25868                           
 25869                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25870                           
 25871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25872                           ;incstack = 0
 25873  018BB8  0012               	return		;funcret
 25874  018BBA                     __end_of_INT0_DefaultInterruptHandler:
 25875                           	opt callstack 0
 25876                           
 25877 ;; *************** function _Default_ISR *****************
 25878 ;; Defined at:
 25879 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25880 ;; Parameters:    Size  Location     Type
 25881 ;;		None
 25882 ;; Auto vars:     Size  Location     Type
 25883 ;;		None
 25884 ;; Return value:  Size  Location     Type
 25885 ;;                  1    wreg      void 
 25886 ;; Registers used:
 25887 ;;		None
 25888 ;; Tracked objects:
 25889 ;;		On entry : 0/0
 25890 ;;		On exit  : 0/0
 25891 ;;		Unchanged: 0/0
 25892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25897 ;;Total ram usage:        0 bytes
 25898 ;; Hardware stack levels used:    1
 25899 ;; This function calls:
 25900 ;;		Nothing
 25901 ;; This function is called by:
 25902 ;;		Interrupt level 2
 25903 ;; This function uses a non-reentrant model
 25904 ;;
 25905                           
 25906                           	psect	text129
 25907  018BB0                     __ptext129:
 25908                           	opt callstack 0
 25909  018BB0                     _Default_ISR:
 25910                           	opt callstack 14
 25911                           
 25912                           ;incstack = 0
 25913  018BB0  EE14  F000         	lfsr	1,___inthi_sp
 25914  018BB4  0011               	retfie		f
 25915  018BB6                     __end_of_Default_ISR:
 25916                           	opt callstack 0
 25917                           
 25918 ;; *************** function _ADCC_ISR *****************
 25919 ;; Defined at:
 25920 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25921 ;; Parameters:    Size  Location     Type
 25922 ;;		None
 25923 ;; Auto vars:     Size  Location     Type
 25924 ;;		None
 25925 ;; Return value:  Size  Location     Type
 25926 ;;                  1    wreg      void 
 25927 ;; Registers used:
 25928 ;;		wreg, status,2, status,0, pclath, tosl
 25929 ;; Tracked objects:
 25930 ;;		On entry : 0/0
 25931 ;;		On exit  : 0/0
 25932 ;;		Unchanged: 0/0
 25933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25938 ;;Total ram usage:        0 bytes
 25939 ;; Hardware stack levels used:    1
 25940 ;; Hardware stack levels required when called:    1
 25941 ;; This function calls:
 25942 ;;		Absolute function
 25943 ;;		_ADCC_DefaultInterruptHandler
 25944 ;;		_adc_int_handler
 25945 ;; This function is called by:
 25946 ;;		Interrupt level 2
 25947 ;; This function uses a non-reentrant model
 25948 ;;
 25949                           
 25950                           	psect	text130
 25951  018534                     __ptext130:
 25952                           	opt callstack 0
 25953  018534                     _ADCC_ISR:
 25954                           	opt callstack 13
 25955                           
 25956                           ;incstack = 0
 25957  018534  EE14  F000         	lfsr	1,___inthi_sp
 25958                           
 25959                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25960  018538  0139               	movlb	57	; () banked
 25961  01853A  95A1               	bcf	161,2,b	;volatile
 25962                           
 25963                           ; BSR set to: 57
 25964                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25965  01853C  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25966  01853E  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25967  018540  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25968  018542  B4D8               	btfsc	status,2,c
 25969  018544  0011               	retfie		f
 25970                           
 25971                           ; BSR set to: 57
 25972                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25973  018546  D801               	call	i2u429_48
 25974  018548  0011               	retfie		f
 25975  01854A                     i2u429_48:
 25976  01854A  0005               	push	
 25977  01854C  6EFA               	movwf	pclath,c
 25978  01854E  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25979  018550  6EFD               	movwf	tosl,c
 25980  018552  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25981  018554  6EFE               	movwf	tosh,c
 25982  018556  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25983  018558  6EFF               	movwf	tosu,c
 25984  01855A  50FA               	movf	pclath,w,c
 25985  01855C  0012               	return		;indir
 25986  01855E                     __end_of_ADCC_ISR:
 25987                           	opt callstack 0
 25988                           
 25989 ;; *************** function _adc_int_t_handler *****************
 25990 ;; Defined at:
 25991 ;;		line 128 in file "daq.c"
 25992 ;; Parameters:    Size  Location     Type
 25993 ;;		None
 25994 ;; Auto vars:     Size  Location     Type
 25995 ;;		None
 25996 ;; Return value:  Size  Location     Type
 25997 ;;                  1  [STACK] void 
 25998 ;; Registers used:
 25999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 26000 ;; Tracked objects:
 26001 ;;		On entry : 3F/39
 26002 ;;		On exit  : 1/0
 26003 ;;		Unchanged: 0/0
 26004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26009 ;;Total ram usage:        0 bytes
 26010 ;; Hardware stack levels used:    1
 26011 ;; Hardware stack levels required when called:    1
 26012 ;; This function calls:
 26013 ;;		_ADCC_DischargeSampleCapacitor
 26014 ;;		_ADCC_StartConversion
 26015 ;; This function is called by:
 26016 ;;		_start_adc_scan
 26017 ;;		_ADCC_ThresholdISR
 26018 ;; This function uses a reentrant model
 26019 ;;
 26020                           
 26021                           	psect	text131
 26022  017996                     __ptext131:
 26023                           	opt callstack 0
 26024  017996                     _adc_int_t_handler:
 26025                           	opt callstack 12
 26026                           
 26027                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 26028                           
 26029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26030                           ;incstack = 0
 26031  017996  013E               	movlb	62	; () banked
 26032  017998  51E6               	movf	230,w,b	;volatile
 26033  01799A  006F FB9C  F032    	movff	16103,btemp	;volatile
 26034  0179A0  6A33               	clrf	(btemp+1)^0,c
 26035  0179A2  0060  F0C8  F033   	movff	btemp,btemp+1
 26036  0179A8  6A32               	clrf	btemp^0,c
 26037  0179AA  2632               	addwf	btemp^0,f,c
 26038  0179AC  0E00               	movlw	0
 26039  0179AE  2233               	addwfc	(btemp+1)^0,f,c
 26040  0179B0  0100               	movlb	0	; () banked
 26041  0179B2  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26042  0179B4  0D02               	mullw	2
 26043  0179B6  50F3               	movf	243,w,c
 26044  0179B8  0FC7               	addlw	low _R
 26045  0179BA  6ED9               	movwf	fsr2l,c
 26046  0179BC  6ADA               	clrf	fsr2h,c
 26047  0179BE  0060  F0CB  FFDE   	movff	btemp,postinc2
 26048  0179C4  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 26049  0179CA                     l9153:
 26050                           
 26051                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 26052  0179CA  0100               	movlb	0	; () banked
 26053  0179CC  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 26054  0179CE  0E0D               	movlw	13
 26055  0179D0  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 26056  0179D2  D003               	goto	l9159
 26057                           
 26058                           ; BSR set to: 0
 26059                           ;daq.c: 136:    R.done = 1;
 26060  0179D4  0E01               	movlw	1
 26061  0179D6  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 26062  0179D8  0012               	return	
 26063  0179DA                     l9159:
 26064                           
 26065                           ; BSR set to: 0
 26066                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26067  0179DA  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 26068  0179E0  EE20  F0EC         	lfsr	2,_R+37	;volatile
 26069  0179E4  006F FF78  F03A    	movff	postinc2,btemp+8
 26070  0179EA  006F FF74  F03B    	movff	postdec2,btemp+9
 26071  0179F0  2A3D               	incf	(btemp+11)^0,f,c
 26072  0179F2  D003               	goto	u872_44
 26073  0179F4                     u872_45:
 26074  0179F4  90D8               	bcf	status,0,c
 26075  0179F6  323B               	rrcf	(btemp+9)^0,f,c
 26076  0179F8  323A               	rrcf	(btemp+8)^0,f,c
 26077  0179FA                     u872_44:
 26078  0179FA  2E3D               	decfsz	(btemp+11)^0,f,c
 26079  0179FC  D7FB               	goto	u872_45
 26080  0179FE  A03A               	btfss	(btemp+8)^0,0,c
 26081  017A00  D7E4               	goto	l9153
 26082                           
 26083                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 26084  017A02  ECBB  F0C5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26085                           
 26086                           ; BSR set to: 62
 26087                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 26088  017A06  0100               	movlb	0	; () banked
 26089  017A08  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26090  017A0A  0B0F               	andlw	15
 26091  017A0C  6EE6               	movwf	postinc1,c
 26092  017A0E  EC76  F0C5         	call	_ADCC_StartConversion	;wreg free
 26093                           
 26094                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26095  017A12  0012               	return		;funcret
 26096  017A14                     __end_of_adc_int_t_handler:
 26097                           	opt callstack 0
 26098                           
 26099 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26100 ;; Defined at:
 26101 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26102 ;; Parameters:    Size  Location     Type
 26103 ;;		None
 26104 ;; Auto vars:     Size  Location     Type
 26105 ;;		None
 26106 ;; Return value:  Size  Location     Type
 26107 ;;                  1  [STACK] void 
 26108 ;; Registers used:
 26109 ;;		None
 26110 ;; Tracked objects:
 26111 ;;		On entry : 3F/39
 26112 ;;		On exit  : 0/0
 26113 ;;		Unchanged: 0/0
 26114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26119 ;;Total ram usage:        0 bytes
 26120 ;; Hardware stack levels used:    1
 26121 ;; This function calls:
 26122 ;;		Nothing
 26123 ;; This function is called by:
 26124 ;;		_ADCC_Initialize
 26125 ;;		_ADCC_ISR
 26126 ;;		_ADCC_ThresholdISR
 26127 ;; This function uses a reentrant model
 26128 ;;
 26129                           
 26130                           	psect	text132
 26131  018BBA                     __ptext132:
 26132                           	opt callstack 0
 26133  018BBA                     _ADCC_DefaultInterruptHandler:
 26134                           	opt callstack 13
 26135                           
 26136                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26137                           
 26138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26139                           ;incstack = 0
 26140  018BBA  0012               	return		;funcret
 26141  018BBC                     __end_of_ADCC_DefaultInterruptHandler:
 26142                           	opt callstack 0
 26143                           
 26144 ;; *************** function _adc_int_handler *****************
 26145 ;; Defined at:
 26146 ;;		line 118 in file "daq.c"
 26147 ;; Parameters:    Size  Location     Type
 26148 ;;		None
 26149 ;; Auto vars:     Size  Location     Type
 26150 ;;		None
 26151 ;; Return value:  Size  Location     Type
 26152 ;;                  1  [STACK] void 
 26153 ;; Registers used:
 26154 ;;		None
 26155 ;; Tracked objects:
 26156 ;;		On entry : 3F/39
 26157 ;;		On exit  : 0/0
 26158 ;;		Unchanged: 0/0
 26159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26164 ;;Total ram usage:        0 bytes
 26165 ;; Hardware stack levels used:    1
 26166 ;; This function calls:
 26167 ;;		Nothing
 26168 ;; This function is called by:
 26169 ;;		_start_adc_scan
 26170 ;;		_ADCC_ISR
 26171 ;; This function uses a reentrant model
 26172 ;;
 26173                           
 26174                           	psect	text133
 26175  018BBC                     __ptext133:
 26176                           	opt callstack 0
 26177  018BBC                     _adc_int_handler:
 26178                           	opt callstack 13
 26179                           
 26180                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26181                           
 26182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26183                           ;incstack = 0
 26184  018BBC  0012               	return		;funcret
 26185  018BBE                     __end_of_adc_int_handler:
 26186                           	opt callstack 0
 26187                           
 26188 ;; *************** function _ADCC_ThresholdISR *****************
 26189 ;; Defined at:
 26190 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26191 ;; Parameters:    Size  Location     Type
 26192 ;;		None
 26193 ;; Auto vars:     Size  Location     Type
 26194 ;;		None
 26195 ;; Return value:  Size  Location     Type
 26196 ;;                  1    wreg      void 
 26197 ;; Registers used:
 26198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26199 ;; Tracked objects:
 26200 ;;		On entry : 0/0
 26201 ;;		On exit  : 0/0
 26202 ;;		Unchanged: 0/0
 26203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26206 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26207 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26208 ;;Total ram usage:        5 bytes
 26209 ;; Hardware stack levels used:    1
 26210 ;; Hardware stack levels required when called:    2
 26211 ;; This function calls:
 26212 ;;		Absolute function
 26213 ;;		_ADCC_DefaultInterruptHandler
 26214 ;;		_adc_int_t_handler
 26215 ;; This function is called by:
 26216 ;;		Interrupt level 2
 26217 ;; This function uses a non-reentrant model
 26218 ;;
 26219                           
 26220                           	psect	text134
 26221  017B64                     __ptext134:
 26222                           	opt callstack 0
 26223  017B64                     _ADCC_ThresholdISR:
 26224                           	opt callstack 12
 26225                           
 26226                           ;incstack = 0
 26227  017B64  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 26228  017B6A  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26229  017B70  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26230  017B76  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26231  017B7C  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26232  017B82  EE14  F000         	lfsr	1,___inthi_sp
 26233                           
 26234                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26235  017B86  0139               	movlb	57	; () banked
 26236  017B88  97A1               	bcf	161,3,b	;volatile
 26237                           
 26238                           ; BSR set to: 57
 26239                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26240  017B8A  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26241  017B8C  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26242  017B8E  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26243  017B90  B4D8               	btfsc	status,2,c
 26244  017B92  D00C               	goto	i2u875_49
 26245                           
 26246                           ; BSR set to: 57
 26247                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26248  017B94  D801               	call	i2u875_48
 26249  017B96  D00A               	goto	i2u875_49
 26250  017B98                     i2u875_48:
 26251  017B98  0005               	push	
 26252  017B9A  6EFA               	movwf	pclath,c
 26253  017B9C  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26254  017B9E  6EFD               	movwf	tosl,c
 26255  017BA0  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26256  017BA2  6EFE               	movwf	tosh,c
 26257  017BA4  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26258  017BA6  6EFF               	movwf	tosu,c
 26259  017BA8  50FA               	movf	pclath,w,c
 26260  017BAA  0012               	return		;indir
 26261  017BAC                     i2u875_49:
 26262  017BAC  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26263  017BB2  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26264  017BB8  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26265  017BBE  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26266  017BC4  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 26267  017BCA  0011               	retfie		f
 26268  017BCC                     __end_of_ADCC_ThresholdISR:
 26269                           	opt callstack 0
 26270                           
 26271 ;; *************** function _UART1_tx_vect_isr *****************
 26272 ;; Defined at:
 26273 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26274 ;; Parameters:    Size  Location     Type
 26275 ;;		None
 26276 ;; Auto vars:     Size  Location     Type
 26277 ;;		None
 26278 ;; Return value:  Size  Location     Type
 26279 ;;                  1    wreg      void 
 26280 ;; Registers used:
 26281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26282 ;; Tracked objects:
 26283 ;;		On entry : 0/0
 26284 ;;		On exit  : 0/0
 26285 ;;		Unchanged: 0/0
 26286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26291 ;;Total ram usage:        0 bytes
 26292 ;; Hardware stack levels used:    1
 26293 ;; Hardware stack levels required when called:    1
 26294 ;; This function calls:
 26295 ;;		Absolute function
 26296 ;;		_UART1_Transmit_ISR
 26297 ;; This function is called by:
 26298 ;;		Interrupt level 2
 26299 ;; This function uses a non-reentrant model
 26300 ;;
 26301                           
 26302                           	psect	text135
 26303  0187B8                     __ptext135:
 26304                           	opt callstack 0
 26305  0187B8                     _UART1_tx_vect_isr:
 26306                           	opt callstack 13
 26307                           
 26308                           ;incstack = 0
 26309  0187B8  EE14  F000         	lfsr	1,___inthi_sp
 26310                           
 26311                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26312  0187BC  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26313  0187BE  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26314  0187C0  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26315  0187C2  B4D8               	btfsc	status,2,c
 26316  0187C4  0011               	retfie		f
 26317                           
 26318                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26319  0187C6  D801               	call	i2u877_48
 26320  0187C8  0011               	retfie		f
 26321  0187CA                     i2u877_48:
 26322  0187CA  0005               	push	
 26323  0187CC  6EFA               	movwf	pclath,c
 26324  0187CE  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26325  0187D0  6EFD               	movwf	tosl,c
 26326  0187D2  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26327  0187D4  6EFE               	movwf	tosh,c
 26328  0187D6  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26329  0187D8  6EFF               	movwf	tosu,c
 26330  0187DA  50FA               	movf	pclath,w,c
 26331  0187DC  0012               	return		;indir
 26332  0187DE                     __end_of_UART1_tx_vect_isr:
 26333                           	opt callstack 0
 26334                           
 26335 ;; *************** function _UART1_Transmit_ISR *****************
 26336 ;; Defined at:
 26337 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26338 ;; Parameters:    Size  Location     Type
 26339 ;;		None
 26340 ;; Auto vars:     Size  Location     Type
 26341 ;;		None
 26342 ;; Return value:  Size  Location     Type
 26343 ;;                  1  [STACK] void 
 26344 ;; Registers used:
 26345 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26346 ;; Tracked objects:
 26347 ;;		On entry : 0/0
 26348 ;;		On exit  : 3B/39
 26349 ;;		Unchanged: 0/0
 26350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26355 ;;Total ram usage:        0 bytes
 26356 ;; Hardware stack levels used:    1
 26357 ;; This function calls:
 26358 ;;		Nothing
 26359 ;; This function is called by:
 26360 ;;		_UART1_Initialize
 26361 ;;		_UART1_tx_vect_isr
 26362 ;; This function uses a reentrant model
 26363 ;;
 26364                           
 26365                           	psect	text136
 26366  0184B0                     __ptext136:
 26367                           	opt callstack 0
 26368  0184B0                     _UART1_Transmit_ISR:
 26369                           	opt callstack 13
 26370                           
 26371                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26372                           
 26373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26374                           ;incstack = 0
 26375  0184B0  0E40               	movlw	64
 26376  0184B2  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 26377  0184B4  D010               	goto	l581
 26378                           
 26379                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26380  0184B6  0EBB               	movlw	low _uart1TxBuffer
 26381  0184B8  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 26382  0184BA  6ED9               	movwf	fsr2l,c
 26383  0184BC  6ADA               	clrf	fsr2h,c
 26384  0184BE  0E02               	movlw	high _uart1TxBuffer
 26385  0184C0  22DA               	addwfc	fsr2h,f,c
 26386  0184C2  50DF               	movf	indf2,w,c
 26387  0184C4  013D               	movlb	61	; () banked
 26388  0184C6  6FEA               	movwf	234,b	;volatile
 26389                           
 26390                           ; BSR set to: 61
 26391  0184C8  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 26392                           
 26393                           ; BSR set to: 61
 26394                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26395  0184CA  0E3F               	movlw	63
 26396  0184CC  6430               	cpfsgt	_uart1TxTail^0,c
 26397  0184CE  D001               	goto	l8903
 26398                           
 26399                           ; BSR set to: 61
 26400                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26401  0184D0  6A30               	clrf	_uart1TxTail^0,c	;volatile
 26402  0184D2                     l8903:
 26403                           
 26404                           ; BSR set to: 61
 26405                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26406  0184D2  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26407                           
 26408                           ;mcc_generated_files/uart1.c: 222:  } else {
 26409  0184D4  0012               	return	
 26410  0184D6                     l581:
 26411                           
 26412                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26413  0184D6  0139               	movlb	57	; () banked
 26414  0184D8  9993               	bcf	147,4,b	;volatile
 26415                           
 26416                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26417  0184DA  0012               	return		;funcret
 26418  0184DC                     __end_of_UART1_Transmit_ISR:
 26419                           	opt callstack 0
 26420                           
 26421 ;; *************** function _UART1_rx_vect_isr *****************
 26422 ;; Defined at:
 26423 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26424 ;; Parameters:    Size  Location     Type
 26425 ;;		None
 26426 ;; Auto vars:     Size  Location     Type
 26427 ;;		None
 26428 ;; Return value:  Size  Location     Type
 26429 ;;                  1    wreg      void 
 26430 ;; Registers used:
 26431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26432 ;; Tracked objects:
 26433 ;;		On entry : 0/0
 26434 ;;		On exit  : 0/0
 26435 ;;		Unchanged: 0/0
 26436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26441 ;;Total ram usage:        0 bytes
 26442 ;; Hardware stack levels used:    1
 26443 ;; Hardware stack levels required when called:    1
 26444 ;; This function calls:
 26445 ;;		Absolute function
 26446 ;;		_UART1_Receive_ISR
 26447 ;; This function is called by:
 26448 ;;		Interrupt level 2
 26449 ;; This function uses a non-reentrant model
 26450 ;;
 26451                           
 26452                           	psect	text137
 26453  0187E0                     __ptext137:
 26454                           	opt callstack 0
 26455  0187E0                     _UART1_rx_vect_isr:
 26456                           	opt callstack 13
 26457                           
 26458                           ;incstack = 0
 26459  0187E0  EE14  F000         	lfsr	1,___inthi_sp
 26460                           
 26461                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26462  0187E4  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26463  0187E6  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26464  0187E8  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26465  0187EA  B4D8               	btfsc	status,2,c
 26466  0187EC  0011               	retfie		f
 26467                           
 26468                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26469  0187EE  D801               	call	i2u879_48
 26470  0187F0  0011               	retfie		f
 26471  0187F2                     i2u879_48:
 26472  0187F2  0005               	push	
 26473  0187F4  6EFA               	movwf	pclath,c
 26474  0187F6  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26475  0187F8  6EFD               	movwf	tosl,c
 26476  0187FA  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26477  0187FC  6EFE               	movwf	tosh,c
 26478  0187FE  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26479  018800  6EFF               	movwf	tosu,c
 26480  018802  50FA               	movf	pclath,w,c
 26481  018804  0012               	return		;indir
 26482  018806                     __end_of_UART1_rx_vect_isr:
 26483                           	opt callstack 0
 26484                           
 26485 ;; *************** function _UART1_Receive_ISR *****************
 26486 ;; Defined at:
 26487 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26488 ;; Parameters:    Size  Location     Type
 26489 ;;		None
 26490 ;; Auto vars:     Size  Location     Type
 26491 ;;		None
 26492 ;; Return value:  Size  Location     Type
 26493 ;;                  1  [STACK] void 
 26494 ;; Registers used:
 26495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26496 ;; Tracked objects:
 26497 ;;		On entry : 0/0
 26498 ;;		On exit  : 0/0
 26499 ;;		Unchanged: 0/0
 26500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26505 ;;Total ram usage:        0 bytes
 26506 ;; Hardware stack levels used:    1
 26507 ;; This function calls:
 26508 ;;		Nothing
 26509 ;; This function is called by:
 26510 ;;		_UART1_Initialize
 26511 ;;		_UART1_rx_vect_isr
 26512 ;; This function uses a reentrant model
 26513 ;;
 26514                           
 26515                           	psect	text138
 26516  0189A4                     __ptext138:
 26517                           	opt callstack 0
 26518  0189A4                     _UART1_Receive_ISR:
 26519                           	opt callstack 13
 26520                           
 26521                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26522                           
 26523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26524                           ;incstack = 0
 26525  0189A4  0E00               	movlw	low _uart1RxBuffer
 26526  0189A6  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 26527  0189A8  6ED9               	movwf	fsr2l,c
 26528  0189AA  6ADA               	clrf	fsr2h,c
 26529  0189AC  0E06               	movlw	high _uart1RxBuffer
 26530  0189AE  22DA               	addwfc	fsr2h,f,c
 26531  0189B0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26532  0189B6  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 26533                           
 26534                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26535  0189B8  282E               	incf	_uart1RxHead^0,w,c
 26536  0189BA  B4D8               	btfsc	status,2,c
 26537                           
 26538                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26539  0189BC  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 26540                           
 26541                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26542  0189BE  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 26543                           
 26544                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26545  0189C0  0012               	return		;funcret
 26546  0189C2                     __end_of_UART1_Receive_ISR:
 26547                           	opt callstack 0
 26548                           
 26549 ;; *************** function _UART2_tx_vect_isr *****************
 26550 ;; Defined at:
 26551 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26552 ;; Parameters:    Size  Location     Type
 26553 ;;		None
 26554 ;; Auto vars:     Size  Location     Type
 26555 ;;		None
 26556 ;; Return value:  Size  Location     Type
 26557 ;;                  1    wreg      void 
 26558 ;; Registers used:
 26559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26560 ;; Tracked objects:
 26561 ;;		On entry : 0/0
 26562 ;;		On exit  : 0/0
 26563 ;;		Unchanged: 0/0
 26564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26569 ;;Total ram usage:        0 bytes
 26570 ;; Hardware stack levels used:    1
 26571 ;; Hardware stack levels required when called:    1
 26572 ;; This function calls:
 26573 ;;		Absolute function
 26574 ;;		_UART2_Transmit_ISR
 26575 ;; This function is called by:
 26576 ;;		Interrupt level 2
 26577 ;; This function uses a non-reentrant model
 26578 ;;
 26579                           
 26580                           	psect	text139
 26581  018808                     __ptext139:
 26582                           	opt callstack 0
 26583  018808                     _UART2_tx_vect_isr:
 26584                           	opt callstack 13
 26585                           
 26586                           ;incstack = 0
 26587  018808  EE14  F000         	lfsr	1,___inthi_sp
 26588                           
 26589                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26590  01880C  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 26591  01880E  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26592  018810  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26593  018812  B4D8               	btfsc	status,2,c
 26594  018814  0011               	retfie		f
 26595                           
 26596                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26597  018816  D801               	call	i2u881_48
 26598  018818  0011               	retfie		f
 26599  01881A                     i2u881_48:
 26600  01881A  0005               	push	
 26601  01881C  6EFA               	movwf	pclath,c
 26602  01881E  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 26603  018820  6EFD               	movwf	tosl,c
 26604  018822  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26605  018824  6EFE               	movwf	tosh,c
 26606  018826  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26607  018828  6EFF               	movwf	tosu,c
 26608  01882A  50FA               	movf	pclath,w,c
 26609  01882C  0012               	return		;indir
 26610  01882E                     __end_of_UART2_tx_vect_isr:
 26611                           	opt callstack 0
 26612                           
 26613 ;; *************** function _UART2_Transmit_ISR *****************
 26614 ;; Defined at:
 26615 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26616 ;; Parameters:    Size  Location     Type
 26617 ;;		None
 26618 ;; Auto vars:     Size  Location     Type
 26619 ;;		None
 26620 ;; Return value:  Size  Location     Type
 26621 ;;                  1  [STACK] void 
 26622 ;; Registers used:
 26623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26624 ;; Tracked objects:
 26625 ;;		On entry : 0/0
 26626 ;;		On exit  : 3B/39
 26627 ;;		Unchanged: 0/0
 26628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26633 ;;Total ram usage:        0 bytes
 26634 ;; Hardware stack levels used:    1
 26635 ;; This function calls:
 26636 ;;		Nothing
 26637 ;; This function is called by:
 26638 ;;		_UART2_Initialize
 26639 ;;		_UART2_tx_vect_isr
 26640 ;; This function uses a reentrant model
 26641 ;;
 26642                           
 26643                           	psect	text140
 26644  0184DC                     __ptext140:
 26645                           	opt callstack 0
 26646  0184DC                     _UART2_Transmit_ISR:
 26647                           	opt callstack 13
 26648                           
 26649                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26650                           
 26651                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26652                           ;incstack = 0
 26653  0184DC  0E40               	movlw	64
 26654  0184DE  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 26655  0184E0  D010               	goto	l701
 26656                           
 26657                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26658  0184E2  0E54               	movlw	low _uart2TxBuffer
 26659  0184E4  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 26660  0184E6  6ED9               	movwf	fsr2l,c
 26661  0184E8  6ADA               	clrf	fsr2h,c
 26662  0184EA  0E03               	movlw	high _uart2TxBuffer
 26663  0184EC  22DA               	addwfc	fsr2h,f,c
 26664  0184EE  50DF               	movf	indf2,w,c
 26665  0184F0  013D               	movlb	61	; () banked
 26666  0184F2  6FD2               	movwf	210,b	;volatile
 26667                           
 26668                           ; BSR set to: 61
 26669  0184F4  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 26670                           
 26671                           ; BSR set to: 61
 26672                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26673  0184F6  0E3F               	movlw	63
 26674  0184F8  642A               	cpfsgt	_uart2TxTail^0,c
 26675  0184FA  D001               	goto	l8925
 26676                           
 26677                           ; BSR set to: 61
 26678                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26679  0184FC  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 26680  0184FE                     l8925:
 26681                           
 26682                           ; BSR set to: 61
 26683                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26684  0184FE  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26685                           
 26686                           ;mcc_generated_files/uart2.c: 224:     }
 26687  018500  0012               	return	
 26688  018502                     l701:
 26689                           
 26690                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26691  018502  0139               	movlb	57	; () banked
 26692  018504  9796               	bcf	150,3,b	;volatile
 26693                           
 26694                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26695  018506  0012               	return		;funcret
 26696  018508                     __end_of_UART2_Transmit_ISR:
 26697                           	opt callstack 0
 26698                           
 26699 ;; *************** function _UART2_rx_vect_isr *****************
 26700 ;; Defined at:
 26701 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26702 ;; Parameters:    Size  Location     Type
 26703 ;;		None
 26704 ;; Auto vars:     Size  Location     Type
 26705 ;;		None
 26706 ;; Return value:  Size  Location     Type
 26707 ;;                  1    wreg      void 
 26708 ;; Registers used:
 26709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26710 ;; Tracked objects:
 26711 ;;		On entry : 0/0
 26712 ;;		On exit  : 0/0
 26713 ;;		Unchanged: 0/0
 26714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26719 ;;Total ram usage:        0 bytes
 26720 ;; Hardware stack levels used:    1
 26721 ;; Hardware stack levels required when called:    1
 26722 ;; This function calls:
 26723 ;;		Absolute function
 26724 ;;		_UART2_Receive_ISR
 26725 ;; This function is called by:
 26726 ;;		Interrupt level 2
 26727 ;; This function uses a non-reentrant model
 26728 ;;
 26729                           
 26730                           	psect	text141
 26731  018830                     __ptext141:
 26732                           	opt callstack 0
 26733  018830                     _UART2_rx_vect_isr:
 26734                           	opt callstack 13
 26735                           
 26736                           ;incstack = 0
 26737  018830  EE14  F000         	lfsr	1,___inthi_sp
 26738                           
 26739                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26740  018834  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26741  018836  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26742  018838  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26743  01883A  B4D8               	btfsc	status,2,c
 26744  01883C  0011               	retfie		f
 26745                           
 26746                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26747  01883E  D801               	call	i2u883_48
 26748  018840  0011               	retfie		f
 26749  018842                     i2u883_48:
 26750  018842  0005               	push	
 26751  018844  6EFA               	movwf	pclath,c
 26752  018846  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26753  018848  6EFD               	movwf	tosl,c
 26754  01884A  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26755  01884C  6EFE               	movwf	tosh,c
 26756  01884E  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26757  018850  6EFF               	movwf	tosu,c
 26758  018852  50FA               	movf	pclath,w,c
 26759  018854  0012               	return		;indir
 26760  018856                     __end_of_UART2_rx_vect_isr:
 26761                           	opt callstack 0
 26762                           
 26763 ;; *************** function _UART2_Receive_ISR *****************
 26764 ;; Defined at:
 26765 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26766 ;; Parameters:    Size  Location     Type
 26767 ;;		None
 26768 ;; Auto vars:     Size  Location     Type
 26769 ;;		None
 26770 ;; Return value:  Size  Location     Type
 26771 ;;                  1  [STACK] void 
 26772 ;; Registers used:
 26773 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26774 ;; Tracked objects:
 26775 ;;		On entry : 0/0
 26776 ;;		On exit  : 0/0
 26777 ;;		Unchanged: 0/0
 26778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26783 ;;Total ram usage:        0 bytes
 26784 ;; Hardware stack levels used:    1
 26785 ;; This function calls:
 26786 ;;		Nothing
 26787 ;; This function is called by:
 26788 ;;		_UART2_Initialize
 26789 ;;		_UART2_rx_vect_isr
 26790 ;; This function uses a reentrant model
 26791 ;;
 26792                           
 26793                           	psect	text142
 26794  0189C2                     __ptext142:
 26795                           	opt callstack 0
 26796  0189C2                     _UART2_Receive_ISR:
 26797                           	opt callstack 13
 26798                           
 26799                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26800                           
 26801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26802                           ;incstack = 0
 26803  0189C2  0E00               	movlw	low _uart2RxBuffer
 26804  0189C4  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 26805  0189C6  6ED9               	movwf	fsr2l,c
 26806  0189C8  6ADA               	clrf	fsr2h,c
 26807  0189CA  0E07               	movlw	high _uart2RxBuffer
 26808  0189CC  22DA               	addwfc	fsr2h,f,c
 26809  0189CE  006F F743 FFDF     	movff	15824,indf2	;volatile
 26810  0189D4  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 26811                           
 26812                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26813  0189D6  2828               	incf	_uart2RxHead^0,w,c
 26814  0189D8  B4D8               	btfsc	status,2,c
 26815                           
 26816                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26817  0189DA  6A28               	clrf	_uart2RxHead^0,c	;volatile
 26818                           
 26819                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26820  0189DC  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 26821                           
 26822                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26823  0189DE  0012               	return		;funcret
 26824  0189E0                     __end_of_UART2_Receive_ISR:
 26825                           	opt callstack 0
 26826                           
 26827 ;; *************** function _TMR6_ISR *****************
 26828 ;; Defined at:
 26829 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26830 ;; Parameters:    Size  Location     Type
 26831 ;;		None
 26832 ;; Auto vars:     Size  Location     Type
 26833 ;;		None
 26834 ;; Return value:  Size  Location     Type
 26835 ;;                  1    wreg      void 
 26836 ;; Registers used:
 26837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26838 ;; Tracked objects:
 26839 ;;		On entry : 0/0
 26840 ;;		On exit  : 0/0
 26841 ;;		Unchanged: 0/0
 26842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26845 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26846 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26847 ;;Total ram usage:        1 bytes
 26848 ;; Hardware stack levels used:    1
 26849 ;; Hardware stack levels required when called:    2
 26850 ;; This function calls:
 26851 ;;		_TMR6_CallBack
 26852 ;; This function is called by:
 26853 ;;		Interrupt level 2
 26854 ;; This function uses a non-reentrant model
 26855 ;;
 26856                           
 26857                           	psect	text143
 26858  018A34                     __ptext143:
 26859                           	opt callstack 0
 26860  018A34                     _TMR6_ISR:
 26861                           	opt callstack 12
 26862                           
 26863                           ;incstack = 0
 26864  018A34  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 26865  018A3A  EE14  F000         	lfsr	1,___inthi_sp
 26866                           
 26867                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26868  018A3E  0139               	movlb	57	; () banked
 26869  018A40  91A9               	bcf	169,0,b	;volatile
 26870                           
 26871                           ; BSR set to: 57
 26872                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26873  018A42  EC61  F0C4         	call	_TMR6_CallBack	;wreg free
 26874  018A46  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 26875  018A4C  0011               	retfie		f
 26876  018A4E                     __end_of_TMR6_ISR:
 26877                           	opt callstack 0
 26878                           
 26879 ;; *************** function _TMR6_CallBack *****************
 26880 ;; Defined at:
 26881 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26882 ;; Parameters:    Size  Location     Type
 26883 ;;		None
 26884 ;; Auto vars:     Size  Location     Type
 26885 ;;		None
 26886 ;; Return value:  Size  Location     Type
 26887 ;;                  1  [STACK] void 
 26888 ;; Registers used:
 26889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26890 ;; Tracked objects:
 26891 ;;		On entry : 3F/39
 26892 ;;		On exit  : 0/0
 26893 ;;		Unchanged: 0/0
 26894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26899 ;;Total ram usage:        0 bytes
 26900 ;; Hardware stack levels used:    1
 26901 ;; Hardware stack levels required when called:    1
 26902 ;; This function calls:
 26903 ;;		Absolute function
 26904 ;;		_TMR6_DefaultInterruptHandler
 26905 ;; This function is called by:
 26906 ;;		_TMR6_ISR
 26907 ;; This function uses a reentrant model
 26908 ;;
 26909                           
 26910                           	psect	text144
 26911  0188C2                     __ptext144:
 26912                           	opt callstack 0
 26913  0188C2                     _TMR6_CallBack:
 26914                           	opt callstack 12
 26915                           
 26916                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26917                           
 26918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26919                           ;incstack = 0
 26920  0188C2  0100               	movlb	0	; () banked
 26921  0188C4  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26922  0188C6  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26923  0188C8  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26924  0188CA  B4D8               	btfsc	status,2,c
 26925  0188CC  0012               	return	
 26926                           
 26927                           ; BSR set to: 0
 26928                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26929  0188CE  D801               	call	u854_48
 26930  0188D0  0012               	return	
 26931  0188D2                     u854_48:
 26932  0188D2  0005               	push	
 26933  0188D4  6EFA               	movwf	pclath,c
 26934  0188D6  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26935  0188D8  6EFD               	movwf	tosl,c
 26936  0188DA  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26937  0188DC  6EFE               	movwf	tosh,c
 26938  0188DE  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26939  0188E0  6EFF               	movwf	tosu,c
 26940  0188E2  50FA               	movf	pclath,w,c
 26941  0188E4  0012               	return		;indir
 26942  0188E6                     __end_of_TMR6_CallBack:
 26943                           	opt callstack 0
 26944                           
 26945 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26946 ;; Defined at:
 26947 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26948 ;; Parameters:    Size  Location     Type
 26949 ;;		None
 26950 ;; Auto vars:     Size  Location     Type
 26951 ;;  i               1  [STACK] unsigned char 
 26952 ;; Return value:  Size  Location     Type
 26953 ;;                  1  [STACK] void 
 26954 ;; Registers used:
 26955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26956 ;; Tracked objects:
 26957 ;;		On entry : 3F/0
 26958 ;;		On exit  : 0/0
 26959 ;;		Unchanged: 0/0
 26960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26965 ;;Total ram usage:        0 bytes
 26966 ;; Hardware stack levels used:    1
 26967 ;; This function calls:
 26968 ;;		Nothing
 26969 ;; This function is called by:
 26970 ;;		_TMR6_Initialize
 26971 ;;		_TMR6_CallBack
 26972 ;; This function uses a reentrant model
 26973 ;;
 26974                           
 26975                           	psect	text145
 26976  018130                     __ptext145:
 26977                           	opt callstack 0
 26978  018130                     _TMR6_DefaultInterruptHandler:
 26979                           	opt callstack 0
 26980                           
 26981                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26982  018130  52E6               	movf	postinc1,f,c
 26983                           
 26984                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26985                           ;stkvar	_i @ sp[(-1)+0]
 26986                           
 26987                           ;incstack = 0
 26988  018132  0EFF               	movlw	-1
 26989  018134  6AE3               	clrf	plusw1,c
 26990  018136                     l8589:
 26991                           
 26992                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26993                           ;stkvar	_i @ sp[(-1)+0]
 26994  018136  0EFF               	movlw	-1
 26995  018138  50E3               	movf	plusw1,w,c
 26996  01813A  0D02               	mullw	2
 26997  01813C  50F3               	movf	243,w,c
 26998  01813E  0F89               	addlw	low _tickCount
 26999  018140  6ED9               	movwf	fsr2l,c
 27000  018142  6ADA               	clrf	fsr2h,c
 27001  018144  50DE               	movf	postinc2,w,c
 27002  018146  10DE               	iorwf	postinc2,w,c
 27003  018148  B4D8               	btfsc	status,2,c
 27004  01814A  D00A               	goto	l8593
 27005                           
 27006                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 27007                           ;stkvar	_i @ sp[(-1)+0]
 27008  01814C  0EFF               	movlw	-1
 27009  01814E  50E3               	movf	plusw1,w,c
 27010  018150  0D02               	mullw	2
 27011  018152  50F3               	movf	243,w,c
 27012  018154  0F89               	addlw	low _tickCount
 27013  018156  6ED9               	movwf	fsr2l,c
 27014  018158  6ADA               	clrf	fsr2h,c
 27015  01815A  06DE               	decf	postinc2,f,c
 27016  01815C  0E00               	movlw	0
 27017  01815E  5ADD               	subwfb	postdec2,f,c
 27018  018160                     l8593:
 27019                           
 27020                           ;mcc_generated_files/tmr6.c: 207:  }
 27021                           ;stkvar	_i @ sp[(-1)+0]
 27022  018160  0EFF               	movlw	-1
 27023  018162  2AE3               	incf	plusw1,f,c
 27024                           
 27025                           ;stkvar	_i @ sp[(-1)+0]
 27026  018164  0EFF               	movlw	-1
 27027  018166  006F FF8C  F032    	movff	plusw1,btemp
 27028  01816C  0E0B               	movlw	11
 27029  01816E  6432               	cpfsgt	btemp^0,c
 27030  018170  D7E2               	goto	l8589
 27031                           
 27032                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27033  018172  52E5               	movf	postdec1,f,c
 27034  018174  0012               	return		;funcret
 27035  018176                     __end_of_TMR6_DefaultInterruptHandler:
 27036                           	opt callstack 0
 27037                           
 27038 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27039 ;; Defined at:
 27040 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27041 ;; Parameters:    Size  Location     Type
 27042 ;;		None
 27043 ;; Auto vars:     Size  Location     Type
 27044 ;;		None
 27045 ;; Return value:  Size  Location     Type
 27046 ;;                  1    wreg      void 
 27047 ;; Registers used:
 27048 ;;		None
 27049 ;; Tracked objects:
 27050 ;;		On entry : 0/0
 27051 ;;		On exit  : 3F/0
 27052 ;;		Unchanged: 0/0
 27053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27058 ;;Total ram usage:        0 bytes
 27059 ;; Hardware stack levels used:    1
 27060 ;; This function calls:
 27061 ;;		Nothing
 27062 ;; This function is called by:
 27063 ;;		Interrupt level 2
 27064 ;; This function uses a non-reentrant model
 27065 ;;
 27066                           
 27067                           	psect	text146
 27068  018B3C                     __ptext146:
 27069                           	opt callstack 0
 27070  018B3C                     _DMA1_DMASCNT_ISR:
 27071                           	opt callstack 14
 27072                           
 27073                           ;incstack = 0
 27074  018B3C  EE14  F000         	lfsr	1,___inthi_sp
 27075                           
 27076                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27077  018B40  0139               	movlb	57	; () banked
 27078  018B42  91A2               	bcf	162,0,b	;volatile
 27079                           
 27080                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27081  018B44  0100               	movlb	0	; () banked
 27082  018B46  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 27083                           
 27084                           ; BSR set to: 0
 27085  018B48  0011               	retfie		f
 27086  018B4A                     __end_of_DMA1_DMASCNT_ISR:
 27087                           	opt callstack 0
 27088                           
 27089 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27090 ;; Defined at:
 27091 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27092 ;; Parameters:    Size  Location     Type
 27093 ;;		None
 27094 ;; Auto vars:     Size  Location     Type
 27095 ;;		None
 27096 ;; Return value:  Size  Location     Type
 27097 ;;                  1    wreg      void 
 27098 ;; Registers used:
 27099 ;;		None
 27100 ;; Tracked objects:
 27101 ;;		On entry : 0/0
 27102 ;;		On exit  : 3F/39
 27103 ;;		Unchanged: 0/0
 27104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27109 ;;Total ram usage:        0 bytes
 27110 ;; Hardware stack levels used:    1
 27111 ;; This function calls:
 27112 ;;		Nothing
 27113 ;; This function is called by:
 27114 ;;		Interrupt level 2
 27115 ;; This function uses a non-reentrant model
 27116 ;;
 27117                           
 27118                           	psect	text147
 27119  018B54                     __ptext147:
 27120                           	opt callstack 0
 27121  018B54                     _DMA1_DMADCNT_ISR:
 27122                           	opt callstack 14
 27123                           
 27124                           ; BSR set to: 0
 27125                           ;incstack = 0
 27126  018B54  EE14  F000         	lfsr	1,___inthi_sp
 27127                           
 27128                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27129  018B58  0139               	movlb	57	; () banked
 27130  018B5A  93A2               	bcf	162,1,b	;volatile
 27131                           
 27132                           ; BSR set to: 57
 27133  018B5C  0011               	retfie		f
 27134  018B5E                     __end_of_DMA1_DMADCNT_ISR:
 27135                           	opt callstack 0
 27136                           
 27137 ;; *************** function _DMA1_DMAA_ISR *****************
 27138 ;; Defined at:
 27139 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27140 ;; Parameters:    Size  Location     Type
 27141 ;;		None
 27142 ;; Auto vars:     Size  Location     Type
 27143 ;;		None
 27144 ;; Return value:  Size  Location     Type
 27145 ;;                  1    wreg      void 
 27146 ;; Registers used:
 27147 ;;		None
 27148 ;; Tracked objects:
 27149 ;;		On entry : 0/0
 27150 ;;		On exit  : 3F/39
 27151 ;;		Unchanged: 0/0
 27152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27157 ;;Total ram usage:        0 bytes
 27158 ;; Hardware stack levels used:    1
 27159 ;; This function calls:
 27160 ;;		Nothing
 27161 ;; This function is called by:
 27162 ;;		Interrupt level 2
 27163 ;; This function uses a non-reentrant model
 27164 ;;
 27165                           
 27166                           	psect	text148
 27167  018B60                     __ptext148:
 27168                           	opt callstack 0
 27169  018B60                     _DMA1_DMAA_ISR:
 27170                           	opt callstack 14
 27171                           
 27172                           ; BSR set to: 57
 27173                           ;incstack = 0
 27174  018B60  EE14  F000         	lfsr	1,___inthi_sp
 27175                           
 27176                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27177  018B64  0139               	movlb	57	; () banked
 27178  018B66  97A2               	bcf	162,3,b	;volatile
 27179                           
 27180                           ; BSR set to: 57
 27181  018B68  0011               	retfie		f
 27182  018B6A                     __end_of_DMA1_DMAA_ISR:
 27183                           	opt callstack 0
 27184                           
 27185 ;; *************** function _DMA1_DMAOR_ISR *****************
 27186 ;; Defined at:
 27187 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27188 ;; Parameters:    Size  Location     Type
 27189 ;;		None
 27190 ;; Auto vars:     Size  Location     Type
 27191 ;;		None
 27192 ;; Return value:  Size  Location     Type
 27193 ;;                  1    wreg      void 
 27194 ;; Registers used:
 27195 ;;		None
 27196 ;; Tracked objects:
 27197 ;;		On entry : 0/0
 27198 ;;		On exit  : 3F/39
 27199 ;;		Unchanged: 0/0
 27200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27205 ;;Total ram usage:        0 bytes
 27206 ;; Hardware stack levels used:    1
 27207 ;; This function calls:
 27208 ;;		Nothing
 27209 ;; This function is called by:
 27210 ;;		Interrupt level 2
 27211 ;; This function uses a non-reentrant model
 27212 ;;
 27213                           
 27214                           	psect	text149
 27215  018B6C                     __ptext149:
 27216                           	opt callstack 0
 27217  018B6C                     _DMA1_DMAOR_ISR:
 27218                           	opt callstack 14
 27219                           
 27220                           ; BSR set to: 57
 27221                           ;incstack = 0
 27222  018B6C  EE14  F000         	lfsr	1,___inthi_sp
 27223                           
 27224                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27225  018B70  0139               	movlb	57	; () banked
 27226  018B72  95A2               	bcf	162,2,b	;volatile
 27227                           
 27228                           ; BSR set to: 57
 27229  018B74  0011               	retfie		f
 27230  018B76                     __end_of_DMA1_DMAOR_ISR:
 27231                           	opt callstack 0
 27232                           
 27233                           ;
 27234                           ; Interrupt Vector Table @ 0x8
 27235                           ;
 27236                           
 27237                           	psect	ivt0x8
 27238  000008                     __pivt0x8:
 27239                           	opt callstack 0
 27240  000008                     ivt0x8_base:
 27241                           	opt callstack 0
 27242                           
 27243                           ; Vector 0 : SWINT
 27244  000008  62EC               	dw	_Default_ISR shr (0+2)
 27245                           
 27246                           ; Vector 1 : HLVD
 27247  00000A  62EC               	dw	_Default_ISR shr (0+2)
 27248                           
 27249                           ; Vector 2 : OSF
 27250  00000C  62EC               	dw	_Default_ISR shr (0+2)
 27251                           
 27252                           ; Vector 3 : CSW
 27253  00000E  62EC               	dw	_Default_ISR shr (0+2)
 27254                           
 27255                           ; Vector 4 : NVM
 27256  000010  62EC               	dw	_Default_ISR shr (0+2)
 27257                           
 27258                           ; Vector 5 : SCAN
 27259  000012  62EC               	dw	_Default_ISR shr (0+2)
 27260                           
 27261                           ; Vector 6 : CRC
 27262  000014  62EC               	dw	_Default_ISR shr (0+2)
 27263                           
 27264                           ; Vector 7 : IOC
 27265  000016  62EC               	dw	_Default_ISR shr (0+2)
 27266                           
 27267                           ; Vector 8 : INT0
 27268  000018  62CB               	dw	_INT0_ISR shr (0+2)
 27269                           
 27270                           ; Vector 9 : ZCD
 27271  00001A  62EC               	dw	_Default_ISR shr (0+2)
 27272                           
 27273                           ; Vector 10 : AD
 27274  00001C  614D               	dw	_ADCC_ISR shr (0+2)
 27275                           
 27276                           ; Vector 11 : ADT
 27277  00001E  5ED9               	dw	_ADCC_ThresholdISR shr (0+2)
 27278                           
 27279                           ; Vector 12 : CMP1
 27280  000020  62EC               	dw	_Default_ISR shr (0+2)
 27281                           
 27282                           ; Vector 13 : SMT1
 27283  000022  62EC               	dw	_Default_ISR shr (0+2)
 27284                           
 27285                           ; Vector 14 : SMT1PRA
 27286  000024  62EC               	dw	_Default_ISR shr (0+2)
 27287                           
 27288                           ; Vector 15 : SMT1PRW
 27289  000026  62EC               	dw	_Default_ISR shr (0+2)
 27290                           
 27291                           ; Vector 16 : DMA1SCNT
 27292  000028  62CF               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27293                           
 27294                           ; Vector 17 : DMA1DCNT
 27295  00002A  62D5               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27296                           
 27297                           ; Vector 18 : DMA1OR
 27298  00002C  62DB               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27299                           
 27300                           ; Vector 19 : DMA1A
 27301  00002E  62D8               	dw	_DMA1_DMAA_ISR shr (0+2)
 27302                           
 27303                           ; Vector 20 : SPI1RX
 27304  000030  62EC               	dw	_Default_ISR shr (0+2)
 27305                           
 27306                           ; Vector 21 : SPI1TX
 27307  000032  62EC               	dw	_Default_ISR shr (0+2)
 27308                           
 27309                           ; Vector 22 : SPI1
 27310  000034  62EC               	dw	_Default_ISR shr (0+2)
 27311                           
 27312                           ; Vector 23 : I2C1RX
 27313  000036  62EC               	dw	_Default_ISR shr (0+2)
 27314                           
 27315                           ; Vector 24 : I2C1TX
 27316  000038  62EC               	dw	_Default_ISR shr (0+2)
 27317                           
 27318                           ; Vector 25 : I2C1
 27319  00003A  62EC               	dw	_Default_ISR shr (0+2)
 27320                           
 27321                           ; Vector 26 : I2C1E
 27322  00003C  62EC               	dw	_Default_ISR shr (0+2)
 27323                           
 27324                           ; Vector 27 : U1RX
 27325  00003E  61F8               	dw	_UART1_rx_vect_isr shr (0+2)
 27326                           
 27327                           ; Vector 28 : U1TX
 27328  000040  61EE               	dw	_UART1_tx_vect_isr shr (0+2)
 27329                           
 27330                           ; Vector 29 : U1E
 27331  000042  62EC               	dw	_Default_ISR shr (0+2)
 27332                           
 27333                           ; Vector 30 : U1
 27334  000044  62EC               	dw	_Default_ISR shr (0+2)
 27335                           
 27336                           ; Vector 31 : TMR0
 27337  000046  62EC               	dw	_Default_ISR shr (0+2)
 27338                           
 27339                           ; Vector 32 : TMR1
 27340  000048  62EC               	dw	_Default_ISR shr (0+2)
 27341                           
 27342                           ; Vector 33 : TMR1G
 27343  00004A  62EC               	dw	_Default_ISR shr (0+2)
 27344                           
 27345                           ; Vector 34 : TMR2
 27346  00004C  62EC               	dw	_Default_ISR shr (0+2)
 27347                           
 27348                           ; Vector 35 : CCP1
 27349  00004E  62EC               	dw	_Default_ISR shr (0+2)
 27350                           
 27351                           ; Vector 36 : Undefined
 27352  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27353                           
 27354                           ; Vector 37 : NCO1
 27355  000052  62EC               	dw	_Default_ISR shr (0+2)
 27356                           
 27357                           ; Vector 38 : CWG1
 27358  000054  62EC               	dw	_Default_ISR shr (0+2)
 27359                           
 27360                           ; Vector 39 : CLC1
 27361  000056  62EC               	dw	_Default_ISR shr (0+2)
 27362                           
 27363                           ; Vector 40 : INT1
 27364  000058  608F               	dw	_INT1_ISR shr (0+2)
 27365                           
 27366                           ; Vector 41 : CMP2
 27367  00005A  62EC               	dw	_Default_ISR shr (0+2)
 27368                           
 27369                           ; Vector 42 : DMA2SCNT
 27370  00005C  62EC               	dw	_Default_ISR shr (0+2)
 27371                           
 27372                           ; Vector 43 : DMA2DCNT
 27373  00005E  62EC               	dw	_Default_ISR shr (0+2)
 27374                           
 27375                           ; Vector 44 : DMA2OR
 27376  000060  62EC               	dw	_Default_ISR shr (0+2)
 27377                           
 27378                           ; Vector 45 : DMA2A
 27379  000062  62EC               	dw	_Default_ISR shr (0+2)
 27380                           
 27381                           ; Vector 46 : I2C2RX
 27382  000064  62EC               	dw	_Default_ISR shr (0+2)
 27383                           
 27384                           ; Vector 47 : I2C2TX
 27385  000066  62EC               	dw	_Default_ISR shr (0+2)
 27386                           
 27387                           ; Vector 48 : I2C2
 27388  000068  62EC               	dw	_Default_ISR shr (0+2)
 27389                           
 27390                           ; Vector 49 : I2C2E
 27391  00006A  62EC               	dw	_Default_ISR shr (0+2)
 27392                           
 27393                           ; Vector 50 : U2RX
 27394  00006C  620C               	dw	_UART2_rx_vect_isr shr (0+2)
 27395                           
 27396                           ; Vector 51 : U2TX
 27397  00006E  6202               	dw	_UART2_tx_vect_isr shr (0+2)
 27398                           
 27399                           ; Vector 52 : U2E
 27400  000070  62EC               	dw	_Default_ISR shr (0+2)
 27401                           
 27402                           ; Vector 53 : U2
 27403  000072  62EC               	dw	_Default_ISR shr (0+2)
 27404                           
 27405                           ; Vector 54 : TMR3
 27406  000074  62EC               	dw	_Default_ISR shr (0+2)
 27407                           
 27408                           ; Vector 55 : TMR3G
 27409  000076  62EC               	dw	_Default_ISR shr (0+2)
 27410                           
 27411                           ; Vector 56 : TMR4
 27412  000078  62EC               	dw	_Default_ISR shr (0+2)
 27413                           
 27414                           ; Vector 57 : CCP2
 27415  00007A  62EC               	dw	_Default_ISR shr (0+2)
 27416                           
 27417                           ; Vector 58 : Undefined
 27418  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27419                           
 27420                           ; Vector 59 : CWG2
 27421  00007E  62EC               	dw	_Default_ISR shr (0+2)
 27422                           
 27423                           ; Vector 60 : CLC2
 27424  000080  62EC               	dw	_Default_ISR shr (0+2)
 27425                           
 27426                           ; Vector 61 : INT2
 27427  000082  62EC               	dw	_Default_ISR shr (0+2)
 27428                           
 27429                           ; Vector 62 : Undefined
 27430  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27431                           
 27432                           ; Vector 63 : Undefined
 27433  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27434                           
 27435                           ; Vector 64 : Undefined
 27436  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27437                           
 27438                           ; Vector 65 : Undefined
 27439  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27440                           
 27441                           ; Vector 66 : Undefined
 27442  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27443                           
 27444                           ; Vector 67 : Undefined
 27445  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27446                           
 27447                           ; Vector 68 : Undefined
 27448  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27449                           
 27450                           ; Vector 69 : Undefined
 27451  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27452                           
 27453                           ; Vector 70 : TMR5
 27454  000094  5F87               	dw	_TMR5_ISR shr (0+2)
 27455                           
 27456                           ; Vector 71 : TMR5G
 27457  000096  62EC               	dw	_Default_ISR shr (0+2)
 27458                           
 27459                           ; Vector 72 : TMR6
 27460  000098  628D               	dw	_TMR6_ISR shr (0+2)
 27461                           
 27462                           ; Vector 73 : CCP3
 27463  00009A  62EC               	dw	_Default_ISR shr (0+2)
 27464                           
 27465                           ; Vector 74 : CWG3
 27466  00009C  62EC               	dw	_Default_ISR shr (0+2)
 27467                           
 27468                           ; Vector 75 : CLC3
 27469  00009E  62EC               	dw	_Default_ISR shr (0+2)
 27470                           
 27471                           ; Vector 76 : Undefined
 27472  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27473                           
 27474                           ; Vector 77 : Undefined
 27475  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27476                           
 27477                           ; Vector 78 : Undefined
 27478  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27479                           
 27480                           ; Vector 79 : Undefined
 27481  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27482                           
 27483                           ; Vector 80 : CCP4
 27484  0000A8  62EC               	dw	_Default_ISR shr (0+2)
 27485                           
 27486                           ; Vector 81 : CLC4
 27487  0000AA  62EC               	dw	_Default_ISR shr (0+2)
 27488  0000AC                     ivt0x8_undefint:
 27489                           	opt callstack 0
 27490  0000AC  00FF               	reset	
 27491                           
 27492                           	psect	text150
 27493  000000                     __ptext150:
 27494                           	opt callstack 0
 27495                           
 27496                           	psect	rparam
 27497  0000                     
 27498                           	psect	temp
 27499  000032                     btemp:
 27500                           	opt callstack 0
 27501  000032                     	ds	32
 27502  0000                     wtemp0	set	btemp
 27503  0000                     wtemp1	set	btemp+2
 27504  0000                     wtemp2	set	btemp+4
 27505  0000                     wtemp3	set	btemp+6
 27506  0000                     wtemp4	set	btemp+8
 27507  0000                     wtemp5	set	btemp+10
 27508  0000                     wtemp8	set	btemp+1
 27509  0000                     ttemp0	set	btemp
 27510  0000                     ttemp1	set	btemp+3
 27511  0000                     ttemp2	set	btemp+6
 27512  0000                     ttemp3	set	btemp+9
 27513  0000                     ttemp5	set	btemp+1
 27514  0000                     ttemp6	set	btemp+4
 27515  0000                     ttemp7	set	btemp+8
 27516  0000                     ltemp0	set	btemp
 27517  0000                     ltemp1	set	btemp+4
 27518  0000                     ltemp2	set	btemp+8
 27519  0000                     lltemp0	set	btemp
 27520  0000                     lltemp1	set	btemp+8
 27521  0000                     lltemp2	set	btemp+16
 27522  0000                     lltemp3	set	btemp+24
 27523                           tosu	equ	0x3FFF
 27524                           tosh	equ	0x3FFE
 27525                           tosl	equ	0x3FFD
 27526                           stkptr	equ	0x3FFC
 27527                           pclatu	equ	0x3FFB
 27528                           pclath	equ	0x3FFA
 27529                           pcl	equ	0x3FF9
 27530                           tblptru	equ	0x3FF8
 27531                           tblptrh	equ	0x3FF7
 27532                           tblptrl	equ	0x3FF6
 27533                           tablat	equ	0x3FF5
 27534                           prodh	equ	0x3FF4
 27535                           prodl	equ	0x3FF3
 27536                           indf0	equ	0x3FEF
 27537                           postinc0	equ	0x3FEE
 27538                           postdec0	equ	0x3FED
 27539                           preinc0	equ	0x3FEC
 27540                           plusw0	equ	0x3FEB
 27541                           fsr0h	equ	0x3FEA
 27542                           fsr0l	equ	0x3FE9
 27543                           wreg	equ	0x3FE8
 27544                           indf1	equ	0x3FE7
 27545                           postinc1	equ	0x3FE6
 27546                           postdec1	equ	0x3FE5
 27547                           preinc1	equ	0x3FE4
 27548                           plusw1	equ	0x3FE3
 27549                           fsr1h	equ	0x3FE2
 27550                           fsr1l	equ	0x3FE1
 27551                           bsr	equ	0x3FE0
 27552                           indf2	equ	0x3FDF
 27553                           postinc2	equ	0x3FDE
 27554                           postdec2	equ	0x3FDD
 27555                           preinc2	equ	0x3FDC
 27556                           plusw2	equ	0x3FDB
 27557                           fsr2h	equ	0x3FDA
 27558                           fsr2l	equ	0x3FD9
 27559                           status	equ	0x3FD8


Data Sizes:
    Strings     412
    Constant    144
    Data        257
    BSS         1438
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     239
    BANK2           256      0     251
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_42(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_53(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_53(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_25(CODE[9]), STR_24(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_25(CODE[9]), STR_24(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_48(CODE[4]), STR_47(CODE[4]), STR_44(CODE[4]), STR_43(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_48(CODE[4]), STR_47(CODE[4]), STR_44(CODE[4]), STR_43(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_41(CODE[3]), STR_40(CODE[3]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), 
		 -> STR_33(CODE[24]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[10]), STR_28(CODE[10]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_20(CODE[19]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[19]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5103_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_41(CODE[3]), STR_40(CODE[3]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), 
		 -> STR_33(CODE[24]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[10]), STR_28(CODE[10]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_41(CODE[3]), STR_40(CODE[3]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), 
		 -> STR_33(CODE[24]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[10]), STR_28(CODE[10]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_41(CODE[3]), STR_40(CODE[3]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), 
		 -> STR_33(CODE[24]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[10]), STR_28(CODE[10]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_25(CODE[9]), STR_24(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_25(CODE[9]), STR_24(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_25(CODE[9]), 
		 -> STR_24(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4022tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_25(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_24(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  304871
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                        _hid_display
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     430
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   28176
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  168252
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83861
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   27123
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56826
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56562
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   28145
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28324
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26898
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26769
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26437
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6AD      58        0.0%
DATA                 0      0     6AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 30 21:53:57 2019

                     _SPI1_Exchange8bit 894A                __end_of_set_display_info 89A4  
                                     _C 0100                                       _D 0500  
                                     _H 00EF                                       _P 00BD  
                                     _R 00C7                                       _S 0060  
                                     _T FDD3                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 86EE            __end_of_start_switch_handler 894A  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 8B9E                             __CFG_LVP$ON 000000  
                                   l171 8AD2                                     l701 8502  
                                   l581 84D6                                     l835 8958  
                                   _GIE 01FE97                                     _abs 8018  
                                   _pad 6AEE                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 8A66                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8908                      _UART1_Transmit_ISR 84B0  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 88E6  
                          __CFG_ZCD$OFF 000000                                    l2003 424C  
                                  l1028 8236                                    l1250 2DAC  
                                  l1500 8306                                    l1260 2F62  
                                  l2053 1D78                                    l1345 7E82  
                                  l1258 2F5C                                    l2341 6410  
                                  l1703 607A                                    l1561 82D2  
                                  l1481 73C2                                    l2337 725A  
                                  l1618 89A0                                    l1570 5988  
                                  l2348 64E4                                    l1900 123A  
                                  l1485 76DC                                    l2615 2D5E  
                                  l2375 6382                                    l1578 6D0C  
                                  l1666 3D82                                    l2627 2BEE  
                                  l1844 6B4A                                    l2660 38D2  
                                  l1782 7802                    _ADCC_StartConversion 8AEC  
                                  l1791 70C8                                    l1864 3E66  
                                  l1944 0B1A                                    l2736 5CF2  
                                  l7001 249C                                    l1929 066A  
                                  l7011 250C                                    l2923 798C  
                                  l2908 5EBA                                    l7021 256A  
                                  l7005 24E2                                    l2862 69CC  
                                  l1982 4FC8                                    l6311 26F2  
                                  l2767 8058                                    l2759 6210  
                                  l2696 25A2                                    l2936 7908  
                                  l6401 2A52                                    l6321 2748  
                                  l6305 26C0                                    l7041 6512  
                                  l7113 6AD4                                    l7105 6AA0  
                                  l7121 71E2                                    l7019 2550  
                                  l6403 2A64                                    l6411 2AA0  
                                  l6323 2778                                    l6317 2732  
                                  l7053 6548                                    l7125 7224  
                                  l2798 5686                                    l6423 2B78  
                                  l6407 2A6E                                    l7047 6528  
                                  l7143 645E                                    l6441 2C10  
                                  l6433 2BD2                                    l6425 2B9E  
                                  l6329 279A                                    l7217 7FC0  
                                  l7129 7258                                    l7137 63CE  
                                  l6601 484E                                    l8201 5C1E  
                                  l6443 2C22                                    l7075 6622  
                                  l7067 65EE                                    l7091 6A08  
                                  l7155 64E2                                    l7147 64AC  
                                  l7163 7FEE                                    l8203 5C3C  
                                  l6461 2C5C                                    l6373 296A  
                                  l6293 2642                                    l8053 8896  
                                  l7173 626C                                    l6605 4896  
                                  l8133 8310                                    l8213 5C70  
                                  l8205 5C52                                    l6447 2C2E  
                                  l6375 297C                                    l6383 29B6  
                                  l6359 28D8                                    l6287 2602  
                                  l6703 5822                                    l7095 6A20  
                                  l7087 69F6                                    l7191 630A  
                                  l6543 61AE                                    l8223 5CD2  
                                  l6473 2CBA                                    l6457 2C56  
                                  l6369 294A                                    l6297 2658  
                                  l6529 8048                                    l6801 36DA  
                                  l6553 6208                                    l6609 4904  
                                  l6483 2CE6                                    l6379 2986  
                                  l6299 2688                                    l6643 51FE  
                                  l6803 36DE                                    l6723 33B8  
                                  l6547 61B2                                    l6571 797C  
                                  l6627 78F8                                    l8171 85E8  
                                  l6733 340E                                    l7197 631A  
                                  l7189 62EE                                    l8181 5B42  
                                  l9053 7A1A                                    l6903 1EE6  
                                  l6495 2D3E                                    l6487 2CFE  
                                  l6655 5298                                    l6815 3728  
                                  l6743 3496                                    l6735 343E  
                                  l7199 6330                                    l8191 5BBC  
                                  l9153 79CA                                    l6905 1EEC  
                                  l6489 2D0E                                    l6649 5252  
                                  l6833 379E                                    l6809 370C  
                                  l6761 355A                                    l6753 34EC  
                                  l6729 33F8                                    l6585 46E0  
                                  l8193 5BD2                                    l6915 1F3E  
                                  l6907 1F1C                                    l7731 5436  
                                  l6667 536A                                    l6843 3812  
                                  l6819 374E                                    l6755 351C  
                                  l8195 5BF0                                    l9083 7090  
                                  l7741 54CC                                    l7733 5458  
                                  l6861 38A6                                    l6829 3798  
                                  l6749 34D6                                    l8189 5BAE  
                                  l9077 7032                                    l9069 7004  
                                  l9159 79DA                                    l7751 5534  
                                  l9511 6B54                                    l6695 5776  
                                  l6687 56EE                                    l6863 38B6  
                                  l6855 387E                                    l6775 35AE  
                                  l6767 3594                                    l6599 47FE  
                                  l8703 38DE                                    l9087 70A2  
                                  l7753 5572                                    l9505 6B1A  
                                  l6849 384E                                    l6793 3674  
                                  l6785 363E                                    l8811 667A  
                                  l8803 6650                                    l7747 54F8  
                                  l9515 6B90                                    l9531 7824  
                                  l9603 41BE                                    l6795 3686  
                                  l8731 3B38                                    l8723 3B06  
                                  l8805 6660                                    l6973 23B2  
                                  l6885 1E18                                    l7757 55DA  
                                  l7749 5510                                    l9509 6B42  
                                  l9533 7850                                    l9525 7114  
                                  l8709 390E                                    l8903 84D2  
                                  l8831 674C                                    l8823 66DE  
                                  l8807 6666                                    l8815 6682  
                                  l6991 2428                                    l6967 2396  
                                  l6887 1E1E                                    l6879 1DD8  
                                  l7767 5676                                    l9519 6BDA  
                                  l9703 0554                                    l7783 5D84  
                                  l8743 3CB4                                    l8735 3BD4  
                                  l8719 3A2C                                    l8593 8160  
                                  l8809 666C                                    l8817 66AE  
                                  l6977 23D8                                    l6897 1EA6  
                                  l6889 1E4E                                    l9473 68E2  
                                  l9617 00AC                                    l7785 5DF0  
                                  l6987 2422                                    l8667 82E8  
                                  l9811 0CBA                                    l9723 05F6  
                                  l9715 0594                                    l9707 057C  
                                  l9651 022C                                    l8589 8136  
                                  l8925 84FE                                    l8781 5F28  
                                  l8773 5EFC                                    l9485 753E  
                                  l9565 3EA0                                    l9557 3E56  
                                  l9741 06B8                                    l9725 0602  
                                  l9709 058E                                    l9629 00F0  
                                  l9637 0146                                    l8749 3D50  
                                  l8757 3D62                                    l8951 821E  
                                  l9495 75CA                                    l9487 7560  
                                  l9751 077A                                    l9647 01EA  
                                  l9655 0258                                    l8847 77BC  
                                  l8785 5F40                                    l9569 3EBE  
                                  l9761 0926                                    l9745 06F0  
                                  l9681 0396                                    l9665 02FC  
                                  l9673 032A                                    l9649 0216  
                                  l9499 7608                                    l9579 40D0  
                                  l9819 0D24                                    l9827 0D90  
                                  l9835 0EA2                                    l9691 04D2  
                                  l9861 0FD6                                    l9685 0406  
                                  l9599 4182                                    l9863 0FF0  
                                  l9847 0F3A                                    l9783 0B12  
                                  l9775 0A48                                    l9687 0470  
                                  l9943 506A                                    l9935 4FFE  
                                  l9919 4F4A                                    STR_1 FF81  
                                  STR_2 FFB2                                    l9873 1092  
                                  l9785 0B34                                    l9953 5120  
                                  STR_3 FFE0                                    STR_4 FF70  
                                  l9883 10E2                                    l9939 503A  
                                  l9971 423C                                    STR_5 FF92  
                                  STR_6 FFB2                                    l9957 515C  
                                  l9949 50F4                                    STR_7 FFE0  
                                  STR_8 FF5F                                    l9799 0C32  
                                  l9991 4312                                    l9983 42B2  
                                  STR_9 FEDA                                    l9977 4276  
                                  l9899 119A                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5010 83E6  
                                  _T2PR 003FAB                                    u5020 83E8  
                                  u5200 4678                                    u5130 6200  
                                  u5210 46C4                                    u6020 2476  
                                  u5140 6202                                    u5300 81AE  
                                  u5125 61E2                                    u5205 466E  
                                  u6030 24B0                                    u5070 802C  
                                  u6110 660E                                    u5310 81B0  
                                  u6040 24F6                                    u5400 524E  
                                  u5080 6132                                    u5320 78B6  
                                  u6025 2466                                    u5250 47A4  
                                  u5170 793A                                    u5330 78B8  
                                  _T6PR 003F93                                    u5411 5258  
                                  u5235 46FE                                    u5420 5292  
                                  u5500 56E8                                    u6220 7254  
                                  u6300 6260                                    u5236 4704  
                                  u5180 793C                                    _PMD0 0039C0  
                                  u5085 6128                                    u5237 4712  
                                  _PMD1 0039C1                                    u5350 8446  
                                  u5430 52C4                                    u6310 629A  
                                  u5270 487C                                    _PMD2 0039C2  
                                  u5255 479A                                    _PMD3 0039C3  
                                  u4800 2A96                                    u5360 8448  
                                  u6400 7FBC                                    u5520 573E  
                                  u6160 6A4C                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u8010 7BDA  
                                  u4730 29AE                                    u5450 53A2  
                                  u5530 5770                                    u6090 6574  
                                  u4570 8416                                    _PMD6 0039C6  
                                  u6315 6290                                    u5275 4872  
                                  _PMD7 0039C7                                    u4900 2C4E  
                                  u4740 29CE                                    u4708 2920  
                                  u5380 51F8                                    u5540 57A2  
                                  u6180 6AC0                                    u4580 8418  
                                  u4805 2A86                                    u5470 53F4  
                                  u4735 299E                                    u4840 2BC0  
                                  u4680 28FE                                    u7400 54C8  
                                  u5560 585A                                    u5800 37EC  
                                  u5720 3706                                    u6280 7FEA  
                                  u6360 6338                                    u4690 291E  
                                  u5810 3826                                    u6290 624C  
                                  u8035 7C0E                                    u4691 2918  
                                  u8036 7C10                                    u8028 7BDC  
                                  u4940 2CAA                                    u7420 5620  
                                  u5580 58AC                                    u9100 3DBA  
                                  u5820 3862                                    u6380 6362  
                                  u7500 5E7C                                    u8204 3B20  
                                  u5805 37DC                                    u8205 3B1A  
                                  u5910 1F2C                                    u6390 7F9C  
                                  u7430 5622                                    u6295 6242  
                                  u4880 2C34                                    u9200 413E  
                                  u9120 3E2A                                    u5760 3790  
                                  u8224 3BEE                                    u8144 38F8  
                                  u8400 77A8                                    u4945 2C9A  
                                  u8225 3BE8                                    u8145 38F2  
                                  u4970 2CCA                                    u9210 4142  
                                  u9050 718E                                    u8250 3C18  
                                  u8260 5EDA                                    u9140 3E3C  
                                  u9300 0194                                    u8244 3C10  
                                  u8164 3928                                    u5925 20C0  
                                  u8245 3C0A                                    u8165 3922  
                                  u9230 4158                                    u9310 0196  
                                  u8430 77EE                                    u5935 2188  
                                  u9160 3E8C                                    u8184 394A  
                                  u5945 2350                                    u9057 7180  
                                  u8185 3944                                    u9170 40E4  
                                  u9090 3DB8                                    u8418 77AA  
                                  u5980 241A                                    u9420 0562  
                                  u9340 02A6                                    u9181 4114  
                                  u9190 412A                                    u9350 02A8  
                                  u9270 00DA                                    u9191 4128  
                                  u8448 77F0                                    u9450 05C6  
                                  u9390 050E                                    u9720 10B8  
                                  u9560 0A18                                    u9490 0648  
                                  u7970 5C66                                    _PLLR 01CEE0  
                                  u9740 116E                                    u9660 0EE4  
                                  u9820 5060                                    u7885 81EA  
                                  u8950 68D6                                    u9750 1170  
                                  u9830 50A6                                    u9910 430A  
                                  u9920 435E                                    u8970 6952  
                                  u9930 4360                                    u8980 758E  
                                  u9860 5182                                    u9837 5098  
                                  u9950 43BE                                    u9960 43C0  
                                  u9880 4222                                    u8987 7580  
                                  u9980 448A                                    u9990 44AA  
                                  u9985 446C                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 855E  
                         __CFG_FCMEN$ON 000000                                    _dbuf 017C  
                                  _atoi 541C                                    _ctoa 7806  
                                  _main 2D68                                    _dtoa 3D88  
                                  _nanf 7CFA                                    _seed 01CC  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 4EDE  
                                  btemp 0032                                    _xtoa 4208  
                __end_of_check_adc_scan 8B96                           ___fpclassifyf 6084  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 8968               __size_of_clear_hid_pflags 0024  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 87E0  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0052  
                      __end_of_INT0_ISR 8B3A                        __end_of_INT1_ISR 827A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 73CA  
         __end_of_OSCILLATOR_Initialize 8AD8                                   l10031 4578  
                                 l10007 4408                                   l10015 448E  
                                 l10105 16F2                                   l10211 49C6  
                                 l10125 18E8                                   l10117 1830  
                                 l10053 1326                                   l10055 1360  
                                 l10231 4B9C                                   l10223 4AEE  
                                 l10129 191C                                   l10057 1376  
                                 l10217 4A84                                   l10075 14A8  
                                 l10243 73F4                                   l10173 1CA6  
                                 l10149 1A7C                                   l10077 14E2  
                                 l10245 7434                                   l10183 1D04  
                                 l10159 1B2A                                   l10095 165C  
                                 l10079 14F8                                   l10511 2D96  
                                 l10329 6C24                                   l10179 1D00  
                                 l10603 331C                                   l10515 2DB4  
                                 l10189 1D24                                   l10461 5A86  
                                 l10613 3350                                   l10517 2DC6  
                                 l10509 2D8E                                   l10295 74CA  
                                 l10447 5958                                   l10561 2F94  
                                 l10477 5AEA                                   l10581 2FEC  
                                 l10573 2FC8                                   l10591 3258  
                                 l10559 2F66                                   l10585 2FFA  
                                 l10587 30BC                                   l10595 32D2  
                                 l10589 31C6                                   l10597 32FC  
                                 PRLOCK 0039EF                         __end_of___aodiv 541C  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 2D68                                   _ADCLK 003EFF  
                       __end_of___aomod 58D0                                   _ADPCH 003EF1  
                       __end_of___fldiv 38DC                                   _ADREF 003EFD  
                       __end_of___awdiv 663C                         __end_of___flneg 8018  
                                 STR_10 FF00                                   STR_11 FEED  
                                 STR_20 FEC7                                   STR_12 FF4C  
                                 STR_21 FFFC                                   STR_13 FF26  
                                 STR_22 FFF9                                   STR_30 FFA3  
                                 STR_14 FF39                                   STR_31 FFA3  
                                 STR_15 FF13                                   STR_32 FFA3  
                                 STR_24 FFC1                                   STR_16 FEB4  
                                 STR_17 FEB4                                   STR_25 FFD7  
                                 STR_33 FE63                           __CFG_WDTE$OFF 000000  
                                 STR_42 FE8D                                   STR_18 FEC7  
                                 STR_26 FE8E                                   STR_19 FEC7  
                                 STR_27 FE8E                                   STR_51 FFF6  
                                 STR_43 FFE6                                   STR_35 FEA1  
                                 STR_44 FFEE                                   STR_28 FFCD  
                                 STR_36 FE7B                         __end_of___awmod 6AEE  
                                 STR_29 FFCD                                   STR_53 FFF6  
                                 STR_47 FFEA                                   STR_48 FFF2  
                                 _ADRPT 003EEC                         __end_of___flmul 25AC  
                       __end_of___flsub 80A4                         __end_of___fltol 638C  
                                 u10001 44DA                                   u10010 44F0  
                                 u10011 44EE                                   u10020 4504  
                                 u10100 13E6                                   u10030 4508  
                                 u10200 1746                                   u10130 1540  
                                 u10140 1542                                   u10230 19D6  
                                 u10150 1568                                   u10240 19D8  
                                 u10080 13BE                                   u10090 13C0  
                                 u10340 4C10                                   u10280 1B7E  
                                 u10370 74AA                                   u10460 5AD6  
                                 u10470 5AD8                                   _U1P1H 003DED  
                                 _U1P2H 003DEF                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   _U1P3L 003DF0  
                                 _U2P1L 003DD4                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0001  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0057                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 8BB0  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 87B8                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 7E78                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 8A4E                            _DMA1CON1bits 003BFD  
                                 _flags 001F                __size_of_calc_model_data 02C4  
                                 _fputc 68B2              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 81BA                                   _fputs 75BA  
                       __end_of_isdigit 8452                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0052                                   _srand 835A  
                                 _width 001B                                   _putch 8A18  
                       __end_of_islower 83F2                         __end_of_isspace 7FD0  
              _INT1_SetInterruptHandler 86EE                         __end_of_isupper 8422  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0032                                   ltemp1 0036  
                                 ltemp2 003A                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0032                                   ttemp1 0035  
                                 ttemp2 0038                                   ttemp3 003B  
                                 ttemp5 0033                                   ttemp6 0036  
                                 ttemp7 003A                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 869E             _UART1_SetRxInterruptHandler 8676  
                                 wtemp0 0032                                   wtemp1 0034  
                                 wtemp2 0036                                   wtemp3 0038  
                                 wtemp4 003A                                   wtemp5 003C  
                                 wtemp8 0033                         __end_of_sprintf 6E1A  
                       __end_of_tolower 7996                         __end_of_strncmp 5EC4  
                       __end_of_toupper 7912                     ??_UART1_tx_vect_isr 0057  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 8806  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 80EA  
                 __end_of_ringBufS_init 85D6                         __initialization 6E1A  
                     _UART2_rx_vect_isr 8830                            __end_of_atoi 5690  
                          __end_of_ctoa 788E                            __end_of_main 3362  
                          __end_of_dtoa 4208                            __end_of_nanf 7D5C  
                          __end_of_stoa 519C                            __end_of_xtoa 45C2  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0052  
               __end_of_TMR2_Initialize 8A7E                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 86C6                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 0057               __end_of_UART1_tx_vect_isr 87DE  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 8508  
                       _PWM8_Initialize 8AAC                        _UART1_Initialize 7C96  
                     _UART2_tx_vect_isr 8808                      _UART2_Transmit_ISR 84DC  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 7C32  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 81BA  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0052                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 7E6A  
                  _start_switch_handler 892A                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 8B1C  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u807_20 8796                                  u398_48 8916  
                                u807_26 8798                                  u832_20 6676  
                                u832_21 6670                                  u836_24 6742  
                                u836_25 673E                                  u838_20 6768  
                                u829_28 6656                                  u838_26 676A  
                                u846_28 88F4                                  u854_48 88D2  
                                u872_44 79FA                                  u872_45 79F4  
                                u857_28 88AE                    __size_of_hid_display 00D4  
                      __end_of___xxtofl 5CFC   __end_of_ADCC_DischargeSampleCapacitor 8B7E  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 8B76  
              __end_of_send_lcd_cmd_dma 7F7E                     ??_UART2_tx_vect_isr 0057  
             __end_of_UART2_rx_vect_isr 8856              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 8B4A                        _UART2_Initialize 7DBE  
                                _WaitMs 82EE                         _conv_raw_result 38DC  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 638C                                  ___fleq 71A0  
                     _ADCC_ThresholdISR 7B64                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 7652                                  _efgtoa 0000  
                                _floorf 45C2                      ?_ADCC_ThresholdISR 0052  
                                _memset 492E                    __size_of_help_button 0038  
                                clear_0 6E88                                  clear_1 6E9C  
                                clear_2 6EAE                                  clear_3 6EBA  
                                clear_4 6EC6                                  clear_5 6ED2  
                                clear_6 6EDE                                  clear_7 6EEA  
                                clear_8 6EF6                                  _printf 7D5C  
                    _eaDogM_WriteString 7472                                  _strcpy 70CC  
                             ?_ADCC_ISR 0052                                  _strlen 7518  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 7AF8  
                        _PMD_Initialize 8AD8               __end_of_UART2_tx_vect_isr 882E  
                                lltemp0 0032                                  lltemp1 003A  
                                lltemp2 0042                                  lltemp3 004A  
                   ??_ADCC_ThresholdISR 0052                  __end_of_start_adc_scan 7C96  
                          __mediumconst FDD2                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 7ED2  
                      __end_of_vfprintf 7472                              _StartTimer 827A  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 8130  
                     _SYSTEM_Initialize 80A4                              __accesstop 0060  
               __end_of__initialization 6F08                               ?_INT0_ISR 0052  
                             ?_INT1_ISR 0052                    __end_of_display_help 8B8E  
                  __end_of_display_info 8B86               __end_of_CLKREF_Initialize 8B54  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 81FC                   _set_temp_display_help 8AFE  
                      _clear_hid_pflags 8856               __end_of_ADCC_ThresholdISR 7BCC  
                __end_of_ringBufS_flush 76E4                          __pcstackCOMRAM 0052  
                            ___inthi_sp 1000                              ___intlo_sp 1800  
                          __pidataBANK0 8452                            __pidataBANK1 8A7E  
                          __pidataBANK2 7264                               ?_TMR5_ISR 0052  
                             ?_TMR6_ISR 0052                          ivt0x8_undefint 00AC  
                         __end_of_fputc 69D6                           __end_of_fputs 7652  
                         __end_of_srand 838E                   __end_of_TMR5_CallBack 88C2  
                         __end_of_putch 8A32                 __end_of_PWM8_Initialize 8AC2  
               __end_of_TMR6_Initialize 8532                       _adc_int_t_handler 7996  
                __end_of_PMD_Initialize 8AEC                              ??_ADCC_ISR 0052  
                 __end_of_TMR6_CallBack 88E6             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8B60  
                        _clear_adc_scan 8B9E                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0010  
             __end_of_SYSTEM_Initialize 80EA                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                              __pbssBANK0 0060  
                            __pbssBANK1 0100                              __pbssBANK2 02BB  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              _check_help 58D0  
               __end_of_conv_raw_result 3D88                   _INT0_InterruptHandler 0016  
                            ??_INT0_ISR 0052                              ??_INT1_ISR 00F6  
                     __end_of_TimerDone 889E                        _DMA1_DMADCNT_ISR 8B54  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 89FC  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 86C6  
               __end_of_ADCC_Initialize 7B62                              ??_TMR5_ISR 01EB  
             __end_of_adc_int_t_handler 7A14                              ??_TMR6_ISR 0057  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8766   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 873E                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 89A4  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8BA4                          ?_DMA1_DMAA_ISR 0052  
                      _DMA1_DMASCNT_ISR 8B3C                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0052  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 85D6                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 823C                 __size_of_switch_handler 0148  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 8A4E  
                               __Lparam 0000                __end_of_UART1_Initialize 7CFA  
                     __end_of_hid_input 7806                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 519C                                 ___fladd 25AC  
                               ___aomod 5690                                 ___fldiv 3362  
                               ___awdiv 64EE                                 ___flneg 7FD0  
                               ___awmod 69D6                                 ___flmul 1D82  
                               ___flsub 805E                                 ___fltol 621A  
             __end_of_UART1_Receive_ISR 89C2                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 6FF8  
                               __pcinit 6E1A                __end_of_mode_lamp_bright 8B2A  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 8B0E                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 2D68  
                               __ptext1 892A                                 __ptext2 7C32  
                               __ptext3 8AEC                                 __ptext4 8B76  
                               __ptext5 835A                                 __ptext6 6F0E  
                               __ptext7 855E                                 __ptext8 8586  
                               __ptext9 894A                       _UART2_Receive_ISR 89C2  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 8AC2                            __size_of_abs 0046  
                               us548999 5406                            __size_of_pad 0114  
                               _isalpha 8176                                 us559999 58BE  
                               _isdigit 8422                                 us908999 3DA2  
                               _mode_sw 0025                                 us990999 4288  
                               us977999 4EF0                       __end_of_lp_filter 6084  
                               _islower 83C2                                 _isspace 7F7E  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 7E1C                                 _isupper 83F2  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 6D10  
                               _tolower 7912                   __size_of_display_help 0008  
                               _utctime 00B5                   __size_of_display_info 0008  
                               _strncmp 5CFC                                 _toupper 788E  
                  end_of_initialization 6F08               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 8676             _UART1_SetTxInterruptHandler 864E  
   __end_of_UART2_SetRxInterruptHandler 864E             _UART2_SetRxInterruptHandler 8626  
                     __end_of_set_vterm 8A18                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 8BB0  
             __end_of_UART2_Receive_ISR 89E0                          wdtdelay@dcount 00B9  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0058  
                 _INT1_InterruptHandler 0013                               _PORTBbits 003FCB  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 869E  
                          _display_help 8B86                   _TMR5_InterruptHandler 00C1  
                          _display_info 8B7E    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags 887A                       __size_of_ADCC_ISR 002A  
   __end_of_ADCC_SetADIInterruptHandler 878E             _ADCC_SetADIInterruptHandler 8766  
                            _update_lcd 6C02                         _calc_model_data 4C1A  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 7A8E                         _SPI1_Initialize 8A96  
                 __end_of_get_vterm_ptr 84B0                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 8324  
          __end_of_INTERRUPT_Initialize 7C32                              _vterm_dump 6784  
                        __end_of___flge 64EE                          __end_of___fleq 7264  
  __end_of_INT0_DefaultInterruptHandler 8BBA   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 8BB8              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 7ED2                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005C                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0228                          __end_of_floorf 492E  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 00AD  
                        __end_of_memset 4C1A                          __end_of_printf 7DBE  
              __end_of_DMA1_DMADCNT_ISR 8B5E             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 892A                          __end_of_strcpy 71A0  
                        __end_of_strlen 75BA                     start_initialization 6E1A  
  __end_of_TMR5_DefaultInterruptHandler 87B6   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 878E         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 805E                   __end_of_INT1_CallBack 8908  
             __size_of_set_display_info 001E                             __end_of_pad 6C02  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 85AE  
                        _switch_handler 663C           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0600  
                 __end_of___fpclassifyf 621A                           _uart2RxBuffer 0700  
                         _uart1TxBuffer 02BB                __end_of_DMA1_DMASCNT_ISR 8B4A  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR 8B6C  
                   __end_of_hid_display 70CC                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 887A                           _ringBufS_init 85AE  
                           __pdataBANK0 00C7                             __pdataBANK1 01D4  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 83C2  
               __end_of_calc_model_data 4EDE                     __end_of_help_button 82EE  
       __end_of_eaDogM_WriteStringAtPos 835A                 __end_of_DMA1_Initialize 7AF8  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler 873E  
                         __pcstackBANK0 00F6                           __pcstackBANK1 01EB  
              __size_of_TMR2_Initialize 0018                  __end_of_switch_handler 6784  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize 8AAC  
              _UART1_RxInterruptHandler 000A                _UART2_TxInterruptHandler 000D  
                             __end_of_T FE63                        _convert_adc_data 7A14  
             __size_of_ringBufS_put_dma 00AA                            _init_display 6F0E  
                __end_of_DMA1_DMAOR_ISR 8B76                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00C4                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 7F2C                  _PIN_MANAGER_Initialize 76E4  
                  __end_of_wait_lcd_set 8BAA                           __pmediumconst FDD2  
                             __ptext100 86C6                               __ptext101 8A66  
                             __ptext110 86EE                               __ptext102 8A96  
                             __ptext111 8716                               __ptext103 8AAC  
                             __ptext120 8BB6                               __ptext112 7ED2  
                             __ptext104 8AD8                               __ptext121 663C  
                             __ptext113 7A8E                               __ptext105 76E4  
                             __ptext130 8534                               __ptext122 7E1C  
                             __ptext114 8B4A                               __ptext106 8AC2  
                             __ptext131 7996                               __ptext123 81FC  
                             __ptext115 7AF8                               __ptext107 7BCC  
                             __ptext140 84DC                               __ptext132 8BBA  
                             __ptext124 889E                               __ptext116 873E  
                             __ptext108 8B96                               __ptext141 8830  
                             __ptext133 8BBC                               __ptext125 878E  
                             __ptext117 8766                               __ptext109 838E  
                             __ptext150 0000                               __ptext142 89C2  
                             __ptext134 7B64                               __ptext126 8B2C  
                             __ptext118 823C                               __ptext143 8A34  
                             __ptext135 87B8                               __ptext127 8908  
                             __ptext119 88E6                               __ptext144 88C2  
                             __ptext136 84B0                               __ptext128 8BB8  
                             __ptext145 8130                               __ptext137 87E0  
                             __ptext129 8BB0                               __ptext146 8B3C  
                             __ptext138 89A4                               __ptext147 8B54  
                             __ptext139 8808                               __ptext148 8B60  
                             __ptext149 8B6C                               _hid_input 7776  
                    __end_of_StartTimer 82B6                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00A8                                _ADCC_ISR 8534  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 5EC4                             _hid_display 6FF8  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 7BCC                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 8B2C                                _INT1_ISR 823C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0394                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                i2u429_48 854A  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u881_48 881A  
                              i2u883_48 8842                                i2u875_48 7B98  
                              i2u875_49 7BAC                __size_of_TMR5_Initialize 0046  
                              i2u877_48 87CA                                i2u879_48 87F2  
                             _set_vterm 89FC                     __size_of_update_lcd 010E  
                           _help_button 82B6              __end_of_UART1_Transmit_ISR 84DC  
                              _TMR5_ISR 7E1C                                _TMR6_ISR 8A34  
                             _port_data 01DB                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 889E  
                            _ADCON0bits 003EF8                      __end_of_check_help 5AF8  
                             _start_lcd 8BAA                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 88C2  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8986                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 6E2E                               copy_data1 6E50  
                             copy_data2 6E72                _INT0_SetInterruptHandler 8716  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 8626             _UART2_SetTxInterruptHandler 85FE  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 89E0  
                          _send_lcd_cmd 8586                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8BBC                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 85FE                   __end_of_DMA1_DMAA_ISR 8B6A  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 5AF8  
                     ?_DMA1_DMADCNT_ISR 0052                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 8B1C                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0058                                __ptext10 85AE  
                              __ptext11 6FF8                                __ptext20 8856  
                              __ptext12 7776                                __ptext21 8B9E  
                              __ptext13 85D6                                __ptext30 89E0  
                              __ptext22 58D0                                __ptext14 8B0E  
                              __ptext31 7E78                                __ptext23 6784  
                              __ptext15 7A14                                __ptext40 4208  
                              __ptext32 7472                                __ptext24 6D10  
                              __ptext16 38DC                                __ptext41 788E  
                              __ptext33 8BA4                                __ptext25 8482  
                              __ptext17 7CFA                                __ptext50 45C2  
                              __ptext42 83C2                                __ptext34 8BAA  
                              __ptext26 82EE                                __ptext18 8968  
                              __ptext51 6084                                __ptext43 8176  
                              __ptext35 7652                                __ptext27 6C02  
                              __ptext19 5AF8                                __ptext60 8018  
                              __ptext52 621A                                __ptext44 5CFC  
                              __ptext36 492E                                __ptext28 8324  
                              __ptext61 5690                                __ptext53 7FD0  
                              __ptext45 4EDE                                __ptext37 7D5C  
                              __ptext29 7F2C                                __ptext70 541C  
                              __ptext62 519C                                __ptext54 638C  
                              __ptext46 0000                                __ptext38 73CA  
                              __ptext71 7F7E                                __ptext63 7806  
                              __ptext55 71A0                                __ptext47 7912  
                              __ptext39 1244                                __ptext80 887A  
                              __ptext72 8422                                __ptext64 6AEE  
                              __ptext56 3362                                __ptext48 83F2  
                              __ptext81 827A                                __ptext73 89FC  
                              __ptext65 7518                                __ptext57 69D6  
                              __ptext49 70CC                                __ptext90 80A4  
                              __ptext82 8B7E                                __ptext74 8AFE  
                              __ptext66 75BA                                __ptext58 64EE  
                              __ptext91 7DBE                                __ptext83 8B86  
                              __ptext75 8986                                __ptext67 68B2  
                              __ptext59 3D88                                __ptext92 85FE  
                              __ptext84 8B8E                                __ptext76 8A4E  
                              __ptext68 8A18                                __ptext93 8626  
                              __ptext85 4C1A                                __ptext77 8B1C  
                              __ptext69 7320                                __ptext94 7C96  
                              __ptext86 5EC4                                __ptext78 81BA  
                              __ptext95 864E                                __ptext87 805E  
                              __ptext79 82B6                                __ptext96 8676  
                              __ptext88 25AC                                __ptext97 8508  
                              __ptext89 1D82                                __ptext98 869E  
                              __ptext99 80EA                        __size_of_isupper 0030  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 7320                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 05FA  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 01D4                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 8AFE                                _spi_link 00A1  
                              _wdtdelay 7E78              __end_of_UART2_Transmit_ISR 8508  
                              _vfprintf 73CA                __end_of_convert_adc_data 7A8E  
            __end_of_PWM8_LoadDutyValue 81FC    __end_of_INT1_DefaultInterruptHandler 8BB8  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 8BB6  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 8968                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 8BA4  
                    _EXT_INT_Initialize 838E    __end_of_TMR6_DefaultInterruptHandler 8176  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 8130  
  __end_of_ADCC_DefaultInterruptHandler 8BBC   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 8BBA                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 855E  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 8B0E  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 7518  
                 __end_of_mode_lamp_dim 8A66                 __end_of_adc_int_handler 8BBE  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6D10                  _uart2TxBufferRemaining 0029  
                        _FVR_Initialize 8B96                  __end_of_get_raw_result 8986  
                      _send_lcd_cmd_dma 7F2C                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0021        __end_of_INT1_SetInterruptHandler 8716  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0058  
              _UART1_TxInterruptHandler 0007               __end_of_send_lcd_cmd_long 8586  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 8BB6  
        __end_of_PIN_MANAGER_Initialize 7776               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 68B2                 _eaDogM_WriteStringAtPos 8324  
                         _get_vterm_ptr 8482                          _check_adc_scan 8B8E  
             __size_of_UART2_Initialize 005E  
