

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb  7 19:38:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=4,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=4,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=4,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1,group=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=4,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=4,class=CODE,delta=1
   201                           	psect	text179,global,reloc=4,class=CODE,delta=1
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1
   203                           	psect	text181,global,reloc=4,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=4,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1
   210                           	psect	text188,global,reloc=4,class=CODE,delta=1
   211                           	psect	text189,global,reloc=4,class=CODE,delta=1
   212                           	psect	text190,global,reloc=4,class=CODE,delta=1
   213                           	psect	text191,global,reloc=4,class=CODE,delta=1
   214                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   215                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   216                           	psect	text192,global,reloc=4,class=CODE,delta=1
   217                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   218                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   219  0000                     
   220                           ; Version 2.10
   221                           ; Generated 31/07/2019 GMT
   222                           ; 
   223                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   224                           ; All rights reserved.
   225                           ; 
   226                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   227                           ; 
   228                           ; Redistribution and use in source and binary forms, with or without modification, are
   229                           ; permitted provided that the following conditions are met:
   230                           ; 
   231                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   232                           ;        conditions and the following disclaimer.
   233                           ; 
   234                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   235                           ;        of conditions and the following disclaimer in the documentation and/or other
   236                           ;        materials provided with the distribution.
   237                           ; 
   238                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   239                           ;        software without specific prior written permission.
   240                           ; 
   241                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   242                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   243                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   244                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   245                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   246                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   247                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   248                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   249                           ; 
   250                           ; 
   251                           ; Code-generator required, PIC18F57K42 Definitions
   252                           ; 
   253                           ; SFR Addresses
   254  0000                     
   255 ;;_main$3804	offset	0
   256 ;;_main$3800	offset	2
   257 ;;_esr_temp	offset	4
   258 ;;_i_esr	offset	8
   259 ;;_shape	offset	10
   260 ;;_inp_index	offset	11
   261 ;;_k	offset	12
   262 ;;_j	offset	13
   263 ;;_i	offset	14
   264 ;;_mode	offset	15
   265 ;;_i_ror	offset	16
   266 ;;_s	offset=-2 (param)
   267 ;;_voltage	offset=-4 (param)
   268 ;;_voltage	offset=-4 (param)
   269 ;;_voltage	offset=-4 (param)
   270 ;;_set	offset=-1 (param)
   271 ;;_x	offset	0
   272 ;;_r_cal_ptr	offset	2
   273 ;;_y	offset	4
   274 ;;_bAdd	offset=-2 (param)
   275 ;;_data	offset=-1 (param)
   276 ;;_cmd	offset=-1 (param)
   277 ;;_cmd	offset=-1 (param)
   278 ;;_data	offset=-1 (param)
   279 ;;__this	offset=-2 (param)
   280 ;;_soc	offset	0
   281 ;;_slot	offset	2
   282 ;;_cvoltage	offset=-4 (param)
   283 ;;_h	offset=-2 (param)
   284 ;;_h	offset=-2 (param)
   285 ;;_fsm	offset=-1 (param)
   286 ;;_mode	offset=-1 (param)
   287 ;;_mode	offset=-1 (param)
   288 ;;_cmd	offset=-1 (param)
   289 ;;_x	offset	0
   290 ;;_x	offset	0
   291 ;;_y	offset	2
   292 ;;_r_cal_ptr	offset	4
   293 ;;_GIEBitValue	offset	0
   294 ;;_bAdd	offset=-2 (param)
   295 ;;_bData	offset=-3 (param)
   296 ;;_channel	offset=-1 (param)
   297 ;;_c	offset	0
   298 ;;_shape	offset=-1 (param)
   299 ;;_reset	offset=-2 (param)
   300 ;;_i	offset=-1 (param)
   301 ;;_a200	offset	0
   302 ;;_a100	offset	2
   303 ;;_mode	offset=-1 (param)
   304 ;;_value	offset=-2 (param)
   305 ;;_window	offset=-4 (param)
   306 ;;_standard	offset=-6 (param)
   307 ;;_i	offset	0
   308 ;;_h	offset=-2 (param)
   309 ;;_flipper	offset=-1 (param)
   310 ;;_f	offset	0
   311 ;;_ap	offset	6
   312 ;;_s	offset=-3 (param)
   313 ;;_fmt	offset=-5 (param)
   314 ;;_line	offset=-1 (param)
   315 ;;_vterm	offset=-2 (param)
   316 ;;_numMilliseconds	offset=-2 (param)
   317 ;;_vterm	offset=-1 (param)
   318 ;;_row	offset	0
   319 ;;_r	offset=-1 (param)
   320 ;;_c	offset=-2 (param)
   321 ;;_strPtr	offset=-4 (param)
   322 ;;_strPtr	offset=-1 (param)
   323 ;;_delay	offset=-4 (param)
   324 ;;_strPtr	offset=-1 (param)
   325 ;;_strPtr	offset=-2 (param)
   326 ;;__this	offset=-2 (param)
   327 ;;_clearBuffer	offset=-3 (param)
   328 ;;_s	offset	0
   329 ;;_k	offset	2
   330 ;;_dest	offset=-2 (param)
   331 ;;_c	offset=-4 (param)
   332 ;;_n	offset=-6 (param)
   333 ;;_ap	offset	0
   334 ;;_fmt	offset=-3 (param)
   335 ;;_cfmt	offset	0
   336 ;;_fp	offset=-2 (param)
   337 ;;_fmt	offset=-4 (param)
   338 ;;_ap	offset=-6 (param)
   339 ;;_vfpfcnvrt$6038	offset	0
   340 ;;_vfpfcnvrt$6049	offset	2
   341 ;;_vfpfcnvrt$6037	offset	4
   342 ;;_llu	offset	6
   343 ;;_ll	offset	14
   344 ;;_f	offset	22
   345 ;;_ct	offset	26
   346 ;;_cp	offset	29
   347 ;;_c	offset	31
   348 ;;_fp	offset=-2 (param)
   349 ;;_fmt	offset=-4 (param)
   350 ;;_ap	offset=-6 (param)
   351 ;;_xtoa$6023	offset	0
   352 ;;_xtoa$6022	offset	2
   353 ;;_n	offset	4
   354 ;;_c	offset	12
   355 ;;_i	offset	14
   356 ;;_w	offset	16
   357 ;;_p	offset	18
   358 ;;_fp	offset=-2 (param)
   359 ;;_d	offset=-10 (param)
   360 ;;_x	offset=-11 (param)
   361 ;;_toupper$6829	offset	0
   362 ;;_c	offset=-2 (param)
   363 ;;_c	offset=-2 (param)
   364 ;;_c	offset=-2 (param)
   365 ;;_n	offset	0
   366 ;;_i	offset	8
   367 ;;_w	offset	10
   368 ;;_p	offset	12
   369 ;;_fp	offset=-2 (param)
   370 ;;_d	offset=-10 (param)
   371 ;;_counter	offset	0
   372 ;;_dividend	offset=-8 (param)
   373 ;;_divisor	offset=-16 (param)
   374 ;;_quotient	offset	0
   375 ;;_counter	offset	8
   376 ;;_dividend	offset=-8 (param)
   377 ;;_divisor	offset=-16 (param)
   378 ;;_r	offset	0
   379 ;;_l	offset	2
   380 ;;__l	offset=-2 (param)
   381 ;;__r	offset=-4 (param)
   382 ;;_n	offset=-6 (param)
   383 ;;_nuls	offset	0
   384 ;;_l	offset	7
   385 ;;_p	offset	9
   386 ;;_cp	offset	11
   387 ;;_w	offset	13
   388 ;;_i	offset	15
   389 ;;_fp	offset=-2 (param)
   390 ;;_s	offset=-4 (param)
   391 ;;_efgtoa$5995	offset	0
   392 ;;_efgtoa$5994	offset	2
   393 ;;_efgtoa$5993	offset	4
   394 ;;_efgtoa$5989	offset	6
   395 ;;_efgtoa$5985	offset	8
   396 ;;_efgtoa$5984	offset	10
   397 ;;_u	offset	12
   398 ;;_g	offset	16
   399 ;;_l	offset	20
   400 ;;_h	offset	24
   401 ;;_ou	offset	28
   402 ;;_n	offset	32
   403 ;;_e	offset	34
   404 ;;_i	offset	36
   405 ;;_w	offset	38
   406 ;;_p	offset	40
   407 ;;_sign	offset	42
   408 ;;_d	offset	44
   409 ;;_ne	offset	46
   410 ;;_m	offset	48
   411 ;;_pp	offset	50
   412 ;;_t	offset	52
   413 ;;_mode	offset	54
   414 ;;_nmode	offset	55
   415 ;;_fp	offset=-2 (param)
   416 ;;_f	offset=-6 (param)
   417 ;;_c	offset=-7 (param)
   418 ;;_tolower$6814	offset	0
   419 ;;_c	offset=-2 (param)
   420 ;;_c	offset=-2 (param)
   421 ;;_d	offset	0
   422 ;;_s	offset	2
   423 ;;_dest	offset=-2 (param)
   424 ;;_src	offset=-4 (param)
   425 ;;_u	offset	0
   426 ;;_m	offset	4
   427 ;;_e	offset	8
   428 ;;_x	offset=-4 (param)
   429 ;;_u	offset	0
   430 ;;_e	offset	4
   431 ;;_x	offset=-4 (param)
   432 ;;_exp1	offset	0
   433 ;;_sign1	offset	1
   434 ;;_f1	offset=-4 (param)
   435 ;;_f1	offset=-4 (param)
   436 ;;_ff1	offset=-4 (param)
   437 ;;_ff2	offset=-8 (param)
   438 ;;_sign	offset	0
   439 ;;_counter	offset	1
   440 ;;_dividend	offset=-2 (param)
   441 ;;_divisor	offset=-4 (param)
   442 ;;_quotient	offset	0
   443 ;;_sign	offset	2
   444 ;;_counter	offset	3
   445 ;;_dividend	offset=-2 (param)
   446 ;;_divisor	offset=-4 (param)
   447 ;;_dtoa$5961	offset	0
   448 ;;_n	offset	2
   449 ;;_i	offset	10
   450 ;;_s	offset	12
   451 ;;_w	offset	14
   452 ;;_p	offset	16
   453 ;;_fp	offset=-2 (param)
   454 ;;_d	offset=-10 (param)
   455 ;;_a	offset=-2 (param)
   456 ;;_sign	offset	0
   457 ;;_counter	offset	1
   458 ;;_dividend	offset=-8 (param)
   459 ;;_divisor	offset=-16 (param)
   460 ;;_quotient	offset	0
   461 ;;_sign	offset	8
   462 ;;_counter	offset	9
   463 ;;_dividend	offset=-8 (param)
   464 ;;_divisor	offset=-16 (param)
   465 ;;_w	offset	0
   466 ;;_fp	offset=-2 (param)
   467 ;;_c	offset=-3 (param)
   468 ;;_w	offset	0
   469 ;;_i	offset	2
   470 ;;_fp	offset=-2 (param)
   471 ;;_buf	offset=-4 (param)
   472 ;;_p	offset=-6 (param)
   473 ;;_a	offset	0
   474 ;;_s	offset=-2 (param)
   475 ;;_i	offset	0
   476 ;;_c	offset	2
   477 ;;_s	offset=-2 (param)
   478 ;;_fp	offset=-4 (param)
   479 ;;_c	offset=-2 (param)
   480 ;;_fp	offset=-4 (param)
   481 ;;_c	offset=-1 (param)
   482 ;;__this	offset=-2 (param)
   483 ;;_c	offset=-3 (param)
   484 ;;_atoi$6545	offset	0
   485 ;;_atoi$6543	offset	2
   486 ;;_atoi$6544	offset	4
   487 ;;_n	offset	5
   488 ;;_neg	offset	7
   489 ;;_s	offset=-2 (param)
   490 ;;_isspace$6594	offset	0
   491 ;;_c	offset=-2 (param)
   492 ;;_c	offset=-2 (param)
   493 ;;_vterm	offset=-1 (param)
   494 ;;_new_response_info	offset=-1 (param)
   495 ;;_new_response_info	offset=-1 (param)
   496 ;;_level	offset=-2 (param)
   497 ;;_dutyValue	offset=-2 (param)
   498 ;;_timer	offset=-1 (param)
   499 ;;_timer	offset=-1 (param)
   500 ;;_count	offset=-3 (param)
   501 ;;_h	offset=-2 (param)
   502 ;;_u	offset	0
   503 ;;_x	offset=-4 (param)
   504 ;;_chan	offset=-1 (param)
   505 ;;_to_what	offset=-2 (param)
   506 ;;_u	offset	0
   507 ;;_s	offset=-2 (param)
   508 ;;_index	offset=-1 (param)
   509 ;;_arg	offset	0
   510 ;;_exp	offset	4
   511 ;;_sign	offset=-1 (param)
   512 ;;_val	offset=-5 (param)
   513 ;;_grs	offset	0
   514 ;;_rem	offset	4
   515 ;;_new_exp	offset	8
   516 ;;_aexp	offset	10
   517 ;;_bexp	offset	11
   518 ;;_sign	offset	12
   519 ;;_b	offset=-4 (param)
   520 ;;_a	offset=-8 (param)
   521 ;;_ff1	offset=-4 (param)
   522 ;;_ff2	offset=-8 (param)
   523 ;;_lp_speed	offset	0
   524 ;;_new	offset=-4 (param)
   525 ;;_bn	offset=-5 (param)
   526 ;;_slow	offset=-6 (param)
   527 ;;_b	offset=-4 (param)
   528 ;;_a	offset=-8 (param)
   529 ;;_grs	offset	0
   530 ;;_bexp	offset	1
   531 ;;_aexp	offset	2
   532 ;;_signs	offset	3
   533 ;;_b	offset=-4 (param)
   534 ;;_a	offset=-8 (param)
   535 ;;_prod	offset	0
   536 ;;_grs	offset	4
   537 ;;_temp	offset	8
   538 ;;_bexp	offset	10
   539 ;;_aexp	offset	11
   540 ;;_sign	offset	12
   541 ;;_b	offset=-4 (param)
   542 ;;_a	offset=-8 (param)
   543 ;;_InterruptHandler	offset=-3 (param)
   544 ;;_InterruptHandler	offset=-3 (param)
   545 ;;_InterruptHandler	offset=-3 (param)
   546 ;;_InterruptHandler	offset=-3 (param)
   547 ;;_InterruptHandler	offset=-3 (param)
   548 ;;_InterruptHandler	offset=-3 (param)
   549 ;;_state	offset	0
   550 ;;_InterruptHandler	offset=-3 (param)
   551 ;;_InterruptHandler	offset=-3 (param)
   552 ;;_InterruptHandler	offset=-3 (param)
   553 ;;_InterruptHandler	offset=-3 (param)
   554 ;;_i	offset	0
   555 ;;_sw_value	offset	1
   556 ;;_timerVal	offset=-2 (param)
   557 ;;_light	offset	0
   558 ;;_mode	offset=-1 (param)
   559 ;;_chan	offset=-1 (param)
   560 ;;_to_what	offset=-2 (param)
   561 ;;_u	offset	0
   562 ;;_s	offset=-2 (param)
   563 ;;_index	offset=-1 (param)
   564 ;;_arg	offset	0
   565 ;;_exp	offset	4
   566 ;;_sign	offset=-1 (param)
   567 ;;_val	offset=-5 (param)
   568 ;;_b	offset=-4 (param)
   569 ;;_a	offset=-8 (param)
   570 ;;_grs	offset	0
   571 ;;_bexp	offset	1
   572 ;;_aexp	offset	2
   573 ;;_signs	offset	3
   574 ;;_b	offset=-4 (param)
   575 ;;_a	offset=-8 (param)
   576 ;;_prod	offset	0
   577 ;;_grs	offset	4
   578 ;;_temp	offset	8
   579 ;;_bexp	offset	10
   580 ;;_aexp	offset	11
   581 ;;_sign	offset	12
   582 ;;_b	offset=-4 (param)
   583 ;;_a	offset=-8 (param)
   584 ;;_grs	offset	0
   585 ;;_rem	offset	4
   586 ;;_new_exp	offset	8
   587 ;;_aexp	offset	10
   588 ;;_bexp	offset	11
   589 ;;_sign	offset	12
   590 ;;_b	offset=-4 (param)
   591 ;;_a	offset=-8 (param)
   592 ;;_ff1	offset=-4 (param)
   593 ;;_ff2	offset=-8 (param)
   594 ;;_timerVal	offset=-2 (param)
   595 ;;_adj	offset	0
   596 ;;_log_ptr	offset	4
   597 ;;_f	offset	0
   598 ;;_ap	offset	6
   599 ;;_s	offset=-3 (param)
   600 ;;_fmt	offset=-5 (param)
   601 ;;_cfmt	offset	0
   602 ;;_fp	offset=-2 (param)
   603 ;;_fmt	offset=-4 (param)
   604 ;;_ap	offset=-6 (param)
   605 ;;_vfpfcnvrt$6038	offset	0
   606 ;;_vfpfcnvrt$6049	offset	2
   607 ;;_vfpfcnvrt$6037	offset	4
   608 ;;_llu	offset	6
   609 ;;_ll	offset	14
   610 ;;_f	offset	22
   611 ;;_ct	offset	26
   612 ;;_cp	offset	29
   613 ;;_c	offset	31
   614 ;;_fp	offset=-2 (param)
   615 ;;_fmt	offset=-4 (param)
   616 ;;_ap	offset=-6 (param)
   617 ;;_xtoa$6023	offset	0
   618 ;;_xtoa$6022	offset	2
   619 ;;_n	offset	4
   620 ;;_c	offset	12
   621 ;;_i	offset	14
   622 ;;_w	offset	16
   623 ;;_p	offset	18
   624 ;;_fp	offset=-2 (param)
   625 ;;_d	offset=-10 (param)
   626 ;;_x	offset=-11 (param)
   627 ;;_toupper$6829	offset	0
   628 ;;_c	offset=-2 (param)
   629 ;;_c	offset=-2 (param)
   630 ;;_c	offset=-2 (param)
   631 ;;_n	offset	0
   632 ;;_i	offset	8
   633 ;;_w	offset	10
   634 ;;_p	offset	12
   635 ;;_fp	offset=-2 (param)
   636 ;;_d	offset=-10 (param)
   637 ;;_counter	offset	0
   638 ;;_dividend	offset=-8 (param)
   639 ;;_divisor	offset=-16 (param)
   640 ;;_quotient	offset	0
   641 ;;_counter	offset	8
   642 ;;_dividend	offset=-8 (param)
   643 ;;_divisor	offset=-16 (param)
   644 ;;_r	offset	0
   645 ;;_l	offset	2
   646 ;;__l	offset=-2 (param)
   647 ;;__r	offset=-4 (param)
   648 ;;_n	offset=-6 (param)
   649 ;;_nuls	offset	0
   650 ;;_l	offset	7
   651 ;;_p	offset	9
   652 ;;_cp	offset	11
   653 ;;_w	offset	13
   654 ;;_i	offset	15
   655 ;;_fp	offset=-2 (param)
   656 ;;_s	offset=-4 (param)
   657 ;;_efgtoa$5995	offset	0
   658 ;;_efgtoa$5994	offset	2
   659 ;;_efgtoa$5993	offset	4
   660 ;;_efgtoa$5989	offset	6
   661 ;;_efgtoa$5985	offset	8
   662 ;;_efgtoa$5984	offset	10
   663 ;;_u	offset	12
   664 ;;_g	offset	16
   665 ;;_l	offset	20
   666 ;;_h	offset	24
   667 ;;_ou	offset	28
   668 ;;_n	offset	32
   669 ;;_e	offset	34
   670 ;;_i	offset	36
   671 ;;_w	offset	38
   672 ;;_p	offset	40
   673 ;;_sign	offset	42
   674 ;;_d	offset	44
   675 ;;_ne	offset	46
   676 ;;_m	offset	48
   677 ;;_pp	offset	50
   678 ;;_t	offset	52
   679 ;;_mode	offset	54
   680 ;;_nmode	offset	55
   681 ;;_fp	offset=-2 (param)
   682 ;;_f	offset=-6 (param)
   683 ;;_c	offset=-7 (param)
   684 ;;_tolower$6814	offset	0
   685 ;;_c	offset=-2 (param)
   686 ;;_c	offset=-2 (param)
   687 ;;_d	offset	0
   688 ;;_s	offset	2
   689 ;;_dest	offset=-2 (param)
   690 ;;_src	offset=-4 (param)
   691 ;;_u	offset	0
   692 ;;_m	offset	4
   693 ;;_e	offset	8
   694 ;;_x	offset=-4 (param)
   695 ;;_u	offset	0
   696 ;;_e	offset	4
   697 ;;_x	offset=-4 (param)
   698 ;;_exp1	offset	0
   699 ;;_sign1	offset	1
   700 ;;_f1	offset=-4 (param)
   701 ;;_f1	offset=-4 (param)
   702 ;;_ff1	offset=-4 (param)
   703 ;;_ff2	offset=-8 (param)
   704 ;;_sign	offset	0
   705 ;;_counter	offset	1
   706 ;;_dividend	offset=-2 (param)
   707 ;;_divisor	offset=-4 (param)
   708 ;;_quotient	offset	0
   709 ;;_sign	offset	2
   710 ;;_counter	offset	3
   711 ;;_dividend	offset=-2 (param)
   712 ;;_divisor	offset=-4 (param)
   713 ;;_dtoa$5961	offset	0
   714 ;;_n	offset	2
   715 ;;_i	offset	10
   716 ;;_s	offset	12
   717 ;;_w	offset	14
   718 ;;_p	offset	16
   719 ;;_fp	offset=-2 (param)
   720 ;;_d	offset=-10 (param)
   721 ;;_a	offset=-2 (param)
   722 ;;_sign	offset	0
   723 ;;_counter	offset	1
   724 ;;_dividend	offset=-8 (param)
   725 ;;_divisor	offset=-16 (param)
   726 ;;_quotient	offset	0
   727 ;;_sign	offset	8
   728 ;;_counter	offset	9
   729 ;;_dividend	offset=-8 (param)
   730 ;;_divisor	offset=-16 (param)
   731 ;;_w	offset	0
   732 ;;_fp	offset=-2 (param)
   733 ;;_c	offset=-3 (param)
   734 ;;_w	offset	0
   735 ;;_i	offset	2
   736 ;;_fp	offset=-2 (param)
   737 ;;_buf	offset=-4 (param)
   738 ;;_p	offset=-6 (param)
   739 ;;_a	offset	0
   740 ;;_s	offset=-2 (param)
   741 ;;_i	offset	0
   742 ;;_c	offset	2
   743 ;;_s	offset=-2 (param)
   744 ;;_fp	offset=-4 (param)
   745 ;;_c	offset=-2 (param)
   746 ;;_fp	offset=-4 (param)
   747 ;;_c	offset=-1 (param)
   748 ;;__this	offset=-2 (param)
   749 ;;_c	offset=-3 (param)
   750 ;;_atoi$6545	offset	0
   751 ;;_atoi$6543	offset	2
   752 ;;_atoi$6544	offset	4
   753 ;;_n	offset	5
   754 ;;_neg	offset	7
   755 ;;_s	offset=-2 (param)
   756 ;;_isspace$6594	offset	0
   757 ;;_c	offset=-2 (param)
   758 ;;_c	offset=-2 (param)
   759 ;;_dsize	offset=-2 (param)
   760 ;;_u	offset	0
   761 ;;_x	offset=-4 (param)
   762 ;;_f1p	offset=-2 (param)
   763 ;;_f2	offset=-6 (param)
   764 ;;_timer	offset=-1 (param)
   765 ;;_count	offset=-3 (param)
   766 ;;_channel	offset=-1 (param)
   767 ;;_i	offset	0
   768                           
   769                           	psect	idataBIGRAM
   770  016F86                     __pidataBIGRAM:
   771                           	opt callstack 0
   772                           
   773                           ;initializer for _port_data
   774  016F86  FF                 	db	255
   775  016F87  00                 	db	0
   776  016F88  FF                 	db	255
   777  016F89  00                 	db	0
   778  016F8A  FF                 	db	255
   779  016F8B  00                 	db	0
   780  016F8C  FF                 	db	255
   781  016F8D  00                 	db	0
   782  016F8E  FF                 	db	255
   783  016F8F  00                 	db	0
   784  016F90  FF                 	db	255
   785  016F91  00                 	db	0
   786  016F92  FF                 	db	255
   787  016F93  00                 	db	0
   788  016F94  FF                 	db	255
   789  016F95  00                 	db	0
   790  016F96  00                 	db	0
   791  016F97  00                 	db	0
   792  016F98  00                 	db	0
   793  016F99  00                 	db	0
   794  016F9A  00                 	db	0
   795  016F9B  00                 	db	0
   796  016F9C  00                 	db	0
   797  016F9D  00                 	db	0
   798  016F9E  00                 	db	0
   799  016F9F  00                 	db	0
   800  016FA0  00                 	db	0
   801  016FA1  00                 	db	0
   802  016FA2  00                 	db	0
   803  016FA3  00                 	db	0
   804  016FA4  00                 	db	0
   805  016FA5  00                 	db	0
   806  016FA6  00                 	db	0
   807  016FA7  00                 	db	0
   808  016FA8  00                 	db	0
   809  016FA9  00                 	db	0
   810  016FAA  00                 	db	0
   811  016FAB  00                 	db	0
   812  016FAC  00                 	db	0
   813  016FAD  00                 	db	0
   814  016FAE  00                 	db	0
   815  016FAF  00                 	db	0
   816  016FB0  00                 	db	0
   817  016FB1  00                 	db	0
   818  016FB2  00                 	db	0
   819  016FB3  00                 	db	0
   820  016FB4  00                 	db	0
   821  016FB5  00                 	db	0
   822  016FB6  00                 	db	0
   823  016FB7  00                 	db	0
   824  016FB8  00                 	db	0
   825  016FB9  00                 	db	0
   826  016FBA  00                 	db	0
   827  016FBB  00                 	db	0
   828  016FBC  00                 	db	0
   829  016FBD  00                 	db	0
   830  016FBE  00                 	db	0
   831  016FBF  00                 	db	0
   832  016FC0  00                 	db	0
   833  016FC1  00                 	db	0
   834  016FC2  00                 	db	0
   835  016FC3  00                 	db	0
   836  016FC4  00                 	db	0
   837  016FC5  00                 	db	0
   838  016FC6  00                 	db	0
   839  016FC7  00                 	db	0
   840  016FC8  00                 	db	0
   841  016FC9  00                 	db	0
   842  016FCA  00                 	db	0
   843  016FCB  00                 	db	0
   844  016FCC  00                 	db	0
   845  016FCD  00                 	db	0
   846  016FCE  00                 	db	0
   847  016FCF  00                 	db	0
   848  016FD0  00                 	db	0
   849  016FD1  00                 	db	0
   850  016FD2  00                 	db	0
   851  016FD3  00                 	db	0
   852  016FD4  00                 	db	0
   853  016FD5  00                 	db	0
   854  016FD6  00                 	db	0
   855  016FD7  00                 	db	0
   856  016FD8  00                 	db	0
   857  016FD9  00                 	db	0
   858  016FDA  00                 	db	0
   859  016FDB  00                 	db	0
   860  016FDC  00                 	db	0
   861  016FDD  00                 	db	0
   862  016FDE  00                 	db	0
   863  016FDF  00                 	db	0
   864  016FE0  00                 	db	0
   865  016FE1  00                 	db	0
   866  016FE2  00                 	db	0
   867  016FE3  00                 	db	0
   868  016FE4  00                 	db	0
   869  016FE5  00                 	db	0
   870  016FE6  00                 	db	0
   871  016FE7  00                 	db	0
   872  016FE8  00                 	db	0
   873  016FE9  00                 	db	0
   874  016FEA  00                 	db	0
   875  016FEB  00                 	db	0
   876  016FEC  00                 	db	0
   877  016FED  00                 	db	0
   878  016FEE  00                 	db	0
   879  016FEF  00                 	db	0
   880  016FF0  00                 	db	0
   881  016FF1  00                 	db	0
   882  016FF2  00                 	db	0
   883  016FF3  00                 	db	0
   884  016FF4  00                 	db	0
   885  016FF5  00                 	db	0
   886  016FF6  00                 	db	0
   887  016FF7  00                 	db	0
   888  016FF8  00                 	db	0
   889  016FF9  00                 	db	0
   890  016FFA  00                 	db	0
   891  016FFB  00                 	db	0
   892  016FFC  00                 	db	0
   893  016FFD  00                 	db	0
   894  016FFE  00                 	db	0
   895  016FFF  00                 	db	0
   896  017000  00                 	db	0
   897  017001  00                 	db	0
   898  017002  00                 	db	0
   899  017003  00                 	db	0
   900  017004  00                 	db	0
   901  017005  00                 	db	0
   902  017006  00                 	db	0
   903  017007  00                 	db	0
   904  017008  00                 	db	0
   905  017009  00                 	db	0
   906  01700A  00                 	db	0
   907  01700B  00                 	db	0
   908  01700C  00                 	db	0
   909  01700D  00                 	db	0
   910  01700E  00                 	db	0
   911  01700F  00                 	db	0
   912  017010  00                 	db	0
   913  017011  00                 	db	0
   914  017012  00                 	db	0
   915  017013  00                 	db	0
   916  017014  00                 	db	0
   917  017015  00                 	db	0
   918  017016  00                 	db	0
   919  017017  00                 	db	0
   920  017018  00                 	db	0
   921  017019  00                 	db	0
   922  01701A  00                 	db	0
   923  01701B  00                 	db	0
   924  01701C  00                 	db	0
   925  01701D  00                 	db	0
   926  01701E  00                 	db	0
   927  01701F  00                 	db	0
   928  017020  00                 	db	0
   929  017021  00                 	db	0
   930  017022  00                 	db	0
   931  017023  00                 	db	0
   932  017024  00                 	db	0
   933  017025  00                 	db	0
   934  017026  00                 	db	0
   935  017027  00                 	db	0
   936  017028  00                 	db	0
   937  017029  00                 	db	0
   938  01702A  00                 	db	0
   939  01702B  00                 	db	0
   940  01702C  00                 	db	0
   941  01702D  00                 	db	0
   942  01702E  00                 	db	0
   943  01702F  00                 	db	0
   944  017030  00                 	db	0
   945  017031  00                 	db	0
   946  017032  00                 	db	0
   947  017033  00                 	db	0
   948  017034  00                 	db	0
   949  017035  00                 	db	0
   950  017036  00                 	db	0
   951  017037  00                 	db	0
   952  017038  00                 	db	0
   953  017039  00                 	db	0
   954  01703A  00                 	db	0
   955  01703B  00                 	db	0
   956  01703C  00                 	db	0
   957  01703D  00                 	db	0
   958  01703E  00                 	db	0
   959  01703F  00                 	db	0
   960  017040  00                 	db	0
   961  017041  00                 	db	0
   962  017042  00                 	db	0
   963  017043  00                 	db	0
   964  017044  00                 	db	0
   965  017045  00                 	db	0
   966  017046  00                 	db	0
   967  017047  00                 	db	0
   968  017048  00                 	db	0
   969  017049  00                 	db	0
   970  01704A  00                 	db	0
   971  01704B  00                 	db	0
   972  01704C  00                 	db	0
   973  01704D  00                 	db	0
   974  01704E  00                 	db	0
   975  01704F  00                 	db	0
   976  017050  00                 	db	0
   977  017051  00                 	db	0
   978  017052  00                 	db	0
   979  017053  00                 	db	0
   980  017054  00                 	db	0
   981  017055  00                 	db	0
   982  017056  00                 	db	0
   983  017057  00                 	db	0
   984  017058  00                 	db	0
   985  017059  00                 	db	0
   986  01705A  00                 	db	0
   987  01705B  00                 	db	0
   988  01705C  00                 	db	0
   989  01705D  00                 	db	0
   990  01705E  00                 	db	0
   991  01705F  00                 	db	0
   992  017060  00                 	db	0
   993  017061  00                 	db	0
   994  017062  00                 	db	0
   995  017063  00                 	db	0
   996  017064  00                 	db	0
   997  017065  00                 	db	0
   998  017066  00                 	db	0
   999  017067  00                 	db	0
  1000  017068  00                 	db	0
  1001  017069  00                 	db	0
  1002  01706A  00                 	db	0
  1003  01706B  00                 	db	0
  1004  01706C  00                 	db	0
  1005  01706D  00                 	db	0
  1006  01706E  00                 	db	0
  1007  01706F  00                 	db	0
  1008  017070  00                 	db	0
  1009  017071  00                 	db	0
  1010  017072  00                 	db	0
  1011  017073  00                 	db	0
  1012  017074  00                 	db	0
  1013  017075  00                 	db	0
  1014  017076  00                 	db	0
  1015  017077  00                 	db	0
  1016  017078  00                 	db	0
  1017  017079  00                 	db	0
  1018  01707A  00                 	db	0
  1019  01707B  00                 	db	0
  1020  01707C  00                 	db	0
  1021  01707D  00                 	db	0
  1022  01707E  00                 	db	0
  1023  01707F  00                 	db	0
  1024  017080  00                 	db	0
  1025  017081  00                 	db	0
  1026  017082  00                 	db	0
  1027  017083  00                 	db	0
  1028  017084  00                 	db	0
  1029  017085  00                 	db	0
  1030  017086  00                 	db	0
  1031  017087  00                 	db	0
  1032  017088  00                 	db	0
  1033  017089  00                 	db	0
  1034  01708A  00                 	db	0
  1035  01708B  00                 	db	0
  1036  01708C  00                 	db	0
  1037  01708D  00                 	db	0
  1038  01708E  00                 	db	0
  1039  01708F  00                 	db	0
  1040  017090  00                 	db	0
  1041  017091  00                 	db	0
  1042  017092  00                 	db	0
  1043  017093  00                 	db	0
  1044  017094  00                 	db	0
  1045  017095  00                 	db	0
  1046  017096  00                 	db	0
  1047  017097  00                 	db	0
  1048  017098  00                 	db	0
  1049  017099  00                 	db	0
  1050  01709A  00                 	db	0
  1051  01709B  00                 	db	0
  1052  01709C  00                 	db	0
  1053  01709D  00                 	db	0
  1054  01709E  00                 	db	0
  1055  01709F  00                 	db	0
  1056  0170A0  00                 	db	0
  1057  0170A1  00                 	db	0
  1058  0170A2  00                 	db	0
  1059  0170A3  00                 	db	0
  1060  0170A4  00                 	db	0
  1061  0170A5  00                 	db	0
  1062  0170A6  00                 	db	0
  1063  0170A7  00                 	db	0
  1064  0170A8  00                 	db	0
  1065  0170A9  00                 	db	0
  1066  0170AA  00                 	db	0
  1067  0170AB  00                 	db	0
  1068  0170AC  00                 	db	0
  1069  0170AD  00                 	db	0
  1070  0170AE  00                 	db	0
  1071  0170AF  00                 	db	0
  1072  0170B0  00                 	db	0
  1073  0170B1  00                 	db	0
  1074  0170B2  00                 	db	0
  1075  0170B3  00                 	db	0
  1076  0170B4  00                 	db	0
  1077  0170B5  00                 	db	0
  1078  0170B6  00                 	db	0
  1079  0170B7  00                 	db	0
  1080  0170B8  00                 	db	0
  1081  0170B9  00                 	db	0
  1082  0170BA  00                 	db	0
  1083  0170BB  00                 	db	0
  1084  0170BC  00                 	db	0
  1085  0170BD  00                 	db	0
  1086  0170BE  00                 	db	0
  1087  0170BF  00                 	db	0
  1088  0170C0  00                 	db	0
  1089  0170C1  00                 	db	0
  1090  0170C2  00                 	db	0
  1091  0170C3  00                 	db	0
  1092  0170C4  00                 	db	0
  1093  0170C5  00                 	db	0
  1094  0170C6  00                 	db	0
  1095  0170C7  00                 	db	0
  1096  0170C8  00                 	db	0
  1097  0170C9  00                 	db	0
  1098  0170CA  00                 	db	0
  1099  0170CB  00                 	db	0
  1100  0170CC  00                 	db	0
  1101  0170CD  00                 	db	0
  1102  0170CE  00                 	db	0
  1103  0170CF  00                 	db	0
  1104  0170D0  00                 	db	0
  1105  0170D1  00                 	db	0
  1106  0170D2  00                 	db	0
  1107  0170D3  00                 	db	0
  1108  0170D4  00                 	db	0
  1109  0170D5  00                 	db	0
  1110  0170D6  00                 	db	0
  1111  0170D7  00                 	db	0
  1112  0170D8  00                 	db	0
  1113  0170D9  00                 	db	0
  1114  0170DA  00                 	db	0
  1115  0170DB  00                 	db	0
  1116  0170DC  00                 	db	0
  1117  0170DD  00                 	db	0
  1118  0170DE  00                 	db	0
  1119  0170DF  00                 	db	0
  1120  0170E0  00                 	db	0
  1121  0170E1  00                 	db	0
  1122  0170E2  00                 	db	0
  1123  0170E3  00                 	db	0
  1124  0170E4  00                 	db	0
  1125  0170E5  00                 	db	0
  1126  0170E6  00                 	db	0
  1127  0170E7  00                 	db	0
  1128  0170E8  00                 	db	0
  1129  0170E9  00                 	db	0
  1130  0170EA  00                 	db	0
  1131  0170EB  00                 	db	0
  1132  0170EC  00                 	db	0
  1133  0170ED  00                 	db	0
  1134  0170EE  00                 	db	0
  1135  0170EF  00                 	db	0
  1136  0170F0  00                 	db	0
  1137  0170F1  00                 	db	0
  1138  0170F2  00                 	db	0
  1139  0170F3  00                 	db	0
  1140  0170F4  00                 	db	0
  1141  0170F5  00                 	db	0
  1142  0170F6  00                 	db	0
  1143  0170F7  00                 	db	0
  1144  0170F8  00                 	db	0
  1145  0170F9  00                 	db	0
  1146  0170FA  00                 	db	0
  1147  0170FB  00                 	db	0
  1148  0170FC  00                 	db	0
  1149  0170FD  00                 	db	0
  1150  0170FE  00                 	db	0
  1151  0170FF  00                 	db	0
  1152  017100  00                 	db	0
  1153  017101  00                 	db	0
  1154  017102  00                 	db	0
  1155  017103  00                 	db	0
  1156  017104  00                 	db	0
  1157  017105  00                 	db	0
  1158  017106  00                 	db	0
  1159  017107  00                 	db	0
  1160  017108  00                 	db	0
  1161  017109  00                 	db	0
  1162  01710A  00                 	db	0
  1163  01710B  00                 	db	0
  1164  01710C  00                 	db	0
  1165  01710D  00                 	db	0
  1166  01710E  00                 	db	0
  1167  01710F  00                 	db	0
  1168  017110  00                 	db	0
  1169  017111  00                 	db	0
  1170  017112  00                 	db	0
  1171  017113  00                 	db	0
  1172  017114  00                 	db	0
  1173  017115  00                 	db	0
  1174  017116  00                 	db	0
  1175  017117  00                 	db	0
  1176  017118  00                 	db	0
  1177  017119  00                 	db	0
  1178  01711A  00                 	db	0
  1179  01711B  00                 	db	0
  1180  01711C  00                 	db	0
  1181  01711D  00                 	db	0
  1182  01711E  00                 	db	0
  1183  01711F  00                 	db	0
  1184  017120  00                 	db	0
  1185  017121  00                 	db	0
  1186  017122  00                 	db	0
  1187  017123  00                 	db	0
  1188  017124  00                 	db	0
  1189  017125  00                 	db	0
  1190  017126  00                 	db	0
  1191  017127  00                 	db	0
  1192  017128  00                 	db	0
  1193  017129  00                 	db	0
  1194  01712A  00                 	db	0
  1195  01712B  00                 	db	0
  1196  01712C  00                 	db	0
  1197  01712D  00                 	db	0
  1198  01712E  00                 	db	0
  1199  01712F  00                 	db	0
  1200  017130  00                 	db	0
  1201  017131  00                 	db	0
  1202  017132  00                 	db	0
  1203  017133  00                 	db	0
  1204  017134  00                 	db	0
  1205  017135  00                 	db	0
  1206  017136  00                 	db	0
  1207  017137  00                 	db	0
  1208  017138  00                 	db	0
  1209  017139  00                 	db	0
  1210  01713A  00                 	db	0
  1211  01713B  00                 	db	0
  1212  01713C  00                 	db	0
  1213  01713D  00                 	db	0
  1214  01713E  00                 	db	0
  1215  01713F  00                 	db	0
  1216  017140  00                 	db	0
  1217  017141  00                 	db	0
  1218  017142  00                 	db	0
  1219  017143  00                 	db	0
  1220  017144  00                 	db	0
  1221  017145  00                 	db	0
  1222  017146  00                 	db	0
  1223  017147  00                 	db	0
  1224  017148  00                 	db	0
  1225  017149  00                 	db	0
  1226  01714A  00                 	db	0
  1227  01714B  00                 	db	0
  1228  01714C  00                 	db	0
  1229  01714D  00                 	db	0
  1230  01714E  00                 	db	0
  1231  01714F  00                 	db	0
  1232  017150  00                 	db	0
  1233  017151  00                 	db	0
  1234  017152  00                 	db	0
  1235  017153  00                 	db	0
  1236  017154  00                 	db	0
  1237  017155  00                 	db	0
  1238  017156  00                 	db	0
  1239  017157  00                 	db	0
  1240  017158  00                 	db	0
  1241  017159  00                 	db	0
  1242  01715A  00                 	db	0
  1243  01715B  00                 	db	0
  1244  01715C  00                 	db	0
  1245  01715D  00                 	db	0
  1246  01715E  00                 	db	0
  1247  01715F  00                 	db	0
  1248  017160  00                 	db	0
  1249  017161  00                 	db	0
  1250  017162  00                 	db	0
  1251  017163  00                 	db	0
  1252  017164  00                 	db	0
  1253  017165  00                 	db	0
  1254  017166  00                 	db	0
  1255  017167  00                 	db	0
  1256  017168  00                 	db	0
  1257  017169  00                 	db	0
  1258  01716A  00                 	db	0
  1259  01716B  00                 	db	0
  1260  01716C  00                 	db	0
  1261  01716D  00                 	db	0
  1262  01716E  00                 	db	0
  1263  01716F  00                 	db	0
  1264  017170  00                 	db	0
  1265  017171  00                 	db	0
  1266  017172  00                 	db	0
  1267  017173  00                 	db	0
  1268  017174  00                 	db	0
  1269  017175  00                 	db	0
  1270  017176  00                 	db	0
  1271  017177  00                 	db	0
  1272  017178  00                 	db	0
  1273  017179  00                 	db	0
  1274  01717A  00                 	db	0
  1275  01717B  00                 	db	0
  1276  01717C  00                 	db	0
  1277  01717D  00                 	db	0
  1278  01717E  00                 	db	0
  1279  01717F  00                 	db	0
  1280  017180  00                 	db	0
  1281  017181  00                 	db	0
  1282  017182  00                 	db	0
  1283  017183  00                 	db	0
  1284  017184  00                 	db	0
  1285  017185  00                 	db	0
  1286                           
  1287                           ;initializer for _C
  1288  017186  0000               	dw	0
  1289  017188  0000               	dw	0
  1290  01718A  0000               	dw	0
  1291  01718C  0000               	dw	0
  1292  01718E  0000               	dw	0
  1293  017190  0000               	dw	0
  1294  017192  0000               	dw	0
  1295  017194  0000               	dw	0
  1296  017196  0000               	dw	0
  1297  017198  0000               	dw	0
  1298  01719A  0000               	dw	0
  1299  01719C  0000               	dw	0
  1300  01719E  0000               	dw	0
  1301  0171A0  0000               	dw	0
  1302  0171A2  0000               	dw	0
  1303  0171A4  0000               	dw	0
  1304  0171A6  0000               	dw	0
  1305  0171A8  0000               	dw	0
  1306  0171AA  0000               	dw	0
  1307  0171AC  0000               	dw	0
  1308  0171AE  0000               	dw	0
  1309  0171B0  0000               	dw	0
  1310  0171B2  0000               	dw	0
  1311  0171B4  0000               	dw	0
  1312  0171B6  0000               	dw	0
  1313  0171B8  0000               	dw	0
  1314  0171BA  0000               	dw	0
  1315  0171BC  0000               	dw	0
  1316  0171BE  0000               	dw	0
  1317  0171C0  0000               	dw	0
  1318  0171C2  0000               	dw	0
  1319  0171C4  0000               	dw	0
  1320  0171C6  0000               	dw	0
  1321  0171C8  0000               	dw	0
  1322  0171CA  0000               	dw	0
  1323  0171CC  0000               	dw	0
  1324  0171CE  0000               	dw	0
  1325  0171D0  0000               	dw	0
  1326  0171D2  0000               	dw	0
  1327  0171D4  0000               	dw	0
  1328  0171D6  0000               	dw	0
  1329  0171D8  0000               	dw	0
  1330  0171DA  0000               	dw	0
  1331  0171DC  0000               	dw	0
  1332  0171DE  0000               	dw	0
  1333  0171E0  0000               	dw	0
  1334  0171E2  0000               	dw	0
  1335  0171E4  0000               	dw	0
  1336  0171E6  0000               	dw	0
  1337  0171E8  0000               	dw	0
  1338  0171EA  0000               	dw	0
  1339  0171EC  0000               	dw	0
  1340  0171EE  0000               	dw	0
  1341  0171F0  0000               	dw	0
  1342  0171F2  0000               	dw	0
  1343  0171F4  0000               	dw	0
  1344  0171F6  0000               	dw	0
  1345  0171F8  0000               	dw	0
  1346  0171FA  0000               	dw	0
  1347  0171FC  0000               	dw	0
  1348  0171FE  0000               	dw	0
  1349  017200  0000               	dw	0
  1350  017202  0000               	dw	0
  1351  017204  0000               	dw	0
  1352  017206  0000               	dw	0
  1353  017208  0000               	dw	0
  1354  01720A  0000               	dw	0
  1355  01720C  0000               	dw	0
  1356  01720E  0000               	dw	0
  1357  017210  0000               	dw	0
  1358  017212  0000               	dw	0
  1359  017214  42FA               	dw	17146
  1360  017216  0000               	dw	0
  1361  017218  0000               	dw	0
  1362  01721A  0000               	dw	0
  1363  01721C  0000               	dw	0
  1364  01721E  0000               	dw	0
  1365  017220  0000               	dw	0
  1366  017222  0000               	dw	0
  1367  017224  0000               	dw	0
  1368  017226  0000               	dw	0
  1369  017228  0000               	dw	0
  1370  01722A  0000               	dw	0
  1371  01722C  0000               	dw	0
  1372  01722E  0000               	dw	0
  1373  017230  0000               	dw	0
  1374  017232  0000               	dw	0
  1375  017234  0000               	dw	0
  1376  017236  0000               	dw	0
  1377  017238  0000               	dw	0
  1378  01723A  0000               	dw	0
  1379  01723C  0000               	dw	0
  1380  01723E  00                 	db	0
  1381  01723F  01                 	db	1
  1382  017240  0000               	dw	0
  1383  017242  3F80               	dw	16256
  1384  017244  0000               	dw	0
  1385  017246  3F80               	dw	16256
  1386  017248  00                 	db	0
  1387  017249  00                 	db	0
  1388  01724A  00                 	db	0
  1389  01724B  00                 	db	0
  1390  01724C  00                 	db	0
  1391  01724D  00                 	db	0
  1392  01724E  00                 	db	0
  1393  01724F  00                 	db	0
  1394  017250  00                 	db	0
  1395  017251  00                 	db	0
  1396  017252  00                 	db	0
  1397  017253  00                 	db	0
  1398  017254  00                 	db	0
  1399  017255  00                 	db	0
  1400  017256  00                 	db	0
  1401  017257  00                 	db	0
  1402  017258  00                 	db	0
  1403  017259  00                 	db	0
  1404  01725A  00                 	db	0
  1405  01725B  00                 	db	0
  1406  01725C  00                 	db	0
  1407  01725D  00                 	db	0
  1408  01725E  00                 	db	0
  1409  01725F  00                 	db	0
  1410  017260  00                 	db	0
  1411  017261  00                 	db	0
  1412  017262  00                 	db	0
  1413  017263  00                 	db	0
  1414  017264  00                 	db	0
  1415  017265  00                 	db	0
  1416  017266  00                 	db	0
  1417  017267  00                 	db	0
  1418  017268  00                 	db	0
  1419  017269  00                 	db	0
  1420  01726A  00                 	db	0
  1421  01726B  00                 	db	0
  1422  01726C  00                 	db	0
  1423  01726D  00                 	db	0
  1424  01726E  00                 	db	0
  1425  01726F  00                 	db	0
  1426  017270  00                 	db	0
  1427  017271  00                 	db	0
  1428  017272  00                 	db	0
  1429  017273  00                 	db	0
  1430  017274  00                 	db	0
  1431  017275  00                 	db	0
  1432  017276  00                 	db	0
  1433  017277  00                 	db	0
  1434  017278  00                 	db	0
  1435  017279  00                 	db	0
  1436  01727A  00                 	db	0
  1437  01727B  00                 	db	0
  1438  01727C  00                 	db	0
  1439  01727D  00                 	db	0
  1440  01727E  00                 	db	0
  1441  01727F  00                 	db	0
  1442  017280  00                 	db	0
  1443  017281  00                 	db	0
  1444  017282  00                 	db	0
  1445  017283  00                 	db	0
  1446  017284  00                 	db	0
  1447  017285  00                 	db	0
  1448  017286  00                 	db	0
  1449  017287  00                 	db	0
  1450  017288  00                 	db	0
  1451  017289  00                 	db	0
  1452  01728A  00                 	db	0
  1453  01728B  00                 	db	0
  1454  01728C  00                 	db	0
  1455  01728D  00                 	db	0
  1456  01728E  00                 	db	0
  1457  01728F  00                 	db	0
  1458  017290  00                 	db	0
  1459  017291  00                 	db	0
  1460  017292  00                 	db	0
  1461  017293  00                 	db	0
  1462  017294  0000               	dw	0
  1463  017296  0000               	dw	0
  1464  017298  0000               	dw	0
  1465  01729A  0000               	dw	0
  1466  01729C  0000               	dw	0
  1467  01729E  0000               	dw	0
  1468  0172A0  0000               	dw	0
  1469  0172A2  0000               	dw	0
  1470  0172A4  0000               	dw	0
  1471  0172A6  0000               	dw	0
  1472  0172A8  01                 	db	1
  1473  0172A9  00                 	db	0
  1474  0172AA  00                 	db	0
  1475  0172AB  00                 	db	0
  1476  0172AC  00                 	db	0
  1477  0172AD  00                 	db	0
  1478  0172AE  00                 	db	0
  1479  0172AF  00                 	db	0
  1480  0172B0  00                 	db	0
  1481                           
  1482                           	psect	idataBANK0
  1483  01C47A                     __pidataBANK0:
  1484                           	opt callstack 0
  1485                           
  1486                           ;initializer for _R
  1487  01C47A  0000               	dw	0
  1488  01C47C  0000               	dw	0
  1489  01C47E  0000               	dw	0
  1490  01C480  0000               	dw	0
  1491  01C482  0000               	dw	0
  1492  01C484  0000               	dw	0
  1493  01C486  0000               	dw	0
  1494  01C488  0000               	dw	0
  1495  01C48A  0000               	dw	0
  1496  01C48C  0000               	dw	0
  1497  01C48E  0000               	dw	0
  1498  01C490  0000               	dw	0
  1499  01C492  0000               	dw	0
  1500  01C494  0000               	dw	0
  1501  01C496  0000               	dw	0
  1502  01C498  0000               	dw	0
  1503  01C49A  0000               	dw	0
  1504  01C49C  0000               	dw	0
  1505  01C49E  0000               	dw	0
  1506  01C4A0  0F62               	dw	3938
  1507  01C4A2  0FA4               	dw	4004
  1508  01C4A4  2D0E               	dw	11534
  1509  01C4A6  3DB2               	dw	15794
  1510  01C4A8  DD98               	dw	56728
  1511  01C4AA  3D13               	dw	15635
  1512  01C4AC  00                 	db	0
  1513  01C4AD  0000               	dw	0
  1514  01C4AF  00                 	db	0
  1515  01C4B0  1957               	dw	6487
  1516  01C4B2  4242               	dw	16962
  1517                           
  1518                           	psect	idataBANK1
  1519  01AB5A                     __pidataBANK1:
  1520                           	opt callstack 0
  1521                           
  1522                           ;initializer for stoa@F1166
  1523  01AB5A  28                 	db	40
  1524  01AB5B  6E                 	db	110
  1525  01AB5C  75                 	db	117
  1526  01AB5D  6C                 	db	108
  1527  01AB5E  6C                 	db	108
  1528  01AB5F  29                 	db	41
  1529  01AB60  00                 	db	0
  1530                           
  1531                           ;initializer for _V
  1532  01AB61  00                 	db	0
  1533  01AB62  00                 	db	0
  1534  01AB63  00                 	db	0
  1535  01AB64  00                 	db	0
  1536  01AB65  00                 	db	0
  1537  01AB66  00                 	db	0
  1538  01AB67  00                 	db	0
  1539  01AB68  00                 	db	0
  1540  01AB69  00                 	db	0
  1541  01AB6A  00                 	db	0
  1542  01AB6B  00                 	db	0
  1543  01AB6C  00                 	db	0
  1544  01AB6D  00                 	db	0
  1545  01AB6E  00                 	db	0
  1546  01AB6F  00                 	db	0
  1547  01AB70  00                 	db	0
  1548  01AB71  00                 	db	0
  1549  01AB72  00                 	db	0
  1550  01AB73  00                 	db	0
  1551  01AB74  00                 	db	0
  1552  01AB75  00                 	db	0
  1553  01AB76  00                 	db	0
  1554  01AB77  00                 	db	0
  1555  01AB78  00                 	db	0
  1556  01AB79  00                 	db	0
  1557  01AB7A  00                 	db	0
  1558  01AB7B  00                 	db	0
  1559  01AB7C  00                 	db	0
  1560  01AB7D  00                 	db	0
  1561  01AB7E  00                 	db	0
  1562  01AB7F  00                 	db	0
  1563  01AB80  00                 	db	0
  1564  01AB81  00                 	db	0
  1565  01AB82  00                 	db	0
  1566  01AB83  00                 	db	0
  1567  01AB84  00                 	db	0
  1568  01AB85  00                 	db	0
  1569  01AB86  00                 	db	0
  1570  01AB87  00                 	db	0
  1571  01AB88  00                 	db	0
  1572  01AB89  00                 	db	0
  1573  01AB8A  00                 	db	0
  1574  01AB8B  00                 	db	0
  1575  01AB8C  00                 	db	0
  1576  01AB8D  00                 	db	0
  1577  01AB8E  00                 	db	0
  1578  01AB8F  00                 	db	0
  1579  01AB90  00                 	db	0
  1580  01AB91  00                 	db	0
  1581  01AB92  00                 	db	0
  1582  01AB93  00                 	db	0
  1583  01AB94  00                 	db	0
  1584  01AB95  00                 	db	0
  1585  01AB96  00                 	db	0
  1586  01AB97  00                 	db	0
  1587  01AB98  00                 	db	0
  1588  01AB99  00                 	db	0
  1589  01AB9A  00                 	db	0
  1590  01AB9B  00                 	db	0
  1591  01AB9C  00                 	db	0
  1592  01AB9D  00                 	db	0
  1593  01AB9E  00                 	db	0
  1594  01AB9F  00                 	db	0
  1595  01ABA0  00                 	db	0
  1596  01ABA1  00                 	db	0
  1597  01ABA2  00                 	db	0
  1598  01ABA3  00                 	db	0
  1599  01ABA4  00                 	db	0
  1600  01ABA5  00                 	db	0
  1601  01ABA6  00                 	db	0
  1602  01ABA7  00                 	db	0
  1603  01ABA8  00                 	db	0
  1604  01ABA9  00                 	db	0
  1605  01ABAA  00                 	db	0
  1606  01ABAB  00                 	db	0
  1607  01ABAC  00                 	db	0
  1608  01ABAD  00                 	db	0
  1609  01ABAE  00                 	db	0
  1610  01ABAF  00                 	db	0
  1611  01ABB0  00                 	db	0
  1612  01ABB1  00                 	db	0
  1613  01ABB2  00                 	db	0
  1614  01ABB3  00                 	db	0
  1615  01ABB4  00                 	db	0
  1616  01ABB5  00                 	db	0
  1617  01ABB6  00                 	db	0
  1618  01ABB7  00                 	db	0
  1619  01ABB8  00                 	db	0
  1620  01ABB9  00                 	db	0
  1621  01ABBA  00                 	db	0
  1622  01ABBB  00                 	db	0
  1623  01ABBC  00                 	db	0
  1624  01ABBD  00                 	db	0
  1625  01ABBE  00                 	db	0
  1626  01ABBF  00                 	db	0
  1627  01ABC0  00                 	db	0
  1628  01ABC1  00                 	db	0
  1629  01ABC2  00                 	db	0
  1630  01ABC3  00                 	db	0
  1631  01ABC4  00                 	db	0
  1632  01ABC5  00                 	db	0
  1633  01ABC6  00                 	db	0
  1634  01ABC7  00                 	db	0
  1635  01ABC8  00                 	db	0
  1636  01ABC9  00                 	db	0
  1637  01ABCA  00                 	db	0
  1638  01ABCB  00                 	db	0
  1639  01ABCC  00                 	db	0
  1640  01ABCD  00                 	db	0
  1641  01ABCE  00                 	db	0
  1642  01ABCF  00                 	db	0
  1643  01ABD0  00                 	db	0
  1644  01ABD1  00                 	db	0
  1645  01ABD2  00                 	db	0
  1646  01ABD3  00                 	db	0
  1647  01ABD4  00                 	db	0
  1648  01ABD5  00                 	db	0
  1649  01ABD6  00                 	db	0
  1650  01ABD7  00                 	db	0
  1651  01ABD8  00                 	db	0
  1652  01ABD9  00                 	db	0
  1653  01ABDA  00                 	db	0
  1654  01ABDB  00                 	db	0
  1655  01ABDC  00                 	db	0
  1656  01ABDD  00                 	db	0
  1657  01ABDE  00                 	db	0
  1658  01ABDF  00                 	db	0
  1659  01ABE0  00                 	db	0
  1660  01ABE1  00                 	db	0
  1661  01ABE2  0000               	dw	0
  1662  01ABE4  0000               	dw	0
  1663  01ABE6  0000               	dw	0
  1664  01ABE8  0000               	dw	0
  1665  01ABEA  00                 	db	0
  1666  01ABEB  00                 	db	0
  1667  01ABEC  00                 	db	0
  1668  01ABED  00                 	db	0
  1669  01ABEE  00                 	db	0
  1670  01ABEF  00                 	db	0
  1671  01ABF0  0000               	dw	0
  1672  01ABF2  0000               	dw	0
  1673  01ABF4  0000               	dw	0
  1674  01ABF6  0000               	dw	0
  1675  01ABF8  0000               	dw	0
  1676  01ABFA  0000               	dw	0
  1677  01ABFC  00                 	db	0
  1678  01ABFD  00                 	db	0
  1679  01ABFE  00                 	db	0
  1680  01ABFF  00                 	db	0
  1681  01AC00  00                 	db	0
  1682  01AC01  00                 	db	0
  1683  01AC02  00                 	db	0
  1684  01AC03  00                 	db	0
  1685  01AC04  00                 	db	0
  1686  01AC05  00                 	db	0
  1687  01AC06  00                 	db	0
  1688  01AC07  0000               	dw	0
  1689  01AC09  0000               	dw	0
  1690  01AC0B  2D                 	db	45
  1691  01AC0C  00                 	db	0
  1692  01AC0D  00                 	db	0
  1693  01AC0E  00                 	db	0
  1694  01AC0F  00                 	db	0
  1695  01AC10  00                 	db	0
  1696  01AC11  0000               	dw	0
  1697  01AC13  0000               	dw	0
  1698  01AC15  0000               	dw	0
  1699  01AC17  0000               	dw	0
  1700  01AC19  0000               	dw	0
  1701  01AC1B  0000               	dw	0
  1702  01AC1D  0000               	dw	0
  1703  01AC1F  0000               	dw	0
  1704                           
  1705                           ;initializer for _H
  1706  01AC21  00                 	db	0
  1707  01AC22  00                 	db	0
  1708  01AC23  01                 	db	1
  1709  01AC24  00                 	db	0
  1710  01AC25  01                 	db	1
  1711  01AC26  00                 	db	0
  1712  01AC27  01                 	db	1
  1713  01AC28  00                 	db	0
  1714  01AC29  00                 	db	0
  1715                           
  1716                           	psect	mediumconst
  1717  00F8E2                     __pmediumconst:
  1718                           	opt callstack 0
  1719  00F8E2  00                 	db	0
  1720  00F8E3                     _BVSOC_TABLE:
  1721                           	opt callstack 0
  1722  00F8E3  59D8               	dw	23000
  1723  00F8E5  0000               	dw	0
  1724  00F8E7  0005               	dw	5
  1725  00F8E9  0000               	dw	0
  1726  00F8EB  5B68               	dw	23400
  1727  00F8ED  0000               	dw	0
  1728  00F8EF  000A               	dw	10
  1729  00F8F1  0000               	dw	0
  1730  00F8F3  5C30               	dw	23600
  1731  00F8F5  0000               	dw	0
  1732  00F8F7  0014               	dw	20
  1733  00F8F9  0000               	dw	0
  1734  00F8FB  5E38               	dw	24120
  1735  00F8FD  0000               	dw	0
  1736  00F8FF  0019               	dw	25
  1737  00F901  0000               	dw	0
  1738  00F903  5E88               	dw	24200
  1739  00F905  0000               	dw	0
  1740  00F907  001E               	dw	30
  1741  00F909  0000               	dw	0
  1742  00F90B  5F78               	dw	24440
  1743  00F90D  0000               	dw	0
  1744  00F90F  0028               	dw	40
  1745  00F911  0000               	dw	0
  1746  00F913  5FDC               	dw	24540
  1747  00F915  0000               	dw	0
  1748  00F917  002D               	dw	45
  1749  00F919  0000               	dw	0
  1750  00F91B  6018               	dw	24600
  1751  00F91D  0000               	dw	0
  1752  00F91F  0032               	dw	50
  1753  00F921  0000               	dw	0
  1754  00F923  6046               	dw	24646
  1755  00F925  0000               	dw	0
  1756  00F927  0035               	dw	53
  1757  00F929  0000               	dw	0
  1758  00F92B  607C               	dw	24700
  1759  00F92D  0000               	dw	0
  1760  00F92F  0037               	dw	55
  1761  00F931  0000               	dw	0
  1762  00F933  60AE               	dw	24750
  1763  00F935  0000               	dw	0
  1764  00F937  0039               	dw	57
  1765  00F939  0000               	dw	0
  1766  00F93B  60E0               	dw	24800
  1767  00F93D  0000               	dw	0
  1768  00F93F  003C               	dw	60
  1769  00F941  0000               	dw	0
  1770  00F943  6112               	dw	24850
  1771  00F945  0000               	dw	0
  1772  00F947  003F               	dw	63
  1773  00F949  0000               	dw	0
  1774  00F94B  615D               	dw	24925
  1775  00F94D  0000               	dw	0
  1776  00F94F  0043               	dw	67
  1777  00F951  0000               	dw	0
  1778  00F953  61A8               	dw	25000
  1779  00F955  0000               	dw	0
  1780  00F957  0046               	dw	70
  1781  00F959  0000               	dw	0
  1782  00F95B  61BC               	dw	25020
  1783  00F95D  0000               	dw	0
  1784  00F95F  0048               	dw	72
  1785  00F961  0000               	dw	0
  1786  00F963  61D0               	dw	25040
  1787  00F965  0000               	dw	0
  1788  00F967  004B               	dw	75
  1789  00F969  0000               	dw	0
  1790  00F96B  61DA               	dw	25050
  1791  00F96D  0000               	dw	0
  1792  00F96F  0050               	dw	80
  1793  00F971  0000               	dw	0
  1794  00F973  61E4               	dw	25060
  1795  00F975  0000               	dw	0
  1796  00F977  0055               	dw	85
  1797  00F979  0000               	dw	0
  1798  00F97B  61F8               	dw	25080
  1799  00F97D  0000               	dw	0
  1800  00F97F  005A               	dw	90
  1801  00F981  0000               	dw	0
  1802  00F983  6208               	dw	25096
  1803  00F985  0000               	dw	0
  1804  00F987  005C               	dw	92
  1805  00F989  0000               	dw	0
  1806  00F98B  6222               	dw	25122
  1807  00F98D  0000               	dw	0
  1808  00F98F  005D               	dw	93
  1809  00F991  0000               	dw	0
  1810  00F993  6234               	dw	25140
  1811  00F995  0000               	dw	0
  1812  00F997  005F               	dw	95
  1813  00F999  0000               	dw	0
  1814  00F99B  6248               	dw	25160
  1815  00F99D  0000               	dw	0
  1816  00F99F  0061               	dw	97
  1817  00F9A1  0000               	dw	0
  1818  00F9A3  625C               	dw	25180
  1819  00F9A5  0000               	dw	0
  1820  00F9A7  0064               	dw	100
  1821  00F9A9  0000               	dw	0
  1822  00F9AB  6784               	dw	26500
  1823  00F9AD  0000               	dw	0
  1824  00F9AF  0062               	dw	98
  1825  00F9B1  0000               	dw	0
  1826  00F9B3                     __end_of_BVSOC_TABLE:
  1827                           	opt callstack 0
  1828  00F9B3                     _T:
  1829                           	opt callstack 0
  1830  00F9B3  63                 	db	99
  1831  00F9B4  6F                 	db	111
  1832  00F9B5  6D                 	db	109
  1833  00F9B6  6D                 	db	109
  1834  00F9B7  61                 	db	97
  1835  00F9B8  6E                 	db	110
  1836  00F9B9  64                 	db	100
  1837  00F9BA  73                 	db	115
  1838  00F9BB  20                 	db	32
  1839  00F9BC  31                 	db	49
  1840  00F9BD  00                 	db	0
  1841  00F9BE  00                 	db	0
  1842  00F9BF  00                 	db	0
  1843  00F9C0  00                 	db	0
  1844  00F9C1  00                 	db	0
  1845  00F9C2  00                 	db	0
  1846  00F9C3  00                 	db	0
  1847  00F9C4  00                 	db	0
  1848  00F9C5  64                 	db	100
  1849  00F9C6  69                 	db	105
  1850  00F9C7  73                 	db	115
  1851  00F9C8  70                 	db	112
  1852  00F9C9  6C                 	db	108
  1853  00F9CA  61                 	db	97
  1854  00F9CB  79                 	db	121
  1855  00F9CC  73                 	db	115
  1856  00F9CD  20                 	db	32
  1857  00F9CE  31                 	db	49
  1858  00F9CF  00                 	db	0
  1859  00F9D0  00                 	db	0
  1860  00F9D1  00                 	db	0
  1861  00F9D2  00                 	db	0
  1862  00F9D3  00                 	db	0
  1863  00F9D4  00                 	db	0
  1864  00F9D5  00                 	db	0
  1865  00F9D6  00                 	db	0
  1866  00F9D7  63                 	db	99
  1867  00F9D8  6F                 	db	111
  1868  00F9D9  6D                 	db	109
  1869  00F9DA  6D                 	db	109
  1870  00F9DB  61                 	db	97
  1871  00F9DC  6E                 	db	110
  1872  00F9DD  64                 	db	100
  1873  00F9DE  73                 	db	115
  1874  00F9DF  20                 	db	32
  1875  00F9E0  32                 	db	50
  1876  00F9E1  00                 	db	0
  1877  00F9E2  00                 	db	0
  1878  00F9E3  00                 	db	0
  1879  00F9E4  00                 	db	0
  1880  00F9E5  00                 	db	0
  1881  00F9E6  00                 	db	0
  1882  00F9E7  00                 	db	0
  1883  00F9E8  00                 	db	0
  1884  00F9E9  64                 	db	100
  1885  00F9EA  69                 	db	105
  1886  00F9EB  73                 	db	115
  1887  00F9EC  70                 	db	112
  1888  00F9ED  6C                 	db	108
  1889  00F9EE  61                 	db	97
  1890  00F9EF  79                 	db	121
  1891  00F9F0  73                 	db	115
  1892  00F9F1  20                 	db	32
  1893  00F9F2  32                 	db	50
  1894  00F9F3  00                 	db	0
  1895  00F9F4  00                 	db	0
  1896  00F9F5  00                 	db	0
  1897  00F9F6  00                 	db	0
  1898  00F9F7  00                 	db	0
  1899  00F9F8  00                 	db	0
  1900  00F9F9  00                 	db	0
  1901  00F9FA  00                 	db	0
  1902  00F9FB  63                 	db	99
  1903  00F9FC  6F                 	db	111
  1904  00F9FD  6D                 	db	109
  1905  00F9FE  6D                 	db	109
  1906  00F9FF  61                 	db	97
  1907  00FA00  6E                 	db	110
  1908  00FA01  64                 	db	100
  1909  00FA02  73                 	db	115
  1910  00FA03  20                 	db	32
  1911  00FA04  33                 	db	51
  1912  00FA05  00                 	db	0
  1913  00FA06  00                 	db	0
  1914  00FA07  00                 	db	0
  1915  00FA08  00                 	db	0
  1916  00FA09  00                 	db	0
  1917  00FA0A  00                 	db	0
  1918  00FA0B  00                 	db	0
  1919  00FA0C  00                 	db	0
  1920  00FA0D  64                 	db	100
  1921  00FA0E  69                 	db	105
  1922  00FA0F  73                 	db	115
  1923  00FA10  70                 	db	112
  1924  00FA11  6C                 	db	108
  1925  00FA12  61                 	db	97
  1926  00FA13  79                 	db	121
  1927  00FA14  73                 	db	115
  1928  00FA15  20                 	db	32
  1929  00FA16  33                 	db	51
  1930  00FA17  00                 	db	0
  1931  00FA18  00                 	db	0
  1932  00FA19  00                 	db	0
  1933  00FA1A  00                 	db	0
  1934  00FA1B  00                 	db	0
  1935  00FA1C  00                 	db	0
  1936  00FA1D  00                 	db	0
  1937  00FA1E  00                 	db	0
  1938  00FA1F  63                 	db	99
  1939  00FA20  6F                 	db	111
  1940  00FA21  6D                 	db	109
  1941  00FA22  6D                 	db	109
  1942  00FA23  61                 	db	97
  1943  00FA24  6E                 	db	110
  1944  00FA25  64                 	db	100
  1945  00FA26  73                 	db	115
  1946  00FA27  20                 	db	32
  1947  00FA28  34                 	db	52
  1948  00FA29  00                 	db	0
  1949  00FA2A  00                 	db	0
  1950  00FA2B  00                 	db	0
  1951  00FA2C  00                 	db	0
  1952  00FA2D  00                 	db	0
  1953  00FA2E  00                 	db	0
  1954  00FA2F  00                 	db	0
  1955  00FA30  00                 	db	0
  1956  00FA31  64                 	db	100
  1957  00FA32  69                 	db	105
  1958  00FA33  73                 	db	115
  1959  00FA34  70                 	db	112
  1960  00FA35  6C                 	db	108
  1961  00FA36  61                 	db	97
  1962  00FA37  79                 	db	121
  1963  00FA38  73                 	db	115
  1964  00FA39  20                 	db	32
  1965  00FA3A  34                 	db	52
  1966  00FA3B  00                 	db	0
  1967  00FA3C  00                 	db	0
  1968  00FA3D  00                 	db	0
  1969  00FA3E  00                 	db	0
  1970  00FA3F  00                 	db	0
  1971  00FA40  00                 	db	0
  1972  00FA41  00                 	db	0
  1973  00FA42  00                 	db	0
  1974  00FA43                     __end_of_T:
  1975                           	opt callstack 0
  1976  00FA43                     _spin:
  1977                           	opt callstack 0
  1978  00FA43  7C                 	db	124
  1979  00FA44  7C                 	db	124
  1980  00FA45  2F                 	db	47
  1981  00FA46  2F                 	db	47
  1982  00FA47  2D                 	db	45
  1983  00FA48  2D                 	db	45
  1984  00FA49  00                 	db	0
  1985  00FA4A  00                 	db	0
  1986  00FA4B  00                 	db	0
  1987  00FA4C  00                 	db	0
  1988  00FA4D  00                 	db	0
  1989  00FA4E  00                 	db	0
  1990  00FA4F  00                 	db	0
  1991  00FA50  00                 	db	0
  1992  00FA51  00                 	db	0
  1993  00FA52  00                 	db	0
  1994  00FA53  00                 	db	0
  1995  00FA54  00                 	db	0
  1996  00FA55  00                 	db	0
  1997  00FA56  00                 	db	0
  1998  00FA57  7C                 	db	124
  1999  00FA58  7C                 	db	124
  2000  00FA59  2F                 	db	47
  2001  00FA5A  2F                 	db	47
  2002  00FA5B  2D                 	db	45
  2003  00FA5C  2D                 	db	45
  2004  00FA5D  5C                 	db	92
  2005  00FA5E  5C                 	db	92
  2006  00FA5F  00                 	db	0
  2007  00FA60  00                 	db	0
  2008  00FA61  00                 	db	0
  2009  00FA62  00                 	db	0
  2010  00FA63  00                 	db	0
  2011  00FA64  00                 	db	0
  2012  00FA65  00                 	db	0
  2013  00FA66  00                 	db	0
  2014  00FA67  00                 	db	0
  2015  00FA68  00                 	db	0
  2016  00FA69  00                 	db	0
  2017  00FA6A  00                 	db	0
  2018  00FA6B  4F                 	db	79
  2019  00FA6C  4F                 	db	79
  2020  00FA6D  4F                 	db	79
  2021  00FA6E  4F                 	db	79
  2022  00FA6F  4F                 	db	79
  2023  00FA70  4F                 	db	79
  2024  00FA71  2D                 	db	45
  2025  00FA72  2D                 	db	45
  2026  00FA73  5F                 	db	95
  2027  00FA74  5F                 	db	95
  2028  00FA75  2D                 	db	45
  2029  00FA76  00                 	db	0
  2030  00FA77  00                 	db	0
  2031  00FA78  00                 	db	0
  2032  00FA79  00                 	db	0
  2033  00FA7A  00                 	db	0
  2034  00FA7B  00                 	db	0
  2035  00FA7C  00                 	db	0
  2036  00FA7D  00                 	db	0
  2037  00FA7E  00                 	db	0
  2038  00FA7F  76                 	db	118
  2039  00FA80  76                 	db	118
  2040  00FA81  3C                 	db	60
  2041  00FA82  3C                 	db	60
  2042  00FA83  5E                 	db	94
  2043  00FA84  5E                 	db	94
  2044  00FA85  3E                 	db	62
  2045  00FA86  3E                 	db	62
  2046  00FA87  00                 	db	0
  2047  00FA88  00                 	db	0
  2048  00FA89  00                 	db	0
  2049  00FA8A  00                 	db	0
  2050  00FA8B  00                 	db	0
  2051  00FA8C  00                 	db	0
  2052  00FA8D  00                 	db	0
  2053  00FA8E  00                 	db	0
  2054  00FA8F  00                 	db	0
  2055  00FA90  00                 	db	0
  2056  00FA91  00                 	db	0
  2057  00FA92  00                 	db	0
  2058  00FA93  2E                 	db	46
  2059  00FA94  2E                 	db	46
  2060  00FA95  2A                 	db	42
  2061  00FA96  2A                 	db	42
  2062  00FA97  78                 	db	120
  2063  00FA98  23                 	db	35
  2064  00FA99  78                 	db	120
  2065  00FA9A  23                 	db	35
  2066  00FA9B  58                 	db	88
  2067  00FA9C  58                 	db	88
  2068  00FA9D  7C                 	db	124
  2069  00FA9E  7C                 	db	124
  2070  00FA9F  2D                 	db	45
  2071  00FAA0  2D                 	db	45
  2072  00FAA1  00                 	db	0
  2073  00FAA2  00                 	db	0
  2074  00FAA3  00                 	db	0
  2075  00FAA4  00                 	db	0
  2076  00FAA5  00                 	db	0
  2077  00FAA6  00                 	db	0
  2078  00FAA7  2E                 	db	46
  2079  00FAA8  2E                 	db	46
  2080  00FAA9  6F                 	db	111
  2081  00FAAA  6F                 	db	111
  2082  00FAAB  4F                 	db	79
  2083  00FAAC  4F                 	db	79
  2084  00FAAD  6F                 	db	111
  2085  00FAAE  6F                 	db	111
  2086  00FAAF  00                 	db	0
  2087  00FAB0  00                 	db	0
  2088  00FAB1  00                 	db	0
  2089  00FAB2  00                 	db	0
  2090  00FAB3  00                 	db	0
  2091  00FAB4  00                 	db	0
  2092  00FAB5  00                 	db	0
  2093  00FAB6  00                 	db	0
  2094  00FAB7  00                 	db	0
  2095  00FAB8  00                 	db	0
  2096  00FAB9  00                 	db	0
  2097  00FABA  00                 	db	0
  2098  00FABB                     __end_of_spin:
  2099                           	opt callstack 0
  2100  00FABB  0000               	dw	0
  2101  00FABD  3F80               	dw	16256
  2102  00FABF  0000               	dw	0
  2103  00FAC1  3FC0               	dw	16320
  2104  00FAC3                     __end_of_bp:
  2105                           	opt callstack 0
  2106  00FAC3  AA00               	dw	43520
  2107  00FAC5  3FB8               	dw	16312
  2108  00FAC7                     __end_of_ivln2_h:
  2109                           	opt callstack 0
  2110  00FAC7  23C6               	dw	9158
  2111  00FAC9  B8F6               	dw	47350
  2112  00FACB                     __end_of_cp_l:
  2113                           	opt callstack 0
  2114  00FACB  4000               	dw	16384
  2115  00FACD  3F76               	dw	16246
  2116  00FACF                     __end_of_cp_h:
  2117                           	opt callstack 0
  2118  0000                     _IVTADL	set	14493
  2119  0000                     _IVTADH	set	14494
  2120  0000                     _IVTADU	set	14495
  2121  0000                     _PIR6bits	set	14758
  2122  0000                     _PIR4bits	set	14756
  2123  0000                     _PIE8bits	set	14744
  2124  0000                     _PIR8bits	set	14760
  2125  0000                     _NVMCON2	set	14822
  2126  0000                     _NVMDAT	set	14819
  2127  0000                     _NVMADRL	set	14816
  2128  0000                     _NVMADRH	set	14817
  2129  0000                     _NVMCON1bits	set	14821
  2130  0000                     _SCANPR	set	14839
  2131  0000                     _DMA2PR	set	14836
  2132  0000                     _DMA1PR	set	14835
  2133  0000                     _MAINPR	set	14834
  2134  0000                     _ISRPR	set	14833
  2135  0000                     _PIE2bits	set	14738
  2136  0000                     _PIR2bits	set	14754
  2137  0000                     _PIE9bits	set	14745
  2138  0000                     _PIR9bits	set	14761
  2139  0000                     _PIE6bits	set	14742
  2140  0000                     _PIE3bits	set	14739
  2141  0000                     _PMD7	set	14791
  2142  0000                     _PMD6	set	14790
  2143  0000                     _PMD5	set	14789
  2144  0000                     _PMD4	set	14788
  2145  0000                     _PMD3	set	14787
  2146  0000                     _PMD2	set	14786
  2147  0000                     _PMD1	set	14785
  2148  0000                     _PMD0	set	14784
  2149  0000                     _OSCTUNE	set	14814
  2150  0000                     _OSCFRQ	set	14815
  2151  0000                     _OSCEN	set	14813
  2152  0000                     _OSCCON3	set	14811
  2153  0000                     _OSCCON1	set	14809
  2154  0000                     _IPR8bits	set	14728
  2155  0000                     _IPR9bits	set	14729
  2156  0000                     _IPR5bits	set	14725
  2157  0000                     _IPR1bits	set	14721
  2158  0000                     _IPR3bits	set	14723
  2159  0000                     _IPR6bits	set	14726
  2160  0000                     _IPR2bits	set	14722
  2161  0000                     _PIE5bits	set	14741
  2162  0000                     _PIE1bits	set	14737
  2163  0000                     _PIR5bits	set	14757
  2164  0000                     _PIR1bits	set	14753
  2165  0000                     _PLLR	set	118496
  2166  0000                     _SPI1SDIPPS	set	15071
  2167  0000                     _U1RXPPS	set	15077
  2168  0000                     _RC6PPS	set	14870
  2169  0000                     _RC5PPS	set	14869
  2170  0000                     _INT1PPS	set	15041
  2171  0000                     _RD1PPS	set	14873
  2172  0000                     _INT0PPS	set	15040
  2173  0000                     _RC3PPS	set	14867
  2174  0000                     _RB6PPS	set	14862
  2175  0000                     _SPI1SCKPPS	set	15070
  2176  0000                     _U2RXPPS	set	15080
  2177  0000                     _SLRCONF	set	14995
  2178  0000                     _SLRCONE	set	14979
  2179  0000                     _SLRCOND	set	14963
  2180  0000                     _SLRCONC	set	14947
  2181  0000                     _SLRCONB	set	14931
  2182  0000                     _SLRCONA	set	14915
  2183  0000                     _ODCOND	set	14962
  2184  0000                     _ODCONC	set	14946
  2185  0000                     _ODCONB	set	14930
  2186  0000                     _ODCONA	set	14914
  2187  0000                     _ODCONF	set	14994
  2188  0000                     _ODCONE	set	14978
  2189  0000                     _WPUC	set	14945
  2190  0000                     _WPUA	set	14913
  2191  0000                     _WPUB	set	14929
  2192  0000                     _WPUE	set	14977
  2193  0000                     _WPUF	set	14993
  2194  0000                     _WPUD	set	14961
  2195  0000                     _ANSELA	set	14912
  2196  0000                     _ANSELF	set	14992
  2197  0000                     _ANSELE	set	14976
  2198  0000                     _ANSELB	set	14928
  2199  0000                     _ANSELC	set	14944
  2200  0000                     _ANSELD	set	14960
  2201  0000                     _DMA2SSA	set	15321
  2202  0000                     _DMA1SSA	set	15353
  2203  0000                     _DMA2DSZ	set	15310
  2204  0000                     _DMA2SSZ	set	15319
  2205  0000                     _DMA2DSA	set	15312
  2206  0000                     _DMA1DSZ	set	15342
  2207  0000                     _DMA1SSZ	set	15351
  2208  0000                     _DMA1DSA	set	15344
  2209  0000                     _DMA2CON0bits	set	15324
  2210  0000                     _DMA2CON1bits	set	15325
  2211  0000                     _DMA1CON0bits	set	15356
  2212  0000                     _DMA1CON1bits	set	15357
  2213  0000                     _DMA2CON0	set	15324
  2214  0000                     _DMA2AIRQ	set	15326
  2215  0000                     _DMA2SIRQ	set	15327
  2216  0000                     _DMA2CON1	set	15325
  2217  0000                     _DMA1CON0	set	15356
  2218  0000                     _DMA1AIRQ	set	15358
  2219  0000                     _DMA1SIRQ	set	15359
  2220  0000                     _DMA1CON1	set	15357
  2221  0000                     _CLKRCON	set	15589
  2222  0000                     _CLKRCLK	set	15590
  2223  0000                     _SPI1CON1bits	set	15637
  2224  0000                     _SPI1STATUSbits	set	15639
  2225  0000                     _SPI1INTFbits	set	15642
  2226  0000                     _SPI1CON0bits	set	15636
  2227  0000                     _SPI1RXB	set	15632
  2228  0000                     _SPI1TXB	set	15633
  2229  0000                     _SPI1TCNTL	set	15634
  2230  0000                     _SPI1CON0	set	15636
  2231  0000                     _SPI1CLK	set	15644
  2232  0000                     _SPI1BAUD	set	15641
  2233  0000                     _SPI1CON2	set	15638
  2234  0000                     _SPI1CON1	set	15637
  2235  0000                     _U2RXB	set	15824
  2236  0000                     _U2TXB	set	15826
  2237  0000                     _U2ERRIE	set	15842
  2238  0000                     _U2ERRIR	set	15841
  2239  0000                     _U2UIR	set	15840
  2240  0000                     _U2FIFO	set	15839
  2241  0000                     _U2BRGH	set	15838
  2242  0000                     _U2BRGL	set	15837
  2243  0000                     _U2CON2	set	15836
  2244  0000                     _U2CON1	set	15835
  2245  0000                     _U2CON0	set	15834
  2246  0000                     _U2P3L	set	15832
  2247  0000                     _U2P2L	set	15830
  2248  0000                     _U2P1L	set	15828
  2249  0000                     _U1RXB	set	15848
  2250  0000                     _U1ERRIE	set	15866
  2251  0000                     _U1ERRIR	set	15865
  2252  0000                     _U1UIR	set	15864
  2253  0000                     _U1FIFO	set	15863
  2254  0000                     _U1BRGH	set	15862
  2255  0000                     _U1BRGL	set	15861
  2256  0000                     _U1CON2	set	15860
  2257  0000                     _U1CON1	set	15859
  2258  0000                     _U1CON0	set	15858
  2259  0000                     _U1P3H	set	15857
  2260  0000                     _U1P3L	set	15856
  2261  0000                     _U1P2H	set	15855
  2262  0000                     _U1P2L	set	15854
  2263  0000                     _U1P1H	set	15853
  2264  0000                     _U1P1L	set	15852
  2265  0000                     _FVRCON	set	16065
  2266  0000                     _ADFLTRL	set	16102
  2267  0000                     _ADFLTRH	set	16103
  2268  0000                     _ADCON0bits	set	16120
  2269  0000                     _ADCON0	set	16120
  2270  0000                     _ADCLK	set	16127
  2271  0000                     _ADACT	set	16126
  2272  0000                     _ADREF	set	16125
  2273  0000                     _ADSTAT	set	16124
  2274  0000                     _ADCON3	set	16123
  2275  0000                     _ADCON2	set	16122
  2276  0000                     _ADCON1	set	16121
  2277  0000                     _ADPREH	set	16119
  2278  0000                     _ADPREL	set	16118
  2279  0000                     _ADCAP	set	16117
  2280  0000                     _ADACQH	set	16116
  2281  0000                     _ADACQL	set	16115
  2282  0000                     _ADPCH	set	16113
  2283  0000                     _ADRPT	set	16108
  2284  0000                     _ADACCU	set	16106
  2285  0000                     _ADSTPTH	set	16101
  2286  0000                     _ADSTPTL	set	16100
  2287  0000                     _ADUTHH	set	16097
  2288  0000                     _ADUTHL	set	16096
  2289  0000                     _ADLTHH	set	16095
  2290  0000                     _ADLTHL	set	16094
  2291  0000                     _CCPTMRS1bits	set	16223
  2292  0000                     _PORTDbits	set	16333
  2293  0000                     _PORTFbits	set	16335
  2294  0000                     _LATFbits	set	16319
  2295  0000                     _LATCbits	set	16316
  2296  0000                     _LATDbits	set	16317
  2297  0000                     _PORTBbits	set	16331
  2298  0000                     _T3CONbits	set	16294
  2299  0000                     _T3CON	set	16294
  2300  0000                     _TMR3L	set	16292
  2301  0000                     _TMR3H	set	16293
  2302  0000                     _T3CLK	set	16297
  2303  0000                     _T3GATE	set	16296
  2304  0000                     _T3GCON	set	16295
  2305  0000                     _T2CON	set	16300
  2306  0000                     _T2TMR	set	16298
  2307  0000                     _T2PR	set	16299
  2308  0000                     _T2RST	set	16303
  2309  0000                     _T2HLT	set	16301
  2310  0000                     _T2CLKCON	set	16302
  2311  0000                     _PWM8DCL	set	16224
  2312  0000                     _PWM8DCH	set	16225
  2313  0000                     _PWM8CON	set	16226
  2314  0000                     _LATEbits	set	16318
  2315  0000                     _T5CONbits	set	16282
  2316  0000                     _T5CON	set	16282
  2317  0000                     _TMR5L	set	16280
  2318  0000                     _TMR5H	set	16281
  2319  0000                     _T5CLK	set	16285
  2320  0000                     _T5GATE	set	16284
  2321  0000                     _T5GCON	set	16283
  2322  0000                     _T6CON	set	16276
  2323  0000                     _T6TMR	set	16274
  2324  0000                     _T6PR	set	16275
  2325  0000                     _T6RST	set	16279
  2326  0000                     _T6HLT	set	16277
  2327  0000                     _T6CLKCON	set	16278
  2328  0000                     _TRISD	set	16325
  2329  0000                     _TRISC	set	16324
  2330  0000                     _TRISB	set	16323
  2331  0000                     _TRISA	set	16322
  2332  0000                     _TRISF	set	16327
  2333  0000                     _TRISE	set	16326
  2334  0000                     _LATC	set	16316
  2335  0000                     _LATB	set	16315
  2336  0000                     _LATF	set	16319
  2337  0000                     _LATA	set	16314
  2338  0000                     _LATD	set	16317
  2339  0000                     _LATE	set	16318
  2340  0000                     _IVTLOCKbits	set	16340
  2341  0000                     _IVTLOCK	set	16340
  2342  0000                     _INTCON0bits	set	16338
  2343  0000                     _GIE	set	130711
  2344  00FACF                     STR_80:
  2345                           
  2346                           ; BSR set to: 57
  2347  00FACF  20                 	db	32
  2348  00FAD0  25                 	db	37
  2349  00FAD1  63                 	db	99	;'c'
  2350  00FAD2  20                 	db	32
  2351  00FAD3  2C                 	db	44
  2352  00FAD4  25                 	db	37
  2353  00FAD5  6C                 	db	108	;'l'
  2354  00FAD6  75                 	db	117	;'u'
  2355  00FAD7  2C                 	db	44
  2356  00FAD8  25                 	db	37
  2357  00FAD9  34                 	db	52	;'4'
  2358  00FADA  2E                 	db	46
  2359  00FADB  34                 	db	52	;'4'
  2360  00FADC  66                 	db	102	;'f'
  2361  00FADD  2C                 	db	44
  2362  00FADE  25                 	db	37
  2363  00FADF  34                 	db	52	;'4'
  2364  00FAE0  2E                 	db	46
  2365  00FAE1  34                 	db	52	;'4'
  2366  00FAE2  66                 	db	102	;'f'
  2367  00FAE3  2C                 	db	44
  2368  00FAE4  25                 	db	37
  2369  00FAE5  34                 	db	52	;'4'
  2370  00FAE6  2E                 	db	46
  2371  00FAE7  34                 	db	52	;'4'
  2372  00FAE8  66                 	db	102	;'f'
  2373  00FAE9  2C                 	db	44
  2374  00FAEA  25                 	db	37
  2375  00FAEB  34                 	db	52	;'4'
  2376  00FAEC  2E                 	db	46
  2377  00FAED  34                 	db	52	;'4'
  2378  00FAEE  66                 	db	102	;'f'
  2379  00FAEF  2C                 	db	44
  2380  00FAF0  25                 	db	37
  2381  00FAF1  34                 	db	52	;'4'
  2382  00FAF2  2E                 	db	46
  2383  00FAF3  34                 	db	52	;'4'
  2384  00FAF4  66                 	db	102	;'f'
  2385  00FAF5  2C                 	db	44
  2386  00FAF6  25                 	db	37
  2387  00FAF7  34                 	db	52	;'4'
  2388  00FAF8  2E                 	db	46
  2389  00FAF9  33                 	db	51	;'3'
  2390  00FAFA  66                 	db	102	;'f'
  2391  00FAFB  2C                 	db	44
  2392  00FAFC  25                 	db	37
  2393  00FAFD  34                 	db	52	;'4'
  2394  00FAFE  2E                 	db	46
  2395  00FAFF  33                 	db	51	;'3'
  2396  00FB00  66                 	db	102	;'f'
  2397  00FB01  2C                 	db	44
  2398  00FB02  25                 	db	37
  2399  00FB03  34                 	db	52	;'4'
  2400  00FB04  2E                 	db	46
  2401  00FB05  33                 	db	51	;'3'
  2402  00FB06  66                 	db	102	;'f'
  2403  00FB07  2C                 	db	44
  2404  00FB08  25                 	db	37
  2405  00FB09  34                 	db	52	;'4'
  2406  00FB0A  2E                 	db	46
  2407  00FB0B  33                 	db	51	;'3'
  2408  00FB0C  66                 	db	102	;'f'
  2409  00FB0D  2C                 	db	44
  2410  00FB0E  25                 	db	37
  2411  00FB0F  34                 	db	52	;'4'
  2412  00FB10  2E                 	db	46
  2413  00FB11  33                 	db	51	;'3'
  2414  00FB12  66                 	db	102	;'f'
  2415  00FB13  2C                 	db	44
  2416  00FB14  25                 	db	37
  2417  00FB15  34                 	db	52	;'4'
  2418  00FB16  2E                 	db	46
  2419  00FB17  33                 	db	51	;'3'
  2420  00FB18  66                 	db	102	;'f'
  2421  00FB19  2C                 	db	44
  2422  00FB1A  25                 	db	37
  2423  00FB1B  64                 	db	100	;'d'
  2424  00FB1C  2C                 	db	44
  2425  00FB1D  25                 	db	37
  2426  00FB1E  64                 	db	100	;'d'
  2427  00FB1F  2C                 	db	44
  2428  00FB20  25                 	db	37
  2429  00FB21  32                 	db	50	;'2'
  2430  00FB22  2E                 	db	46
  2431  00FB23  36                 	db	54	;'6'
  2432  00FB24  66                 	db	102	;'f'
  2433  00FB25  2C                 	db	44
  2434  00FB26  25                 	db	37
  2435  00FB27  34                 	db	52	;'4'
  2436  00FB28  2E                 	db	46
  2437  00FB29  33                 	db	51	;'3'
  2438  00FB2A  66                 	db	102	;'f'
  2439  00FB2B  2C                 	db	44
  2440  00FB2C  25                 	db	37
  2441  00FB2D  64                 	db	100	;'d'
  2442  00FB2E  2C                 	db	44
  2443  00FB2F  25                 	db	37
  2444  00FB30  64                 	db	100	;'d'
  2445  00FB31  2C                 	db	44
  2446  00FB32  25                 	db	37
  2447  00FB33  6C                 	db	108	;'l'
  2448  00FB34  75                 	db	117	;'u'
  2449  00FB35  2C                 	db	44
  2450  00FB36  25                 	db	37
  2451  00FB37  6C                 	db	108	;'l'
  2452  00FB38  75                 	db	117	;'u'
  2453  00FB39  2C                 	db	44
  2454  00FB3A  25                 	db	37
  2455  00FB3B  34                 	db	52	;'4'
  2456  00FB3C  2E                 	db	46
  2457  00FB3D  33                 	db	51	;'3'
  2458  00FB3E  66                 	db	102	;'f'
  2459  00FB3F  2C                 	db	44
  2460  00FB40  25                 	db	37
  2461  00FB41  34                 	db	52	;'4'
  2462  00FB42  2E                 	db	46
  2463  00FB43  33                 	db	51	;'3'
  2464  00FB44  66                 	db	102	;'f'
  2465  00FB45  2C                 	db	44
  2466  00FB46  25                 	db	37
  2467  00FB47  34                 	db	52	;'4'
  2468  00FB48  2E                 	db	46
  2469  00FB49  33                 	db	51	;'3'
  2470  00FB4A  66                 	db	102	;'f'
  2471  00FB4B  0D                 	db	13
  2472  00FB4C  0A                 	db	10
  2473  00FB4D  00                 	db	0
  2474  00FB4E                     STR_38:
  2475                           
  2476                           ; BSR set to: 57
  2477  00FB4E  53                 	db	83	;'S'
  2478  00FB4F  25                 	db	37
  2479  00FB50  63                 	db	99	;'c'
  2480  00FB51  43                 	db	67	;'C'
  2481  00FB52  20                 	db	32
  2482  00FB53  25                 	db	37
  2483  00FB54  64                 	db	100	;'d'
  2484  00FB55  20                 	db	32
  2485  00FB56  52                 	db	82	;'R'
  2486  00FB57  55                 	db	85	;'U'
  2487  00FB58  4E                 	db	78	;'N'
  2488  00FB59  20                 	db	32
  2489  00FB5A  25                 	db	37
  2490  00FB5B  64                 	db	100	;'d'
  2491  00FB5C  20                 	db	32
  2492  00FB5D  56                 	db	86	;'V'
  2493  00FB5E  25                 	db	37
  2494  00FB5F  32                 	db	50	;'2'
  2495  00FB60  2E                 	db	46
  2496  00FB61  32                 	db	50	;'2'
  2497  00FB62  66                 	db	102	;'f'
  2498  00FB63  20                 	db	32
  2499  00FB64  20                 	db	32
  2500  00FB65  20                 	db	32
  2501  00FB66  20                 	db	32
  2502  00FB67  20                 	db	32
  2503  00FB68  20                 	db	32
  2504  00FB69  20                 	db	32
  2505  00FB6A  00                 	db	0
  2506  00FB6B                     STR_19:
  2507                           
  2508                           ; BSR set to: 57
  2509  00FB6B  52                 	db	82	;'R'
  2510  00FB6C  31                 	db	49	;'1'
  2511  00FB6D  20                 	db	32
  2512  00FB6E  25                 	db	37
  2513  00FB6F  32                 	db	50	;'2'
  2514  00FB70  2E                 	db	46
  2515  00FB71  33                 	db	51	;'3'
  2516  00FB72  66                 	db	102	;'f'
  2517  00FB73  20                 	db	32
  2518  00FB74  25                 	db	37
  2519  00FB75  33                 	db	51	;'3'
  2520  00FB76  2E                 	db	46
  2521  00FB77  34                 	db	52	;'4'
  2522  00FB78  66                 	db	102	;'f'
  2523  00FB79  20                 	db	32
  2524  00FB7A  20                 	db	32
  2525  00FB7B  20                 	db	32
  2526  00FB7C  20                 	db	32
  2527  00FB7D  20                 	db	32
  2528  00FB7E  20                 	db	32
  2529  00FB7F  20                 	db	32
  2530  00FB80  20                 	db	32
  2531  00FB81  20                 	db	32
  2532  00FB82  20                 	db	32
  2533  00FB83  20                 	db	32
  2534  00FB84  00                 	db	0
  2535  00FB85                     STR_20:
  2536                           
  2537                           ; BSR set to: 57
  2538  00FB85  52                 	db	82	;'R'
  2539  00FB86  32                 	db	50	;'2'
  2540  00FB87  20                 	db	32
  2541  00FB88  25                 	db	37
  2542  00FB89  32                 	db	50	;'2'
  2543  00FB8A  2E                 	db	46
  2544  00FB8B  33                 	db	51	;'3'
  2545  00FB8C  66                 	db	102	;'f'
  2546  00FB8D  20                 	db	32
  2547  00FB8E  25                 	db	37
  2548  00FB8F  33                 	db	51	;'3'
  2549  00FB90  2E                 	db	46
  2550  00FB91  34                 	db	52	;'4'
  2551  00FB92  66                 	db	102	;'f'
  2552  00FB93  20                 	db	32
  2553  00FB94  20                 	db	32
  2554  00FB95  20                 	db	32
  2555  00FB96  20                 	db	32
  2556  00FB97  20                 	db	32
  2557  00FB98  20                 	db	32
  2558  00FB99  20                 	db	32
  2559  00FB9A  20                 	db	32
  2560  00FB9B  20                 	db	32
  2561  00FB9C  20                 	db	32
  2562  00FB9D  20                 	db	32
  2563  00FB9E  00                 	db	0
  2564  00FB9F                     STR_11:
  2565                           
  2566                           ; BSR set to: 57
  2567  00FB9F  53                 	db	83	;'S'
  2568  00FBA0  20                 	db	32
  2569  00FBA1  53                 	db	83	;'S'
  2570  00FBA2  25                 	db	37
  2571  00FBA3  63                 	db	99	;'c'
  2572  00FBA4  43                 	db	67	;'C'
  2573  00FBA5  20                 	db	32
  2574  00FBA6  25                 	db	37
  2575  00FBA7  64                 	db	100	;'d'
  2576  00FBA8  20                 	db	32
  2577  00FBA9  25                 	db	37
  2578  00FBAA  32                 	db	50	;'2'
  2579  00FBAB  2E                 	db	46
  2580  00FBAC  34                 	db	52	;'4'
  2581  00FBAD  66                 	db	102	;'f'
  2582  00FBAE  20                 	db	32
  2583  00FBAF  20                 	db	32
  2584  00FBB0  20                 	db	32
  2585  00FBB1  20                 	db	32
  2586  00FBB2  20                 	db	32
  2587  00FBB3  20                 	db	32
  2588  00FBB4  20                 	db	32
  2589  00FBB5  20                 	db	32
  2590  00FBB6  20                 	db	32
  2591  00FBB7  20                 	db	32
  2592  00FBB8  00                 	db	0
  2593  00FBB9                     
  2594                           ; BSR set to: 57
  2595  00FBB9  20                 	db	32
  2596  00FBBA  4D                 	db	77	;'M'
  2597  00FBBB  65                 	db	101	;'e'
  2598  00FBBC  73                 	db	115	;'s'
  2599  00FBBD  67                 	db	103	;'g'
  2600  00FBBE  20                 	db	32
  2601  00FBBF  25                 	db	37
  2602  00FBC0  64                 	db	100	;'d'
  2603  00FBC1  20                 	db	32
  2604  00FBC2  53                 	db	83	;'S'
  2605  00FBC3  74                 	db	116	;'t'
  2606  00FBC4  61                 	db	97	;'a'
  2607  00FBC5  63                 	db	99	;'c'
  2608  00FBC6  6B                 	db	107	;'k'
  2609  00FBC7  20                 	db	32
  2610  00FBC8  25                 	db	37
  2611  00FBC9  64                 	db	100	;'d'
  2612  00FBCA  20                 	db	32
  2613  00FBCB  20                 	db	32
  2614  00FBCC  20                 	db	32
  2615  00FBCD  20                 	db	32
  2616  00FBCE  20                 	db	32
  2617  00FBCF  20                 	db	32
  2618  00FBD0  00                 	db	0
  2619  00FBD1                     STR_39:
  2620                           
  2621                           ; BSR set to: 57
  2622  00FBD1  45                 	db	69	;'E'
  2623  00FBD2  53                 	db	83	;'S'
  2624  00FBD3  52                 	db	82	;'R'
  2625  00FBD4  20                 	db	32
  2626  00FBD5  20                 	db	32
  2627  00FBD6  25                 	db	37
  2628  00FBD7  32                 	db	50	;'2'
  2629  00FBD8  2E                 	db	46
  2630  00FBD9  36                 	db	54	;'6'
  2631  00FBDA  66                 	db	102	;'f'
  2632  00FBDB  20                 	db	32
  2633  00FBDC  20                 	db	32
  2634  00FBDD  20                 	db	32
  2635  00FBDE  20                 	db	32
  2636  00FBDF  20                 	db	32
  2637  00FBE0  20                 	db	32
  2638  00FBE1  20                 	db	32
  2639  00FBE2  20                 	db	32
  2640  00FBE3  20                 	db	32
  2641  00FBE4  20                 	db	32
  2642  00FBE5  20                 	db	32
  2643  00FBE6  20                 	db	32
  2644  00FBE7  00                 	db	0
  2645  00FBE8                     STR_36:
  2646                           
  2647                           ; BSR set to: 57
  2648  00FBE8  42                 	db	66	;'B'
  2649  00FBE9  41                 	db	65	;'A'
  2650  00FBEA  54                 	db	84	;'T'
  2651  00FBEB  54                 	db	84	;'T'
  2652  00FBEC  20                 	db	32
  2653  00FBED  50                 	db	80	;'P'
  2654  00FBEE  57                 	db	87	;'W'
  2655  00FBEF  52                 	db	82	;'R'
  2656  00FBF0  20                 	db	32
  2657  00FBF1  25                 	db	37
  2658  00FBF2  33                 	db	51	;'3'
  2659  00FBF3  2E                 	db	46
  2660  00FBF4  32                 	db	50	;'2'
  2661  00FBF5  66                 	db	102	;'f'
  2662  00FBF6  20                 	db	32
  2663  00FBF7  20                 	db	32
  2664  00FBF8  20                 	db	32
  2665  00FBF9  20                 	db	32
  2666  00FBFA  20                 	db	32
  2667  00FBFB  20                 	db	32
  2668  00FBFC  20                 	db	32
  2669  00FBFD  20                 	db	32
  2670  00FBFE  00                 	db	0
  2671  00FBFF                     STR_40:
  2672                           
  2673                           ; BSR set to: 57
  2674  00FBFF  52                 	db	82	;'R'
  2675  00FC00  31                 	db	49	;'1'
  2676  00FC01  20                 	db	32
  2677  00FC02  25                 	db	37
  2678  00FC03  32                 	db	50	;'2'
  2679  00FC04  2E                 	db	46
  2680  00FC05  33                 	db	51	;'3'
  2681  00FC06  66                 	db	102	;'f'
  2682  00FC07  20                 	db	32
  2683  00FC08  25                 	db	37
  2684  00FC09  33                 	db	51	;'3'
  2685  00FC0A  2E                 	db	46
  2686  00FC0B  34                 	db	52	;'4'
  2687  00FC0C  66                 	db	102	;'f'
  2688  00FC0D  20                 	db	32
  2689  00FC0E  20                 	db	32
  2690  00FC0F  20                 	db	32
  2691  00FC10  20                 	db	32
  2692  00FC11  20                 	db	32
  2693  00FC12  20                 	db	32
  2694  00FC13  20                 	db	32
  2695  00FC14  20                 	db	32
  2696  00FC15  00                 	db	0
  2697  00FC16                     STR_41:
  2698                           
  2699                           ; BSR set to: 57
  2700  00FC16  52                 	db	82	;'R'
  2701  00FC17  32                 	db	50	;'2'
  2702  00FC18  20                 	db	32
  2703  00FC19  25                 	db	37
  2704  00FC1A  32                 	db	50	;'2'
  2705  00FC1B  2E                 	db	46
  2706  00FC1C  33                 	db	51	;'3'
  2707  00FC1D  66                 	db	102	;'f'
  2708  00FC1E  20                 	db	32
  2709  00FC1F  25                 	db	37
  2710  00FC20  33                 	db	51	;'3'
  2711  00FC21  2E                 	db	46
  2712  00FC22  34                 	db	52	;'4'
  2713  00FC23  66                 	db	102	;'f'
  2714  00FC24  20                 	db	32
  2715  00FC25  20                 	db	32
  2716  00FC26  20                 	db	32
  2717  00FC27  20                 	db	32
  2718  00FC28  20                 	db	32
  2719  00FC29  20                 	db	32
  2720  00FC2A  20                 	db	32
  2721  00FC2B  20                 	db	32
  2722  00FC2C  00                 	db	0
  2723  00FC2D                     STR_37:
  2724                           
  2725                           ; BSR set to: 57
  2726  00FC2D  42                 	db	66	;'B'
  2727  00FC2E  41                 	db	65	;'A'
  2728  00FC2F  48                 	db	72	;'H'
  2729  00FC30  20                 	db	32
  2730  00FC31  25                 	db	37
  2731  00FC32  33                 	db	51	;'3'
  2732  00FC33  2E                 	db	46
  2733  00FC34  32                 	db	50	;'2'
  2734  00FC35  66                 	db	102	;'f'
  2735  00FC36  20                 	db	32
  2736  00FC37  50                 	db	80	;'P'
  2737  00FC38  25                 	db	37
  2738  00FC39  33                 	db	51	;'3'
  2739  00FC3A  2E                 	db	46
  2740  00FC3B  32                 	db	50	;'2'
  2741  00FC3C  66                 	db	102	;'f'
  2742  00FC3D  20                 	db	32
  2743  00FC3E  20                 	db	32
  2744  00FC3F  20                 	db	32
  2745  00FC40  20                 	db	32
  2746  00FC41  20                 	db	32
  2747  00FC42  20                 	db	32
  2748  00FC43  00                 	db	0
  2749  00FC44                     STR_18:
  2750                           
  2751                           ; BSR set to: 57
  2752  00FC44  45                 	db	69	;'E'
  2753  00FC45  53                 	db	83	;'S'
  2754  00FC46  52                 	db	82	;'R'
  2755  00FC47  20                 	db	32
  2756  00FC48  20                 	db	32
  2757  00FC49  25                 	db	37
  2758  00FC4A  32                 	db	50	;'2'
  2759  00FC4B  2E                 	db	46
  2760  00FC4C  36                 	db	54	;'6'
  2761  00FC4D  66                 	db	102	;'f'
  2762  00FC4E  20                 	db	32
  2763  00FC4F  20                 	db	32
  2764  00FC50  20                 	db	32
  2765  00FC51  20                 	db	32
  2766  00FC52  20                 	db	32
  2767  00FC53  20                 	db	32
  2768  00FC54  20                 	db	32
  2769  00FC55  20                 	db	32
  2770  00FC56  20                 	db	32
  2771  00FC57  20                 	db	32
  2772  00FC58  20                 	db	32
  2773  00FC59  00                 	db	0
  2774  00FC5A                     STR_12:
  2775                           
  2776                           ; BSR set to: 57
  2777  00FC5A  53                 	db	83	;'S'
  2778  00FC5B  74                 	db	116	;'t'
  2779  00FC5C  61                 	db	97	;'a'
  2780  00FC5D  74                 	db	116	;'t'
  2781  00FC5E  69                 	db	105	;'i'
  2782  00FC5F  63                 	db	99	;'c'
  2783  00FC60  20                 	db	32
  2784  00FC61  53                 	db	83	;'S'
  2785  00FC62  4F                 	db	79	;'O'
  2786  00FC63  43                 	db	67	;'C'
  2787  00FC64  20                 	db	32
  2788  00FC65  25                 	db	37
  2789  00FC66  64                 	db	100	;'d'
  2790  00FC67  20                 	db	32
  2791  00FC68  20                 	db	32
  2792  00FC69  20                 	db	32
  2793  00FC6A  20                 	db	32
  2794  00FC6B  20                 	db	32
  2795  00FC6C  20                 	db	32
  2796  00FC6D  20                 	db	32
  2797  00FC6E  20                 	db	32
  2798  00FC6F  00                 	db	0
  2799  00FC70                     STR_33:
  2800                           
  2801                           ; BSR set to: 57
  2802  00FC70  42                 	db	66	;'B'
  2803  00FC71  41                 	db	65	;'A'
  2804  00FC72  54                 	db	84	;'T'
  2805  00FC73  20                 	db	32
  2806  00FC74  49                 	db	73	;'I'
  2807  00FC75  57                 	db	87	;'W'
  2808  00FC76  48                 	db	72	;'H'
  2809  00FC77  20                 	db	32
  2810  00FC78  25                 	db	37
  2811  00FC79  34                 	db	52	;'4'
  2812  00FC7A  2E                 	db	46
  2813  00FC7B  31                 	db	49	;'1'
  2814  00FC7C  66                 	db	102	;'f'
  2815  00FC7D  20                 	db	32
  2816  00FC7E  20                 	db	32
  2817  00FC7F  20                 	db	32
  2818  00FC80  20                 	db	32
  2819  00FC81  20                 	db	32
  2820  00FC82  20                 	db	32
  2821  00FC83  20                 	db	32
  2822  00FC84  20                 	db	32
  2823  00FC85  00                 	db	0
  2824  00FC86                     STR_34:
  2825                           
  2826                           ; BSR set to: 57
  2827  00FC86  42                 	db	66	;'B'
  2828  00FC87  41                 	db	65	;'A'
  2829  00FC88  54                 	db	84	;'T'
  2830  00FC89  20                 	db	32
  2831  00FC8A  4F                 	db	79	;'O'
  2832  00FC8B  57                 	db	87	;'W'
  2833  00FC8C  48                 	db	72	;'H'
  2834  00FC8D  20                 	db	32
  2835  00FC8E  25                 	db	37
  2836  00FC8F  34                 	db	52	;'4'
  2837  00FC90  2E                 	db	46
  2838  00FC91  31                 	db	49	;'1'
  2839  00FC92  66                 	db	102	;'f'
  2840  00FC93  20                 	db	32
  2841  00FC94  20                 	db	32
  2842  00FC95  20                 	db	32
  2843  00FC96  20                 	db	32
  2844  00FC97  20                 	db	32
  2845  00FC98  20                 	db	32
  2846  00FC99  20                 	db	32
  2847  00FC9A  20                 	db	32
  2848  00FC9B  00                 	db	0
  2849  00FC9C                     STR_35:
  2850                           
  2851                           ; BSR set to: 57
  2852  00FC9C  42                 	db	66	;'B'
  2853  00FC9D  41                 	db	65	;'A'
  2854  00FC9E  54                 	db	84	;'T'
  2855  00FC9F  20                 	db	32
  2856  00FCA0  54                 	db	84	;'T'
  2857  00FCA1  57                 	db	87	;'W'
  2858  00FCA2  48                 	db	72	;'H'
  2859  00FCA3  20                 	db	32
  2860  00FCA4  25                 	db	37
  2861  00FCA5  34                 	db	52	;'4'
  2862  00FCA6  2E                 	db	46
  2863  00FCA7  31                 	db	49	;'1'
  2864  00FCA8  66                 	db	102	;'f'
  2865  00FCA9  20                 	db	32
  2866  00FCAA  20                 	db	32
  2867  00FCAB  20                 	db	32
  2868  00FCAC  20                 	db	32
  2869  00FCAD  20                 	db	32
  2870  00FCAE  20                 	db	32
  2871  00FCAF  20                 	db	32
  2872  00FCB0  20                 	db	32
  2873  00FCB1  00                 	db	0
  2874  00FCB2                     STR_29:
  2875                           
  2876                           ; BSR set to: 57
  2877  00FCB2  49                 	db	73	;'I'
  2878  00FCB3  4E                 	db	78	;'N'
  2879  00FCB4  56                 	db	86	;'V'
  2880  00FCB5  20                 	db	32
  2881  00FCB6  20                 	db	32
  2882  00FCB7  57                 	db	87	;'W'
  2883  00FCB8  48                 	db	72	;'H'
  2884  00FCB9  20                 	db	32
  2885  00FCBA  25                 	db	37
  2886  00FCBB  33                 	db	51	;'3'
  2887  00FCBC  2E                 	db	46
  2888  00FCBD  32                 	db	50	;'2'
  2889  00FCBE  66                 	db	102	;'f'
  2890  00FCBF  20                 	db	32
  2891  00FCC0  20                 	db	32
  2892  00FCC1  20                 	db	32
  2893  00FCC2  20                 	db	32
  2894  00FCC3  20                 	db	32
  2895  00FCC4  20                 	db	32
  2896  00FCC5  20                 	db	32
  2897  00FCC6  20                 	db	32
  2898  00FCC7  00                 	db	0
  2899  00FCC8                     STR_28:
  2900                           
  2901                           ; BSR set to: 57
  2902  00FCC8  4C                 	db	76	;'L'
  2903  00FCC9  4F                 	db	79	;'O'
  2904  00FCCA  41                 	db	65	;'A'
  2905  00FCCB  44                 	db	68	;'D'
  2906  00FCCC  20                 	db	32
  2907  00FCCD  57                 	db	87	;'W'
  2908  00FCCE  48                 	db	72	;'H'
  2909  00FCCF  20                 	db	32
  2910  00FCD0  25                 	db	37
  2911  00FCD1  33                 	db	51	;'3'
  2912  00FCD2  2E                 	db	46
  2913  00FCD3  32                 	db	50	;'2'
  2914  00FCD4  66                 	db	102	;'f'
  2915  00FCD5  20                 	db	32
  2916  00FCD6  20                 	db	32
  2917  00FCD7  20                 	db	32
  2918  00FCD8  20                 	db	32
  2919  00FCD9  20                 	db	32
  2920  00FCDA  20                 	db	32
  2921  00FCDB  20                 	db	32
  2922  00FCDC  20                 	db	32
  2923  00FCDD  00                 	db	0
  2924  00FCDE                     STR_27:
  2925                           
  2926                           ; BSR set to: 57
  2927  00FCDE  50                 	db	80	;'P'
  2928  00FCDF  56                 	db	86	;'V'
  2929  00FCE0  20                 	db	32
  2930  00FCE1  25                 	db	37
  2931  00FCE2  63                 	db	99	;'c'
  2932  00FCE3  20                 	db	32
  2933  00FCE4  57                 	db	87	;'W'
  2934  00FCE5  48                 	db	72	;'H'
  2935  00FCE6  20                 	db	32
  2936  00FCE7  25                 	db	37
  2937  00FCE8  33                 	db	51	;'3'
  2938  00FCE9  2E                 	db	46
  2939  00FCEA  32                 	db	50	;'2'
  2940  00FCEB  66                 	db	102	;'f'
  2941  00FCEC  20                 	db	32
  2942  00FCED  20                 	db	32
  2943  00FCEE  20                 	db	32
  2944  00FCEF  20                 	db	32
  2945  00FCF0  20                 	db	32
  2946  00FCF1  20                 	db	32
  2947  00FCF2  20                 	db	32
  2948  00FCF3  00                 	db	0
  2949  00FCF4                     STR_26:
  2950                           
  2951                           ; BSR set to: 57
  2952  00FCF4  49                 	db	73	;'I'
  2953  00FCF5  4E                 	db	78	;'N'
  2954  00FCF6  56                 	db	86	;'V'
  2955  00FCF7  20                 	db	32
  2956  00FCF8  20                 	db	32
  2957  00FCF9  50                 	db	80	;'P'
  2958  00FCFA  57                 	db	87	;'W'
  2959  00FCFB  52                 	db	82	;'R'
  2960  00FCFC  20                 	db	32
  2961  00FCFD  25                 	db	37
  2962  00FCFE  33                 	db	51	;'3'
  2963  00FCFF  2E                 	db	46
  2964  00FD00  32                 	db	50	;'2'
  2965  00FD01  66                 	db	102	;'f'
  2966  00FD02  20                 	db	32
  2967  00FD03  20                 	db	32
  2968  00FD04  20                 	db	32
  2969  00FD05  20                 	db	32
  2970  00FD06  20                 	db	32
  2971  00FD07  20                 	db	32
  2972  00FD08  20                 	db	32
  2973  00FD09  00                 	db	0
  2974  00FD0A                     STR_25:
  2975                           
  2976                           ; BSR set to: 57
  2977  00FD0A  4C                 	db	76	;'L'
  2978  00FD0B  4F                 	db	79	;'O'
  2979  00FD0C  41                 	db	65	;'A'
  2980  00FD0D  44                 	db	68	;'D'
  2981  00FD0E  20                 	db	32
  2982  00FD0F  50                 	db	80	;'P'
  2983  00FD10  57                 	db	87	;'W'
  2984  00FD11  52                 	db	82	;'R'
  2985  00FD12  20                 	db	32
  2986  00FD13  25                 	db	37
  2987  00FD14  33                 	db	51	;'3'
  2988  00FD15  2E                 	db	46
  2989  00FD16  32                 	db	50	;'2'
  2990  00FD17  66                 	db	102	;'f'
  2991  00FD18  20                 	db	32
  2992  00FD19  20                 	db	32
  2993  00FD1A  20                 	db	32
  2994  00FD1B  20                 	db	32
  2995  00FD1C  20                 	db	32
  2996  00FD1D  20                 	db	32
  2997  00FD1E  20                 	db	32
  2998  00FD1F  00                 	db	0
  2999  00FD20                     STR_24:
  3000                           
  3001                           ; BSR set to: 57
  3002  00FD20  50                 	db	80	;'P'
  3003  00FD21  56                 	db	86	;'V'
  3004  00FD22  20                 	db	32
  3005  00FD23  25                 	db	37
  3006  00FD24  63                 	db	99	;'c'
  3007  00FD25  20                 	db	32
  3008  00FD26  50                 	db	80	;'P'
  3009  00FD27  57                 	db	87	;'W'
  3010  00FD28  52                 	db	82	;'R'
  3011  00FD29  20                 	db	32
  3012  00FD2A  25                 	db	37
  3013  00FD2B  33                 	db	51	;'3'
  3014  00FD2C  2E                 	db	46
  3015  00FD2D  32                 	db	50	;'2'
  3016  00FD2E  66                 	db	102	;'f'
  3017  00FD2F  20                 	db	32
  3018  00FD30  20                 	db	32
  3019  00FD31  20                 	db	32
  3020  00FD32  20                 	db	32
  3021  00FD33  20                 	db	32
  3022  00FD34  20                 	db	32
  3023  00FD35  00                 	db	0
  3024  00FD36                     STR_13:
  3025                           
  3026                           ; BSR set to: 57
  3027  00FD36  42                 	db	66	;'B'
  3028  00FD37  61                 	db	97	;'a'
  3029  00FD38  74                 	db	116	;'t'
  3030  00FD39  74                 	db	116	;'t'
  3031  00FD3A  65                 	db	101	;'e'
  3032  00FD3B  72                 	db	114	;'r'
  3033  00FD3C  79                 	db	121	;'y'
  3034  00FD3D  20                 	db	32
  3035  00FD3E  41                 	db	65	;'A'
  3036  00FD3F  68                 	db	104	;'h'
  3037  00FD40  20                 	db	32
  3038  00FD41  25                 	db	37
  3039  00FD42  33                 	db	51	;'3'
  3040  00FD43  2E                 	db	46
  3041  00FD44  32                 	db	50	;'2'
  3042  00FD45  66                 	db	102	;'f'
  3043  00FD46  20                 	db	32
  3044  00FD47  20                 	db	32
  3045  00FD48  20                 	db	32
  3046  00FD49  20                 	db	32
  3047  00FD4A  20                 	db	32
  3048  00FD4B  00                 	db	0
  3049  00FD4C                     STR_31:
  3050                           
  3051                           ; BSR set to: 57
  3052  00FD4C  42                 	db	66	;'B'
  3053  00FD4D  56                 	db	86	;'V'
  3054  00FD4E  20                 	db	32
  3055  00FD4F  25                 	db	37
  3056  00FD50  32                 	db	50	;'2'
  3057  00FD51  2E                 	db	46
  3058  00FD52  32                 	db	50	;'2'
  3059  00FD53  66                 	db	102	;'f'
  3060  00FD54  20                 	db	32
  3061  00FD55  42                 	db	66	;'B'
  3062  00FD56  41                 	db	65	;'A'
  3063  00FD57  20                 	db	32
  3064  00FD58  25                 	db	37
  3065  00FD59  32                 	db	50	;'2'
  3066  00FD5A  2E                 	db	46
  3067  00FD5B  32                 	db	50	;'2'
  3068  00FD5C  66                 	db	102	;'f'
  3069  00FD5D  20                 	db	32
  3070  00FD5E  20                 	db	32
  3071  00FD5F  20                 	db	32
  3072  00FD60  20                 	db	32
  3073  00FD61  00                 	db	0
  3074  00FD62                     STR_32:
  3075                           
  3076                           ; BSR set to: 57
  3077  00FD62  43                 	db	67	;'C'
  3078  00FD63  56                 	db	86	;'V'
  3079  00FD64  20                 	db	32
  3080  00FD65  25                 	db	37
  3081  00FD66  32                 	db	50	;'2'
  3082  00FD67  2E                 	db	46
  3083  00FD68  32                 	db	50	;'2'
  3084  00FD69  66                 	db	102	;'f'
  3085  00FD6A  20                 	db	32
  3086  00FD6B  4C                 	db	76	;'L'
  3087  00FD6C  41                 	db	65	;'A'
  3088  00FD6D  20                 	db	32
  3089  00FD6E  25                 	db	37
  3090  00FD6F  32                 	db	50	;'2'
  3091  00FD70  2E                 	db	46
  3092  00FD71  32                 	db	50	;'2'
  3093  00FD72  66                 	db	102	;'f'
  3094  00FD73  20                 	db	32
  3095  00FD74  20                 	db	32
  3096  00FD75  20                 	db	32
  3097  00FD76  20                 	db	32
  3098  00FD77  00                 	db	0
  3099  00FD78                     STR_30:
  3100                           
  3101                           ; BSR set to: 57
  3102  00FD78  50                 	db	80	;'P'
  3103  00FD79  56                 	db	86	;'V'
  3104  00FD7A  20                 	db	32
  3105  00FD7B  25                 	db	37
  3106  00FD7C  32                 	db	50	;'2'
  3107  00FD7D  2E                 	db	46
  3108  00FD7E  32                 	db	50	;'2'
  3109  00FD7F  66                 	db	102	;'f'
  3110  00FD80  20                 	db	32
  3111  00FD81  50                 	db	80	;'P'
  3112  00FD82  41                 	db	65	;'A'
  3113  00FD83  20                 	db	32
  3114  00FD84  25                 	db	37
  3115  00FD85  32                 	db	50	;'2'
  3116  00FD86  2E                 	db	46
  3117  00FD87  32                 	db	50	;'2'
  3118  00FD88  66                 	db	102	;'f'
  3119  00FD89  20                 	db	32
  3120  00FD8A  20                 	db	32
  3121  00FD8B  20                 	db	32
  3122  00FD8C  20                 	db	32
  3123  00FD8D  00                 	db	0
  3124  00FD8E                     STR_42:
  3125                           
  3126                           ; BSR set to: 57
  3127  00FD8E  25                 	db	37
  3128  00FD8F  64                 	db	100	;'d'
  3129  00FD90  20                 	db	32
  3130  00FD91  25                 	db	37
  3131  00FD92  32                 	db	50	;'2'
  3132  00FD93  2E                 	db	46
  3133  00FD94  34                 	db	52	;'4'
  3134  00FD95  66                 	db	102	;'f'
  3135  00FD96  2C                 	db	44
  3136  00FD97  20                 	db	32
  3137  00FD98  25                 	db	37
  3138  00FD99  64                 	db	100	;'d'
  3139  00FD9A  20                 	db	32
  3140  00FD9B  20                 	db	32
  3141  00FD9C  54                 	db	84	;'T'
  3142  00FD9D  52                 	db	82	;'R'
  3143  00FD9E  49                 	db	73	;'I'
  3144  00FD9F  4D                 	db	77	;'M'
  3145  00FDA0  20                 	db	32
  3146  00FDA1  20                 	db	32
  3147  00FDA2  20                 	db	32
  3148  00FDA3  00                 	db	0
  3149  00FDA4                     STR_5:
  3150                           
  3151                           ; BSR set to: 57
  3152  00FDA4  20                 	db	32
  3153  00FDA5  20                 	db	32
  3154  00FDA6  20                 	db	32
  3155  00FDA7  20                 	db	32
  3156  00FDA8  20                 	db	32
  3157  00FDA9  20                 	db	32
  3158  00FDAA  20                 	db	32
  3159  00FDAB  20                 	db	32
  3160  00FDAC  20                 	db	32
  3161  00FDAD  20                 	db	32
  3162  00FDAE  20                 	db	32
  3163  00FDAF  20                 	db	32
  3164  00FDB0  20                 	db	32
  3165  00FDB1  20                 	db	32
  3166  00FDB2  20                 	db	32
  3167  00FDB3  20                 	db	32
  3168  00FDB4  20                 	db	32
  3169  00FDB5  20                 	db	32
  3170  00FDB6  20                 	db	32
  3171  00FDB7  20                 	db	32
  3172  00FDB8  00                 	db	0
  3173  00FDB9                     STR_51:
  3174                           
  3175                           ; BSR set to: 57
  3176  00FDB9  20                 	db	32
  3177  00FDBA  25                 	db	37
  3178  00FDBB  64                 	db	100	;'d'
  3179  00FDBC  20                 	db	32
  3180  00FDBD  25                 	db	37
  3181  00FDBE  64                 	db	100	;'d'
  3182  00FDBF  20                 	db	32
  3183  00FDC0  20                 	db	32
  3184  00FDC1  20                 	db	32
  3185  00FDC2  20                 	db	32
  3186  00FDC3  20                 	db	32
  3187  00FDC4  20                 	db	32
  3188  00FDC5  20                 	db	32
  3189  00FDC6  20                 	db	32
  3190  00FDC7  20                 	db	32
  3191  00FDC8  20                 	db	32
  3192  00FDC9  20                 	db	32
  3193  00FDCA  20                 	db	32
  3194  00FDCB  20                 	db	32
  3195  00FDCC  20                 	db	32
  3196  00FDCD  00                 	db	0
  3197  00FDCE                     STR_46:
  3198                           
  3199                           ; BSR set to: 57
  3200  00FDCE  53                 	db	83	;'S'
  3201  00FDCF  65                 	db	101	;'e'
  3202  00FDD0  6E                 	db	110	;'n'
  3203  00FDD1  73                 	db	115	;'s'
  3204  00FDD2  6F                 	db	111	;'o'
  3205  00FDD3  72                 	db	114	;'r'
  3206  00FDD4  20                 	db	32
  3207  00FDD5  20                 	db	32
  3208  00FDD6  20                 	db	32
  3209  00FDD7  20                 	db	32
  3210  00FDD8  20                 	db	32
  3211  00FDD9  20                 	db	32
  3212  00FDDA  20                 	db	32
  3213  00FDDB  20                 	db	32
  3214  00FDDC  20                 	db	32
  3215  00FDDD  20                 	db	32
  3216  00FDDE  20                 	db	32
  3217  00FDDF  20                 	db	32
  3218  00FDE0  20                 	db	32
  3219  00FDE1  20                 	db	32
  3220  00FDE2  00                 	db	0
  3221  00FDE3                     STR_54:
  3222                           
  3223                           ; BSR set to: 57
  3224  00FDE3  53                 	db	83	;'S'
  3225  00FDE4  65                 	db	101	;'e'
  3226  00FDE5  6E                 	db	110	;'n'
  3227  00FDE6  73                 	db	115	;'s'
  3228  00FDE7  6F                 	db	111	;'o'
  3229  00FDE8  72                 	db	114	;'r'
  3230  00FDE9  73                 	db	115	;'s'
  3231  00FDEA  20                 	db	32
  3232  00FDEB  20                 	db	32
  3233  00FDEC  20                 	db	32
  3234  00FDED  20                 	db	32
  3235  00FDEE  20                 	db	32
  3236  00FDEF  20                 	db	32
  3237  00FDF0  20                 	db	32
  3238  00FDF1  20                 	db	32
  3239  00FDF2  20                 	db	32
  3240  00FDF3  20                 	db	32
  3241  00FDF4  20                 	db	32
  3242  00FDF5  20                 	db	32
  3243  00FDF6  20                 	db	32
  3244  00FDF7  00                 	db	0
  3245  00FDF8                     STR_10:
  3246                           
  3247                           ; BSR set to: 57
  3248  00FDF8  42                 	db	66	;'B'
  3249  00FDF9  56                 	db	86	;'V'
  3250  00FDFA  20                 	db	32
  3251  00FDFB  25                 	db	37
  3252  00FDFC  32                 	db	50	;'2'
  3253  00FDFD  2E                 	db	46
  3254  00FDFE  34                 	db	52	;'4'
  3255  00FDFF  66                 	db	102	;'f'
  3256  00FE00  20                 	db	32
  3257  00FE01  20                 	db	32
  3258  00FE02  20                 	db	32
  3259  00FE03  20                 	db	32
  3260  00FE04  20                 	db	32
  3261  00FE05  20                 	db	32
  3262  00FE06  20                 	db	32
  3263  00FE07  20                 	db	32
  3264  00FE08  20                 	db	32
  3265  00FE09  20                 	db	32
  3266  00FE0A  20                 	db	32
  3267  00FE0B  20                 	db	32
  3268  00FE0C  00                 	db	0
  3269  00FE0D                     STR_4:
  3270                           
  3271                           ; BSR set to: 57
  3272  00FE0D  20                 	db	32
  3273  00FE0E  4E                 	db	78	;'N'
  3274  00FE0F  53                 	db	83	;'S'
  3275  00FE10  41                 	db	65	;'A'
  3276  00FE11  53                 	db	83	;'S'
  3277  00FE12  50                 	db	80	;'P'
  3278  00FE13  4F                 	db	79	;'O'
  3279  00FE14  4F                 	db	79	;'O'
  3280  00FE15  4B                 	db	75	;'K'
  3281  00FE16  20                 	db	32
  3282  00FE17  20                 	db	32
  3283  00FE18  20                 	db	32
  3284  00FE19  20                 	db	32
  3285  00FE1A  20                 	db	32
  3286  00FE1B  20                 	db	32
  3287  00FE1C  20                 	db	32
  3288  00FE1D  20                 	db	32
  3289  00FE1E  20                 	db	32
  3290  00FE1F  20                 	db	32
  3291  00FE20  20                 	db	32
  3292  00FE21  00                 	db	0
  3293  00FE22                     STR_14:
  3294                           
  3295                           ; BSR set to: 57
  3296  00FE22  42                 	db	66	;'B'
  3297  00FE23  61                 	db	97	;'a'
  3298  00FE24  74                 	db	116	;'t'
  3299  00FE25  74                 	db	116	;'t'
  3300  00FE26  65                 	db	101	;'e'
  3301  00FE27  72                 	db	114	;'r'
  3302  00FE28  79                 	db	121	;'y'
  3303  00FE29  20                 	db	32
  3304  00FE2A  45                 	db	69	;'E'
  3305  00FE2B  53                 	db	83	;'S'
  3306  00FE2C  52                 	db	82	;'R'
  3307  00FE2D  20                 	db	32
  3308  00FE2E  20                 	db	32
  3309  00FE2F  20                 	db	32
  3310  00FE30  20                 	db	32
  3311  00FE31  20                 	db	32
  3312  00FE32  20                 	db	32
  3313  00FE33  20                 	db	32
  3314  00FE34  20                 	db	32
  3315  00FE35  20                 	db	32
  3316  00FE36  00                 	db	0
  3317  00FE37                     STR_15:
  3318                           
  3319                           ; BSR set to: 57
  3320  00FE37  43                 	db	67	;'C'
  3321  00FE38  61                 	db	97	;'a'
  3322  00FE39  6C                 	db	108	;'l'
  3323  00FE3A  63                 	db	99	;'c'
  3324  00FE3B  75                 	db	117	;'u'
  3325  00FE3C  6C                 	db	108	;'l'
  3326  00FE3D  61                 	db	97	;'a'
  3327  00FE3E  74                 	db	116	;'t'
  3328  00FE3F  69                 	db	105	;'i'
  3329  00FE40  6F                 	db	111	;'o'
  3330  00FE41  6E                 	db	110	;'n'
  3331  00FE42  20                 	db	32
  3332  00FE43  20                 	db	32
  3333  00FE44  20                 	db	32
  3334  00FE45  20                 	db	32
  3335  00FE46  20                 	db	32
  3336  00FE47  20                 	db	32
  3337  00FE48  20                 	db	32
  3338  00FE49  20                 	db	32
  3339  00FE4A  20                 	db	32
  3340  00FE4B  00                 	db	0
  3341  00FE4C                     STR_47:
  3342                           
  3343                           ; BSR set to: 57
  3344  00FE4C  43                 	db	67	;'C'
  3345  00FE4D  61                 	db	97	;'a'
  3346  00FE4E  6C                 	db	108	;'l'
  3347  00FE4F  69                 	db	105	;'i'
  3348  00FE50  62                 	db	98	;'b'
  3349  00FE51  72                 	db	114	;'r'
  3350  00FE52  61                 	db	97	;'a'
  3351  00FE53  74                 	db	116	;'t'
  3352  00FE54  69                 	db	105	;'i'
  3353  00FE55  6F                 	db	111	;'o'
  3354  00FE56  6E                 	db	110	;'n'
  3355  00FE57  20                 	db	32
  3356  00FE58  20                 	db	32
  3357  00FE59  20                 	db	32
  3358  00FE5A  20                 	db	32
  3359  00FE5B  20                 	db	32
  3360  00FE5C  20                 	db	32
  3361  00FE5D  20                 	db	32
  3362  00FE5E  20                 	db	32
  3363  00FE5F  20                 	db	32
  3364  00FE60  00                 	db	0
  3365  00FE61                     STR_2:
  3366                           
  3367                           ; BSR set to: 57
  3368  00FE61  20                 	db	32
  3369  00FE62  56                 	db	86	;'V'
  3370  00FE63  65                 	db	101	;'e'
  3371  00FE64  72                 	db	114	;'r'
  3372  00FE65  73                 	db	115	;'s'
  3373  00FE66  69                 	db	105	;'i'
  3374  00FE67  6F                 	db	111	;'o'
  3375  00FE68  6E                 	db	110	;'n'
  3376  00FE69  20                 	db	32
  3377  00FE6A  25                 	db	37
  3378  00FE6B  73                 	db	115	;'s'
  3379  00FE6C  20                 	db	32
  3380  00FE6D  20                 	db	32
  3381  00FE6E  20                 	db	32
  3382  00FE6F  20                 	db	32
  3383  00FE70  20                 	db	32
  3384  00FE71  20                 	db	32
  3385  00FE72  20                 	db	32
  3386  00FE73  20                 	db	32
  3387  00FE74  20                 	db	32
  3388  00FE75  00                 	db	0
  3389  00FE76                     STR_58:
  3390                           
  3391                           ; BSR set to: 57
  3392  00FE76  4F                 	db	79	;'O'
  3393  00FE77  75                 	db	117	;'u'
  3394  00FE78  74                 	db	116	;'t'
  3395  00FE79  20                 	db	32
  3396  00FE7A  4F                 	db	79	;'O'
  3397  00FE7B  66                 	db	102	;'f'
  3398  00FE7C  20                 	db	32
  3399  00FE7D  52                 	db	82	;'R'
  3400  00FE7E  61                 	db	97	;'a'
  3401  00FE7F  6E                 	db	110	;'n'
  3402  00FE80  67                 	db	103	;'g'
  3403  00FE81  65                 	db	101	;'e'
  3404  00FE82  20                 	db	32
  3405  00FE83  20                 	db	32
  3406  00FE84  20                 	db	32
  3407  00FE85  20                 	db	32
  3408  00FE86  20                 	db	32
  3409  00FE87  20                 	db	32
  3410  00FE88  20                 	db	32
  3411  00FE89  20                 	db	32
  3412  00FE8A  00                 	db	0
  3413  00FE8B                     STR_55:
  3414                           
  3415                           ; BSR set to: 57
  3416  00FE8B  5A                 	db	90	;'Z'
  3417  00FE8C  65                 	db	101	;'e'
  3418  00FE8D  72                 	db	114	;'r'
  3419  00FE8E  6F                 	db	111	;'o'
  3420  00FE8F  20                 	db	32
  3421  00FE90  43                 	db	67	;'C'
  3422  00FE91  61                 	db	97	;'a'
  3423  00FE92  6C                 	db	108	;'l'
  3424  00FE93  20                 	db	32
  3425  00FE94  53                 	db	83	;'S'
  3426  00FE95  65                 	db	101	;'e'
  3427  00FE96  74                 	db	116	;'t'
  3428  00FE97  20                 	db	32
  3429  00FE98  20                 	db	32
  3430  00FE99  20                 	db	32
  3431  00FE9A  20                 	db	32
  3432  00FE9B  20                 	db	32
  3433  00FE9C  20                 	db	32
  3434  00FE9D  20                 	db	32
  3435  00FE9E  20                 	db	32
  3436  00FE9F  00                 	db	0
  3437  00FEA0                     STR_1:
  3438                           
  3439                           ; BSR set to: 57
  3440  00FEA0  20                 	db	32
  3441  00FEA1  4D                 	db	77	;'M'
  3442  00FEA2  42                 	db	66	;'B'
  3443  00FEA3  4D                 	db	77	;'M'
  3444  00FEA4  43                 	db	67	;'C'
  3445  00FEA5  20                 	db	32
  3446  00FEA6  53                 	db	83	;'S'
  3447  00FEA7  4F                 	db	79	;'O'
  3448  00FEA8  4C                 	db	76	;'L'
  3449  00FEA9  41                 	db	65	;'A'
  3450  00FEAA  52                 	db	82	;'R'
  3451  00FEAB  4D                 	db	77	;'M'
  3452  00FEAC  4F                 	db	79	;'O'
  3453  00FEAD  4E                 	db	78	;'N'
  3454  00FEAE  20                 	db	32
  3455  00FEAF  20                 	db	32
  3456  00FEB0  20                 	db	32
  3457  00FEB1  20                 	db	32
  3458  00FEB2  20                 	db	32
  3459  00FEB3  20                 	db	32
  3460  00FEB4  00                 	db	0
  3461  00FEB5                     STR_45:
  3462                           
  3463                           ; BSR set to: 57
  3464  00FEB5  50                 	db	80	;'P'
  3465  00FEB6  56                 	db	86	;'V'
  3466  00FEB7  20                 	db	32
  3467  00FEB8  61                 	db	97	;'a'
  3468  00FEB9  6E                 	db	110	;'n'
  3469  00FEBA  64                 	db	100	;'d'
  3470  00FEBB  20                 	db	32
  3471  00FEBC  42                 	db	66	;'B'
  3472  00FEBD  41                 	db	65	;'A'
  3473  00FEBE  54                 	db	84	;'T'
  3474  00FEBF  54                 	db	84	;'T'
  3475  00FEC0  45                 	db	69	;'E'
  3476  00FEC1  52                 	db	82	;'R'
  3477  00FEC2  59                 	db	89	;'Y'
  3478  00FEC3  20                 	db	32
  3479  00FEC4  20                 	db	32
  3480  00FEC5  20                 	db	32
  3481  00FEC6  20                 	db	32
  3482  00FEC7  20                 	db	32
  3483  00FEC8  20                 	db	32
  3484  00FEC9  00                 	db	0
  3485  00FECA                     STR_17:
  3486                           
  3487                           ; BSR set to: 57
  3488  00FECA  43                 	db	67	;'C'
  3489  00FECB  68                 	db	104	;'h'
  3490  00FECC  65                 	db	101	;'e'
  3491  00FECD  63                 	db	99	;'c'
  3492  00FECE  6B                 	db	107	;'k'
  3493  00FECF  69                 	db	105	;'i'
  3494  00FED0  6E                 	db	110	;'n'
  3495  00FED1  67                 	db	103	;'g'
  3496  00FED2  20                 	db	32
  3497  00FED3  25                 	db	37
  3498  00FED4  63                 	db	99	;'c'
  3499  00FED5  20                 	db	32
  3500  00FED6  25                 	db	37
  3501  00FED7  63                 	db	99	;'c'
  3502  00FED8  20                 	db	32
  3503  00FED9  20                 	db	32
  3504  00FEDA  20                 	db	32
  3505  00FEDB  20                 	db	32
  3506  00FEDC  20                 	db	32
  3507  00FEDD  20                 	db	32
  3508  00FEDE  00                 	db	0
  3509  00FEDF                     STR_50:
  3510                           
  3511                           ; BSR set to: 57
  3512  00FEDF  53                 	db	83	;'S'
  3513  00FEE0  65                 	db	101	;'e'
  3514  00FEE1  6E                 	db	110	;'n'
  3515  00FEE2  73                 	db	115	;'s'
  3516  00FEE3  6F                 	db	111	;'o'
  3517  00FEE4  72                 	db	114	;'r'
  3518  00FEE5  20                 	db	32
  3519  00FEE6  52                 	db	82	;'R'
  3520  00FEE7  65                 	db	101	;'e'
  3521  00FEE8  61                 	db	97	;'a'
  3522  00FEE9  64                 	db	100	;'d'
  3523  00FEEA  69                 	db	105	;'i'
  3524  00FEEB  6E                 	db	110	;'n'
  3525  00FEEC  67                 	db	103	;'g'
  3526  00FEED  73                 	db	115	;'s'
  3527  00FEEE  20                 	db	32
  3528  00FEEF  20                 	db	32
  3529  00FEF0  20                 	db	32
  3530  00FEF1  20                 	db	32
  3531  00FEF2  20                 	db	32
  3532  00FEF3  00                 	db	0
  3533  00FEF4                     STR_8:
  3534                           
  3535                           ; BSR set to: 57
  3536  00FEF4  52                 	db	82	;'R'
  3537  00FEF5  65                 	db	101	;'e'
  3538  00FEF6  61                 	db	97	;'a'
  3539  00FEF7  64                 	db	100	;'d'
  3540  00FEF8  20                 	db	32
  3541  00FEF9  45                 	db	69	;'E'
  3542  00FEFA  45                 	db	69	;'E'
  3543  00FEFB  50                 	db	80	;'P'
  3544  00FEFC  52                 	db	82	;'R'
  3545  00FEFD  4F                 	db	79	;'O'
  3546  00FEFE  4D                 	db	77	;'M'
  3547  00FEFF  20                 	db	32
  3548  00FF00  44                 	db	68	;'D'
  3549  00FF01  41                 	db	65	;'A'
  3550  00FF02  54                 	db	84	;'T'
  3551  00FF03  41                 	db	65	;'A'
  3552  00FF04  20                 	db	32
  3553  00FF05  20                 	db	32
  3554  00FF06  20                 	db	32
  3555  00FF07  20                 	db	32
  3556  00FF08  00                 	db	0
  3557  00FF09                     STR_16:
  3558                           
  3559                           ; BSR set to: 57
  3560  00FF09  43                 	db	67	;'C'
  3561  00FF0A  68                 	db	104	;'h'
  3562  00FF0B  65                 	db	101	;'e'
  3563  00FF0C  63                 	db	99	;'c'
  3564  00FF0D  6B                 	db	107	;'k'
  3565  00FF0E  20                 	db	32
  3566  00FF0F  33                 	db	51	;'3'
  3567  00FF10  30                 	db	48	;'0'
  3568  00FF11  20                 	db	32
  3569  00FF12  73                 	db	115	;'s'
  3570  00FF13  65                 	db	101	;'e'
  3571  00FF14  63                 	db	99	;'c'
  3572  00FF15  6F                 	db	111	;'o'
  3573  00FF16  6E                 	db	110	;'n'
  3574  00FF17  64                 	db	100	;'d'
  3575  00FF18  73                 	db	115	;'s'
  3576  00FF19  20                 	db	32
  3577  00FF1A  20                 	db	32
  3578  00FF1B  20                 	db	32
  3579  00FF1C  20                 	db	32
  3580  00FF1D  00                 	db	0
  3581  00FF1E                     STR_52:
  3582                           
  3583                           ; BSR set to: 57
  3584  00FF1E  53                 	db	83	;'S'
  3585  00FF1F  74                 	db	116	;'t'
  3586  00FF20  61                 	db	97	;'a'
  3587  00FF21  62                 	db	98	;'b'
  3588  00FF22  69                 	db	105	;'i'
  3589  00FF23  6C                 	db	108	;'l'
  3590  00FF24  69                 	db	105	;'i'
  3591  00FF25  74                 	db	116	;'t'
  3592  00FF26  79                 	db	121	;'y'
  3593  00FF27  20                 	db	32
  3594  00FF28  63                 	db	99	;'c'
  3595  00FF29  6C                 	db	108	;'l'
  3596  00FF2A  6F                 	db	111	;'o'
  3597  00FF2B  63                 	db	99	;'c'
  3598  00FF2C  6B                 	db	107	;'k'
  3599  00FF2D  20                 	db	32
  3600  00FF2E  25                 	db	37
  3601  00FF2F  64                 	db	100	;'d'
  3602  00FF30  20                 	db	32
  3603  00FF31  20                 	db	32
  3604  00FF32  00                 	db	0
  3605  00FF33                     STR_9:
  3606                           
  3607                           ; BSR set to: 57
  3608  00FF33  49                 	db	73	;'I'
  3609  00FF34  6E                 	db	110	;'n'
  3610  00FF35  76                 	db	118	;'v'
  3611  00FF36  61                 	db	97	;'a'
  3612  00FF37  6C                 	db	108	;'l'
  3613  00FF38  69                 	db	105	;'i'
  3614  00FF39  64                 	db	100	;'d'
  3615  00FF3A  20                 	db	32
  3616  00FF3B  45                 	db	69	;'E'
  3617  00FF3C  45                 	db	69	;'E'
  3618  00FF3D  50                 	db	80	;'P'
  3619  00FF3E  52                 	db	82	;'R'
  3620  00FF3F  4F                 	db	79	;'O'
  3621  00FF40  4D                 	db	77	;'M'
  3622  00FF41  20                 	db	32
  3623  00FF42  44                 	db	68	;'D'
  3624  00FF43  41                 	db	65	;'A'
  3625  00FF44  54                 	db	84	;'T'
  3626  00FF45  41                 	db	65	;'A'
  3627  00FF46  20                 	db	32
  3628  00FF47  00                 	db	0
  3629  00FF48                     STR_48:
  3630                           
  3631                           ; BSR set to: 57
  3632  00FF48  52                 	db	82	;'R'
  3633  00FF49  65                 	db	101	;'e'
  3634  00FF4A  6C                 	db	108	;'l'
  3635  00FF4B  65                 	db	101	;'e'
  3636  00FF4C  61                 	db	97	;'a'
  3637  00FF4D  73                 	db	115	;'s'
  3638  00FF4E  65                 	db	101	;'e'
  3639  00FF4F  20                 	db	32
  3640  00FF50  62                 	db	98	;'b'
  3641  00FF51  75                 	db	117	;'u'
  3642  00FF52  74                 	db	116	;'t'
  3643  00FF53  74                 	db	116	;'t'
  3644  00FF54  6F                 	db	111	;'o'
  3645  00FF55  6E                 	db	110	;'n'
  3646  00FF56  20                 	db	32
  3647  00FF57  25                 	db	37
  3648  00FF58  63                 	db	99	;'c'
  3649  00FF59  20                 	db	32
  3650  00FF5A  20                 	db	32
  3651  00FF5B  00                 	db	0
  3652  00FF5C                     STR_63:
  3653                           
  3654                           ; BSR set to: 57
  3655  00FF5C  48                 	db	72	;'H'
  3656  00FF5D  45                 	db	69	;'E'
  3657  00FF5E  4C                 	db	76	;'L'
  3658  00FF5F  50                 	db	80	;'P'
  3659  00FF60  20                 	db	32
  3660  00FF61  25                 	db	37
  3661  00FF62  73                 	db	115	;'s'
  3662  00FF63  20                 	db	32
  3663  00FF64  20                 	db	32
  3664  00FF65  20                 	db	32
  3665  00FF66  20                 	db	32
  3666  00FF67  20                 	db	32
  3667  00FF68  20                 	db	32
  3668  00FF69  20                 	db	32
  3669  00FF6A  20                 	db	32
  3670  00FF6B  20                 	db	32
  3671  00FF6C  20                 	db	32
  3672  00FF6D  20                 	db	32
  3673  00FF6E  00                 	db	0
  3674  00FF6F                     
  3675                           ; BSR set to: 57
  3676  00FF6F  44                 	db	68	;'D'
  3677  00FF70  49                 	db	73	;'I'
  3678  00FF71  53                 	db	83	;'S'
  3679  00FF72  50                 	db	80	;'P'
  3680  00FF73  4C                 	db	76	;'L'
  3681  00FF74  41                 	db	65	;'A'
  3682  00FF75  59                 	db	89	;'Y'
  3683  00FF76  20                 	db	32
  3684  00FF77  25                 	db	37
  3685  00FF78  73                 	db	115	;'s'
  3686  00FF79  20                 	db	32
  3687  00FF7A  20                 	db	32
  3688  00FF7B  20                 	db	32
  3689  00FF7C  20                 	db	32
  3690  00FF7D  20                 	db	32
  3691  00FF7E  20                 	db	32
  3692  00FF7F  20                 	db	32
  3693  00FF80  20                 	db	32
  3694  00FF81  00                 	db	0
  3695  00FF82                     
  3696                           ; BSR set to: 57
  3697  00FF82  25                 	db	37
  3698  00FF83  64                 	db	100	;'d'
  3699  00FF84  20                 	db	32
  3700  00FF85  25                 	db	37
  3701  00FF86  32                 	db	50	;'2'
  3702  00FF87  2E                 	db	46
  3703  00FF88  34                 	db	52	;'4'
  3704  00FF89  66                 	db	102	;'f'
  3705  00FF8A  2C                 	db	44
  3706  00FF8B  20                 	db	32
  3707  00FF8C  25                 	db	37
  3708  00FF8D  64                 	db	100	;'d'
  3709  00FF8E  20                 	db	32
  3710  00FF8F  20                 	db	32
  3711  00FF90  20                 	db	32
  3712  00FF91  23                 	db	35
  3713  00FF92  00                 	db	0
  3714  00FF93                     STR_21:
  3715                           
  3716                           ; BSR set to: 57
  3717  00FF93  25                 	db	37
  3718  00FF94  64                 	db	100	;'d'
  3719  00FF95  20                 	db	32
  3720  00FF96  25                 	db	37
  3721  00FF97  32                 	db	50	;'2'
  3722  00FF98  2E                 	db	46
  3723  00FF99  34                 	db	52	;'4'
  3724  00FF9A  66                 	db	102	;'f'
  3725  00FF9B  20                 	db	32
  3726  00FF9C  20                 	db	32
  3727  00FF9D  20                 	db	32
  3728  00FF9E  25                 	db	37
  3729  00FF9F  64                 	db	100	;'d'
  3730  00FFA0  20                 	db	32
  3731  00FFA1  20                 	db	32
  3732  00FFA2  00                 	db	0
  3733  00FFA3                     STR_67:
  3734                           
  3735                           ; BSR set to: 57
  3736  00FFA3  76                 	db	118	;'v'
  3737  00FFA4  74                 	db	116	;'t'
  3738  00FFA5  65                 	db	101	;'e'
  3739  00FFA6  72                 	db	114	;'r'
  3740  00FFA7  6D                 	db	109	;'m'
  3741  00FFA8  20                 	db	32
  3742  00FFA9  25                 	db	37
  3743  00FFAA  78                 	db	120	;'x'
  3744  00FFAB  3A                 	db	58	;':'
  3745  00FFAC  25                 	db	37
  3746  00FFAD  78                 	db	120	;'x'
  3747  00FFAE  20                 	db	32
  3748  00FFAF  20                 	db	32
  3749  00FFB0  20                 	db	32
  3750  00FFB1  00                 	db	0
  3751  00FFB2                     STR_61:
  3752                           
  3753                           ; BSR set to: 57
  3754  00FFB2  46                 	db	70	;'F'
  3755  00FFB3  65                 	db	101	;'e'
  3756  00FFB4  62                 	db	98	;'b'
  3757  00FFB5  20                 	db	32
  3758  00FFB6  20                 	db	32
  3759  00FFB7  37                 	db	55	;'7'
  3760  00FFB8  20                 	db	32
  3761  00FFB9  32                 	db	50	;'2'
  3762  00FFBA  30                 	db	48	;'0'
  3763  00FFBB  32                 	db	50	;'2'
  3764  00FFBC  30                 	db	48	;'0'
  3765  00FFBD  00                 	db	0
  3766  00FFBE                     STR_65:
  3767                           
  3768                           ; BSR set to: 57
  3769  00FFBE  25                 	db	37
  3770  00FFBF  73                 	db	115	;'s'
  3771  00FFC0  20                 	db	32
  3772  00FFC1  20                 	db	32
  3773  00FFC2  20                 	db	32
  3774  00FFC3  20                 	db	32
  3775  00FFC4  20                 	db	32
  3776  00FFC5  20                 	db	32
  3777  00FFC6  20                 	db	32
  3778  00FFC7  00                 	db	0
  3779  00FFC8                     STR_62:
  3780                           
  3781                           ; BSR set to: 57
  3782  00FFC8  31                 	db	49	;'1'
  3783  00FFC9  31                 	db	49	;'1'
  3784  00FFCA  3A                 	db	58	;':'
  3785  00FFCB  31                 	db	49	;'1'
  3786  00FFCC  37                 	db	55	;'7'
  3787  00FFCD  3A                 	db	58	;':'
  3788  00FFCE  32                 	db	50	;'2'
  3789  00FFCF  36                 	db	54	;'6'
  3790  00FFD0  00                 	db	0
  3791  00FFD1                     STR_3:
  3792                           
  3793                           ; BSR set to: 57
  3794  00FFD1  31                 	db	49	;'1'
  3795  00FFD2  2E                 	db	46
  3796  00FFD3  31                 	db	49	;'1'
  3797  00FFD4  38                 	db	56	;'8'
  3798  00FFD5  00                 	db	0
  3799  00FFD6                     STR_81:
  3800                           
  3801                           ; BSR set to: 57
  3802  00FFD6  49                 	db	73	;'I'
  3803  00FFD7  4E                 	db	78	;'N'
  3804  00FFD8  46                 	db	70	;'F'
  3805  00FFD9  00                 	db	0
  3806  00FFDA                     STR_85:
  3807                           
  3808                           ; BSR set to: 57
  3809  00FFDA  4E                 	db	78	;'N'
  3810  00FFDB  41                 	db	65	;'A'
  3811  00FFDC  4E                 	db	78	;'N'
  3812  00FFDD  00                 	db	0
  3813  00FFDE                     STR_82:
  3814                           
  3815                           ; BSR set to: 57
  3816  00FFDE  69                 	db	105	;'i'
  3817  00FFDF  6E                 	db	110	;'n'
  3818  00FFE0  66                 	db	102	;'f'
  3819  00FFE1  00                 	db	0
  3820  00FFE2                     STR_86:
  3821                           
  3822                           ; BSR set to: 57
  3823  00FFE2  6E                 	db	110	;'n'
  3824  00FFE3  61                 	db	97	;'a'
  3825  00FFE4  6E                 	db	110	;'n'
  3826  00FFE5  00                 	db	0
  3827  00FFE6                     STR_112:
  3828                           
  3829                           ; BSR set to: 57
  3830  00FFE6  6C                 	db	108	;'l'
  3831  00FFE7  58                 	db	88	;'X'
  3832  00FFE8  00                 	db	0
  3833  00FFE9                     STR_89:
  3834                           
  3835                           ; BSR set to: 57
  3836  00FFE9  6C                 	db	108	;'l'
  3837  00FFEA  64                 	db	100	;'d'
  3838  00FFEB  00                 	db	0
  3839  00FFEC                     STR_98:
  3840                           
  3841                           ; BSR set to: 57
  3842  00FFEC  6C                 	db	108	;'l'
  3843  00FFED  66                 	db	102	;'f'
  3844  00FFEE  00                 	db	0
  3845  00FFEF                     STR_93:
  3846                           
  3847                           ; BSR set to: 57
  3848  00FFEF  6C                 	db	108	;'l'
  3849  00FFF0  69                 	db	105	;'i'
  3850  00FFF1  00                 	db	0
  3851  00FFF2                     STR_103:
  3852                           
  3853                           ; BSR set to: 57
  3854  00FFF2  6C                 	db	108	;'l'
  3855  00FFF3  75                 	db	117	;'u'
  3856  00FFF4  00                 	db	0
  3857  00FFF5                     STR_108:
  3858                           
  3859                           ; BSR set to: 57
  3860  00FFF5  6C                 	db	108	;'l'
  3861  00FFF6  78                 	db	120	;'x'
  3862  00FFF7  00                 	db	0
  3863  00FFF8                     STR_60:
  3864                           
  3865                           ; BSR set to: 57
  3866  00FFF8  25                 	db	37
  3867  00FFF9  63                 	db	99	;'c'
  3868  00FFFA  00                 	db	0
  3869  00FFFB                     STR_59:
  3870                           
  3871                           ; BSR set to: 57
  3872  00FFFB  25                 	db	37
  3873  00FFFC  73                 	db	115	;'s'
  3874  00FFFD  00                 	db	0
  3875  0000                     
  3876                           ; #config settings
  3877  00FFFE  00                 	db	0	; dummy byte at the end
  3878  0000                     
  3879                           	psect	cinit
  3880  01A8BA                     __pcinit:
  3881                           	opt callstack 0
  3882  01A8BA                     start_initialization:
  3883                           	opt callstack 0
  3884  01A8BA                     __initialization:
  3885                           	opt callstack 0
  3886                           
  3887                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3888                           ; load TBLPTR registers with __pidataBIGRAM
  3889  01A8BA  0E86               	movlw	low __pidataBIGRAM
  3890  01A8BC  6EF6               	movwf	tblptrl,c
  3891  01A8BE  0E6F               	movlw	high __pidataBIGRAM
  3892  01A8C0  6EF7               	movwf	tblptrh,c
  3893  01A8C2  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3894  01A8C4  6EF8               	movwf	tblptru,c
  3895  01A8C6  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3896  01A8CA  EE20 F32B          	lfsr	2,811
  3897  01A8CE                     copy_data0:
  3898  01A8CE  0009               	tblrd		*+
  3899  01A8D0  006F FFD7 FFEE     	movff	tablat,postinc0
  3900  01A8D6  50DD               	movf	postdec2,w,c
  3901  01A8D8  50D9               	movf	fsr2l,w,c
  3902  01A8DA  E1F9               	bnz	copy_data0
  3903  01A8DC  50DA               	movf	fsr2h,w,c
  3904  01A8DE  E1F7               	bnz	copy_data0
  3905                           
  3906                           ; Initialize objects allocated to BANK1 (208 bytes)
  3907                           ; load TBLPTR registers with __pidataBANK1
  3908  01A8E0  0E5A               	movlw	low __pidataBANK1
  3909  01A8E2  6EF6               	movwf	tblptrl,c
  3910  01A8E4  0EAB               	movlw	high __pidataBANK1
  3911  01A8E6  6EF7               	movwf	tblptrh,c
  3912  01A8E8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3913  01A8EA  6EF8               	movwf	tblptru,c
  3914  01A8EC  EE00  F100         	lfsr	0,__pdataBANK1
  3915  01A8F0  EE20 F0D0          	lfsr	2,208
  3916  01A8F4                     copy_data1:
  3917  01A8F4  0009               	tblrd		*+
  3918  01A8F6  006F FFD7 FFEE     	movff	tablat,postinc0
  3919  01A8FC  50DD               	movf	postdec2,w,c
  3920  01A8FE  50D9               	movf	fsr2l,w,c
  3921  01A900  E1F9               	bnz	copy_data1
  3922                           
  3923                           ; Initialize objects allocated to BANK0 (58 bytes)
  3924                           ; load TBLPTR registers with __pidataBANK0
  3925  01A902  0E7A               	movlw	low __pidataBANK0
  3926  01A904  6EF6               	movwf	tblptrl,c
  3927  01A906  0EC4               	movlw	high __pidataBANK0
  3928  01A908  6EF7               	movwf	tblptrh,c
  3929  01A90A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3930  01A90C  6EF8               	movwf	tblptru,c
  3931  01A90E  EE00  F0AB         	lfsr	0,__pdataBANK0
  3932  01A912  EE20 F03A          	lfsr	2,58
  3933  01A916                     copy_data2:
  3934  01A916  0009               	tblrd		*+
  3935  01A918  006F FFD7 FFEE     	movff	tablat,postinc0
  3936  01A91E  50DD               	movf	postdec2,w,c
  3937  01A920  50D9               	movf	fsr2l,w,c
  3938  01A922  E1F9               	bnz	copy_data2
  3939                           
  3940                           ; Clear objects allocated to BIGRAM (482 bytes)
  3941  01A924  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3942  01A928  EE20 F1E2          	lfsr	2,482
  3943  01A92C                     clear_0:
  3944  01A92C  6AEE               	clrf	postinc0,c
  3945  01A92E  50DD               	movf	postdec2,w,c
  3946  01A930  50D9               	movf	fsr2l,w,c
  3947  01A932  E1FC               	bnz	clear_0
  3948  01A934  50DA               	movf	fsr2h,w,c
  3949  01A936  E1FA               	bnz	clear_0
  3950                           
  3951                           ; Clear objects allocated to BANK4 (255 bytes)
  3952  01A938  EE01  F000         	lfsr	0,__pbssBANK4
  3953  01A93C  EE20 F0FF          	lfsr	2,255
  3954  01A940                     clear_1:
  3955  01A940  6AEE               	clrf	postinc0,c
  3956  01A942  50DD               	movf	postdec2,w,c
  3957  01A944  50D9               	movf	fsr2l,w,c
  3958  01A946  E1FC               	bnz	clear_1
  3959  01A948  50DA               	movf	fsr2h,w,c
  3960  01A94A  E1FA               	bnz	clear_1
  3961                           
  3962                           ; Clear objects allocated to BANK3 (256 bytes)
  3963  01A94C  EE00  F300         	lfsr	0,__pbssBANK3
  3964  01A950  EE20 F100          	lfsr	2,256
  3965  01A954                     clear_2:
  3966  01A954  6AEE               	clrf	postinc0,c
  3967  01A956  50DD               	movf	postdec2,w,c
  3968  01A958  50D9               	movf	fsr2l,w,c
  3969  01A95A  E1FC               	bnz	clear_2
  3970  01A95C  50DA               	movf	fsr2h,w,c
  3971  01A95E  E1FA               	bnz	clear_2
  3972                           
  3973                           ; Clear objects allocated to BANK2 (239 bytes)
  3974  01A960  EE00  F200         	lfsr	0,__pbssBANK2
  3975  01A964  0EEF               	movlw	239
  3976  01A966                     clear_3:
  3977  01A966  6AEE               	clrf	postinc0,c
  3978  01A968  06E8               	decf	wreg,f,c
  3979  01A96A  E1FD               	bnz	clear_3
  3980                           
  3981                           ; Clear objects allocated to BANK1 (42 bytes)
  3982  01A96C  EE00  F1D0         	lfsr	0,__pbssBANK1
  3983  01A970  0E2A               	movlw	42
  3984  01A972                     clear_4:
  3985  01A972  6AEE               	clrf	postinc0,c
  3986  01A974  06E8               	decf	wreg,f,c
  3987  01A976  E1FD               	bnz	clear_4
  3988                           
  3989                           ; Clear objects allocated to BANK0 (75 bytes)
  3990  01A978  EE00  F060         	lfsr	0,__pbssBANK0
  3991  01A97C  0E4B               	movlw	75
  3992  01A97E                     clear_5:
  3993  01A97E  6AEE               	clrf	postinc0,c
  3994  01A980  06E8               	decf	wreg,f,c
  3995  01A982  E1FD               	bnz	clear_5
  3996                           
  3997                           ; Clear objects allocated to COMRAM (14 bytes)
  3998  01A984  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3999  01A988  0E0E               	movlw	14
  4000  01A98A                     clear_6:
  4001  01A98A  6AEE               	clrf	postinc0,c
  4002  01A98C  06E8               	decf	wreg,f,c
  4003  01A98E  E1FD               	bnz	clear_6
  4004                           
  4005                           ;
  4006                           ; Setup IVTBASE
  4007                           ;
  4008  01A990  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4009  01A992  6ED5               	movwf	213,c
  4010  01A994  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4011  01A996  6ED6               	movwf	214,c
  4012  01A998  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4013  01A99A  6ED7               	movwf	215,c
  4014  01A99C                     end_of_initialization:
  4015                           	opt callstack 0
  4016  01A99C                     __end_of__initialization:
  4017                           	opt callstack 0
  4018  01A99C  0100               	movlb	0
  4019  01A99E  EF00  F080         	goto	_main	;jump to C main() function
  4020                           
  4021                           	psect	bssCOMRAM
  4022  00003A                     __pbssCOMRAM:
  4023                           	opt callstack 0
  4024  00003A                     _width:
  4025                           	opt callstack 0
  4026  00003A                     	ds	2
  4027  00003C                     _prec:
  4028                           	opt callstack 0
  4029  00003C                     	ds	2
  4030  00003E                     _flags:
  4031                           	opt callstack 0
  4032  00003E                     	ds	2
  4033  000040                     calc_bsoc@log_update_wait:
  4034                           	opt callstack 0
  4035  000040                     	ds	1
  4036  000041                     check_day_time@day_delay:
  4037                           	opt callstack 0
  4038  000041                     	ds	1
  4039  000042                     dac_spi_control@S0:
  4040                           	opt callstack 0
  4041  000042                     	ds	1
  4042  000043                     dac_spi_control@init:
  4043                           	opt callstack 0
  4044  000043                     	ds	1
  4045  000044                     _uart2RxHead:
  4046                           	opt callstack 0
  4047  000044                     	ds	1
  4048  000045                     _uart2TxBufferRemaining:
  4049                           	opt callstack 0
  4050  000045                     	ds	1
  4051  000046                     _uart2TxTail:
  4052                           	opt callstack 0
  4053  000046                     	ds	1
  4054  000047                     _uart1RxHead:
  4055                           	opt callstack 0
  4056  000047                     	ds	1
  4057                           
  4058                           	psect	bssBANK0
  4059  000060                     __pbssBANK0:
  4060                           	opt callstack 0
  4061  000060                     ___fpclassifyf@F463:
  4062                           	opt callstack 0
  4063  000060                     	ds	4
  4064  000064                     calc_ror_data@bcror:
  4065                           	opt callstack 0
  4066  000064                     	ds	4
  4067  000068                     calc_ror_data@bvror:
  4068                           	opt callstack 0
  4069  000068                     	ds	4
  4070  00006C                     calc_model_data@bcror:
  4071                           	opt callstack 0
  4072  00006C                     	ds	4
  4073  000070                     calc_model_data@bvror:
  4074                           	opt callstack 0
  4075  000070                     	ds	4
  4076  000074                     wdtdelay@dcount:
  4077                           	opt callstack 0
  4078  000074                     	ds	4
  4079  000078                     _TMR3_InterruptHandler:
  4080                           	opt callstack 0
  4081  000078                     	ds	3
  4082  00007B                     _TMR5_InterruptHandler:
  4083                           	opt callstack 0
  4084  00007B                     	ds	3
  4085  00007E                     _TMR6_InterruptHandler:
  4086                           	opt callstack 0
  4087  00007E                     	ds	3
  4088  000081                     _ADCC_ADTI_InterruptHandler:
  4089                           	opt callstack 0
  4090  000081                     	ds	3
  4091  000084                     _ADCC_ADI_InterruptHandler:
  4092                           	opt callstack 0
  4093  000084                     	ds	3
  4094  000087                     _UART1_RxInterruptHandler:
  4095                           	opt callstack 0
  4096  000087                     	ds	3
  4097  00008A                     _UART2_TxInterruptHandler:
  4098                           	opt callstack 0
  4099  00008A                     	ds	3
  4100  00008D                     _UART2_RxInterruptHandler:
  4101                           	opt callstack 0
  4102  00008D                     	ds	3
  4103  000090                     _INT1_InterruptHandler:
  4104                           	opt callstack 0
  4105  000090                     	ds	3
  4106  000093                     _INT0_InterruptHandler:
  4107                           	opt callstack 0
  4108  000093                     	ds	3
  4109  000096                     _nout:
  4110                           	opt callstack 0
  4111  000096                     	ds	2
  4112  000098                     TMR3_ISR@CountCallBack:
  4113                           	opt callstack 0
  4114  000098                     	ds	2
  4115  00009A                     _timer3ReloadVal:
  4116                           	opt callstack 0
  4117  00009A                     	ds	2
  4118  00009C                     TMR5_ISR@CountCallBack:
  4119                           	opt callstack 0
  4120  00009C                     	ds	2
  4121  00009E                     _timer5ReloadVal:
  4122                           	opt callstack 0
  4123  00009E                     	ds	2
  4124  0000A0                     esr_check@esr_state:
  4125                           	opt callstack 0
  4126  0000A0                     	ds	1
  4127  0000A1                     dac_spi_control@SB:
  4128                           	opt callstack 0
  4129  0000A1                     	ds	1
  4130  0000A2                     dac_spi_control@SC:
  4131                           	opt callstack 0
  4132  0000A2                     	ds	1
  4133  0000A3                     dac_spi_control@S2:
  4134                           	opt callstack 0
  4135  0000A3                     	ds	1
  4136  0000A4                     dac_spi_control@S1:
  4137                           	opt callstack 0
  4138  0000A4                     	ds	1
  4139  0000A5                     _mode_sw:
  4140                           	opt callstack 0
  4141  0000A5                     	ds	1
  4142  0000A6                     _uart2RxCount:
  4143                           	opt callstack 0
  4144  0000A6                     	ds	1
  4145  0000A7                     _uart2RxTail:
  4146                           	opt callstack 0
  4147  0000A7                     	ds	1
  4148  0000A8                     _uart2TxHead:
  4149                           	opt callstack 0
  4150  0000A8                     	ds	1
  4151  0000A9                     _uart1RxCount:
  4152                           	opt callstack 0
  4153  0000A9                     	ds	1
  4154  0000AA                     _uart1RxTail:
  4155                           	opt callstack 0
  4156  0000AA                     	ds	1
  4157                           
  4158                           	psect	dataBANK0
  4159  0000AB                     __pdataBANK0:
  4160                           	opt callstack 0
  4161  0000AB                     _R:
  4162                           	opt callstack 0
  4163  0000AB                     	ds	58
  4164                           
  4165                           	psect	bssBANK1
  4166  0001D0                     __pbssBANK1:
  4167                           	opt callstack 0
  4168  0001D0                     _spi_link:
  4169                           	opt callstack 0
  4170  0001D0                     	ds	12
  4171  0001DC                     _uart1RxBuffer:
  4172                           	opt callstack 0
  4173  0001DC                     	ds	8
  4174  0001E4                     spinners@s:
  4175                           	opt callstack 0
  4176  0001E4                     	ds	6
  4177  0001EA                     floorf@F524:
  4178                           	opt callstack 0
  4179  0001EA                     	ds	4
  4180  0001EE                     fabsf@F463:
  4181                           	opt callstack 0
  4182  0001EE                     	ds	4
  4183  0001F2                     _utctime:
  4184                           	opt callstack 0
  4185  0001F2                     	ds	4
  4186  0001F6                     _P:
  4187                           	opt callstack 0
  4188  0001F6                     	ds	4
  4189                           
  4190                           	psect	dataBANK1
  4191  000100                     __pdataBANK1:
  4192                           	opt callstack 0
  4193  000100                     stoa@F1166:
  4194                           	opt callstack 0
  4195  000100                     	ds	7
  4196  000107                     _V:
  4197                           	opt callstack 0
  4198  000107                     	ds	192
  4199  0001C7                     _H:
  4200                           	opt callstack 0
  4201  0001C7                     	ds	9
  4202                           
  4203                           	psect	bssBANK2
  4204  000200                     __pbssBANK2:
  4205                           	opt callstack 0
  4206  000200                     lp_filter@smooth:
  4207                           	opt callstack 0
  4208  000200                     	ds	84
  4209  000254                     _S:
  4210                           	opt callstack 0
  4211  000254                     	ds	41
  4212  00027D                     _tickCount:
  4213                           	opt callstack 0
  4214  00027D                     	ds	26
  4215  000297                     _dbuf:
  4216                           	opt callstack 0
  4217  000297                     	ds	80
  4218  0002E7                     _seed:
  4219                           	opt callstack 0
  4220  0002E7                     	ds	8
  4221                           
  4222                           	psect	bssBANK3
  4223  000300                     __pbssBANK3:
  4224                           	opt callstack 0
  4225  000300                     _uart2TxBuffer:
  4226                           	opt callstack 0
  4227  000300                     	ds	64
  4228  000340                     _ring_buf2:
  4229                           	opt callstack 0
  4230  000340                     	ds	67
  4231  000383                     _ring_buf1:
  4232                           	opt callstack 0
  4233  000383                     	ds	67
  4234  0003C6                     _r_cal:
  4235                           	opt callstack 0
  4236  0003C6                     	ds	58
  4237                           
  4238                           	psect	bssBANK4
  4239  000400                     __pbssBANK4:
  4240                           	opt callstack 0
  4241  000400                     _uart2RxBuffer:
  4242                           	opt callstack 0
  4243  000400                     	ds	255
  4244                           
  4245                           	psect	bssBIGRAM
  4246  00082A                     __pbssBIGRAM:
  4247                           	opt callstack 0
  4248  00082A                     _D:
  4249                           	opt callstack 0
  4250  00082A                     	ds	482
  4251                           
  4252                           	psect	dataBIGRAM
  4253  0004FF                     __pdataBIGRAM:
  4254                           	opt callstack 0
  4255  0004FF                     _port_data:
  4256                           	opt callstack 0
  4257  0004FF                     	ds	512
  4258  0006FF                     _C:
  4259                           	opt callstack 0
  4260  0006FF                     	ds	299
  4261                           
  4262                           	psect	cstackBANK0
  4263  0000E5                     __pcstackBANK0:
  4264                           	opt callstack 0
  4265  0000E5                     ??_TMR3_ISR:
  4266                           
  4267                           ; 1 bytes @ 0x0
  4268  0000E5                     	ds	25
  4269                           
  4270                           	psect	cstackCOMRAM
  4271  000021                     __pcstackCOMRAM:
  4272                           	opt callstack 0
  4273  000021                     ??_ADCC_ThresholdISR:
  4274  000021                     
  4275                           ; 1 bytes @ 0x0
  4276  000021                     	ds	5
  4277  000026                     ??_TMR6_ISR:
  4278                           
  4279                           ; 1 bytes @ 0x5
  4280  000026                     	ds	1
  4281  000027                     ??_INT1_ISR:
  4282  000027                     
  4283                           ; 1 bytes @ 0x6
  4284  000027                     	ds	4
  4285  00002B                     ??_TMR5_ISR:
  4286                           
  4287                           ; 1 bytes @ 0xA
  4288  00002B                     	ds	15
  4289                           
  4290 ;;
  4291 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4292 ;;
  4293 ;; *************** function _main *****************
  4294 ;; Defined at:
  4295 ;;		line 189 in file "main.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  esr_temp        4  [STACK] float 
  4300 ;;  i_esr           2  [STACK] unsigned short 
  4301 ;;  shape           1  [STACK] unsigned char 
  4302 ;;  inp_index       1  [STACK] unsigned char 
  4303 ;;  k               1  [STACK] unsigned char 
  4304 ;;  j               1  [STACK] unsigned char 
  4305 ;;  i               1  [STACK] unsigned char 
  4306 ;;  mode            1  [STACK] enum E17013
  4307 ;;  i_ror           1  [STACK] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1  [STACK] void 
  4310 ;; Registers used:
  4311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4321 ;;Total ram usage:        0 bytes
  4322 ;; Hardware stack levels required when called:   29
  4323 ;; This function calls:
  4324 ;;		_SYSTEM_Initialize
  4325 ;;		_StartTimer
  4326 ;;		_TimerDone
  4327 ;;		_WaitMs
  4328 ;;		___fladd
  4329 ;;		___flge
  4330 ;;		___fltol
  4331 ;;		_calc_model_data
  4332 ;;		_calc_ror_data
  4333 ;;		_check_adc_scan
  4334 ;;		_check_enter_button
  4335 ;;		_check_help
  4336 ;;		_clear_adc_scan
  4337 ;;		_clear_hid_pflags
  4338 ;;		_conv_raw_result
  4339 ;;		_convert_adc_data
  4340 ;;		_current_sensor_cal
  4341 ;;		_eaDogM_WriteCommand
  4342 ;;		_esr_check
  4343 ;;		_fabsf
  4344 ;;		_get_raw_result
  4345 ;;		_get_switch
  4346 ;;		_get_vterm_ptr
  4347 ;;		_hid_display
  4348 ;;		_init_bsoc
  4349 ;;		_init_display
  4350 ;;		_init_port_dma
  4351 ;;		_lp_filter
  4352 ;;		_mode_lamp_dim
  4353 ;;		_read_cal_data
  4354 ;;		_set_dac
  4355 ;;		_set_dac_a
  4356 ;;		_set_dac_b
  4357 ;;		_set_display_info
  4358 ;;		_set_load_relay_one
  4359 ;;		_set_load_relay_two
  4360 ;;		_set_vterm
  4361 ;;		_spinners
  4362 ;;		_sprintf
  4363 ;;		_srand
  4364 ;;		_start_adc_scan
  4365 ;;		_start_switch_handler
  4366 ;;		_static_soc
  4367 ;;		_update_cal_data
  4368 ;;		_update_lcd
  4369 ;;		_wait_lcd_done
  4370 ;; This function is called by:
  4371 ;;		Startup code after reset
  4372 ;; This function uses a reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text0
  4376  010000                     __ptext0:
  4377                           	opt callstack 0
  4378  010000                     _main:
  4379                           	opt callstack 0
  4380                           
  4381                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4382  010000  0E11               	movlw	17
  4383  010002  26E1               	addwf	fsr1l,f,c
  4384  010004  0E00               	movlw	0
  4385  010006  22E2               	addwfc	fsr1h,f,c
  4386                           
  4387                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4388                           ;stkvar	_inp_index @ sp[(-17)+11]
  4389                           
  4390                           ;incstack = 0
  4391  010008  0EFA               	movlw	-6
  4392  01000A  6AE3               	clrf	plusw1,c
  4393                           
  4394                           ;stkvar	_i @ sp[(-17)+14]
  4395  01000C  0EFD               	movlw	-3
  4396  01000E  6AE3               	clrf	plusw1,c
  4397                           
  4398                           ;stkvar	_j @ sp[(-17)+13]
  4399  010010  0EFC               	movlw	-4
  4400  010012  6AE3               	clrf	plusw1,c
  4401  010014  2AE3               	incf	plusw1,f,c
  4402                           
  4403                           ;stkvar	_k @ sp[(-17)+12]
  4404  010016  0EFB               	movlw	-5
  4405  010018  6AE3               	clrf	plusw1,c
  4406  01001A  82E3               	bsf	plusw1,1,c
  4407                           
  4408                           ;main.c: 195:  SYSTEM_Initialize();
  4409  01001C  EC40  F0E0         	call	_SYSTEM_Initialize	;wreg free
  4410                           
  4411                           ; BSR set to: 60
  4412                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4413  010020  8ED2               	bsf	210,7,c	;volatile
  4414                           
  4415                           ; BSR set to: 60
  4416                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4417  010022  8CD2               	bsf	210,6,c	;volatile
  4418                           
  4419                           ; BSR set to: 60
  4420                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4421  010024  0101               	movlb	1	; () banked
  4422  010026  6B07               	clrf	_V& (0+255),b	;volatile
  4423                           
  4424                           ; BSR set to: 1
  4425                           ;main.c: 208:  WaitMs(300);
  4426  010028  0E2C               	movlw	44
  4427  01002A  6EE6               	movwf	postinc1,c
  4428  01002C  0E01               	movlw	1
  4429  01002E  6EE6               	movwf	postinc1,c
  4430  010030  ECAF  F0E2         	call	_WaitMs	;wreg free
  4431                           
  4432                           ;main.c: 209:  if (PORTBbits.RB0) {
  4433  010034  A0CB               	btfss	203,0,c	;volatile
  4434  010036  D004               	goto	l13978
  4435                           
  4436                           ;main.c: 210:   mode = UI_STATE_HOST;
  4437                           ;stkvar	_mode @ sp[(-17)+15]
  4438  010038  0EFE               	movlw	-2
  4439  01003A  6AE3               	clrf	plusw1,c
  4440  01003C  2AE3               	incf	plusw1,f,c
  4441                           
  4442                           ;main.c: 211:  } else {
  4443  01003E  D004               	goto	l13980
  4444  010040                     l13978:
  4445                           
  4446                           ;main.c: 212:   mode = UI_STATE_LOG;
  4447                           ;stkvar	_mode @ sp[(-17)+15]
  4448  010040  0EFE               	movlw	-2
  4449  010042  6AE3               	clrf	plusw1,c
  4450  010044  80E3               	bsf	plusw1,0,c
  4451  010046  82E3               	bsf	plusw1,1,c	;indir
  4452  010048                     l13980:
  4453                           
  4454                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4455                           ;stkvar	_mode @ sp[(-17)+15]
  4456  010048  0EFE               	movlw	-2
  4457  01004A  04E3               	decf	plusw1,w,c
  4458  01004C  A4D8               	btfss	status,2,c
  4459  01004E  D007               	goto	l1342
  4460                           
  4461                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4462  010050  80BD               	bsf	189,0,c	;volatile
  4463                           
  4464                           ;main.c: 217:   V.mode_pwm = 70;
  4465  010052  0E00               	movlw	0
  4466  010054  0101               	movlb	1	; () banked
  4467  010056  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4468  010058  0E46               	movlw	70
  4469  01005A  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4470                           
  4471                           ;main.c: 218:  } else {
  4472  01005C  D004               	goto	l13984
  4473  01005E                     l1342:
  4474  01005E  90BD               	bcf	189,0,c	;volatile
  4475                           
  4476                           ;main.c: 220:   V.mode_pwm = 0;
  4477  010060  0101               	movlb	1	; () banked
  4478  010062  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4479  010064  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4480  010066                     l13984:
  4481                           
  4482                           ; BSR set to: 1
  4483                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4484  010066  0060  F673  FFE6   	movff	_V+149,postinc1
  4485  01006C  0060  F677  FFE6   	movff	_V+150,postinc1
  4486  010072  EC6B  F0E6         	call	_mode_lamp_dim	;wreg free
  4487  010076  D387               	goto	l14130
  4488  010078                     l13986:
  4489                           
  4490                           ; BSR set to: 1
  4491                           ;main.c: 230:    init_port_dma();
  4492  010078  EC4B  F0E3         	call	_init_port_dma	;wreg free
  4493                           
  4494                           ; BSR set to: 59
  4495                           ;main.c: 232:    init_display();
  4496  01007C  ECE8  F0D3         	call	_init_display	;wreg free
  4497                           
  4498                           ; BSR set to: 61
  4499                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4500  010080  0E0C               	movlw	12
  4501  010082  6EE6               	movwf	postinc1,c
  4502  010084  ECE2  F0E6         	call	_eaDogM_WriteCommand	;wreg free
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;main.c: 234:    set_dac();
  4506  010088  ECF2  F0D7         	call	_set_dac	;wreg free
  4507                           
  4508                           ;main.c: 238:    set_load_relay_one(1);
  4509  01008C  0E01               	movlw	1
  4510  01008E  6EE6               	movwf	postinc1,c
  4511  010090  ECCA  F0E6         	call	_set_load_relay_one	;wreg free
  4512                           
  4513                           ;main.c: 239:    set_load_relay_two(1);
  4514  010094  0E01               	movlw	1
  4515  010096  6EE6               	movwf	postinc1,c
  4516  010098  ECC2  F0E6         	call	_set_load_relay_two	;wreg free
  4517                           
  4518                           ;main.c: 241:    V.ui_state = mode;
  4519                           ;stkvar	_mode @ sp[(-17)+15]
  4520  01009C  0EFE               	movlw	-2
  4521  01009E  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4522                           
  4523                           ;main.c: 242:    srand(1957);
  4524  0100A4  0EA5               	movlw	165
  4525  0100A6  6EE6               	movwf	postinc1,c
  4526  0100A8  0E07               	movlw	7
  4527  0100AA  6EE6               	movwf	postinc1,c
  4528  0100AC  ECCA  F0E2         	call	_srand	;wreg free
  4529                           
  4530                           ; BSR set to: 2
  4531                           ;main.c: 243:    set_vterm(0);
  4532  0100B0  0E00               	movlw	0
  4533  0100B2  6EE6               	movwf	postinc1,c
  4534  0100B4  EC23  F0E6         	call	_set_vterm	;wreg free
  4535                           
  4536                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4537  0100B8  0EA0               	movlw	low STR_1
  4538  0100BA  6EE6               	movwf	postinc1,c
  4539  0100BC  0EFE               	movlw	high STR_1
  4540  0100BE  6EE6               	movwf	postinc1,c
  4541  0100C0  0E00               	movlw	0
  4542  0100C2  6EE6               	movwf	postinc1,c
  4543  0100C4  0E00               	movlw	0
  4544  0100C6  6EE6               	movwf	postinc1,c
  4545  0100C8  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4546  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  4547  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4548  0100D8  0E04               	movlw	4
  4549  0100DA  6EE6               	movwf	postinc1,c
  4550  0100DC  EC6E  F0D2         	call	_sprintf	;wreg free
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.18");
  4554  0100E0  0ED1               	movlw	low STR_3
  4555  0100E2  6EE6               	movwf	postinc1,c
  4556  0100E4  0EFF               	movlw	high STR_3
  4557  0100E6  6EE6               	movwf	postinc1,c
  4558  0100E8  0E61               	movlw	low STR_2
  4559  0100EA  6EE6               	movwf	postinc1,c
  4560  0100EC  0EFE               	movlw	high STR_2
  4561  0100EE  6EE6               	movwf	postinc1,c
  4562  0100F0  0E00               	movlw	0
  4563  0100F2  6EE6               	movwf	postinc1,c
  4564  0100F4  0E01               	movlw	1
  4565  0100F6  6EE6               	movwf	postinc1,c
  4566  0100F8  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4567  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  4568  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4569  010108  0E06               	movlw	6
  4570  01010A  6EE6               	movwf	postinc1,c
  4571  01010C  EC6E  F0D2         	call	_sprintf	;wreg free
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4575  010110  0E0D               	movlw	low STR_4
  4576  010112  6EE6               	movwf	postinc1,c
  4577  010114  0EFE               	movlw	high STR_4
  4578  010116  6EE6               	movwf	postinc1,c
  4579  010118  0E00               	movlw	0
  4580  01011A  6EE6               	movwf	postinc1,c
  4581  01011C  0E02               	movlw	2
  4582  01011E  6EE6               	movwf	postinc1,c
  4583  010120  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4584  010124  0060  F007  FFE6   	movff	btemp,postinc1
  4585  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4586  010130  0E04               	movlw	4
  4587  010132  6EE6               	movwf	postinc1,c
  4588  010134  EC6E  F0D2         	call	_sprintf	;wreg free
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4592  010138  0EA4               	movlw	low STR_5
  4593  01013A  6EE6               	movwf	postinc1,c
  4594  01013C  0EFD               	movlw	high STR_5
  4595  01013E  6EE6               	movwf	postinc1,c
  4596  010140  0E02               	movlw	2
  4597  010142  6EE6               	movwf	postinc1,c
  4598  010144  0E00               	movlw	0
  4599  010146  6EE6               	movwf	postinc1,c
  4600  010148  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4601  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  4602  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4603  010158  0E04               	movlw	4
  4604  01015A  6EE6               	movwf	postinc1,c
  4605  01015C  EC6E  F0D2         	call	_sprintf	;wreg free
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4609  010160  0EA4               	movlw	low STR_5
  4610  010162  6EE6               	movwf	postinc1,c
  4611  010164  0EFD               	movlw	high STR_5
  4612  010166  6EE6               	movwf	postinc1,c
  4613  010168  0E02               	movlw	2
  4614  01016A  6EE6               	movwf	postinc1,c
  4615  01016C  0E01               	movlw	1
  4616  01016E  6EE6               	movwf	postinc1,c
  4617  010170  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4618  010174  0060  F007  FFE6   	movff	btemp,postinc1
  4619  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4620  010180  0E04               	movlw	4
  4621  010182  6EE6               	movwf	postinc1,c
  4622  010184  EC6E  F0D2         	call	_sprintf	;wreg free
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4626  010188  0EA4               	movlw	low STR_5
  4627  01018A  6EE6               	movwf	postinc1,c
  4628  01018C  0EFD               	movlw	high STR_5
  4629  01018E  6EE6               	movwf	postinc1,c
  4630  010190  0E02               	movlw	2
  4631  010192  6EE6               	movwf	postinc1,c
  4632  010194  0E02               	movlw	2
  4633  010196  6EE6               	movwf	postinc1,c
  4634  010198  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4635  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  4636  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4637  0101A8  0E04               	movlw	4
  4638  0101AA  6EE6               	movwf	postinc1,c
  4639  0101AC  EC6E  F0D2         	call	_sprintf	;wreg free
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;main.c: 250:    update_lcd(0);
  4643  0101B0  0E00               	movlw	0
  4644  0101B2  6EE6               	movwf	postinc1,c
  4645  0101B4  ECE6  F0D1         	call	_update_lcd	;wreg free
  4646                           
  4647                           ;main.c: 251:    WaitMs(1000);
  4648  0101B8  0EE8               	movlw	232
  4649  0101BA  6EE6               	movwf	postinc1,c
  4650  0101BC  0E03               	movlw	3
  4651  0101BE  6EE6               	movwf	postinc1,c
  4652  0101C0  ECAF  F0E2         	call	_WaitMs	;wreg free
  4653                           
  4654                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4655  0101C4  0EFA               	movlw	250
  4656  0101C6  6EE6               	movwf	postinc1,c
  4657  0101C8  0E00               	movlw	0
  4658  0101CA  6EE6               	movwf	postinc1,c
  4659  0101CC  0E0A               	movlw	10
  4660  0101CE  6EE6               	movwf	postinc1,c
  4661  0101D0  ECBE  F0E1         	call	_StartTimer	;wreg free
  4662                           
  4663                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4664  0101D4  0EC8               	movlw	200
  4665  0101D6  6EE6               	movwf	postinc1,c
  4666  0101D8  0E00               	movlw	0
  4667  0101DA  6EE6               	movwf	postinc1,c
  4668  0101DC  0E01               	movlw	1
  4669  0101DE  6EE6               	movwf	postinc1,c
  4670  0101E0  ECBE  F0E1         	call	_StartTimer	;wreg free
  4671                           
  4672                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4673  0101E4  0EB8               	movlw	184
  4674  0101E6  6EE6               	movwf	postinc1,c
  4675  0101E8  0E0B               	movlw	11
  4676  0101EA  6EE6               	movwf	postinc1,c
  4677  0101EC  0E07               	movlw	7
  4678  0101EE  6EE6               	movwf	postinc1,c
  4679  0101F0  ECBE  F0E1         	call	_StartTimer	;wreg free
  4680                           
  4681                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4682  0101F4  0EDC               	movlw	220
  4683  0101F6  6EE6               	movwf	postinc1,c
  4684  0101F8  0E05               	movlw	5
  4685  0101FA  6EE6               	movwf	postinc1,c
  4686  0101FC  0E0B               	movlw	11
  4687  0101FE  6EE6               	movwf	postinc1,c
  4688  010200  ECBE  F0E1         	call	_StartTimer	;wreg free
  4689                           
  4690                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4691  010204  0EB8               	movlw	184
  4692  010206  6EE6               	movwf	postinc1,c
  4693  010208  0E0B               	movlw	11
  4694  01020A  6EE6               	movwf	postinc1,c
  4695  01020C  0E09               	movlw	9
  4696  01020E  6EE6               	movwf	postinc1,c
  4697  010210  ECBE  F0E1         	call	_StartTimer	;wreg free
  4698                           
  4699                           ;main.c: 258:    start_adc_scan();
  4700  010214  EC57  F0DE         	call	_start_adc_scan	;wreg free
  4701                           
  4702                           ;main.c: 259:    start_switch_handler();
  4703  010218  ECE5  F0E5         	call	_start_switch_handler	;wreg free
  4704                           
  4705                           ; BSR set to: 57
  4706                           ;main.c: 260:    WaitMs(1000);
  4707  01021C  0EE8               	movlw	232
  4708  01021E  6EE6               	movwf	postinc1,c
  4709  010220  0E03               	movlw	3
  4710  010222  6EE6               	movwf	postinc1,c
  4711  010224  ECAF  F0E2         	call	_WaitMs	;wreg free
  4712                           
  4713                           ;main.c: 265:    if (read_cal_data()) {
  4714  010228  EC6E  F0D3         	call	_read_cal_data	;wreg free
  4715  01022C  5001               	movf	btemp^0,w,c
  4716  01022E  B4D8               	btfsc	status,2,c
  4717  010230  D017               	goto	l14042
  4718                           
  4719                           ; BSR set to: 3
  4720                           ;main.c: 266:     update_cal_data();
  4721  010232  EC83  F0E6         	call	_update_cal_data	;wreg free
  4722                           
  4723                           ;main.c: 267:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  4724  010236  0EF4               	movlw	low STR_8
  4725  010238  6EE6               	movwf	postinc1,c
  4726  01023A  0EFE               	movlw	high STR_8
  4727  01023C  6EE6               	movwf	postinc1,c
  4728  01023E  0E00               	movlw	0
  4729  010240  6EE6               	movwf	postinc1,c
  4730  010242  0E02               	movlw	2
  4731  010244  6EE6               	movwf	postinc1,c
  4732  010246  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4733  01024A  0060  F007  FFE6   	movff	btemp,postinc1
  4734  010250  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4735  010256  0E04               	movlw	4
  4736  010258  6EE6               	movwf	postinc1,c
  4737  01025A  EC6E  F0D2         	call	_sprintf	;wreg free
  4738                           
  4739                           ;main.c: 268:    } else {
  4740  01025E  D014               	goto	l1348
  4741  010260                     l14042:
  4742                           
  4743                           ; BSR set to: 3
  4744                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  4745  010260  0E33               	movlw	low STR_9
  4746  010262  6EE6               	movwf	postinc1,c
  4747  010264  0EFF               	movlw	high STR_9
  4748  010266  6EE6               	movwf	postinc1,c
  4749  010268  0E00               	movlw	0
  4750  01026A  6EE6               	movwf	postinc1,c
  4751  01026C  0E02               	movlw	2
  4752  01026E  6EE6               	movwf	postinc1,c
  4753  010270  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4754  010274  0060  F007  FFE6   	movff	btemp,postinc1
  4755  01027A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4756  010280  0E04               	movlw	4
  4757  010282  6EE6               	movwf	postinc1,c
  4758  010284  EC6E  F0D2         	call	_sprintf	;wreg free
  4759  010288                     l1348:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;main.c: 271:    update_lcd(0);
  4763  010288  0E00               	movlw	0
  4764  01028A  6EE6               	movwf	postinc1,c
  4765  01028C  ECE6  F0D1         	call	_update_lcd	;wreg free
  4766                           
  4767                           ;main.c: 272:    WaitMs(2000);
  4768  010290  0ED0               	movlw	208
  4769  010292  6EE6               	movwf	postinc1,c
  4770  010294  0E07               	movlw	7
  4771  010296  6EE6               	movwf	postinc1,c
  4772  010298  ECAF  F0E2         	call	_WaitMs	;wreg free
  4773                           
  4774                           ;main.c: 274:    i_ror = 1;
  4775                           ;stkvar	_i_ror @ sp[(-17)+16]
  4776  01029C  0EFF               	movlw	-1
  4777  01029E  6AE3               	clrf	plusw1,c
  4778  0102A0  2AE3               	incf	plusw1,f,c
  4779  0102A2                     l14048:
  4780                           
  4781                           ;main.c: 276:     calc_ror_data();
  4782  0102A2  ECF9  F0C8         	call	_calc_ror_data	;wreg free
  4783                           
  4784                           ;main.c: 277:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4785  0102A6  0E00               	movlw	0
  4786  0102A8  6EE6               	movwf	postinc1,c
  4787  0102AA  0E04               	movlw	4
  4788  0102AC  6EE6               	movwf	postinc1,c
  4789  0102AE  EC0A  F0AA         	call	_conv_raw_result	;wreg free
  4790  0102B2  0060  F007  FFE6   	movff	btemp,postinc1
  4791  0102B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4792  0102BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4793  0102C4  0060  F013  FFE6   	movff	btemp+3,postinc1
  4794  0102CA  0EF8               	movlw	low STR_10
  4795  0102CC  6EE6               	movwf	postinc1,c
  4796  0102CE  0EFD               	movlw	high STR_10
  4797  0102D0  6EE6               	movwf	postinc1,c
  4798  0102D2  0E00               	movlw	0
  4799  0102D4  6EE6               	movwf	postinc1,c
  4800  0102D6  0E01               	movlw	1
  4801  0102D8  6EE6               	movwf	postinc1,c
  4802  0102DA  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4803  0102DE  0060  F007  FFE6   	movff	btemp,postinc1
  4804  0102E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4805  0102EA  0E08               	movlw	8
  4806  0102EC  6EE6               	movwf	postinc1,c
  4807  0102EE  EC6E  F0D2         	call	_sprintf	;wreg free
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;main.c: 278:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4811  0102F2  EE21  F36B         	lfsr	2,_C+108	;volatile
  4812  0102F6  006F FF7B FFE6     	movff	postinc2,postinc1
  4813  0102FC  006F FF7B FFE6     	movff	postinc2,postinc1
  4814  010302  006F FF7B FFE6     	movff	postinc2,postinc1
  4815  010308  006F FF7B FFE6     	movff	postinc2,postinc1
  4816                           
  4817                           ;stkvar	_i_ror @ sp[(-21)+16]
  4818  01030E  0EFB               	movlw	-5
  4819  010310  50E3               	movf	plusw1,w,c
  4820  010312  6EE6               	movwf	postinc1,c
  4821  010314  0E00               	movlw	0
  4822  010316  6EE6               	movwf	postinc1,c
  4823  010318  0E00               	movlw	0
  4824  01031A  6EE6               	movwf	postinc1,c
  4825  01031C  0E05               	movlw	5
  4826  01031E  6EE6               	movwf	postinc1,c
  4827  010320  ECF3  F0D2         	call	_spinners	;wreg free
  4828  010324  5001               	movf	btemp^0,w,c
  4829  010326  6EE6               	movwf	postinc1,c
  4830  010328  0E00               	movlw	0
  4831  01032A  6EE6               	movwf	postinc1,c
  4832  01032C  0E9F               	movlw	low STR_11
  4833  01032E  6EE6               	movwf	postinc1,c
  4834  010330  0EFB               	movlw	high STR_11
  4835  010332  6EE6               	movwf	postinc1,c
  4836  010334  0E00               	movlw	0
  4837  010336  6EE6               	movwf	postinc1,c
  4838  010338  0E02               	movlw	2
  4839  01033A  6EE6               	movwf	postinc1,c
  4840  01033C  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4841  010340  0060  F007  FFE6   	movff	btemp,postinc1
  4842  010346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4843  01034C  0E0C               	movlw	12
  4844  01034E  6EE6               	movwf	postinc1,c
  4845  010350  EC6E  F0D2         	call	_sprintf	;wreg free
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;main.c: 279:     update_lcd(0);
  4849  010354  0E00               	movlw	0
  4850  010356  6EE6               	movwf	postinc1,c
  4851  010358  ECE6  F0D1         	call	_update_lcd	;wreg free
  4852                           
  4853                           ;main.c: 280:     clear_adc_scan();
  4854  01035C  EC37  F0E7         	call	_clear_adc_scan	;wreg free
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;main.c: 281:     start_adc_scan();
  4858  010360  EC57  F0DE         	call	_start_adc_scan	;wreg free
  4859                           
  4860                           ;main.c: 282:     WaitMs(2000);
  4861  010364  0ED0               	movlw	208
  4862  010366  6EE6               	movwf	postinc1,c
  4863  010368  0E07               	movlw	7
  4864  01036A  6EE6               	movwf	postinc1,c
  4865  01036C  ECAF  F0E2         	call	_WaitMs	;wreg free
  4866                           
  4867                           ;main.c: 285:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4868                           ;stkvar	_i_ror @ sp[(-17)+16]
  4869  010370  0EFF               	movlw	-1
  4870  010372  006F FF8C  F00C    	movff	plusw1,btemp+11
  4871  010378  2A0C               	incf	(btemp+11)^0,f,c
  4872  01037A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4873  010380  060C               	decf	(btemp+11)^0,f,c
  4874  010382  0E1E               	movlw	30
  4875  010384  600C               	cpfslt	(btemp+11)^0,c
  4876  010386  D01A               	goto	u13400
  4877  010388  EE21  F36B         	lfsr	2,_C+108	;volatile
  4878  01038C  006F FF7B FFE6     	movff	postinc2,postinc1
  4879  010392  006F FF7B FFE6     	movff	postinc2,postinc1
  4880  010398  006F FF7B FFE6     	movff	postinc2,postinc1
  4881  01039E  006F FF7B FFE6     	movff	postinc2,postinc1
  4882  0103A4  0E42               	movlw	66
  4883  0103A6  6EE6               	movwf	postinc1,c
  4884  0103A8  0E60               	movlw	96
  4885  0103AA  6EE6               	movwf	postinc1,c
  4886  0103AC  0E65               	movlw	101
  4887  0103AE  6EE6               	movwf	postinc1,c
  4888  0103B0  0E3C               	movlw	60
  4889  0103B2  6EE6               	movwf	postinc1,c
  4890  0103B4  EC35  F0CB         	call	___flge	;wreg free
  4891  0103B8  A001               	btfss	btemp& (0+255),0,c
  4892  0103BA  D773               	goto	l14048
  4893  0103BC                     u13400:
  4894                           
  4895                           ;main.c: 287:    static_soc();
  4896  0103BC  EC1B  F0DF         	call	_static_soc	;wreg free
  4897                           
  4898                           ;main.c: 288:    init_bsoc();
  4899  0103C0  EC14  F0C0         	call	_init_bsoc	;wreg free
  4900                           
  4901                           ;main.c: 289:    set_load_relay_one(0);
  4902  0103C4  0E00               	movlw	0
  4903  0103C6  6EE6               	movwf	postinc1,c
  4904  0103C8  ECCA  F0E6         	call	_set_load_relay_one	;wreg free
  4905                           
  4906                           ;main.c: 290:    set_load_relay_two(0);
  4907  0103CC  0E00               	movlw	0
  4908  0103CE  6EE6               	movwf	postinc1,c
  4909  0103D0  ECC2  F0E6         	call	_set_load_relay_two	;wreg free
  4910                           
  4911                           ;main.c: 291:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4912  0103D4  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4913  0103D8  006F FF78  F00B    	movff	postinc2,btemp+10
  4914  0103DE  006F FF74  F00C    	movff	postdec2,btemp+11
  4915  0103E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4916  0103EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4917  0103F0  0E5A               	movlw	low STR_12
  4918  0103F2  6EE6               	movwf	postinc1,c
  4919  0103F4  0EFC               	movlw	high STR_12
  4920  0103F6  6EE6               	movwf	postinc1,c
  4921  0103F8  0E00               	movlw	0
  4922  0103FA  6EE6               	movwf	postinc1,c
  4923  0103FC  0E00               	movlw	0
  4924  0103FE  6EE6               	movwf	postinc1,c
  4925  010400  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4926  010404  0060  F007  FFE6   	movff	btemp,postinc1
  4927  01040A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4928  010410  0E06               	movlw	6
  4929  010412  6EE6               	movwf	postinc1,c
  4930  010414  EC6E  F0D2         	call	_sprintf	;wreg free
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;main.c: 292:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4934  010418  EE21  F38F         	lfsr	2,_C+144	;volatile
  4935  01041C  006F FF7B FFE6     	movff	postinc2,postinc1
  4936  010422  006F FF7B FFE6     	movff	postinc2,postinc1
  4937  010428  006F FF7B FFE6     	movff	postinc2,postinc1
  4938  01042E  006F FF7B FFE6     	movff	postinc2,postinc1
  4939  010434  0E36               	movlw	low STR_13
  4940  010436  6EE6               	movwf	postinc1,c
  4941  010438  0EFD               	movlw	high STR_13
  4942  01043A  6EE6               	movwf	postinc1,c
  4943  01043C  0E00               	movlw	0
  4944  01043E  6EE6               	movwf	postinc1,c
  4945  010440  0E01               	movlw	1
  4946  010442  6EE6               	movwf	postinc1,c
  4947  010444  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4948  010448  0060  F007  FFE6   	movff	btemp,postinc1
  4949  01044E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4950  010454  0E08               	movlw	8
  4951  010456  6EE6               	movwf	postinc1,c
  4952  010458  EC6E  F0D2         	call	_sprintf	;wreg free
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;main.c: 293:    update_lcd(0);
  4956  01045C  0E00               	movlw	0
  4957  01045E  6EE6               	movwf	postinc1,c
  4958  010460  ECE6  F0D1         	call	_update_lcd	;wreg free
  4959                           
  4960                           ;main.c: 294:    WaitMs(2000);
  4961  010464  0ED0               	movlw	208
  4962  010466  6EE6               	movwf	postinc1,c
  4963  010468  0E07               	movlw	7
  4964  01046A  6EE6               	movwf	postinc1,c
  4965  01046C  ECAF  F0E2         	call	_WaitMs	;wreg free
  4966                           
  4967                           ;main.c: 295:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4968  010470  0E22               	movlw	low STR_14
  4969  010472  6EE6               	movwf	postinc1,c
  4970  010474  0EFE               	movlw	high STR_14
  4971  010476  6EE6               	movwf	postinc1,c
  4972  010478  0E00               	movlw	0
  4973  01047A  6EE6               	movwf	postinc1,c
  4974  01047C  0E00               	movlw	0
  4975  01047E  6EE6               	movwf	postinc1,c
  4976  010480  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4977  010484  0060  F007  FFE6   	movff	btemp,postinc1
  4978  01048A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4979  010490  0E04               	movlw	4
  4980  010492  6EE6               	movwf	postinc1,c
  4981  010494  EC6E  F0D2         	call	_sprintf	;wreg free
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;main.c: 296:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4985  010498  0E37               	movlw	low STR_15
  4986  01049A  6EE6               	movwf	postinc1,c
  4987  01049C  0EFE               	movlw	high STR_15
  4988  01049E  6EE6               	movwf	postinc1,c
  4989  0104A0  0E00               	movlw	0
  4990  0104A2  6EE6               	movwf	postinc1,c
  4991  0104A4  0E01               	movlw	1
  4992  0104A6  6EE6               	movwf	postinc1,c
  4993  0104A8  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  4994  0104AC  0060  F007  FFE6   	movff	btemp,postinc1
  4995  0104B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4996  0104B8  0E04               	movlw	4
  4997  0104BA  6EE6               	movwf	postinc1,c
  4998  0104BC  EC6E  F0D2         	call	_sprintf	;wreg free
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;main.c: 297:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5002  0104C0  0E09               	movlw	low STR_16
  5003  0104C2  6EE6               	movwf	postinc1,c
  5004  0104C4  0EFF               	movlw	high STR_16
  5005  0104C6  6EE6               	movwf	postinc1,c
  5006  0104C8  0E00               	movlw	0
  5007  0104CA  6EE6               	movwf	postinc1,c
  5008  0104CC  0E02               	movlw	2
  5009  0104CE  6EE6               	movwf	postinc1,c
  5010  0104D0  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5011  0104D4  0060  F007  FFE6   	movff	btemp,postinc1
  5012  0104DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5013  0104E0  0E04               	movlw	4
  5014  0104E2  6EE6               	movwf	postinc1,c
  5015  0104E4  EC6E  F0D2         	call	_sprintf	;wreg free
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;main.c: 298:    update_lcd(0);
  5019  0104E8  0E00               	movlw	0
  5020  0104EA  6EE6               	movwf	postinc1,c
  5021  0104EC  ECE6  F0D1         	call	_update_lcd	;wreg free
  5022                           
  5023                           ;main.c: 299:    uint16_t i_esr = 1;
  5024  0104F0  0E01               	movlw	1
  5025  0104F2  6E0B               	movwf	(btemp+10)^0,c
  5026  0104F4  0E00               	movlw	0
  5027  0104F6  6E0C               	movwf	(btemp+11)^0,c
  5028                           
  5029                           ;stkvar	_i_esr @ sp[(-17)+8]
  5030  0104F8  0EF7               	movlw	-9
  5031  0104FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5032  010500  0EF8               	movlw	-8
  5033  010502  0060  F033  FFE3   	movff	btemp+11,plusw1
  5034                           
  5035                           ;main.c: 301:    float esr_temp;;main.c: 302:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5036  010508  D06D               	goto	l14106
  5037  01050A                     l14094:
  5038                           
  5039                           ;main.c: 303:     WaitMs(110);
  5040  01050A  0E6E               	movlw	110
  5041  01050C  6EE6               	movwf	postinc1,c
  5042  01050E  0E00               	movlw	0
  5043  010510  6EE6               	movwf	postinc1,c
  5044  010512  ECAF  F0E2         	call	_WaitMs	;wreg free
  5045                           
  5046                           ;main.c: 304:     shape = (uint8_t) fabsf(esr_temp);
  5047                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5048  010516  0EF3               	movlw	-13
  5049  010518  006F FF8F FFE6     	movff	plusw1,postinc1
  5050  01051E  006F FF8F FFE6     	movff	plusw1,postinc1
  5051  010524  006F FF8F FFE6     	movff	plusw1,postinc1
  5052  01052A  006F FF8F FFE6     	movff	plusw1,postinc1
  5053  010530  EC4D  F0D8         	call	_fabsf	;wreg free
  5054  010534  0060  F007  FFE6   	movff	btemp,postinc1
  5055  01053A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5056  010540  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5057  010546  0060  F013  FFE6   	movff	btemp+3,postinc1
  5058  01054C  EC7C  F0CA         	call	___fltol	;wreg free
  5059  010550  0060  F004  F00C   	movff	btemp,btemp+11
  5060                           
  5061                           ;stkvar	_shape @ sp[(-17)+10]
  5062  010556  0EF9               	movlw	-7
  5063  010558  0060  F033  FFE3   	movff	btemp+11,plusw1
  5064                           
  5065                           ;main.c: 305:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5066  01055E  0E00               	movlw	0
  5067  010560  6EE6               	movwf	postinc1,c
  5068                           
  5069                           ;stkvar	_shape @ sp[(-18)+10]
  5070  010562  0EF8               	movlw	-8
  5071  010564  50E3               	movf	plusw1,w,c
  5072  010566  6EE6               	movwf	postinc1,c
  5073  010568  ECF3  F0D2         	call	_spinners	;wreg free
  5074  01056C  5001               	movf	btemp^0,w,c
  5075  01056E  6EE6               	movwf	postinc1,c
  5076  010570  0E00               	movlw	0
  5077  010572  6EE6               	movwf	postinc1,c
  5078  010574  0E00               	movlw	0
  5079  010576  6EE6               	movwf	postinc1,c
  5080  010578  0E00               	movlw	0
  5081  01057A  6EE6               	movwf	postinc1,c
  5082  01057C  ECF3  F0D2         	call	_spinners	;wreg free
  5083  010580  5001               	movf	btemp^0,w,c
  5084  010582  6EE6               	movwf	postinc1,c
  5085  010584  0E00               	movlw	0
  5086  010586  6EE6               	movwf	postinc1,c
  5087  010588  0ECA               	movlw	low STR_17
  5088  01058A  6EE6               	movwf	postinc1,c
  5089  01058C  0EFE               	movlw	high STR_17
  5090  01058E  6EE6               	movwf	postinc1,c
  5091  010590  0E00               	movlw	0
  5092  010592  6EE6               	movwf	postinc1,c
  5093  010594  0E02               	movlw	2
  5094  010596  6EE6               	movwf	postinc1,c
  5095  010598  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5096  01059C  0060  F007  FFE6   	movff	btemp,postinc1
  5097  0105A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5098  0105A8  0E08               	movlw	8
  5099  0105AA  6EE6               	movwf	postinc1,c
  5100  0105AC  EC6E  F0D2         	call	_sprintf	;wreg free
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;main.c: 306:     update_lcd(0);
  5104  0105B0  0E00               	movlw	0
  5105  0105B2  6EE6               	movwf	postinc1,c
  5106  0105B4  ECE6  F0D1         	call	_update_lcd	;wreg free
  5107                           
  5108                           ;main.c: 308:     if (i_esr++ > 512)
  5109                           ;stkvar	_i_esr @ sp[(-17)+8]
  5110  0105B8  50E1               	movf	fsr1l,w,c
  5111  0105BA  0FF7               	addlw	-9
  5112  0105BC  6ED9               	movwf	fsr2l,c
  5113  0105BE  50E2               	movf	fsr1h,w,c
  5114  0105C0  6EDA               	movwf	fsr2h,c
  5115  0105C2  0EFF               	movlw	255
  5116  0105C4  22DA               	addwfc	fsr2h,f,c
  5117  0105C6  006F FF7C  F00B    	movff	indf2,btemp+10
  5118  0105CC  0E01               	movlw	1
  5119  0105CE  26DE               	addwf	postinc2,f,c
  5120  0105D0  006F FF7C  F00C    	movff	indf2,btemp+11
  5121  0105D6  0E00               	movlw	0
  5122  0105D8  22DD               	addwfc	postdec2,f,c
  5123  0105DA  040B               	decf	(btemp+10)^0,w,c
  5124  0105DC  0E02               	movlw	2
  5125  0105DE  580C               	subwfb	(btemp+11)^0,w,c
  5126  0105E0  B0D8               	btfsc	status,0,c
  5127  0105E2  D017               	goto	u13420
  5128  0105E4                     l14106:
  5129                           
  5130                           ;main.c: 302:    while ((esr_temp = esr_check(0)) < 0.0) {
  5131  0105E4  0E00               	movlw	0
  5132  0105E6  6EE6               	movwf	postinc1,c
  5133  0105E8  ECCF  F0BA         	call	_esr_check	;wreg free
  5134                           
  5135                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5136  0105EC  0EF3               	movlw	-13
  5137  0105EE  0060  F007  FFE3   	movff	btemp,plusw1
  5138  0105F4  0EF4               	movlw	-12
  5139  0105F6  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5140  0105FC  0EF5               	movlw	-11
  5141  0105FE  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5142  010604  0EF6               	movlw	-10
  5143  010606  0060  F013  FFE3   	movff	btemp+3,plusw1
  5144  01060C  0EF6               	movlw	-10
  5145  01060E  BEE3               	btfsc	plusw1,7,c
  5146  010610  D77C               	goto	l14094
  5147  010612                     u13420:
  5148                           
  5149                           ;main.c: 311:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5150  010612  EE21  F387         	lfsr	2,_C+136	;volatile
  5151  010616  006F FF7B FFE6     	movff	postinc2,postinc1
  5152  01061C  006F FF7B FFE6     	movff	postinc2,postinc1
  5153  010622  006F FF7B FFE6     	movff	postinc2,postinc1
  5154  010628  006F FF7B FFE6     	movff	postinc2,postinc1
  5155  01062E  0E44               	movlw	low STR_18
  5156  010630  6EE6               	movwf	postinc1,c
  5157  010632  0EFC               	movlw	high STR_18
  5158  010634  6EE6               	movwf	postinc1,c
  5159  010636  0E00               	movlw	0
  5160  010638  6EE6               	movwf	postinc1,c
  5161  01063A  0E00               	movlw	0
  5162  01063C  6EE6               	movwf	postinc1,c
  5163  01063E  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5164  010642  0060  F007  FFE6   	movff	btemp,postinc1
  5165  010648  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5166  01064E  0E08               	movlw	8
  5167  010650  6EE6               	movwf	postinc1,c
  5168  010652  EC6E  F0D2         	call	_sprintf	;wreg free
  5169                           
  5170                           ;main.c: 312:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5171  010656  EE22  F00D         	lfsr	2,_C+270	;volatile
  5172  01065A  006F FF7B FFE6     	movff	postinc2,postinc1
  5173  010660  006F FF7B FFE6     	movff	postinc2,postinc1
  5174  010666  006F FF7B FFE6     	movff	postinc2,postinc1
  5175  01066C  006F FF7B FFE6     	movff	postinc2,postinc1
  5176  010672  EE22  F019         	lfsr	2,_C+282	;volatile
  5177  010676  006F FF7B FFE6     	movff	postinc2,postinc1
  5178  01067C  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  010682  006F FF7B FFE6     	movff	postinc2,postinc1
  5180  010688  006F FF7B FFE6     	movff	postinc2,postinc1
  5181  01068E  0E6B               	movlw	low STR_19
  5182  010690  6EE6               	movwf	postinc1,c
  5183  010692  0EFB               	movlw	high STR_19
  5184  010694  6EE6               	movwf	postinc1,c
  5185  010696  0E00               	movlw	0
  5186  010698  6EE6               	movwf	postinc1,c
  5187  01069A  0E01               	movlw	1
  5188  01069C  6EE6               	movwf	postinc1,c
  5189  01069E  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5190  0106A2  0060  F007  FFE6   	movff	btemp,postinc1
  5191  0106A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5192  0106AE  0E0C               	movlw	12
  5193  0106B0  6EE6               	movwf	postinc1,c
  5194  0106B2  EC6E  F0D2         	call	_sprintf	;wreg free
  5195                           
  5196                           ;main.c: 313:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5197  0106B6  EE22  F011         	lfsr	2,_C+274	;volatile
  5198  0106BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5199  0106C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5200  0106C6  006F FF7B FFE6     	movff	postinc2,postinc1
  5201  0106CC  006F FF7B FFE6     	movff	postinc2,postinc1
  5202  0106D2  EE22  F01D         	lfsr	2,_C+286	;volatile
  5203  0106D6  006F FF7B FFE6     	movff	postinc2,postinc1
  5204  0106DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5205  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5206  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5207  0106EE  0E85               	movlw	low STR_20
  5208  0106F0  6EE6               	movwf	postinc1,c
  5209  0106F2  0EFB               	movlw	high STR_20
  5210  0106F4  6EE6               	movwf	postinc1,c
  5211  0106F6  0E00               	movlw	0
  5212  0106F8  6EE6               	movwf	postinc1,c
  5213  0106FA  0E02               	movlw	2
  5214  0106FC  6EE6               	movwf	postinc1,c
  5215  0106FE  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5216  010702  0060  F007  FFE6   	movff	btemp,postinc1
  5217  010708  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5218  01070E  0E0C               	movlw	12
  5219  010710  6EE6               	movwf	postinc1,c
  5220  010712  EC6E  F0D2         	call	_sprintf	;wreg free
  5221                           
  5222                           ;main.c: 314:    update_lcd(0);
  5223  010716  0E00               	movlw	0
  5224  010718  6EE6               	movwf	postinc1,c
  5225  01071A  ECE6  F0D1         	call	_update_lcd	;wreg free
  5226                           
  5227                           ;main.c: 315:    WaitMs(4000);
  5228  01071E  0EA0               	movlw	160
  5229  010720  6EE6               	movwf	postinc1,c
  5230  010722  0E0F               	movlw	15
  5231  010724  6EE6               	movwf	postinc1,c
  5232  010726  ECAF  F0E2         	call	_WaitMs	;wreg free
  5233                           
  5234                           ;main.c: 316:    V.sensor_set = get_switch(SCALIB);
  5235  01072A  0E04               	movlw	4
  5236  01072C  6EE6               	movwf	postinc1,c
  5237  01072E  ECC2  F0E3         	call	_get_switch	;wreg free
  5238  010732  5001               	movf	btemp^0,w,c
  5239  010734  B4D8               	btfsc	status,2,c
  5240  010736  D002               	goto	u13430
  5241  010738  0E01               	movlw	1
  5242  01073A  D001               	goto	u13440
  5243  01073C                     u13430:
  5244  01073C  0E00               	movlw	0
  5245  01073E                     u13440:
  5246  01073E  0101               	movlb	1	; () banked
  5247  010740  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5248                           
  5249                           ; BSR set to: 1
  5250                           ;main.c: 317:    WaitMs(1000);
  5251  010742  0EE8               	movlw	232
  5252  010744  6EE6               	movwf	postinc1,c
  5253  010746  0E03               	movlw	3
  5254  010748  6EE6               	movwf	postinc1,c
  5255  01074A  ECAF  F0E2         	call	_WaitMs	;wreg free
  5256                           
  5257                           ;main.c: 318:    if (V.sensor_set && get_switch(SCALIB)) {
  5258  01074E  0101               	movlb	1	; () banked
  5259  010750  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5260  010752  B4D8               	btfsc	status,2,c
  5261  010754  D00F               	goto	l14124
  5262                           
  5263                           ; BSR set to: 1
  5264  010756  0E04               	movlw	4
  5265  010758  6EE6               	movwf	postinc1,c
  5266  01075A  ECC2  F0E3         	call	_get_switch	;wreg free
  5267  01075E  5001               	movf	btemp^0,w,c
  5268  010760  B4D8               	btfsc	status,2,c
  5269  010762  D008               	goto	l14124
  5270                           
  5271                           ;main.c: 319:     current_sensor_cal();
  5272  010764  ECAB  F0B2         	call	_current_sensor_cal	;wreg free
  5273                           
  5274                           ;main.c: 320:     WaitMs(4000);
  5275  010768  0EA0               	movlw	160
  5276  01076A  6EE6               	movwf	postinc1,c
  5277  01076C  0E0F               	movlw	15
  5278  01076E  6EE6               	movwf	postinc1,c
  5279  010770  ECAF  F0E2         	call	_WaitMs	;wreg free
  5280  010774                     l14124:
  5281                           
  5282                           ;main.c: 322:    V.sensor_set = 0;
  5283  010774  0101               	movlb	1	; () banked
  5284  010776  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5285                           
  5286                           ; BSR set to: 1
  5287                           ;main.c: 323:    V.system_stable = 1;
  5288  010778  0E01               	movlw	1
  5289  01077A  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5290                           
  5291                           ;main.c: 324:    break;
  5292  01077C  D01B               	goto	l14132
  5293  01077E                     l1361:
  5294                           
  5295                           ; BSR set to: 1
  5296                           ;main.c: 330:    P.SYSTEM_STABLE = 1;
  5297  01077E  81F7               	bsf	(_P+1)& (0+255),0,b	;volatile
  5298                           
  5299                           ;main.c: 331:    break;
  5300  010780  D019               	goto	l14132
  5301  010782                     l1363:
  5302                           
  5303                           ; BSR set to: 1
  5304                           ;main.c: 334:    V.ui_state = UI_STATE_INIT;
  5305  010782  6B07               	clrf	_V& (0+255),b	;volatile
  5306                           
  5307                           ;main.c: 335:    break;
  5308  010784  D017               	goto	l14132
  5309  010786                     l14130:
  5310  010786  0101               	movlb	1	; () banked
  5311  010788  5107               	movf	_V& (0+255),w,b	;volatile
  5312  01078A  6E0B               	movwf	(btemp+10)^0,c
  5313  01078C  6A0C               	clrf	(btemp+11)^0,c
  5314                           
  5315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5316                           ; Switch size 1, requested type "simple"
  5317                           ; Number of cases is 1, Range of values is 0 to 0
  5318                           ; switch strategies available:
  5319                           ; Name         Instructions Cycles
  5320                           ; simple_byte            4     3 (average)
  5321                           ;	Chosen strategy is simple_byte
  5322  01078E  500C               	movf	(btemp+11)^0,w,c
  5323  010790  0A00               	xorlw	0	; case 0
  5324  010792  A4D8               	btfss	status,2,c
  5325  010794  D7F6               	goto	l1363
  5326                           
  5327                           ; BSR set to: 1
  5328                           ; Switch size 1, requested type "simple"
  5329                           ; Number of cases is 5, Range of values is 0 to 5
  5330                           ; switch strategies available:
  5331                           ; Name         Instructions Cycles
  5332                           ; simple_byte           16     9 (average)
  5333                           ;	Chosen strategy is simple_byte
  5334  010796  500B               	movf	(btemp+10)^0,w,c
  5335  010798  0A00               	xorlw	0	; case 0
  5336  01079A  B4D8               	btfsc	status,2,c
  5337  01079C  D46D               	goto	l13986
  5338  01079E  0A01               	xorlw	1	; case 1
  5339  0107A0  B4D8               	btfsc	status,2,c
  5340  0107A2  D008               	goto	l14132
  5341  0107A4  0A02               	xorlw	2	; case 3
  5342  0107A6  B4D8               	btfsc	status,2,c
  5343  0107A8  D005               	goto	l14132
  5344  0107AA  0A07               	xorlw	7	; case 4
  5345  0107AC  B4D8               	btfsc	status,2,c
  5346  0107AE  D7E7               	goto	l1361
  5347  0107B0  0A01               	xorlw	1	; case 5
  5348  0107B2  D7E7               	goto	l1363
  5349  0107B4                     l14132:
  5350                           
  5351                           ; BSR set to: 1
  5352                           ;main.c: 338:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5353  0107B4  0E01               	movlw	1
  5354  0107B6  6EE6               	movwf	postinc1,c
  5355  0107B8  EC2D  F0E4         	call	_TimerDone	;wreg free
  5356  0107BC  5001               	movf	btemp^0,w,c
  5357  0107BE  B4D8               	btfsc	status,2,c
  5358  0107C0  D013               	goto	l14144
  5359  0107C2  EC23  F0E7         	call	_check_adc_scan	;wreg free
  5360  0107C6  5001               	movf	btemp^0,w,c
  5361  0107C8  B4D8               	btfsc	status,2,c
  5362  0107CA  D00E               	goto	l14144
  5363                           
  5364                           ;main.c: 342:    convert_adc_data();
  5365  0107CC  EC96  F0D7         	call	_convert_adc_data	;wreg free
  5366                           
  5367                           ;main.c: 346:    clear_adc_scan();
  5368  0107D0  EC37  F0E7         	call	_clear_adc_scan	;wreg free
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;main.c: 347:    start_adc_scan();
  5372  0107D4  EC57  F0DE         	call	_start_adc_scan	;wreg free
  5373                           
  5374                           ;main.c: 348:    StartTimer(TMR_ADC, 200);
  5375  0107D8  0EC8               	movlw	200
  5376  0107DA  6EE6               	movwf	postinc1,c
  5377  0107DC  0E00               	movlw	0
  5378  0107DE  6EE6               	movwf	postinc1,c
  5379  0107E0  0E01               	movlw	1
  5380  0107E2  6EE6               	movwf	postinc1,c
  5381  0107E4  ECBE  F0E1         	call	_StartTimer	;wreg free
  5382  0107E8                     l14144:
  5383                           
  5384                           ;main.c: 355:   if (TimerDone(TMR_DISPLAY)) {
  5385                           
  5386                           ;main.c: 351:   if (V.ticks) {
  5387  0107E8  0E0A               	movlw	10
  5388  0107EA  6EE6               	movwf	postinc1,c
  5389  0107EC  EC2D  F0E4         	call	_TimerDone	;wreg free
  5390  0107F0  5001               	movf	btemp^0,w,c
  5391  0107F2  B4D8               	btfsc	status,2,c
  5392  0107F4  EFA0  F088         	goto	l14228
  5393                           
  5394                           ;main.c: 356:    if (TimerDone(TMR_HELPDIS)) {
  5395  0107F8  0E09               	movlw	9
  5396  0107FA  6EE6               	movwf	postinc1,c
  5397  0107FC  EC2D  F0E4         	call	_TimerDone	;wreg free
  5398  010800  5001               	movf	btemp^0,w,c
  5399  010802  B4D8               	btfsc	status,2,c
  5400  010804  D004               	goto	l14152
  5401                           
  5402                           ;main.c: 357:     set_display_info(DIS_STR);
  5403  010806  0E00               	movlw	0
  5404  010808  6EE6               	movwf	postinc1,c
  5405  01080A  EC32  F0E6         	call	_set_display_info	;wreg free
  5406  01080E                     l14152:
  5407                           
  5408                           ;main.c: 359:    calc_model_data();
  5409  01080E  ECA8  F0AE         	call	_calc_model_data	;wreg free
  5410                           
  5411                           ; BSR set to: 57
  5412                           ;main.c: 366:     hid_display(&H);
  5413                           
  5414                           ;main.c: 361:    if (0) {
  5415  010812  0EC7               	movlw	low _H
  5416  010814  6EE6               	movwf	postinc1,c
  5417  010816  0E01               	movlw	high _H
  5418  010818  6EE6               	movwf	postinc1,c
  5419  01081A  EC67  F0C3         	call	_hid_display	;wreg free
  5420                           
  5421                           ;main.c: 367:     switch (H.hid_display) {
  5422  01081E  EF36  F088         	goto	l14200
  5423  010822                     l1371:
  5424                           
  5425                           ; BSR set to: 1
  5426                           ;main.c: 369:      V.calib = 0;
  5427  010822  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5428                           
  5429                           ; BSR set to: 1
  5430                           ;main.c: 370:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5431  010824  EE22  F021         	lfsr	2,_C+290	;volatile
  5432  010828  50DF               	movf	indf2,w,c
  5433  01082A  A4D8               	btfss	status,2,c
  5434  01082C  D002               	goto	l14162
  5435                           
  5436                           ; BSR set to: 1
  5437  01082E  0E20               	movlw	32
  5438  010830  D001               	goto	L1
  5439  010832                     l14162:
  5440                           
  5441                           ; BSR set to: 1
  5442  010832  0E44               	movlw	68
  5443  010834                     L1:
  5444  010834  6E0B               	movwf	(btemp+10)^0,c
  5445  010836  0E00               	movlw	0
  5446  010838  6E0C               	movwf	(btemp+11)^0,c
  5447                           
  5448                           ;stkvar	_main$3800 @ sp[(-17)+2]
  5449  01083A  0EF1               	movlw	-15
  5450  01083C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5451  010842  0EF2               	movlw	-14
  5452  010844  0060  F033  FFE3   	movff	btemp+11,plusw1
  5453                           
  5454                           ; BSR set to: 1
  5455  01084A  EE21  F37B         	lfsr	2,_C+124	;volatile
  5456  01084E  006F FF7B FFE6     	movff	postinc2,postinc1
  5457  010854  006F FF7B FFE6     	movff	postinc2,postinc1
  5458  01085A  006F FF7B FFE6     	movff	postinc2,postinc1
  5459  010860  006F FF7B FFE6     	movff	postinc2,postinc1
  5460                           
  5461                           ;stkvar	_main$3800 @ sp[(-21)+2]
  5462  010866  0EED               	movlw	-19
  5463  010868  006F FF8F FFE6     	movff	plusw1,postinc1
  5464  01086E  006F FF8F FFE6     	movff	plusw1,postinc1
  5465  010874  0E20               	movlw	low STR_24
  5466  010876  6EE6               	movwf	postinc1,c
  5467  010878  0EFD               	movlw	high STR_24
  5468  01087A  6EE6               	movwf	postinc1,c
  5469  01087C  0E00               	movlw	0
  5470  01087E  6EE6               	movwf	postinc1,c
  5471  010880  0E00               	movlw	0
  5472  010882  6EE6               	movwf	postinc1,c
  5473  010884  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5474  010888  0060  F007  FFE6   	movff	btemp,postinc1
  5475  01088E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5476  010894  0E0A               	movlw	10
  5477  010896  6EE6               	movwf	postinc1,c
  5478  010898  EC6E  F0D2         	call	_sprintf	;wreg free
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;main.c: 371:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5482  01089C  EE21  F373         	lfsr	2,_C+116	;volatile
  5483  0108A0  006F FF7B FFE6     	movff	postinc2,postinc1
  5484  0108A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5485  0108AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5486  0108B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5487  0108B8  0E0A               	movlw	low STR_25
  5488  0108BA  6EE6               	movwf	postinc1,c
  5489  0108BC  0EFD               	movlw	high STR_25
  5490  0108BE  6EE6               	movwf	postinc1,c
  5491  0108C0  0E00               	movlw	0
  5492  0108C2  6EE6               	movwf	postinc1,c
  5493  0108C4  0E01               	movlw	1
  5494  0108C6  6EE6               	movwf	postinc1,c
  5495  0108C8  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5496  0108CC  0060  F007  FFE6   	movff	btemp,postinc1
  5497  0108D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5498  0108D8  0E08               	movlw	8
  5499  0108DA  6EE6               	movwf	postinc1,c
  5500  0108DC  EC6E  F0D2         	call	_sprintf	;wreg free
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;main.c: 372:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5504  0108E0  EE21  F377         	lfsr	2,_C+120	;volatile
  5505  0108E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5506  0108EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5507  0108F0  006F FF7B FFE6     	movff	postinc2,postinc1
  5508  0108F6  006F FF7B FFE6     	movff	postinc2,postinc1
  5509  0108FC  0EF4               	movlw	low STR_26
  5510  0108FE  6EE6               	movwf	postinc1,c
  5511  010900  0EFC               	movlw	high STR_26
  5512  010902  6EE6               	movwf	postinc1,c
  5513  010904  0E00               	movlw	0
  5514  010906  6EE6               	movwf	postinc1,c
  5515  010908  0E02               	movlw	2
  5516  01090A  6EE6               	movwf	postinc1,c
  5517  01090C  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5518  010910  0060  F007  FFE6   	movff	btemp,postinc1
  5519  010916  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5520  01091C  0E08               	movlw	8
  5521  01091E  6EE6               	movwf	postinc1,c
  5522  010920  EC6E  F0D2         	call	_sprintf	;wreg free
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;main.c: 374:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5526  010924  EE22  F021         	lfsr	2,_C+290	;volatile
  5527  010928  50DF               	movf	indf2,w,c
  5528  01092A  A4D8               	btfss	status,2,c
  5529  01092C  D002               	goto	l14174
  5530                           
  5531                           ; BSR set to: 0
  5532  01092E  0E20               	movlw	32
  5533  010930  D001               	goto	L2
  5534  010932                     l14174:
  5535                           
  5536                           ; BSR set to: 0
  5537  010932  0E44               	movlw	68
  5538  010934                     L2:
  5539  010934  6E0B               	movwf	(btemp+10)^0,c
  5540  010936  0E00               	movlw	0
  5541  010938  6E0C               	movwf	(btemp+11)^0,c
  5542                           
  5543                           ;stkvar	_main$3804 @ sp[(-17)+0]
  5544  01093A  0EEF               	movlw	-17
  5545  01093C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5546  010942  0EF0               	movlw	-16
  5547  010944  0060  F033  FFE3   	movff	btemp+11,plusw1
  5548                           
  5549                           ; BSR set to: 0
  5550  01094A  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5551  01094E  006F FF7B FFE6     	movff	postinc2,postinc1
  5552  010954  006F FF7B FFE6     	movff	postinc2,postinc1
  5553  01095A  006F FF7B FFE6     	movff	postinc2,postinc1
  5554  010960  006F FF7B FFE6     	movff	postinc2,postinc1
  5555                           
  5556                           ;stkvar	_main$3804 @ sp[(-21)+0]
  5557  010966  0EEB               	movlw	-21
  5558  010968  006F FF8F FFE6     	movff	plusw1,postinc1
  5559  01096E  006F FF8F FFE6     	movff	plusw1,postinc1
  5560  010974  0EDE               	movlw	low STR_27
  5561  010976  6EE6               	movwf	postinc1,c
  5562  010978  0EFC               	movlw	high STR_27
  5563  01097A  6EE6               	movwf	postinc1,c
  5564  01097C  0E01               	movlw	1
  5565  01097E  6EE6               	movwf	postinc1,c
  5566  010980  0E00               	movlw	0
  5567  010982  6EE6               	movwf	postinc1,c
  5568  010984  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5569  010988  0060  F007  FFE6   	movff	btemp,postinc1
  5570  01098E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5571  010994  0E0A               	movlw	10
  5572  010996  6EE6               	movwf	postinc1,c
  5573  010998  EC6E  F0D2         	call	_sprintf	;wreg free
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;main.c: 375:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5577  01099C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5578  0109A0  006F FF7B FFE6     	movff	postinc2,postinc1
  5579  0109A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5580  0109AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5581  0109B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5582  0109B8  0EC8               	movlw	low STR_28
  5583  0109BA  6EE6               	movwf	postinc1,c
  5584  0109BC  0EFC               	movlw	high STR_28
  5585  0109BE  6EE6               	movwf	postinc1,c
  5586  0109C0  0E01               	movlw	1
  5587  0109C2  6EE6               	movwf	postinc1,c
  5588  0109C4  0E01               	movlw	1
  5589  0109C6  6EE6               	movwf	postinc1,c
  5590  0109C8  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5591  0109CC  0060  F007  FFE6   	movff	btemp,postinc1
  5592  0109D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5593  0109D8  0E08               	movlw	8
  5594  0109DA  6EE6               	movwf	postinc1,c
  5595  0109DC  EC6E  F0D2         	call	_sprintf	;wreg free
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;main.c: 376:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5599  0109E0  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5600  0109E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5601  0109EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5602  0109F0  006F FF7B FFE6     	movff	postinc2,postinc1
  5603  0109F6  006F FF7B FFE6     	movff	postinc2,postinc1
  5604  0109FC  0EB2               	movlw	low STR_29
  5605  0109FE  6EE6               	movwf	postinc1,c
  5606  010A00  0EFC               	movlw	high STR_29
  5607  010A02  6EE6               	movwf	postinc1,c
  5608  010A04  0E01               	movlw	1
  5609  010A06  6EE6               	movwf	postinc1,c
  5610  010A08  0E02               	movlw	2
  5611  010A0A  6EE6               	movwf	postinc1,c
  5612  010A0C  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5613  010A10  0060  F007  FFE6   	movff	btemp,postinc1
  5614  010A16  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5615  010A1C  0E08               	movlw	8
  5616  010A1E  6EE6               	movwf	postinc1,c
  5617  010A20  EC6E  F0D2         	call	_sprintf	;wreg free
  5618                           
  5619                           ;main.c: 377:      break;
  5620  010A24  D339               	goto	l14202
  5621  010A26                     l1381:
  5622                           
  5623                           ; BSR set to: 1
  5624                           ;main.c: 379:      V.calib = 0;
  5625  010A26  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5626                           
  5627                           ; BSR set to: 1
  5628                           ;main.c: 380:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5629  010A28  EE21  F303         	lfsr	2,_C+4	;volatile
  5630  010A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5631  010A32  006F FF7B FFE6     	movff	postinc2,postinc1
  5632  010A38  006F FF7B FFE6     	movff	postinc2,postinc1
  5633  010A3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5634  010A44  EE21  F313         	lfsr	2,_C+20	;volatile
  5635  010A48  006F FF7B FFE6     	movff	postinc2,postinc1
  5636  010A4E  006F FF7B FFE6     	movff	postinc2,postinc1
  5637  010A54  006F FF7B FFE6     	movff	postinc2,postinc1
  5638  010A5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5639  010A60  0E78               	movlw	low STR_30
  5640  010A62  6EE6               	movwf	postinc1,c
  5641  010A64  0EFD               	movlw	high STR_30
  5642  010A66  6EE6               	movwf	postinc1,c
  5643  010A68  0E00               	movlw	0
  5644  010A6A  6EE6               	movwf	postinc1,c
  5645  010A6C  0E00               	movlw	0
  5646  010A6E  6EE6               	movwf	postinc1,c
  5647  010A70  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5648  010A74  0060  F007  FFE6   	movff	btemp,postinc1
  5649  010A7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5650  010A80  0E0C               	movlw	12
  5651  010A82  6EE6               	movwf	postinc1,c
  5652  010A84  EC6E  F0D2         	call	_sprintf	;wreg free
  5653                           
  5654                           ;main.c: 381:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5655  010A88  EE21  F2FF         	lfsr	2,_C
  5656  010A8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5657  010A92  006F FF7B FFE6     	movff	postinc2,postinc1
  5658  010A98  006F FF7B FFE6     	movff	postinc2,postinc1
  5659  010A9E  006F FF7B FFE6     	movff	postinc2,postinc1
  5660  010AA4  EE21  F30F         	lfsr	2,_C+16	;volatile
  5661  010AA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5662  010AAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5663  010AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5664  010ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5665  010AC0  0E4C               	movlw	low STR_31
  5666  010AC2  6EE6               	movwf	postinc1,c
  5667  010AC4  0EFD               	movlw	high STR_31
  5668  010AC6  6EE6               	movwf	postinc1,c
  5669  010AC8  0E00               	movlw	0
  5670  010ACA  6EE6               	movwf	postinc1,c
  5671  010ACC  0E01               	movlw	1
  5672  010ACE  6EE6               	movwf	postinc1,c
  5673  010AD0  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5674  010AD4  0060  F007  FFE6   	movff	btemp,postinc1
  5675  010ADA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5676  010AE0  0E0C               	movlw	12
  5677  010AE2  6EE6               	movwf	postinc1,c
  5678  010AE4  EC6E  F0D2         	call	_sprintf	;wreg free
  5679                           
  5680                           ;main.c: 382:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5681  010AE8  EE21  F33F         	lfsr	2,_C+64	;volatile
  5682  010AEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5683  010AF2  006F FF7B FFE6     	movff	postinc2,postinc1
  5684  010AF8  006F FF7B FFE6     	movff	postinc2,postinc1
  5685  010AFE  006F FF7B FFE6     	movff	postinc2,postinc1
  5686  010B04  EE21  F307         	lfsr	2,_C+8	;volatile
  5687  010B08  006F FF7B FFE6     	movff	postinc2,postinc1
  5688  010B0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5689  010B14  006F FF7B FFE6     	movff	postinc2,postinc1
  5690  010B1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5691  010B20  0E62               	movlw	low STR_32
  5692  010B22  6EE6               	movwf	postinc1,c
  5693  010B24  0EFD               	movlw	high STR_32
  5694  010B26  6EE6               	movwf	postinc1,c
  5695  010B28  0E00               	movlw	0
  5696  010B2A  6EE6               	movwf	postinc1,c
  5697  010B2C  0E02               	movlw	2
  5698  010B2E  6EE6               	movwf	postinc1,c
  5699  010B30  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5700  010B34  0060  F007  FFE6   	movff	btemp,postinc1
  5701  010B3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5702  010B40  0E0C               	movlw	12
  5703  010B42  6EE6               	movwf	postinc1,c
  5704  010B44  EC6E  F0D2         	call	_sprintf	;wreg free
  5705                           
  5706                           ;main.c: 384:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5707  010B48  EE21  F39F         	lfsr	2,_C+160	;volatile
  5708  010B4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5709  010B52  006F FF7B FFE6     	movff	postinc2,postinc1
  5710  010B58  006F FF7B FFE6     	movff	postinc2,postinc1
  5711  010B5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5712  010B64  0E70               	movlw	low STR_33
  5713  010B66  6EE6               	movwf	postinc1,c
  5714  010B68  0EFC               	movlw	high STR_33
  5715  010B6A  6EE6               	movwf	postinc1,c
  5716  010B6C  0E01               	movlw	1
  5717  010B6E  6EE6               	movwf	postinc1,c
  5718  010B70  0E00               	movlw	0
  5719  010B72  6EE6               	movwf	postinc1,c
  5720  010B74  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5721  010B78  0060  F007  FFE6   	movff	btemp,postinc1
  5722  010B7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5723  010B84  0E08               	movlw	8
  5724  010B86  6EE6               	movwf	postinc1,c
  5725  010B88  EC6E  F0D2         	call	_sprintf	;wreg free
  5726                           
  5727                           ;main.c: 385:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5728  010B8C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5729  010B90  006F FF7B FFE6     	movff	postinc2,postinc1
  5730  010B96  006F FF7B FFE6     	movff	postinc2,postinc1
  5731  010B9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5732  010BA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5733  010BA8  0E86               	movlw	low STR_34
  5734  010BAA  6EE6               	movwf	postinc1,c
  5735  010BAC  0EFC               	movlw	high STR_34
  5736  010BAE  6EE6               	movwf	postinc1,c
  5737  010BB0  0E01               	movlw	1
  5738  010BB2  6EE6               	movwf	postinc1,c
  5739  010BB4  0E01               	movlw	1
  5740  010BB6  6EE6               	movwf	postinc1,c
  5741  010BB8  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5742  010BBC  0060  F007  FFE6   	movff	btemp,postinc1
  5743  010BC2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5744  010BC8  0E08               	movlw	8
  5745  010BCA  6EE6               	movwf	postinc1,c
  5746  010BCC  EC6E  F0D2         	call	_sprintf	;wreg free
  5747                           
  5748                           ;main.c: 386:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5749  010BD0  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5750  010BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5751  010BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5752  010BE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5753  010BE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5754  010BEC  EE21  F39F         	lfsr	2,_C+160	;volatile
  5755  010BF0  006F FF7B FFE6     	movff	postinc2,postinc1
  5756  010BF6  006F FF7B FFE6     	movff	postinc2,postinc1
  5757  010BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5758  010C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5759  010C08  EC6F  F0A3         	call	___fladd	;wreg free
  5760  010C0C  0060  F007  FFE6   	movff	btemp,postinc1
  5761  010C12  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5762  010C18  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5763  010C1E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5764  010C24  0E9C               	movlw	low STR_35
  5765  010C26  6EE6               	movwf	postinc1,c
  5766  010C28  0EFC               	movlw	high STR_35
  5767  010C2A  6EE6               	movwf	postinc1,c
  5768  010C2C  0E01               	movlw	1
  5769  010C2E  6EE6               	movwf	postinc1,c
  5770  010C30  0E02               	movlw	2
  5771  010C32  6EE6               	movwf	postinc1,c
  5772  010C34  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5773  010C38  0060  F007  FFE6   	movff	btemp,postinc1
  5774  010C3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5775  010C44  0E08               	movlw	8
  5776  010C46  6EE6               	movwf	postinc1,c
  5777  010C48  EC6E  F0D2         	call	_sprintf	;wreg free
  5778                           
  5779                           ;main.c: 387:      break;
  5780  010C4C  D225               	goto	l14202
  5781  010C4E                     l1382:
  5782                           
  5783                           ; BSR set to: 1
  5784                           ;main.c: 389:      V.calib = 0;
  5785  010C4E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5786                           
  5787                           ; BSR set to: 1
  5788                           ;main.c: 390:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5789  010C50  EE21  F37F         	lfsr	2,_C+128	;volatile
  5790  010C54  006F FF7B FFE6     	movff	postinc2,postinc1
  5791  010C5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5792  010C60  006F FF7B FFE6     	movff	postinc2,postinc1
  5793  010C66  006F FF7B FFE6     	movff	postinc2,postinc1
  5794  010C6C  0EE8               	movlw	low STR_36
  5795  010C6E  6EE6               	movwf	postinc1,c
  5796  010C70  0EFB               	movlw	high STR_36
  5797  010C72  6EE6               	movwf	postinc1,c
  5798  010C74  0E00               	movlw	0
  5799  010C76  6EE6               	movwf	postinc1,c
  5800  010C78  0E00               	movlw	0
  5801  010C7A  6EE6               	movwf	postinc1,c
  5802  010C7C  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5803  010C80  0060  F007  FFE6   	movff	btemp,postinc1
  5804  010C86  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5805  010C8C  0E08               	movlw	8
  5806  010C8E  6EE6               	movwf	postinc1,c
  5807  010C90  EC6E  F0D2         	call	_sprintf	;wreg free
  5808                           
  5809                           ;main.c: 391:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5810  010C94  EE21  F393         	lfsr	2,_C+148	;volatile
  5811  010C98  006F FF7B FFE6     	movff	postinc2,postinc1
  5812  010C9E  006F FF7B FFE6     	movff	postinc2,postinc1
  5813  010CA4  006F FF7B FFE6     	movff	postinc2,postinc1
  5814  010CAA  006F FF7B FFE6     	movff	postinc2,postinc1
  5815  010CB0  EE21  F38F         	lfsr	2,_C+144	;volatile
  5816  010CB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5817  010CBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5818  010CC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5819  010CC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5820  010CCC  0E2D               	movlw	low STR_37
  5821  010CCE  6EE6               	movwf	postinc1,c
  5822  010CD0  0EFC               	movlw	high STR_37
  5823  010CD2  6EE6               	movwf	postinc1,c
  5824  010CD4  0E00               	movlw	0
  5825  010CD6  6EE6               	movwf	postinc1,c
  5826  010CD8  0E01               	movlw	1
  5827  010CDA  6EE6               	movwf	postinc1,c
  5828  010CDC  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5829  010CE0  0060  F007  FFE6   	movff	btemp,postinc1
  5830  010CE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5831  010CEC  0E0C               	movlw	12
  5832  010CEE  6EE6               	movwf	postinc1,c
  5833  010CF0  EC6E  F0D2         	call	_sprintf	;wreg free
  5834                           
  5835                           ;main.c: 392:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5836  010CF4  EE21  F30F         	lfsr	2,_C+16	;volatile
  5837  010CF8  006F FF7B FFE6     	movff	postinc2,postinc1
  5838  010CFE  006F FF7B FFE6     	movff	postinc2,postinc1
  5839  010D04  006F FF7B FFE6     	movff	postinc2,postinc1
  5840  010D0A  006F FF7B FFE6     	movff	postinc2,postinc1
  5841  010D10  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5842  010D14  006F FF78  F00B    	movff	postinc2,btemp+10
  5843  010D1A  006F FF74  F00C    	movff	postdec2,btemp+11
  5844  010D20  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5845  010D26  0060  F033  FFE6   	movff	btemp+11,postinc1
  5846  010D2C  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5847  010D30  006F FF78  F00B    	movff	postinc2,btemp+10
  5848  010D36  006F FF74  F00C    	movff	postdec2,btemp+11
  5849  010D3C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5850  010D42  0060  F033  FFE6   	movff	btemp+11,postinc1
  5851  010D48  0E00               	movlw	0
  5852  010D4A  6EE6               	movwf	postinc1,c
  5853  010D4C  0E05               	movlw	5
  5854  010D4E  6EE6               	movwf	postinc1,c
  5855  010D50  ECF3  F0D2         	call	_spinners	;wreg free
  5856  010D54  5001               	movf	btemp^0,w,c
  5857  010D56  6EE6               	movwf	postinc1,c
  5858  010D58  0E00               	movlw	0
  5859  010D5A  6EE6               	movwf	postinc1,c
  5860  010D5C  0E4E               	movlw	low STR_38
  5861  010D5E  6EE6               	movwf	postinc1,c
  5862  010D60  0EFB               	movlw	high STR_38
  5863  010D62  6EE6               	movwf	postinc1,c
  5864  010D64  0E00               	movlw	0
  5865  010D66  6EE6               	movwf	postinc1,c
  5866  010D68  0E02               	movlw	2
  5867  010D6A  6EE6               	movwf	postinc1,c
  5868  010D6C  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5869  010D70  0060  F007  FFE6   	movff	btemp,postinc1
  5870  010D76  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5871  010D7C  0E0E               	movlw	14
  5872  010D7E  6EE6               	movwf	postinc1,c
  5873  010D80  EC6E  F0D2         	call	_sprintf	;wreg free
  5874                           
  5875                           ;main.c: 394:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5876  010D84  EE21  F387         	lfsr	2,_C+136	;volatile
  5877  010D88  006F FF7B FFE6     	movff	postinc2,postinc1
  5878  010D8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5879  010D94  006F FF7B FFE6     	movff	postinc2,postinc1
  5880  010D9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5881  010DA0  0ED1               	movlw	low STR_39
  5882  010DA2  6EE6               	movwf	postinc1,c
  5883  010DA4  0EFB               	movlw	high STR_39
  5884  010DA6  6EE6               	movwf	postinc1,c
  5885  010DA8  0E01               	movlw	1
  5886  010DAA  6EE6               	movwf	postinc1,c
  5887  010DAC  0E00               	movlw	0
  5888  010DAE  6EE6               	movwf	postinc1,c
  5889  010DB0  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5890  010DB4  0060  F007  FFE6   	movff	btemp,postinc1
  5891  010DBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5892  010DC0  0E08               	movlw	8
  5893  010DC2  6EE6               	movwf	postinc1,c
  5894  010DC4  EC6E  F0D2         	call	_sprintf	;wreg free
  5895                           
  5896                           ;main.c: 395:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5897  010DC8  EE22  F00D         	lfsr	2,_C+270	;volatile
  5898  010DCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5899  010DD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5900  010DD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5901  010DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5902  010DE4  EE22  F019         	lfsr	2,_C+282	;volatile
  5903  010DE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5904  010DEE  006F FF7B FFE6     	movff	postinc2,postinc1
  5905  010DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  5906  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  5907  010E00  0EFF               	movlw	low STR_40
  5908  010E02  6EE6               	movwf	postinc1,c
  5909  010E04  0EFB               	movlw	high STR_40
  5910  010E06  6EE6               	movwf	postinc1,c
  5911  010E08  0E01               	movlw	1
  5912  010E0A  6EE6               	movwf	postinc1,c
  5913  010E0C  0E01               	movlw	1
  5914  010E0E  6EE6               	movwf	postinc1,c
  5915  010E10  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5916  010E14  0060  F007  FFE6   	movff	btemp,postinc1
  5917  010E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5918  010E20  0E0C               	movlw	12
  5919  010E22  6EE6               	movwf	postinc1,c
  5920  010E24  EC6E  F0D2         	call	_sprintf	;wreg free
  5921                           
  5922                           ;main.c: 396:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5923  010E28  EE22  F011         	lfsr	2,_C+274	;volatile
  5924  010E2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5925  010E32  006F FF7B FFE6     	movff	postinc2,postinc1
  5926  010E38  006F FF7B FFE6     	movff	postinc2,postinc1
  5927  010E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5928  010E44  EE22  F01D         	lfsr	2,_C+286	;volatile
  5929  010E48  006F FF7B FFE6     	movff	postinc2,postinc1
  5930  010E4E  006F FF7B FFE6     	movff	postinc2,postinc1
  5931  010E54  006F FF7B FFE6     	movff	postinc2,postinc1
  5932  010E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5933  010E60  0E16               	movlw	low STR_41
  5934  010E62  6EE6               	movwf	postinc1,c
  5935  010E64  0EFC               	movlw	high STR_41
  5936  010E66  6EE6               	movwf	postinc1,c
  5937  010E68  0E01               	movlw	1
  5938  010E6A  6EE6               	movwf	postinc1,c
  5939  010E6C  0E02               	movlw	2
  5940  010E6E  6EE6               	movwf	postinc1,c
  5941  010E70  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  5942  010E74  0060  F007  FFE6   	movff	btemp,postinc1
  5943  010E7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5944  010E80  0E0C               	movlw	12
  5945  010E82  6EE6               	movwf	postinc1,c
  5946  010E84  EC6E  F0D2         	call	_sprintf	;wreg free
  5947                           
  5948                           ;main.c: 397:      break;
  5949  010E88  D107               	goto	l14202
  5950  010E8A                     l14186:
  5951                           
  5952                           ; BSR set to: 1
  5953                           ;main.c: 399:      if (!V.calib) {
  5954  010E8A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5955  010E8C  A4D8               	btfss	status,2,c
  5956  010E8E  D02D               	goto	l14190
  5957                           
  5958                           ; BSR set to: 1
  5959                           ;main.c: 400:       lp_filter(0.0, i, -1);
  5960  010E90  0EFF               	movlw	255
  5961  010E92  6EE6               	movwf	postinc1,c
  5962                           
  5963                           ;stkvar	_i @ sp[(-18)+14]
  5964  010E94  0EFC               	movlw	-4
  5965  010E96  50E3               	movf	plusw1,w,c
  5966  010E98  6EE6               	movwf	postinc1,c
  5967  010E9A  0E00               	movlw	0
  5968  010E9C  6EE6               	movwf	postinc1,c
  5969  010E9E  0E00               	movlw	0
  5970  010EA0  6EE6               	movwf	postinc1,c
  5971  010EA2  0E00               	movlw	0
  5972  010EA4  6EE6               	movwf	postinc1,c
  5973  010EA6  0E00               	movlw	0
  5974  010EA8  6EE6               	movwf	postinc1,c
  5975  010EAA  EC80  F0C6         	call	_lp_filter	;wreg free
  5976                           
  5977                           ;main.c: 401:       lp_filter(0.0, j, -1);
  5978  010EAE  0EFF               	movlw	255
  5979  010EB0  6EE6               	movwf	postinc1,c
  5980                           
  5981                           ;stkvar	_j @ sp[(-18)+13]
  5982  010EB2  0EFB               	movlw	-5
  5983  010EB4  50E3               	movf	plusw1,w,c
  5984  010EB6  6EE6               	movwf	postinc1,c
  5985  010EB8  0E00               	movlw	0
  5986  010EBA  6EE6               	movwf	postinc1,c
  5987  010EBC  0E00               	movlw	0
  5988  010EBE  6EE6               	movwf	postinc1,c
  5989  010EC0  0E00               	movlw	0
  5990  010EC2  6EE6               	movwf	postinc1,c
  5991  010EC4  0E00               	movlw	0
  5992  010EC6  6EE6               	movwf	postinc1,c
  5993  010EC8  EC80  F0C6         	call	_lp_filter	;wreg free
  5994                           
  5995                           ;main.c: 402:       lp_filter(0.0, k, -1);
  5996  010ECC  0EFF               	movlw	255
  5997  010ECE  6EE6               	movwf	postinc1,c
  5998                           
  5999                           ;stkvar	_k @ sp[(-18)+12]
  6000  010ED0  0EFA               	movlw	-6
  6001  010ED2  50E3               	movf	plusw1,w,c
  6002  010ED4  6EE6               	movwf	postinc1,c
  6003  010ED6  0E00               	movlw	0
  6004  010ED8  6EE6               	movwf	postinc1,c
  6005  010EDA  0E00               	movlw	0
  6006  010EDC  6EE6               	movwf	postinc1,c
  6007  010EDE  0E00               	movlw	0
  6008  010EE0  6EE6               	movwf	postinc1,c
  6009  010EE2  0E00               	movlw	0
  6010  010EE4  6EE6               	movwf	postinc1,c
  6011  010EE6  EC80  F0C6         	call	_lp_filter	;wreg free
  6012  010EEA                     l14190:
  6013                           
  6014                           ;main.c: 404:      V.calib = 1;
  6015  010EEA  0E01               	movlw	1
  6016  010EEC  0101               	movlb	1	; () banked
  6017  010EEE  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6018                           
  6019                           ; BSR set to: 1
  6020                           ;main.c: 405:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6021                           ;stkvar	_inp_index @ sp[(-17)+11]
  6022  010EF0  0EFA               	movlw	-6
  6023  010EF2  50E3               	movf	plusw1,w,c
  6024  010EF4  6EE6               	movwf	postinc1,c
  6025  010EF6  0E00               	movlw	0
  6026  010EF8  6EE6               	movwf	postinc1,c
  6027                           
  6028                           ;stkvar	_i @ sp[(-19)+14]
  6029  010EFA  0EFB               	movlw	-5
  6030  010EFC  50E3               	movf	plusw1,w,c
  6031  010EFE  0D04               	mullw	4
  6032  010F00  0EFF               	movlw	low _C
  6033  010F02  24F3               	addwf	243,w,c
  6034  010F04  6ED9               	movwf	fsr2l,c
  6035  010F06  0E06               	movlw	high _C
  6036  010F08  20F4               	addwfc	prodh,w,c
  6037  010F0A  6EDA               	movwf	fsr2h,c
  6038  010F0C  006F FF7B FFE6     	movff	postinc2,postinc1
  6039  010F12  006F FF7B FFE6     	movff	postinc2,postinc1
  6040  010F18  006F FF7B FFE6     	movff	postinc2,postinc1
  6041  010F1E  006F FF7B FFE6     	movff	postinc2,postinc1
  6042                           
  6043                           ;stkvar	_i @ sp[(-23)+14]
  6044  010F24  0EF7               	movlw	-9
  6045  010F26  50E3               	movf	plusw1,w,c
  6046  010F28  6EE6               	movwf	postinc1,c
  6047  010F2A  EC41  F0E6         	call	_get_raw_result	;wreg free
  6048  010F2E  0060  F007  FFE6   	movff	btemp,postinc1
  6049  010F34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6050  010F3A  0E8E               	movlw	low STR_42
  6051  010F3C  6EE6               	movwf	postinc1,c
  6052  010F3E  0EFD               	movlw	high STR_42
  6053  010F40  6EE6               	movwf	postinc1,c
  6054  010F42  0E00               	movlw	0
  6055  010F44  6EE6               	movwf	postinc1,c
  6056  010F46  0E00               	movlw	0
  6057  010F48  6EE6               	movwf	postinc1,c
  6058  010F4A  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  6059  010F4E  0060  F007  FFE6   	movff	btemp,postinc1
  6060  010F54  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6061  010F5A  0E0C               	movlw	12
  6062  010F5C  6EE6               	movwf	postinc1,c
  6063  010F5E  EC6E  F0D2         	call	_sprintf	;wreg free
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;main.c: 406:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6067                           ;stkvar	_inp_index @ sp[(-17)+11]
  6068  010F62  0EFA               	movlw	-6
  6069  010F64  50E3               	movf	plusw1,w,c
  6070  010F66  6E0B               	movwf	(btemp+10)^0,c
  6071  010F68  6A0C               	clrf	(btemp+11)^0,c
  6072  010F6A  0E01               	movlw	1
  6073  010F6C  260B               	addwf	(btemp+10)^0,f,c
  6074  010F6E  0E00               	movlw	0
  6075  010F70  220C               	addwfc	(btemp+11)^0,f,c
  6076  010F72  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6077  010F78  0060  F033  FFE6   	movff	btemp+11,postinc1
  6078                           
  6079                           ;stkvar	_j @ sp[(-19)+13]
  6080  010F7E  0EFA               	movlw	-6
  6081  010F80  50E3               	movf	plusw1,w,c
  6082  010F82  0D04               	mullw	4
  6083  010F84  0EFF               	movlw	low _C
  6084  010F86  24F3               	addwf	243,w,c
  6085  010F88  6ED9               	movwf	fsr2l,c
  6086  010F8A  0E06               	movlw	high _C
  6087  010F8C  20F4               	addwfc	prodh,w,c
  6088  010F8E  6EDA               	movwf	fsr2h,c
  6089  010F90  006F FF7B FFE6     	movff	postinc2,postinc1
  6090  010F96  006F FF7B FFE6     	movff	postinc2,postinc1
  6091  010F9C  006F FF7B FFE6     	movff	postinc2,postinc1
  6092  010FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6093                           
  6094                           ;stkvar	_j @ sp[(-23)+13]
  6095  010FA8  0EF6               	movlw	-10
  6096  010FAA  50E3               	movf	plusw1,w,c
  6097  010FAC  6EE6               	movwf	postinc1,c
  6098  010FAE  EC41  F0E6         	call	_get_raw_result	;wreg free
  6099  010FB2  0060  F007  FFE6   	movff	btemp,postinc1
  6100  010FB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6101  010FBE  0E8E               	movlw	low STR_42
  6102  010FC0  6EE6               	movwf	postinc1,c
  6103  010FC2  0EFD               	movlw	high STR_42
  6104  010FC4  6EE6               	movwf	postinc1,c
  6105  010FC6  0E00               	movlw	0
  6106  010FC8  6EE6               	movwf	postinc1,c
  6107  010FCA  0E01               	movlw	1
  6108  010FCC  6EE6               	movwf	postinc1,c
  6109  010FCE  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  6110  010FD2  0060  F007  FFE6   	movff	btemp,postinc1
  6111  010FD8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6112  010FDE  0E0C               	movlw	12
  6113  010FE0  6EE6               	movwf	postinc1,c
  6114  010FE2  EC6E  F0D2         	call	_sprintf	;wreg free
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;main.c: 407:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6118                           ;stkvar	_inp_index @ sp[(-17)+11]
  6119  010FE6  0EFA               	movlw	-6
  6120  010FE8  50E3               	movf	plusw1,w,c
  6121  010FEA  6E0B               	movwf	(btemp+10)^0,c
  6122  010FEC  6A0C               	clrf	(btemp+11)^0,c
  6123  010FEE  0E02               	movlw	2
  6124  010FF0  260B               	addwf	(btemp+10)^0,f,c
  6125  010FF2  0E00               	movlw	0
  6126  010FF4  220C               	addwfc	(btemp+11)^0,f,c
  6127  010FF6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6128  010FFC  0060  F033  FFE6   	movff	btemp+11,postinc1
  6129                           
  6130                           ;stkvar	_k @ sp[(-19)+12]
  6131  011002  0EF9               	movlw	-7
  6132  011004  50E3               	movf	plusw1,w,c
  6133  011006  0D04               	mullw	4
  6134  011008  0EFF               	movlw	low _C
  6135  01100A  24F3               	addwf	243,w,c
  6136  01100C  6ED9               	movwf	fsr2l,c
  6137  01100E  0E06               	movlw	high _C
  6138  011010  20F4               	addwfc	prodh,w,c
  6139  011012  6EDA               	movwf	fsr2h,c
  6140  011014  006F FF7B FFE6     	movff	postinc2,postinc1
  6141  01101A  006F FF7B FFE6     	movff	postinc2,postinc1
  6142  011020  006F FF7B FFE6     	movff	postinc2,postinc1
  6143  011026  006F FF7B FFE6     	movff	postinc2,postinc1
  6144                           
  6145                           ;stkvar	_k @ sp[(-23)+12]
  6146  01102C  0EF5               	movlw	-11
  6147  01102E  50E3               	movf	plusw1,w,c
  6148  011030  6EE6               	movwf	postinc1,c
  6149  011032  EC41  F0E6         	call	_get_raw_result	;wreg free
  6150  011036  0060  F007  FFE6   	movff	btemp,postinc1
  6151  01103C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6152  011042  0E8E               	movlw	low STR_42
  6153  011044  6EE6               	movwf	postinc1,c
  6154  011046  0EFD               	movlw	high STR_42
  6155  011048  6EE6               	movwf	postinc1,c
  6156  01104A  0E00               	movlw	0
  6157  01104C  6EE6               	movwf	postinc1,c
  6158  01104E  0E02               	movlw	2
  6159  011050  6EE6               	movwf	postinc1,c
  6160  011052  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  6161  011056  0060  F007  FFE6   	movff	btemp,postinc1
  6162  01105C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6163  011062  0E0C               	movlw	12
  6164  011064  6EE6               	movwf	postinc1,c
  6165  011066  EC6E  F0D2         	call	_sprintf	;wreg free
  6166                           
  6167                           ;main.c: 408:      break;
  6168  01106A  D016               	goto	l14202
  6169  01106C                     l14200:
  6170  01106C  0101               	movlb	1	; () banked
  6171  01106E  51C7               	movf	_H& (0+255),w,b
  6172  011070  6E0B               	movwf	(btemp+10)^0,c
  6173  011072  6A0C               	clrf	(btemp+11)^0,c
  6174                           
  6175                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6176                           ; Switch size 1, requested type "simple"
  6177                           ; Number of cases is 1, Range of values is 0 to 0
  6178                           ; switch strategies available:
  6179                           ; Name         Instructions Cycles
  6180                           ; simple_byte            4     3 (average)
  6181                           ;	Chosen strategy is simple_byte
  6182  011074  500C               	movf	(btemp+11)^0,w,c
  6183  011076  0A00               	xorlw	0	; case 0
  6184  011078  A4D8               	btfss	status,2,c
  6185  01107A  D00E               	goto	l14202
  6186                           
  6187                           ; BSR set to: 1
  6188                           ; Switch size 1, requested type "simple"
  6189                           ; Number of cases is 4, Range of values is 0 to 3
  6190                           ; switch strategies available:
  6191                           ; Name         Instructions Cycles
  6192                           ; simple_byte           13     7 (average)
  6193                           ;	Chosen strategy is simple_byte
  6194  01107C  500B               	movf	(btemp+10)^0,w,c
  6195  01107E  0A00               	xorlw	0	; case 0
  6196  011080  B4D8               	btfsc	status,2,c
  6197  011082  D4D1               	goto	l1381
  6198  011084  0A01               	xorlw	1	; case 1
  6199  011086  B4D8               	btfsc	status,2,c
  6200  011088  EF11  F084         	goto	l1371
  6201  01108C  0A03               	xorlw	3	; case 2
  6202  01108E  B4D8               	btfsc	status,2,c
  6203  011090  D5DE               	goto	l1382
  6204  011092  0A01               	xorlw	1	; case 3
  6205  011094  B4D8               	btfsc	status,2,c
  6206  011096  D6F9               	goto	l14186
  6207  011098                     l14202:
  6208                           
  6209                           ;main.c: 412:     clear_hid_pflags(&H);
  6210  011098  0EC7               	movlw	low _H
  6211  01109A  6EE6               	movwf	postinc1,c
  6212  01109C  0E01               	movlw	high _H
  6213  01109E  6EE6               	movwf	postinc1,c
  6214  0110A0  ECF1  F0DD         	call	_clear_hid_pflags	;wreg free
  6215                           
  6216                           ;main.c: 414:    StartTimer(TMR_DISPLAY, 250);
  6217  0110A4  0EFA               	movlw	250
  6218  0110A6  6EE6               	movwf	postinc1,c
  6219  0110A8  0E00               	movlw	0
  6220  0110AA  6EE6               	movwf	postinc1,c
  6221  0110AC  0E0A               	movlw	10
  6222  0110AE  6EE6               	movwf	postinc1,c
  6223  0110B0  ECBE  F0E1         	call	_StartTimer	;wreg free
  6224                           
  6225                           ;main.c: 415:    V.enter = check_enter_button(&H);
  6226  0110B4  0EC7               	movlw	low _H
  6227  0110B6  6EE6               	movwf	postinc1,c
  6228  0110B8  0E01               	movlw	high _H
  6229  0110BA  6EE6               	movwf	postinc1,c
  6230  0110BC  ECE5  F0DC         	call	_check_enter_button	;wreg free
  6231  0110C0  5001               	movf	btemp^0,w,c
  6232  0110C2  0101               	movlb	1	; () banked
  6233  0110C4  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6234                           
  6235                           ; BSR set to: 1
  6236                           ;main.c: 416:    if (V.enter && (H.hid_display != HID_AUX)) {
  6237  0110C6  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6238  0110C8  B4D8               	btfsc	status,2,c
  6239  0110CA  D011               	goto	l14216
  6240                           
  6241                           ; BSR set to: 1
  6242  0110CC  0E03               	movlw	3
  6243  0110CE  19C7               	xorwf	_H& (0+255),w,b
  6244  0110D0  B4D8               	btfsc	status,2,c
  6245  0110D2  D00D               	goto	l14216
  6246                           
  6247                           ; BSR set to: 1
  6248                           ;main.c: 417:     V.enter = 0;
  6249  0110D4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6250                           
  6251                           ; BSR set to: 1
  6252                           ;main.c: 418:     V.screen = ~V.screen;
  6253  0110D6  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6254  0110D8  D002               	goto	u13560
  6255  0110DA  0E01               	movlw	1
  6256  0110DC  D001               	goto	u13566
  6257  0110DE                     u13560:
  6258  0110DE  0E00               	movlw	0
  6259  0110E0                     u13566:
  6260  0110E0  0AFF               	xorlw	255
  6261  0110E2  6E0C               	movwf	(btemp+11)^0,c
  6262  0110E4  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6263  0110E6  180C               	xorwf	(btemp+11)^0,w,c
  6264  0110E8  0BFE               	andlw	-2
  6265  0110EA  180C               	xorwf	(btemp+11)^0,w,c
  6266  0110EC  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6267  0110EE                     l14216:
  6268                           
  6269                           ; BSR set to: 1
  6270                           ;main.c: 420:    set_vterm(V.screen);
  6271  0110EE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6272  0110F0  D002               	goto	u13570
  6273  0110F2  0E01               	movlw	1
  6274  0110F4  D001               	goto	u13576
  6275  0110F6                     u13570:
  6276  0110F6  0E00               	movlw	0
  6277  0110F8                     u13576:
  6278  0110F8  6EE6               	movwf	postinc1,c
  6279  0110FA  EC23  F0E6         	call	_set_vterm	;wreg free
  6280                           
  6281                           ;main.c: 421:    update_lcd(V.screen);
  6282  0110FE  0101               	movlb	1	; () banked
  6283  011100  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6284  011102  D002               	goto	u13580
  6285  011104  0E01               	movlw	1
  6286  011106  D001               	goto	u13586
  6287  011108                     u13580:
  6288  011108  0E00               	movlw	0
  6289  01110A                     u13586:
  6290  01110A  6EE6               	movwf	postinc1,c
  6291  01110C  ECE6  F0D1         	call	_update_lcd	;wreg free
  6292                           
  6293                           ;main.c: 423:    wait_lcd_done();
  6294  011110  ECB2  F0E5         	call	_wait_lcd_done	;wreg free
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;main.c: 424:    set_dac_a(3.333);
  6298  011114  0EDF               	movlw	223
  6299  011116  6EE6               	movwf	postinc1,c
  6300  011118  0E4F               	movlw	79
  6301  01111A  6EE6               	movwf	postinc1,c
  6302  01111C  0E55               	movlw	85
  6303  01111E  6EE6               	movwf	postinc1,c
  6304  011120  0E40               	movlw	64
  6305  011122  6EE6               	movwf	postinc1,c
  6306  011124  ECFE  F0E2         	call	_set_dac_a	;wreg free
  6307                           
  6308                           ;main.c: 425:    set_dac_b(6.666);
  6309  011128  0EDF               	movlw	223
  6310  01112A  6EE6               	movwf	postinc1,c
  6311  01112C  0E4F               	movlw	79
  6312  01112E  6EE6               	movwf	postinc1,c
  6313  011130  0ED5               	movlw	213
  6314  011132  6EE6               	movwf	postinc1,c
  6315  011134  0E40               	movlw	64
  6316  011136  6EE6               	movwf	postinc1,c
  6317  011138  ECE4  F0E2         	call	_set_dac_b	;wreg free
  6318                           
  6319                           ;main.c: 426:    set_dac();
  6320  01113C  ECF2  F0D7         	call	_set_dac	;wreg free
  6321  011140                     l14228:
  6322                           
  6323                           ;main.c: 432:   check_help(V.flipper);
  6324  011140  0101               	movlb	1	; () banked
  6325  011142  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6326  011144  6EE6               	movwf	postinc1,c
  6327  011146  EC75  F0C4         	call	_check_help	;wreg free
  6328                           
  6329                           ;main.c: 434:   if (V.enter) {
  6330  01114A  0101               	movlb	1	; () banked
  6331  01114C  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6332  01114E  B4D8               	btfsc	status,2,c
  6333  011150  D062               	goto	l1387
  6334                           
  6335                           ; BSR set to: 1
  6336                           ;main.c: 435:    V.enter = 0;
  6337  011152  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6338                           
  6339                           ;main.c: 436:    V.calib = 0;
  6340  011154  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6341                           
  6342                           ; BSR set to: 1
  6343                           ;main.c: 437:    inp_index += 3;
  6344                           ;stkvar	_inp_index @ sp[(-17)+11]
  6345  011156  0EFA               	movlw	-6
  6346  011158  006F FF8C  F001    	movff	plusw1,btemp
  6347  01115E  0E03               	movlw	3
  6348  011160  2601               	addwf	btemp^0,f,c
  6349  011162  0EFA               	movlw	-6
  6350  011164  0060  F007  FFE3   	movff	btemp,plusw1
  6351                           
  6352                           ;main.c: 438:    if (inp_index > 9)
  6353                           ;stkvar	_inp_index @ sp[(-17)+11]
  6354  01116A  0EFA               	movlw	-6
  6355  01116C  006F FF8C  F001    	movff	plusw1,btemp
  6356  011172  0E09               	movlw	9
  6357  011174  6401               	cpfsgt	btemp^0,c
  6358  011176  D03A               	goto	l14256
  6359                           
  6360                           ; BSR set to: 1
  6361                           ;main.c: 439:     inp_index = 0;
  6362                           ;stkvar	_inp_index @ sp[(-17)+11]
  6363  011178  0EFA               	movlw	-6
  6364  01117A  6AE3               	clrf	plusw1,c
  6365  01117C  D037               	goto	l14256
  6366  01117E                     l14238:
  6367                           
  6368                           ; BSR set to: 1
  6369                           ;main.c: 442:     i = C_BATT;
  6370                           ;stkvar	_i @ sp[(-17)+14]
  6371  01117E  0EFD               	movlw	-3
  6372  011180  6AE3               	clrf	plusw1,c
  6373                           
  6374                           ; BSR set to: 1
  6375                           ;main.c: 443:     j = C_PV;
  6376                           ;stkvar	_j @ sp[(-17)+13]
  6377  011182  0EFC               	movlw	-4
  6378  011184  6AE3               	clrf	plusw1,c
  6379  011186  2AE3               	incf	plusw1,f,c
  6380                           
  6381                           ; BSR set to: 1
  6382                           ;main.c: 444:     k = V_CC;
  6383                           ;stkvar	_k @ sp[(-17)+12]
  6384  011188  0EFB               	movlw	-5
  6385  01118A  6AE3               	clrf	plusw1,c
  6386  01118C  82E3               	bsf	plusw1,1,c
  6387                           
  6388                           ;main.c: 445:     break;
  6389  01118E  D043               	goto	l1387
  6390  011190                     l14244:
  6391                           
  6392                           ; BSR set to: 1
  6393                           ;main.c: 447:     i = V_BAT;
  6394                           ;stkvar	_i @ sp[(-17)+14]
  6395  011190  0EFD               	movlw	-3
  6396  011192  6AE3               	clrf	plusw1,c
  6397  011194  84E3               	bsf	plusw1,2,c
  6398                           
  6399                           ;main.c: 448:     j = V_PV;
  6400                           ;stkvar	_j @ sp[(-17)+13]
  6401  011196  0EFC               	movlw	-4
  6402  011198  6AE3               	clrf	plusw1,c
  6403  01119A  80E3               	bsf	plusw1,0,c
  6404  01119C  84E3               	bsf	plusw1,2,c	;indir
  6405                           
  6406                           ;main.c: 449:     k = V_CBUS;
  6407                           ;stkvar	_k @ sp[(-17)+12]
  6408  01119E  0EFB               	movlw	-5
  6409  0111A0  6AE3               	clrf	plusw1,c
  6410  0111A2  82E3               	bsf	plusw1,1,c
  6411  0111A4  84E3               	bsf	plusw1,2,c	;indir
  6412                           
  6413                           ;main.c: 450:     break;
  6414  0111A6  D037               	goto	l1387
  6415  0111A8                     l14246:
  6416                           
  6417                           ; BSR set to: 1
  6418                           ;main.c: 452:     i = V_BBAT;
  6419                           ;stkvar	_i @ sp[(-17)+14]
  6420  0111A8  0EFD               	movlw	-3
  6421  0111AA  6AE3               	clrf	plusw1,c
  6422  0111AC  82E3               	bsf	plusw1,1,c
  6423  0111AE  86E3               	bsf	plusw1,3,c	;indir
  6424                           
  6425                           ; BSR set to: 1
  6426                           ;main.c: 453:     j = V_TEMP;
  6427  0111B0  0E0B               	movlw	11
  6428  0111B2  6E0C               	movwf	(btemp+11)^0,c
  6429                           
  6430                           ;stkvar	_j @ sp[(-17)+13]
  6431  0111B4  0EFC               	movlw	-4
  6432  0111B6  0060  F033  FFE3   	movff	btemp+11,plusw1
  6433                           
  6434                           ; BSR set to: 1
  6435                           ;main.c: 454:     k = V_INVERTER;
  6436                           ;stkvar	_k @ sp[(-17)+12]
  6437  0111BC  0EFB               	movlw	-5
  6438  0111BE  6AE3               	clrf	plusw1,c
  6439  0111C0  84E3               	bsf	plusw1,2,c
  6440  0111C2  86E3               	bsf	plusw1,3,c	;indir
  6441                           
  6442                           ;main.c: 455:     break;
  6443  0111C4  D028               	goto	l1387
  6444  0111C6                     l14252:
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;main.c: 457:     i = V_LIGHT_SENSOR;
  6448  0111C6  0E0D               	movlw	13
  6449  0111C8  6E0C               	movwf	(btemp+11)^0,c
  6450                           
  6451                           ;stkvar	_i @ sp[(-17)+14]
  6452  0111CA  0EFD               	movlw	-3
  6453  0111CC  0060  F033  FFE3   	movff	btemp+11,plusw1
  6454                           
  6455                           ;main.c: 458:     j = V_LIGHT_SENSOR;
  6456  0111D2  0E0D               	movlw	13
  6457  0111D4  6E0C               	movwf	(btemp+11)^0,c
  6458                           
  6459                           ;stkvar	_j @ sp[(-17)+13]
  6460  0111D6  0EFC               	movlw	-4
  6461  0111D8  0060  F033  FFE3   	movff	btemp+11,plusw1
  6462                           
  6463                           ;main.c: 459:     k = V_LIGHT_SENSOR;
  6464  0111DE  0E0D               	movlw	13
  6465  0111E0  6E0C               	movwf	(btemp+11)^0,c
  6466                           
  6467                           ;stkvar	_k @ sp[(-17)+12]
  6468  0111E2  0EFB               	movlw	-5
  6469  0111E4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6470                           
  6471                           ;main.c: 460:     break;
  6472  0111EA  D015               	goto	l1387
  6473  0111EC                     l14256:
  6474                           
  6475                           ; BSR set to: 1
  6476                           ;stkvar	_inp_index @ sp[(-17)+11]
  6477  0111EC  0EFA               	movlw	-6
  6478  0111EE  50E3               	movf	plusw1,w,c
  6479  0111F0  6E0B               	movwf	(btemp+10)^0,c
  6480  0111F2  6A0C               	clrf	(btemp+11)^0,c
  6481                           
  6482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6483                           ; Switch size 1, requested type "simple"
  6484                           ; Number of cases is 1, Range of values is 0 to 0
  6485                           ; switch strategies available:
  6486                           ; Name         Instructions Cycles
  6487                           ; simple_byte            4     3 (average)
  6488                           ;	Chosen strategy is simple_byte
  6489  0111F4  500C               	movf	(btemp+11)^0,w,c
  6490  0111F6  0A00               	xorlw	0	; case 0
  6491  0111F8  A4D8               	btfss	status,2,c
  6492  0111FA  D00D               	goto	l1387
  6493                           
  6494                           ; BSR set to: 1
  6495                           ; Switch size 1, requested type "simple"
  6496                           ; Number of cases is 4, Range of values is 0 to 9
  6497                           ; switch strategies available:
  6498                           ; Name         Instructions Cycles
  6499                           ; simple_byte           13     7 (average)
  6500                           ;	Chosen strategy is simple_byte
  6501  0111FC  500B               	movf	(btemp+10)^0,w,c
  6502  0111FE  0A00               	xorlw	0	; case 0
  6503  011200  B4D8               	btfsc	status,2,c
  6504  011202  D7BD               	goto	l14238
  6505  011204  0A03               	xorlw	3	; case 3
  6506  011206  B4D8               	btfsc	status,2,c
  6507  011208  D7C3               	goto	l14244
  6508  01120A  0A05               	xorlw	5	; case 6
  6509  01120C  B4D8               	btfsc	status,2,c
  6510  01120E  D7CC               	goto	l14246
  6511  011210  0A0F               	xorlw	15	; case 9
  6512  011212  B4D8               	btfsc	status,2,c
  6513  011214  D7D8               	goto	l14252
  6514  011216                     l1387:
  6515                           
  6516                           ; BSR set to: 1
  6517                           ;main.c: 469:   if (V.set_sequ) {
  6518  011216  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6519  011218  EFC3  F083         	goto	l14130
  6520                           
  6521                           ; BSR set to: 1
  6522                           ;main.c: 470:    if (TimerDone(TMR_INFO)) {
  6523  01121C  0E07               	movlw	7
  6524  01121E  6EE6               	movwf	postinc1,c
  6525  011220  EC2D  F0E4         	call	_TimerDone	;wreg free
  6526  011224  5001               	movf	btemp^0,w,c
  6527  011226  B4D8               	btfsc	status,2,c
  6528  011228  D00C               	goto	l14266
  6529                           
  6530                           ;main.c: 471:     V.set_sequ = 0;
  6531  01122A  0101               	movlb	1	; () banked
  6532  01122C  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6533                           
  6534                           ; BSR set to: 1
  6535                           ;main.c: 472:     set_vterm(0);
  6536  01122E  0E00               	movlw	0
  6537  011230  6EE6               	movwf	postinc1,c
  6538  011232  EC23  F0E6         	call	_set_vterm	;wreg free
  6539                           
  6540                           ;main.c: 473:     update_lcd(0);
  6541  011236  0E00               	movlw	0
  6542  011238  6EE6               	movwf	postinc1,c
  6543  01123A  ECE6  F0D1         	call	_update_lcd	;wreg free
  6544                           
  6545                           ;main.c: 474:    } else {
  6546  01123E  EFC3  F083         	goto	l14130
  6547  011242                     l14266:
  6548                           
  6549                           ;main.c: 475:     set_vterm(2);
  6550  011242  0E02               	movlw	2
  6551  011244  6EE6               	movwf	postinc1,c
  6552  011246  EC23  F0E6         	call	_set_vterm	;wreg free
  6553                           
  6554                           ;main.c: 476:     update_lcd(2);
  6555  01124A  0E02               	movlw	2
  6556  01124C  6EE6               	movwf	postinc1,c
  6557  01124E  ECE6  F0D1         	call	_update_lcd	;wreg free
  6558  011252  EFC3  F083         	goto	l14130
  6559  011256                     __end_of_main:
  6560                           	opt callstack 0
  6561                           
  6562 ;; *************** function _update_cal_data *****************
  6563 ;; Defined at:
  6564 ;;		line 391 in file "daq.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1  [STACK] void 
  6571 ;; Registers used:
  6572 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6573 ;; Tracked objects:
  6574 ;;		On entry : 3F/3
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:   15
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_main
  6589 ;; This function uses a reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text1
  6593  01CD06                     __ptext1:
  6594                           	opt callstack 0
  6595  01CD06                     _update_cal_data:
  6596                           	opt callstack 15
  6597                           
  6598                           ;daq.c: 393:  R = r_cal;
  6599                           
  6600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6601                           ;incstack = 0
  6602  01CD06  EE20  F3C6         	lfsr	2,_r_cal
  6603  01CD0A  EE00  F0AB         	lfsr	0,_R	;volatile
  6604  01CD0E  0E39               	movlw	57
  6605  01CD10                     u10671:
  6606  01CD10  006F FF6F FFEB     	movff	plusw2,plusw0
  6607  01CD16  06E8               	decf	wreg,f,c
  6608  01CD18  E2FB               	bc	u10671
  6609                           
  6610                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  6611  01CD1A  0012               	return		;funcret
  6612  01CD1C                     __end_of_update_cal_data:
  6613                           	opt callstack 0
  6614                           
  6615 ;; *************** function _static_soc *****************
  6616 ;; Defined at:
  6617 ;;		line 117 in file "mbmc.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;		None
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1  [STACK] void 
  6624 ;; Registers used:
  6625 ;;		wreg, fsr2l, fsr2h
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6635 ;;Total ram usage:        0 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:   15
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_main
  6642 ;; This function uses a reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text2
  6646  01BE36                     __ptext2:
  6647                           	opt callstack 0
  6648  01BE36                     _static_soc:
  6649                           	opt callstack 15
  6650                           
  6651                           ;mbmc.c: 119:  C.runtime = 120;
  6652                           
  6653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6654                           ;incstack = 0
  6655  01BE36  0E78               	movlw	120
  6656  01BE38  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6657  01BE3E  0E00               	movlw	0
  6658  01BE40  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6659                           
  6660                           ;mbmc.c: 120:  C.soc = 100;
  6661  01BE46  0E64               	movlw	100
  6662  01BE48  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6663  01BE4E  0E00               	movlw	0
  6664  01BE50  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6665                           
  6666                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6667  01BE56  EE21  F38B         	lfsr	2,_C+140	;volatile
  6668  01BE5A  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6669  01BE60  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6670  01BE66  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6671  01BE6C  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6672                           
  6673                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6674  01BE72  EE21  F38F         	lfsr	2,_C+144	;volatile
  6675  01BE76  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6676  01BE7C  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6677  01BE82  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6678  01BE88  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6679                           
  6680                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6681  01BE8E  0012               	return		;funcret
  6682  01BE90                     __end_of_static_soc:
  6683                           	opt callstack 0
  6684                           
  6685 ;; *************** function _start_switch_handler *****************
  6686 ;; Defined at:
  6687 ;;		line 125 in file "dio.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;		None
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;		None
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  1  [STACK] void 
  6694 ;; Registers used:
  6695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6696 ;; Tracked objects:
  6697 ;;		On entry : 1/0
  6698 ;;		On exit  : 3F/39
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6705 ;;Total ram usage:        0 bytes
  6706 ;; Hardware stack levels used:    1
  6707 ;; Hardware stack levels required when called:   16
  6708 ;; This function calls:
  6709 ;;		_INT1_SetInterruptHandler
  6710 ;; This function is called by:
  6711 ;;		_main
  6712 ;; This function uses a reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text3
  6716  01CBCA                     __ptext3:
  6717                           	opt callstack 0
  6718  01CBCA                     _start_switch_handler:
  6719                           	opt callstack 14
  6720                           
  6721                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6722                           
  6723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6724                           ;incstack = 0
  6725  01CBCA  0139               	movlb	57	; () banked
  6726  01CBCC  9195               	bcf	149,0,b	;volatile
  6727                           
  6728                           ; BSR set to: 57
  6729                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6730  01CBCE  0E7C               	movlw	low _switch_handler
  6731  01CBD0  6EE6               	movwf	postinc1,c
  6732  01CBD2  0E9A               	movlw	high _switch_handler
  6733  01CBD4  6EE6               	movwf	postinc1,c
  6734  01CBD6  0E01               	movlw	low (_switch_handler shr (0+16))
  6735  01CBD8  6EE6               	movwf	postinc1,c
  6736  01CBDA  ECB9  F0E4         	call	_INT1_SetInterruptHandler	;wreg free
  6737                           
  6738                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6739  01CBDE  0E02               	movlw	2
  6740  01CBE0  0102               	movlb	2	; () banked
  6741  01CBE2  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6742                           
  6743                           ; BSR set to: 2
  6744                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6745  01CBE4  0139               	movlb	57	; () banked
  6746  01CBE6  8195               	bsf	149,0,b	;volatile
  6747                           
  6748                           ; BSR set to: 57
  6749                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6750  01CBE8  0012               	return		;funcret
  6751  01CBEA                     __end_of_start_switch_handler:
  6752                           	opt callstack 0
  6753                           
  6754 ;; *************** function _srand *****************
  6755 ;; Defined at:
  6756 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  s               2  [STACK] unsigned int 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1  [STACK] void 
  6763 ;; Registers used:
  6764 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 3F/2
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6774 ;;Total ram usage:        0 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:   15
  6777 ;; This function calls:
  6778 ;;		Nothing
  6779 ;; This function is called by:
  6780 ;;		_main
  6781 ;; This function uses a reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text4
  6785  01C594                     __ptext4:
  6786                           	opt callstack 0
  6787  01C594                     _srand:
  6788                           	opt callstack 15
  6789                           
  6790                           ;stkvar	_s @ sp[(0)+-2]
  6791                           
  6792                           ; BSR set to: 57
  6793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6794                           ;incstack = 0
  6795  01C594  0EFE               	movlw	-2
  6796  01C596  50E3               	movf	plusw1,w,c
  6797  01C598  0FFF               	addlw	255
  6798  01C59A  6E0B               	movwf	(btemp+10)^0,c
  6799  01C59C  0EFF               	movlw	-1
  6800  01C59E  006F FF8C  F00C    	movff	plusw1,btemp+11
  6801  01C5A4  0EFF               	movlw	255
  6802  01C5A6  220C               	addwfc	(btemp+11)^0,f,c
  6803  01C5A8  0060  F02C  F2E7   	movff	btemp+10,_seed
  6804  01C5AE  0060  F030  F2E8   	movff	btemp+11,_seed+1
  6805  01C5B4  0102               	movlb	2	; () banked
  6806  01C5B6  6BE9               	clrf	(_seed+2)& (0+255),b
  6807  01C5B8  6BEA               	clrf	(_seed+3)& (0+255),b
  6808  01C5BA  6BEB               	clrf	(_seed+4)& (0+255),b
  6809  01C5BC  6BEC               	clrf	(_seed+5)& (0+255),b
  6810  01C5BE  6BED               	clrf	(_seed+6)& (0+255),b
  6811  01C5C0  6BEE               	clrf	(_seed+7)& (0+255),b
  6812                           
  6813                           ; BSR set to: 2
  6814                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6815  01C5C2  52E5               	movf	postdec1,f,c
  6816  01C5C4  52E5               	movf	postdec1,f,c
  6817  01C5C6  0012               	return		;funcret
  6818  01C5C8                     __end_of_srand:
  6819                           	opt callstack 0
  6820                           
  6821 ;; *************** function _set_dac_b *****************
  6822 ;; Defined at:
  6823 ;;		line 300 in file "daq.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;  voltage         4  [STACK] const float 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;		None
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  2  [STACK] unsigned short 
  6830 ;; Registers used:
  6831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6841 ;;Total ram usage:        0 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:   17
  6844 ;; This function calls:
  6845 ;;		_convert_dac_raw
  6846 ;; This function is called by:
  6847 ;;		_main
  6848 ;; This function uses a reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text5
  6852  01C5C8                     __ptext5:
  6853                           	opt callstack 0
  6854  01C5C8                     _set_dac_b:
  6855                           	opt callstack 13
  6856                           
  6857                           ;daq.c: 300: uint16_t set_dac_b(const float voltage);daq.c: 301: {;daq.c: 302:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6858                           ;stkvar	_voltage @ sp[(0)+-4]
  6859                           
  6860                           ; BSR set to: 2
  6861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6862                           ;incstack = 0
  6863  01C5C8  0EFC               	movlw	-4
  6864  01C5CA  006F FF8F FFE6     	movff	plusw1,postinc1
  6865  01C5D0  006F FF8F FFE6     	movff	plusw1,postinc1
  6866  01C5D6  006F FF8F FFE6     	movff	plusw1,postinc1
  6867  01C5DC  006F FF8F FFE6     	movff	plusw1,postinc1
  6868  01C5E2  EC44  F0D0         	call	_convert_dac_raw	;wreg free
  6869  01C5E6  0060  F004  F0CD   	movff	btemp,_R+34	;volatile
  6870  01C5EC  0060  F008  F0CE   	movff	btemp+1,_R+35	;volatile
  6871                           
  6872                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6873                           
  6874                           ;daq.c: 303:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6875  01C5F2  52E5               	movf	postdec1,f,c
  6876  01C5F4  52E5               	movf	postdec1,f,c
  6877  01C5F6  52E5               	movf	postdec1,f,c
  6878  01C5F8  52E5               	movf	postdec1,f,c
  6879  01C5FA  0012               	return		;funcret
  6880  01C5FC                     __end_of_set_dac_b:
  6881                           	opt callstack 0
  6882                           
  6883 ;; *************** function _set_dac_a *****************
  6884 ;; Defined at:
  6885 ;;		line 291 in file "daq.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  voltage         4  [STACK] const float 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  2  [STACK] unsigned short 
  6892 ;; Registers used:
  6893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6894 ;; Tracked objects:
  6895 ;;		On entry : 3F/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:   17
  6906 ;; This function calls:
  6907 ;;		_convert_dac_raw
  6908 ;; This function is called by:
  6909 ;;		_main
  6910 ;; This function uses a reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text6
  6914  01C5FC                     __ptext6:
  6915                           	opt callstack 0
  6916  01C5FC                     _set_dac_a:
  6917                           	opt callstack 13
  6918                           
  6919                           ;daq.c: 291: uint16_t set_dac_a(const float voltage);daq.c: 292: {;daq.c: 293:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6920                           ;stkvar	_voltage @ sp[(0)+-4]
  6921                           
  6922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6923                           ;incstack = 0
  6924  01C5FC  0EFC               	movlw	-4
  6925  01C5FE  006F FF8F FFE6     	movff	plusw1,postinc1
  6926  01C604  006F FF8F FFE6     	movff	plusw1,postinc1
  6927  01C60A  006F FF8F FFE6     	movff	plusw1,postinc1
  6928  01C610  006F FF8F FFE6     	movff	plusw1,postinc1
  6929  01C616  EC44  F0D0         	call	_convert_dac_raw	;wreg free
  6930  01C61A  0060  F004  F0CB   	movff	btemp,_R+32	;volatile
  6931  01C620  0060  F008  F0CC   	movff	btemp+1,_R+33	;volatile
  6932                           
  6933                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6934                           
  6935                           ;daq.c: 294:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6936  01C626  52E5               	movf	postdec1,f,c
  6937  01C628  52E5               	movf	postdec1,f,c
  6938  01C62A  52E5               	movf	postdec1,f,c
  6939  01C62C  52E5               	movf	postdec1,f,c
  6940  01C62E  0012               	return		;funcret
  6941  01C630                     __end_of_set_dac_a:
  6942                           	opt callstack 0
  6943                           
  6944 ;; *************** function _convert_dac_raw *****************
  6945 ;; Defined at:
  6946 ;;		line 273 in file "daq.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;  voltage         4  [STACK] float 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;		None
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  2  [STACK] unsigned short 
  6953 ;; Registers used:
  6954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6964 ;;Total ram usage:        0 bytes
  6965 ;; Hardware stack levels used:    1
  6966 ;; Hardware stack levels required when called:   16
  6967 ;; This function calls:
  6968 ;;		___fldiv
  6969 ;;		___flge
  6970 ;;		___fltol
  6971 ;; This function is called by:
  6972 ;;		_set_dac_a
  6973 ;;		_set_dac_b
  6974 ;; This function uses a reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text7
  6978  01A088                     __ptext7:
  6979                           	opt callstack 0
  6980  01A088                     _convert_dac_raw:
  6981                           	opt callstack 13
  6982                           
  6983                           ;daq.c: 273: static uint16_t convert_dac_raw(float voltage);daq.c: 274: {;daq.c: 278:  i
      +                          f (voltage < 0.001)
  6984                           
  6985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6986                           ;incstack = 0
  6987  01A088  0E6F               	movlw	111
  6988  01A08A  6EE6               	movwf	postinc1,c
  6989  01A08C  0E12               	movlw	18
  6990  01A08E  6EE6               	movwf	postinc1,c
  6991  01A090  0E83               	movlw	131
  6992  01A092  6EE6               	movwf	postinc1,c
  6993  01A094  0E3A               	movlw	58
  6994  01A096  6EE6               	movwf	postinc1,c
  6995                           
  6996                           ;stkvar	_voltage @ sp[(-4)+-4]
  6997  01A098  0EF8               	movlw	-8
  6998  01A09A  006F FF8F FFE6     	movff	plusw1,postinc1
  6999  01A0A0  006F FF8F FFE6     	movff	plusw1,postinc1
  7000  01A0A6  006F FF8F FFE6     	movff	plusw1,postinc1
  7001  01A0AC  006F FF8F FFE6     	movff	plusw1,postinc1
  7002  01A0B2  EC35  F0CB         	call	___flge	;wreg free
  7003  01A0B6  B001               	btfsc	btemp& (0+255),0,c
  7004  01A0B8  D018               	goto	l11134
  7005                           
  7006                           ;daq.c: 279:   voltage = 0.001;
  7007  01A0BA  0E6F               	movlw	111
  7008  01A0BC  6E09               	movwf	(btemp+8)^0,c
  7009  01A0BE  0E12               	movlw	18
  7010  01A0C0  6E0A               	movwf	(btemp+9)^0,c
  7011  01A0C2  0E83               	movlw	131
  7012  01A0C4  6E0B               	movwf	(btemp+10)^0,c
  7013  01A0C6  0E3A               	movlw	58
  7014  01A0C8  6E0C               	movwf	(btemp+11)^0,c
  7015                           
  7016                           ;stkvar	_voltage @ sp[(0)+-4]
  7017  01A0CA  0EFC               	movlw	-4
  7018  01A0CC  0060  F027  FFE3   	movff	btemp+8,plusw1
  7019  01A0D2  0EFD               	movlw	-3
  7020  01A0D4  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7021  01A0DA  0EFE               	movlw	-2
  7022  01A0DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7023  01A0E2  0EFF               	movlw	-1
  7024  01A0E4  0060  F033  FFE3   	movff	btemp+11,plusw1
  7025  01A0EA                     l11134:
  7026                           
  7027                           ;daq.c: 280:  if (voltage > 10.0)
  7028                           ;stkvar	_voltage @ sp[(0)+-4]
  7029  01A0EA  0EFC               	movlw	-4
  7030  01A0EC  006F FF8F FFE6     	movff	plusw1,postinc1
  7031  01A0F2  006F FF8F FFE6     	movff	plusw1,postinc1
  7032  01A0F8  006F FF8F FFE6     	movff	plusw1,postinc1
  7033  01A0FE  006F FF8F FFE6     	movff	plusw1,postinc1
  7034  01A104  0E00               	movlw	0
  7035  01A106  6EE6               	movwf	postinc1,c
  7036  01A108  0E00               	movlw	0
  7037  01A10A  6EE6               	movwf	postinc1,c
  7038  01A10C  0E20               	movlw	32
  7039  01A10E  6EE6               	movwf	postinc1,c
  7040  01A110  0E41               	movlw	65
  7041  01A112  6EE6               	movwf	postinc1,c
  7042  01A114  EC35  F0CB         	call	___flge	;wreg free
  7043  01A118  B001               	btfsc	btemp& (0+255),0,c
  7044  01A11A  D018               	goto	l11138
  7045                           
  7046                           ;daq.c: 281:   voltage = 10.0;
  7047  01A11C  0E00               	movlw	0
  7048  01A11E  6E09               	movwf	(btemp+8)^0,c
  7049  01A120  0E00               	movlw	0
  7050  01A122  6E0A               	movwf	(btemp+9)^0,c
  7051  01A124  0E20               	movlw	32
  7052  01A126  6E0B               	movwf	(btemp+10)^0,c
  7053  01A128  0E41               	movlw	65
  7054  01A12A  6E0C               	movwf	(btemp+11)^0,c
  7055                           
  7056                           ;stkvar	_voltage @ sp[(0)+-4]
  7057  01A12C  0EFC               	movlw	-4
  7058  01A12E  0060  F027  FFE3   	movff	btemp+8,plusw1
  7059  01A134  0EFD               	movlw	-3
  7060  01A136  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7061  01A13C  0EFE               	movlw	-2
  7062  01A13E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7063  01A144  0EFF               	movlw	-1
  7064  01A146  0060  F033  FFE3   	movff	btemp+11,plusw1
  7065  01A14C                     l11138:
  7066                           
  7067                           ;daq.c: 285:  return(uint16_t) (voltage / 0.002442);
  7068  01A14C  0EF6               	movlw	246
  7069  01A14E  6EE6               	movwf	postinc1,c
  7070  01A150  0E09               	movlw	9
  7071  01A152  6EE6               	movwf	postinc1,c
  7072  01A154  0E20               	movlw	32
  7073  01A156  6EE6               	movwf	postinc1,c
  7074  01A158  0E3B               	movlw	59
  7075  01A15A  6EE6               	movwf	postinc1,c
  7076                           
  7077                           ;stkvar	_voltage @ sp[(-4)+-4]
  7078  01A15C  0EF8               	movlw	-8
  7079  01A15E  006F FF8F FFE6     	movff	plusw1,postinc1
  7080  01A164  006F FF8F FFE6     	movff	plusw1,postinc1
  7081  01A16A  006F FF8F FFE6     	movff	plusw1,postinc1
  7082  01A170  006F FF8F FFE6     	movff	plusw1,postinc1
  7083  01A176  EC4D  F0A7         	call	___fldiv	;wreg free
  7084  01A17A  0060  F007  FFE6   	movff	btemp,postinc1
  7085  01A180  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7086  01A186  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7087  01A18C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7088  01A192  EC7C  F0CA         	call	___fltol	;wreg free
  7089                           
  7090                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7091  01A196  52E5               	movf	postdec1,f,c
  7092  01A198  52E5               	movf	postdec1,f,c
  7093  01A19A  52E5               	movf	postdec1,f,c
  7094  01A19C  52E5               	movf	postdec1,f,c
  7095  01A19E  0012               	return		;funcret
  7096  01A1A0                     __end_of_convert_dac_raw:
  7097                           	opt callstack 0
  7098                           
  7099 ;; *************** function _set_dac *****************
  7100 ;; Defined at:
  7101 ;;		line 249 in file "daq.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1  [STACK] void 
  7108 ;; Registers used:
  7109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:   16
  7122 ;; This function calls:
  7123 ;;		_SPI1_Exchange8bit
  7124 ;;		_dac_spi_control
  7125 ;; This function is called by:
  7126 ;;		_main
  7127 ;; This function uses a reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text8
  7131  01AFE4                     __ptext8:
  7132                           	opt callstack 0
  7133  01AFE4                     _set_dac:
  7134                           	opt callstack 14
  7135                           
  7136                           ;daq.c: 251:  while (!SPI1STATUSbits.TXBE);
  7137                           
  7138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7139                           ;incstack = 0
  7140  01AFE4  013D               	movlb	61	; () banked
  7141  01AFE6  AB17               	btfss	23,5,b	;volatile
  7142  01AFE8  D7FD               	goto	_set_dac
  7143                           
  7144                           ; BSR set to: 61
  7145                           
  7146                           ;daq.c: 252:  do { LATCbits.LATC2 = 1; } while(0);
  7147  01AFEA  84BC               	bsf	188,2,c	;volatile
  7148                           
  7149                           ; BSR set to: 61
  7150                           
  7151                           ;daq.c: 253:  do { LATCbits.LATC0 = 1; } while(0);
  7152  01AFEC  80BC               	bsf	188,0,c	;volatile
  7153                           
  7154                           ; BSR set to: 61
  7155                           ;daq.c: 254:  dac_spi_control(1);
  7156  01AFEE  0E01               	movlw	1
  7157  01AFF0  6EE6               	movwf	postinc1,c
  7158  01AFF2  EC6C  F0DC         	call	_dac_spi_control	;wreg free
  7159                           
  7160                           ;daq.c: 255:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7161  01AFF6  C0CB  F0CF         	movff	_R+32,_R+36	;volatile
  7162                           
  7163                           ;daq.c: 256:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7164  01AFFA  EE20  F0CB         	lfsr	2,_R+32	;volatile
  7165  01AFFE  006F FF78  F00B    	movff	postinc2,btemp+10
  7166  01B004  006F FF74  F00C    	movff	postdec2,btemp+11
  7167  01B00A  0060  F030  F00B   	movff	btemp+11,btemp+10
  7168  01B010  6A0C               	clrf	(btemp+11)^0,c
  7169  01B012  0E0F               	movlw	15
  7170  01B014  160B               	andwf	(btemp+10)^0,f,c
  7171  01B016  0100               	movlb	0	; () banked
  7172  01B018  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7173  01B01A  180B               	xorwf	(btemp+10)^0,w,c
  7174  01B01C  0BF0               	andlw	-16
  7175  01B01E  180B               	xorwf	(btemp+10)^0,w,c
  7176  01B020  6FD0               	movwf	(_R+37)& (0+255),b	;volatile
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;daq.c: 257:  R.max5322_cmd.map.cont = 0b0100;
  7180  01B022  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7181  01B024  0B0F               	andlw	-241
  7182  01B026  0940               	iorlw	64
  7183  01B028  6FD0               	movwf	(_R+37)& (0+255),b	;volatile
  7184                           
  7185                           ; BSR set to: 0
  7186  01B02A  90BF               	bcf	191,0,c	;volatile
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;daq.c: 259:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7190  01B02C  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7191  01B02E  6EE6               	movwf	postinc1,c
  7192  01B030  EC05  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  7193                           
  7194                           ; BSR set to: 57
  7195                           ;daq.c: 260:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7196  01B034  0100               	movlb	0	; () banked
  7197  01B036  51CF               	movf	(_R+36)& (0+255),w,b	;volatile
  7198  01B038  6EE6               	movwf	postinc1,c
  7199  01B03A  EC05  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  7200                           
  7201                           ; BSR set to: 57
  7202  01B03E  80BF               	bsf	191,0,c	;volatile
  7203                           
  7204                           ; BSR set to: 57
  7205                           ;daq.c: 262:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7206  01B040  C0CD  F0CF         	movff	_R+34,_R+36	;volatile
  7207                           
  7208                           ; BSR set to: 57
  7209                           ;daq.c: 263:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7210  01B044  EE20  F0CD         	lfsr	2,_R+34	;volatile
  7211  01B048  006F FF78  F00B    	movff	postinc2,btemp+10
  7212  01B04E  006F FF74  F00C    	movff	postdec2,btemp+11
  7213  01B054  0060  F030  F00B   	movff	btemp+11,btemp+10
  7214  01B05A  6A0C               	clrf	(btemp+11)^0,c
  7215  01B05C  0E0F               	movlw	15
  7216  01B05E  160B               	andwf	(btemp+10)^0,f,c
  7217  01B060  0100               	movlb	0	; () banked
  7218  01B062  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7219  01B064  180B               	xorwf	(btemp+10)^0,w,c
  7220  01B066  0BF0               	andlw	-16
  7221  01B068  180B               	xorwf	(btemp+10)^0,w,c
  7222  01B06A  6FD0               	movwf	(_R+37)& (0+255),b	;volatile
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;daq.c: 264:  R.max5322_cmd.map.cont = 0b0101;
  7226  01B06C  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7227  01B06E  0B0F               	andlw	-241
  7228  01B070  0950               	iorlw	80
  7229  01B072  6FD0               	movwf	(_R+37)& (0+255),b	;volatile
  7230                           
  7231                           ; BSR set to: 0
  7232  01B074  90BF               	bcf	191,0,c	;volatile
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;daq.c: 266:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7236  01B076  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7237  01B078  6EE6               	movwf	postinc1,c
  7238  01B07A  EC05  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  7239                           
  7240                           ; BSR set to: 57
  7241                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7242  01B07E  0100               	movlb	0	; () banked
  7243  01B080  51CF               	movf	(_R+36)& (0+255),w,b	;volatile
  7244  01B082  6EE6               	movwf	postinc1,c
  7245  01B084  EC05  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  7246  01B088                     l1901:
  7247  01B088  013D               	movlb	61	; () banked
  7248  01B08A  AB17               	btfss	23,5,b	;volatile
  7249  01B08C  D7FD               	goto	l1901
  7250                           
  7251                           ; BSR set to: 61
  7252                           
  7253                           ;daq.c: 269:  do { LATFbits.LATF0 = 1; } while(0);
  7254  01B08E  80BF               	bsf	191,0,c	;volatile
  7255                           
  7256                           ; BSR set to: 61
  7257                           ;daq.c: 270:  dac_spi_control(0);
  7258  01B090  0E00               	movlw	0
  7259  01B092  6EE6               	movwf	postinc1,c
  7260  01B094  EC6C  F0DC         	call	_dac_spi_control	;wreg free
  7261                           
  7262                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7263  01B098  0012               	return		;funcret
  7264  01B09A                     __end_of_set_dac:
  7265                           	opt callstack 0
  7266                           
  7267 ;; *************** function _dac_spi_control *****************
  7268 ;; Defined at:
  7269 ;;		line 201 in file "daq.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  set             1  [STACK] _Bool 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;		None
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  1  [STACK] void 
  7276 ;; Registers used:
  7277 ;;		wreg, fsr1l, fsr1h, status,2
  7278 ;; Tracked objects:
  7279 ;;		On entry : 3F/3D
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7287 ;;Total ram usage:        0 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; Hardware stack levels required when called:   15
  7290 ;; This function calls:
  7291 ;;		Nothing
  7292 ;; This function is called by:
  7293 ;;		_set_dac
  7294 ;; This function uses a reentrant model
  7295 ;;
  7296                           
  7297                           	psect	text9
  7298  01B8D8                     __ptext9:
  7299                           	opt callstack 0
  7300  01B8D8                     _dac_spi_control:
  7301                           	opt callstack 14
  7302                           
  7303                           ;daq.c: 201: void dac_spi_control(_Bool set);daq.c: 202: {;daq.c: 203:  static _Bool ini
      +                          t = 0;;daq.c: 204:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 206:  if (set) {
  7304                           ;stkvar	_set @ sp[(0)+-1]
  7305                           
  7306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7307                           ;incstack = 0
  7308  01B8D8  0EFF               	movlw	-1
  7309  01B8DA  50E3               	movf	plusw1,w,c
  7310  01B8DC  B4D8               	btfsc	status,2,c
  7311  01B8DE  D022               	goto	l11126
  7312                           
  7313                           ;daq.c: 207:   SPI1CON0bits.EN = 0;
  7314  01B8E0  013D               	movlb	61	; () banked
  7315  01B8E2  9F14               	bcf	20,7,b	;volatile
  7316                           
  7317                           ; BSR set to: 61
  7318                           ;daq.c: 208:   if (!init) {
  7319  01B8E4  5043               	movf	dac_spi_control@init^0,w,c
  7320  01B8E6  A4D8               	btfss	status,2,c
  7321  01B8E8  D011               	goto	l11114
  7322                           
  7323                           ; BSR set to: 61
  7324                           ;daq.c: 209:    init = 1;
  7325  01B8EA  0E01               	movlw	1
  7326  01B8EC  6E43               	movwf	dac_spi_control@init^0,c
  7327                           
  7328                           ; BSR set to: 61
  7329                           ;daq.c: 210:    S0 = SPI1CON0;
  7330  01B8EE  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7331                           
  7332                           ; BSR set to: 61
  7333                           ;daq.c: 211:    S1 = SPI1CON1;
  7334  01B8F4  006F F454  F0A4    	movff	15637,dac_spi_control@S1	;volatile
  7335                           
  7336                           ; BSR set to: 61
  7337                           ;daq.c: 212:    S2 = SPI1CON2;
  7338  01B8FA  006F F458  F0A3    	movff	15638,dac_spi_control@S2	;volatile
  7339                           
  7340                           ; BSR set to: 61
  7341                           ;daq.c: 213:    SC = SPI1CLK;
  7342  01B900  006F F470  F0A2    	movff	15644,dac_spi_control@SC	;volatile
  7343                           
  7344                           ; BSR set to: 61
  7345                           ;daq.c: 214:    SB = SPI1BAUD;
  7346  01B906  006F F464  F0A1    	movff	15641,dac_spi_control@SB	;volatile
  7347  01B90C                     l11114:
  7348                           
  7349                           ; BSR set to: 61
  7350                           ;daq.c: 220:   SPI1CON1 = 0x00;
  7351  01B90C  6B15               	clrf	21,b	;volatile
  7352                           
  7353                           ; BSR set to: 61
  7354                           ;daq.c: 221:   SPI1CON1bits.CKE = 1;
  7355  01B90E  8D15               	bsf	21,6,b	;volatile
  7356                           
  7357                           ; BSR set to: 61
  7358                           ;daq.c: 222:   SPI1CON1bits.CKP = 0;
  7359  01B910  9B15               	bcf	21,5,b	;volatile
  7360                           
  7361                           ; BSR set to: 61
  7362                           ;daq.c: 223:   SPI1CON1bits.SMP = 0;
  7363  01B912  9F15               	bcf	21,7,b	;volatile
  7364                           
  7365                           ;daq.c: 225:   SPI1CON2 = 0x03;
  7366  01B914  0E03               	movlw	3
  7367  01B916  6F16               	movwf	22,b	;volatile
  7368                           
  7369                           ;daq.c: 227:   SPI1BAUD = 0x0f;
  7370  01B918  0E0F               	movlw	15
  7371  01B91A  6F19               	movwf	25,b	;volatile
  7372                           
  7373                           ; BSR set to: 61
  7374                           ;daq.c: 229:   SPI1CLK = 0x00;
  7375  01B91C  6B1C               	clrf	28,b	;volatile
  7376                           
  7377                           ;daq.c: 231:   SPI1CON0 = 0x83;
  7378  01B91E  0E83               	movlw	131
  7379  01B920  6F14               	movwf	20,b	;volatile
  7380  01B922  D014               	goto	L3
  7381  01B924                     l11126:
  7382                           
  7383                           ;daq.c: 234:   if (init) {
  7384  01B924  5043               	movf	dac_spi_control@init^0,w,c
  7385  01B926  B4D8               	btfsc	status,2,c
  7386  01B928  D012               	goto	l1885
  7387                           
  7388                           ;daq.c: 238:    SPI1CON0bits.EN = 0;
  7389  01B92A  013D               	movlb	61	; () banked
  7390  01B92C  9F14               	bcf	20,7,b	;volatile
  7391                           
  7392                           ;daq.c: 239:    SPI1CON1 = S1;
  7393  01B92E  0060  F293  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7394                           
  7395                           ;daq.c: 240:    SPI1CON2 = S2;
  7396  01B934  0060  F28F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7397                           
  7398                           ;daq.c: 241:    SPI1CLK = SC;
  7399  01B93A  0060  F28B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7400                           
  7401                           ;daq.c: 242:    SPI1BAUD = SB;
  7402  01B940  0060  F287  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7403                           
  7404                           ;daq.c: 243:    SPI1CON0 = S0;
  7405  01B946  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7406  01B94C                     L3:
  7407                           
  7408                           ;daq.c: 244:    SPI1CON0bits.EN = 1;
  7409  01B94C  8F14               	bsf	20,7,b	;volatile
  7410  01B94E                     l1885:
  7411                           
  7412                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7413  01B94E  52E5               	movf	postdec1,f,c
  7414  01B950  0012               	return		;funcret
  7415  01B952                     __end_of_dac_spi_control:
  7416                           	opt callstack 0
  7417                           
  7418 ;; *************** function _read_cal_data *****************
  7419 ;; Defined at:
  7420 ;;		line 351 in file "daq.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  x               2  [STACK] unsigned short 
  7425 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  7426 ;;		 -> r_cal(58), 
  7427 ;;  y               2  [STACK] unsigned short 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1  [STACK] _Bool 
  7430 ;; Registers used:
  7431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/39
  7434 ;;		On exit  : 3F/3
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7441 ;;Total ram usage:        0 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:   16
  7444 ;; This function calls:
  7445 ;;		_DATAEE_ReadByte
  7446 ;; This function is called by:
  7447 ;;		_main
  7448 ;; This function uses a reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text10
  7452  01A6DC                     __ptext10:
  7453                           	opt callstack 0
  7454  01A6DC                     _read_cal_data:
  7455                           	opt callstack 0
  7456                           
  7457                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7458  01A6DC  0E06               	movlw	6
  7459  01A6DE  26E1               	addwf	fsr1l,f,c
  7460  01A6E0  0E00               	movlw	0
  7461  01A6E2  22E2               	addwfc	fsr1h,f,c
  7462                           
  7463                           ;daq.c: 353:  uint16_t x = 0, y;
  7464                           ;stkvar	_x @ sp[(-6)+0]
  7465                           
  7466                           ;incstack = 0
  7467  01A6E4  0EFA               	movlw	-6
  7468  01A6E6  6AE3               	clrf	plusw1,c
  7469  01A6E8  0EFB               	movlw	-5
  7470  01A6EA  6AE3               	clrf	plusw1,c
  7471                           
  7472                           ;daq.c: 354:  uint8_t *r_cal_ptr;;daq.c: 356:  y = sizeof(r_cal);
  7473  01A6EC  0E3A               	movlw	58
  7474  01A6EE  6E0B               	movwf	(btemp+10)^0,c
  7475  01A6F0  0E00               	movlw	0
  7476  01A6F2  6E0C               	movwf	(btemp+11)^0,c
  7477                           
  7478                           ;stkvar	_y @ sp[(-6)+4]
  7479  01A6F4  0EFE               	movlw	-2
  7480  01A6F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7481  01A6FC  0EFF               	movlw	-1
  7482  01A6FE  0060  F033  FFE3   	movff	btemp+11,plusw1
  7483                           
  7484                           ;daq.c: 357:  r_cal_ptr = (uint8_t*) & r_cal;
  7485                           ;stkvar	_r_cal_ptr @ sp[(-6)+2]
  7486  01A704  0E03               	movlw	high _r_cal
  7487  01A706  6E01               	movwf	btemp^0,c
  7488  01A708  0EFD               	movlw	-3
  7489  01A70A  0060  F007  FFE3   	movff	btemp,plusw1
  7490  01A710  0EC6               	movlw	low _r_cal
  7491  01A712  6E01               	movwf	btemp^0,c
  7492  01A714  0EFC               	movlw	-4
  7493  01A716  0060  F007  FFE3   	movff	btemp,plusw1
  7494  01A71C                     l11554:
  7495                           
  7496                           ;daq.c: 360:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  7497                           ;stkvar	_x @ sp[(-6)+0]
  7498  01A71C  0EFA               	movlw	-6
  7499  01A71E  006F FF8F FFE6     	movff	plusw1,postinc1
  7500  01A724  006F FF8F FFE6     	movff	plusw1,postinc1
  7501  01A72A  EC32  F0E3         	call	_DATAEE_ReadByte	;wreg free
  7502                           
  7503                           ;stkvar	_x @ sp[(-6)+0]
  7504  01A72E  0EFA               	movlw	-6
  7505  01A730  006F FF8C  F00B    	movff	plusw1,btemp+10
  7506  01A736  0EFB               	movlw	-5
  7507  01A738  006F FF8C  F00C    	movff	plusw1,btemp+11
  7508                           
  7509                           ;stkvar	_r_cal_ptr @ sp[(-6)+2]
  7510  01A73E  0EFC               	movlw	-4
  7511  01A740  006F FF8C  F009    	movff	plusw1,btemp+8
  7512  01A746  0EFD               	movlw	-3
  7513  01A748  006F FF8C  F00A    	movff	plusw1,btemp+9
  7514  01A74E  500B               	movf	(btemp+10)^0,w,c
  7515  01A750  2409               	addwf	(btemp+8)^0,w,c
  7516  01A752  6ED9               	movwf	fsr2l,c
  7517  01A754  500C               	movf	(btemp+11)^0,w,c
  7518  01A756  200A               	addwfc	(btemp+9)^0,w,c
  7519  01A758  6EDA               	movwf	fsr2h,c
  7520  01A75A  0060  F007  FFDF   	movff	btemp,indf2
  7521                           
  7522                           ;daq.c: 361:  } while (++x < y);
  7523                           ;stkvar	_y @ sp[(-6)+4]
  7524  01A760  0EFE               	movlw	-2
  7525  01A762  006F FF8C  F00B    	movff	plusw1,btemp+10
  7526  01A768  0EFF               	movlw	-1
  7527  01A76A  006F FF8C  F00C    	movff	plusw1,btemp+11
  7528                           
  7529                           ;stkvar	_x @ sp[(-6)+0]
  7530  01A770  0EFA               	movlw	-6
  7531  01A772  50E3               	movf	plusw1,w,c
  7532  01A774  0F01               	addlw	1
  7533  01A776  6E01               	movwf	btemp^0,c
  7534  01A778  0EFA               	movlw	-6
  7535  01A77A  0060  F007  FFE3   	movff	btemp,plusw1
  7536  01A780  6A01               	clrf	btemp^0,c
  7537  01A782  0EFB               	movlw	-5
  7538  01A784  50E3               	movf	plusw1,w,c
  7539  01A786  2001               	addwfc	btemp^0,w,c
  7540  01A788  6E01               	movwf	btemp^0,c
  7541  01A78A  0EFB               	movlw	-5
  7542  01A78C  0060  F007  FFE3   	movff	btemp,plusw1
  7543  01A792  0EFA               	movlw	-6
  7544  01A794  006F FF8C  F009    	movff	plusw1,btemp+8
  7545  01A79A  0EFB               	movlw	-5
  7546  01A79C  006F FF8C  F00A    	movff	plusw1,btemp+9
  7547  01A7A2  500B               	movf	(btemp+10)^0,w,c
  7548  01A7A4  5C09               	subwf	(btemp+8)^0,w,c
  7549  01A7A6  500C               	movf	(btemp+11)^0,w,c
  7550  01A7A8  580A               	subwfb	(btemp+9)^0,w,c
  7551  01A7AA  A0D8               	btfss	status,0,c
  7552  01A7AC  D7B7               	goto	l11554
  7553                           
  7554                           ;daq.c: 363:  if (r_cal.checkmark == 0x1957) {
  7555  01A7AE  0E57               	movlw	87
  7556  01A7B0  0103               	movlb	3	; () banked
  7557  01A7B2  19FC               	xorwf	(_r_cal+54)& (0+255),w,b
  7558  01A7B4  E106               	bnz	l11566
  7559  01A7B6  0E19               	movlw	25
  7560  01A7B8  19FD               	xorwf	(_r_cal+55)& (0+255),w,b
  7561  01A7BA  A4D8               	btfss	status,2,c
  7562  01A7BC  D002               	goto	l11566
  7563                           
  7564                           ; BSR set to: 3
  7565                           ;daq.c: 364:   return 1;
  7566  01A7BE  0E01               	movlw	1
  7567  01A7C0  D001               	goto	L4
  7568  01A7C2                     l11566:
  7569                           
  7570                           ; BSR set to: 3
  7571                           ;daq.c: 366:   return 0;
  7572  01A7C2  0E00               	movlw	0
  7573  01A7C4                     L4:
  7574  01A7C4  6E01               	movwf	btemp^0,c
  7575                           
  7576                           ; BSR set to: 3
  7577                           ; _read_cal_data: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7578  01A7C6  0EFA               	movlw	250
  7579  01A7C8  26E1               	addwf	fsr1l,f,c
  7580  01A7CA  0EFF               	movlw	255
  7581  01A7CC  22E2               	addwfc	fsr1h,f,c
  7582  01A7CE  0012               	return		;funcret
  7583  01A7D0                     __end_of_read_cal_data:
  7584                           	opt callstack 0
  7585                           
  7586 ;; *************** function _DATAEE_ReadByte *****************
  7587 ;; Defined at:
  7588 ;;		line 194 in file "mcc_generated_files/memory.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  bAdd            2  [STACK] unsigned short 
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;		None
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1  [STACK] unsigned char 
  7595 ;; Registers used:
  7596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/39
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7606 ;;Total ram usage:        0 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; Hardware stack levels required when called:   15
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		_read_cal_data
  7613 ;; This function uses a reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text11
  7617  01C664                     __ptext11:
  7618                           	opt callstack 0
  7619  01C664                     _DATAEE_ReadByte:
  7620                           	opt callstack 14
  7621                           
  7622                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  7623                           ;stkvar	_bAdd @ sp[(0)+-2]
  7624                           
  7625                           ; BSR set to: 3
  7626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7627                           ;incstack = 0
  7628  01C664  0EFF               	movlw	255
  7629  01C666  24E1               	addwf	fsr1l,w,c
  7630  01C668  6ED9               	movwf	fsr2l,c
  7631  01C66A  0EFF               	movlw	255
  7632  01C66C  20E2               	addwfc	fsr1h,w,c
  7633  01C66E  6EDA               	movwf	fsr2h,c
  7634  01C670  50DF               	movf	indf2,w,c
  7635  01C672  0B03               	andlw	3
  7636  01C674  0139               	movlb	57	; () banked
  7637  01C676  6FE1               	movwf	225,b	;volatile
  7638                           
  7639                           ; BSR set to: 57
  7640                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  7641                           ;stkvar	_bAdd @ sp[(0)+-2]
  7642  01C678  0EFE               	movlw	-2
  7643  01C67A  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  7644                           
  7645                           ; BSR set to: 57
  7646                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  7647  01C680  0E3F               	movlw	-193
  7648  01C682  17E5               	andwf	229,f,b	;volsfr
  7649                           
  7650                           ; BSR set to: 57
  7651                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  7652  01C684  81E5               	bsf	229,0,b	;volsfr
  7653                           
  7654                           ; BSR set to: 57
  7655                           ;mcc_generated_files/memory.c: 200:     __nop();
  7656  01C686  F000               	nop	
  7657                           
  7658                           ;mcc_generated_files/memory.c: 201:     __nop();
  7659  01C688  F000               	nop	
  7660                           
  7661                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  7662  01C68A  006E F78C  F001    	movff	14819,btemp	;volatile
  7663                           
  7664                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  7665  01C690  52E5               	movf	postdec1,f,c
  7666  01C692  52E5               	movf	postdec1,f,c
  7667  01C694  0012               	return		;funcret
  7668  01C696                     __end_of_DATAEE_ReadByte:
  7669                           	opt callstack 0
  7670                           
  7671 ;; *************** function _init_port_dma *****************
  7672 ;; Defined at:
  7673 ;;		line 104 in file "eadog.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;		None
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;		None
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  1  [STACK] void 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/1
  7684 ;;		On exit  : 3F/3B
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7691 ;;Total ram usage:        0 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:   15
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		_main
  7698 ;; This function uses a reentrant model
  7699 ;;
  7700                           
  7701                           	psect	text12
  7702  01C696                     __ptext12:
  7703                           	opt callstack 0
  7704  01C696                     _init_port_dma:
  7705                           	opt callstack 15
  7706                           
  7707                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7708                           
  7709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7710                           ;incstack = 0
  7711  01C696  0E3F               	movlw	-193
  7712  01C698  013B               	movlb	59	; () banked
  7713  01C69A  17DD               	andwf	221,f,b	;volatile
  7714                           
  7715                           ; BSR set to: 59
  7716                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7717  01C69C  9BDD               	bcf	221,5,b	;volatile
  7718                           
  7719                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7720  01C69E  51DD               	movf	221,w,b	;volatile
  7721  01C6A0  0BF9               	andlw	-7
  7722  01C6A2  0902               	iorlw	2
  7723  01C6A4  6FDD               	movwf	221,b	;volatile
  7724                           
  7725                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7726  01C6A6  0EE7               	movlw	-25
  7727  01C6A8  17DD               	andwf	221,f,b	;volatile
  7728                           
  7729                           ; BSR set to: 59
  7730                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7731  01C6AA  81DD               	bsf	221,0,b	;volatile
  7732                           
  7733                           ; BSR set to: 59
  7734                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7735  01C6AC  9DDC               	bcf	220,6,b	;volatile
  7736                           
  7737                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7738  01C6AE  0E3D               	movlw	61
  7739  01C6B0  6FD1               	movwf	209,b	;volatile
  7740  01C6B2  0EEA               	movlw	234
  7741  01C6B4  6FD0               	movwf	208,b	;volatile
  7742                           
  7743                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7744  01C6B6  0EFF               	movlw	low _port_data
  7745  01C6B8  6FD9               	movwf	217,b	;volatile
  7746  01C6BA  0E04               	movlw	high _port_data
  7747  01C6BC  6FDA               	movwf	218,b	;volatile
  7748  01C6BE  0E00               	movlw	low (_port_data shr (0+16))
  7749  01C6C0  6FDB               	movwf	219,b	;volatile
  7750                           
  7751                           ; BSR set to: 59
  7752                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7753  01C6C2  9BDC               	bcf	220,5,b	;volatile
  7754                           
  7755                           ; BSR set to: 59
  7756                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7757  01C6C4  0012               	return		;funcret
  7758  01C6C6                     __end_of_init_port_dma:
  7759                           	opt callstack 0
  7760                           
  7761 ;; *************** function _init_display *****************
  7762 ;; Defined at:
  7763 ;;		line 38 in file "eadog.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1  [STACK] void 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7772 ;; Tracked objects:
  7773 ;;		On entry : 3F/3B
  7774 ;;		On exit  : 3F/3D
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7781 ;;Total ram usage:        0 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:   17
  7784 ;; This function calls:
  7785 ;;		_ringBufS_init
  7786 ;;		_send_lcd_cmd
  7787 ;;		_send_lcd_cmd_long
  7788 ;;		_send_lcd_data
  7789 ;;		_wdtdelay
  7790 ;; This function is called by:
  7791 ;;		_main
  7792 ;; This function uses a reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text13
  7796  01A7D0                     __ptext13:
  7797                           	opt callstack 0
  7798  01A7D0                     _init_display:
  7799                           	opt callstack 13
  7800                           
  7801                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7802                           
  7803                           ; BSR set to: 59
  7804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7805                           ;incstack = 0
  7806  01A7D0  0E83               	movlw	low _ring_buf1
  7807  01A7D2  0101               	movlb	1	; () banked
  7808  01A7D4  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7809  01A7D6  0E03               	movlw	high _ring_buf1
  7810  01A7D8  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7811                           
  7812                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7813  01A7DA  0E40               	movlw	low _ring_buf2
  7814  01A7DC  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7815  01A7DE  0E03               	movlw	high _ring_buf2
  7816  01A7E0  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7817                           
  7818                           ; BSR set to: 1
  7819                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7820  01A7E2  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  7821  01A7E8  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  7822  01A7EE  EC19  F0E4         	call	_ringBufS_init	;wreg free
  7823                           
  7824                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7825  01A7F2  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  7826  01A7F8  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  7827  01A7FE  EC19  F0E4         	call	_ringBufS_init	;wreg free
  7828                           
  7829                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7830  01A802  84BE               	bsf	190,2,c	;volatile
  7831                           
  7832                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7833  01A804  013D               	movlb	61	; () banked
  7834  01A806  9F14               	bcf	20,7,b	;volatile
  7835                           
  7836                           ; BSR set to: 61
  7837                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7838  01A808  0E20               	movlw	32
  7839  01A80A  6F15               	movwf	21,b	;volatile
  7840                           
  7841                           ; BSR set to: 61
  7842                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7843  01A80C  0E03               	movlw	3
  7844  01A80E  6F16               	movwf	22,b	;volatile
  7845                           
  7846                           ; BSR set to: 61
  7847                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7848  01A810  0E04               	movlw	4
  7849  01A812  6F19               	movwf	25,b	;volatile
  7850                           
  7851                           ; BSR set to: 61
  7852                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7853  01A814  0E02               	movlw	2
  7854  01A816  6F1C               	movwf	28,b	;volatile
  7855                           
  7856                           ; BSR set to: 61
  7857                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7858  01A818  0E83               	movlw	131
  7859  01A81A  6F14               	movwf	20,b	;volatile
  7860                           
  7861                           ; BSR set to: 61
  7862                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7863  01A81C  8F14               	bsf	20,7,b	;volatile
  7864                           
  7865                           ; BSR set to: 61
  7866                           ;eadog.c: 60:  wdtdelay(350000);
  7867  01A81E  0E30               	movlw	48
  7868  01A820  6EE6               	movwf	postinc1,c
  7869  01A822  0E57               	movlw	87
  7870  01A824  6EE6               	movwf	postinc1,c
  7871  01A826  0E05               	movlw	5
  7872  01A828  6EE6               	movwf	postinc1,c
  7873  01A82A  0E00               	movlw	0
  7874  01A82C  6EE6               	movwf	postinc1,c
  7875  01A82E  EC48  F0DF         	call	_wdtdelay	;wreg free
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7879  01A832  0E46               	movlw	70
  7880  01A834  6EE6               	movwf	postinc1,c
  7881  01A836  EC7E  F0E1         	call	_send_lcd_cmd_long	;wreg free
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7885  01A83A  0E41               	movlw	65
  7886  01A83C  6EE6               	movwf	postinc1,c
  7887  01A83E  EC9E  F0E1         	call	_send_lcd_cmd	;wreg free
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;eadog.c: 63:  wdtdelay(80);
  7891  01A842  0E50               	movlw	80
  7892  01A844  6EE6               	movwf	postinc1,c
  7893  01A846  0E00               	movlw	0
  7894  01A848  6EE6               	movwf	postinc1,c
  7895  01A84A  0E00               	movlw	0
  7896  01A84C  6EE6               	movwf	postinc1,c
  7897  01A84E  0E00               	movlw	0
  7898  01A850  6EE6               	movwf	postinc1,c
  7899  01A852  EC48  F0DF         	call	_wdtdelay	;wreg free
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7903  01A856  0E53               	movlw	83
  7904  01A858  6EE6               	movwf	postinc1,c
  7905  01A85A  EC9E  F0E1         	call	_send_lcd_cmd	;wreg free
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;eadog.c: 65:  send_lcd_data(2);
  7909  01A85E  0E02               	movlw	2
  7910  01A860  6EE6               	movwf	postinc1,c
  7911  01A862  EC46  F0E5         	call	_send_lcd_data	;wreg free
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;eadog.c: 66:  wdtdelay(80);
  7915  01A866  0E50               	movlw	80
  7916  01A868  6EE6               	movwf	postinc1,c
  7917  01A86A  0E00               	movlw	0
  7918  01A86C  6EE6               	movwf	postinc1,c
  7919  01A86E  0E00               	movlw	0
  7920  01A870  6EE6               	movwf	postinc1,c
  7921  01A872  0E00               	movlw	0
  7922  01A874  6EE6               	movwf	postinc1,c
  7923  01A876  EC48  F0DF         	call	_wdtdelay	;wreg free
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7927  01A87A  0E51               	movlw	81
  7928  01A87C  6EE6               	movwf	postinc1,c
  7929  01A87E  EC7E  F0E1         	call	_send_lcd_cmd_long	;wreg free
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7933  01A882  013D               	movlb	61	; () banked
  7934  01A884  9F14               	bcf	20,7,b	;volatile
  7935                           
  7936                           ; BSR set to: 61
  7937                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7938  01A886  0E02               	movlw	2
  7939  01A888  6F16               	movwf	22,b	;volatile
  7940                           
  7941                           ; BSR set to: 61
  7942                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7943  01A88A  8F14               	bsf	20,7,b	;volatile
  7944                           
  7945                           ; BSR set to: 61
  7946                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7947  01A88C  931A               	bcf	26,1,b	;volatile
  7948                           
  7949                           ; BSR set to: 61
  7950                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7951  01A88E  0E3F               	movlw	-193
  7952  01A890  013B               	movlb	59	; () banked
  7953  01A892  17FD               	andwf	253,f,b	;volatile
  7954                           
  7955                           ; BSR set to: 59
  7956                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7957  01A894  9BFD               	bcf	253,5,b	;volatile
  7958                           
  7959                           ; BSR set to: 59
  7960                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7961  01A896  51FD               	movf	253,w,b	;volatile
  7962  01A898  0BF9               	andlw	-7
  7963  01A89A  0902               	iorlw	2
  7964  01A89C  6FFD               	movwf	253,b	;volatile
  7965                           
  7966                           ; BSR set to: 59
  7967                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7968  01A89E  0EE7               	movlw	-25
  7969  01A8A0  17FD               	andwf	253,f,b	;volatile
  7970                           
  7971                           ; BSR set to: 59
  7972                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7973  01A8A2  81FD               	bsf	253,0,b	;volatile
  7974                           
  7975                           ; BSR set to: 59
  7976                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7977  01A8A4  0E83               	movlw	low _ring_buf1
  7978  01A8A6  6FF9               	movwf	249,b	;volatile
  7979  01A8A8  0E03               	movlw	high _ring_buf1
  7980  01A8AA  6FFA               	movwf	250,b	;volatile
  7981  01A8AC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7982  01A8AE  6FFB               	movwf	251,b	;volatile
  7983                           
  7984                           ; BSR set to: 59
  7985                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7986  01A8B0  9BFC               	bcf	252,5,b	;volatile
  7987                           
  7988                           ; BSR set to: 59
  7989                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7990  01A8B2  013D               	movlb	61	; () banked
  7991  01A8B4  831A               	bsf	26,1,b	;volatile
  7992                           
  7993                           ; BSR set to: 61
  7994                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7995  01A8B6  94BE               	bcf	190,2,c	;volatile
  7996                           
  7997                           ; BSR set to: 61
  7998                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7999  01A8B8  0012               	return		;funcret
  8000  01A8BA                     __end_of_init_display:
  8001                           	opt callstack 0
  8002                           
  8003 ;; *************** function _send_lcd_data *****************
  8004 ;; Defined at:
  8005 ;;		line 123 in file "eadog.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  data            1  [STACK] const unsigned char 
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;		None
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  1  [STACK] void 
  8012 ;; Registers used:
  8013 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8014 ;; Tracked objects:
  8015 ;;		On entry : 3F/0
  8016 ;;		On exit  : 3F/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8023 ;;Total ram usage:        0 bytes
  8024 ;; Hardware stack levels used:    1
  8025 ;; Hardware stack levels required when called:   16
  8026 ;; This function calls:
  8027 ;;		_SPI1_Exchange8bit
  8028 ;;		_wdtdelay
  8029 ;; This function is called by:
  8030 ;;		_init_display
  8031 ;; This function uses a reentrant model
  8032 ;;
  8033                           
  8034                           	psect	text14
  8035  01CA8C                     __ptext14:
  8036                           	opt callstack 0
  8037  01CA8C                     _send_lcd_data:
  8038                           	opt callstack 13
  8039                           
  8040                           ; BSR set to: 61
  8041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8042                           ;incstack = 0
  8043                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  8044  01CA8C  94BC               	bcf	188,2,c	;volatile
  8045                           
  8046                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  8047                           ;stkvar	_data @ sp[(0)+-1]
  8048  01CA8E  0EFF               	movlw	-1
  8049  01CA90  50E3               	movf	plusw1,w,c
  8050  01CA92  6EE6               	movwf	postinc1,c
  8051  01CA94  EC05  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  8052                           
  8053                           ; BSR set to: 57
  8054                           ;eadog.c: 127:  wdtdelay(8);
  8055  01CA98  0E08               	movlw	8
  8056  01CA9A  6EE6               	movwf	postinc1,c
  8057  01CA9C  0E00               	movlw	0
  8058  01CA9E  6EE6               	movwf	postinc1,c
  8059  01CAA0  0E00               	movlw	0
  8060  01CAA2  6EE6               	movwf	postinc1,c
  8061  01CAA4  0E00               	movlw	0
  8062  01CAA6  6EE6               	movwf	postinc1,c
  8063  01CAA8  EC48  F0DF         	call	_wdtdelay	;wreg free
  8064                           
  8065                           ; BSR set to: 0
  8066                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  8067  01CAAC  52E5               	movf	postdec1,f,c
  8068  01CAAE  0012               	return		;funcret
  8069  01CAB0                     __end_of_send_lcd_data:
  8070                           	opt callstack 0
  8071                           
  8072 ;; *************** function _send_lcd_cmd_long *****************
  8073 ;; Defined at:
  8074 ;;		line 139 in file "eadog.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  cmd             1  [STACK] const unsigned char 
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1  [STACK] void 
  8081 ;; Registers used:
  8082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8083 ;; Tracked objects:
  8084 ;;		On entry : 3F/0
  8085 ;;		On exit  : 3F/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8092 ;;Total ram usage:        0 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:   16
  8095 ;; This function calls:
  8096 ;;		_SPI1_Exchange8bit
  8097 ;;		_wdtdelay
  8098 ;; This function is called by:
  8099 ;;		_init_display
  8100 ;; This function uses a reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text15
  8104  01C2FC                     __ptext15:
  8105                           	opt callstack 0
  8106  01C2FC                     _send_lcd_cmd_long:
  8107                           	opt callstack 13
  8108                           
  8109                           ; BSR set to: 0
  8110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8111                           ;incstack = 0
  8112                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  8113  01C2FC  94BC               	bcf	188,2,c	;volatile
  8114                           
  8115                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  8116  01C2FE  0EFE               	movlw	254
  8117  01C300  6EE6               	movwf	postinc1,c
  8118  01C302  EC05  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  8119                           
  8120                           ; BSR set to: 57
  8121                           ;eadog.c: 143:  wdtdelay(8);
  8122  01C306  0E08               	movlw	8
  8123  01C308  6EE6               	movwf	postinc1,c
  8124  01C30A  0E00               	movlw	0
  8125  01C30C  6EE6               	movwf	postinc1,c
  8126  01C30E  0E00               	movlw	0
  8127  01C310  6EE6               	movwf	postinc1,c
  8128  01C312  0E00               	movlw	0
  8129  01C314  6EE6               	movwf	postinc1,c
  8130  01C316  EC48  F0DF         	call	_wdtdelay	;wreg free
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  8134                           ;stkvar	_cmd @ sp[(0)+-1]
  8135  01C31A  0EFF               	movlw	-1
  8136  01C31C  50E3               	movf	plusw1,w,c
  8137  01C31E  6EE6               	movwf	postinc1,c
  8138  01C320  EC05  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  8139                           
  8140                           ;eadog.c: 145:  wdtdelay(800);
  8141  01C324  0E20               	movlw	32
  8142  01C326  6EE6               	movwf	postinc1,c
  8143  01C328  0E03               	movlw	3
  8144  01C32A  6EE6               	movwf	postinc1,c
  8145  01C32C  0E00               	movlw	0
  8146  01C32E  6EE6               	movwf	postinc1,c
  8147  01C330  0E00               	movlw	0
  8148  01C332  6EE6               	movwf	postinc1,c
  8149  01C334  EC48  F0DF         	call	_wdtdelay	;wreg free
  8150                           
  8151                           ; BSR set to: 0
  8152                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8153  01C338  52E5               	movf	postdec1,f,c
  8154  01C33A  0012               	return		;funcret
  8155  01C33C                     __end_of_send_lcd_cmd_long:
  8156                           	opt callstack 0
  8157                           
  8158 ;; *************** function _send_lcd_cmd *****************
  8159 ;; Defined at:
  8160 ;;		line 130 in file "eadog.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  cmd             1  [STACK] const unsigned char 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1  [STACK] void 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8169 ;; Tracked objects:
  8170 ;;		On entry : 3F/0
  8171 ;;		On exit  : 3F/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8178 ;;Total ram usage:        0 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:   16
  8181 ;; This function calls:
  8182 ;;		_SPI1_Exchange8bit
  8183 ;;		_wdtdelay
  8184 ;; This function is called by:
  8185 ;;		_init_display
  8186 ;; This function uses a reentrant model
  8187 ;;
  8188                           
  8189                           	psect	text16
  8190  01C33C                     __ptext16:
  8191                           	opt callstack 0
  8192  01C33C                     _send_lcd_cmd:
  8193                           	opt callstack 13
  8194                           
  8195                           ; BSR set to: 0
  8196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8197                           ;incstack = 0
  8198                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  8199  01C33C  94BC               	bcf	188,2,c	;volatile
  8200                           
  8201                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  8202  01C33E  0EFE               	movlw	254
  8203  01C340  6EE6               	movwf	postinc1,c
  8204  01C342  EC05  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  8205                           
  8206                           ; BSR set to: 57
  8207                           ;eadog.c: 134:  wdtdelay(8);
  8208  01C346  0E08               	movlw	8
  8209  01C348  6EE6               	movwf	postinc1,c
  8210  01C34A  0E00               	movlw	0
  8211  01C34C  6EE6               	movwf	postinc1,c
  8212  01C34E  0E00               	movlw	0
  8213  01C350  6EE6               	movwf	postinc1,c
  8214  01C352  0E00               	movlw	0
  8215  01C354  6EE6               	movwf	postinc1,c
  8216  01C356  EC48  F0DF         	call	_wdtdelay	;wreg free
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  8220                           ;stkvar	_cmd @ sp[(0)+-1]
  8221  01C35A  0EFF               	movlw	-1
  8222  01C35C  50E3               	movf	plusw1,w,c
  8223  01C35E  6EE6               	movwf	postinc1,c
  8224  01C360  EC05  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  8225                           
  8226                           ;eadog.c: 136:  wdtdelay(8);
  8227  01C364  0E08               	movlw	8
  8228  01C366  6EE6               	movwf	postinc1,c
  8229  01C368  0E00               	movlw	0
  8230  01C36A  6EE6               	movwf	postinc1,c
  8231  01C36C  0E00               	movlw	0
  8232  01C36E  6EE6               	movwf	postinc1,c
  8233  01C370  0E00               	movlw	0
  8234  01C372  6EE6               	movwf	postinc1,c
  8235  01C374  EC48  F0DF         	call	_wdtdelay	;wreg free
  8236                           
  8237                           ; BSR set to: 0
  8238                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8239  01C378  52E5               	movf	postdec1,f,c
  8240  01C37A  0012               	return		;funcret
  8241  01C37C                     __end_of_send_lcd_cmd:
  8242                           	opt callstack 0
  8243                           
  8244 ;; *************** function _SPI1_Exchange8bit *****************
  8245 ;; Defined at:
  8246 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;  data            1  [STACK] unsigned char 
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;		None
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1  [STACK] unsigned char 
  8253 ;; Registers used:
  8254 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 3F/39
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8264 ;;Total ram usage:        0 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:   15
  8267 ;; This function calls:
  8268 ;;		Nothing
  8269 ;; This function is called by:
  8270 ;;		_send_lcd_data
  8271 ;;		_send_lcd_cmd
  8272 ;;		_send_lcd_cmd_long
  8273 ;;		_set_dac
  8274 ;; This function uses a reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text17
  8278  01CC0A                     __ptext17:
  8279                           	opt callstack 0
  8280  01CC0A                     _SPI1_Exchange8bit:
  8281                           	opt callstack 14
  8282                           
  8283                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8284                           
  8285                           ; BSR set to: 0
  8286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8287                           ;incstack = 0
  8288  01CC0A  0E01               	movlw	1
  8289  01CC0C  013D               	movlb	61	; () banked
  8290  01CC0E  6F12               	movwf	18,b	;volatile
  8291                           
  8292                           ; BSR set to: 61
  8293                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8294                           ;stkvar	_data @ sp[(0)+-1]
  8295  01CC10  0EFF               	movlw	-1
  8296  01CC12  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8297  01CC18                     l807:
  8298                           
  8299                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8300  01CC18  0139               	movlb	57	; () banked
  8301  01CC1A  A9A2               	btfss	162,4,b	;volatile
  8302  01CC1C  D7FD               	goto	l807
  8303                           
  8304                           ; BSR set to: 57
  8305                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8306  01CC1E  006F F440  F001    	movff	15632,btemp	;volatile
  8307                           
  8308                           ; BSR set to: 57
  8309                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8310  01CC24  52E5               	movf	postdec1,f,c
  8311  01CC26  0012               	return		;funcret
  8312  01CC28                     __end_of_SPI1_Exchange8bit:
  8313                           	opt callstack 0
  8314                           
  8315 ;; *************** function _ringBufS_init *****************
  8316 ;; Defined at:
  8317 ;;		line 22 in file "ringbufs.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  _this           2  [STACK] PTR volatile struct ring
  8320 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;		None
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  1  [STACK] void 
  8325 ;; Registers used:
  8326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/1
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8336 ;;Total ram usage:        0 bytes
  8337 ;; Hardware stack levels used:    1
  8338 ;; Hardware stack levels required when called:   16
  8339 ;; This function calls:
  8340 ;;		_memset
  8341 ;; This function is called by:
  8342 ;;		_init_display
  8343 ;; This function uses a reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text18
  8347  01C832                     __ptext18:
  8348                           	opt callstack 0
  8349  01C832                     _ringBufS_init:
  8350                           	opt callstack 13
  8351                           
  8352                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8353                           
  8354                           ; BSR set to: 57
  8355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8356                           ;incstack = 0
  8357  01C832  0E43               	movlw	67
  8358  01C834  6EE6               	movwf	postinc1,c
  8359  01C836  0E00               	movlw	0
  8360  01C838  6EE6               	movwf	postinc1,c
  8361  01C83A  0E00               	movlw	0
  8362  01C83C  6EE6               	movwf	postinc1,c
  8363  01C83E  0E00               	movlw	0
  8364  01C840  6EE6               	movwf	postinc1,c
  8365                           
  8366                           ;stkvar	__this @ sp[(-4)+-2]
  8367  01C842  0EFA               	movlw	-6
  8368  01C844  006F FF8F FFE6     	movff	plusw1,postinc1
  8369  01C84A  006F FF8F FFE6     	movff	plusw1,postinc1
  8370  01C850  EC59  F0B9         	call	_memset	;wreg free
  8371                           
  8372                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8373  01C854  52E5               	movf	postdec1,f,c
  8374  01C856  52E5               	movf	postdec1,f,c
  8375  01C858  0012               	return		;funcret
  8376  01C85A                     __end_of_ringBufS_init:
  8377                           	opt callstack 0
  8378                           
  8379 ;; *************** function _init_bsoc *****************
  8380 ;; Defined at:
  8381 ;;		line 110 in file "bsoc.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;		None
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;		None
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1  [STACK] void 
  8388 ;; Registers used:
  8389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8399 ;;Total ram usage:        0 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:   18
  8402 ;; This function calls:
  8403 ;;		_TMR3_SetInterruptHandler
  8404 ;;		_Volts_to_SOC
  8405 ;;		___fldiv
  8406 ;;		___flmul
  8407 ;;		___fltol
  8408 ;;		___xxtofl
  8409 ;;		_conv_raw_result
  8410 ;; This function is called by:
  8411 ;;		_main
  8412 ;; This function uses a reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text19
  8416  018028                     __ptext19:
  8417                           	opt callstack 0
  8418  018028                     _init_bsoc:
  8419                           	opt callstack 12
  8420                           
  8421                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  8422                           
  8423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8424                           ;incstack = 0
  8425  018028  0E00               	movlw	0
  8426  01802A  6EE6               	movwf	postinc1,c
  8427  01802C  0E00               	movlw	0
  8428  01802E  6EE6               	movwf	postinc1,c
  8429  018030  0E7A               	movlw	122
  8430  018032  6EE6               	movwf	postinc1,c
  8431  018034  0E44               	movlw	68
  8432  018036  6EE6               	movwf	postinc1,c
  8433  018038  0E00               	movlw	0
  8434  01803A  6EE6               	movwf	postinc1,c
  8435  01803C  0E04               	movlw	4
  8436  01803E  6EE6               	movwf	postinc1,c
  8437  018040  EC0A  F0AA         	call	_conv_raw_result	;wreg free
  8438  018044  0060  F007  FFE6   	movff	btemp,postinc1
  8439  01804A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8440  018050  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8441  018056  0060  F013  FFE6   	movff	btemp+3,postinc1
  8442  01805C  EC7C  F0CA         	call	___fltol	;wreg free
  8443  018060  0060  F007  FFE6   	movff	btemp,postinc1
  8444  018066  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8445  01806C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8446  018072  0060  F013  FFE6   	movff	btemp+3,postinc1
  8447  018078  0E00               	movlw	0
  8448  01807A  6EE6               	movwf	postinc1,c
  8449  01807C  EC7E  F0C5         	call	___xxtofl	;wreg free
  8450  018080  0060  F007  FFE6   	movff	btemp,postinc1
  8451  018086  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8452  01808C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8453  018092  0060  F013  FFE6   	movff	btemp+3,postinc1
  8454  018098  EC5A  F09F         	call	___flmul	;wreg free
  8455  01809C  0060  F007  FFE6   	movff	btemp,postinc1
  8456  0180A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8457  0180A8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8458  0180AE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8459  0180B4  EC7C  F0CA         	call	___fltol	;wreg free
  8460  0180B8  0060  F007  FFE6   	movff	btemp,postinc1
  8461  0180BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8462  0180C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8463  0180CA  0060  F013  FFE6   	movff	btemp+3,postinc1
  8464  0180D0  EC39  F0D7         	call	_Volts_to_SOC	;wreg free
  8465  0180D4  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  8466  0180DA  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  8467                           
  8468                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  8469  0180E0  EE21  F38B         	lfsr	2,_C+140	;volatile
  8470  0180E4  006F FF7B FFE6     	movff	postinc2,postinc1
  8471  0180EA  006F FF7B FFE6     	movff	postinc2,postinc1
  8472  0180F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8473  0180F6  006F FF7B FFE6     	movff	postinc2,postinc1
  8474  0180FC  0E00               	movlw	0
  8475  0180FE  6EE6               	movwf	postinc1,c
  8476  018100  0E00               	movlw	0
  8477  018102  6EE6               	movwf	postinc1,c
  8478  018104  0EC8               	movlw	200
  8479  018106  6EE6               	movwf	postinc1,c
  8480  018108  0E42               	movlw	66
  8481  01810A  6EE6               	movwf	postinc1,c
  8482  01810C  0E00               	movlw	0
  8483  01810E  6EE6               	movwf	postinc1,c
  8484  018110  0E00               	movlw	0
  8485  018112  6EE6               	movwf	postinc1,c
  8486  018114  0E7A               	movlw	122
  8487  018116  6EE6               	movwf	postinc1,c
  8488  018118  0E44               	movlw	68
  8489  01811A  6EE6               	movwf	postinc1,c
  8490  01811C  0E00               	movlw	0
  8491  01811E  6EE6               	movwf	postinc1,c
  8492  018120  0E04               	movlw	4
  8493  018122  6EE6               	movwf	postinc1,c
  8494  018124  EC0A  F0AA         	call	_conv_raw_result	;wreg free
  8495  018128  0060  F007  FFE6   	movff	btemp,postinc1
  8496  01812E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8497  018134  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8498  01813A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8499  018140  EC7C  F0CA         	call	___fltol	;wreg free
  8500  018144  0060  F007  FFE6   	movff	btemp,postinc1
  8501  01814A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8502  018150  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8503  018156  0060  F013  FFE6   	movff	btemp+3,postinc1
  8504  01815C  0E00               	movlw	0
  8505  01815E  6EE6               	movwf	postinc1,c
  8506  018160  EC7E  F0C5         	call	___xxtofl	;wreg free
  8507  018164  0060  F007  FFE6   	movff	btemp,postinc1
  8508  01816A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8509  018170  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8510  018176  0060  F013  FFE6   	movff	btemp+3,postinc1
  8511  01817C  EC5A  F09F         	call	___flmul	;wreg free
  8512  018180  0060  F007  FFE6   	movff	btemp,postinc1
  8513  018186  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8514  01818C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8515  018192  0060  F013  FFE6   	movff	btemp+3,postinc1
  8516  018198  EC7C  F0CA         	call	___fltol	;wreg free
  8517  01819C  0060  F007  FFE6   	movff	btemp,postinc1
  8518  0181A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8519  0181A8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8520  0181AE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8521  0181B4  EC39  F0D7         	call	_Volts_to_SOC	;wreg free
  8522  0181B8  0060  F004  F00B   	movff	btemp,btemp+10
  8523  0181BE  0060  F008  F00C   	movff	btemp+1,btemp+11
  8524  0181C4  500B               	movf	(btemp+10)^0,w,c
  8525  0181C6  6E05               	movwf	(btemp+4)^0,c
  8526  0181C8  500C               	movf	(btemp+11)^0,w,c
  8527  0181CA  6E06               	movwf	(btemp+5)^0,c
  8528  0181CC  6A07               	clrf	(btemp+6)^0,c
  8529  0181CE  6A08               	clrf	(btemp+7)^0,c
  8530  0181D0  0060  F017  FFE6   	movff	btemp+4,postinc1
  8531  0181D6  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8532  0181DC  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8533  0181E2  0060  F023  FFE6   	movff	btemp+7,postinc1
  8534  0181E8  0E00               	movlw	0
  8535  0181EA  6EE6               	movwf	postinc1,c
  8536  0181EC  EC7E  F0C5         	call	___xxtofl	;wreg free
  8537  0181F0  0060  F007  FFE6   	movff	btemp,postinc1
  8538  0181F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8539  0181FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8540  018202  0060  F013  FFE6   	movff	btemp+3,postinc1
  8541  018208  EC4D  F0A7         	call	___fldiv	;wreg free
  8542  01820C  0060  F007  FFE6   	movff	btemp,postinc1
  8543  018212  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8544  018218  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8545  01821E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8546  018224  EC5A  F09F         	call	___flmul	;wreg free
  8547  018228  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  8548  01822E  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  8549  018234  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  8550  01823A  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  8551                           
  8552                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8553  018240  EE21  F38F         	lfsr	2,_C+144	;volatile
  8554  018244  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  8555  01824A  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  8556  018250  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  8557  018256  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  8558                           
  8559                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8560  01825C  0E46               	movlw	low _calc_bsoc
  8561  01825E  6EE6               	movwf	postinc1,c
  8562  018260  0E34               	movlw	high _calc_bsoc
  8563  018262  6EE6               	movwf	postinc1,c
  8564  018264  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8565  018266  6EE6               	movwf	postinc1,c
  8566  018268  ECA5  F0E4         	call	_TMR3_SetInterruptHandler	;wreg free
  8567                           
  8568                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8569  01826C  0012               	return		;funcret
  8570  01826E                     __end_of_init_bsoc:
  8571                           	opt callstack 0
  8572                           
  8573 ;; *************** function _Volts_to_SOC *****************
  8574 ;; Defined at:
  8575 ;;		line 175 in file "bsoc.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  cvoltage        4  [STACK] const unsigned long 
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  soc             2  [STACK] unsigned short 
  8580 ;;  slot            1  [STACK] unsigned char 
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  2  [STACK] unsigned short 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8594 ;;Total ram usage:        0 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:   15
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_init_bsoc
  8601 ;; This function uses a reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text20
  8605  01AE72                     __ptext20:
  8606                           	opt callstack 0
  8607  01AE72                     _Volts_to_SOC:
  8608                           	opt callstack 0
  8609                           
  8610                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8611  01AE72  52E6               	movf	postinc1,f,c
  8612  01AE74  52E6               	movf	postinc1,f,c
  8613  01AE76  52E6               	movf	postinc1,f,c
  8614                           
  8615                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8616                           ;stkvar	_soc @ sp[(-3)+0]
  8617                           
  8618                           ;incstack = 0
  8619  01AE78  0EFD               	movlw	-3
  8620  01AE7A  6AE3               	clrf	plusw1,c
  8621  01AE7C  0EFE               	movlw	-2
  8622  01AE7E  6AE3               	clrf	plusw1,c
  8623                           
  8624                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8625                           ;stkvar	_slot @ sp[(-3)+2]
  8626  01AE80  0EFF               	movlw	-1
  8627  01AE82  6AE3               	clrf	plusw1,c
  8628  01AE84                     l11302:
  8629                           
  8630                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8631                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8632                           ;stkvar	_slot @ sp[(-3)+2]
  8633  01AE84  0EFF               	movlw	-1
  8634  01AE86  50E3               	movf	plusw1,w,c
  8635  01AE88  0D08               	mullw	8
  8636  01AE8A  0EE3               	movlw	low _BVSOC_TABLE
  8637  01AE8C  24F3               	addwf	243,w,c
  8638  01AE8E  6EF6               	movwf	tblptrl,c
  8639  01AE90  0EF8               	movlw	high _BVSOC_TABLE
  8640  01AE92  20F4               	addwfc	244,w,c
  8641  01AE94  6EF7               	movwf	tblptrh,c
  8642  01AE96                     	if	1	;There are 3 active tblptr bytes
  8643  01AE96  6AF8               	clrf	tblptru,c
  8644  01AE98  0E00               	movlw	low (__mediumconst shr (0+16))
  8645  01AE9A  22F8               	addwfc	tblptru,f,c
  8646  01AE9C                     	endif
  8647  01AE9C  0EF9               	movlw	-7
  8648  01AE9E  50E3               	movf	plusw1,w,c
  8649  01AEA0  0009               	tblrd		*+
  8650  01AEA2  5CF5               	subwf	tablat,w,c
  8651  01AEA4  0EFA               	movlw	-6
  8652  01AEA6  50E3               	movf	plusw1,w,c
  8653  01AEA8  0009               	tblrd		*+
  8654  01AEAA  58F5               	subwfb	tablat,w,c
  8655  01AEAC  0EFB               	movlw	-5
  8656  01AEAE  50E3               	movf	plusw1,w,c
  8657  01AEB0  0009               	tblrd		*+
  8658  01AEB2  58F5               	subwfb	tablat,w,c
  8659  01AEB4  0EFC               	movlw	-4
  8660  01AEB6  50E3               	movf	plusw1,w,c
  8661  01AEB8  0009               	tblrd		*+
  8662  01AEBA  58F5               	subwfb	tablat,w,c
  8663  01AEBC  B0D8               	btfsc	status,0,c
  8664  01AEBE  D020               	goto	l11306
  8665                           
  8666                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8667                           ;stkvar	_slot @ sp[(-3)+2]
  8668  01AEC0  0EFF               	movlw	-1
  8669  01AEC2  50E3               	movf	plusw1,w,c
  8670  01AEC4  0D08               	mullw	8
  8671  01AEC6  0E04               	movlw	4
  8672  01AEC8  26F3               	addwf	243,f,c
  8673  01AECA  0E00               	movlw	0
  8674  01AECC  22F4               	addwfc	244,f,c
  8675  01AECE  0EE3               	movlw	low _BVSOC_TABLE
  8676  01AED0  24F3               	addwf	243,w,c
  8677  01AED2  6EF6               	movwf	tblptrl,c
  8678  01AED4  0EF8               	movlw	high _BVSOC_TABLE
  8679  01AED6  20F4               	addwfc	244,w,c
  8680  01AED8  6EF7               	movwf	tblptrh,c
  8681  01AEDA                     	if	1	;There are 3 active tblptr bytes
  8682  01AEDA  6AF8               	clrf	tblptru,c
  8683  01AEDC  0E00               	movlw	low (__mediumconst shr (0+16))
  8684  01AEDE  22F8               	addwfc	tblptru,f,c
  8685  01AEE0                     	endif
  8686  01AEE0  0009               	tblrd		*+
  8687  01AEE2  006F FFD4  F00B    	movff	tablat,btemp+10
  8688  01AEE8  0009               	tblrd		*+
  8689  01AEEA  006F FFD4  F00C    	movff	tablat,btemp+11
  8690                           
  8691                           ;stkvar	_soc @ sp[(-3)+0]
  8692  01AEF0  0EFD               	movlw	-3
  8693  01AEF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8694  01AEF8  0EFE               	movlw	-2
  8695  01AEFA  0060  F033  FFE3   	movff	btemp+11,plusw1
  8696  01AF00                     l11306:
  8697                           
  8698                           ;bsoc.c: 187:  }
  8699                           ;stkvar	_slot @ sp[(-3)+2]
  8700  01AF00  0EFF               	movlw	-1
  8701  01AF02  2AE3               	incf	plusw1,f,c
  8702                           
  8703                           ;stkvar	_slot @ sp[(-3)+2]
  8704  01AF04  0EFF               	movlw	-1
  8705  01AF06  006F FF8C  F001    	movff	plusw1,btemp
  8706  01AF0C  0E19               	movlw	25
  8707  01AF0E  6401               	cpfsgt	btemp^0,c
  8708  01AF10  D7B9               	goto	l11302
  8709                           
  8710                           ;bsoc.c: 188:  return soc;
  8711                           ;stkvar	_soc @ sp[(-3)+0]
  8712  01AF12  0EFD               	movlw	-3
  8713  01AF14  006F FF8C  F001    	movff	plusw1,btemp
  8714  01AF1A  0EFE               	movlw	-2
  8715  01AF1C  006F FF8C  F002    	movff	plusw1,btemp+1
  8716                           
  8717                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8718  01AF22  0EF9               	movlw	249
  8719  01AF24  26E1               	addwf	fsr1l,f,c
  8720  01AF26  0EFF               	movlw	255
  8721  01AF28  22E2               	addwfc	fsr1h,f,c
  8722  01AF2A  0012               	return		;funcret
  8723  01AF2C                     __end_of_Volts_to_SOC:
  8724                           	opt callstack 0
  8725                           
  8726 ;; *************** function _hid_display *****************
  8727 ;; Defined at:
  8728 ;;		line 22 in file "hid.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  h               2  [STACK] PTR struct H_data
  8731 ;;		 -> H(9), 
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;		None
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  2  [STACK] PTR struct H_data
  8736 ;; Registers used:
  8737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8738 ;; Tracked objects:
  8739 ;;		On entry : 3F/39
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8747 ;;Total ram usage:        0 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; Hardware stack levels required when called:   17
  8750 ;; This function calls:
  8751 ;;		_hid_input
  8752 ;; This function is called by:
  8753 ;;		_main
  8754 ;; This function uses a reentrant model
  8755 ;;
  8756                           
  8757                           	psect	text21
  8758  0186CE                     __ptext21:
  8759                           	opt callstack 0
  8760  0186CE                     _hid_display:
  8761                           	opt callstack 13
  8762                           
  8763                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8764                           ;stkvar	_h @ sp[(0)+-2]
  8765                           
  8766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8767                           ;incstack = 0
  8768  0186CE  0EFE               	movlw	-2
  8769  0186D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8770  0186D6  006F FF8F FFE6     	movff	plusw1,postinc1
  8771  0186DC  EC7F  F0CE         	call	_hid_input	;wreg free
  8772                           
  8773                           ;hid.c: 26:  switch (h->h_state) {
  8774  0186E0  D0E6               	goto	l13872
  8775  0186E2                     l13846:
  8776                           
  8777                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8778                           ;stkvar	_h @ sp[(0)+-2]
  8779  0186E2  0EFE               	movlw	-2
  8780  0186E4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8781  0186EA  0EFF               	movlw	-1
  8782  0186EC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8783  0186F2  0E01               	movlw	1
  8784  0186F4  240B               	addwf	(btemp+10)^0,w,c
  8785  0186F6  6ED9               	movwf	fsr2l,c
  8786  0186F8  0E00               	movlw	0
  8787  0186FA  200C               	addwfc	(btemp+11)^0,w,c
  8788  0186FC  6EDA               	movwf	fsr2h,c
  8789  0186FE  0E01               	movlw	1
  8790  018700  6EDF               	movwf	indf2,c
  8791                           
  8792                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8793                           ;stkvar	_h @ sp[(0)+-2]
  8794  018702  0EFE               	movlw	-2
  8795  018704  006F FF8F FFD9     	movff	plusw1,fsr2l
  8796  01870A  0EFF               	movlw	-1
  8797  01870C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8798  018712  0E00               	movlw	0
  8799  018714  6EDF               	movwf	indf2,c
  8800                           
  8801                           ;hid.c: 30:   h->wait_enter = 1;
  8802                           ;stkvar	_h @ sp[(0)+-2]
  8803  018716  0EFE               	movlw	-2
  8804  018718  006F FF8C  F00B    	movff	plusw1,btemp+10
  8805  01871E  0EFF               	movlw	-1
  8806  018720  006F FF8C  F00C    	movff	plusw1,btemp+11
  8807  018726  0E04               	movlw	4
  8808  018728  240B               	addwf	(btemp+10)^0,w,c
  8809  01872A  6ED9               	movwf	fsr2l,c
  8810  01872C  0E00               	movlw	0
  8811  01872E  200C               	addwfc	(btemp+11)^0,w,c
  8812  018730  6EDA               	movwf	fsr2h,c
  8813  018732  0E01               	movlw	1
  8814  018734  6EDF               	movwf	indf2,c
  8815                           
  8816                           ;hid.c: 31:   h->wait_select = 1;
  8817                           ;stkvar	_h @ sp[(0)+-2]
  8818  018736  0EFE               	movlw	-2
  8819  018738  006F FF8C  F00B    	movff	plusw1,btemp+10
  8820  01873E  0EFF               	movlw	-1
  8821  018740  006F FF8C  F00C    	movff	plusw1,btemp+11
  8822  018746  0E02               	movlw	2
  8823  018748  240B               	addwf	(btemp+10)^0,w,c
  8824  01874A  6ED9               	movwf	fsr2l,c
  8825  01874C  0E00               	movlw	0
  8826  01874E  200C               	addwfc	(btemp+11)^0,w,c
  8827  018750  6EDA               	movwf	fsr2h,c
  8828  018752  0E01               	movlw	1
  8829  018754  6EDF               	movwf	indf2,c
  8830                           
  8831                           ;hid.c: 32:   h->wait_calib = 1;
  8832                           ;stkvar	_h @ sp[(0)+-2]
  8833  018756  0EFE               	movlw	-2
  8834  018758  006F FF8C  F00B    	movff	plusw1,btemp+10
  8835  01875E  0EFF               	movlw	-1
  8836  018760  006F FF8C  F00C    	movff	plusw1,btemp+11
  8837  018766  0E06               	movlw	6
  8838  018768  240B               	addwf	(btemp+10)^0,w,c
  8839  01876A  6ED9               	movwf	fsr2l,c
  8840  01876C  0E00               	movlw	0
  8841  01876E  200C               	addwfc	(btemp+11)^0,w,c
  8842  018770  6EDA               	movwf	fsr2h,c
  8843  018772  0E01               	movlw	1
  8844  018774  6EDF               	movwf	indf2,c
  8845                           
  8846                           ;hid.c: 33:   h->select_p = SW_OFF;
  8847                           ;stkvar	_h @ sp[(0)+-2]
  8848  018776  0EFE               	movlw	-2
  8849  018778  006F FF8C  F00B    	movff	plusw1,btemp+10
  8850  01877E  0EFF               	movlw	-1
  8851  018780  006F FF8C  F00C    	movff	plusw1,btemp+11
  8852  018786  0E03               	movlw	3
  8853  018788  240B               	addwf	(btemp+10)^0,w,c
  8854  01878A  6ED9               	movwf	fsr2l,c
  8855  01878C  0E00               	movlw	0
  8856  01878E  200C               	addwfc	(btemp+11)^0,w,c
  8857  018790  6EDA               	movwf	fsr2h,c
  8858  018792  0E00               	movlw	0
  8859  018794  6EDF               	movwf	indf2,c
  8860                           
  8861                           ;hid.c: 34:   h->enter_p = SW_OFF;
  8862                           ;stkvar	_h @ sp[(0)+-2]
  8863  018796  0EFE               	movlw	-2
  8864  018798  006F FF8C  F00B    	movff	plusw1,btemp+10
  8865  01879E  0EFF               	movlw	-1
  8866  0187A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8867  0187A6  0E05               	movlw	5
  8868  0187A8  240B               	addwf	(btemp+10)^0,w,c
  8869  0187AA  6ED9               	movwf	fsr2l,c
  8870  0187AC  0E00               	movlw	0
  8871  0187AE  200C               	addwfc	(btemp+11)^0,w,c
  8872  0187B0  6EDA               	movwf	fsr2h,c
  8873  0187B2  0E00               	movlw	0
  8874  0187B4  6EDF               	movwf	indf2,c
  8875                           
  8876                           ;hid.c: 35:   h->calib_p = SW_OFF;
  8877                           ;stkvar	_h @ sp[(0)+-2]
  8878  0187B6  0EFE               	movlw	-2
  8879  0187B8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8880  0187BE  0EFF               	movlw	-1
  8881  0187C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8882  0187C6  0E07               	movlw	7
  8883  0187C8  240B               	addwf	(btemp+10)^0,w,c
  8884  0187CA  6ED9               	movwf	fsr2l,c
  8885  0187CC  0E00               	movlw	0
  8886  0187CE  200C               	addwfc	(btemp+11)^0,w,c
  8887  0187D0  6EDA               	movwf	fsr2h,c
  8888  0187D2  0E00               	movlw	0
  8889  0187D4  D06A               	goto	L5
  8890  0187D6                     l13862:
  8891                           
  8892                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8893                           ;stkvar	_h @ sp[(0)+-2]
  8894  0187D6  0EFE               	movlw	-2
  8895  0187D8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8896  0187DE  0EFF               	movlw	-1
  8897  0187E0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8898  0187E6  0E02               	movlw	2
  8899  0187E8  240B               	addwf	(btemp+10)^0,w,c
  8900  0187EA  6ED9               	movwf	fsr2l,c
  8901  0187EC  0E00               	movlw	0
  8902  0187EE  200C               	addwfc	(btemp+11)^0,w,c
  8903  0187F0  6EDA               	movwf	fsr2h,c
  8904  0187F2  50DF               	movf	indf2,w,c
  8905  0187F4  A4D8               	btfss	status,2,c
  8906  0187F6  D076               	goto	l2115
  8907                           
  8908                           ;stkvar	_h @ sp[(0)+-2]
  8909  0187F8  0EFE               	movlw	-2
  8910  0187FA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8911  018800  0EFF               	movlw	-1
  8912  018802  006F FF8C  F00C    	movff	plusw1,btemp+11
  8913  018808  0E03               	movlw	3
  8914  01880A  240B               	addwf	(btemp+10)^0,w,c
  8915  01880C  6ED9               	movwf	fsr2l,c
  8916  01880E  0E00               	movlw	0
  8917  018810  200C               	addwfc	(btemp+11)^0,w,c
  8918  018812  6EDA               	movwf	fsr2h,c
  8919  018814  50DF               	movf	indf2,w,c
  8920  018816  A4D8               	btfss	status,2,c
  8921  018818  D065               	goto	l2115
  8922                           
  8923                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  8924                           ;stkvar	_h @ sp[(0)+-2]
  8925  01881A  0EFE               	movlw	-2
  8926  01881C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8927  018822  0EFF               	movlw	-1
  8928  018824  006F FF8C  F00C    	movff	plusw1,btemp+11
  8929  01882A  0E08               	movlw	8
  8930  01882C  240B               	addwf	(btemp+10)^0,w,c
  8931  01882E  6ED9               	movwf	fsr2l,c
  8932  018830  0E00               	movlw	0
  8933  018832  200C               	addwfc	(btemp+11)^0,w,c
  8934  018834  6EDA               	movwf	fsr2h,c
  8935                           
  8936                           ;stkvar	_h @ sp[(0)+-2]
  8937  018836  0EFE               	movlw	-2
  8938  018838  006F FF8C  F00B    	movff	plusw1,btemp+10
  8939  01883E  0EFF               	movlw	-1
  8940  018840  006F FF8C  F00C    	movff	plusw1,btemp+11
  8941  018846  0E08               	movlw	8
  8942  018848  240B               	addwf	(btemp+10)^0,w,c
  8943  01884A  6EE9               	movwf	fsr0l,c
  8944  01884C  0E00               	movlw	0
  8945  01884E  200C               	addwfc	(btemp+11)^0,w,c
  8946  018850  6EEA               	movwf	fsr0h,c
  8947  018852  2AEF               	incf	indf0,f,c
  8948  018854  50EF               	movf	indf0,w,c
  8949  018856  0B03               	andlw	3
  8950  018858  6EDF               	movwf	indf2,c
  8951                           
  8952                           ;hid.c: 41:    h->hid_display = h->sequence;
  8953                           ;stkvar	_h @ sp[(0)+-2]
  8954  01885A  0EFE               	movlw	-2
  8955  01885C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8956  018862  0EFF               	movlw	-1
  8957  018864  006F FF8C  F00C    	movff	plusw1,btemp+11
  8958  01886A  0E08               	movlw	8
  8959  01886C  240B               	addwf	(btemp+10)^0,w,c
  8960  01886E  6ED9               	movwf	fsr2l,c
  8961  018870  0E00               	movlw	0
  8962  018872  200C               	addwfc	(btemp+11)^0,w,c
  8963  018874  6EDA               	movwf	fsr2h,c
  8964                           
  8965                           ;stkvar	_h @ sp[(0)+-2]
  8966  018876  0EFE               	movlw	-2
  8967  018878  006F FF8F FFE9     	movff	plusw1,fsr0l
  8968  01887E  0EFF               	movlw	-1
  8969  018880  006F FF8F FFEA     	movff	plusw1,fsr0h
  8970  018886  006F FF7F FFEF     	movff	indf2,indf0
  8971                           
  8972                           ;hid.c: 42:    h->wait_select = 1;
  8973                           ;stkvar	_h @ sp[(0)+-2]
  8974  01888C  0EFE               	movlw	-2
  8975  01888E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8976  018894  0EFF               	movlw	-1
  8977  018896  006F FF8C  F00C    	movff	plusw1,btemp+11
  8978  01889C  0E02               	movlw	2
  8979  01889E  240B               	addwf	(btemp+10)^0,w,c
  8980  0188A0  6ED9               	movwf	fsr2l,c
  8981  0188A2  0E00               	movlw	0
  8982  0188A4  200C               	addwfc	(btemp+11)^0,w,c
  8983  0188A6  6EDA               	movwf	fsr2h,c
  8984  0188A8  0E01               	movlw	1
  8985  0188AA                     L5:
  8986  0188AA  6EDF               	movwf	indf2,c
  8987  0188AC  D01B               	goto	l2115
  8988  0188AE                     l13872:
  8989                           
  8990                           ;stkvar	_h @ sp[(0)+-2]
  8991  0188AE  0EFE               	movlw	-2
  8992  0188B0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8993  0188B6  0EFF               	movlw	-1
  8994  0188B8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8995  0188BE  0E01               	movlw	1
  8996  0188C0  240B               	addwf	(btemp+10)^0,w,c
  8997  0188C2  6ED9               	movwf	fsr2l,c
  8998  0188C4  0E00               	movlw	0
  8999  0188C6  200C               	addwfc	(btemp+11)^0,w,c
  9000  0188C8  6EDA               	movwf	fsr2h,c
  9001  0188CA  50DF               	movf	indf2,w,c
  9002  0188CC  6E0B               	movwf	(btemp+10)^0,c
  9003  0188CE  6A0C               	clrf	(btemp+11)^0,c
  9004                           
  9005                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9006                           ; Switch size 1, requested type "simple"
  9007                           ; Number of cases is 1, Range of values is 0 to 0
  9008                           ; switch strategies available:
  9009                           ; Name         Instructions Cycles
  9010                           ; simple_byte            4     3 (average)
  9011                           ;	Chosen strategy is simple_byte
  9012  0188D0  500C               	movf	(btemp+11)^0,w,c
  9013  0188D2  0A00               	xorlw	0	; case 0
  9014  0188D4  A4D8               	btfss	status,2,c
  9015  0188D6  D77F               	goto	l13862
  9016                           
  9017                           ; Switch size 1, requested type "simple"
  9018                           ; Number of cases is 2, Range of values is 0 to 1
  9019                           ; switch strategies available:
  9020                           ; Name         Instructions Cycles
  9021                           ; simple_byte            7     4 (average)
  9022                           ;	Chosen strategy is simple_byte
  9023  0188D8  500B               	movf	(btemp+10)^0,w,c
  9024  0188DA  0A00               	xorlw	0	; case 0
  9025  0188DC  B4D8               	btfsc	status,2,c
  9026  0188DE  D701               	goto	l13846
  9027  0188E0  0A01               	xorlw	1	; case 1
  9028  0188E2  D779               	goto	l13862
  9029  0188E4                     l2115:
  9030                           
  9031                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  9032  0188E4  52E5               	movf	postdec1,f,c
  9033  0188E6  52E5               	movf	postdec1,f,c
  9034  0188E8  0012               	return		;funcret
  9035  0188EA                     __end_of_hid_display:
  9036                           	opt callstack 0
  9037                           
  9038 ;; *************** function _hid_input *****************
  9039 ;; Defined at:
  9040 ;;		line 3 in file "hid.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;  h               2  [STACK] PTR struct H_data
  9043 ;;		 -> H(9), 
  9044 ;; Auto vars:     Size  Location     Type
  9045 ;;		None
  9046 ;; Return value:  Size  Location     Type
  9047 ;;                  2  [STACK] PTR struct H_data
  9048 ;; Registers used:
  9049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9050 ;; Tracked objects:
  9051 ;;		On entry : 0/39
  9052 ;;		On exit  : 0/0
  9053 ;;		Unchanged: 0/0
  9054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9059 ;;Total ram usage:        0 bytes
  9060 ;; Hardware stack levels used:    1
  9061 ;; Hardware stack levels required when called:   16
  9062 ;; This function calls:
  9063 ;;		_get_switch
  9064 ;; This function is called by:
  9065 ;;		_hid_display
  9066 ;; This function uses a reentrant model
  9067 ;;
  9068                           
  9069                           	psect	text22
  9070  019CFE                     __ptext22:
  9071                           	opt callstack 0
  9072  019CFE                     _hid_input:
  9073                           	opt callstack 13
  9074                           
  9075                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  9076                           
  9077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9078                           ;incstack = 0
  9079  019CFE  0E02               	movlw	2
  9080  019D00  6EE6               	movwf	postinc1,c
  9081  019D02  ECC2  F0E3         	call	_get_switch	;wreg free
  9082  019D06  5001               	movf	btemp^0,w,c
  9083  019D08  B4D8               	btfsc	status,2,c
  9084  019D0A  D02C               	goto	l13612
  9085                           
  9086                           ;hid.c: 6:   h->wait_select = 0;
  9087                           ;stkvar	_h @ sp[(0)+-2]
  9088  019D0C  0EFE               	movlw	-2
  9089  019D0E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9090  019D14  0EFF               	movlw	-1
  9091  019D16  006F FF8C  F00C    	movff	plusw1,btemp+11
  9092  019D1C  0E02               	movlw	2
  9093  019D1E  240B               	addwf	(btemp+10)^0,w,c
  9094  019D20  6ED9               	movwf	fsr2l,c
  9095  019D22  0E00               	movlw	0
  9096  019D24  200C               	addwfc	(btemp+11)^0,w,c
  9097  019D26  6EDA               	movwf	fsr2h,c
  9098  019D28  0E00               	movlw	0
  9099  019D2A  6EDF               	movwf	indf2,c
  9100                           
  9101                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  9102  019D2C  0E02               	movlw	2
  9103  019D2E  6EE6               	movwf	postinc1,c
  9104  019D30  ECC2  F0E3         	call	_get_switch	;wreg free
  9105  019D34  5001               	movf	btemp^0,w,c
  9106  019D36  B4D8               	btfsc	status,2,c
  9107  019D38  D003               	goto	u12950
  9108  019D3A  6A0C               	clrf	(btemp+11)^0,c
  9109  019D3C  2A0C               	incf	(btemp+11)^0,f,c
  9110  019D3E  D001               	goto	u12968
  9111  019D40                     u12950:
  9112  019D40  6A0C               	clrf	(btemp+11)^0,c
  9113  019D42                     u12968:
  9114                           
  9115                           ;stkvar	_h @ sp[(0)+-2]
  9116  019D42  0EFE               	movlw	-2
  9117  019D44  006F FF8C  F009    	movff	plusw1,btemp+8
  9118  019D4A  0EFF               	movlw	-1
  9119  019D4C  006F FF8C  F00A    	movff	plusw1,btemp+9
  9120  019D52  0E03               	movlw	3
  9121  019D54  2409               	addwf	(btemp+8)^0,w,c
  9122  019D56  6ED9               	movwf	fsr2l,c
  9123  019D58  0E00               	movlw	0
  9124  019D5A  200A               	addwfc	(btemp+9)^0,w,c
  9125  019D5C  6EDA               	movwf	fsr2h,c
  9126  019D5E  0060  F033  FFDF   	movff	btemp+11,indf2
  9127  019D64                     l13612:
  9128                           
  9129                           ;hid.c: 10:  if (get_switch(SENTER)) {
  9130  019D64  0E03               	movlw	3
  9131  019D66  6EE6               	movwf	postinc1,c
  9132  019D68  ECC2  F0E3         	call	_get_switch	;wreg free
  9133  019D6C  5001               	movf	btemp^0,w,c
  9134  019D6E  B4D8               	btfsc	status,2,c
  9135  019D70  D02C               	goto	l13618
  9136                           
  9137                           ;hid.c: 11:   h->wait_enter = 0;
  9138                           ;stkvar	_h @ sp[(0)+-2]
  9139  019D72  0EFE               	movlw	-2
  9140  019D74  006F FF8C  F00B    	movff	plusw1,btemp+10
  9141  019D7A  0EFF               	movlw	-1
  9142  019D7C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9143  019D82  0E04               	movlw	4
  9144  019D84  240B               	addwf	(btemp+10)^0,w,c
  9145  019D86  6ED9               	movwf	fsr2l,c
  9146  019D88  0E00               	movlw	0
  9147  019D8A  200C               	addwfc	(btemp+11)^0,w,c
  9148  019D8C  6EDA               	movwf	fsr2h,c
  9149  019D8E  0E00               	movlw	0
  9150  019D90  6EDF               	movwf	indf2,c
  9151                           
  9152                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  9153  019D92  0E03               	movlw	3
  9154  019D94  6EE6               	movwf	postinc1,c
  9155  019D96  ECC2  F0E3         	call	_get_switch	;wreg free
  9156  019D9A  5001               	movf	btemp^0,w,c
  9157  019D9C  B4D8               	btfsc	status,2,c
  9158  019D9E  D003               	goto	u12980
  9159  019DA0  6A0C               	clrf	(btemp+11)^0,c
  9160  019DA2  2A0C               	incf	(btemp+11)^0,f,c
  9161  019DA4  D001               	goto	u12998
  9162  019DA6                     u12980:
  9163  019DA6  6A0C               	clrf	(btemp+11)^0,c
  9164  019DA8                     u12998:
  9165                           
  9166                           ;stkvar	_h @ sp[(0)+-2]
  9167  019DA8  0EFE               	movlw	-2
  9168  019DAA  006F FF8C  F009    	movff	plusw1,btemp+8
  9169  019DB0  0EFF               	movlw	-1
  9170  019DB2  006F FF8C  F00A    	movff	plusw1,btemp+9
  9171  019DB8  0E05               	movlw	5
  9172  019DBA  2409               	addwf	(btemp+8)^0,w,c
  9173  019DBC  6ED9               	movwf	fsr2l,c
  9174  019DBE  0E00               	movlw	0
  9175  019DC0  200A               	addwfc	(btemp+9)^0,w,c
  9176  019DC2  6EDA               	movwf	fsr2h,c
  9177  019DC4  0060  F033  FFDF   	movff	btemp+11,indf2
  9178  019DCA                     l13618:
  9179                           
  9180                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  9181  019DCA  0E04               	movlw	4
  9182  019DCC  6EE6               	movwf	postinc1,c
  9183  019DCE  ECC2  F0E3         	call	_get_switch	;wreg free
  9184  019DD2  5001               	movf	btemp^0,w,c
  9185  019DD4  B4D8               	btfsc	status,2,c
  9186  019DD6  D02C               	goto	l2106
  9187                           
  9188                           ;hid.c: 16:   h->wait_calib = 0;
  9189                           ;stkvar	_h @ sp[(0)+-2]
  9190  019DD8  0EFE               	movlw	-2
  9191  019DDA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9192  019DE0  0EFF               	movlw	-1
  9193  019DE2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9194  019DE8  0E06               	movlw	6
  9195  019DEA  240B               	addwf	(btemp+10)^0,w,c
  9196  019DEC  6ED9               	movwf	fsr2l,c
  9197  019DEE  0E00               	movlw	0
  9198  019DF0  200C               	addwfc	(btemp+11)^0,w,c
  9199  019DF2  6EDA               	movwf	fsr2h,c
  9200  019DF4  0E00               	movlw	0
  9201  019DF6  6EDF               	movwf	indf2,c
  9202                           
  9203                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  9204  019DF8  0E04               	movlw	4
  9205  019DFA  6EE6               	movwf	postinc1,c
  9206  019DFC  ECC2  F0E3         	call	_get_switch	;wreg free
  9207  019E00  5001               	movf	btemp^0,w,c
  9208  019E02  B4D8               	btfsc	status,2,c
  9209  019E04  D003               	goto	u13010
  9210  019E06  6A0C               	clrf	(btemp+11)^0,c
  9211  019E08  2A0C               	incf	(btemp+11)^0,f,c
  9212  019E0A  D001               	goto	u13028
  9213  019E0C                     u13010:
  9214  019E0C  6A0C               	clrf	(btemp+11)^0,c
  9215  019E0E                     u13028:
  9216                           
  9217                           ;stkvar	_h @ sp[(0)+-2]
  9218  019E0E  0EFE               	movlw	-2
  9219  019E10  006F FF8C  F009    	movff	plusw1,btemp+8
  9220  019E16  0EFF               	movlw	-1
  9221  019E18  006F FF8C  F00A    	movff	plusw1,btemp+9
  9222  019E1E  0E07               	movlw	7
  9223  019E20  2409               	addwf	(btemp+8)^0,w,c
  9224  019E22  6ED9               	movwf	fsr2l,c
  9225  019E24  0E00               	movlw	0
  9226  019E26  200A               	addwfc	(btemp+9)^0,w,c
  9227  019E28  6EDA               	movwf	fsr2h,c
  9228  019E2A  0060  F033  FFDF   	movff	btemp+11,indf2
  9229  019E30                     l2106:
  9230                           
  9231                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  9232  019E30  52E5               	movf	postdec1,f,c
  9233  019E32  52E5               	movf	postdec1,f,c
  9234  019E34  0012               	return		;funcret
  9235  019E36                     __end_of_hid_input:
  9236                           	opt callstack 0
  9237                           
  9238 ;; *************** function _esr_check *****************
  9239 ;; Defined at:
  9240 ;;		line 197 in file "bsoc.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;  fsm             1  [STACK] const unsigned char 
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;		None
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  4  [STACK] float 
  9247 ;; Registers used:
  9248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9258 ;;Total ram usage:        0 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:   18
  9261 ;; This function calls:
  9262 ;;		_StartTimer
  9263 ;;		_TimerDone
  9264 ;;		___fldiv
  9265 ;;		___flsub
  9266 ;;		_conv_raw_result
  9267 ;;		_fabsf
  9268 ;;		_set_load_relay_one
  9269 ;;		_set_load_relay_two
  9270 ;;		_update_adc_result
  9271 ;; This function is called by:
  9272 ;;		_main
  9273 ;; This function uses a reentrant model
  9274 ;;
  9275                           
  9276                           	psect	text23
  9277  01759E                     __ptext23:
  9278                           	opt callstack 0
  9279  01759E                     _esr_check:
  9280                           	opt callstack 12
  9281                           
  9282                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  9283                           ;stkvar	_fsm @ sp[(0)+-1]
  9284                           
  9285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9286                           ;incstack = 0
  9287  01759E  0EFF               	movlw	-1
  9288  0175A0  50E3               	movf	plusw1,w,c
  9289  0175A2  B4D8               	btfsc	status,2,c
  9290  0175A4  D149               	goto	l11666
  9291                           
  9292                           ;bsoc.c: 202:   esr_state = 0;
  9293  0175A6  0100               	movlb	0	; () banked
  9294  0175A8  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;bsoc.c: 203:   return -10.0;
  9298  0175AA  0E00               	movlw	0
  9299  0175AC  6E01               	movwf	btemp^0,c
  9300  0175AE  0E00               	movlw	0
  9301  0175B0  6E02               	movwf	(btemp+1)^0,c
  9302  0175B2  0E20               	movlw	32
  9303  0175B4  6E03               	movwf	(btemp+2)^0,c
  9304  0175B6  0EC1               	movlw	193
  9305  0175B8  D15B               	goto	L6
  9306  0175BA                     l11598:
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  9310  0175BA  0E10               	movlw	16
  9311  0175BC  6EE6               	movwf	postinc1,c
  9312  0175BE  0E27               	movlw	39
  9313  0175C0  6EE6               	movwf	postinc1,c
  9314  0175C2  0E0C               	movlw	12
  9315  0175C4  6EE6               	movwf	postinc1,c
  9316  0175C6  ECBE  F0E1         	call	_StartTimer	;wreg free
  9317  0175CA                     l11600:
  9318                           
  9319                           ;bsoc.c: 209:   esr_state++;
  9320  0175CA  0100               	movlb	0	; () banked
  9321  0175CC  2BA0               	incf	esr_check@esr_state& (0+255),f,b
  9322                           
  9323                           ;bsoc.c: 210:   break;
  9324  0175CE  D149               	goto	l11668
  9325  0175D0                     l11602:
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;bsoc.c: 215:   set_load_relay_one(0);
  9329  0175D0  0E00               	movlw	0
  9330  0175D2  6EE6               	movwf	postinc1,c
  9331  0175D4  ECCA  F0E6         	call	_set_load_relay_one	;wreg free
  9332                           
  9333                           ;bsoc.c: 216:   set_load_relay_two(0);
  9334  0175D8  0E00               	movlw	0
  9335  0175DA  6EE6               	movwf	postinc1,c
  9336  0175DC  ECC2  F0E6         	call	_set_load_relay_two	;wreg free
  9337                           
  9338                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  9339  0175E0  0E0C               	movlw	12
  9340  0175E2  6EE6               	movwf	postinc1,c
  9341  0175E4  EC2D  F0E4         	call	_TimerDone	;wreg free
  9342  0175E8  5001               	movf	btemp^0,w,c
  9343  0175EA  B4D8               	btfsc	status,2,c
  9344  0175EC  D009               	goto	l11608
  9345                           
  9346                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  9347  0175EE  0E10               	movlw	16
  9348  0175F0  6EE6               	movwf	postinc1,c
  9349  0175F2  0E27               	movlw	39
  9350  0175F4  6EE6               	movwf	postinc1,c
  9351  0175F6  0E0C               	movlw	12
  9352  0175F8  6EE6               	movwf	postinc1,c
  9353  0175FA  ECBE  F0E1         	call	_StartTimer	;wreg free
  9354                           
  9355                           ;bsoc.c: 219:   } else {
  9356  0175FE  D006               	goto	l11612
  9357  017600                     l11608:
  9358                           
  9359                           ;bsoc.c: 220:    return -2.0;
  9360  017600  0E00               	movlw	0
  9361  017602  6E01               	movwf	btemp^0,c
  9362  017604  0E00               	movlw	0
  9363  017606  6E02               	movwf	(btemp+1)^0,c
  9364  017608  0E00               	movlw	0
  9365  01760A  D066               	goto	L8
  9366  01760C                     l11612:
  9367                           
  9368                           ;bsoc.c: 225:   update_adc_result();
  9369  01760C  EC5A  F0E2         	call	_update_adc_result	;wreg free
  9370                           
  9371                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9372  017610  0E00               	movlw	0
  9373  017612  6EE6               	movwf	postinc1,c
  9374  017614  0E04               	movlw	4
  9375  017616  6EE6               	movwf	postinc1,c
  9376  017618  EC0A  F0AA         	call	_conv_raw_result	;wreg free
  9377  01761C  0060  F004  F815   	movff	btemp,_C+278	;volatile
  9378  017622  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  9379  017628  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  9380  01762E  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  9381  017634  D7CA               	goto	l11600
  9382  017636                     l11618:
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;bsoc.c: 230:   set_load_relay_one(1);
  9386  017636  0E01               	movlw	1
  9387  017638  6EE6               	movwf	postinc1,c
  9388  01763A  ECCA  F0E6         	call	_set_load_relay_one	;wreg free
  9389                           
  9390                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  9391  01763E  0E0C               	movlw	12
  9392  017640  6EE6               	movwf	postinc1,c
  9393  017642  EC2D  F0E4         	call	_TimerDone	;wreg free
  9394  017646  5001               	movf	btemp^0,w,c
  9395  017648  B4D8               	btfsc	status,2,c
  9396  01764A  D009               	goto	l11624
  9397                           
  9398                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  9399  01764C  0E10               	movlw	16
  9400  01764E  6EE6               	movwf	postinc1,c
  9401  017650  0E27               	movlw	39
  9402  017652  6EE6               	movwf	postinc1,c
  9403  017654  0E0C               	movlw	12
  9404  017656  6EE6               	movwf	postinc1,c
  9405  017658  ECBE  F0E1         	call	_StartTimer	;wreg free
  9406                           
  9407                           ;bsoc.c: 233:   } else {
  9408  01765C  D006               	goto	l11628
  9409  01765E                     l11624:
  9410                           
  9411                           ;bsoc.c: 234:    return -3.0;
  9412  01765E  0E00               	movlw	0
  9413  017660  6E01               	movwf	btemp^0,c
  9414  017662  0E00               	movlw	0
  9415  017664  6E02               	movwf	(btemp+1)^0,c
  9416  017666  0E40               	movlw	64
  9417  017668  D037               	goto	L8
  9418  01766A                     l11628:
  9419                           
  9420                           ;bsoc.c: 237:   update_adc_result();
  9421  01766A  EC5A  F0E2         	call	_update_adc_result	;wreg free
  9422                           
  9423                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  9424  01766E  0E00               	movlw	0
  9425  017670  6EE6               	movwf	postinc1,c
  9426  017672  0E04               	movlw	4
  9427  017674  6EE6               	movwf	postinc1,c
  9428  017676  EC0A  F0AA         	call	_conv_raw_result	;wreg free
  9429  01767A  0060  F004  F819   	movff	btemp,_C+282	;volatile
  9430  017680  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  9431  017686  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  9432  01768C  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  9433                           
  9434                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  9435  017692  0E00               	movlw	0
  9436  017694  6EE6               	movwf	postinc1,c
  9437  017696  0E00               	movlw	0
  9438  017698  6EE6               	movwf	postinc1,c
  9439  01769A  EC0A  F0AA         	call	_conv_raw_result	;wreg free
  9440  01769E  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  9441  0176A4  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  9442  0176AA  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  9443  0176B0  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  9444  0176B6  D789               	goto	l11600
  9445  0176B8                     l11636:
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;bsoc.c: 243:   set_load_relay_two(1);
  9449  0176B8  0E01               	movlw	1
  9450  0176BA  6EE6               	movwf	postinc1,c
  9451  0176BC  ECC2  F0E6         	call	_set_load_relay_two	;wreg free
  9452                           
  9453                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9454  0176C0  0E0C               	movlw	12
  9455  0176C2  6EE6               	movwf	postinc1,c
  9456  0176C4  EC2D  F0E4         	call	_TimerDone	;wreg free
  9457  0176C8  5001               	movf	btemp^0,w,c
  9458  0176CA  A4D8               	btfss	status,2,c
  9459  0176CC  D008               	goto	l11644
  9460                           
  9461                           ;bsoc.c: 245:    return -4.0;
  9462  0176CE  0E00               	movlw	0
  9463  0176D0  6E01               	movwf	btemp^0,c
  9464  0176D2  0E00               	movlw	0
  9465  0176D4  6E02               	movwf	(btemp+1)^0,c
  9466  0176D6  0E80               	movlw	128
  9467  0176D8                     L8:
  9468  0176D8  6E03               	movwf	(btemp+2)^0,c
  9469  0176DA  0EC0               	movlw	192
  9470  0176DC  D0C9               	goto	L6
  9471  0176DE                     l11644:
  9472                           
  9473                           ;bsoc.c: 247:   update_adc_result();
  9474  0176DE  EC5A  F0E2         	call	_update_adc_result	;wreg free
  9475                           
  9476                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9477  0176E2  0E00               	movlw	0
  9478  0176E4  6EE6               	movwf	postinc1,c
  9479  0176E6  0E04               	movlw	4
  9480  0176E8  6EE6               	movwf	postinc1,c
  9481  0176EA  EC0A  F0AA         	call	_conv_raw_result	;wreg free
  9482  0176EE  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  9483  0176F4  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  9484  0176FA  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  9485  017700  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  9486                           
  9487                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9488  017706  0E00               	movlw	0
  9489  017708  6EE6               	movwf	postinc1,c
  9490  01770A  0E00               	movlw	0
  9491  01770C  6EE6               	movwf	postinc1,c
  9492  01770E  EC0A  F0AA         	call	_conv_raw_result	;wreg free
  9493  017712  0060  F004  F811   	movff	btemp,_C+274	;volatile
  9494  017718  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  9495  01771E  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  9496  017724  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  9497                           
  9498                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9499  01772A  EE22  F011         	lfsr	2,_C+274	;volatile
  9500  01772E  006F FF7B FFE6     	movff	postinc2,postinc1
  9501  017734  006F FF7B FFE6     	movff	postinc2,postinc1
  9502  01773A  006F FF7B FFE6     	movff	postinc2,postinc1
  9503  017740  006F FF7B FFE6     	movff	postinc2,postinc1
  9504  017746  EE22  F00D         	lfsr	2,_C+270	;volatile
  9505  01774A  006F FF7B FFE6     	movff	postinc2,postinc1
  9506  017750  006F FF7B FFE6     	movff	postinc2,postinc1
  9507  017756  006F FF7B FFE6     	movff	postinc2,postinc1
  9508  01775C  006F FF7B FFE6     	movff	postinc2,postinc1
  9509  017762  EC18  F0E1         	call	___flsub	;wreg free
  9510  017766  0060  F007  FFE6   	movff	btemp,postinc1
  9511  01776C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9512  017772  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9513  017778  0060  F013  FFE6   	movff	btemp+3,postinc1
  9514  01777E  EE22  F01D         	lfsr	2,_C+286	;volatile
  9515  017782  006F FF7B FFE6     	movff	postinc2,postinc1
  9516  017788  006F FF7B FFE6     	movff	postinc2,postinc1
  9517  01778E  006F FF7B FFE6     	movff	postinc2,postinc1
  9518  017794  006F FF7B FFE6     	movff	postinc2,postinc1
  9519  01779A  EE22  F019         	lfsr	2,_C+282	;volatile
  9520  01779E  006F FF7B FFE6     	movff	postinc2,postinc1
  9521  0177A4  006F FF7B FFE6     	movff	postinc2,postinc1
  9522  0177AA  006F FF7B FFE6     	movff	postinc2,postinc1
  9523  0177B0  006F FF7B FFE6     	movff	postinc2,postinc1
  9524  0177B6  EC18  F0E1         	call	___flsub	;wreg free
  9525  0177BA  0060  F007  FFE6   	movff	btemp,postinc1
  9526  0177C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9527  0177C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9528  0177CC  0060  F013  FFE6   	movff	btemp+3,postinc1
  9529  0177D2  EC4D  F0A7         	call	___fldiv	;wreg free
  9530  0177D6  0060  F007  FFE6   	movff	btemp,postinc1
  9531  0177DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9532  0177E2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9533  0177E8  0060  F013  FFE6   	movff	btemp+3,postinc1
  9534  0177EE  EC4D  F0D8         	call	_fabsf	;wreg free
  9535  0177F2  0060  F004  F787   	movff	btemp,_C+136	;volatile
  9536  0177F8  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  9537  0177FE  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  9538  017804  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  9539                           
  9540                           ;bsoc.c: 252:   set_load_relay_one(0);
  9541  01780A  0E00               	movlw	0
  9542  01780C  6EE6               	movwf	postinc1,c
  9543  01780E  ECCA  F0E6         	call	_set_load_relay_one	;wreg free
  9544                           
  9545                           ;bsoc.c: 253:   set_load_relay_two(0);
  9546  017812  0E00               	movlw	0
  9547  017814  6EE6               	movwf	postinc1,c
  9548  017816  ECC2  F0E6         	call	_set_load_relay_two	;wreg free
  9549                           
  9550                           ;bsoc.c: 254:   esr_state = 0;
  9551  01781A  0100               	movlb	0	; () banked
  9552  01781C  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;bsoc.c: 255:   return C.esr;
  9556  01781E  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  9557  017824  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  9558  01782A  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  9559  017830  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  9560  017836  D01D               	goto	l2231
  9561  017838                     l11666:
  9562  017838  0100               	movlb	0	; () banked
  9563  01783A  51A0               	movf	esr_check@esr_state& (0+255),w,b
  9564  01783C  6E0B               	movwf	(btemp+10)^0,c
  9565  01783E  6A0C               	clrf	(btemp+11)^0,c
  9566                           
  9567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9568                           ; Switch size 1, requested type "simple"
  9569                           ; Number of cases is 1, Range of values is 0 to 0
  9570                           ; switch strategies available:
  9571                           ; Name         Instructions Cycles
  9572                           ; simple_byte            4     3 (average)
  9573                           ;	Chosen strategy is simple_byte
  9574  017840  500C               	movf	(btemp+11)^0,w,c
  9575  017842  0A00               	xorlw	0	; case 0
  9576  017844  A4D8               	btfss	status,2,c
  9577  017846  D00D               	goto	l11668
  9578                           
  9579                           ; BSR set to: 0
  9580                           ; Switch size 1, requested type "simple"
  9581                           ; Number of cases is 4, Range of values is 0 to 3
  9582                           ; switch strategies available:
  9583                           ; Name         Instructions Cycles
  9584                           ; simple_byte           13     7 (average)
  9585                           ;	Chosen strategy is simple_byte
  9586  017848  500B               	movf	(btemp+10)^0,w,c
  9587  01784A  0A00               	xorlw	0	; case 0
  9588  01784C  B4D8               	btfsc	status,2,c
  9589  01784E  D6B5               	goto	l11598
  9590  017850  0A01               	xorlw	1	; case 1
  9591  017852  B4D8               	btfsc	status,2,c
  9592  017854  D6BD               	goto	l11602
  9593  017856  0A03               	xorlw	3	; case 2
  9594  017858  B4D8               	btfsc	status,2,c
  9595  01785A  D6ED               	goto	l11618
  9596  01785C  0A01               	xorlw	1	; case 3
  9597  01785E  B4D8               	btfsc	status,2,c
  9598  017860  D72B               	goto	l11636
  9599  017862                     l11668:
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;bsoc.c: 260:  return -1.0;
  9603  017862  0E00               	movlw	0
  9604  017864  6E01               	movwf	btemp^0,c
  9605  017866  0E00               	movlw	0
  9606  017868  6E02               	movwf	(btemp+1)^0,c
  9607  01786A  0E80               	movlw	128
  9608  01786C  6E03               	movwf	(btemp+2)^0,c
  9609  01786E  0EBF               	movlw	191
  9610  017870                     L6:
  9611  017870  6E04               	movwf	(btemp+3)^0,c
  9612  017872                     l2231:
  9613                           
  9614                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9615  017872  52E5               	movf	postdec1,f,c
  9616  017874  0012               	return		;funcret
  9617  017876                     __end_of_esr_check:
  9618                           	opt callstack 0
  9619                           
  9620 ;; *************** function _update_adc_result *****************
  9621 ;; Defined at:
  9622 ;;		line 103 in file "daq.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;		None
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;		None
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  1  [STACK] _Bool 
  9629 ;; Registers used:
  9630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9640 ;;Total ram usage:        0 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; Hardware stack levels required when called:   17
  9643 ;; This function calls:
  9644 ;;		_StartTimer
  9645 ;;		_TimerDone
  9646 ;;		_check_adc_scan
  9647 ;;		_clear_adc_scan
  9648 ;;		_start_adc_scan
  9649 ;; This function is called by:
  9650 ;;		_esr_check
  9651 ;; This function uses a reentrant model
  9652 ;;
  9653                           
  9654                           	psect	text24
  9655  01C4B4                     __ptext24:
  9656                           	opt callstack 0
  9657  01C4B4                     _update_adc_result:
  9658                           	opt callstack 12
  9659                           
  9660                           ;daq.c: 105:  if (R.done) {
  9661                           
  9662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9663                           ;incstack = 0
  9664  01C4B4  0100               	movlb	0	; () banked
  9665  01C4B6  51E0               	movf	(_R+53)& (0+255),w,b	;volatile
  9666  01C4B8  B4D8               	btfsc	status,2,c
  9667  01C4BA  0012               	return	
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;daq.c: 106:   clear_adc_scan();
  9671  01C4BC  EC37  F0E7         	call	_clear_adc_scan	;wreg free
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;daq.c: 107:   start_adc_scan();
  9675  01C4C0  EC57  F0DE         	call	_start_adc_scan	;wreg free
  9676                           
  9677                           ;daq.c: 108:   StartTimer(TMR_ADC, 200);
  9678  01C4C4  0EC8               	movlw	200
  9679  01C4C6  6EE6               	movwf	postinc1,c
  9680  01C4C8  0E00               	movlw	0
  9681  01C4CA  6EE6               	movwf	postinc1,c
  9682  01C4CC  0E01               	movlw	1
  9683  01C4CE  6EE6               	movwf	postinc1,c
  9684  01C4D0  ECBE  F0E1         	call	_StartTimer	;wreg free
  9685  01C4D4                     l11090:
  9686  01C4D4  0E01               	movlw	1
  9687  01C4D6  6EE6               	movwf	postinc1,c
  9688  01C4D8  EC2D  F0E4         	call	_TimerDone	;wreg free
  9689  01C4DC  5001               	movf	btemp^0,w,c
  9690  01C4DE  A4D8               	btfss	status,2,c
  9691  01C4E0  0012               	return	
  9692  01C4E2  EC23  F0E7         	call	_check_adc_scan	;wreg free
  9693  01C4E6  5001               	movf	btemp^0,w,c
  9694  01C4E8  A4D8               	btfss	status,2,c
  9695  01C4EA  0012               	return	
  9696  01C4EC  D7F3               	goto	l11090
  9697  01C4EE                     __end_of_update_adc_result:
  9698                           	opt callstack 0
  9699                           
  9700 ;; *************** function _check_adc_scan *****************
  9701 ;; Defined at:
  9702 ;;		line 87 in file "daq.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;		None
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1  [STACK] _Bool 
  9709 ;; Registers used:
  9710 ;;		btemp
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/1
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9720 ;;Total ram usage:        0 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:   15
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_main
  9727 ;;		_update_adc_result
  9728 ;; This function uses a reentrant model
  9729 ;;
  9730                           
  9731                           	psect	text25
  9732  01CE46                     __ptext25:
  9733                           	opt callstack 0
  9734  01CE46                     _check_adc_scan:
  9735                           	opt callstack 13
  9736                           
  9737                           ;daq.c: 89:  return R.done;
  9738                           
  9739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9740                           ;incstack = 0
  9741  01CE46  0060  F380  F001   	movff	_R+53,btemp	;volatile
  9742                           
  9743                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9744  01CE4C  0012               	return		;funcret
  9745  01CE4E                     __end_of_check_adc_scan:
  9746                           	opt callstack 0
  9747                           
  9748 ;; *************** function _set_load_relay_two *****************
  9749 ;; Defined at:
  9750 ;;		line 130 in file "mbmc.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;  mode            1  [STACK] const _Bool 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;		None
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  1  [STACK] void 
  9757 ;; Registers used:
  9758 ;;		wreg, fsr1l, fsr1h
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9768 ;;Total ram usage:        0 bytes
  9769 ;; Hardware stack levels used:    1
  9770 ;; Hardware stack levels required when called:   15
  9771 ;; This function calls:
  9772 ;;		Nothing
  9773 ;; This function is called by:
  9774 ;;		_main
  9775 ;;		_esr_check
  9776 ;; This function uses a reentrant model
  9777 ;;
  9778                           
  9779                           	psect	text26
  9780  01CD84                     __ptext26:
  9781                           	opt callstack 0
  9782  01CD84                     _set_load_relay_two:
  9783                           	opt callstack 15
  9784                           
  9785                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9786                           ;stkvar	_mode @ sp[(0)+-1]
  9787                           
  9788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9789                           ;incstack = 0
  9790  01CD84  0EFF               	movlw	-1
  9791  01CD86  B0E3               	btfsc	plusw1,0,c
  9792  01CD88  D002               	bra	u9885
  9793  01CD8A  9ABD               	bcf	189,5,c	;volatile
  9794  01CD8C  D001               	bra	u9886
  9795  01CD8E                     u9885:
  9796  01CD8E  8ABD               	bsf	189,5,c	;volatile
  9797  01CD90                     u9886:
  9798                           
  9799                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9800  01CD90  52E5               	movf	postdec1,f,c
  9801  01CD92  0012               	return		;funcret
  9802  01CD94                     __end_of_set_load_relay_two:
  9803                           	opt callstack 0
  9804                           
  9805 ;; *************** function _set_load_relay_one *****************
  9806 ;; Defined at:
  9807 ;;		line 125 in file "mbmc.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;  mode            1  [STACK] const _Bool 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;		None
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  1  [STACK] void 
  9814 ;; Registers used:
  9815 ;;		wreg, fsr1l, fsr1h
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9825 ;;Total ram usage:        0 bytes
  9826 ;; Hardware stack levels used:    1
  9827 ;; Hardware stack levels required when called:   15
  9828 ;; This function calls:
  9829 ;;		Nothing
  9830 ;; This function is called by:
  9831 ;;		_main
  9832 ;;		_esr_check
  9833 ;; This function uses a reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text27
  9837  01CD94                     __ptext27:
  9838                           	opt callstack 0
  9839  01CD94                     _set_load_relay_one:
  9840                           	opt callstack 15
  9841                           
  9842                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9843                           ;stkvar	_mode @ sp[(0)+-1]
  9844                           
  9845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9846                           ;incstack = 0
  9847  01CD94  0EFF               	movlw	-1
  9848  01CD96  B0E3               	btfsc	plusw1,0,c
  9849  01CD98  D002               	bra	u9875
  9850  01CD9A  98BD               	bcf	189,4,c	;volatile
  9851  01CD9C  D001               	bra	u9876
  9852  01CD9E                     u9875:
  9853  01CD9E  88BD               	bsf	189,4,c	;volatile
  9854  01CDA0                     u9876:
  9855                           
  9856                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9857  01CDA0  52E5               	movf	postdec1,f,c
  9858  01CDA2  0012               	return		;funcret
  9859  01CDA4                     __end_of_set_load_relay_one:
  9860                           	opt callstack 0
  9861                           
  9862 ;; *************** function _eaDogM_WriteCommand *****************
  9863 ;; Defined at:
  9864 ;;		line 385 in file "eadog.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;  cmd             1  [STACK] const unsigned char 
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;		None
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1  [STACK] void 
  9871 ;; Registers used:
  9872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9873 ;; Tracked objects:
  9874 ;;		On entry : 3F/3D
  9875 ;;		On exit  : 3F/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9882 ;;Total ram usage:        0 bytes
  9883 ;; Hardware stack levels used:    1
  9884 ;; Hardware stack levels required when called:   26
  9885 ;; This function calls:
  9886 ;;		_send_lcd_cmd_dma
  9887 ;; This function is called by:
  9888 ;;		_main
  9889 ;; This function uses a reentrant model
  9890 ;;
  9891                           
  9892                           	psect	text28
  9893  01CDC4                     __ptext28:
  9894                           	opt callstack 0
  9895  01CDC4                     _eaDogM_WriteCommand:
  9896                           	opt callstack 4
  9897                           
  9898                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9899                           ;stkvar	_cmd @ sp[(0)+-1]
  9900                           
  9901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9902                           ;incstack = 0
  9903  01CDC4  0EFF               	movlw	-1
  9904  01CDC6  50E3               	movf	plusw1,w,c
  9905  01CDC8  6EE6               	movwf	postinc1,c
  9906  01CDCA  EC14  F0E6         	call	_send_lcd_cmd_dma	;wreg free
  9907                           
  9908                           ; BSR set to: 0
  9909                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9910  01CDCE  52E5               	movf	postdec1,f,c
  9911  01CDD0  0012               	return		;funcret
  9912  01CDD2                     __end_of_eaDogM_WriteCommand:
  9913                           	opt callstack 0
  9914                           
  9915 ;; *************** function _current_sensor_cal *****************
  9916 ;; Defined at:
  9917 ;;		line 482 in file "main.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;		None
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;  x               1  [STACK] unsigned char 
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  1  [STACK] _Bool 
  9924 ;; Registers used:
  9925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/1
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9935 ;;Total ram usage:        0 bytes
  9936 ;; Hardware stack levels used:    1
  9937 ;; Hardware stack levels required when called:   28
  9938 ;; This function calls:
  9939 ;;		_WaitMs
  9940 ;;		_cal_current_zero
  9941 ;;		_clear_adc_scan
  9942 ;;		_get_raw_result
  9943 ;;		_get_switch
  9944 ;;		_get_vterm_ptr
  9945 ;;		_spinners
  9946 ;;		_sprintf
  9947 ;;		_start_adc_scan
  9948 ;;		_update_lcd
  9949 ;;		_write_cal_data
  9950 ;; This function is called by:
  9951 ;;		_main
  9952 ;; This function uses a reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text29
  9956  016556                     __ptext29:
  9957                           	opt callstack 0
  9958  016556                     _current_sensor_cal:
  9959                           	opt callstack 0
  9960                           
  9961                           ; BSR set to: 0
  9962                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9963  016556  52E6               	movf	postinc1,f,c
  9964                           
  9965                           ;main.c: 484:  uint8_t x = 0;
  9966                           ;stkvar	_x @ sp[(-1)+0]
  9967                           
  9968                           ;incstack = 0
  9969  016558  0EFF               	movlw	-1
  9970  01655A  6AE3               	clrf	plusw1,c
  9971                           
  9972                           ;main.c: 486:  sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9973  01655C  0EB5               	movlw	low STR_45
  9974  01655E  6EE6               	movwf	postinc1,c
  9975  016560  0EFE               	movlw	high STR_45
  9976  016562  6EE6               	movwf	postinc1,c
  9977  016564  0E00               	movlw	0
  9978  016566  6EE6               	movwf	postinc1,c
  9979  016568  0E00               	movlw	0
  9980  01656A  6EE6               	movwf	postinc1,c
  9981  01656C  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  9982  016570  0060  F007  FFE6   	movff	btemp,postinc1
  9983  016576  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9984  01657C  0E04               	movlw	4
  9985  01657E  6EE6               	movwf	postinc1,c
  9986  016580  EC6E  F0D2         	call	_sprintf	;wreg free
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;main.c: 487:  sprintf(get_vterm_ptr(1, 0), "Sensor              ");
  9990  016584  0ECE               	movlw	low STR_46
  9991  016586  6EE6               	movwf	postinc1,c
  9992  016588  0EFD               	movlw	high STR_46
  9993  01658A  6EE6               	movwf	postinc1,c
  9994  01658C  0E00               	movlw	0
  9995  01658E  6EE6               	movwf	postinc1,c
  9996  016590  0E01               	movlw	1
  9997  016592  6EE6               	movwf	postinc1,c
  9998  016594  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
  9999  016598  0060  F007  FFE6   	movff	btemp,postinc1
 10000  01659E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10001  0165A4  0E04               	movlw	4
 10002  0165A6  6EE6               	movwf	postinc1,c
 10003  0165A8  EC6E  F0D2         	call	_sprintf	;wreg free
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;main.c: 488:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10007  0165AC  0E4C               	movlw	low STR_47
 10008  0165AE  6EE6               	movwf	postinc1,c
 10009  0165B0  0EFE               	movlw	high STR_47
 10010  0165B2  6EE6               	movwf	postinc1,c
 10011  0165B4  0E00               	movlw	0
 10012  0165B6  6EE6               	movwf	postinc1,c
 10013  0165B8  0E02               	movlw	2
 10014  0165BA  6EE6               	movwf	postinc1,c
 10015  0165BC  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10016  0165C0  0060  F007  FFE6   	movff	btemp,postinc1
 10017  0165C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10018  0165CC  0E04               	movlw	4
 10019  0165CE  6EE6               	movwf	postinc1,c
 10020  0165D0  EC6E  F0D2         	call	_sprintf	;wreg free
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;main.c: 489:  update_lcd(0);
 10024  0165D4  0E00               	movlw	0
 10025  0165D6  6EE6               	movwf	postinc1,c
 10026  0165D8  ECE6  F0D1         	call	_update_lcd	;wreg free
 10027                           
 10028                           ;main.c: 490:  WaitMs(2000);
 10029  0165DC  0ED0               	movlw	208
 10030  0165DE  6EE6               	movwf	postinc1,c
 10031  0165E0  0E07               	movlw	7
 10032  0165E2  6EE6               	movwf	postinc1,c
 10033  0165E4  ECAF  F0E2         	call	_WaitMs	;wreg free
 10034                           
 10035                           ;main.c: 491:  sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10036  0165E8  0E00               	movlw	0
 10037  0165EA  6EE6               	movwf	postinc1,c
 10038  0165EC  0E04               	movlw	4
 10039  0165EE  6EE6               	movwf	postinc1,c
 10040  0165F0  ECF3  F0D2         	call	_spinners	;wreg free
 10041  0165F4  5001               	movf	btemp^0,w,c
 10042  0165F6  6EE6               	movwf	postinc1,c
 10043  0165F8  0E00               	movlw	0
 10044  0165FA  6EE6               	movwf	postinc1,c
 10045  0165FC  0E48               	movlw	low STR_48
 10046  0165FE  6EE6               	movwf	postinc1,c
 10047  016600  0EFF               	movlw	high STR_48
 10048  016602  6EE6               	movwf	postinc1,c
 10049  016604  0E00               	movlw	0
 10050  016606  6EE6               	movwf	postinc1,c
 10051  016608  0E02               	movlw	2
 10052  01660A  6EE6               	movwf	postinc1,c
 10053  01660C  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10054  016610  0060  F007  FFE6   	movff	btemp,postinc1
 10055  016616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10056  01661C  0E06               	movlw	6
 10057  01661E  6EE6               	movwf	postinc1,c
 10058  016620  EC6E  F0D2         	call	_sprintf	;wreg free
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;main.c: 492:  update_lcd(0);
 10062  016624  0E00               	movlw	0
 10063  016626  6EE6               	movwf	postinc1,c
 10064  016628  ECE6  F0D1         	call	_update_lcd	;wreg free
 10065  01662C                     l13794:
 10066                           
 10067                           ;main.c: 494:   if (++x > 50)
 10068                           ;stkvar	_x @ sp[(-1)+0]
 10069  01662C  0EFF               	movlw	-1
 10070  01662E  2AE3               	incf	plusw1,f,c
 10071  016630  0EFF               	movlw	-1
 10072  016632  006F FF8C  F001    	movff	plusw1,btemp
 10073  016638  0E32               	movlw	50
 10074  01663A  6401               	cpfsgt	btemp^0,c
 10075  01663C  D001               	goto	l13798
 10076  01663E  D14B               	goto	l1406
 10077  016640                     l13798:
 10078                           
 10079                           ;main.c: 496:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10080  016640  0E00               	movlw	0
 10081  016642  6EE6               	movwf	postinc1,c
 10082  016644  0E04               	movlw	4
 10083  016646  6EE6               	movwf	postinc1,c
 10084  016648  ECF3  F0D2         	call	_spinners	;wreg free
 10085  01664C  5001               	movf	btemp^0,w,c
 10086  01664E  6EE6               	movwf	postinc1,c
 10087  016650  0E00               	movlw	0
 10088  016652  6EE6               	movwf	postinc1,c
 10089  016654  0E48               	movlw	low STR_48
 10090  016656  6EE6               	movwf	postinc1,c
 10091  016658  0EFF               	movlw	high STR_48
 10092  01665A  6EE6               	movwf	postinc1,c
 10093  01665C  0E00               	movlw	0
 10094  01665E  6EE6               	movwf	postinc1,c
 10095  016660  0E02               	movlw	2
 10096  016662  6EE6               	movwf	postinc1,c
 10097  016664  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10098  016668  0060  F007  FFE6   	movff	btemp,postinc1
 10099  01666E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10100  016674  0E06               	movlw	6
 10101  016676  6EE6               	movwf	postinc1,c
 10102  016678  EC6E  F0D2         	call	_sprintf	;wreg free
 10103                           
 10104                           ;main.c: 497:   update_lcd(0);
 10105  01667C  0E00               	movlw	0
 10106  01667E  6EE6               	movwf	postinc1,c
 10107  016680  ECE6  F0D1         	call	_update_lcd	;wreg free
 10108                           
 10109                           ;main.c: 498:   WaitMs(100);
 10110  016684  0E64               	movlw	100
 10111  016686  6EE6               	movwf	postinc1,c
 10112  016688  0E00               	movlw	0
 10113  01668A  6EE6               	movwf	postinc1,c
 10114  01668C  ECAF  F0E2         	call	_WaitMs	;wreg free
 10115                           
 10116                           ;main.c: 499:  } while (get_switch(SCALIB));
 10117  016690  0E04               	movlw	4
 10118  016692  6EE6               	movwf	postinc1,c
 10119  016694  ECC2  F0E3         	call	_get_switch	;wreg free
 10120  016698  5001               	movf	btemp^0,w,c
 10121  01669A  A4D8               	btfss	status,2,c
 10122  01669C  D7C7               	goto	l13794
 10123                           
 10124                           ;main.c: 501:  x = 0;
 10125                           ;stkvar	_x @ sp[(-1)+0]
 10126  01669E  0EFF               	movlw	-1
 10127  0166A0  6AE3               	clrf	plusw1,c
 10128  0166A2                     l13806:
 10129                           
 10130                           ;main.c: 503:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 10131  0166A2  0EDF               	movlw	low STR_50
 10132  0166A4  6EE6               	movwf	postinc1,c
 10133  0166A6  0EFE               	movlw	high STR_50
 10134  0166A8  6EE6               	movwf	postinc1,c
 10135  0166AA  0E00               	movlw	0
 10136  0166AC  6EE6               	movwf	postinc1,c
 10137  0166AE  0E00               	movlw	0
 10138  0166B0  6EE6               	movwf	postinc1,c
 10139  0166B2  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10140  0166B6  0060  F007  FFE6   	movff	btemp,postinc1
 10141  0166BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10142  0166C2  0E04               	movlw	4
 10143  0166C4  6EE6               	movwf	postinc1,c
 10144  0166C6  EC6E  F0D2         	call	_sprintf	;wreg free
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;main.c: 504:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10148  0166CA  0E01               	movlw	1
 10149  0166CC  6EE6               	movwf	postinc1,c
 10150  0166CE  EC41  F0E6         	call	_get_raw_result	;wreg free
 10151  0166D2  0060  F007  FFE6   	movff	btemp,postinc1
 10152  0166D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10153  0166DE  0E00               	movlw	0
 10154  0166E0  6EE6               	movwf	postinc1,c
 10155  0166E2  EC41  F0E6         	call	_get_raw_result	;wreg free
 10156  0166E6  0060  F007  FFE6   	movff	btemp,postinc1
 10157  0166EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10158  0166F2  0EB9               	movlw	low STR_51
 10159  0166F4  6EE6               	movwf	postinc1,c
 10160  0166F6  0EFD               	movlw	high STR_51
 10161  0166F8  6EE6               	movwf	postinc1,c
 10162  0166FA  0E00               	movlw	0
 10163  0166FC  6EE6               	movwf	postinc1,c
 10164  0166FE  0E01               	movlw	1
 10165  016700  6EE6               	movwf	postinc1,c
 10166  016702  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10167  016706  0060  F007  FFE6   	movff	btemp,postinc1
 10168  01670C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10169  016712  0E08               	movlw	8
 10170  016714  6EE6               	movwf	postinc1,c
 10171  016716  EC6E  F0D2         	call	_sprintf	;wreg free
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;main.c: 505:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 10175                           ;stkvar	_x @ sp[(-1)+0]
 10176  01671A  0EFF               	movlw	-1
 10177  01671C  50E3               	movf	plusw1,w,c
 10178  01671E  6EE6               	movwf	postinc1,c
 10179  016720  0E00               	movlw	0
 10180  016722  6EE6               	movwf	postinc1,c
 10181  016724  0E1E               	movlw	low STR_52
 10182  016726  6EE6               	movwf	postinc1,c
 10183  016728  0EFF               	movlw	high STR_52
 10184  01672A  6EE6               	movwf	postinc1,c
 10185  01672C  0E00               	movlw	0
 10186  01672E  6EE6               	movwf	postinc1,c
 10187  016730  0E02               	movlw	2
 10188  016732  6EE6               	movwf	postinc1,c
 10189  016734  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10190  016738  0060  F007  FFE6   	movff	btemp,postinc1
 10191  01673E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10192  016744  0E06               	movlw	6
 10193  016746  6EE6               	movwf	postinc1,c
 10194  016748  EC6E  F0D2         	call	_sprintf	;wreg free
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;main.c: 506:   update_lcd(0);
 10198  01674C  0E00               	movlw	0
 10199  01674E  6EE6               	movwf	postinc1,c
 10200  016750  ECE6  F0D1         	call	_update_lcd	;wreg free
 10201                           
 10202                           ;main.c: 507:   clear_adc_scan();
 10203  016754  EC37  F0E7         	call	_clear_adc_scan	;wreg free
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;main.c: 508:   start_adc_scan();
 10207  016758  EC57  F0DE         	call	_start_adc_scan	;wreg free
 10208                           
 10209                           ;main.c: 509:   WaitMs(100);
 10210  01675C  0E64               	movlw	100
 10211  01675E  6EE6               	movwf	postinc1,c
 10212  016760  0E00               	movlw	0
 10213  016762  6EE6               	movwf	postinc1,c
 10214  016764  ECAF  F0E2         	call	_WaitMs	;wreg free
 10215                           
 10216                           ;main.c: 510:  } while (++x < 50);
 10217                           ;stkvar	_x @ sp[(-1)+0]
 10218  016768  0EFF               	movlw	-1
 10219  01676A  2AE3               	incf	plusw1,f,c
 10220  01676C  0EFF               	movlw	-1
 10221  01676E  006F FF8C  F001    	movff	plusw1,btemp
 10222  016774  0E31               	movlw	49
 10223  016776  6401               	cpfsgt	btemp^0,c
 10224  016778  D794               	goto	l13806
 10225                           
 10226                           ;main.c: 512:  if (cal_current_zero(0)) {
 10227  01677A  0E00               	movlw	0
 10228  01677C  6EE6               	movwf	postinc1,c
 10229  01677E  EC15  F0D6         	call	_cal_current_zero	;wreg free
 10230  016782  5001               	movf	btemp^0,w,c
 10231  016784  B4D8               	btfsc	status,2,c
 10232  016786  D04D               	goto	l13838
 10233                           
 10234                           ;main.c: 513:   cal_current_zero(1);
 10235  016788  0E01               	movlw	1
 10236  01678A  6EE6               	movwf	postinc1,c
 10237  01678C  EC15  F0D6         	call	_cal_current_zero	;wreg free
 10238                           
 10239                           ;main.c: 514:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10240  016790  0EB5               	movlw	low STR_45
 10241  016792  6EE6               	movwf	postinc1,c
 10242  016794  0EFE               	movlw	high STR_45
 10243  016796  6EE6               	movwf	postinc1,c
 10244  016798  0E00               	movlw	0
 10245  01679A  6EE6               	movwf	postinc1,c
 10246  01679C  0E00               	movlw	0
 10247  01679E  6EE6               	movwf	postinc1,c
 10248  0167A0  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10249  0167A4  0060  F007  FFE6   	movff	btemp,postinc1
 10250  0167AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10251  0167B0  0E04               	movlw	4
 10252  0167B2  6EE6               	movwf	postinc1,c
 10253  0167B4  EC6E  F0D2         	call	_sprintf	;wreg free
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;main.c: 515:   sprintf(get_vterm_ptr(1, 0), "Sensors             ");
 10257  0167B8  0EE3               	movlw	low STR_54
 10258  0167BA  6EE6               	movwf	postinc1,c
 10259  0167BC  0EFD               	movlw	high STR_54
 10260  0167BE  6EE6               	movwf	postinc1,c
 10261  0167C0  0E00               	movlw	0
 10262  0167C2  6EE6               	movwf	postinc1,c
 10263  0167C4  0E01               	movlw	1
 10264  0167C6  6EE6               	movwf	postinc1,c
 10265  0167C8  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10266  0167CC  0060  F007  FFE6   	movff	btemp,postinc1
 10267  0167D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10268  0167D8  0E04               	movlw	4
 10269  0167DA  6EE6               	movwf	postinc1,c
 10270  0167DC  EC6E  F0D2         	call	_sprintf	;wreg free
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;main.c: 516:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 10274  0167E0  0E8B               	movlw	low STR_55
 10275  0167E2  6EE6               	movwf	postinc1,c
 10276  0167E4  0EFE               	movlw	high STR_55
 10277  0167E6  6EE6               	movwf	postinc1,c
 10278  0167E8  0E00               	movlw	0
 10279  0167EA  6EE6               	movwf	postinc1,c
 10280  0167EC  0E02               	movlw	2
 10281  0167EE  6EE6               	movwf	postinc1,c
 10282  0167F0  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10283  0167F4  0060  F007  FFE6   	movff	btemp,postinc1
 10284  0167FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10285  016800  0E04               	movlw	4
 10286  016802  6EE6               	movwf	postinc1,c
 10287  016804  EC6E  F0D2         	call	_sprintf	;wreg free
 10288                           
 10289                           ; BSR set to: 0
 10290                           ;main.c: 517:   update_lcd(0);
 10291  016808  0E00               	movlw	0
 10292  01680A  6EE6               	movwf	postinc1,c
 10293  01680C  ECE6  F0D1         	call	_update_lcd	;wreg free
 10294                           
 10295                           ;main.c: 518:   WaitMs(2000);
 10296  016810  0ED0               	movlw	208
 10297  016812  6EE6               	movwf	postinc1,c
 10298  016814  0E07               	movlw	7
 10299  016816  6EE6               	movwf	postinc1,c
 10300  016818  ECAF  F0E2         	call	_WaitMs	;wreg free
 10301                           
 10302                           ;main.c: 519:   write_cal_data();
 10303  01681C  ECDA  F0D6         	call	_write_cal_data	;wreg free
 10304                           
 10305                           ;main.c: 520:  } else {
 10306  016820  D05A               	goto	l1406
 10307  016822                     l13838:
 10308                           
 10309                           ;main.c: 521:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10310  016822  0EB5               	movlw	low STR_45
 10311  016824  6EE6               	movwf	postinc1,c
 10312  016826  0EFE               	movlw	high STR_45
 10313  016828  6EE6               	movwf	postinc1,c
 10314  01682A  0E00               	movlw	0
 10315  01682C  6EE6               	movwf	postinc1,c
 10316  01682E  0E00               	movlw	0
 10317  016830  6EE6               	movwf	postinc1,c
 10318  016832  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10319  016836  0060  F007  FFE6   	movff	btemp,postinc1
 10320  01683C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10321  016842  0E04               	movlw	4
 10322  016844  6EE6               	movwf	postinc1,c
 10323  016846  EC6E  F0D2         	call	_sprintf	;wreg free
 10324                           
 10325                           ;main.c: 522:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10326  01684A  0E01               	movlw	1
 10327  01684C  6EE6               	movwf	postinc1,c
 10328  01684E  EC41  F0E6         	call	_get_raw_result	;wreg free
 10329  016852  0060  F007  FFE6   	movff	btemp,postinc1
 10330  016858  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10331  01685E  0E00               	movlw	0
 10332  016860  6EE6               	movwf	postinc1,c
 10333  016862  EC41  F0E6         	call	_get_raw_result	;wreg free
 10334  016866  0060  F007  FFE6   	movff	btemp,postinc1
 10335  01686C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10336  016872  0EB9               	movlw	low STR_51
 10337  016874  6EE6               	movwf	postinc1,c
 10338  016876  0EFD               	movlw	high STR_51
 10339  016878  6EE6               	movwf	postinc1,c
 10340  01687A  0E00               	movlw	0
 10341  01687C  6EE6               	movwf	postinc1,c
 10342  01687E  0E01               	movlw	1
 10343  016880  6EE6               	movwf	postinc1,c
 10344  016882  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10345  016886  0060  F007  FFE6   	movff	btemp,postinc1
 10346  01688C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10347  016892  0E08               	movlw	8
 10348  016894  6EE6               	movwf	postinc1,c
 10349  016896  EC6E  F0D2         	call	_sprintf	;wreg free
 10350                           
 10351                           ;main.c: 523:   sprintf(get_vterm_ptr(2, 0), "Out Of Range        ");
 10352  01689A  0E76               	movlw	low STR_58
 10353  01689C  6EE6               	movwf	postinc1,c
 10354  01689E  0EFE               	movlw	high STR_58
 10355  0168A0  6EE6               	movwf	postinc1,c
 10356  0168A2  0E00               	movlw	0
 10357  0168A4  6EE6               	movwf	postinc1,c
 10358  0168A6  0E02               	movlw	2
 10359  0168A8  6EE6               	movwf	postinc1,c
 10360  0168AA  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 10361  0168AE  0060  F007  FFE6   	movff	btemp,postinc1
 10362  0168B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10363  0168BA  0E04               	movlw	4
 10364  0168BC  6EE6               	movwf	postinc1,c
 10365  0168BE  EC6E  F0D2         	call	_sprintf	;wreg free
 10366                           
 10367                           ;main.c: 524:   update_lcd(0);
 10368  0168C2  0E00               	movlw	0
 10369  0168C4  6EE6               	movwf	postinc1,c
 10370  0168C6  ECE6  F0D1         	call	_update_lcd	;wreg free
 10371                           
 10372                           ;main.c: 525:   WaitMs(2000);
 10373  0168CA  0ED0               	movlw	208
 10374  0168CC  6EE6               	movwf	postinc1,c
 10375  0168CE  0E07               	movlw	7
 10376  0168D0  6EE6               	movwf	postinc1,c
 10377  0168D2  ECAF  F0E2         	call	_WaitMs	;wreg free
 10378  0168D6                     l1406:
 10379                           
 10380                           ; _current_sensor_cal: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 10381  0168D6  52E5               	movf	postdec1,f,c
 10382  0168D8  0012               	return		;funcret
 10383  0168DA                     __end_of_current_sensor_cal:
 10384                           	opt callstack 0
 10385                           
 10386 ;; *************** function _write_cal_data *****************
 10387 ;; Defined at:
 10388 ;;		line 373 in file "daq.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;		None
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;  x               2  [STACK] unsigned short 
 10393 ;;  y               2  [STACK] unsigned short 
 10394 ;;  r_cal_ptr       1  [STACK] PTR unsigned char 
 10395 ;;		 -> R(58), 
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  1  [STACK] void 
 10398 ;; Registers used:
 10399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10409 ;;Total ram usage:        0 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; Hardware stack levels required when called:   16
 10412 ;; This function calls:
 10413 ;;		_DATAEE_WriteByte
 10414 ;; This function is called by:
 10415 ;;		_current_sensor_cal
 10416 ;; This function uses a reentrant model
 10417 ;;
 10418                           
 10419                           	psect	text30
 10420  01ADB4                     __ptext30:
 10421                           	opt callstack 0
 10422  01ADB4                     _write_cal_data:
 10423                           	opt callstack 0
 10424                           
 10425                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10426  01ADB4  0E05               	movlw	5
 10427  01ADB6  26E1               	addwf	fsr1l,f,c
 10428  01ADB8  0E00               	movlw	0
 10429  01ADBA  22E2               	addwfc	fsr1h,f,c
 10430                           
 10431                           ;daq.c: 375:  uint16_t x = 0, y;
 10432                           ;stkvar	_x @ sp[(-5)+0]
 10433                           
 10434                           ;incstack = 0
 10435  01ADBC  0EFB               	movlw	-5
 10436  01ADBE  6AE3               	clrf	plusw1,c
 10437  01ADC0  0EFC               	movlw	-4
 10438  01ADC2  6AE3               	clrf	plusw1,c
 10439                           
 10440                           ;daq.c: 376:  uint8_t *r_cal_ptr;;daq.c: 378:  y = sizeof(R);
 10441  01ADC4  0E3A               	movlw	58
 10442  01ADC6  6E0B               	movwf	(btemp+10)^0,c
 10443  01ADC8  0E00               	movlw	0
 10444  01ADCA  6E0C               	movwf	(btemp+11)^0,c
 10445                           
 10446                           ;stkvar	_y @ sp[(-5)+2]
 10447  01ADCC  0EFD               	movlw	-3
 10448  01ADCE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10449  01ADD4  0EFE               	movlw	-2
 10450  01ADD6  0060  F033  FFE3   	movff	btemp+11,plusw1
 10451                           
 10452                           ;daq.c: 379:  r_cal_ptr = (uint8_t*) &R;
 10453                           ;stkvar	_r_cal_ptr @ sp[(-5)+4]
 10454  01ADDC  0EAB               	movlw	low _R
 10455  01ADDE  6E01               	movwf	btemp^0,c
 10456  01ADE0  0EFF               	movlw	-1
 10457  01ADE2  0060  F007  FFE3   	movff	btemp,plusw1
 10458                           
 10459                           ;daq.c: 380:  R.checkmark = 0x1957;
 10460  01ADE8  0E19               	movlw	25
 10461  01ADEA  0100               	movlb	0	; () banked
 10462  01ADEC  6FE2               	movwf	(_R+55)& (0+255),b	;volatile
 10463  01ADEE  0E57               	movlw	87
 10464  01ADF0  6FE1               	movwf	(_R+54)& (0+255),b	;volatile
 10465  01ADF2                     l11012:
 10466                           
 10467                           ;daq.c: 383:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 10468                           ;stkvar	_x @ sp[(-5)+0]
 10469  01ADF2  0EFB               	movlw	-5
 10470  01ADF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10471                           
 10472                           ;stkvar	_r_cal_ptr @ sp[(-5)+4]
 10473  01ADFA  0EFF               	movlw	-1
 10474  01ADFC  50E3               	movf	plusw1,w,c
 10475  01ADFE  240C               	addwf	(btemp+11)^0,w,c
 10476  01AE00  6ED9               	movwf	fsr2l,c
 10477  01AE02  6ADA               	clrf	fsr2h,c
 10478  01AE04  50DF               	movf	indf2,w,c
 10479  01AE06  6EE6               	movwf	postinc1,c
 10480                           
 10481                           ;stkvar	_x @ sp[(-6)+0]
 10482  01AE08  0EFA               	movlw	-6
 10483  01AE0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10484  01AE10  006F FF8F FFE6     	movff	plusw1,postinc1
 10485  01AE16  ECBD  F0DD         	call	_DATAEE_WriteByte	;wreg free
 10486                           
 10487                           ;daq.c: 384:  } while (++x < y);
 10488                           ;stkvar	_y @ sp[(-5)+2]
 10489  01AE1A  0EFD               	movlw	-3
 10490  01AE1C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10491  01AE22  0EFE               	movlw	-2
 10492  01AE24  006F FF8C  F00C    	movff	plusw1,btemp+11
 10493                           
 10494                           ;stkvar	_x @ sp[(-5)+0]
 10495  01AE2A  0EFB               	movlw	-5
 10496  01AE2C  50E3               	movf	plusw1,w,c
 10497  01AE2E  0F01               	addlw	1
 10498  01AE30  6E01               	movwf	btemp^0,c
 10499  01AE32  0EFB               	movlw	-5
 10500  01AE34  0060  F007  FFE3   	movff	btemp,plusw1
 10501  01AE3A  6A01               	clrf	btemp^0,c
 10502  01AE3C  0EFC               	movlw	-4
 10503  01AE3E  50E3               	movf	plusw1,w,c
 10504  01AE40  2001               	addwfc	btemp^0,w,c
 10505  01AE42  6E01               	movwf	btemp^0,c
 10506  01AE44  0EFC               	movlw	-4
 10507  01AE46  0060  F007  FFE3   	movff	btemp,plusw1
 10508  01AE4C  0EFB               	movlw	-5
 10509  01AE4E  006F FF8C  F009    	movff	plusw1,btemp+8
 10510  01AE54  0EFC               	movlw	-4
 10511  01AE56  006F FF8C  F00A    	movff	plusw1,btemp+9
 10512  01AE5C  500B               	movf	(btemp+10)^0,w,c
 10513  01AE5E  5C09               	subwf	(btemp+8)^0,w,c
 10514  01AE60  500C               	movf	(btemp+11)^0,w,c
 10515  01AE62  580A               	subwfb	(btemp+9)^0,w,c
 10516  01AE64  A0D8               	btfss	status,0,c
 10517  01AE66  D7C5               	goto	l11012
 10518                           
 10519                           ; _write_cal_data: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10520  01AE68  0EFB               	movlw	251
 10521  01AE6A  26E1               	addwf	fsr1l,f,c
 10522  01AE6C  0EFF               	movlw	255
 10523  01AE6E  22E2               	addwfc	fsr1h,f,c
 10524  01AE70  0012               	return		;funcret
 10525  01AE72                     __end_of_write_cal_data:
 10526                           	opt callstack 0
 10527                           
 10528 ;; *************** function _DATAEE_WriteByte *****************
 10529 ;; Defined at:
 10530 ;;		line 172 in file "mcc_generated_files/memory.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  bAdd            2  [STACK] unsigned short 
 10533 ;;  bData           1  [STACK] unsigned char 
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;  GIEBitValue     1  [STACK] unsigned char 
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  1  [STACK] void 
 10538 ;; Registers used:
 10539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10549 ;;Total ram usage:        0 bytes
 10550 ;; Hardware stack levels used:    1
 10551 ;; Hardware stack levels required when called:   15
 10552 ;; This function calls:
 10553 ;;		Nothing
 10554 ;; This function is called by:
 10555 ;;		_write_cal_data
 10556 ;; This function uses a reentrant model
 10557 ;;
 10558                           
 10559                           	psect	text31
 10560  01BB7A                     __ptext31:
 10561                           	opt callstack 0
 10562  01BB7A                     _DATAEE_WriteByte:
 10563                           	opt callstack 0
 10564                           
 10565                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10566  01BB7A  52E6               	movf	postinc1,f,c
 10567                           
 10568                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 10569                           
 10570                           ;incstack = 0
 10571  01BB7C  AED2               	btfss	210,7,c	;volatile
 10572  01BB7E  D003               	goto	u9580
 10573  01BB80  6A0C               	clrf	(btemp+11)^0,c
 10574  01BB82  2A0C               	incf	(btemp+11)^0,f,c
 10575  01BB84  D001               	goto	u9588
 10576  01BB86                     u9580:
 10577  01BB86  6A0C               	clrf	(btemp+11)^0,c
 10578  01BB88                     u9588:
 10579                           
 10580                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 10581  01BB88  0EFF               	movlw	-1
 10582  01BB8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10583                           
 10584                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 10585                           ;stkvar	_bAdd @ sp[(-1)+-2]
 10586  01BB90  0EFE               	movlw	254
 10587  01BB92  24E1               	addwf	fsr1l,w,c
 10588  01BB94  6ED9               	movwf	fsr2l,c
 10589  01BB96  0EFF               	movlw	255
 10590  01BB98  20E2               	addwfc	fsr1h,w,c
 10591  01BB9A  6EDA               	movwf	fsr2h,c
 10592  01BB9C  50DF               	movf	indf2,w,c
 10593  01BB9E  0B03               	andlw	3
 10594  01BBA0  0139               	movlb	57	; () banked
 10595  01BBA2  6FE1               	movwf	225,b	;volatile
 10596                           
 10597                           ; BSR set to: 57
 10598                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 10599                           ;stkvar	_bAdd @ sp[(-1)+-2]
 10600  01BBA4  0EFD               	movlw	-3
 10601  01BBA6  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 10602                           
 10603                           ; BSR set to: 57
 10604                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 10605                           ;stkvar	_bData @ sp[(-1)+-3]
 10606  01BBAC  0EFC               	movlw	-4
 10607  01BBAE  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 10608                           
 10609                           ; BSR set to: 57
 10610                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 10611  01BBB4  0E3F               	movlw	-193
 10612  01BBB6  17E5               	andwf	229,f,b	;volsfr
 10613                           
 10614                           ; BSR set to: 57
 10615                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 10616  01BBB8  85E5               	bsf	229,2,b	;volsfr
 10617                           
 10618                           ; BSR set to: 57
 10619                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 10620  01BBBA  9ED2               	bcf	210,7,c	;volatile
 10621                           
 10622                           ; BSR set to: 57
 10623                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 10624  01BBBC  0E55               	movlw	85
 10625  01BBBE  6FE6               	movwf	230,b	;volsfr
 10626                           
 10627                           ; BSR set to: 57
 10628                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 10629  01BBC0  0EAA               	movlw	170
 10630  01BBC2  6FE6               	movwf	230,b	;volsfr
 10631                           
 10632                           ; BSR set to: 57
 10633                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 10634  01BBC4  83E5               	bsf	229,1,b	;volsfr
 10635  01BBC6                     l940:
 10636                           
 10637                           ; BSR set to: 57
 10638                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 10639  01BBC6  B3E5               	btfsc	229,1,b	;volsfr
 10640  01BBC8  D7FE               	goto	l940
 10641                           
 10642                           ; BSR set to: 57
 10643                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 10644  01BBCA  95E5               	bcf	229,2,b	;volsfr
 10645                           
 10646                           ; BSR set to: 57
 10647                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 10648                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 10649  01BBCC  0EFF               	movlw	-1
 10650  01BBCE  B0E3               	btfsc	plusw1,0,c
 10651  01BBD0  D002               	bra	u9605
 10652  01BBD2  9ED2               	bcf	210,7,c	;volatile
 10653  01BBD4  D001               	bra	u9606
 10654  01BBD6                     u9605:
 10655  01BBD6  8ED2               	bsf	210,7,c	;volatile
 10656  01BBD8                     u9606:
 10657                           
 10658                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10659  01BBD8  52E5               	movf	postdec1,f,c
 10660  01BBDA  52E5               	movf	postdec1,f,c
 10661  01BBDC  52E5               	movf	postdec1,f,c
 10662  01BBDE  52E5               	movf	postdec1,f,c
 10663  01BBE0  0012               	return		;funcret
 10664  01BBE2                     __end_of_DATAEE_WriteByte:
 10665                           	opt callstack 0
 10666                           
 10667 ;; *************** function _start_adc_scan *****************
 10668 ;; Defined at:
 10669 ;;		line 64 in file "daq.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;		None
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;		None
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  1  [STACK] _Bool 
 10676 ;; Registers used:
 10677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 1/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10687 ;;Total ram usage:        0 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; Hardware stack levels required when called:   16
 10690 ;; This function calls:
 10691 ;;		_ADCC_DischargeSampleCapacitor
 10692 ;;		_ADCC_SetADIInterruptHandler
 10693 ;;		_ADCC_SetADTIInterruptHandler
 10694 ;;		_ADCC_StartConversion
 10695 ;; This function is called by:
 10696 ;;		_main
 10697 ;;		_current_sensor_cal
 10698 ;;		_update_adc_result
 10699 ;; This function uses a reentrant model
 10700 ;;
 10701                           
 10702                           	psect	text32
 10703  01BCAE                     __ptext32:
 10704                           	opt callstack 0
 10705  01BCAE                     _start_adc_scan:
 10706                           	opt callstack 14
 10707                           
 10708                           ;daq.c: 66:  if (R.done)
 10709                           
 10710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10711                           ;incstack = 0
 10712  01BCAE  0100               	movlb	0	; () banked
 10713  01BCB0  51E0               	movf	(_R+53)& (0+255),w,b	;volatile
 10714  01BCB2  A4D8               	btfss	status,2,c
 10715  01BCB4  0012               	return	
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;daq.c: 69:  R.scan_index = 0;
 10719  01BCB6  6BDD               	clrf	(_R+50)& (0+255),b	;volatile
 10720                           
 10721                           ; BSR set to: 0
 10722                           ;daq.c: 70:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 10723  01BCB8  013A               	movlb	58	; () banked
 10724  01BCBA  5140               	movf	64,w,b	;volatile
 10725  01BCBC  006E F940  F001    	movff	14928,btemp	;volatile
 10726  01BCC2  6A02               	clrf	(btemp+1)^0,c
 10727  01BCC4  0060  F004  F002   	movff	btemp,btemp+1
 10728  01BCCA  6A01               	clrf	btemp^0,c
 10729  01BCCC  2601               	addwf	btemp^0,f,c
 10730  01BCCE  0E00               	movlw	0
 10731  01BCD0  2202               	addwfc	(btemp+1)^0,f,c
 10732  01BCD2  0E77               	movlw	119
 10733  01BCD4  1401               	andwf	btemp^0,w,c
 10734  01BCD6  0100               	movlb	0	; () banked
 10735  01BCD8  6FDE               	movwf	(_R+51)& (0+255),b	;volatile
 10736  01BCDA  0E3C               	movlw	60
 10737  01BCDC  1402               	andwf	(btemp+1)^0,w,c
 10738  01BCDE  6FDF               	movwf	(_R+52)& (0+255),b	;volatile
 10739                           
 10740                           ; BSR set to: 0
 10741                           ;daq.c: 71:  ADCC_SetADIInterruptHandler(adc_int_handler);
 10742  01BCE0  0E96               	movlw	low _adc_int_handler
 10743  01BCE2  6EE6               	movwf	postinc1,c
 10744  01BCE4  0ECE               	movlw	high _adc_int_handler
 10745  01BCE6  6EE6               	movwf	postinc1,c
 10746  01BCE8  0E01               	movlw	low (_adc_int_handler shr (0+16))
 10747  01BCEA  6EE6               	movwf	postinc1,c
 10748  01BCEC  ECF5  F0E4         	call	_ADCC_SetADIInterruptHandler	;wreg free
 10749                           
 10750                           ;daq.c: 72:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 10751  01BCF0  0E5A               	movlw	low _adc_int_t_handler
 10752  01BCF2  6EE6               	movwf	postinc1,c
 10753  01BCF4  0EB8               	movlw	high _adc_int_t_handler
 10754  01BCF6  6EE6               	movwf	postinc1,c
 10755  01BCF8  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 10756  01BCFA  6EE6               	movwf	postinc1,c
 10757  01BCFC  ECE1  F0E4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 10758                           
 10759                           ;daq.c: 73:  ADCC_DischargeSampleCapacitor();
 10760  01BD00  EC27  F0E7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 10761                           
 10762                           ; BSR set to: 62
 10763                           ;daq.c: 74:  ADCC_StartConversion(R.scan_index & 0xf);
 10764  01BD04  0100               	movlb	0	; () banked
 10765  01BD06  51DD               	movf	(_R+50)& (0+255),w,b	;volatile
 10766  01BD08  0B0F               	andlw	15
 10767  01BD0A  6EE6               	movwf	postinc1,c
 10768  01BD0C  ECB9  F0E6         	call	_ADCC_StartConversion	;wreg free
 10769                           
 10770                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10771  01BD10  0012               	return		;funcret
 10772  01BD12                     __end_of_start_adc_scan:
 10773                           	opt callstack 0
 10774                           
 10775 ;; *************** function _ADCC_StartConversion *****************
 10776 ;; Defined at:
 10777 ;;		line 128 in file "mcc_generated_files/adcc.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  channel         1  [STACK] enum E16136
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;		None
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  1  [STACK] void 
 10784 ;; Registers used:
 10785 ;;		fsr1l, fsr1h
 10786 ;; Tracked objects:
 10787 ;;		On entry : 3F/0
 10788 ;;		On exit  : 3F/3E
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10795 ;;Total ram usage:        0 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:   15
 10798 ;; This function calls:
 10799 ;;		Nothing
 10800 ;; This function is called by:
 10801 ;;		_start_adc_scan
 10802 ;;		_adc_int_t_handler
 10803 ;; This function uses a reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text33
 10807  01CD72                     __ptext33:
 10808                           	opt callstack 0
 10809  01CD72                     _ADCC_StartConversion:
 10810                           	opt callstack 0
 10811                           
 10812                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 10813                           ;stkvar	_channel @ sp[(0)+-1]
 10814                           
 10815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10816                           ;incstack = 0
 10817 ;; hardware stack exceeded
 10818  01CD72  0EFF               	movlw	-1
 10819  01CD74  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 10820                           
 10821                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 10822  01CD7A  013E               	movlb	62	; () banked
 10823  01CD7C  8FF8               	bsf	248,7,b	;volatile
 10824                           
 10825                           ; BSR set to: 62
 10826                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 10827  01CD7E  81F8               	bsf	248,0,b	;volatile
 10828                           
 10829                           ; BSR set to: 62
 10830                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 10831  01CD80  52E5               	movf	postdec1,f,c
 10832  01CD82  0012               	return		;funcret
 10833  01CD84                     __end_of_ADCC_StartConversion:
 10834                           	opt callstack 0
 10835                           
 10836 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 10837 ;; Defined at:
 10838 ;;		line 189 in file "mcc_generated_files/adcc.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;		None
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;		None
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  1  [STACK] void 
 10845 ;; Registers used:
 10846 ;;		wreg, status,2
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/0
 10849 ;;		On exit  : 3F/3E
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10856 ;;Total ram usage:        0 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; Hardware stack levels required when called:   15
 10859 ;; This function calls:
 10860 ;;		Nothing
 10861 ;; This function is called by:
 10862 ;;		_start_adc_scan
 10863 ;;		_adc_int_t_handler
 10864 ;; This function uses a reentrant model
 10865 ;;
 10866                           
 10867                           	psect	text34
 10868  01CE4E                     __ptext34:
 10869                           	opt callstack 0
 10870  01CE4E                     _ADCC_DischargeSampleCapacitor:
 10871                           	opt callstack 0
 10872                           
 10873                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 10874                           
 10875                           ; BSR set to: 62
 10876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10877                           ;incstack = 0
 10878 ;; hardware stack exceeded
 10879  01CE4E  0E3B               	movlw	59
 10880  01CE50  013E               	movlb	62	; () banked
 10881  01CE52  6FF1               	movwf	241,b	;volatile
 10882                           
 10883                           ; BSR set to: 62
 10884                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 10885  01CE54  0012               	return		;funcret
 10886  01CE56                     __end_of_ADCC_DischargeSampleCapacitor:
 10887                           	opt callstack 0
 10888                           
 10889 ;; *************** function _spinners *****************
 10890 ;; Defined at:
 10891 ;;		line 146 in file "mbmc.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  shape           1  [STACK] unsigned char 
 10894 ;;  reset           1  [STACK] const unsigned char 
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;  c               1  [STACK] unsigned char 
 10897 ;; Return value:  Size  Location     Type
 10898 ;;                  1  [STACK] unsigned char 
 10899 ;; Registers used:
 10900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10910 ;;Total ram usage:        0 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; Hardware stack levels required when called:   16
 10913 ;; This function calls:
 10914 ;;		_strlen
 10915 ;; This function is called by:
 10916 ;;		_main
 10917 ;;		_current_sensor_cal
 10918 ;; This function uses a reentrant model
 10919 ;;
 10920                           
 10921                           	psect	text35
 10922  01A5E6                     __ptext35:
 10923                           	opt callstack 0
 10924  01A5E6                     _spinners:
 10925                           	opt callstack 0
 10926                           
 10927                           ; BSR set to: 62
 10928                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10929  01A5E6  52E6               	movf	postinc1,f,c
 10930                           
 10931                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 10932                           ;stkvar	_shape @ sp[(-1)+-1]
 10933                           
 10934                           ;incstack = 0
 10935  01A5E8  0EFE               	movlw	-2
 10936  01A5EA  006F FF8C  F001    	movff	plusw1,btemp
 10937  01A5F0  0E05               	movlw	5
 10938  01A5F2  6401               	cpfsgt	btemp^0,c
 10939  01A5F4  D002               	goto	l2023
 10940                           
 10941                           ;mbmc.c: 152:   shape = 0;
 10942                           ;stkvar	_shape @ sp[(-1)+-1]
 10943  01A5F6  0EFE               	movlw	-2
 10944  01A5F8  6AE3               	clrf	plusw1,c
 10945  01A5FA                     l2023:
 10946                           
 10947                           ;mbmc.c: 153:  if (reset)
 10948                           ;stkvar	_reset @ sp[(-1)+-2]
 10949  01A5FA  0EFD               	movlw	-3
 10950  01A5FC  50E3               	movf	plusw1,w,c
 10951  01A5FE  B4D8               	btfsc	status,2,c
 10952  01A600  D00C               	goto	l10934
 10953                           
 10954                           ;mbmc.c: 154:   s[shape] = 0;
 10955                           ;stkvar	_shape @ sp[(-1)+-1]
 10956  01A602  0EFE               	movlw	-2
 10957  01A604  50E3               	movf	plusw1,w,c
 10958  01A606  6E0B               	movwf	(btemp+10)^0,c
 10959  01A608  6A0C               	clrf	(btemp+11)^0,c
 10960  01A60A  0EE4               	movlw	low spinners@s
 10961  01A60C  240B               	addwf	(btemp+10)^0,w,c
 10962  01A60E  6ED9               	movwf	fsr2l,c
 10963  01A610  0E01               	movlw	high spinners@s
 10964  01A612  200C               	addwfc	(btemp+11)^0,w,c
 10965  01A614  6EDA               	movwf	fsr2h,c
 10966  01A616  0E00               	movlw	0
 10967  01A618  6EDF               	movwf	indf2,c
 10968  01A61A                     l10934:
 10969                           
 10970                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 10971                           ;stkvar	_shape @ sp[(-1)+-1]
 10972  01A61A  0EFE               	movlw	-2
 10973  01A61C  50E3               	movf	plusw1,w,c
 10974  01A61E  0D14               	mullw	20
 10975  01A620  0E43               	movlw	low _spin
 10976  01A622  6E0B               	movwf	(btemp+10)^0,c
 10977  01A624  0EFA               	movlw	high _spin
 10978  01A626  6E0C               	movwf	(btemp+11)^0,c
 10979  01A628  50F3               	movf	243,w,c
 10980  01A62A  260B               	addwf	(btemp+10)^0,f,c
 10981  01A62C  50F4               	movf	244,w,c
 10982  01A62E  220C               	addwfc	(btemp+11)^0,f,c
 10983                           
 10984                           ;stkvar	_shape @ sp[(-1)+-1]
 10985  01A630  0EFE               	movlw	-2
 10986  01A632  50E3               	movf	plusw1,w,c
 10987  01A634  6E09               	movwf	(btemp+8)^0,c
 10988  01A636  6A0A               	clrf	(btemp+9)^0,c
 10989  01A638  0EE4               	movlw	low spinners@s
 10990  01A63A  2409               	addwf	(btemp+8)^0,w,c
 10991  01A63C  6ED9               	movwf	fsr2l,c
 10992  01A63E  0E01               	movlw	high spinners@s
 10993  01A640  200A               	addwfc	(btemp+9)^0,w,c
 10994  01A642  6EDA               	movwf	fsr2h,c
 10995  01A644  50DF               	movf	indf2,w,c
 10996  01A646  260B               	addwf	(btemp+10)^0,f,c
 10997  01A648  0E00               	movlw	0
 10998  01A64A  220C               	addwfc	(btemp+11)^0,f,c
 10999  01A64C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11000  01A652  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11001  01A658                     	if	0	;tblptru may be non-zero
 11002  01A658                     	endif
 11003  01A658                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11004  01A658  0E00               	movlw	low (__mediumconst shr (0+16))
 11005  01A65A  6EF8               	movwf	tblptru,c
 11006  01A65C                     	endif
 11007                           
 11008                           ;stkvar	_c @ sp[(-1)+0]
 11009  01A65C  0008               	tblrd		*
 11010  01A65E  0EFF               	movlw	-1
 11011  01A660  006F FFD7 FFE3     	movff	tablat,plusw1
 11012                           
 11013                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 11014                           ;stkvar	_shape @ sp[(-1)+-1]
 11015  01A666  0EFE               	movlw	-2
 11016  01A668  50E3               	movf	plusw1,w,c
 11017  01A66A  0D14               	mullw	20
 11018  01A66C  0E43               	movlw	low _spin
 11019  01A66E  6E0B               	movwf	(btemp+10)^0,c
 11020  01A670  0EFA               	movlw	high _spin
 11021  01A672  6E0C               	movwf	(btemp+11)^0,c
 11022  01A674  50F3               	movf	243,w,c
 11023  01A676  260B               	addwf	(btemp+10)^0,f,c
 11024  01A678  50F4               	movf	244,w,c
 11025  01A67A  220C               	addwfc	(btemp+11)^0,f,c
 11026  01A67C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11027  01A682  0060  F033  FFE6   	movff	btemp+11,postinc1
 11028  01A688  ECF6  F0D9         	call	_strlen	;wreg free
 11029                           
 11030                           ;stkvar	_shape @ sp[(-1)+-1]
 11031  01A68C  0EFE               	movlw	-2
 11032  01A68E  50E3               	movf	plusw1,w,c
 11033  01A690  6E0B               	movwf	(btemp+10)^0,c
 11034  01A692  6A0C               	clrf	(btemp+11)^0,c
 11035  01A694  0EE4               	movlw	low spinners@s
 11036  01A696  240B               	addwf	(btemp+10)^0,w,c
 11037  01A698  6ED9               	movwf	fsr2l,c
 11038  01A69A  0E01               	movlw	high spinners@s
 11039  01A69C  200C               	addwfc	(btemp+11)^0,w,c
 11040  01A69E  6EDA               	movwf	fsr2h,c
 11041  01A6A0  2ADF               	incf	indf2,f,c
 11042  01A6A2  50DF               	movf	indf2,w,c
 11043  01A6A4  6E0B               	movwf	(btemp+10)^0,c
 11044  01A6A6  6A0C               	clrf	(btemp+11)^0,c
 11045  01A6A8  5001               	movf	btemp^0,w,c
 11046  01A6AA  5C0B               	subwf	(btemp+10)^0,w,c
 11047  01A6AC  5002               	movf	(btemp+1)^0,w,c
 11048  01A6AE  580C               	subwfb	(btemp+11)^0,w,c
 11049  01A6B0  A0D8               	btfss	status,0,c
 11050  01A6B2  D00C               	goto	l10940
 11051                           
 11052                           ;mbmc.c: 157:   s[shape] = 0;
 11053                           ;stkvar	_shape @ sp[(-1)+-1]
 11054  01A6B4  0EFE               	movlw	-2
 11055  01A6B6  50E3               	movf	plusw1,w,c
 11056  01A6B8  6E0B               	movwf	(btemp+10)^0,c
 11057  01A6BA  6A0C               	clrf	(btemp+11)^0,c
 11058  01A6BC  0EE4               	movlw	low spinners@s
 11059  01A6BE  240B               	addwf	(btemp+10)^0,w,c
 11060  01A6C0  6ED9               	movwf	fsr2l,c
 11061  01A6C2  0E01               	movlw	high spinners@s
 11062  01A6C4  200C               	addwfc	(btemp+11)^0,w,c
 11063  01A6C6  6EDA               	movwf	fsr2h,c
 11064  01A6C8  0E00               	movlw	0
 11065  01A6CA  6EDF               	movwf	indf2,c
 11066  01A6CC                     l10940:
 11067                           
 11068                           ;mbmc.c: 158:  return c;
 11069                           ;stkvar	_c @ sp[(-1)+0]
 11070  01A6CC  0EFF               	movlw	-1
 11071  01A6CE  006F FF8C  F001    	movff	plusw1,btemp
 11072                           
 11073                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 11074  01A6D4  52E5               	movf	postdec1,f,c
 11075  01A6D6  52E5               	movf	postdec1,f,c
 11076  01A6D8  52E5               	movf	postdec1,f,c
 11077  01A6DA  0012               	return		;funcret
 11078  01A6DC                     __end_of_spinners:
 11079                           	opt callstack 0
 11080                           
 11081 ;; *************** function _get_switch *****************
 11082 ;; Defined at:
 11083 ;;		line 18 in file "dio.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;  i               1  [STACK] const unsigned char 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;		None
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  1  [STACK] enum E17021
 11090 ;; Registers used:
 11091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 11092 ;; Tracked objects:
 11093 ;;		On entry : 0/0
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11101 ;;Total ram usage:        0 bytes
 11102 ;; Hardware stack levels used:    1
 11103 ;; Hardware stack levels required when called:   15
 11104 ;; This function calls:
 11105 ;;		Nothing
 11106 ;; This function is called by:
 11107 ;;		_main
 11108 ;;		_current_sensor_cal
 11109 ;;		_hid_input
 11110 ;; This function uses a reentrant model
 11111 ;;
 11112                           
 11113                           	psect	text36
 11114  01C784                     __ptext36:
 11115                           	opt callstack 0
 11116  01C784                     _get_switch:
 11117                           	opt callstack 13
 11118                           
 11119                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 11120                           ;stkvar	_i @ sp[(0)+-1]
 11121                           
 11122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11123                           ;incstack = 0
 11124  01C784  0EFF               	movlw	-1
 11125  01C786  006F FF8C  F001    	movff	plusw1,btemp
 11126  01C78C  0E05               	movlw	5
 11127  01C78E  6401               	cpfsgt	btemp^0,c
 11128  01C790  D002               	goto	l10418
 11129                           
 11130                           ;dio.c: 21:   return SW_OFF;
 11131  01C792  0E00               	movlw	0
 11132  01C794  D00A               	goto	L9
 11133  01C796                     l10418:
 11134                           
 11135                           ;dio.c: 23:  return S.button[i].sw;
 11136                           ;stkvar	_i @ sp[(0)+-1]
 11137  01C796  0EFF               	movlw	-1
 11138  01C798  50E3               	movf	plusw1,w,c
 11139  01C79A  0D05               	mullw	5
 11140  01C79C  0E54               	movlw	low _S
 11141  01C79E  24F3               	addwf	243,w,c
 11142  01C7A0  6ED9               	movwf	fsr2l,c
 11143  01C7A2  0E02               	movlw	high _S
 11144  01C7A4  20F4               	addwfc	prodh,w,c
 11145  01C7A6  6EDA               	movwf	fsr2h,c
 11146  01C7A8  50DF               	movf	indf2,w,c
 11147  01C7AA                     L9:
 11148  01C7AA  6E01               	movwf	btemp^0,c
 11149                           
 11150                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 11151  01C7AC  52E5               	movf	postdec1,f,c
 11152  01C7AE  0012               	return		;funcret
 11153  01C7B0                     __end_of_get_switch:
 11154                           	opt callstack 0
 11155                           
 11156 ;; *************** function _clear_adc_scan *****************
 11157 ;; Defined at:
 11158 ;;		line 95 in file "daq.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;		None
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1  [STACK] void 
 11165 ;; Registers used:
 11166 ;;		None
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 3F/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11176 ;;Total ram usage:        0 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:   15
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_main
 11183 ;;		_current_sensor_cal
 11184 ;;		_update_adc_result
 11185 ;; This function uses a reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text37
 11189  01CE6E                     __ptext37:
 11190                           	opt callstack 0
 11191  01CE6E                     _clear_adc_scan:
 11192                           	opt callstack 13
 11193                           
 11194                           ;daq.c: 97:  R.done = 0;
 11195                           
 11196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11197                           ;incstack = 0
 11198  01CE6E  0100               	movlb	0	; () banked
 11199  01CE70  6BE0               	clrf	(_R+53)& (0+255),b	;volatile
 11200                           
 11201                           ; BSR set to: 0
 11202                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11203  01CE72  0012               	return		;funcret
 11204  01CE74                     __end_of_clear_adc_scan:
 11205                           	opt callstack 0
 11206                           
 11207 ;; *************** function _cal_current_zero *****************
 11208 ;; Defined at:
 11209 ;;		line 321 in file "daq.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;  mode            1  [STACK] _Bool 
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;  a200            2  [STACK] short 
 11214 ;;  a100            2  [STACK] short 
 11215 ;; Return value:  Size  Location     Type
 11216 ;;                  1  [STACK] _Bool 
 11217 ;; Registers used:
 11218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
 11219 ;; Tracked objects:
 11220 ;;		On entry : 0/0
 11221 ;;		On exit  : 0/0
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11228 ;;Total ram usage:        0 bytes
 11229 ;; Hardware stack levels used:    1
 11230 ;; Hardware stack levels required when called:   16
 11231 ;; This function calls:
 11232 ;;		_check_range
 11233 ;;		_get_raw_result
 11234 ;; This function is called by:
 11235 ;;		_current_sensor_cal
 11236 ;; This function uses a reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text38
 11240  01AC2A                     __ptext38:
 11241                           	opt callstack 0
 11242  01AC2A                     _cal_current_zero:
 11243                           	opt callstack 0
 11244                           
 11245                           ; BSR set to: 0
 11246                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11247  01AC2A  52E6               	movf	postinc1,f,c
 11248  01AC2C  52E6               	movf	postinc1,f,c
 11249  01AC2E  52E6               	movf	postinc1,f,c
 11250  01AC30  52E6               	movf	postinc1,f,c
 11251                           
 11252                           ;daq.c: 321: _Bool cal_current_zero(_Bool mode);daq.c: 322: {;daq.c: 323:  int16_t a100,
      +                           a200;;daq.c: 325:  a100 = get_raw_result(C_PV);
 11253                           
 11254                           ;incstack = 0
 11255  01AC32  0E01               	movlw	1
 11256  01AC34  6EE6               	movwf	postinc1,c
 11257  01AC36  EC41  F0E6         	call	_get_raw_result	;wreg free
 11258                           
 11259                           ;stkvar	_a100 @ sp[(-4)+2]
 11260  01AC3A  0EFE               	movlw	-2
 11261  01AC3C  0060  F007  FFE3   	movff	btemp,plusw1
 11262  01AC42  0EFF               	movlw	-1
 11263  01AC44  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11264                           
 11265                           ;daq.c: 326:  if (!check_range(a100, 100, 4000))
 11266  01AC4A  0EA0               	movlw	160
 11267  01AC4C  6EE6               	movwf	postinc1,c
 11268  01AC4E  0E0F               	movlw	15
 11269  01AC50  6EE6               	movwf	postinc1,c
 11270  01AC52  0E64               	movlw	100
 11271  01AC54  6EE6               	movwf	postinc1,c
 11272  01AC56  0E00               	movlw	0
 11273  01AC58  6EE6               	movwf	postinc1,c
 11274                           
 11275                           ;stkvar	_a100 @ sp[(-8)+2]
 11276  01AC5A  0EFA               	movlw	-6
 11277  01AC5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11278  01AC62  006F FF8F FFE6     	movff	plusw1,postinc1
 11279  01AC68  ECED  F0DB         	call	_check_range	;wreg free
 11280  01AC6C  5001               	movf	btemp^0,w,c
 11281  01AC6E  A4D8               	btfss	status,2,c
 11282  01AC70  D002               	goto	l10984
 11283  01AC72                     u9980:
 11284                           
 11285                           ;daq.c: 327:   return 0;
 11286  01AC72  0E00               	movlw	0
 11287  01AC74  D025               	goto	L10
 11288  01AC76                     l10984:
 11289                           
 11290                           ;daq.c: 328:  a200 = get_raw_result(C_BATT);
 11291  01AC76  0E00               	movlw	0
 11292  01AC78  6EE6               	movwf	postinc1,c
 11293  01AC7A  EC41  F0E6         	call	_get_raw_result	;wreg free
 11294                           
 11295                           ;stkvar	_a200 @ sp[(-4)+0]
 11296  01AC7E  0EFC               	movlw	-4
 11297  01AC80  0060  F007  FFE3   	movff	btemp,plusw1
 11298  01AC86  0EFD               	movlw	-3
 11299  01AC88  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11300                           
 11301                           ;daq.c: 329:  if (!check_range(a200, 100, 4000))
 11302  01AC8E  0EA0               	movlw	160
 11303  01AC90  6EE6               	movwf	postinc1,c
 11304  01AC92  0E0F               	movlw	15
 11305  01AC94  6EE6               	movwf	postinc1,c
 11306  01AC96  0E64               	movlw	100
 11307  01AC98  6EE6               	movwf	postinc1,c
 11308  01AC9A  0E00               	movlw	0
 11309  01AC9C  6EE6               	movwf	postinc1,c
 11310                           
 11311                           ;stkvar	_a200 @ sp[(-8)+0]
 11312  01AC9E  0EF8               	movlw	-8
 11313  01ACA0  006F FF8F FFE6     	movff	plusw1,postinc1
 11314  01ACA6  006F FF8F FFE6     	movff	plusw1,postinc1
 11315  01ACAC  ECED  F0DB         	call	_check_range	;wreg free
 11316  01ACB0  5001               	movf	btemp^0,w,c
 11317  01ACB2  B4D8               	btfsc	status,2,c
 11318  01ACB4  D7DE               	goto	u9980
 11319                           
 11320                           ;daq.c: 332:  if (!mode)
 11321                           ;stkvar	_mode @ sp[(-4)+-1]
 11322  01ACB6  0EFB               	movlw	-5
 11323  01ACB8  50E3               	movf	plusw1,w,c
 11324  01ACBA  A4D8               	btfss	status,2,c
 11325  01ACBC  D003               	goto	l10998
 11326  01ACBE                     u10000:
 11327                           
 11328                           ;daq.c: 333:   return 1;
 11329  01ACBE  0E01               	movlw	1
 11330  01ACC0                     L10:
 11331  01ACC0  6E01               	movwf	btemp^0,c
 11332  01ACC2  D011               	goto	l1926
 11333  01ACC4                     l10998:
 11334                           
 11335                           ;daq.c: 335:  R.n_offset[1] = a100;
 11336                           ;stkvar	_a100 @ sp[(-4)+2]
 11337  01ACC4  0EFE               	movlw	-2
 11338  01ACC6  006F FF8C  F0D3    	movff	plusw1,_R+40	;volatile
 11339  01ACCC  0EFF               	movlw	-1
 11340  01ACCE  006F FF8C  F0D4    	movff	plusw1,_R+41	;volatile
 11341                           
 11342                           ;daq.c: 336:  R.n_offset[0] = a200;
 11343                           ;stkvar	_a200 @ sp[(-4)+0]
 11344  01ACD4  0EFC               	movlw	-4
 11345  01ACD6  006F FF8C  F0D1    	movff	plusw1,_R+38	;volatile
 11346  01ACDC  0EFD               	movlw	-3
 11347  01ACDE  006F FF8C  F0D2    	movff	plusw1,_R+39	;volatile
 11348  01ACE4  D7EC               	goto	u10000
 11349  01ACE6                     l1926:
 11350                           
 11351                           ; _cal_current_zero: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 11352  01ACE6  0EFB               	movlw	251
 11353  01ACE8  26E1               	addwf	fsr1l,f,c
 11354  01ACEA  0EFF               	movlw	255
 11355  01ACEC  22E2               	addwfc	fsr1h,f,c
 11356  01ACEE  0012               	return		;funcret
 11357  01ACF0                     __end_of_cal_current_zero:
 11358                           	opt callstack 0
 11359                           
 11360 ;; *************** function _check_range *****************
 11361 ;; Defined at:
 11362 ;;		line 309 in file "daq.c"
 11363 ;; Parameters:    Size  Location     Type
 11364 ;;  value           2  [STACK] short 
 11365 ;;  window          2  [STACK] short 
 11366 ;;  standard        2  [STACK] short 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;		None
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  1  [STACK] _Bool 
 11371 ;; Registers used:
 11372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 11373 ;; Tracked objects:
 11374 ;;		On entry : 0/0
 11375 ;;		On exit  : 0/0
 11376 ;;		Unchanged: 0/0
 11377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11382 ;;Total ram usage:        0 bytes
 11383 ;; Hardware stack levels used:    1
 11384 ;; Hardware stack levels required when called:   15
 11385 ;; This function calls:
 11386 ;;		Nothing
 11387 ;; This function is called by:
 11388 ;;		_cal_current_zero
 11389 ;; This function uses a reentrant model
 11390 ;;
 11391                           
 11392                           	psect	text39
 11393  01B7DA                     __ptext39:
 11394                           	opt callstack 0
 11395  01B7DA                     _check_range:
 11396                           	opt callstack 13
 11397                           
 11398                           ;daq.c: 309: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 310: {;daq.c: 311:  if (value > (standard + window))
 11399                           ;stkvar	_value @ sp[(0)+-2]
 11400                           ;stkvar	_window @ sp[(0)+-4]
 11401                           ;stkvar	_standard @ sp[(0)+-6]
 11402                           
 11403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11404                           ;incstack = 0
 11405  01B7DA  0EFA               	movlw	-6
 11406  01B7DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 11407  01B7E2  0EFB               	movlw	-5
 11408  01B7E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 11409  01B7EA  0EFC               	movlw	-4
 11410  01B7EC  50E3               	movf	plusw1,w,c
 11411  01B7EE  260B               	addwf	(btemp+10)^0,f,c
 11412  01B7F0  0EFD               	movlw	-3
 11413  01B7F2  50E3               	movf	plusw1,w,c
 11414  01B7F4  220C               	addwfc	(btemp+11)^0,f,c
 11415  01B7F6  0EFE               	movlw	-2
 11416  01B7F8  50E3               	movf	plusw1,w,c
 11417  01B7FA  5C0B               	subwf	(btemp+10)^0,w,c
 11418  01B7FC  500C               	movf	(btemp+11)^0,w,c
 11419  01B7FE  0A80               	xorlw	128
 11420  01B800  6E01               	movwf	btemp^0,c
 11421  01B802  0EFF               	movlw	-1
 11422  01B804  50E3               	movf	plusw1,w,c
 11423  01B806  0A80               	xorlw	128
 11424  01B808  5801               	subwfb	btemp^0,w,c
 11425  01B80A  B0D8               	btfsc	status,0,c
 11426  01B80C  D002               	goto	l10476
 11427  01B80E                     u9770:
 11428                           
 11429                           ;daq.c: 312:   return 0;
 11430  01B80E  0E00               	movlw	0
 11431  01B810  D01E               	goto	L11
 11432  01B812                     l10476:
 11433                           
 11434                           ;daq.c: 313:  if (value < (standard - window))
 11435                           ;stkvar	_window @ sp[(0)+-4]
 11436                           ;stkvar	_standard @ sp[(0)+-6]
 11437  01B812  0EFA               	movlw	-6
 11438  01B814  006F FF8C  F00B    	movff	plusw1,btemp+10
 11439  01B81A  0EFB               	movlw	-5
 11440  01B81C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11441  01B822  0EFC               	movlw	-4
 11442  01B824  50E3               	movf	plusw1,w,c
 11443  01B826  5E0B               	subwf	(btemp+10)^0,f,c
 11444  01B828  0EFD               	movlw	-3
 11445  01B82A  50E3               	movf	plusw1,w,c
 11446  01B82C  5A0C               	subwfb	(btemp+11)^0,f,c
 11447                           
 11448                           ;stkvar	_value @ sp[(0)+-2]
 11449  01B82E  0EFE               	movlw	-2
 11450  01B830  006F FF8C  F001    	movff	plusw1,btemp
 11451  01B836  500B               	movf	(btemp+10)^0,w,c
 11452  01B838  5C01               	subwf	btemp^0,w,c
 11453  01B83A  0EFF               	movlw	-1
 11454  01B83C  50E3               	movf	plusw1,w,c
 11455  01B83E  0A80               	xorlw	128
 11456  01B840  6E01               	movwf	btemp^0,c
 11457  01B842  500C               	movf	(btemp+11)^0,w,c
 11458  01B844  0A80               	xorlw	128
 11459  01B846  5801               	subwfb	btemp^0,w,c
 11460  01B848  A0D8               	btfss	status,0,c
 11461  01B84A  D7E1               	goto	u9770
 11462                           
 11463                           ;daq.c: 315:  return 1;
 11464  01B84C  0E01               	movlw	1
 11465  01B84E                     L11:
 11466  01B84E  6E01               	movwf	btemp^0,c
 11467                           
 11468                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 11469  01B850  0EFA               	movlw	250
 11470  01B852  26E1               	addwf	fsr1l,f,c
 11471  01B854  0EFF               	movlw	255
 11472  01B856  22E2               	addwfc	fsr1h,f,c
 11473  01B858  0012               	return		;funcret
 11474  01B85A                     __end_of_check_range:
 11475                           	opt callstack 0
 11476                           
 11477 ;; *************** function _convert_adc_data *****************
 11478 ;; Defined at:
 11479 ;;		line 51 in file "mbmc.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;  i               1  [STACK] unsigned char 
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1  [STACK] void 
 11486 ;; Registers used:
 11487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/1
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11497 ;;Total ram usage:        0 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; Hardware stack levels required when called:   18
 11500 ;; This function calls:
 11501 ;;		_conv_raw_result
 11502 ;;		_lp_filter
 11503 ;; This function is called by:
 11504 ;;		_main
 11505 ;; This function uses a reentrant model
 11506 ;;
 11507                           
 11508                           	psect	text40
 11509  01AF2C                     __ptext40:
 11510                           	opt callstack 0
 11511  01AF2C                     _convert_adc_data:
 11512                           	opt callstack 0
 11513                           
 11514                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11515  01AF2C  52E6               	movf	postinc1,f,c
 11516                           
 11517                           ;mbmc.c: 53:  uint8_t i = 0;
 11518                           ;stkvar	_i @ sp[(-1)+0]
 11519                           
 11520                           ;incstack = 0
 11521  01AF2E  0EFF               	movlw	-1
 11522  01AF30  6AE3               	clrf	plusw1,c
 11523  01AF32                     l11746:
 11524                           
 11525                           ;mbmc.c: 56:   if (V.calib) {
 11526  01AF32  0101               	movlb	1	; () banked
 11527  01AF34  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 11528  01AF36  B4D8               	btfsc	status,2,c
 11529  01AF38  D01B               	goto	l11750
 11530                           
 11531                           ; BSR set to: 1
 11532                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 11533  01AF3A  0E01               	movlw	1
 11534  01AF3C  6EE6               	movwf	postinc1,c
 11535                           
 11536                           ;stkvar	_i @ sp[(-2)+0]
 11537  01AF3E  0EFE               	movlw	-2
 11538  01AF40  50E3               	movf	plusw1,w,c
 11539  01AF42  6EE6               	movwf	postinc1,c
 11540  01AF44  0E01               	movlw	1
 11541  01AF46  6EE6               	movwf	postinc1,c
 11542                           
 11543                           ;stkvar	_i @ sp[(-4)+0]
 11544  01AF48  0EFC               	movlw	-4
 11545  01AF4A  50E3               	movf	plusw1,w,c
 11546  01AF4C  6EE6               	movwf	postinc1,c
 11547  01AF4E  EC0A  F0AA         	call	_conv_raw_result	;wreg free
 11548  01AF52  0060  F007  FFE6   	movff	btemp,postinc1
 11549  01AF58  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11550  01AF5E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11551  01AF64  0060  F013  FFE6   	movff	btemp+3,postinc1
 11552  01AF6A  EC80  F0C6         	call	_lp_filter	;wreg free
 11553  01AF6E  D01A               	goto	L12
 11554  01AF70                     l11750:
 11555                           
 11556                           ; BSR set to: 1
 11557                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 11558  01AF70  0E00               	movlw	0
 11559  01AF72  6EE6               	movwf	postinc1,c
 11560                           
 11561                           ;stkvar	_i @ sp[(-2)+0]
 11562  01AF74  0EFE               	movlw	-2
 11563  01AF76  50E3               	movf	plusw1,w,c
 11564  01AF78  6EE6               	movwf	postinc1,c
 11565  01AF7A  0E00               	movlw	0
 11566  01AF7C  6EE6               	movwf	postinc1,c
 11567                           
 11568                           ;stkvar	_i @ sp[(-4)+0]
 11569  01AF7E  0EFC               	movlw	-4
 11570  01AF80  50E3               	movf	plusw1,w,c
 11571  01AF82  6EE6               	movwf	postinc1,c
 11572  01AF84  EC0A  F0AA         	call	_conv_raw_result	;wreg free
 11573  01AF88  0060  F007  FFE6   	movff	btemp,postinc1
 11574  01AF8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11575  01AF94  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11576  01AF9A  0060  F013  FFE6   	movff	btemp+3,postinc1
 11577  01AFA0  EC80  F0C6         	call	_lp_filter	;wreg free
 11578  01AFA4                     L12:
 11579                           
 11580                           ;stkvar	_i @ sp[(-1)+0]
 11581  01AFA4  0EFF               	movlw	-1
 11582  01AFA6  50E3               	movf	plusw1,w,c
 11583  01AFA8  0D04               	mullw	4
 11584  01AFAA  0EFF               	movlw	low _C
 11585  01AFAC  24F3               	addwf	243,w,c
 11586  01AFAE  6ED9               	movwf	fsr2l,c
 11587  01AFB0  0E06               	movlw	high _C
 11588  01AFB2  20F4               	addwfc	prodh,w,c
 11589  01AFB4  6EDA               	movwf	fsr2h,c
 11590  01AFB6  0060  F007  FFDE   	movff	btemp,postinc2
 11591  01AFBC  0060  F00B  FFDE   	movff	btemp+1,postinc2
 11592  01AFC2  0060  F00F  FFDE   	movff	btemp+2,postinc2
 11593  01AFC8  0060  F013  FFDE   	movff	btemp+3,postinc2
 11594                           
 11595                           ;mbmc.c: 61:  } while (++i < 16);
 11596                           ;stkvar	_i @ sp[(-1)+0]
 11597  01AFCE  0EFF               	movlw	-1
 11598  01AFD0  2AE3               	incf	plusw1,f,c
 11599  01AFD2  0EFF               	movlw	-1
 11600  01AFD4  006F FF8C  F001    	movff	plusw1,btemp
 11601  01AFDA  0E0F               	movlw	15
 11602  01AFDC  6401               	cpfsgt	btemp^0,c
 11603  01AFDE  D7A9               	goto	l11746
 11604                           
 11605                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 11606  01AFE0  52E5               	movf	postdec1,f,c
 11607  01AFE2  0012               	return		;funcret
 11608  01AFE4                     __end_of_convert_adc_data:
 11609                           	opt callstack 0
 11610                           
 11611 ;; *************** function _clear_hid_pflags *****************
 11612 ;; Defined at:
 11613 ;;		line 67 in file "hid.c"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;  h               2  [STACK] PTR struct H_data
 11616 ;;		 -> H(9), 
 11617 ;; Auto vars:     Size  Location     Type
 11618 ;;		None
 11619 ;; Return value:  Size  Location     Type
 11620 ;;                  1  [STACK] void 
 11621 ;; Registers used:
 11622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 11623 ;; Tracked objects:
 11624 ;;		On entry : 3E/0
 11625 ;;		On exit  : 0/0
 11626 ;;		Unchanged: 0/0
 11627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11632 ;;Total ram usage:        0 bytes
 11633 ;; Hardware stack levels used:    1
 11634 ;; Hardware stack levels required when called:   15
 11635 ;; This function calls:
 11636 ;;		Nothing
 11637 ;; This function is called by:
 11638 ;;		_main
 11639 ;; This function uses a reentrant model
 11640 ;;
 11641                           
 11642                           	psect	text41
 11643  01BBE2                     __ptext41:
 11644                           	opt callstack 0
 11645  01BBE2                     _clear_hid_pflags:
 11646                           	opt callstack 15
 11647                           
 11648                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 11649                           ;stkvar	_h @ sp[(0)+-2]
 11650                           
 11651                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11652                           ;incstack = 0
 11653  01BBE2  0EFE               	movlw	-2
 11654  01BBE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11655  01BBEA  0EFF               	movlw	-1
 11656  01BBEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11657  01BBF2  0E03               	movlw	3
 11658  01BBF4  240B               	addwf	(btemp+10)^0,w,c
 11659  01BBF6  6ED9               	movwf	fsr2l,c
 11660  01BBF8  0E00               	movlw	0
 11661  01BBFA  200C               	addwfc	(btemp+11)^0,w,c
 11662  01BBFC  6EDA               	movwf	fsr2h,c
 11663  01BBFE  0E00               	movlw	0
 11664  01BC00  6EDF               	movwf	indf2,c
 11665                           
 11666                           ;hid.c: 70:  h->enter_p = SW_OFF;
 11667                           ;stkvar	_h @ sp[(0)+-2]
 11668  01BC02  0EFE               	movlw	-2
 11669  01BC04  006F FF8C  F00B    	movff	plusw1,btemp+10
 11670  01BC0A  0EFF               	movlw	-1
 11671  01BC0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11672  01BC12  0E05               	movlw	5
 11673  01BC14  240B               	addwf	(btemp+10)^0,w,c
 11674  01BC16  6ED9               	movwf	fsr2l,c
 11675  01BC18  0E00               	movlw	0
 11676  01BC1A  200C               	addwfc	(btemp+11)^0,w,c
 11677  01BC1C  6EDA               	movwf	fsr2h,c
 11678  01BC1E  0E00               	movlw	0
 11679  01BC20  6EDF               	movwf	indf2,c
 11680                           
 11681                           ;hid.c: 71:  h->calib_p = SW_OFF;
 11682                           ;stkvar	_h @ sp[(0)+-2]
 11683  01BC22  0EFE               	movlw	-2
 11684  01BC24  006F FF8C  F00B    	movff	plusw1,btemp+10
 11685  01BC2A  0EFF               	movlw	-1
 11686  01BC2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11687  01BC32  0E07               	movlw	7
 11688  01BC34  240B               	addwf	(btemp+10)^0,w,c
 11689  01BC36  6ED9               	movwf	fsr2l,c
 11690  01BC38  0E00               	movlw	0
 11691  01BC3A  200C               	addwfc	(btemp+11)^0,w,c
 11692  01BC3C  6EDA               	movwf	fsr2h,c
 11693  01BC3E  0E00               	movlw	0
 11694  01BC40  6EDF               	movwf	indf2,c
 11695                           
 11696                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 11697  01BC42  52E5               	movf	postdec1,f,c
 11698  01BC44  52E5               	movf	postdec1,f,c
 11699  01BC46  0012               	return		;funcret
 11700  01BC48                     __end_of_clear_hid_pflags:
 11701                           	opt callstack 0
 11702                           
 11703 ;; *************** function _check_help *****************
 11704 ;; Defined at:
 11705 ;;		line 40 in file "mconfig.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;  flipper         1  [STACK] const _Bool 
 11708 ;; Auto vars:     Size  Location     Type
 11709 ;;  estatus         1    0        _Bool 
 11710 ;; Return value:  Size  Location     Type
 11711 ;;                  1  [STACK] _Bool 
 11712 ;; Registers used:
 11713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11714 ;; Tracked objects:
 11715 ;;		On entry : 3F/1
 11716 ;;		On exit  : 0/0
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11723 ;;Total ram usage:        0 bytes
 11724 ;; Hardware stack levels used:    1
 11725 ;; Hardware stack levels required when called:   28
 11726 ;; This function calls:
 11727 ;;		_StartTimer
 11728 ;;		_TimerDone
 11729 ;;		_display_help
 11730 ;;		_display_info
 11731 ;;		_get_vterm_ptr
 11732 ;;		_help_button
 11733 ;;		_mode_lamp_bright
 11734 ;;		_mode_lamp_dim
 11735 ;;		_set_display_info
 11736 ;;		_set_temp_display_help
 11737 ;;		_set_vterm
 11738 ;;		_sprintf
 11739 ;;		_update_lcd
 11740 ;;		_vterm_dump
 11741 ;; This function is called by:
 11742 ;;		_main
 11743 ;; This function uses a reentrant model
 11744 ;;
 11745                           
 11746                           	psect	text42
 11747  0188EA                     __ptext42:
 11748                           	opt callstack 0
 11749  0188EA                     _check_help:
 11750                           	opt callstack 2
 11751                           
 11752                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 11753                           
 11754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11755                           ;incstack = 0
 11756  0188EA  EC77  F0E2         	call	_help_button	;wreg free
 11757  0188EE  5001               	movf	btemp^0,w,c
 11758  0188F0  B4D8               	btfsc	status,2,c
 11759  0188F2  D0D0               	goto	l13930
 11760  0188F4  EC2B  F0E7         	call	_display_info	;wreg free
 11761  0188F8  0401               	decf	btemp^0,w,c
 11762  0188FA  B4D8               	btfsc	status,2,c
 11763  0188FC  D0CB               	goto	l13930
 11764                           
 11765                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 11766  0188FE  0EDC               	movlw	220
 11767  018900  6EE6               	movwf	postinc1,c
 11768  018902  0E05               	movlw	5
 11769  018904  6EE6               	movwf	postinc1,c
 11770  018906  0E0B               	movlw	11
 11771  018908  6EE6               	movwf	postinc1,c
 11772  01890A  ECBE  F0E1         	call	_StartTimer	;wreg free
 11773                           
 11774                           ;mconfig.c: 48:   if (V.debug)
 11775  01890E  0101               	movlb	1	; () banked
 11776  018910  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 11777                           
 11778                           ; BSR set to: 1
 11779                           ;mconfig.c: 49:    vterm_dump();
 11780  018912  EC1B  F0CF         	call	_vterm_dump	;wreg free
 11781                           
 11782                           ;mconfig.c: 51:   set_vterm(1);
 11783  018916  0E01               	movlw	1
 11784  018918  6EE6               	movwf	postinc1,c
 11785  01891A  EC23  F0E6         	call	_set_vterm	;wreg free
 11786                           
 11787                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 11788  01891E  EC2B  F0E7         	call	_display_info	;wreg free
 11789  018922  5001               	movf	btemp^0,w,c
 11790  018924  6EE6               	movwf	postinc1,c
 11791  018926  ECD2  F0E6         	call	_set_temp_display_help	;wreg free
 11792                           
 11793                           ; BSR set to: 1
 11794                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 11795  01892A  0E01               	movlw	1
 11796  01892C  6EE6               	movwf	postinc1,c
 11797  01892E  EC32  F0E6         	call	_set_display_info	;wreg free
 11798                           
 11799                           ;mconfig.c: 54:   if (flipper) {
 11800                           ;stkvar	_flipper @ sp[(0)+-1]
 11801  018932  0EFF               	movlw	-1
 11802  018934  50E3               	movf	plusw1,w,c
 11803  018936  B4D8               	btfsc	status,2,c
 11804  018938  D019               	goto	l13916
 11805                           
 11806                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 11807  01893A  0EB2               	movlw	low STR_61
 11808  01893C  6EE6               	movwf	postinc1,c
 11809  01893E  0EFF               	movlw	high STR_61
 11810  018940  6EE6               	movwf	postinc1,c
 11811  018942  0E5C               	movlw	low STR_63
 11812  018944  6EE6               	movwf	postinc1,c
 11813  018946  0EFF               	movlw	high STR_63
 11814  018948  6EE6               	movwf	postinc1,c
 11815  01894A  0E01               	movlw	1
 11816  01894C  6EE6               	movwf	postinc1,c
 11817  01894E  0E00               	movlw	0
 11818  018950  6EE6               	movwf	postinc1,c
 11819  018952  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 11820  018956  0060  F007  FFE6   	movff	btemp,postinc1
 11821  01895C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11822  018962  0E06               	movlw	6
 11823  018964  6EE6               	movwf	postinc1,c
 11824  018966  EC6E  F0D2         	call	_sprintf	;wreg free
 11825                           
 11826                           ;mconfig.c: 56:   } else {
 11827  01896A  D018               	goto	l1707
 11828  01896C                     l13916:
 11829                           
 11830                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 11831  01896C  0EC8               	movlw	low STR_62
 11832  01896E  6EE6               	movwf	postinc1,c
 11833  018970  0EFF               	movlw	high STR_62
 11834  018972  6EE6               	movwf	postinc1,c
 11835  018974  0E5C               	movlw	low STR_63
 11836  018976  6EE6               	movwf	postinc1,c
 11837  018978  0EFF               	movlw	high STR_63
 11838  01897A  6EE6               	movwf	postinc1,c
 11839  01897C  0E01               	movlw	1
 11840  01897E  6EE6               	movwf	postinc1,c
 11841  018980  0E00               	movlw	0
 11842  018982  6EE6               	movwf	postinc1,c
 11843  018984  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 11844  018988  0060  F007  FFE6   	movff	btemp,postinc1
 11845  01898E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11846  018994  0E06               	movlw	6
 11847  018996  6EE6               	movwf	postinc1,c
 11848  018998  EC6E  F0D2         	call	_sprintf	;wreg free
 11849  01899C                     l1707:
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 11853  01899C  0101               	movlb	1	; () banked
 11854  01899E  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 11855  0189A0  32E8               	rrcf	wreg,f,c
 11856  0189A2  32E8               	rrcf	wreg,f,c
 11857  0189A4  0B03               	andlw	3
 11858  0189A6  0D24               	mullw	36
 11859  0189A8  0E12               	movlw	18
 11860  0189AA  26F3               	addwf	243,f,c
 11861  0189AC  0E00               	movlw	0
 11862  0189AE  22F4               	addwfc	244,f,c
 11863  0189B0  0EB3               	movlw	low _T
 11864  0189B2  6E0B               	movwf	(btemp+10)^0,c
 11865  0189B4  0EF9               	movlw	high _T
 11866  0189B6  6E0C               	movwf	(btemp+11)^0,c
 11867  0189B8  50F3               	movf	243,w,c
 11868  0189BA  260B               	addwf	(btemp+10)^0,f,c
 11869  0189BC  50F4               	movf	244,w,c
 11870  0189BE  220C               	addwfc	(btemp+11)^0,f,c
 11871  0189C0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11872  0189C6  0060  F033  FFE6   	movff	btemp+11,postinc1
 11873  0189CC  0EBE               	movlw	low STR_65
 11874  0189CE  6EE6               	movwf	postinc1,c
 11875  0189D0  0EFF               	movlw	high STR_65
 11876  0189D2  6EE6               	movwf	postinc1,c
 11877  0189D4  0E01               	movlw	1
 11878  0189D6  6EE6               	movwf	postinc1,c
 11879  0189D8  0E01               	movlw	1
 11880  0189DA  6EE6               	movwf	postinc1,c
 11881  0189DC  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 11882  0189E0  0060  F007  FFE6   	movff	btemp,postinc1
 11883  0189E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11884  0189EC  0E06               	movlw	6
 11885  0189EE  6EE6               	movwf	postinc1,c
 11886  0189F0  EC6E  F0D2         	call	_sprintf	;wreg free
 11887                           
 11888                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 11889  0189F4  0101               	movlb	1	; () banked
 11890  0189F6  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 11891  0189F8  32E8               	rrcf	wreg,f,c
 11892  0189FA  32E8               	rrcf	wreg,f,c
 11893  0189FC  0B03               	andlw	3
 11894  0189FE  0D24               	mullw	36
 11895  018A00  0EB3               	movlw	low _T
 11896  018A02  6E0B               	movwf	(btemp+10)^0,c
 11897  018A04  0EF9               	movlw	high _T
 11898  018A06  6E0C               	movwf	(btemp+11)^0,c
 11899  018A08  50F3               	movf	243,w,c
 11900  018A0A  260B               	addwf	(btemp+10)^0,f,c
 11901  018A0C  50F4               	movf	244,w,c
 11902  018A0E  220C               	addwfc	(btemp+11)^0,f,c
 11903  018A10  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11904  018A16  0060  F033  FFE6   	movff	btemp+11,postinc1
 11905  018A1C  0EBE               	movlw	low STR_65
 11906  018A1E  6EE6               	movwf	postinc1,c
 11907  018A20  0EFF               	movlw	high STR_65
 11908  018A22  6EE6               	movwf	postinc1,c
 11909  018A24  0E01               	movlw	1
 11910  018A26  6EE6               	movwf	postinc1,c
 11911  018A28  0E02               	movlw	2
 11912  018A2A  6EE6               	movwf	postinc1,c
 11913  018A2C  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 11914  018A30  0060  F007  FFE6   	movff	btemp,postinc1
 11915  018A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11916  018A3C  0E06               	movlw	6
 11917  018A3E  6EE6               	movwf	postinc1,c
 11918  018A40  EC6E  F0D2         	call	_sprintf	;wreg free
 11919                           
 11920                           ; BSR set to: 0
 11921                           ;mconfig.c: 61:   V.help_id++;
 11922  018A44  EE20  F1A2         	lfsr	2,_V+155	;volatile
 11923  018A48  38DF               	swapf	223,w,c
 11924  018A4A  6E0C               	movwf	(btemp+11)^0,c
 11925  018A4C  320C               	rrcf	(btemp+11)^0,f,c
 11926  018A4E  300C               	rrcf	(btemp+11)^0,w,c
 11927  018A50  0B03               	andlw	3
 11928  018A52  6E0C               	movwf	(btemp+11)^0,c
 11929  018A54  2A0C               	incf	(btemp+11)^0,f,c
 11930  018A56  3A0C               	swapf	(btemp+11)^0,f,c
 11931  018A58  360C               	rlcf	(btemp+11)^0,f,c
 11932  018A5A  360C               	rlcf	(btemp+11)^0,f,c
 11933  018A5C  50DF               	movf	223,w,c
 11934  018A5E  180C               	xorwf	(btemp+11)^0,w,c
 11935  018A60  0B3F               	andlw	-193
 11936  018A62  180C               	xorwf	(btemp+11)^0,w,c
 11937  018A64  6EDF               	movwf	223,c
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 11941  018A66  0EB8               	movlw	184
 11942  018A68  6EE6               	movwf	postinc1,c
 11943  018A6A  0E0B               	movlw	11
 11944  018A6C  6EE6               	movwf	postinc1,c
 11945  018A6E  0E09               	movlw	9
 11946  018A70  6EE6               	movwf	postinc1,c
 11947  018A72  ECBE  F0E1         	call	_StartTimer	;wreg free
 11948                           
 11949                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 11950  018A76  0EB8               	movlw	184
 11951  018A78  6EE6               	movwf	postinc1,c
 11952  018A7A  0E0B               	movlw	11
 11953  018A7C  6EE6               	movwf	postinc1,c
 11954  018A7E  0E07               	movlw	7
 11955  018A80  6EE6               	movwf	postinc1,c
 11956  018A82  ECBE  F0E1         	call	_StartTimer	;wreg free
 11957                           
 11958                           ;mconfig.c: 64:   mode_lamp_bright();
 11959  018A86  ECE9  F0E6         	call	_mode_lamp_bright	;wreg free
 11960                           
 11961                           ;mconfig.c: 65:   update_lcd(1);
 11962  018A8A  0E01               	movlw	1
 11963  018A8C  6EE6               	movwf	postinc1,c
 11964  018A8E  ECE6  F0D1         	call	_update_lcd	;wreg free
 11965                           
 11966                           ;mconfig.c: 67:  } else {
 11967  018A92  D032               	goto	l1708
 11968  018A94                     l13930:
 11969                           
 11970                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 11971  018A94  0E09               	movlw	9
 11972  018A96  6EE6               	movwf	postinc1,c
 11973  018A98  EC2D  F0E4         	call	_TimerDone	;wreg free
 11974  018A9C  5001               	movf	btemp^0,w,c
 11975  018A9E  B4D8               	btfsc	status,2,c
 11976  018AA0  D02B               	goto	l1708
 11977                           
 11978                           ;mconfig.c: 69:    set_vterm(0);
 11979  018AA2  0E00               	movlw	0
 11980  018AA4  6EE6               	movwf	postinc1,c
 11981  018AA6  EC23  F0E6         	call	_set_vterm	;wreg free
 11982                           
 11983                           ;mconfig.c: 70:    V.help = 0;
 11984  018AAA  0101               	movlb	1	; () banked
 11985  018AAC  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 11986                           
 11987                           ; BSR set to: 1
 11988                           ;mconfig.c: 71:    set_display_info(display_help());
 11989  018AAE  EC2F  F0E7         	call	_display_help	;wreg free
 11990  018AB2  5001               	movf	btemp^0,w,c
 11991  018AB4  6EE6               	movwf	postinc1,c
 11992  018AB6  EC32  F0E6         	call	_set_display_info	;wreg free
 11993                           
 11994                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 11995  018ABA  0060  F673  FFE6   	movff	_V+149,postinc1
 11996  018AC0  0060  F677  FFE6   	movff	_V+150,postinc1
 11997  018AC6  EC6B  F0E6         	call	_mode_lamp_dim	;wreg free
 11998                           
 11999                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 12000  018ACA  0E0B               	movlw	11
 12001  018ACC  6EE6               	movwf	postinc1,c
 12002  018ACE  EC2D  F0E4         	call	_TimerDone	;wreg free
 12003  018AD2  5001               	movf	btemp^0,w,c
 12004  018AD4  B4D8               	btfsc	status,2,c
 12005  018AD6  D010               	goto	l1708
 12006                           
 12007                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 12008  018AD8  0101               	movlb	1	; () banked
 12009  018ADA  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 12010  018ADC  A4D8               	btfss	status,2,c
 12011  018ADE  D002               	goto	u13330
 12012  018AE0  0E01               	movlw	1
 12013  018AE2  D001               	goto	u13340
 12014  018AE4                     u13330:
 12015  018AE4  0E00               	movlw	0
 12016  018AE6                     u13340:
 12017  018AE6  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 12018                           
 12019                           ; BSR set to: 1
 12020                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 12021  018AE8  0EDC               	movlw	220
 12022  018AEA  6EE6               	movwf	postinc1,c
 12023  018AEC  0E05               	movlw	5
 12024  018AEE  6EE6               	movwf	postinc1,c
 12025  018AF0  0E0B               	movlw	11
 12026  018AF2  6EE6               	movwf	postinc1,c
 12027  018AF4  ECBE  F0E1         	call	_StartTimer	;wreg free
 12028  018AF8                     l1708:
 12029                           
 12030                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12031  018AF8  52E5               	movf	postdec1,f,c
 12032  018AFA  0012               	return		;funcret
 12033  018AFC                     __end_of_check_help:
 12034                           	opt callstack 0
 12035                           
 12036 ;; *************** function _vterm_dump *****************
 12037 ;; Defined at:
 12038 ;;		line 121 in file "mconfig.c"
 12039 ;; Parameters:    Size  Location     Type
 12040 ;;		None
 12041 ;; Auto vars:     Size  Location     Type
 12042 ;;		None
 12043 ;; Return value:  Size  Location     Type
 12044 ;;                  1  [STACK] void 
 12045 ;; Registers used:
 12046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12047 ;; Tracked objects:
 12048 ;;		On entry : 3F/1
 12049 ;;		On exit  : 0/0
 12050 ;;		Unchanged: 0/0
 12051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12056 ;;Total ram usage:        0 bytes
 12057 ;; Hardware stack levels used:    1
 12058 ;; Hardware stack levels required when called:   27
 12059 ;; This function calls:
 12060 ;;		_WaitMs
 12061 ;;		_eaDogM_WriteStringAtPos
 12062 ;;		_get_vterm_ptr
 12063 ;;		_sprintf
 12064 ;;		_wait_lcd_done
 12065 ;; This function is called by:
 12066 ;;		_check_help
 12067 ;; This function uses a reentrant model
 12068 ;;
 12069                           
 12070                           	psect	text43
 12071  019E36                     __ptext43:
 12072                           	opt callstack 0
 12073  019E36                     _vterm_dump:
 12074                           	opt callstack 2
 12075                           
 12076                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 12077                           
 12078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12079                           ;incstack = 0
 12080  019E36  0E01               	movlw	1
 12081  019E38  6EE6               	movwf	postinc1,c
 12082  019E3A  0E00               	movlw	0
 12083  019E3C  6EE6               	movwf	postinc1,c
 12084  019E3E  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 12085  019E42  0060  F007  FFE6   	movff	btemp,postinc1
 12086  019E48  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12087  019E4E  0E00               	movlw	0
 12088  019E50  6EE6               	movwf	postinc1,c
 12089  019E52  0E00               	movlw	0
 12090  019E54  6EE6               	movwf	postinc1,c
 12091  019E56  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 12092  019E5A  0060  F007  FFE6   	movff	btemp,postinc1
 12093  019E60  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12094  019E66  0EA3               	movlw	low STR_67
 12095  019E68  6EE6               	movwf	postinc1,c
 12096  019E6A  0EFF               	movlw	high STR_67
 12097  019E6C  6EE6               	movwf	postinc1,c
 12098  019E6E  0E08               	movlw	low (_V+1)
 12099  019E70  6EE6               	movwf	postinc1,c
 12100  019E72  0E01               	movlw	high (_V+1)
 12101  019E74  6EE6               	movwf	postinc1,c
 12102  019E76  0E08               	movlw	8
 12103  019E78  6EE6               	movwf	postinc1,c
 12104  019E7A  EC6E  F0D2         	call	_sprintf	;wreg free
 12105                           
 12106                           ; BSR set to: 0
 12107                           ;mconfig.c: 124:  wait_lcd_done();
 12108  019E7E  ECB2  F0E5         	call	_wait_lcd_done	;wreg free
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 12112  019E82  0E08               	movlw	low (_V+1)
 12113  019E84  6EE6               	movwf	postinc1,c
 12114  019E86  0E01               	movlw	high (_V+1)
 12115  019E88  6EE6               	movwf	postinc1,c
 12116  019E8A  0E00               	movlw	0
 12117  019E8C  6EE6               	movwf	postinc1,c
 12118  019E8E  0E00               	movlw	0
 12119  019E90  6EE6               	movwf	postinc1,c
 12120  019E92  EC4F  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12121                           
 12122                           ; BSR set to: 59
 12123                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 12124  019E96  0E01               	movlw	1
 12125  019E98  6EE6               	movwf	postinc1,c
 12126  019E9A  0E01               	movlw	1
 12127  019E9C  6EE6               	movwf	postinc1,c
 12128  019E9E  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 12129  019EA2  0060  F007  FFE6   	movff	btemp,postinc1
 12130  019EA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12131  019EAE  0E00               	movlw	0
 12132  019EB0  6EE6               	movwf	postinc1,c
 12133  019EB2  0E01               	movlw	1
 12134  019EB4  6EE6               	movwf	postinc1,c
 12135  019EB6  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 12136  019EBA  0060  F007  FFE6   	movff	btemp,postinc1
 12137  019EC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12138  019EC6  0EA3               	movlw	low STR_67
 12139  019EC8  6EE6               	movwf	postinc1,c
 12140  019ECA  0EFF               	movlw	high STR_67
 12141  019ECC  6EE6               	movwf	postinc1,c
 12142  019ECE  0E08               	movlw	low (_V+1)
 12143  019ED0  6EE6               	movwf	postinc1,c
 12144  019ED2  0E01               	movlw	high (_V+1)
 12145  019ED4  6EE6               	movwf	postinc1,c
 12146  019ED6  0E08               	movlw	8
 12147  019ED8  6EE6               	movwf	postinc1,c
 12148  019EDA  EC6E  F0D2         	call	_sprintf	;wreg free
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;mconfig.c: 127:  wait_lcd_done();
 12152  019EDE  ECB2  F0E5         	call	_wait_lcd_done	;wreg free
 12153                           
 12154                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 12155  019EE2  0E08               	movlw	low (_V+1)
 12156  019EE4  6EE6               	movwf	postinc1,c
 12157  019EE6  0E01               	movlw	high (_V+1)
 12158  019EE8  6EE6               	movwf	postinc1,c
 12159  019EEA  0E00               	movlw	0
 12160  019EEC  6EE6               	movwf	postinc1,c
 12161  019EEE  0E01               	movlw	1
 12162  019EF0  6EE6               	movwf	postinc1,c
 12163  019EF2  EC4F  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12164                           
 12165                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 12166  019EF6  0E01               	movlw	1
 12167  019EF8  6EE6               	movwf	postinc1,c
 12168  019EFA  0E02               	movlw	2
 12169  019EFC  6EE6               	movwf	postinc1,c
 12170  019EFE  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 12171  019F02  0060  F007  FFE6   	movff	btemp,postinc1
 12172  019F08  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12173  019F0E  0E00               	movlw	0
 12174  019F10  6EE6               	movwf	postinc1,c
 12175  019F12  0E02               	movlw	2
 12176  019F14  6EE6               	movwf	postinc1,c
 12177  019F16  ECAB  F0E3         	call	_get_vterm_ptr	;wreg free
 12178  019F1A  0060  F007  FFE6   	movff	btemp,postinc1
 12179  019F20  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12180  019F26  0EA3               	movlw	low STR_67
 12181  019F28  6EE6               	movwf	postinc1,c
 12182  019F2A  0EFF               	movlw	high STR_67
 12183  019F2C  6EE6               	movwf	postinc1,c
 12184  019F2E  0E08               	movlw	low (_V+1)
 12185  019F30  6EE6               	movwf	postinc1,c
 12186  019F32  0E01               	movlw	high (_V+1)
 12187  019F34  6EE6               	movwf	postinc1,c
 12188  019F36  0E08               	movlw	8
 12189  019F38  6EE6               	movwf	postinc1,c
 12190  019F3A  EC6E  F0D2         	call	_sprintf	;wreg free
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;mconfig.c: 130:  wait_lcd_done();
 12194  019F3E  ECB2  F0E5         	call	_wait_lcd_done	;wreg free
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 12198  019F42  0E08               	movlw	low (_V+1)
 12199  019F44  6EE6               	movwf	postinc1,c
 12200  019F46  0E01               	movlw	high (_V+1)
 12201  019F48  6EE6               	movwf	postinc1,c
 12202  019F4A  0E00               	movlw	0
 12203  019F4C  6EE6               	movwf	postinc1,c
 12204  019F4E  0E02               	movlw	2
 12205  019F50  6EE6               	movwf	postinc1,c
 12206  019F52  EC4F  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12207                           
 12208                           ; BSR set to: 59
 12209                           ;mconfig.c: 132:  WaitMs(3000);
 12210  019F56  0EB8               	movlw	184
 12211  019F58  6EE6               	movwf	postinc1,c
 12212  019F5A  0E0B               	movlw	11
 12213  019F5C  6EE6               	movwf	postinc1,c
 12214  019F5E  ECAF  F0E2         	call	_WaitMs	;wreg free
 12215                           
 12216                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 12217  019F62  0012               	return		;funcret
 12218  019F64                     __end_of_vterm_dump:
 12219                           	opt callstack 0
 12220                           
 12221 ;; *************** function _sprintf *****************
 12222 ;; Defined at:
 12223 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;  s               2  [STACK] PTR unsigned char 
 12226 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 12227 ;;  fmt             2  [STACK] PTR const unsigned char 
 12228 ;;		 -> STR_80(127), STR_78(3), STR_77(3), STR_76(19), 
 12229 ;;		 -> STR_75(19), STR_74(19), STR_73(19), STR_72(19), 
 12230 ;;		 -> STR_71(19), STR_70(24), STR_69(15), STR_68(15), 
 12231 ;;		 -> STR_67(15), STR_66(10), STR_65(10), STR_64(19), 
 12232 ;;		 -> STR_63(19), STR_58(21), STR_57(21), STR_56(21), 
 12233 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 12234 ;;		 -> STR_51(21), STR_50(21), STR_49(20), STR_48(20), 
 12235 ;;		 -> STR_47(21), STR_46(21), STR_45(21), STR_44(22), 
 12236 ;;		 -> STR_43(22), STR_42(22), STR_41(23), STR_40(23), 
 12237 ;;		 -> STR_39(23), STR_38(29), STR_37(23), STR_36(23), 
 12238 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 12239 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 12240 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 12241 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(26), 
 12242 ;;		 -> STR_19(26), STR_18(22), STR_17(21), STR_16(21), 
 12243 ;;		 -> STR_15(21), STR_14(21), STR_13(22), STR_12(22), 
 12244 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 12245 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 12246 ;;		 -> STR_2(21), STR_1(21), 
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;  f               6  [STACK] struct _IO_FILE
 12249 ;;  ap              2  [STACK] PTR void [1]
 12250 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12251 ;;  ret             2    0        int 
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  2  [STACK] int 
 12254 ;; Registers used:
 12255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/2
 12258 ;;		On exit  : 3F/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12265 ;;Total ram usage:        0 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; Hardware stack levels required when called:   23
 12268 ;; This function calls:
 12269 ;;		_vfprintf
 12270 ;; This function is called by:
 12271 ;;		_main
 12272 ;;		_current_sensor_cal
 12273 ;;		_check_help
 12274 ;;		_vterm_dump
 12275 ;;		_calc_bsoc
 12276 ;; This function uses a reentrant model
 12277 ;;
 12278                           
 12279                           	psect	text44
 12280  01A4DC                     __ptext44:
 12281                           	opt callstack 0
 12282  01A4DC                     _sprintf:
 12283                           	opt callstack 0
 12284                           
 12285                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12286  01A4DC  0E08               	movlw	8
 12287  01A4DE  26E1               	addwf	fsr1l,f,c
 12288  01A4E0  0E00               	movlw	0
 12289  01A4E2  22E2               	addwfc	fsr1h,f,c
 12290                           
 12291                           ;incstack = 0
 12292 ;; hardware stack exceeded
 12293  01A4E4  0EFE               	movlw	254
 12294  01A4E6  6E0B               	movwf	(btemp+10)^0,c
 12295  01A4E8  0EFF               	movlw	255
 12296  01A4EA  6E0C               	movwf	(btemp+11)^0,c
 12297                           
 12298                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 12299  01A4EC  0EF5               	movlw	245
 12300  01A4EE  24E1               	addwf	fsr1l,w,c
 12301  01A4F0  6E09               	movwf	(btemp+8)^0,c
 12302  01A4F2  0EFF               	movlw	255
 12303  01A4F4  20E2               	addwfc	fsr1h,w,c
 12304  01A4F6  6E0A               	movwf	(btemp+9)^0,c
 12305  01A4F8  500B               	movf	(btemp+10)^0,w,c
 12306  01A4FA  2609               	addwf	(btemp+8)^0,f,c
 12307  01A4FC  500C               	movf	(btemp+11)^0,w,c
 12308  01A4FE  220A               	addwfc	(btemp+9)^0,f,c
 12309                           
 12310                           ;stkvar	_ap @ sp[(-8)+6]
 12311  01A500  0EFF               	movlw	-1
 12312  01A502  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12313  01A508  0EFE               	movlw	-2
 12314  01A50A  0060  F027  FFE3   	movff	btemp+8,plusw1
 12315                           
 12316                           ;stkvar	_s @ sp[(-8)+-3]
 12317  01A510  0EF5               	movlw	-11
 12318  01A512  006F FF8C  F00B    	movff	plusw1,btemp+10
 12319  01A518  0EF6               	movlw	-10
 12320  01A51A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12321                           
 12322                           ;stkvar	_f @ sp[(-8)+0]
 12323  01A520  0EF9               	movlw	-7
 12324  01A522  0060  F033  FFE3   	movff	btemp+11,plusw1
 12325  01A528  0EF8               	movlw	-8
 12326  01A52A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12327                           
 12328                           ;stkvar	_f @ sp[(-8)+0]
 12329  01A530  0EFA               	movlw	250
 12330  01A532  24E1               	addwf	fsr1l,w,c
 12331  01A534  6ED9               	movwf	fsr2l,c
 12332  01A536  0EFF               	movlw	255
 12333  01A538  20E2               	addwfc	fsr1h,w,c
 12334  01A53A  6EDA               	movwf	fsr2h,c
 12335  01A53C  0E00               	movlw	0
 12336  01A53E  6EDE               	movwf	postinc2,c
 12337  01A540  0E00               	movlw	0
 12338  01A542  6EDD               	movwf	postdec2,c
 12339                           
 12340                           ;stkvar	_f @ sp[(-8)+0]
 12341  01A544  0EFC               	movlw	252
 12342  01A546  24E1               	addwf	fsr1l,w,c
 12343  01A548  6ED9               	movwf	fsr2l,c
 12344  01A54A  0EFF               	movlw	255
 12345  01A54C  20E2               	addwfc	fsr1h,w,c
 12346  01A54E  6EDA               	movwf	fsr2h,c
 12347  01A550  0E00               	movlw	0
 12348  01A552  6EDE               	movwf	postinc2,c
 12349  01A554  0E00               	movlw	0
 12350  01A556  6EDD               	movwf	postdec2,c
 12351                           
 12352                           ;stkvar	_ap @ sp[(-8)+6]
 12353  01A558  0EFE               	movlw	254
 12354  01A55A  24E1               	addwf	fsr1l,w,c
 12355  01A55C  6E01               	movwf	btemp^0,c
 12356  01A55E  0EFF               	movlw	255
 12357  01A560  20E2               	addwfc	fsr1h,w,c
 12358  01A562  6E02               	movwf	(btemp+1)^0,c
 12359  01A564  0060  F007  FFE6   	movff	btemp,postinc1
 12360  01A56A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12361                           
 12362                           ;stkvar	_fmt @ sp[(-10)+-5]
 12363  01A570  0EF1               	movlw	-15
 12364  01A572  006F FF8F FFE6     	movff	plusw1,postinc1
 12365  01A578  006F FF8F FFE6     	movff	plusw1,postinc1
 12366                           
 12367                           ;stkvar	_f @ sp[(-12)+0]
 12368  01A57E  0EF4               	movlw	244
 12369  01A580  24E1               	addwf	fsr1l,w,c
 12370  01A582  6E01               	movwf	btemp^0,c
 12371  01A584  0EFF               	movlw	255
 12372  01A586  20E2               	addwfc	fsr1h,w,c
 12373  01A588  6E02               	movwf	(btemp+1)^0,c
 12374  01A58A  0060  F007  FFE6   	movff	btemp,postinc1
 12375  01A590  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12376  01A596  ECA4  F0D8         	call	_vfprintf	;wreg free
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;stkvar	_f @ sp[(-8)+0]
 12380  01A59A  0EFA               	movlw	250
 12381  01A59C  24E1               	addwf	fsr1l,w,c
 12382  01A59E  6ED9               	movwf	fsr2l,c
 12383  01A5A0  0EFF               	movlw	255
 12384  01A5A2  20E2               	addwfc	fsr1h,w,c
 12385  01A5A4  6EDA               	movwf	fsr2h,c
 12386  01A5A6  006F FF78  F00B    	movff	postinc2,btemp+10
 12387  01A5AC  006F FF74  F00C    	movff	postdec2,btemp+11
 12388                           
 12389                           ;stkvar	_s @ sp[(-8)+-3]
 12390  01A5B2  0EF5               	movlw	-11
 12391  01A5B4  006F FF8C  F009    	movff	plusw1,btemp+8
 12392  01A5BA  0EF6               	movlw	-10
 12393  01A5BC  006F FF8C  F00A    	movff	plusw1,btemp+9
 12394  01A5C2  500B               	movf	(btemp+10)^0,w,c
 12395  01A5C4  2409               	addwf	(btemp+8)^0,w,c
 12396  01A5C6  6ED9               	movwf	fsr2l,c
 12397  01A5C8  500C               	movf	(btemp+11)^0,w,c
 12398  01A5CA  200A               	addwfc	(btemp+9)^0,w,c
 12399  01A5CC  6EDA               	movwf	fsr2h,c
 12400  01A5CE  0E00               	movlw	0
 12401  01A5D0  6EDF               	movwf	indf2,c
 12402                           
 12403                           ; BSR set to: 0
 12404                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 12405  01A5D2  0EF8               	movlw	248
 12406  01A5D4  26E1               	addwf	fsr1l,f,c
 12407  01A5D6  0EFF               	movlw	255
 12408  01A5D8  22E2               	addwfc	fsr1h,f,c
 12409  01A5DA  52E5               	movf	postdec1,f,c
 12410  01A5DC  50E7               	movf	indf1,w,c
 12411  01A5DE  5EE1               	subwf	fsr1l,f,c
 12412  01A5E0  0E00               	movlw	0
 12413  01A5E2  5AE2               	subwfb	fsr1h,f,c
 12414  01A5E4  0012               	return		;funcret
 12415  01A5E6                     __end_of_sprintf:
 12416                           	opt callstack 0
 12417                           
 12418 ;; *************** function _get_vterm_ptr *****************
 12419 ;; Defined at:
 12420 ;;		line 116 in file "mconfig.c"
 12421 ;; Parameters:    Size  Location     Type
 12422 ;;  line            1  [STACK] const unsigned char 
 12423 ;;  vterm           1  [STACK] const unsigned char 
 12424 ;; Auto vars:     Size  Location     Type
 12425 ;;		None
 12426 ;; Return value:  Size  Location     Type
 12427 ;;                  2  [STACK] PTR unsigned char 
 12428 ;; Registers used:
 12429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 12430 ;; Tracked objects:
 12431 ;;		On entry : 0/2
 12432 ;;		On exit  : 0/0
 12433 ;;		Unchanged: 0/0
 12434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12439 ;;Total ram usage:        0 bytes
 12440 ;; Hardware stack levels used:    1
 12441 ;; Hardware stack levels required when called:   15
 12442 ;; This function calls:
 12443 ;;		Nothing
 12444 ;; This function is called by:
 12445 ;;		_main
 12446 ;;		_current_sensor_cal
 12447 ;;		_check_help
 12448 ;;		_vterm_dump
 12449 ;; This function uses a reentrant model
 12450 ;;
 12451                           
 12452                           	psect	text45
 12453  01C756                     __ptext45:
 12454                           	opt callstack 0
 12455  01C756                     _get_vterm_ptr:
 12456                           	opt callstack 15
 12457                           
 12458                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 12459                           ;stkvar	_vterm @ sp[(0)+-2]
 12460                           
 12461                           ; BSR set to: 0
 12462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12463                           ;incstack = 0
 12464  01C756  0EFE               	movlw	-2
 12465  01C758  50E3               	movf	plusw1,w,c
 12466  01C75A  0B03               	andlw	3
 12467  01C75C  0D78               	mullw	120
 12468  01C75E  0E2A               	movlw	low _D
 12469  01C760  6E01               	movwf	btemp^0,c
 12470  01C762  0E08               	movlw	high _D
 12471  01C764  6E02               	movwf	(btemp+1)^0,c
 12472  01C766  50F3               	movf	243,w,c
 12473  01C768  2601               	addwf	btemp^0,f,c
 12474  01C76A  50F4               	movf	244,w,c
 12475  01C76C  2202               	addwfc	(btemp+1)^0,f,c
 12476                           
 12477                           ;stkvar	_line @ sp[(0)+-1]
 12478  01C76E  0EFF               	movlw	-1
 12479  01C770  50E3               	movf	plusw1,w,c
 12480  01C772  0B03               	andlw	3
 12481  01C774  0D28               	mullw	40
 12482  01C776  50F3               	movf	243,w,c
 12483  01C778  2601               	addwf	btemp^0,f,c
 12484  01C77A  50F4               	movf	244,w,c
 12485  01C77C  2202               	addwfc	(btemp+1)^0,f,c
 12486                           
 12487                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 12488  01C77E  52E5               	movf	postdec1,f,c
 12489  01C780  52E5               	movf	postdec1,f,c
 12490  01C782  0012               	return		;funcret
 12491  01C784                     __end_of_get_vterm_ptr:
 12492                           	opt callstack 0
 12493                           
 12494 ;; *************** function _WaitMs *****************
 12495 ;; Defined at:
 12496 ;;		line 32 in file "timers.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  numMilliseco    2  [STACK] const unsigned short 
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;		None
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  1  [STACK] void 
 12503 ;; Registers used:
 12504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/1
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12514 ;;Total ram usage:        0 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:   16
 12517 ;; This function calls:
 12518 ;;		_StartTimer
 12519 ;;		_TimerDone
 12520 ;; This function is called by:
 12521 ;;		_main
 12522 ;;		_current_sensor_cal
 12523 ;;		_vterm_dump
 12524 ;; This function uses a reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text46
 12528  01C55E                     __ptext46:
 12529                           	opt callstack 0
 12530  01C55E                     _WaitMs:
 12531                           	opt callstack 13
 12532                           
 12533                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 12534                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 12535                           
 12536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12537                           ;incstack = 0
 12538  01C55E  0EFE               	movlw	-2
 12539  01C560  006F FF8F FFE6     	movff	plusw1,postinc1
 12540  01C566  006F FF8F FFE6     	movff	plusw1,postinc1
 12541  01C56C  0E00               	movlw	0
 12542  01C56E  6EE6               	movwf	postinc1,c
 12543  01C570  ECBE  F0E1         	call	_StartTimer	;wreg free
 12544                           
 12545                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 12546  01C574  D005               	goto	l10364
 12547  01C576                     l1639:
 12548                           
 12549                           ;timers.c: 36:   __nop();
 12550  01C576  F000               	nop	
 12551                           
 12552                           ;timers.c: 37:   __nop();
 12553  01C578  F000               	nop	
 12554                           
 12555                           ;timers.c: 38:   __nop();
 12556  01C57A  F000               	nop	
 12557                           
 12558                           ;timers.c: 39:   __nop();
 12559  01C57C  F000               	nop	
 12560  01C57E  0004               	clrwdt		;# 
 12561  01C580                     l10364:
 12562                           
 12563                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 12564  01C580  0E00               	movlw	0
 12565  01C582  6EE6               	movwf	postinc1,c
 12566  01C584  EC2D  F0E4         	call	_TimerDone	;wreg free
 12567  01C588  5001               	movf	btemp^0,w,c
 12568  01C58A  B4D8               	btfsc	status,2,c
 12569  01C58C  D7F4               	goto	l1639
 12570                           
 12571                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 12572  01C58E  52E5               	movf	postdec1,f,c
 12573  01C590  52E5               	movf	postdec1,f,c
 12574  01C592  0012               	return		;funcret
 12575  01C594                     __end_of_WaitMs:
 12576                           	opt callstack 0
 12577                           
 12578 ;; *************** function _update_lcd *****************
 12579 ;; Defined at:
 12580 ;;		line 85 in file "mconfig.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  vterm           1  [STACK] unsigned char 
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;		None
 12585 ;; Return value:  Size  Location     Type
 12586 ;;                  1  [STACK] unsigned char 
 12587 ;; Registers used:
 12588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12589 ;; Tracked objects:
 12590 ;;		On entry : 0/0
 12591 ;;		On exit  : 0/0
 12592 ;;		Unchanged: 0/0
 12593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12598 ;;Total ram usage:        0 bytes
 12599 ;; Hardware stack levels used:    1
 12600 ;; Hardware stack levels required when called:   27
 12601 ;; This function calls:
 12602 ;;		_eaDogM_WriteStringAtPos
 12603 ;;		_wait_lcd_done
 12604 ;; This function is called by:
 12605 ;;		_main
 12606 ;;		_current_sensor_cal
 12607 ;;		_check_help
 12608 ;; This function uses a reentrant model
 12609 ;;
 12610                           
 12611                           	psect	text47
 12612  01A3CC                     __ptext47:
 12613                           	opt callstack 0
 12614  01A3CC                     _update_lcd:
 12615                           	opt callstack 3
 12616                           
 12617                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 12618                           ;stkvar	_vterm @ sp[(0)+-1]
 12619                           
 12620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12621                           ;incstack = 0
 12622  01A3CC  0EFF               	movlw	-1
 12623  01A3CE  006F FF8C  F001    	movff	plusw1,btemp
 12624  01A3D4  0E03               	movlw	3
 12625  01A3D6  1601               	andwf	btemp^0,f,c
 12626  01A3D8  0EFF               	movlw	-1
 12627  01A3DA  0060  F007  FFE3   	movff	btemp,plusw1
 12628                           
 12629                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 12630  01A3E0  EE22  F20A         	lfsr	2,_D+480
 12631  01A3E4  A0DF               	btfss	indf2,0,c
 12632  01A3E6  D004               	goto	l13572
 12633                           
 12634                           ;stkvar	_vterm @ sp[(0)+-1]
 12635  01A3E8  0EFF               	movlw	-1
 12636  01A3EA  50E3               	movf	plusw1,w,c
 12637  01A3EC  B4D8               	btfsc	status,2,c
 12638  01A3EE  D074               	goto	l1715
 12639  01A3F0                     l13572:
 12640                           
 12641                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 12642                           ;stkvar	_vterm @ sp[(0)+-1]
 12643  01A3F0  0EFF               	movlw	-1
 12644  01A3F2  50E3               	movf	plusw1,w,c
 12645  01A3F4  0D78               	mullw	120
 12646  01A3F6  0E3E               	movlw	low (_D+20)
 12647  01A3F8  24F3               	addwf	243,w,c
 12648  01A3FA  6ED9               	movwf	fsr2l,c
 12649  01A3FC  0E08               	movlw	high (_D+20)
 12650  01A3FE  20F4               	addwfc	prodh,w,c
 12651  01A400  6EDA               	movwf	fsr2h,c
 12652  01A402  0E00               	movlw	0
 12653  01A404  6EDF               	movwf	indf2,c
 12654                           
 12655                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 12656                           ;stkvar	_vterm @ sp[(0)+-1]
 12657  01A406  0EFF               	movlw	-1
 12658  01A408  50E3               	movf	plusw1,w,c
 12659  01A40A  0D78               	mullw	120
 12660  01A40C  0E66               	movlw	low (_D+60)
 12661  01A40E  24F3               	addwf	243,w,c
 12662  01A410  6ED9               	movwf	fsr2l,c
 12663  01A412  0E08               	movlw	high (_D+60)
 12664  01A414  20F4               	addwfc	prodh,w,c
 12665  01A416  6EDA               	movwf	fsr2h,c
 12666  01A418  0E00               	movlw	0
 12667  01A41A  6EDF               	movwf	indf2,c
 12668                           
 12669                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 12670                           ;stkvar	_vterm @ sp[(0)+-1]
 12671  01A41C  0EFF               	movlw	-1
 12672  01A41E  50E3               	movf	plusw1,w,c
 12673  01A420  0D78               	mullw	120
 12674  01A422  0E8E               	movlw	low (_D+100)
 12675  01A424  24F3               	addwf	243,w,c
 12676  01A426  6ED9               	movwf	fsr2l,c
 12677  01A428  0E08               	movlw	high (_D+100)
 12678  01A42A  20F4               	addwfc	prodh,w,c
 12679  01A42C  6EDA               	movwf	fsr2h,c
 12680  01A42E  0E00               	movlw	0
 12681  01A430  6EDF               	movwf	indf2,c
 12682                           
 12683                           ;mconfig.c: 95:  wait_lcd_done();
 12684  01A432  ECB2  F0E5         	call	_wait_lcd_done	;wreg free
 12685                           
 12686                           ; BSR set to: 0
 12687                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 12688                           ;stkvar	_vterm @ sp[(0)+-1]
 12689  01A436  0EFF               	movlw	-1
 12690  01A438  50E3               	movf	plusw1,w,c
 12691  01A43A  0D78               	mullw	120
 12692  01A43C  0E2A               	movlw	low _D
 12693  01A43E  6E0B               	movwf	(btemp+10)^0,c
 12694  01A440  0E08               	movlw	high _D
 12695  01A442  6E0C               	movwf	(btemp+11)^0,c
 12696  01A444  50F3               	movf	243,w,c
 12697  01A446  260B               	addwf	(btemp+10)^0,f,c
 12698  01A448  50F4               	movf	244,w,c
 12699  01A44A  220C               	addwfc	(btemp+11)^0,f,c
 12700  01A44C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12701  01A452  0060  F033  FFE6   	movff	btemp+11,postinc1
 12702  01A458  0E00               	movlw	0
 12703  01A45A  6EE6               	movwf	postinc1,c
 12704  01A45C  0E00               	movlw	0
 12705  01A45E  6EE6               	movwf	postinc1,c
 12706  01A460  EC4F  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12707                           
 12708                           ; BSR set to: 59
 12709                           ;mconfig.c: 97:  wait_lcd_done();
 12710  01A464  ECB2  F0E5         	call	_wait_lcd_done	;wreg free
 12711                           
 12712                           ; BSR set to: 0
 12713                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 12714                           ;stkvar	_vterm @ sp[(0)+-1]
 12715  01A468  0EFF               	movlw	-1
 12716  01A46A  50E3               	movf	plusw1,w,c
 12717  01A46C  0D78               	mullw	120
 12718  01A46E  0E2A               	movlw	low _D
 12719  01A470  6E0B               	movwf	(btemp+10)^0,c
 12720  01A472  0E08               	movlw	high _D
 12721  01A474  6E0C               	movwf	(btemp+11)^0,c
 12722  01A476  0E28               	movlw	40
 12723  01A478  260B               	addwf	(btemp+10)^0,f,c
 12724  01A47A  0E00               	movlw	0
 12725  01A47C  220C               	addwfc	(btemp+11)^0,f,c
 12726  01A47E  50F3               	movf	243,w,c
 12727  01A480  260B               	addwf	(btemp+10)^0,f,c
 12728  01A482  50F4               	movf	244,w,c
 12729  01A484  220C               	addwfc	(btemp+11)^0,f,c
 12730  01A486  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12731  01A48C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12732  01A492  0E00               	movlw	0
 12733  01A494  6EE6               	movwf	postinc1,c
 12734  01A496  0E01               	movlw	1
 12735  01A498  6EE6               	movwf	postinc1,c
 12736  01A49A  EC4F  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12737                           
 12738                           ; BSR set to: 59
 12739                           ;mconfig.c: 99:  wait_lcd_done();
 12740  01A49E  ECB2  F0E5         	call	_wait_lcd_done	;wreg free
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 12744                           ;stkvar	_vterm @ sp[(0)+-1]
 12745  01A4A2  0EFF               	movlw	-1
 12746  01A4A4  50E3               	movf	plusw1,w,c
 12747  01A4A6  0D78               	mullw	120
 12748  01A4A8  0E2A               	movlw	low _D
 12749  01A4AA  6E0B               	movwf	(btemp+10)^0,c
 12750  01A4AC  0E08               	movlw	high _D
 12751  01A4AE  6E0C               	movwf	(btemp+11)^0,c
 12752  01A4B0  0E50               	movlw	80
 12753  01A4B2  260B               	addwf	(btemp+10)^0,f,c
 12754  01A4B4  0E00               	movlw	0
 12755  01A4B6  220C               	addwfc	(btemp+11)^0,f,c
 12756  01A4B8  50F3               	movf	243,w,c
 12757  01A4BA  260B               	addwf	(btemp+10)^0,f,c
 12758  01A4BC  50F4               	movf	244,w,c
 12759  01A4BE  220C               	addwfc	(btemp+11)^0,f,c
 12760  01A4C0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12761  01A4C6  0060  F033  FFE6   	movff	btemp+11,postinc1
 12762  01A4CC  0E00               	movlw	0
 12763  01A4CE  6EE6               	movwf	postinc1,c
 12764  01A4D0  0E02               	movlw	2
 12765  01A4D2  6EE6               	movwf	postinc1,c
 12766  01A4D4  EC4F  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12767  01A4D8                     l1715:
 12768                           
 12769                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12770  01A4D8  52E5               	movf	postdec1,f,c
 12771  01A4DA  0012               	return		;funcret
 12772  01A4DC                     __end_of_update_lcd:
 12773                           	opt callstack 0
 12774                           
 12775 ;; *************** function _eaDogM_WriteStringAtPos *****************
 12776 ;; Defined at:
 12777 ;;		line 195 in file "eadog.c"
 12778 ;; Parameters:    Size  Location     Type
 12779 ;;  r               1  [STACK] const unsigned char 
 12780 ;;  c               1  [STACK] const unsigned char 
 12781 ;;  strPtr          2  [STACK] PTR unsigned char 
 12782 ;;		 -> D.lcd(480), D(482), V(192), 
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;  row             1  [STACK] unsigned char 
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  1  [STACK] void 
 12787 ;; Registers used:
 12788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12789 ;; Tracked objects:
 12790 ;;		On entry : 3F/0
 12791 ;;		On exit  : 3F/3B
 12792 ;;		Unchanged: 0/0
 12793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12798 ;;Total ram usage:        0 bytes
 12799 ;; Hardware stack levels used:    1
 12800 ;; Hardware stack levels required when called:   26
 12801 ;; This function calls:
 12802 ;;		_eaDogM_WriteString
 12803 ;;		_send_lcd_cmd_dma
 12804 ;;		_send_lcd_data_dma
 12805 ;;		_wait_lcd_done
 12806 ;;		_wdtdelay
 12807 ;; This function is called by:
 12808 ;;		_update_lcd
 12809 ;;		_vterm_dump
 12810 ;; This function uses a reentrant model
 12811 ;;
 12812                           
 12813                           	psect	text48
 12814  01B29E                     __ptext48:
 12815                           	opt callstack 0
 12816  01B29E                     _eaDogM_WriteStringAtPos:
 12817                           	opt callstack 0
 12818                           
 12819                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12820  01B29E  52E6               	movf	postinc1,f,c
 12821                           
 12822                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 12823                           
 12824                           ;incstack = 0
 12825  01B2A0  D014               	goto	l13548
 12826  01B2A2                     l13536:
 12827                           
 12828                           ;eadog.c: 201:   row = 0x40;
 12829                           ;stkvar	_row @ sp[(-1)+0]
 12830  01B2A2  0EFF               	movlw	-1
 12831  01B2A4  6AE3               	clrf	plusw1,c
 12832  01B2A6  8CE3               	bsf	plusw1,6,c
 12833                           
 12834                           ;eadog.c: 202:   break;
 12835  01B2A8  D026               	goto	l13550
 12836  01B2AA                     l13538:
 12837                           
 12838                           ;eadog.c: 204:   row = 0x14;
 12839                           ;stkvar	_row @ sp[(-1)+0]
 12840  01B2AA  0EFF               	movlw	-1
 12841  01B2AC  6AE3               	clrf	plusw1,c
 12842  01B2AE  84E3               	bsf	plusw1,2,c
 12843  01B2B0  88E3               	bsf	plusw1,4,c	;indir
 12844                           
 12845                           ;eadog.c: 205:   break;
 12846  01B2B2  D021               	goto	l13550
 12847  01B2B4                     l13540:
 12848                           
 12849                           ;eadog.c: 207:   row = 0x54;
 12850  01B2B4  0E54               	movlw	84
 12851  01B2B6  6E0C               	movwf	(btemp+11)^0,c
 12852                           
 12853                           ;stkvar	_row @ sp[(-1)+0]
 12854  01B2B8  0EFF               	movlw	-1
 12855  01B2BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 12856                           
 12857                           ;eadog.c: 208:   break;
 12858  01B2C0  D01A               	goto	l13550
 12859  01B2C2                     l13542:
 12860                           
 12861                           ;eadog.c: 210:   row = 0x1;
 12862                           ;stkvar	_row @ sp[(-1)+0]
 12863  01B2C2  0EFF               	movlw	-1
 12864  01B2C4  6AE3               	clrf	plusw1,c
 12865  01B2C6  2AE3               	incf	plusw1,f,c
 12866                           
 12867                           ;eadog.c: 211:   break;
 12868  01B2C8  D016               	goto	l13550
 12869  01B2CA                     l13548:
 12870                           
 12871                           ;stkvar	_r @ sp[(-1)+-1]
 12872  01B2CA  0EFE               	movlw	-2
 12873  01B2CC  50E3               	movf	plusw1,w,c
 12874  01B2CE  6E0B               	movwf	(btemp+10)^0,c
 12875  01B2D0  6A0C               	clrf	(btemp+11)^0,c
 12876                           
 12877                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12878                           ; Switch size 1, requested type "simple"
 12879                           ; Number of cases is 1, Range of values is 0 to 0
 12880                           ; switch strategies available:
 12881                           ; Name         Instructions Cycles
 12882                           ; simple_byte            4     3 (average)
 12883                           ;	Chosen strategy is simple_byte
 12884  01B2D2  500C               	movf	(btemp+11)^0,w,c
 12885  01B2D4  0A00               	xorlw	0	; case 0
 12886  01B2D6  A4D8               	btfss	status,2,c
 12887  01B2D8  D7E4               	goto	l13536
 12888                           
 12889                           ; Switch size 1, requested type "simple"
 12890                           ; Number of cases is 4, Range of values is 0 to 3
 12891                           ; switch strategies available:
 12892                           ; Name         Instructions Cycles
 12893                           ; simple_byte           13     7 (average)
 12894                           ;	Chosen strategy is simple_byte
 12895  01B2DA  500B               	movf	(btemp+10)^0,w,c
 12896  01B2DC  0A00               	xorlw	0	; case 0
 12897  01B2DE  B4D8               	btfsc	status,2,c
 12898  01B2E0  D7E0               	goto	l13536
 12899  01B2E2  0A01               	xorlw	1	; case 1
 12900  01B2E4  B4D8               	btfsc	status,2,c
 12901  01B2E6  D7E1               	goto	l13538
 12902  01B2E8  0A03               	xorlw	3	; case 2
 12903  01B2EA  B4D8               	btfsc	status,2,c
 12904  01B2EC  D7E3               	goto	l13540
 12905  01B2EE  0A01               	xorlw	1	; case 3
 12906  01B2F0  B4D8               	btfsc	status,2,c
 12907  01B2F2  D7E7               	goto	l13542
 12908  01B2F4  D7D6               	goto	l13536
 12909  01B2F6                     l13550:
 12910                           
 12911                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 12912  01B2F6  0E45               	movlw	69
 12913  01B2F8  6EE6               	movwf	postinc1,c
 12914  01B2FA  EC14  F0E6         	call	_send_lcd_cmd_dma	;wreg free
 12915                           
 12916                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 12917                           ;stkvar	_c @ sp[(-1)+-2]
 12918  01B2FE  0EFD               	movlw	-3
 12919  01B300  006F FF8C  F00C    	movff	plusw1,btemp+11
 12920                           
 12921                           ;stkvar	_row @ sp[(-1)+0]
 12922  01B306  0EFF               	movlw	-1
 12923  01B308  50E3               	movf	plusw1,w,c
 12924  01B30A  240C               	addwf	(btemp+11)^0,w,c
 12925  01B30C  6EE6               	movwf	postinc1,c
 12926  01B30E  EC1B  F0E0         	call	_send_lcd_data_dma	;wreg free
 12927                           
 12928                           ; BSR set to: 59
 12929                           ;eadog.c: 218:  wait_lcd_done();
 12930  01B312  ECB2  F0E5         	call	_wait_lcd_done	;wreg free
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;eadog.c: 219:  wdtdelay(8);
 12934  01B316  0E08               	movlw	8
 12935  01B318  6EE6               	movwf	postinc1,c
 12936  01B31A  0E00               	movlw	0
 12937  01B31C  6EE6               	movwf	postinc1,c
 12938  01B31E  0E00               	movlw	0
 12939  01B320  6EE6               	movwf	postinc1,c
 12940  01B322  0E00               	movlw	0
 12941  01B324  6EE6               	movwf	postinc1,c
 12942  01B326  EC48  F0DF         	call	_wdtdelay	;wreg free
 12943                           
 12944                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 12945                           ;stkvar	_strPtr @ sp[(-1)+-4]
 12946  01B32A  0EFB               	movlw	-5
 12947  01B32C  006F FF8F FFE6     	movff	plusw1,postinc1
 12948  01B332  006F FF8F FFE6     	movff	plusw1,postinc1
 12949  01B338  ECA3  F0D9         	call	_eaDogM_WriteString	;wreg free
 12950                           
 12951                           ; BSR set to: 59
 12952                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 12953  01B33C  0EFB               	movlw	251
 12954  01B33E  26E1               	addwf	fsr1l,f,c
 12955  01B340  0EFF               	movlw	255
 12956  01B342  22E2               	addwfc	fsr1h,f,c
 12957  01B344  0012               	return		;funcret
 12958  01B346                     __end_of_eaDogM_WriteStringAtPos:
 12959                           	opt callstack 0
 12960                           
 12961 ;; *************** function _send_lcd_cmd_dma *****************
 12962 ;; Defined at:
 12963 ;;		line 171 in file "eadog.c"
 12964 ;; Parameters:    Size  Location     Type
 12965 ;;  strPtr          1  [STACK] const unsigned char 
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;		None
 12968 ;; Return value:  Size  Location     Type
 12969 ;;                  1  [STACK] void 
 12970 ;; Registers used:
 12971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12972 ;; Tracked objects:
 12973 ;;		On entry : 0/3D
 12974 ;;		On exit  : 3F/0
 12975 ;;		Unchanged: 0/0
 12976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12981 ;;Total ram usage:        0 bytes
 12982 ;; Hardware stack levels used:    1
 12983 ;; Hardware stack levels required when called:   25
 12984 ;; This function calls:
 12985 ;;		_send_lcd_data_dma
 12986 ;;		_wait_lcd_done
 12987 ;; This function is called by:
 12988 ;;		_eaDogM_WriteStringAtPos
 12989 ;;		_eaDogM_WriteCommand
 12990 ;; This function uses a reentrant model
 12991 ;;
 12992                           
 12993                           	psect	text49
 12994  01CC28                     __ptext49:
 12995                           	opt callstack 0
 12996  01CC28                     _send_lcd_cmd_dma:
 12997                           	opt callstack 3
 12998                           
 12999                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 13000                           
 13001                           ; BSR set to: 59
 13002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13003                           ;incstack = 0
 13004  01CC28  0EFE               	movlw	254
 13005  01CC2A  6EE6               	movwf	postinc1,c
 13006  01CC2C  EC1B  F0E0         	call	_send_lcd_data_dma	;wreg free
 13007                           
 13008                           ; BSR set to: 59
 13009                           ;eadog.c: 174:  wait_lcd_done();
 13010  01CC30  ECB2  F0E5         	call	_wait_lcd_done	;wreg free
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 13014                           ;stkvar	_strPtr @ sp[(0)+-1]
 13015  01CC34  0EFF               	movlw	-1
 13016  01CC36  50E3               	movf	plusw1,w,c
 13017  01CC38  6EE6               	movwf	postinc1,c
 13018  01CC3A  EC1B  F0E0         	call	_send_lcd_data_dma	;wreg free
 13019                           
 13020                           ;eadog.c: 176:  wait_lcd_done();
 13021  01CC3E  ECB2  F0E5         	call	_wait_lcd_done	;wreg free
 13022                           
 13023                           ; BSR set to: 0
 13024                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 13025  01CC42  52E5               	movf	postdec1,f,c
 13026  01CC44  0012               	return		;funcret
 13027  01CC46                     __end_of_send_lcd_cmd_dma:
 13028                           	opt callstack 0
 13029                           
 13030 ;; *************** function _wait_lcd_done *****************
 13031 ;; Defined at:
 13032 ;;		line 444 in file "eadog.c"
 13033 ;; Parameters:    Size  Location     Type
 13034 ;;		None
 13035 ;; Auto vars:     Size  Location     Type
 13036 ;;		None
 13037 ;; Return value:  Size  Location     Type
 13038 ;;                  1  [STACK] void 
 13039 ;; Registers used:
 13040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 13041 ;; Tracked objects:
 13042 ;;		On entry : 0/1
 13043 ;;		On exit  : 3F/0
 13044 ;;		Unchanged: 0/0
 13045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13050 ;;Total ram usage:        0 bytes
 13051 ;; Hardware stack levels used:    1
 13052 ;; Hardware stack levels required when called:   16
 13053 ;; This function calls:
 13054 ;;		_wdtdelay
 13055 ;; This function is called by:
 13056 ;;		_main
 13057 ;;		_send_lcd_cmd_dma
 13058 ;;		_eaDogM_WriteStringAtPos
 13059 ;;		_update_lcd
 13060 ;;		_vterm_dump
 13061 ;; This function uses a reentrant model
 13062 ;;
 13063                           
 13064                           	psect	text50
 13065  01CB64                     __ptext50:
 13066                           	opt callstack 0
 13067  01CB64                     _wait_lcd_done:
 13068                           	opt callstack 14
 13069                           
 13070                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 13071                           
 13072                           ; BSR set to: 0
 13073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13074                           ;incstack = 0
 13075  01CB64  0101               	movlb	1	; () banked
 13076  01CB66  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 13077  01CB68  D7FD               	goto	_wait_lcd_done
 13078  01CB6A                     u8980:
 13079  01CB6A  013D               	movlb	61	; () banked
 13080  01CB6C  AB17               	btfss	23,5,b	;volatile
 13081  01CB6E  D7FD               	goto	u8980
 13082                           
 13083                           ; BSR set to: 61
 13084                           ;eadog.c: 448:  wdtdelay(50);
 13085  01CB70  0E32               	movlw	50
 13086  01CB72  6EE6               	movwf	postinc1,c
 13087  01CB74  0E00               	movlw	0
 13088  01CB76  6EE6               	movwf	postinc1,c
 13089  01CB78  0E00               	movlw	0
 13090  01CB7A  6EE6               	movwf	postinc1,c
 13091  01CB7C  0E00               	movlw	0
 13092  01CB7E  6EE6               	movwf	postinc1,c
 13093  01CB80  EC48  F0DF         	call	_wdtdelay	;wreg free
 13094                           
 13095                           ; BSR set to: 0
 13096                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 13097  01CB84  0012               	return		;funcret
 13098  01CB86                     __end_of_wait_lcd_done:
 13099                           	opt callstack 0
 13100                           
 13101 ;; *************** function _wdtdelay *****************
 13102 ;; Defined at:
 13103 ;;		line 23 in file "eadog.c"
 13104 ;; Parameters:    Size  Location     Type
 13105 ;;  delay           4  [STACK] const unsigned long 
 13106 ;; Auto vars:     Size  Location     Type
 13107 ;;		None
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  1  [STACK] void 
 13110 ;; Registers used:
 13111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 13112 ;; Tracked objects:
 13113 ;;		On entry : 2/3D
 13114 ;;		On exit  : 3F/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13121 ;;Total ram usage:        0 bytes
 13122 ;; Hardware stack levels used:    1
 13123 ;; Hardware stack levels required when called:   15
 13124 ;; This function calls:
 13125 ;;		Nothing
 13126 ;; This function is called by:
 13127 ;;		_init_display
 13128 ;;		_send_lcd_data
 13129 ;;		_send_lcd_cmd
 13130 ;;		_send_lcd_cmd_long
 13131 ;;		_eaDogM_WriteStringAtPos
 13132 ;;		_wait_lcd_done
 13133 ;; This function uses a reentrant model
 13134 ;;
 13135                           
 13136                           	psect	text51
 13137  01BE90                     __ptext51:
 13138                           	opt callstack 0
 13139  01BE90                     _wdtdelay:
 13140                           	opt callstack 14
 13141                           
 13142                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 13143                           
 13144                           ; BSR set to: 0
 13145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13146                           ;incstack = 0
 13147  01BE90  0100               	movlb	0	; () banked
 13148  01BE92  6B74               	clrf	wdtdelay@dcount& (0+255),b
 13149  01BE94  6B75               	clrf	(wdtdelay@dcount+1)& (0+255),b
 13150  01BE96  6B76               	clrf	(wdtdelay@dcount+2)& (0+255),b
 13151  01BE98  6B77               	clrf	(wdtdelay@dcount+3)& (0+255),b
 13152  01BE9A                     l1492:
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;eadog.c: 28:   __nop();
 13156  01BE9A  F000               	nop	
 13157  01BE9C  0004               	clrwdt		;# 
 13158                           
 13159                           ;eadog.c: 30:  };
 13160  01BE9E  0E01               	movlw	1
 13161  01BEA0  0100               	movlb	0	; () banked
 13162  01BEA2  2774               	addwf	wdtdelay@dcount& (0+255),f,b
 13163  01BEA4  0E00               	movlw	0
 13164  01BEA6  2375               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 13165  01BEA8  2376               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 13166  01BEAA  2377               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;stkvar	_delay @ sp[(0)+-4]
 13170  01BEAC  0EFC               	movlw	-4
 13171  01BEAE  006F FF8C  F001    	movff	plusw1,btemp
 13172  01BEB4  5174               	movf	wdtdelay@dcount& (0+255),w,b
 13173  01BEB6  5C01               	subwf	btemp^0,w,c
 13174  01BEB8  0EFD               	movlw	-3
 13175  01BEBA  006F FF8C  F001    	movff	plusw1,btemp
 13176  01BEC0  5175               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 13177  01BEC2  5801               	subwfb	btemp^0,w,c
 13178  01BEC4  0EFE               	movlw	-2
 13179  01BEC6  006F FF8C  F001    	movff	plusw1,btemp
 13180  01BECC  5176               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 13181  01BECE  5801               	subwfb	btemp^0,w,c
 13182  01BED0  0EFF               	movlw	-1
 13183  01BED2  006F FF8C  F001    	movff	plusw1,btemp
 13184  01BED8  5177               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 13185  01BEDA  5801               	subwfb	btemp^0,w,c
 13186  01BEDC  B0D8               	btfsc	status,0,c
 13187  01BEDE  D7DD               	goto	l1492
 13188                           
 13189                           ; BSR set to: 0
 13190                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 13191  01BEE0  52E5               	movf	postdec1,f,c
 13192  01BEE2  52E5               	movf	postdec1,f,c
 13193  01BEE4  52E5               	movf	postdec1,f,c
 13194  01BEE6  52E5               	movf	postdec1,f,c
 13195  01BEE8  0012               	return		;funcret
 13196  01BEEA                     __end_of_wdtdelay:
 13197                           	opt callstack 0
 13198                           
 13199 ;; *************** function _send_lcd_data_dma *****************
 13200 ;; Defined at:
 13201 ;;		line 182 in file "eadog.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;  strPtr          1  [STACK] const unsigned char 
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;		None
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1  [STACK] void 
 13208 ;; Registers used:
 13209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/0
 13212 ;;		On exit  : 3F/3B
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13219 ;;Total ram usage:        0 bytes
 13220 ;; Hardware stack levels used:    1
 13221 ;; Hardware stack levels required when called:   24
 13222 ;; This function calls:
 13223 ;;		_printf
 13224 ;;		_ringBufS_flush
 13225 ;;		_start_lcd
 13226 ;;		_wait_lcd_set
 13227 ;; This function is called by:
 13228 ;;		_send_lcd_cmd_dma
 13229 ;;		_eaDogM_WriteStringAtPos
 13230 ;; This function uses a reentrant model
 13231 ;;
 13232                           
 13233                           	psect	text52
 13234  01C036                     __ptext52:
 13235                           	opt callstack 0
 13236  01C036                     _send_lcd_data_dma:
 13237                           	opt callstack 4
 13238                           
 13239                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 13240                           
 13241                           ; BSR set to: 0
 13242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13243                           ;incstack = 0
 13244  01C036  EC3A  F0E7         	call	_wait_lcd_set	;wreg free
 13245                           
 13246                           ; BSR set to: 1
 13247                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 13248  01C03A  0E00               	movlw	0
 13249  01C03C  6EE6               	movwf	postinc1,c
 13250  01C03E  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 13251  01C044  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 13252  01C04A  EC93  F0DA         	call	_ringBufS_flush	;wreg free
 13253  01C04E  94BC               	bcf	188,2,c	;volatile
 13254                           
 13255                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 13256  01C050  013B               	movlb	59	; () banked
 13257  01C052  9FFC               	bcf	252,7,b	;volatile
 13258                           
 13259                           ; BSR set to: 59
 13260                           ;eadog.c: 189:  DMA1SSZ = 1;
 13261  01C054  0E00               	movlw	0
 13262  01C056  6FF8               	movwf	248,b	;volatile
 13263  01C058  0E01               	movlw	1
 13264  01C05A  6FF7               	movwf	247,b	;volatile
 13265                           
 13266                           ; BSR set to: 59
 13267                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 13268  01C05C  8FFC               	bsf	252,7,b	;volatile
 13269                           
 13270                           ; BSR set to: 59
 13271                           ;eadog.c: 191:  printf("%c", strPtr);
 13272                           ;stkvar	_strPtr @ sp[(0)+-1]
 13273  01C05E  0EFF               	movlw	-1
 13274  01C060  50E3               	movf	plusw1,w,c
 13275  01C062  6EE6               	movwf	postinc1,c
 13276  01C064  0E00               	movlw	0
 13277  01C066  6EE6               	movwf	postinc1,c
 13278  01C068  0EF8               	movlw	low STR_60
 13279  01C06A  6EE6               	movwf	postinc1,c
 13280  01C06C  0EFF               	movlw	high STR_60
 13281  01C06E  6EE6               	movwf	postinc1,c
 13282  01C070  0E04               	movlw	4
 13283  01C072  6EE6               	movwf	postinc1,c
 13284  01C074  EC89  F0DE         	call	_printf	;wreg free
 13285                           
 13286                           ; BSR set to: 0
 13287                           ;eadog.c: 192:  start_lcd();
 13288  01C078  EC3D  F0E7         	call	_start_lcd	;wreg free
 13289                           
 13290                           ; BSR set to: 59
 13291                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 13292  01C07C  52E5               	movf	postdec1,f,c
 13293  01C07E  0012               	return		;funcret
 13294  01C080                     __end_of_send_lcd_data_dma:
 13295                           	opt callstack 0
 13296                           
 13297 ;; *************** function _eaDogM_WriteString *****************
 13298 ;; Defined at:
 13299 ;;		line 151 in file "eadog.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;  strPtr          2  [STACK] PTR unsigned char 
 13302 ;;		 -> D.lcd(480), D(482), V(192), 
 13303 ;; Auto vars:     Size  Location     Type
 13304 ;;		None
 13305 ;; Return value:  Size  Location     Type
 13306 ;;                  1  [STACK] void 
 13307 ;; Registers used:
 13308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13309 ;; Tracked objects:
 13310 ;;		On entry : 3F/0
 13311 ;;		On exit  : 3F/3B
 13312 ;;		Unchanged: 0/0
 13313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13318 ;;Total ram usage:        0 bytes
 13319 ;; Hardware stack levels used:    1
 13320 ;; Hardware stack levels required when called:   24
 13321 ;; This function calls:
 13322 ;;		_printf
 13323 ;;		_ringBufS_flush
 13324 ;;		_start_lcd
 13325 ;;		_strlen
 13326 ;;		_wait_lcd_set
 13327 ;; This function is called by:
 13328 ;;		_eaDogM_WriteStringAtPos
 13329 ;; This function uses a reentrant model
 13330 ;;
 13331                           
 13332                           	psect	text53
 13333  01B346                     __ptext53:
 13334                           	opt callstack 0
 13335  01B346                     _eaDogM_WriteString:
 13336                           	opt callstack 4
 13337                           
 13338                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 13339                           
 13340                           ; BSR set to: 59
 13341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13342                           ;incstack = 0
 13343  01B346  EC3A  F0E7         	call	_wait_lcd_set	;wreg free
 13344                           
 13345                           ; BSR set to: 1
 13346                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 13347  01B34A  0E00               	movlw	0
 13348  01B34C  6EE6               	movwf	postinc1,c
 13349  01B34E  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 13350  01B354  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 13351  01B35A  EC93  F0DA         	call	_ringBufS_flush	;wreg free
 13352  01B35E  94BC               	bcf	188,2,c	;volatile
 13353                           
 13354                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 13355                           ;stkvar	_strPtr @ sp[(0)+-2]
 13356  01B360  0EFE               	movlw	-2
 13357  01B362  006F FF8F FFE6     	movff	plusw1,postinc1
 13358  01B368  006F FF8F FFE6     	movff	plusw1,postinc1
 13359  01B36E  ECF6  F0D9         	call	_strlen	;wreg free
 13360  01B372  5002               	movf	(btemp+1)^0,w,c
 13361  01B374  E104               	bnz	u12900
 13362  01B376  0E41               	movlw	65
 13363  01B378  5C01               	subwf	btemp^0,w,c
 13364  01B37A  A0D8               	btfss	status,0,c
 13365  01B37C  D010               	goto	l13492
 13366  01B37E                     u12900:
 13367                           
 13368                           ;stkvar	_strPtr @ sp[(0)+-2]
 13369  01B37E  0EFE               	movlw	-2
 13370  01B380  006F FF8C  F00B    	movff	plusw1,btemp+10
 13371  01B386  0EFF               	movlw	-1
 13372  01B388  006F FF8C  F00C    	movff	plusw1,btemp+11
 13373  01B38E  0E40               	movlw	64
 13374  01B390  240B               	addwf	(btemp+10)^0,w,c
 13375  01B392  6ED9               	movwf	fsr2l,c
 13376  01B394  0E00               	movlw	0
 13377  01B396  200C               	addwfc	(btemp+11)^0,w,c
 13378  01B398  6EDA               	movwf	fsr2h,c
 13379  01B39A  0E00               	movlw	0
 13380  01B39C  6EDF               	movwf	indf2,c
 13381  01B39E                     l13492:
 13382                           
 13383                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 13384  01B39E  013B               	movlb	59	; () banked
 13385  01B3A0  9FFC               	bcf	252,7,b	;volatile
 13386                           
 13387                           ; BSR set to: 59
 13388                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 13389                           ;stkvar	_strPtr @ sp[(0)+-2]
 13390  01B3A2  0EFE               	movlw	-2
 13391  01B3A4  006F FF8F FFE6     	movff	plusw1,postinc1
 13392  01B3AA  006F FF8F FFE6     	movff	plusw1,postinc1
 13393  01B3B0  ECF6  F0D9         	call	_strlen	;wreg free
 13394  01B3B4  0060  F007  FBF7   	movff	btemp,15351	;volatile
 13395  01B3BA  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 13396                           
 13397                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 13398  01B3C0  013B               	movlb	59	; () banked
 13399  01B3C2  8FFC               	bsf	252,7,b	;volatile
 13400                           
 13401                           ; BSR set to: 59
 13402                           ;eadog.c: 161:  printf("%s", strPtr);
 13403                           ;stkvar	_strPtr @ sp[(0)+-2]
 13404  01B3C4  0EFE               	movlw	-2
 13405  01B3C6  006F FF8F FFE6     	movff	plusw1,postinc1
 13406  01B3CC  006F FF8F FFE6     	movff	plusw1,postinc1
 13407  01B3D2  0EFB               	movlw	low STR_59
 13408  01B3D4  6EE6               	movwf	postinc1,c
 13409  01B3D6  0EFF               	movlw	high STR_59
 13410  01B3D8  6EE6               	movwf	postinc1,c
 13411  01B3DA  0E04               	movlw	4
 13412  01B3DC  6EE6               	movwf	postinc1,c
 13413  01B3DE  EC89  F0DE         	call	_printf	;wreg free
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;eadog.c: 162:  start_lcd();
 13417  01B3E2  EC3D  F0E7         	call	_start_lcd	;wreg free
 13418                           
 13419                           ; BSR set to: 59
 13420                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 13421  01B3E6  52E5               	movf	postdec1,f,c
 13422  01B3E8  52E5               	movf	postdec1,f,c
 13423  01B3EA  0012               	return		;funcret
 13424  01B3EC                     __end_of_eaDogM_WriteString:
 13425                           	opt callstack 0
 13426                           
 13427 ;; *************** function _wait_lcd_set *****************
 13428 ;; Defined at:
 13429 ;;		line 434 in file "eadog.c"
 13430 ;; Parameters:    Size  Location     Type
 13431 ;;		None
 13432 ;; Auto vars:     Size  Location     Type
 13433 ;;		None
 13434 ;; Return value:  Size  Location     Type
 13435 ;;                  1  [STACK] void 
 13436 ;; Registers used:
 13437 ;;		None
 13438 ;; Tracked objects:
 13439 ;;		On entry : 0/0
 13440 ;;		On exit  : 3F/1
 13441 ;;		Unchanged: 0/0
 13442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13447 ;;Total ram usage:        0 bytes
 13448 ;; Hardware stack levels used:    1
 13449 ;; Hardware stack levels required when called:   15
 13450 ;; This function calls:
 13451 ;;		Nothing
 13452 ;; This function is called by:
 13453 ;;		_eaDogM_WriteString
 13454 ;;		_send_lcd_data_dma
 13455 ;; This function uses a reentrant model
 13456 ;;
 13457                           
 13458                           	psect	text54
 13459  01CE74                     __ptext54:
 13460                           	opt callstack 0
 13461  01CE74                     _wait_lcd_set:
 13462                           	opt callstack 12
 13463                           
 13464                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 13465                           
 13466                           ; BSR set to: 59
 13467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13468                           ;incstack = 0
 13469  01CE74  0101               	movlb	1	; () banked
 13470  01CE76  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 13471                           
 13472                           ; BSR set to: 1
 13473                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 13474  01CE78  0012               	return		;funcret
 13475  01CE7A                     __end_of_wait_lcd_set:
 13476                           	opt callstack 0
 13477                           
 13478 ;; *************** function _start_lcd *****************
 13479 ;; Defined at:
 13480 ;;		line 429 in file "eadog.c"
 13481 ;; Parameters:    Size  Location     Type
 13482 ;;		None
 13483 ;; Auto vars:     Size  Location     Type
 13484 ;;		None
 13485 ;; Return value:  Size  Location     Type
 13486 ;;                  1  [STACK] void 
 13487 ;; Registers used:
 13488 ;;		None
 13489 ;; Tracked objects:
 13490 ;;		On entry : 3F/0
 13491 ;;		On exit  : 3F/3B
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13498 ;;Total ram usage:        0 bytes
 13499 ;; Hardware stack levels used:    1
 13500 ;; Hardware stack levels required when called:   15
 13501 ;; This function calls:
 13502 ;;		Nothing
 13503 ;; This function is called by:
 13504 ;;		_eaDogM_WriteString
 13505 ;;		_send_lcd_data_dma
 13506 ;; This function uses a reentrant model
 13507 ;;
 13508                           
 13509                           	psect	text55
 13510  01CE7A                     __ptext55:
 13511                           	opt callstack 0
 13512  01CE7A                     _start_lcd:
 13513                           	opt callstack 12
 13514                           
 13515                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 13516                           
 13517                           ; BSR set to: 1
 13518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13519                           ;incstack = 0
 13520  01CE7A  013B               	movlb	59	; () banked
 13521  01CE7C  8DFC               	bsf	252,6,b	;volatile
 13522                           
 13523                           ; BSR set to: 59
 13524                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 13525  01CE7E  0012               	return		;funcret
 13526  01CE80                     __end_of_start_lcd:
 13527                           	opt callstack 0
 13528                           
 13529 ;; *************** function _ringBufS_flush *****************
 13530 ;; Defined at:
 13531 ;;		line 76 in file "ringbufs.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;  _this           2  [STACK] PTR struct ringBufS_t
 13534 ;;		 -> ring_buf1(67), 
 13535 ;;  clearBuffer     1  [STACK] const char 
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;		None
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  1  [STACK] void 
 13540 ;; Registers used:
 13541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 13542 ;; Tracked objects:
 13543 ;;		On entry : 3F/1
 13544 ;;		On exit  : 0/0
 13545 ;;		Unchanged: 0/0
 13546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13551 ;;Total ram usage:        0 bytes
 13552 ;; Hardware stack levels used:    1
 13553 ;; Hardware stack levels required when called:   16
 13554 ;; This function calls:
 13555 ;;		_memset
 13556 ;; This function is called by:
 13557 ;;		_eaDogM_WriteString
 13558 ;;		_send_lcd_data_dma
 13559 ;; This function uses a reentrant model
 13560 ;;
 13561                           
 13562                           	psect	text56
 13563  01B526                     __ptext56:
 13564                           	opt callstack 0
 13565  01B526                     _ringBufS_flush:
 13566                           	opt callstack 11
 13567                           
 13568                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 13569                           ;stkvar	__this @ sp[(0)+-2]
 13570                           
 13571                           ; BSR set to: 59
 13572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13573                           ;incstack = 0
 13574  01B526  0EFE               	movlw	-2
 13575  01B528  006F FF8C  F00B    	movff	plusw1,btemp+10
 13576  01B52E  0EFF               	movlw	-1
 13577  01B530  006F FF8C  F00C    	movff	plusw1,btemp+11
 13578  01B536  0E42               	movlw	66
 13579  01B538  240B               	addwf	(btemp+10)^0,w,c
 13580  01B53A  6ED9               	movwf	fsr2l,c
 13581  01B53C  0E00               	movlw	0
 13582  01B53E  200C               	addwfc	(btemp+11)^0,w,c
 13583  01B540  6EDA               	movwf	fsr2h,c
 13584  01B542  0E00               	movlw	0
 13585  01B544  6EDF               	movwf	indf2,c
 13586                           
 13587                           ;ringbufs.c: 79:  _this->head = 0;
 13588                           ;stkvar	__this @ sp[(0)+-2]
 13589  01B546  0EFE               	movlw	-2
 13590  01B548  006F FF8C  F00B    	movff	plusw1,btemp+10
 13591  01B54E  0EFF               	movlw	-1
 13592  01B550  006F FF8C  F00C    	movff	plusw1,btemp+11
 13593  01B556  0E40               	movlw	64
 13594  01B558  240B               	addwf	(btemp+10)^0,w,c
 13595  01B55A  6ED9               	movwf	fsr2l,c
 13596  01B55C  0E00               	movlw	0
 13597  01B55E  200C               	addwfc	(btemp+11)^0,w,c
 13598  01B560  6EDA               	movwf	fsr2h,c
 13599  01B562  0E00               	movlw	0
 13600  01B564  6EDF               	movwf	indf2,c
 13601                           
 13602                           ;ringbufs.c: 80:  _this->tail = 0;
 13603                           ;stkvar	__this @ sp[(0)+-2]
 13604  01B566  0EFE               	movlw	-2
 13605  01B568  006F FF8C  F00B    	movff	plusw1,btemp+10
 13606  01B56E  0EFF               	movlw	-1
 13607  01B570  006F FF8C  F00C    	movff	plusw1,btemp+11
 13608  01B576  0E41               	movlw	65
 13609  01B578  240B               	addwf	(btemp+10)^0,w,c
 13610  01B57A  6ED9               	movwf	fsr2l,c
 13611  01B57C  0E00               	movlw	0
 13612  01B57E  200C               	addwfc	(btemp+11)^0,w,c
 13613  01B580  6EDA               	movwf	fsr2h,c
 13614  01B582  0E00               	movlw	0
 13615  01B584  6EDF               	movwf	indf2,c
 13616                           
 13617                           ;ringbufs.c: 81:  if (clearBuffer) {
 13618                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 13619  01B586  0EFD               	movlw	-3
 13620  01B588  50E3               	movf	plusw1,w,c
 13621  01B58A  B4D8               	btfsc	status,2,c
 13622  01B58C  D011               	goto	l1624
 13623                           
 13624                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 13625  01B58E  0E40               	movlw	64
 13626  01B590  6EE6               	movwf	postinc1,c
 13627  01B592  0E00               	movlw	0
 13628  01B594  6EE6               	movwf	postinc1,c
 13629  01B596  0E00               	movlw	0
 13630  01B598  6EE6               	movwf	postinc1,c
 13631  01B59A  0E00               	movlw	0
 13632  01B59C  6EE6               	movwf	postinc1,c
 13633                           
 13634                           ;stkvar	__this @ sp[(-4)+-2]
 13635  01B59E  0EFA               	movlw	-6
 13636  01B5A0  006F FF8F FFE6     	movff	plusw1,postinc1
 13637  01B5A6  006F FF8F FFE6     	movff	plusw1,postinc1
 13638  01B5AC  EC59  F0B9         	call	_memset	;wreg free
 13639  01B5B0                     l1624:
 13640                           
 13641                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 13642  01B5B0  52E5               	movf	postdec1,f,c
 13643  01B5B2  52E5               	movf	postdec1,f,c
 13644  01B5B4  52E5               	movf	postdec1,f,c
 13645  01B5B6  0012               	return		;funcret
 13646  01B5B8                     __end_of_ringBufS_flush:
 13647                           	opt callstack 0
 13648                           
 13649 ;; *************** function _memset *****************
 13650 ;; Defined at:
 13651 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 13652 ;; Parameters:    Size  Location     Type
 13653 ;;  dest            2  [STACK] PTR void 
 13654 ;;		 -> ring_buf2(67), ring_buf1(67), 
 13655 ;;  c               2  [STACK] int 
 13656 ;;  n               2  [STACK] unsigned int 
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;  s               2  [STACK] PTR unsigned char 
 13659 ;;		 -> ring_buf2(67), ring_buf1(67), 
 13660 ;;  k               2  [STACK] unsigned int 
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  2  [STACK] PTR void 
 13663 ;; Registers used:
 13664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 13665 ;; Tracked objects:
 13666 ;;		On entry : 0/1
 13667 ;;		On exit  : 0/0
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13674 ;;Total ram usage:        0 bytes
 13675 ;; Hardware stack levels used:    1
 13676 ;; Hardware stack levels required when called:   15
 13677 ;; This function calls:
 13678 ;;		Nothing
 13679 ;; This function is called by:
 13680 ;;		_ringBufS_init
 13681 ;;		_ringBufS_flush
 13682 ;; This function uses a reentrant model
 13683 ;;
 13684                           
 13685                           	psect	text57
 13686  0172B2                     __ptext57:
 13687                           	opt callstack 0
 13688  0172B2                     _memset:
 13689                           	opt callstack 0
 13690                           
 13691                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13692  0172B2  52E6               	movf	postinc1,f,c
 13693  0172B4  52E6               	movf	postinc1,f,c
 13694  0172B6  52E6               	movf	postinc1,f,c
 13695  0172B8  52E6               	movf	postinc1,f,c
 13696                           
 13697                           ;stkvar	_dest @ sp[(-4)+-2]
 13698                           
 13699                           ;incstack = 0
 13700  0172BA  0EFA               	movlw	-6
 13701  0172BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13702  0172C2  0EFB               	movlw	-5
 13703  0172C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13704                           
 13705                           ;stkvar	_s @ sp[(-4)+0]
 13706  0172CA  0EFD               	movlw	-3
 13707  0172CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13708  0172D2  0EFC               	movlw	-4
 13709  0172D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13710                           
 13711                           ;stkvar	_n @ sp[(-4)+-6]
 13712  0172DA  0EF6               	movlw	-10
 13713  0172DC  006F FF8C  F001    	movff	plusw1,btemp
 13714  0172E2  0EF7               	movlw	-9
 13715  0172E4  50E3               	movf	plusw1,w,c
 13716  0172E6  1001               	iorwf	btemp^0,w,c
 13717  0172E8  B4D8               	btfsc	status,2,c
 13718  0172EA  D154               	goto	u11450
 13719                           
 13720                           ;stkvar	_c @ sp[(-4)+-4]
 13721                           ;stkvar	_s @ sp[(-4)+0]
 13722  0172EC  0EFC               	movlw	-4
 13723  0172EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13724  0172F4  0EFD               	movlw	-3
 13725  0172F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13726  0172FC  0EF8               	movlw	-8
 13727  0172FE  006F FF8F FFDF     	movff	plusw1,indf2
 13728                           
 13729                           ;stkvar	_c @ sp[(-4)+-4]
 13730                           ;stkvar	_n @ sp[(-4)+-6]
 13731                           ;stkvar	_s @ sp[(-4)+0]
 13732  017304  0EFC               	movlw	-4
 13733  017306  006F FF8C  F00B    	movff	plusw1,btemp+10
 13734  01730C  0EFD               	movlw	-3
 13735  01730E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13736  017314  0EF6               	movlw	-10
 13737  017316  50E3               	movf	plusw1,w,c
 13738  017318  260B               	addwf	(btemp+10)^0,f,c
 13739  01731A  0EF7               	movlw	-9
 13740  01731C  50E3               	movf	plusw1,w,c
 13741  01731E  220C               	addwfc	(btemp+11)^0,f,c
 13742  017320  0EFF               	movlw	255
 13743  017322  240B               	addwf	(btemp+10)^0,w,c
 13744  017324  6ED9               	movwf	fsr2l,c
 13745  017326  0EFF               	movlw	255
 13746  017328  200C               	addwfc	(btemp+11)^0,w,c
 13747  01732A  6EDA               	movwf	fsr2h,c
 13748  01732C  0EF8               	movlw	-8
 13749  01732E  006F FF8F FFDF     	movff	plusw1,indf2
 13750                           
 13751                           ;stkvar	_n @ sp[(-4)+-6]
 13752  017334  0EF7               	movlw	-9
 13753  017336  50E3               	movf	plusw1,w,c
 13754  017338  E108               	bnz	l12644
 13755  01733A  0EF6               	movlw	-10
 13756  01733C  006F FF8C  F001    	movff	plusw1,btemp
 13757  017342  0E03               	movlw	3
 13758  017344  5E01               	subwf	btemp^0,f,c
 13759  017346  A0D8               	btfss	status,0,c
 13760  017348  D125               	goto	u11450
 13761  01734A                     l12644:
 13762                           
 13763                           ;stkvar	_c @ sp[(-4)+-4]
 13764                           ;stkvar	_s @ sp[(-4)+0]
 13765  01734A  0EFC               	movlw	-4
 13766  01734C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13767  017352  0EFD               	movlw	-3
 13768  017354  006F FF8C  F00C    	movff	plusw1,btemp+11
 13769  01735A  0E01               	movlw	1
 13770  01735C  240B               	addwf	(btemp+10)^0,w,c
 13771  01735E  6ED9               	movwf	fsr2l,c
 13772  017360  0E00               	movlw	0
 13773  017362  200C               	addwfc	(btemp+11)^0,w,c
 13774  017364  6EDA               	movwf	fsr2h,c
 13775  017366  0EF8               	movlw	-8
 13776  017368  006F FF8F FFDF     	movff	plusw1,indf2
 13777                           
 13778                           ;stkvar	_c @ sp[(-4)+-4]
 13779                           ;stkvar	_s @ sp[(-4)+0]
 13780  01736E  0EFC               	movlw	-4
 13781  017370  006F FF8C  F00B    	movff	plusw1,btemp+10
 13782  017376  0EFD               	movlw	-3
 13783  017378  006F FF8C  F00C    	movff	plusw1,btemp+11
 13784  01737E  0E02               	movlw	2
 13785  017380  240B               	addwf	(btemp+10)^0,w,c
 13786  017382  6ED9               	movwf	fsr2l,c
 13787  017384  0E00               	movlw	0
 13788  017386  200C               	addwfc	(btemp+11)^0,w,c
 13789  017388  6EDA               	movwf	fsr2h,c
 13790  01738A  0EF8               	movlw	-8
 13791  01738C  006F FF8F FFDF     	movff	plusw1,indf2
 13792                           
 13793                           ;stkvar	_c @ sp[(-4)+-4]
 13794                           ;stkvar	_n @ sp[(-4)+-6]
 13795                           ;stkvar	_s @ sp[(-4)+0]
 13796  017392  0EFC               	movlw	-4
 13797  017394  006F FF8C  F00B    	movff	plusw1,btemp+10
 13798  01739A  0EFD               	movlw	-3
 13799  01739C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13800  0173A2  0EF6               	movlw	-10
 13801  0173A4  50E3               	movf	plusw1,w,c
 13802  0173A6  260B               	addwf	(btemp+10)^0,f,c
 13803  0173A8  0EF7               	movlw	-9
 13804  0173AA  50E3               	movf	plusw1,w,c
 13805  0173AC  220C               	addwfc	(btemp+11)^0,f,c
 13806  0173AE  0EFE               	movlw	254
 13807  0173B0  240B               	addwf	(btemp+10)^0,w,c
 13808  0173B2  6ED9               	movwf	fsr2l,c
 13809  0173B4  0EFF               	movlw	255
 13810  0173B6  200C               	addwfc	(btemp+11)^0,w,c
 13811  0173B8  6EDA               	movwf	fsr2h,c
 13812  0173BA  0EF8               	movlw	-8
 13813  0173BC  006F FF8F FFDF     	movff	plusw1,indf2
 13814                           
 13815                           ;stkvar	_c @ sp[(-4)+-4]
 13816                           ;stkvar	_n @ sp[(-4)+-6]
 13817                           ;stkvar	_s @ sp[(-4)+0]
 13818  0173C2  0EFC               	movlw	-4
 13819  0173C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13820  0173CA  0EFD               	movlw	-3
 13821  0173CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13822  0173D2  0EF6               	movlw	-10
 13823  0173D4  50E3               	movf	plusw1,w,c
 13824  0173D6  260B               	addwf	(btemp+10)^0,f,c
 13825  0173D8  0EF7               	movlw	-9
 13826  0173DA  50E3               	movf	plusw1,w,c
 13827  0173DC  220C               	addwfc	(btemp+11)^0,f,c
 13828  0173DE  0EFD               	movlw	253
 13829  0173E0  240B               	addwf	(btemp+10)^0,w,c
 13830  0173E2  6ED9               	movwf	fsr2l,c
 13831  0173E4  0EFF               	movlw	255
 13832  0173E6  200C               	addwfc	(btemp+11)^0,w,c
 13833  0173E8  6EDA               	movwf	fsr2h,c
 13834  0173EA  0EF8               	movlw	-8
 13835  0173EC  006F FF8F FFDF     	movff	plusw1,indf2
 13836                           
 13837                           ;stkvar	_n @ sp[(-4)+-6]
 13838  0173F2  0EF7               	movlw	-9
 13839  0173F4  50E3               	movf	plusw1,w,c
 13840  0173F6  E108               	bnz	l12650
 13841  0173F8  0EF6               	movlw	-10
 13842  0173FA  006F FF8C  F001    	movff	plusw1,btemp
 13843  017400  0E07               	movlw	7
 13844  017402  5E01               	subwf	btemp^0,f,c
 13845  017404  A0D8               	btfss	status,0,c
 13846  017406  D0C6               	goto	u11450
 13847  017408                     l12650:
 13848                           
 13849                           ;stkvar	_c @ sp[(-4)+-4]
 13850                           ;stkvar	_s @ sp[(-4)+0]
 13851  017408  0EFC               	movlw	-4
 13852  01740A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13853  017410  0EFD               	movlw	-3
 13854  017412  006F FF8C  F00C    	movff	plusw1,btemp+11
 13855  017418  0E03               	movlw	3
 13856  01741A  240B               	addwf	(btemp+10)^0,w,c
 13857  01741C  6ED9               	movwf	fsr2l,c
 13858  01741E  0E00               	movlw	0
 13859  017420  200C               	addwfc	(btemp+11)^0,w,c
 13860  017422  6EDA               	movwf	fsr2h,c
 13861  017424  0EF8               	movlw	-8
 13862  017426  006F FF8F FFDF     	movff	plusw1,indf2
 13863                           
 13864                           ;stkvar	_c @ sp[(-4)+-4]
 13865                           ;stkvar	_n @ sp[(-4)+-6]
 13866                           ;stkvar	_s @ sp[(-4)+0]
 13867  01742C  0EFC               	movlw	-4
 13868  01742E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13869  017434  0EFD               	movlw	-3
 13870  017436  006F FF8C  F00C    	movff	plusw1,btemp+11
 13871  01743C  0EF6               	movlw	-10
 13872  01743E  50E3               	movf	plusw1,w,c
 13873  017440  260B               	addwf	(btemp+10)^0,f,c
 13874  017442  0EF7               	movlw	-9
 13875  017444  50E3               	movf	plusw1,w,c
 13876  017446  220C               	addwfc	(btemp+11)^0,f,c
 13877  017448  0EFC               	movlw	252
 13878  01744A  240B               	addwf	(btemp+10)^0,w,c
 13879  01744C  6ED9               	movwf	fsr2l,c
 13880  01744E  0EFF               	movlw	255
 13881  017450  200C               	addwfc	(btemp+11)^0,w,c
 13882  017452  6EDA               	movwf	fsr2h,c
 13883  017454  0EF8               	movlw	-8
 13884  017456  006F FF8F FFDF     	movff	plusw1,indf2
 13885                           
 13886                           ;stkvar	_n @ sp[(-4)+-6]
 13887  01745C  0EF7               	movlw	-9
 13888  01745E  50E3               	movf	plusw1,w,c
 13889  017460  E108               	bnz	l12656
 13890  017462  0EF6               	movlw	-10
 13891  017464  006F FF8C  F001    	movff	plusw1,btemp
 13892  01746A  0E09               	movlw	9
 13893  01746C  5E01               	subwf	btemp^0,f,c
 13894  01746E  A0D8               	btfss	status,0,c
 13895  017470  D091               	goto	u11450
 13896  017472                     l12656:
 13897                           
 13898                           ;stkvar	_s @ sp[(-4)+0]
 13899  017472  0EFC               	movlw	-4
 13900  017474  006F FF8C  F00B    	movff	plusw1,btemp+10
 13901  01747A  1E0B               	comf	(btemp+10)^0,f,c
 13902  01747C  0EFD               	movlw	-3
 13903  01747E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13904  017484  1E0C               	comf	(btemp+11)^0,f,c
 13905  017486  2A0B               	incf	(btemp+10)^0,f,c
 13906  017488  B4D8               	btfsc	status,2,c
 13907  01748A  2A0C               	incf	(btemp+11)^0,f,c
 13908  01748C  0E03               	movlw	3
 13909  01748E  160B               	andwf	(btemp+10)^0,f,c
 13910  017490  0E00               	movlw	0
 13911  017492  160C               	andwf	(btemp+11)^0,f,c
 13912                           
 13913                           ;stkvar	_k @ sp[(-4)+2]
 13914  017494  0EFE               	movlw	-2
 13915  017496  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13916  01749C  0EFF               	movlw	-1
 13917  01749E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13918                           
 13919                           ;stkvar	_k @ sp[(-4)+2]
 13920                           ;stkvar	_s @ sp[(-4)+0]
 13921  0174A4  0EFC               	movlw	-4
 13922  0174A6  50E3               	movf	plusw1,w,c
 13923  0174A8  6E01               	movwf	btemp^0,c
 13924  0174AA  0EFE               	movlw	-2
 13925  0174AC  50E3               	movf	plusw1,w,c
 13926  0174AE  2601               	addwf	btemp^0,f,c
 13927  0174B0  0EFC               	movlw	-4
 13928  0174B2  0060  F007  FFE3   	movff	btemp,plusw1
 13929  0174B8  0EFD               	movlw	-3
 13930  0174BA  50E3               	movf	plusw1,w,c
 13931  0174BC  6E01               	movwf	btemp^0,c
 13932  0174BE  0EFF               	movlw	-1
 13933  0174C0  50E3               	movf	plusw1,w,c
 13934  0174C2  2201               	addwfc	btemp^0,f,c
 13935  0174C4  0EFD               	movlw	-3
 13936  0174C6  0060  F007  FFE3   	movff	btemp,plusw1
 13937                           
 13938                           ;stkvar	_k @ sp[(-4)+2]
 13939                           ;stkvar	_n @ sp[(-4)+-6]
 13940  0174CC  0EF6               	movlw	-10
 13941  0174CE  50E3               	movf	plusw1,w,c
 13942  0174D0  6E01               	movwf	btemp^0,c
 13943  0174D2  0EFE               	movlw	-2
 13944  0174D4  50E3               	movf	plusw1,w,c
 13945  0174D6  5E01               	subwf	btemp^0,f,c
 13946  0174D8  0EF6               	movlw	-10
 13947  0174DA  0060  F007  FFE3   	movff	btemp,plusw1
 13948  0174E0  0EF7               	movlw	-9
 13949  0174E2  50E3               	movf	plusw1,w,c
 13950  0174E4  6E01               	movwf	btemp^0,c
 13951  0174E6  0EFF               	movlw	-1
 13952  0174E8  50E3               	movf	plusw1,w,c
 13953  0174EA  5A01               	subwfb	btemp^0,f,c
 13954  0174EC  0EF7               	movlw	-9
 13955  0174EE  0060  F007  FFE3   	movff	btemp,plusw1
 13956  0174F4  0EFC               	movlw	252
 13957  0174F6  6E0B               	movwf	(btemp+10)^0,c
 13958  0174F8  0EFF               	movlw	255
 13959  0174FA  6E0C               	movwf	(btemp+11)^0,c
 13960                           
 13961                           ;stkvar	_n @ sp[(-4)+-6]
 13962  0174FC  0EF6               	movlw	-10
 13963  0174FE  006F FF8C  F001    	movff	plusw1,btemp
 13964  017504  500B               	movf	(btemp+10)^0,w,c
 13965  017506  1601               	andwf	btemp^0,f,c
 13966  017508  0EF6               	movlw	-10
 13967  01750A  0060  F007  FFE3   	movff	btemp,plusw1
 13968  017510  0EF7               	movlw	-9
 13969  017512  006F FF8C  F001    	movff	plusw1,btemp
 13970  017518  500C               	movf	(btemp+11)^0,w,c
 13971  01751A  1601               	andwf	btemp^0,f,c
 13972  01751C  0EF7               	movlw	-9
 13973  01751E  D02E               	goto	L13
 13974  017520                     l12664:
 13975                           
 13976                           ;stkvar	_c @ sp[(-4)+-4]
 13977                           ;stkvar	_s @ sp[(-4)+0]
 13978  017520  0EFC               	movlw	-4
 13979  017522  006F FF8F FFD9     	movff	plusw1,fsr2l
 13980  017528  0EFD               	movlw	-3
 13981  01752A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13982  017530  0EF8               	movlw	-8
 13983  017532  006F FF8F FFDF     	movff	plusw1,indf2
 13984                           
 13985                           ;stkvar	_n @ sp[(-4)+-6]
 13986  017538  0EF6               	movlw	-10
 13987  01753A  006F FF8C  F001    	movff	plusw1,btemp
 13988  017540  0E01               	movlw	1
 13989  017542  5E01               	subwf	btemp^0,f,c
 13990  017544  0EF6               	movlw	-10
 13991  017546  0060  F007  FFE3   	movff	btemp,plusw1
 13992  01754C  0EF7               	movlw	-9
 13993  01754E  006F FF8C  F001    	movff	plusw1,btemp
 13994  017554  0E00               	movlw	0
 13995  017556  5A01               	subwfb	btemp^0,f,c
 13996  017558  0EF7               	movlw	-9
 13997  01755A  0060  F007  FFE3   	movff	btemp,plusw1
 13998                           
 13999                           ;stkvar	_s @ sp[(-4)+0]
 14000  017560  0EFC               	movlw	-4
 14001  017562  50E3               	movf	plusw1,w,c
 14002  017564  0F01               	addlw	1
 14003  017566  6E01               	movwf	btemp^0,c
 14004  017568  0EFC               	movlw	-4
 14005  01756A  0060  F007  FFE3   	movff	btemp,plusw1
 14006  017570  6A01               	clrf	btemp^0,c
 14007  017572  0EFD               	movlw	-3
 14008  017574  50E3               	movf	plusw1,w,c
 14009  017576  2001               	addwfc	btemp^0,w,c
 14010  017578  6E01               	movwf	btemp^0,c
 14011  01757A  0EFD               	movlw	-3
 14012  01757C                     L13:
 14013  01757C  0060  F007  FFE3   	movff	btemp,plusw1
 14014                           
 14015                           ;stkvar	_n @ sp[(-4)+-6]
 14016  017582  0EF6               	movlw	-10
 14017  017584  006F FF8C  F001    	movff	plusw1,btemp
 14018  01758A  0EF7               	movlw	-9
 14019  01758C  50E3               	movf	plusw1,w,c
 14020  01758E  1001               	iorwf	btemp^0,w,c
 14021  017590  A4D8               	btfss	status,2,c
 14022  017592  D7C6               	goto	l12664
 14023  017594                     u11450:
 14024                           
 14025                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 14026  017594  0EF6               	movlw	246
 14027  017596  26E1               	addwf	fsr1l,f,c
 14028  017598  0EFF               	movlw	255
 14029  01759A  22E2               	addwfc	fsr1h,f,c
 14030  01759C  0012               	return		;funcret
 14031  01759E                     __end_of_memset:
 14032                           	opt callstack 0
 14033                           
 14034 ;; *************** function _printf *****************
 14035 ;; Defined at:
 14036 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 14037 ;; Parameters:    Size  Location     Type
 14038 ;;  fmt             2  [STACK] PTR const unsigned char 
 14039 ;;		 -> STR_60(3), STR_59(3), 
 14040 ;; Auto vars:     Size  Location     Type
 14041 ;;  ap              2  [STACK] PTR void [1]
 14042 ;;		 -> ?_printf(2), ?_sprintf(2), 
 14043 ;;  ret             2    0        int 
 14044 ;; Return value:  Size  Location     Type
 14045 ;;                  2  [STACK] int 
 14046 ;; Registers used:
 14047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14048 ;; Tracked objects:
 14049 ;;		On entry : 3F/3B
 14050 ;;		On exit  : 3F/0
 14051 ;;		Unchanged: 0/0
 14052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14057 ;;Total ram usage:        0 bytes
 14058 ;; Hardware stack levels used:    1
 14059 ;; Hardware stack levels required when called:   23
 14060 ;; This function calls:
 14061 ;;		_vfprintf
 14062 ;; This function is called by:
 14063 ;;		_eaDogM_WriteString
 14064 ;;		_send_lcd_data_dma
 14065 ;; This function uses a reentrant model
 14066 ;;
 14067                           
 14068                           	psect	text58
 14069  01BD12                     __ptext58:
 14070                           	opt callstack 0
 14071  01BD12                     _printf:
 14072                           	opt callstack 0
 14073                           
 14074                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14075  01BD12  52E6               	movf	postinc1,f,c
 14076  01BD14  52E6               	movf	postinc1,f,c
 14077                           
 14078                           ;stkvar	?_printf @ sp[(-2)+-3]
 14079                           
 14080                           ;incstack = 0
 14081  01BD16  0EFB               	movlw	251
 14082  01BD18  24E1               	addwf	fsr1l,w,c
 14083  01BD1A  6E0B               	movwf	(btemp+10)^0,c
 14084  01BD1C  0EFF               	movlw	255
 14085  01BD1E  20E2               	addwfc	fsr1h,w,c
 14086  01BD20  6E0C               	movwf	(btemp+11)^0,c
 14087                           
 14088                           ;stkvar	_ap @ sp[(-2)+0]
 14089  01BD22  0EFF               	movlw	-1
 14090  01BD24  0060  F033  FFE3   	movff	btemp+11,plusw1
 14091  01BD2A  0EFE               	movlw	-2
 14092  01BD2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14093                           
 14094                           ;stkvar	_ap @ sp[(-2)+0]
 14095  01BD32  0EFE               	movlw	254
 14096  01BD34  24E1               	addwf	fsr1l,w,c
 14097  01BD36  6E01               	movwf	btemp^0,c
 14098  01BD38  0EFF               	movlw	255
 14099  01BD3A  20E2               	addwfc	fsr1h,w,c
 14100  01BD3C  6E02               	movwf	(btemp+1)^0,c
 14101  01BD3E  0060  F007  FFE6   	movff	btemp,postinc1
 14102  01BD44  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14103                           
 14104                           ;stkvar	_fmt @ sp[(-4)+-3]
 14105  01BD4A  0EF9               	movlw	-7
 14106  01BD4C  006F FF8F FFE6     	movff	plusw1,postinc1
 14107  01BD52  006F FF8F FFE6     	movff	plusw1,postinc1
 14108  01BD58  0E00               	movlw	0
 14109  01BD5A  6EE6               	movwf	postinc1,c
 14110  01BD5C  0E00               	movlw	0
 14111  01BD5E  6EE6               	movwf	postinc1,c
 14112  01BD60  ECA4  F0D8         	call	_vfprintf	;wreg free
 14113                           
 14114                           ; BSR set to: 0
 14115                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 14116  01BD64  52E5               	movf	postdec1,f,c
 14117  01BD66  52E5               	movf	postdec1,f,c
 14118  01BD68  52E5               	movf	postdec1,f,c
 14119  01BD6A  50E7               	movf	indf1,w,c
 14120  01BD6C  5EE1               	subwf	fsr1l,f,c
 14121  01BD6E  0E00               	movlw	0
 14122  01BD70  5AE2               	subwfb	fsr1h,f,c
 14123  01BD72  0012               	return		;funcret
 14124  01BD74                     __end_of_printf:
 14125                           	opt callstack 0
 14126                           
 14127 ;; *************** function _vfprintf *****************
 14128 ;; Defined at:
 14129 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14130 ;; Parameters:    Size  Location     Type
 14131 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14132 ;;		 -> f(6), NULL(0), 
 14133 ;;  fmt             2  [STACK] PTR const unsigned char 
 14134 ;;		 -> STR_80(127), STR_78(3), STR_77(3), STR_76(19), 
 14135 ;;		 -> STR_75(19), STR_74(19), STR_73(19), STR_72(19), 
 14136 ;;		 -> STR_71(19), STR_70(24), STR_69(15), STR_68(15), 
 14137 ;;		 -> STR_67(15), STR_66(10), STR_65(10), STR_64(19), 
 14138 ;;		 -> STR_63(19), STR_60(3), STR_59(3), STR_58(21), 
 14139 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(21), 
 14140 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 14141 ;;		 -> STR_49(20), STR_48(20), STR_47(21), STR_46(21), 
 14142 ;;		 -> STR_45(21), STR_44(22), STR_43(22), STR_42(22), 
 14143 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(29), 
 14144 ;;		 -> STR_37(23), STR_36(23), STR_35(22), STR_34(22), 
 14145 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 14146 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 14147 ;;		 -> STR_25(22), STR_24(22), STR_23(17), STR_22(16), 
 14148 ;;		 -> STR_21(16), STR_20(26), STR_19(26), STR_18(22), 
 14149 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(21), 
 14150 ;;		 -> STR_13(22), STR_12(22), STR_11(26), STR_10(21), 
 14151 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 14152 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 14153 ;;  ap              2  [STACK] PTR PTR void 
 14154 ;;		 -> ap(2), ap(2), 
 14155 ;; Auto vars:     Size  Location     Type
 14156 ;;  cfmt            2  [STACK] PTR unsigned char 
 14157 ;;		 -> STR_80(127), STR_78(3), STR_77(3), STR_76(19), 
 14158 ;;		 -> STR_75(19), STR_74(19), STR_73(19), STR_72(19), 
 14159 ;;		 -> STR_71(19), STR_70(24), STR_69(15), STR_68(15), 
 14160 ;;		 -> STR_67(15), STR_66(10), STR_65(10), STR_64(19), 
 14161 ;;		 -> STR_63(19), STR_60(3), STR_59(3), STR_58(21), 
 14162 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(21), 
 14163 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 14164 ;;		 -> STR_49(20), STR_48(20), STR_47(21), STR_46(21), 
 14165 ;;		 -> STR_45(21), STR_44(22), STR_43(22), STR_42(22), 
 14166 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(29), 
 14167 ;;		 -> STR_37(23), STR_36(23), STR_35(22), STR_34(22), 
 14168 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 14169 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 14170 ;;		 -> STR_25(22), STR_24(22), STR_23(17), STR_22(16), 
 14171 ;;		 -> STR_21(16), STR_20(26), STR_19(26), STR_18(22), 
 14172 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(21), 
 14173 ;;		 -> STR_13(22), STR_12(22), STR_11(26), STR_10(21), 
 14174 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 14175 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 14176 ;; Return value:  Size  Location     Type
 14177 ;;                  2  [STACK] int 
 14178 ;; Registers used:
 14179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14180 ;; Tracked objects:
 14181 ;;		On entry : 0/2
 14182 ;;		On exit  : 3F/0
 14183 ;;		Unchanged: 0/0
 14184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14189 ;;Total ram usage:        0 bytes
 14190 ;; Hardware stack levels used:    1
 14191 ;; Hardware stack levels required when called:   22
 14192 ;; This function calls:
 14193 ;;		_vfpfcnvrt
 14194 ;; This function is called by:
 14195 ;;		_sprintf
 14196 ;;		_printf
 14197 ;; This function uses a reentrant model
 14198 ;;
 14199                           
 14200                           	psect	text59
 14201  01B148                     __ptext59:
 14202                           	opt callstack 0
 14203  01B148                     _vfprintf:
 14204                           	opt callstack 0
 14205                           
 14206                           ; BSR set to: 0
 14207                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14208  01B148  52E6               	movf	postinc1,f,c
 14209  01B14A  52E6               	movf	postinc1,f,c
 14210                           
 14211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 14212                           ;stkvar	_fmt @ sp[(-2)+-4]
 14213                           
 14214                           ;incstack = 0
 14215 ;; hardware stack exceeded
 14216  01B14C  0EFA               	movlw	-6
 14217  01B14E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14218  01B154  0EFB               	movlw	-5
 14219  01B156  006F FF8C  F00C    	movff	plusw1,btemp+11
 14220                           
 14221                           ;stkvar	_cfmt @ sp[(-2)+0]
 14222  01B15C  0EFF               	movlw	-1
 14223  01B15E  0060  F033  FFE3   	movff	btemp+11,plusw1
 14224  01B164  0EFE               	movlw	-2
 14225  01B166  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14226                           
 14227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 14228  01B16C  0100               	movlb	0	; () banked
 14229  01B16E  6B96               	clrf	_nout& (0+255),b
 14230  01B170  6B97               	clrf	(_nout+1)& (0+255),b
 14231                           
 14232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 14233  01B172  D021               	goto	l13514
 14234  01B174                     l13512:
 14235                           
 14236                           ; BSR set to: 0
 14237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 14238                           ;stkvar	_ap @ sp[(-2)+-6]
 14239  01B174  0EF8               	movlw	-8
 14240  01B176  006F FF8F FFE6     	movff	plusw1,postinc1
 14241  01B17C  006F FF8F FFE6     	movff	plusw1,postinc1
 14242                           
 14243                           ;stkvar	_cfmt @ sp[(-4)+0]
 14244  01B182  0EFC               	movlw	252
 14245  01B184  24E1               	addwf	fsr1l,w,c
 14246  01B186  6E01               	movwf	btemp^0,c
 14247  01B188  0EFF               	movlw	255
 14248  01B18A  20E2               	addwfc	fsr1h,w,c
 14249  01B18C  6E02               	movwf	(btemp+1)^0,c
 14250  01B18E  0060  F007  FFE6   	movff	btemp,postinc1
 14251  01B194  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14252                           
 14253                           ;stkvar	_fp @ sp[(-6)+-2]
 14254  01B19A  0EF8               	movlw	-8
 14255  01B19C  006F FF8F FFE6     	movff	plusw1,postinc1
 14256  01B1A2  006F FF8F FFE6     	movff	plusw1,postinc1
 14257  01B1A8  EC4D  F092         	call	_vfpfcnvrt	;wreg free
 14258  01B1AC  5001               	movf	btemp^0,w,c
 14259  01B1AE  0100               	movlb	0	; () banked
 14260  01B1B0  2796               	addwf	_nout& (0+255),f,b
 14261  01B1B2  5002               	movf	(btemp+1)^0,w,c
 14262  01B1B4  2397               	addwfc	(_nout+1)& (0+255),f,b
 14263  01B1B6                     l13514:
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 14267                           ;stkvar	_cfmt @ sp[(-2)+0]
 14268  01B1B6  50E1               	movf	fsr1l,w,c
 14269  01B1B8  0FFE               	addlw	-2
 14270  01B1BA  6ED9               	movwf	fsr2l,c
 14271  01B1BC  50E2               	movf	fsr1h,w,c
 14272  01B1BE  6EDA               	movwf	fsr2h,c
 14273  01B1C0  0EFF               	movlw	255
 14274  01B1C2  22DA               	addwfc	fsr2h,f,c
 14275  01B1C4  006F FF7B FFF6     	movff	postinc2,tblptrl
 14276  01B1CA  006F FF77 FFF7     	movff	postdec2,tblptrh
 14277  01B1D0                     	if	0	;tblptru may be non-zero
 14278  01B1D0                     	endif
 14279  01B1D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14280  01B1D0  0E00               	movlw	low (__mediumconst shr (0+16))
 14281  01B1D2  6EF8               	movwf	tblptru,c
 14282  01B1D4                     	endif
 14283  01B1D4  0008               	tblrd		*
 14284  01B1D6  50F5               	movf	tablat,w,c
 14285  01B1D8  0900               	iorlw	0
 14286  01B1DA  A4D8               	btfss	status,2,c
 14287  01B1DC  D7CB               	goto	l13512
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 14291  01B1DE  0060  F258  F001   	movff	_nout,btemp
 14292  01B1E4  0060  F25C  F002   	movff	_nout+1,btemp+1
 14293                           
 14294                           ; BSR set to: 0
 14295                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 14296  01B1EA  0EF8               	movlw	248
 14297  01B1EC  26E1               	addwf	fsr1l,f,c
 14298  01B1EE  0EFF               	movlw	255
 14299  01B1F0  22E2               	addwfc	fsr1h,f,c
 14300  01B1F2  0012               	return		;funcret
 14301  01B1F4                     __end_of_vfprintf:
 14302                           	opt callstack 0
 14303                           
 14304 ;; *************** function _vfpfcnvrt *****************
 14305 ;; Defined at:
 14306 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14307 ;; Parameters:    Size  Location     Type
 14308 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14309 ;;		 -> f(6), NULL(0), 
 14310 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 14311 ;;		 -> cfmt(2), 
 14312 ;;  ap              2  [STACK] PTR PTR void 
 14313 ;;		 -> ap(2), ap(2), 
 14314 ;; Auto vars:     Size  Location     Type
 14315 ;;  llu             8  [STACK] unsigned long long 
 14316 ;;  ll              8  [STACK] long long 
 14317 ;;  f               4  [STACK] long long 
 14318 ;;  ct              3  [STACK] unsigned char [3]
 14319 ;;  vp              3    0        PTR void 
 14320 ;;  cp              2  [STACK] PTR unsigned char 
 14321 ;;		 -> ?_printf(2), ?_sprintf(2), STR_62(9), STR_61(12), 
 14322 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 14323 ;;		 -> V(192), 
 14324 ;;  i               2    0        int 
 14325 ;;  done            2    0        int 
 14326 ;;  c               1  [STACK] unsigned char 
 14327 ;; Return value:  Size  Location     Type
 14328 ;;                  2  [STACK] int 
 14329 ;; Registers used:
 14330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14331 ;; Tracked objects:
 14332 ;;		On entry : 0/0
 14333 ;;		On exit  : 0/0
 14334 ;;		Unchanged: 0/0
 14335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14340 ;;Total ram usage:        0 bytes
 14341 ;; Hardware stack levels used:    1
 14342 ;; Hardware stack levels required when called:   21
 14343 ;; This function calls:
 14344 ;;		_atoi
 14345 ;;		_ctoa
 14346 ;;		_dtoa
 14347 ;;		_efgtoa
 14348 ;;		_fputc
 14349 ;;		_isdigit
 14350 ;;		_isupper
 14351 ;;		_stoa
 14352 ;;		_strncmp
 14353 ;;		_tolower
 14354 ;;		_utoa
 14355 ;;		_xtoa
 14356 ;; This function is called by:
 14357 ;;		_vfprintf
 14358 ;; This function uses a reentrant model
 14359 ;;
 14360                           
 14361                           	psect	text60
 14362  01249A                     __ptext60:
 14363                           	opt callstack 0
 14364  01249A                     _vfpfcnvrt:
 14365                           	opt callstack 0
 14366                           
 14367                           ; BSR set to: 0
 14368                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14369  01249A  0E20               	movlw	32
 14370  01249C  26E1               	addwf	fsr1l,f,c
 14371  01249E  0E00               	movlw	0
 14372  0124A0  22E2               	addwfc	fsr1h,f,c
 14373                           
 14374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 14375                           ;stkvar	_fmt @ sp[(-32)+-4]
 14376                           
 14377                           ;incstack = 0
 14378 ;; hardware stack exceeded
 14379  0124A2  0EDC               	movlw	-36
 14380  0124A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14381  0124AA  0EDD               	movlw	-35
 14382  0124AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14383  0124B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14384  0124B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14385  0124BE                     	if	0	;tblptru may be non-zero
 14386  0124BE                     	endif
 14387  0124BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14388  0124BE  0E00               	movlw	low (__mediumconst shr (0+16))
 14389  0124C0  6EF8               	movwf	tblptru,c
 14390  0124C2                     	endif
 14391  0124C2  0008               	tblrd		*
 14392  0124C4  50F5               	movf	tablat,w,c
 14393  0124C6  0A25               	xorlw	37
 14394  0124C8  A4D8               	btfss	status,2,c
 14395  0124CA  EFF4  F099         	goto	l13474
 14396                           
 14397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 14398                           ;stkvar	_fmt @ sp[(-32)+-4]
 14399  0124CE  0EDC               	movlw	-36
 14400  0124D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14401  0124D6  0EDD               	movlw	-35
 14402  0124D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14403  0124DE  2ADE               	incf	postinc2,f,c
 14404  0124E0  0E00               	movlw	0
 14405  0124E2  22DD               	addwfc	postdec2,f,c
 14406                           
 14407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 14408  0124E4  6A3A               	clrf	_width^0,c
 14409  0124E6  6A3B               	clrf	(_width+1)^0,c
 14410  0124E8  6A3E               	clrf	_flags^0,c
 14411  0124EA  6A3F               	clrf	(_flags+1)^0,c
 14412                           
 14413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 14414  0124EC  683C               	setf	_prec^0,c
 14415  0124EE  683D               	setf	(_prec+1)^0,c
 14416                           
 14417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 14418                           ;stkvar	_fmt @ sp[(-32)+-4]
 14419  0124F0  0EDC               	movlw	-36
 14420  0124F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14421  0124F8  0EDD               	movlw	-35
 14422  0124FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14423  012500  006F FF7B FFF6     	movff	postinc2,tblptrl
 14424  012506  006F FF77 FFF7     	movff	postdec2,tblptrh
 14425  01250C                     	if	0	;tblptru may be non-zero
 14426  01250C                     	endif
 14427  01250C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14428  01250C  0E00               	movlw	low (__mediumconst shr (0+16))
 14429  01250E  6EF8               	movwf	tblptru,c
 14430  012510                     	endif
 14431  012510  0008               	tblrd		*
 14432  012512  50F5               	movf	tablat,w,c
 14433  012514  0A2A               	xorlw	42
 14434  012516  A4D8               	btfss	status,2,c
 14435  012518  D031               	goto	l13292
 14436                           
 14437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 14438                           ;stkvar	_fmt @ sp[(-32)+-4]
 14439  01251A  0EDC               	movlw	-36
 14440  01251C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14441  012522  0EDD               	movlw	-35
 14442  012524  006F FF8F FFDA     	movff	plusw1,fsr2h
 14443  01252A  2ADE               	incf	postinc2,f,c
 14444  01252C  0E00               	movlw	0
 14445  01252E  22DD               	addwfc	postdec2,f,c
 14446                           
 14447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 14448                           ;stkvar	_ap @ sp[(-32)+-6]
 14449  012530  0EDA               	movlw	-38
 14450  012532  006F FF8F FFD9     	movff	plusw1,fsr2l
 14451  012538  0EDB               	movlw	-37
 14452  01253A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14453  012540  0E02               	movlw	2
 14454  012542  5EDE               	subwf	postinc2,f,c
 14455  012544  0E00               	movlw	0
 14456  012546  5ADD               	subwfb	postdec2,f,c
 14457  012548  006F FF78  F00B    	movff	postinc2,btemp+10
 14458  01254E  006F FF74  F00C    	movff	postdec2,btemp+11
 14459  012554  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14460  01255A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14461  012560  006F FF78  F03A    	movff	postinc2,_width
 14462  012566  006F FF74  F03B    	movff	postdec2,_width+1
 14463                           
 14464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 14465  01256C  AE3B               	btfss	(_width+1)^0,7,c
 14466  01256E  D066               	goto	u12640
 14467                           
 14468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 14469  012570  803E               	bsf	_flags^0,0,c
 14470                           
 14471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 14472  012572  6C3A               	negf	_width^0,c
 14473  012574  1E3B               	comf	(_width+1)^0,f,c
 14474  012576  B0D8               	btfsc	status,0,c
 14475  012578  2A3B               	incf	(_width+1)^0,f,c
 14476  01257A  D060               	goto	u12640
 14477  01257C                     l13292:
 14478                           
 14479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 14480                           ;stkvar	_fmt @ sp[(-32)+-4]
 14481  01257C  0EDC               	movlw	-36
 14482  01257E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14483  012584  0EDD               	movlw	-35
 14484  012586  006F FF8F FFDA     	movff	plusw1,fsr2h
 14485  01258C  006F FF78  F00B    	movff	postinc2,btemp+10
 14486  012592  006F FF74  F00C    	movff	postdec2,btemp+11
 14487  012598  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14488  01259E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14489  0125A4  ECDA  F0BE         	call	_atoi	;wreg free
 14490  0125A8  0060  F004  F03A   	movff	btemp,_width
 14491  0125AE  0060  F008  F03B   	movff	btemp+1,_width+1
 14492                           
 14493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 14494  0125B4  D00B               	goto	l13296
 14495  0125B6                     l13294:
 14496                           
 14497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 14498                           ;stkvar	_fmt @ sp[(-32)+-4]
 14499  0125B6  0EDC               	movlw	-36
 14500  0125B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14501  0125BE  0EDD               	movlw	-35
 14502  0125C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14503  0125C6  2ADE               	incf	postinc2,f,c
 14504  0125C8  0E00               	movlw	0
 14505  0125CA  22DD               	addwfc	postdec2,f,c
 14506  0125CC                     l13296:
 14507  0125CC  0ED0               	movlw	208
 14508  0125CE  6E0B               	movwf	(btemp+10)^0,c
 14509  0125D0  0EFF               	movlw	255
 14510  0125D2  6E0C               	movwf	(btemp+11)^0,c
 14511                           
 14512                           ;stkvar	_fmt @ sp[(-32)+-4]
 14513  0125D4  0EDC               	movlw	-36
 14514  0125D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 14515  0125DC  0EDD               	movlw	-35
 14516  0125DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 14517  0125E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 14518  0125EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 14519  0125F0                     	if	0	;tblptru may be non-zero
 14520  0125F0                     	endif
 14521  0125F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14522  0125F0  0E00               	movlw	low (__mediumconst shr (0+16))
 14523  0125F2  6EF8               	movwf	tblptru,c
 14524  0125F4                     	endif
 14525  0125F4  0008               	tblrd		*
 14526  0125F6  50F5               	movf	tablat,w,c
 14527  0125F8  6E09               	movwf	(btemp+8)^0,c
 14528  0125FA  6A0A               	clrf	(btemp+9)^0,c
 14529  0125FC  500B               	movf	(btemp+10)^0,w,c
 14530  0125FE  2609               	addwf	(btemp+8)^0,f,c
 14531  012600  500C               	movf	(btemp+11)^0,w,c
 14532  012602  220A               	addwfc	(btemp+9)^0,f,c
 14533  012604  500A               	movf	(btemp+9)^0,w,c
 14534  012606  E106               	bnz	u12620
 14535  012608  0E0A               	movlw	10
 14536  01260A  5C09               	subwf	(btemp+8)^0,w,c
 14537  01260C  B0D8               	btfsc	status,0,c
 14538  01260E  D002               	goto	u12620
 14539  012610  0E01               	movlw	1
 14540  012612  D001               	goto	u12630
 14541  012614                     u12620:
 14542  012614  0E00               	movlw	0
 14543  012616                     u12630:
 14544  012616  6E0B               	movwf	(btemp+10)^0,c
 14545  012618  6A0C               	clrf	(btemp+11)^0,c
 14546                           
 14547                           ;stkvar	_vfpfcnvrt$6037 @ sp[(-32)+4]
 14548  01261A  0EE4               	movlw	-28
 14549  01261C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14550  012622  0EE5               	movlw	-27
 14551  012624  0060  F033  FFE3   	movff	btemp+11,plusw1
 14552                           
 14553                           ;stkvar	_vfpfcnvrt$6037 @ sp[(-32)+4]
 14554  01262A  0EE4               	movlw	-28
 14555  01262C  006F FF8C  F001    	movff	plusw1,btemp
 14556  012632  0EE5               	movlw	-27
 14557  012634  50E3               	movf	plusw1,w,c
 14558  012636  1001               	iorwf	btemp^0,w,c
 14559  012638  A4D8               	btfss	status,2,c
 14560  01263A  D7BD               	goto	l13294
 14561  01263C                     u12640:
 14562                           
 14563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 14564                           ;stkvar	_fmt @ sp[(-32)+-4]
 14565  01263C  0EDC               	movlw	-36
 14566  01263E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14567  012644  0EDD               	movlw	-35
 14568  012646  006F FF8F FFDA     	movff	plusw1,fsr2h
 14569  01264C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14570  012652  006F FF77 FFF7     	movff	postdec2,tblptrh
 14571  012658                     	if	0	;tblptru may be non-zero
 14572  012658                     	endif
 14573  012658                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14574  012658  0E00               	movlw	low (__mediumconst shr (0+16))
 14575  01265A  6EF8               	movwf	tblptru,c
 14576  01265C                     	endif
 14577  01265C  0008               	tblrd		*
 14578  01265E  50F5               	movf	tablat,w,c
 14579  012660  0A2E               	xorlw	46
 14580  012662  A4D8               	btfss	status,2,c
 14581  012664  D0AC               	goto	u12690
 14582                           
 14583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 14584  012666  6A3C               	clrf	_prec^0,c
 14585  012668  6A3D               	clrf	(_prec+1)^0,c
 14586                           
 14587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 14588                           ;stkvar	_fmt @ sp[(-32)+-4]
 14589  01266A  0EDC               	movlw	-36
 14590  01266C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14591  012672  0EDD               	movlw	-35
 14592  012674  006F FF8F FFDA     	movff	plusw1,fsr2h
 14593  01267A  2ADE               	incf	postinc2,f,c
 14594  01267C  0E00               	movlw	0
 14595  01267E  22DD               	addwfc	postdec2,f,c
 14596                           
 14597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 14598                           ;stkvar	_fmt @ sp[(-32)+-4]
 14599  012680  0EDC               	movlw	-36
 14600  012682  006F FF8F FFD9     	movff	plusw1,fsr2l
 14601  012688  0EDD               	movlw	-35
 14602  01268A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14603  012690  006F FF7B FFF6     	movff	postinc2,tblptrl
 14604  012696  006F FF77 FFF7     	movff	postdec2,tblptrh
 14605  01269C                     	if	0	;tblptru may be non-zero
 14606  01269C                     	endif
 14607  01269C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14608  01269C  0E00               	movlw	low (__mediumconst shr (0+16))
 14609  01269E  6EF8               	movwf	tblptru,c
 14610  0126A0                     	endif
 14611  0126A0  0008               	tblrd		*
 14612  0126A2  50F5               	movf	tablat,w,c
 14613  0126A4  0A2A               	xorlw	42
 14614  0126A6  A4D8               	btfss	status,2,c
 14615  0126A8  D02A               	goto	l13314
 14616                           
 14617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 14618                           ;stkvar	_fmt @ sp[(-32)+-4]
 14619  0126AA  0EDC               	movlw	-36
 14620  0126AC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14621  0126B2  0EDD               	movlw	-35
 14622  0126B4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14623  0126BA  2ADE               	incf	postinc2,f,c
 14624  0126BC  0E00               	movlw	0
 14625  0126BE  22DD               	addwfc	postdec2,f,c
 14626                           
 14627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 14628                           ;stkvar	_ap @ sp[(-32)+-6]
 14629  0126C0  0EDA               	movlw	-38
 14630  0126C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14631  0126C8  0EDB               	movlw	-37
 14632  0126CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14633  0126D0  0E02               	movlw	2
 14634  0126D2  5EDE               	subwf	postinc2,f,c
 14635  0126D4  0E00               	movlw	0
 14636  0126D6  5ADD               	subwfb	postdec2,f,c
 14637  0126D8  006F FF78  F00B    	movff	postinc2,btemp+10
 14638  0126DE  006F FF74  F00C    	movff	postdec2,btemp+11
 14639  0126E4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14640  0126EA  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14641  0126F0  006F FF78  F03C    	movff	postinc2,_prec
 14642  0126F6  006F FF74  F03D    	movff	postdec2,_prec+1
 14643                           
 14644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 14645  0126FC  D060               	goto	u12690
 14646  0126FE                     l13314:
 14647                           
 14648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 14649                           ;stkvar	_fmt @ sp[(-32)+-4]
 14650  0126FE  0EDC               	movlw	-36
 14651  012700  006F FF8F FFD9     	movff	plusw1,fsr2l
 14652  012706  0EDD               	movlw	-35
 14653  012708  006F FF8F FFDA     	movff	plusw1,fsr2h
 14654  01270E  006F FF78  F00B    	movff	postinc2,btemp+10
 14655  012714  006F FF74  F00C    	movff	postdec2,btemp+11
 14656  01271A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14657  012720  0060  F033  FFE6   	movff	btemp+11,postinc1
 14658  012726  ECDA  F0BE         	call	_atoi	;wreg free
 14659  01272A  0060  F004  F03C   	movff	btemp,_prec
 14660  012730  0060  F008  F03D   	movff	btemp+1,_prec+1
 14661                           
 14662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 14663  012736  D00B               	goto	l13318
 14664  012738                     l13316:
 14665                           
 14666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 14667                           ;stkvar	_fmt @ sp[(-32)+-4]
 14668  012738  0EDC               	movlw	-36
 14669  01273A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14670  012740  0EDD               	movlw	-35
 14671  012742  006F FF8F FFDA     	movff	plusw1,fsr2h
 14672  012748  2ADE               	incf	postinc2,f,c
 14673  01274A  0E00               	movlw	0
 14674  01274C  22DD               	addwfc	postdec2,f,c
 14675  01274E                     l13318:
 14676  01274E  0ED0               	movlw	208
 14677  012750  6E0B               	movwf	(btemp+10)^0,c
 14678  012752  0EFF               	movlw	255
 14679  012754  6E0C               	movwf	(btemp+11)^0,c
 14680                           
 14681                           ;stkvar	_fmt @ sp[(-32)+-4]
 14682  012756  0EDC               	movlw	-36
 14683  012758  006F FF8F FFD9     	movff	plusw1,fsr2l
 14684  01275E  0EDD               	movlw	-35
 14685  012760  006F FF8F FFDA     	movff	plusw1,fsr2h
 14686  012766  006F FF7B FFF6     	movff	postinc2,tblptrl
 14687  01276C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14688  012772                     	if	0	;tblptru may be non-zero
 14689  012772                     	endif
 14690  012772                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14691  012772  0E00               	movlw	low (__mediumconst shr (0+16))
 14692  012774  6EF8               	movwf	tblptru,c
 14693  012776                     	endif
 14694  012776  0008               	tblrd		*
 14695  012778  50F5               	movf	tablat,w,c
 14696  01277A  6E09               	movwf	(btemp+8)^0,c
 14697  01277C  6A0A               	clrf	(btemp+9)^0,c
 14698  01277E  500B               	movf	(btemp+10)^0,w,c
 14699  012780  2609               	addwf	(btemp+8)^0,f,c
 14700  012782  500C               	movf	(btemp+11)^0,w,c
 14701  012784  220A               	addwfc	(btemp+9)^0,f,c
 14702  012786  500A               	movf	(btemp+9)^0,w,c
 14703  012788  E106               	bnz	u12670
 14704  01278A  0E0A               	movlw	10
 14705  01278C  5C09               	subwf	(btemp+8)^0,w,c
 14706  01278E  B0D8               	btfsc	status,0,c
 14707  012790  D002               	goto	u12670
 14708  012792  0E01               	movlw	1
 14709  012794  D001               	goto	u12680
 14710  012796                     u12670:
 14711  012796  0E00               	movlw	0
 14712  012798                     u12680:
 14713  012798  6E0B               	movwf	(btemp+10)^0,c
 14714  01279A  6A0C               	clrf	(btemp+11)^0,c
 14715                           
 14716                           ;stkvar	_vfpfcnvrt$6038 @ sp[(-32)+0]
 14717  01279C  0EE0               	movlw	-32
 14718  01279E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14719  0127A4  0EE1               	movlw	-31
 14720  0127A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14721                           
 14722                           ;stkvar	_vfpfcnvrt$6038 @ sp[(-32)+0]
 14723  0127AC  0EE0               	movlw	-32
 14724  0127AE  006F FF8C  F001    	movff	plusw1,btemp
 14725  0127B4  0EE1               	movlw	-31
 14726  0127B6  50E3               	movf	plusw1,w,c
 14727  0127B8  1001               	iorwf	btemp^0,w,c
 14728  0127BA  A4D8               	btfss	status,2,c
 14729  0127BC  D7BD               	goto	l13316
 14730  0127BE                     u12690:
 14731                           
 14732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 14733                           ;stkvar	_fmt @ sp[(-32)+-4]
 14734  0127BE  0EDC               	movlw	-36
 14735  0127C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14736  0127C6  0EDD               	movlw	-35
 14737  0127C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14738  0127CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 14739  0127D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 14740  0127DA                     	if	0	;tblptru may be non-zero
 14741  0127DA                     	endif
 14742  0127DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14743  0127DA  0E00               	movlw	low (__mediumconst shr (0+16))
 14744  0127DC  6EF8               	movwf	tblptru,c
 14745  0127DE                     	endif
 14746  0127DE  0008               	tblrd		*
 14747  0127E0  50F5               	movf	tablat,w,c
 14748  0127E2  6EE6               	movwf	postinc1,c
 14749  0127E4  0E00               	movlw	0
 14750  0127E6  6EE6               	movwf	postinc1,c
 14751  0127E8  ECAB  F0DB         	call	_tolower	;wreg free
 14752                           
 14753                           ;stkvar	_ct @ sp[(-32)+26]
 14754  0127EC  0EFA               	movlw	-6
 14755  0127EE  0060  F007  FFE3   	movff	btemp,plusw1
 14756                           
 14757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 14758                           ;stkvar	_ct @ sp[(-32)+26]
 14759  0127F4  0EFA               	movlw	-6
 14760  0127F6  50E3               	movf	plusw1,w,c
 14761  0127F8  B4D8               	btfsc	status,2,c
 14762  0127FA  D05B               	goto	l13334
 14763                           
 14764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 14765                           ;stkvar	_ct @ sp[(-32)+26]
 14766  0127FC  0EFB               	movlw	251
 14767  0127FE  24E1               	addwf	fsr1l,w,c
 14768  012800  6ED9               	movwf	fsr2l,c
 14769  012802  0EFF               	movlw	255
 14770  012804  20E2               	addwfc	fsr1h,w,c
 14771  012806  6EDA               	movwf	fsr2h,c
 14772                           
 14773                           ;stkvar	_fmt @ sp[(-32)+-4]
 14774  012808  0EDC               	movlw	-36
 14775  01280A  006F FF8F FFE9     	movff	plusw1,fsr0l
 14776  012810  0EDD               	movlw	-35
 14777  012812  006F FF8F FFEA     	movff	plusw1,fsr0h
 14778  012818  006F FFB8  F00B    	movff	postinc0,btemp+10
 14779  01281E  006F FFB4  F00C    	movff	postdec0,btemp+11
 14780  012824  0E01               	movlw	1
 14781  012826  260B               	addwf	(btemp+10)^0,f,c
 14782  012828  0E00               	movlw	0
 14783  01282A  220C               	addwfc	(btemp+11)^0,f,c
 14784  01282C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14785  012832  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14786  012838                     	if	0	;tblptru may be non-zero
 14787  012838                     	endif
 14788  012838                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14789  012838  0E00               	movlw	low (__mediumconst shr (0+16))
 14790  01283A  6EF8               	movwf	tblptru,c
 14791  01283C                     	endif
 14792  01283C  0008               	tblrd		*
 14793  01283E  50F5               	movf	tablat,w,c
 14794  012840  6EE6               	movwf	postinc1,c
 14795  012842  0E00               	movlw	0
 14796  012844  6EE6               	movwf	postinc1,c
 14797  012846  ECAB  F0DB         	call	_tolower	;wreg free
 14798  01284A  5001               	movf	btemp^0,w,c
 14799  01284C  6EDF               	movwf	indf2,c
 14800                           
 14801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 14802                           ;stkvar	_ct @ sp[(-32)+26]
 14803  01284E  0EFB               	movlw	251
 14804  012850  24E1               	addwf	fsr1l,w,c
 14805  012852  6ED9               	movwf	fsr2l,c
 14806  012854  0EFF               	movlw	255
 14807  012856  20E2               	addwfc	fsr1h,w,c
 14808  012858  6EDA               	movwf	fsr2h,c
 14809  01285A  50DF               	movf	indf2,w,c
 14810  01285C  B4D8               	btfsc	status,2,c
 14811  01285E  D029               	goto	l13334
 14812                           
 14813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 14814                           ;stkvar	_ct @ sp[(-32)+26]
 14815  012860  0EFC               	movlw	252
 14816  012862  24E1               	addwf	fsr1l,w,c
 14817  012864  6ED9               	movwf	fsr2l,c
 14818  012866  0EFF               	movlw	255
 14819  012868  20E2               	addwfc	fsr1h,w,c
 14820  01286A  6EDA               	movwf	fsr2h,c
 14821                           
 14822                           ;stkvar	_fmt @ sp[(-32)+-4]
 14823  01286C  0EDC               	movlw	-36
 14824  01286E  006F FF8F FFE9     	movff	plusw1,fsr0l
 14825  012874  0EDD               	movlw	-35
 14826  012876  006F FF8F FFEA     	movff	plusw1,fsr0h
 14827  01287C  006F FFB8  F00B    	movff	postinc0,btemp+10
 14828  012882  006F FFB4  F00C    	movff	postdec0,btemp+11
 14829  012888  0E02               	movlw	2
 14830  01288A  260B               	addwf	(btemp+10)^0,f,c
 14831  01288C  0E00               	movlw	0
 14832  01288E  220C               	addwfc	(btemp+11)^0,f,c
 14833  012890  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14834  012896  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14835  01289C                     	if	0	;tblptru may be non-zero
 14836  01289C                     	endif
 14837  01289C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14838  01289C  0E00               	movlw	low (__mediumconst shr (0+16))
 14839  01289E  6EF8               	movwf	tblptru,c
 14840  0128A0                     	endif
 14841  0128A0  0008               	tblrd		*
 14842  0128A2  50F5               	movf	tablat,w,c
 14843  0128A4  6EE6               	movwf	postinc1,c
 14844  0128A6  0E00               	movlw	0
 14845  0128A8  6EE6               	movwf	postinc1,c
 14846  0128AA  ECAB  F0DB         	call	_tolower	;wreg free
 14847  0128AE  5001               	movf	btemp^0,w,c
 14848  0128B0  6EDF               	movwf	indf2,c
 14849  0128B2                     l13334:
 14850                           
 14851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 14852                           ;stkvar	_fmt @ sp[(-32)+-4]
 14853  0128B2  0EDC               	movlw	-36
 14854  0128B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14855  0128BA  0EDD               	movlw	-35
 14856  0128BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14857  0128C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14858  0128C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14859  0128CE                     	if	0	;tblptru may be non-zero
 14860  0128CE                     	endif
 14861  0128CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14862  0128CE  0E00               	movlw	low (__mediumconst shr (0+16))
 14863  0128D0  6EF8               	movwf	tblptru,c
 14864  0128D2                     	endif
 14865  0128D2  0008               	tblrd		*
 14866  0128D4  50F5               	movf	tablat,w,c
 14867  0128D6  0A63               	xorlw	99
 14868  0128D8  A4D8               	btfss	status,2,c
 14869  0128DA  D037               	goto	l13344
 14870                           
 14871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 14872                           ;stkvar	_fmt @ sp[(-32)+-4]
 14873  0128DC  0EDC               	movlw	-36
 14874  0128DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14875  0128E4  0EDD               	movlw	-35
 14876  0128E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14877  0128EC  2ADE               	incf	postinc2,f,c
 14878  0128EE  0E00               	movlw	0
 14879  0128F0  22DD               	addwfc	postdec2,f,c
 14880                           
 14881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 14882                           ;stkvar	_ap @ sp[(-32)+-6]
 14883  0128F2  0EDA               	movlw	-38
 14884  0128F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14885  0128FA  0EDB               	movlw	-37
 14886  0128FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14887  012902  0E02               	movlw	2
 14888  012904  5EDE               	subwf	postinc2,f,c
 14889  012906  0E00               	movlw	0
 14890  012908  5ADD               	subwfb	postdec2,f,c
 14891  01290A  006F FF78  F00B    	movff	postinc2,btemp+10
 14892  012910  006F FF74  F00C    	movff	postdec2,btemp+11
 14893  012916  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14894  01291C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14895  012922  50DF               	movf	indf2,w,c
 14896  012924  6E0C               	movwf	(btemp+11)^0,c
 14897                           
 14898                           ;stkvar	_c @ sp[(-32)+31]
 14899  012926  0EFF               	movlw	-1
 14900  012928  0060  F033  FFE3   	movff	btemp+11,plusw1
 14901                           
 14902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 14903                           ;stkvar	_c @ sp[(-32)+31]
 14904  01292E  0EFF               	movlw	-1
 14905  012930  50E3               	movf	plusw1,w,c
 14906  012932  6EE6               	movwf	postinc1,c
 14907                           
 14908                           ;stkvar	_fp @ sp[(-33)+-2]
 14909  012934  0EDD               	movlw	-35
 14910  012936  006F FF8F FFE6     	movff	plusw1,postinc1
 14911  01293C  006F FF8F FFE6     	movff	plusw1,postinc1
 14912  012942  EC25  F0DB         	call	_ctoa	;wreg free
 14913  012946  EF1E  F09A         	goto	l2514
 14914  01294A                     l13344:
 14915                           
 14916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 14917                           ;stkvar	_fmt @ sp[(-32)+-4]
 14918  01294A  0EDC               	movlw	-36
 14919  01294C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14920  012952  0EDD               	movlw	-35
 14921  012954  006F FF8F FFDA     	movff	plusw1,fsr2h
 14922  01295A  006F FF7B FFF6     	movff	postinc2,tblptrl
 14923  012960  006F FF77 FFF7     	movff	postdec2,tblptrh
 14924  012966                     	if	0	;tblptru may be non-zero
 14925  012966                     	endif
 14926  012966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14927  012966  0E00               	movlw	low (__mediumconst shr (0+16))
 14928  012968  6EF8               	movwf	tblptru,c
 14929  01296A                     	endif
 14930  01296A  0008               	tblrd		*
 14931  01296C  50F5               	movf	tablat,w,c
 14932  01296E  0A64               	xorlw	100
 14933  012970  B4D8               	btfsc	status,2,c
 14934  012972  D015               	goto	u12740
 14935                           
 14936                           ;stkvar	_fmt @ sp[(-32)+-4]
 14937  012974  0EDC               	movlw	-36
 14938  012976  006F FF8F FFD9     	movff	plusw1,fsr2l
 14939  01297C  0EDD               	movlw	-35
 14940  01297E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14941  012984  006F FF7B FFF6     	movff	postinc2,tblptrl
 14942  01298A  006F FF77 FFF7     	movff	postdec2,tblptrh
 14943  012990                     	if	0	;tblptru may be non-zero
 14944  012990                     	endif
 14945  012990                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14946  012990  0E00               	movlw	low (__mediumconst shr (0+16))
 14947  012992  6EF8               	movwf	tblptru,c
 14948  012994                     	endif
 14949  012994  0008               	tblrd		*
 14950  012996  50F5               	movf	tablat,w,c
 14951  012998  0A69               	xorlw	105
 14952  01299A  A4D8               	btfss	status,2,c
 14953  01299C  D076               	goto	l13356
 14954  01299E                     u12740:
 14955                           
 14956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 14957                           ;stkvar	_fmt @ sp[(-32)+-4]
 14958  01299E  0EDC               	movlw	-36
 14959  0129A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14960  0129A6  0EDD               	movlw	-35
 14961  0129A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14962  0129AE  2ADE               	incf	postinc2,f,c
 14963  0129B0  0E00               	movlw	0
 14964  0129B2  22DD               	addwfc	postdec2,f,c
 14965                           
 14966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 14967                           ;stkvar	_ap @ sp[(-32)+-6]
 14968  0129B4  0EDA               	movlw	-38
 14969  0129B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 14970  0129BC  0EDB               	movlw	-37
 14971  0129BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 14972  0129C4  0E02               	movlw	2
 14973  0129C6  5EDE               	subwf	postinc2,f,c
 14974  0129C8  0E00               	movlw	0
 14975  0129CA  5ADD               	subwfb	postdec2,f,c
 14976  0129CC  006F FF78  F00B    	movff	postinc2,btemp+10
 14977  0129D2  006F FF74  F00C    	movff	postdec2,btemp+11
 14978  0129D8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14979  0129DE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14980  0129E4  006F FF78  F00B    	movff	postinc2,btemp+10
 14981  0129EA  006F FF74  F00C    	movff	postdec2,btemp+11
 14982                           
 14983                           ;stkvar	_ll @ sp[(-32)+14]
 14984  0129F0  0EEE               	movlw	-18
 14985  0129F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14986  0129F8  0EEF               	movlw	-17
 14987  0129FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14988  012A00  6A01               	clrf	btemp^0,c
 14989  012A02  BEE3               	btfsc	plusw1,7,c
 14990  012A04  6801               	setf	btemp^0,c
 14991  012A06  0EF0               	movlw	-16
 14992  012A08  0060  F007  FFE3   	movff	btemp,plusw1
 14993  012A0E  0EF1               	movlw	-15
 14994  012A10  0060  F007  FFE3   	movff	btemp,plusw1
 14995  012A16  0EF2               	movlw	-14
 14996  012A18  0060  F007  FFE3   	movff	btemp,plusw1
 14997  012A1E  0EF3               	movlw	-13
 14998  012A20  0060  F007  FFE3   	movff	btemp,plusw1
 14999  012A26  0EF4               	movlw	-12
 15000  012A28  0060  F007  FFE3   	movff	btemp,plusw1
 15001  012A2E  0EF5               	movlw	-11
 15002  012A30  0060  F007  FFE3   	movff	btemp,plusw1
 15003  012A36                     l13352:
 15004                           
 15005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 15006                           ;stkvar	_ll @ sp[(-32)+14]
 15007  012A36  50E1               	movf	fsr1l,w,c
 15008  012A38  0FEE               	addlw	-18
 15009  012A3A  6ED9               	movwf	fsr2l,c
 15010  012A3C  50E2               	movf	fsr1h,w,c
 15011  012A3E  6EDA               	movwf	fsr2h,c
 15012  012A40  0EFF               	movlw	255
 15013  012A42  22DA               	addwfc	fsr2h,f,c
 15014  012A44  006F FF7B FFE6     	movff	postinc2,postinc1
 15015  012A4A  006F FF7B FFE6     	movff	postinc2,postinc1
 15016  012A50  006F FF7B FFE6     	movff	postinc2,postinc1
 15017  012A56  006F FF7B FFE6     	movff	postinc2,postinc1
 15018  012A5C  006F FF7B FFE6     	movff	postinc2,postinc1
 15019  012A62  006F FF7B FFE6     	movff	postinc2,postinc1
 15020  012A68  006F FF7B FFE6     	movff	postinc2,postinc1
 15021  012A6E  006F FF7B FFE6     	movff	postinc2,postinc1
 15022                           
 15023                           ;stkvar	_fp @ sp[(-40)+-2]
 15024  012A74  0ED6               	movlw	-42
 15025  012A76  006F FF8F FFE6     	movff	plusw1,postinc1
 15026  012A7C  006F FF8F FFE6     	movff	plusw1,postinc1
 15027  012A82  EC68  F0AC         	call	_dtoa	;wreg free
 15028  012A86  EF1E  F09A         	goto	l2514
 15029  012A8A                     l13356:
 15030                           
 15031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 15032  012A8A  0E02               	movlw	2
 15033  012A8C  6EE6               	movwf	postinc1,c
 15034  012A8E  0E00               	movlw	0
 15035  012A90  6EE6               	movwf	postinc1,c
 15036  012A92  0EE9               	movlw	low STR_89
 15037  012A94  6EE6               	movwf	postinc1,c
 15038  012A96  0EFF               	movlw	high STR_89
 15039  012A98  6EE6               	movwf	postinc1,c
 15040                           
 15041                           ;stkvar	_fmt @ sp[(-36)+-4]
 15042  012A9A  0ED8               	movlw	-40
 15043  012A9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15044  012AA2  0ED9               	movlw	-39
 15045  012AA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15046  012AAA  006F FF78  F00B    	movff	postinc2,btemp+10
 15047  012AB0  006F FF74  F00C    	movff	postdec2,btemp+11
 15048  012AB6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15049  012ABC  0060  F033  FFE6   	movff	btemp+11,postinc1
 15050  012AC2  EC57  F0C2         	call	_strncmp	;wreg free
 15051  012AC6  5001               	movf	btemp^0,w,c
 15052  012AC8  1002               	iorwf	(btemp+1)^0,w,c
 15053  012ACA  B4D8               	btfsc	status,2,c
 15054  012ACC  D022               	goto	u12760
 15055  012ACE  0E02               	movlw	2
 15056  012AD0  6EE6               	movwf	postinc1,c
 15057  012AD2  0E00               	movlw	0
 15058  012AD4  6EE6               	movwf	postinc1,c
 15059  012AD6  0EEF               	movlw	low STR_93
 15060  012AD8  6EE6               	movwf	postinc1,c
 15061  012ADA  0EFF               	movlw	high STR_93
 15062  012ADC  6EE6               	movwf	postinc1,c
 15063                           
 15064                           ;stkvar	_fmt @ sp[(-36)+-4]
 15065  012ADE  0ED8               	movlw	-40
 15066  012AE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15067  012AE6  0ED9               	movlw	-39
 15068  012AE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15069  012AEE  006F FF78  F00B    	movff	postinc2,btemp+10
 15070  012AF4  006F FF74  F00C    	movff	postdec2,btemp+11
 15071  012AFA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15072  012B00  0060  F033  FFE6   	movff	btemp+11,postinc1
 15073  012B06  EC57  F0C2         	call	_strncmp	;wreg free
 15074  012B0A  5001               	movf	btemp^0,w,c
 15075  012B0C  1002               	iorwf	(btemp+1)^0,w,c
 15076  012B0E  A4D8               	btfss	status,2,c
 15077  012B10  D069               	goto	l13368
 15078  012B12                     u12760:
 15079                           
 15080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 15081                           ;stkvar	_fmt @ sp[(-32)+-4]
 15082  012B12  0EDC               	movlw	-36
 15083  012B14  006F FF8F FFD9     	movff	plusw1,fsr2l
 15084  012B1A  0EDD               	movlw	-35
 15085  012B1C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15086  012B22  0E02               	movlw	2
 15087  012B24  26DE               	addwf	postinc2,f,c
 15088  012B26  0E00               	movlw	0
 15089  012B28  22DD               	addwfc	postdec2,f,c
 15090                           
 15091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 15092                           ;stkvar	_ap @ sp[(-32)+-6]
 15093  012B2A  0EDA               	movlw	-38
 15094  012B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15095  012B32  0EDB               	movlw	-37
 15096  012B34  006F FF8F FFDA     	movff	plusw1,fsr2h
 15097  012B3A  0E04               	movlw	4
 15098  012B3C  5EDE               	subwf	postinc2,f,c
 15099  012B3E  0E00               	movlw	0
 15100  012B40  5ADD               	subwfb	postdec2,f,c
 15101  012B42  006F FF78  F00B    	movff	postinc2,btemp+10
 15102  012B48  006F FF74  F00C    	movff	postdec2,btemp+11
 15103  012B4E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15104  012B54  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15105  012B5A  006F FF78  F009    	movff	postinc2,btemp+8
 15106  012B60  006F FF78  F00A    	movff	postinc2,btemp+9
 15107  012B66  006F FF78  F00B    	movff	postinc2,btemp+10
 15108  012B6C  006F FF78  F00C    	movff	postinc2,btemp+11
 15109  012B72  0060  F024  F011   	movff	btemp+8,btemp+16
 15110  012B78  0060  F028  F012   	movff	btemp+9,btemp+17
 15111  012B7E  0060  F02C  F013   	movff	btemp+10,btemp+18
 15112  012B84  0060  F030  F014   	movff	btemp+11,btemp+19
 15113  012B8A  6A15               	clrf	(btemp+20)^0,c
 15114  012B8C  BE14               	btfsc	(btemp+19)^0,7,c
 15115  012B8E  6815               	setf	(btemp+20)^0,c
 15116  012B90  0060  F054  F016   	movff	btemp+20,btemp+21
 15117  012B96  0060  F054  F017   	movff	btemp+20,btemp+22
 15118  012B9C  0060  F054  F018   	movff	btemp+20,btemp+23
 15119                           
 15120                           ;stkvar	_ll @ sp[(-32)+14]
 15121  012BA2  0EEE               	movlw	-18
 15122  012BA4  0060  F047  FFE3   	movff	btemp+16,plusw1
 15123  012BAA  0EEF               	movlw	-17
 15124  012BAC  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15125  012BB2  0EF0               	movlw	-16
 15126  012BB4  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15127  012BBA  0EF1               	movlw	-15
 15128  012BBC  0060  F053  FFE3   	movff	btemp+19,plusw1
 15129  012BC2  0EF2               	movlw	-14
 15130  012BC4  0060  F057  FFE3   	movff	btemp+20,plusw1
 15131  012BCA  0EF3               	movlw	-13
 15132  012BCC  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15133  012BD2  0EF4               	movlw	-12
 15134  012BD4  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15135  012BDA  0EF5               	movlw	-11
 15136  012BDC  0060  F063  FFE3   	movff	btemp+23,plusw1
 15137  012BE2  D729               	goto	l13352
 15138  012BE4                     l13368:
 15139                           
 15140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 15141                           ;stkvar	_ct @ sp[(-32)+26]
 15142  012BE4  0EFA               	movlw	-6
 15143  012BE6  006F FF8C  F001    	movff	plusw1,btemp
 15144  012BEC  0E66               	movlw	102
 15145  012BEE  1801               	xorwf	btemp^0,w,c
 15146  012BF0  A4D8               	btfss	status,2,c
 15147  012BF2  D06E               	goto	l13380
 15148                           
 15149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 15150                           ;stkvar	_fmt @ sp[(-32)+-4]
 15151  012BF4  0EDC               	movlw	-36
 15152  012BF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15153  012BFC  0EDD               	movlw	-35
 15154  012BFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15155  012C04  006F FF7B FFF6     	movff	postinc2,tblptrl
 15156  012C0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15157  012C10                     	if	0	;tblptru may be non-zero
 15158  012C10                     	endif
 15159  012C10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15160  012C10  0E00               	movlw	low (__mediumconst shr (0+16))
 15161  012C12  6EF8               	movwf	tblptru,c
 15162  012C14                     	endif
 15163                           
 15164                           ;stkvar	_c @ sp[(-32)+31]
 15165  012C14  0008               	tblrd		*
 15166  012C16  0EFF               	movlw	-1
 15167  012C18  006F FFD7 FFE3     	movff	tablat,plusw1
 15168                           
 15169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 15170                           ;stkvar	_fmt @ sp[(-32)+-4]
 15171  012C1E  0EDC               	movlw	-36
 15172  012C20  006F FF8F FFD9     	movff	plusw1,fsr2l
 15173  012C26  0EDD               	movlw	-35
 15174  012C28  006F FF8F FFDA     	movff	plusw1,fsr2h
 15175  012C2E  2ADE               	incf	postinc2,f,c
 15176  012C30  0E00               	movlw	0
 15177  012C32  22DD               	addwfc	postdec2,f,c
 15178                           
 15179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 15180                           ;stkvar	_ap @ sp[(-32)+-6]
 15181  012C34  0EDA               	movlw	-38
 15182  012C36  006F FF8F FFD9     	movff	plusw1,fsr2l
 15183  012C3C  0EDB               	movlw	-37
 15184  012C3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15185  012C44  0E04               	movlw	4
 15186  012C46  5EDE               	subwf	postinc2,f,c
 15187  012C48  0E00               	movlw	0
 15188  012C4A  5ADD               	subwfb	postdec2,f,c
 15189  012C4C  006F FF78  F00B    	movff	postinc2,btemp+10
 15190  012C52  006F FF74  F00C    	movff	postdec2,btemp+11
 15191  012C58  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15192  012C5E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15193  012C64  006F FF78  F009    	movff	postinc2,btemp+8
 15194  012C6A  006F FF78  F00A    	movff	postinc2,btemp+9
 15195  012C70  006F FF78  F00B    	movff	postinc2,btemp+10
 15196  012C76  006F FF78  F00C    	movff	postinc2,btemp+11
 15197                           
 15198                           ;stkvar	_f @ sp[(-32)+22]
 15199  012C7C  0EF6               	movlw	-10
 15200  012C7E  0060  F027  FFE3   	movff	btemp+8,plusw1
 15201  012C84  0EF7               	movlw	-9
 15202  012C86  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15203  012C8C  0EF8               	movlw	-8
 15204  012C8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15205  012C94  0EF9               	movlw	-7
 15206  012C96  0060  F033  FFE3   	movff	btemp+11,plusw1
 15207  012C9C                     l13376:
 15208                           
 15209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 15210                           ;stkvar	_c @ sp[(-32)+31]
 15211  012C9C  0EFF               	movlw	-1
 15212  012C9E  50E3               	movf	plusw1,w,c
 15213  012CA0  6EE6               	movwf	postinc1,c
 15214                           
 15215                           ;stkvar	_f @ sp[(-33)+22]
 15216  012CA2  0EF5               	movlw	-11
 15217  012CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 15218  012CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 15219  012CB0  006F FF8F FFE6     	movff	plusw1,postinc1
 15220  012CB6  006F FF8F FFE6     	movff	plusw1,postinc1
 15221                           
 15222                           ;stkvar	_fp @ sp[(-37)+-2]
 15223  012CBC  0ED9               	movlw	-39
 15224  012CBE  006F FF8F FFE6     	movff	plusw1,postinc1
 15225  012CC4  006F FF8F FFE6     	movff	plusw1,postinc1
 15226  012CCA  EC2B  F089         	call	_efgtoa	;wreg free
 15227  012CCE  D3B6               	goto	l2514
 15228  012CD0                     l13380:
 15229                           
 15230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 15231  012CD0  0E02               	movlw	2
 15232  012CD2  6EE6               	movwf	postinc1,c
 15233  012CD4  0E00               	movlw	0
 15234  012CD6  6EE6               	movwf	postinc1,c
 15235  012CD8  0EEC               	movlw	low STR_98
 15236  012CDA  6EE6               	movwf	postinc1,c
 15237  012CDC  0EFF               	movlw	high STR_98
 15238  012CDE  6EE6               	movwf	postinc1,c
 15239                           
 15240                           ;stkvar	_ct @ sp[(-36)+26]
 15241  012CE0  0EF6               	movlw	246
 15242  012CE2  24E1               	addwf	fsr1l,w,c
 15243  012CE4  6E01               	movwf	btemp^0,c
 15244  012CE6  0EFF               	movlw	255
 15245  012CE8  20E2               	addwfc	fsr1h,w,c
 15246  012CEA  6E02               	movwf	(btemp+1)^0,c
 15247  012CEC  0060  F007  FFE6   	movff	btemp,postinc1
 15248  012CF2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15249  012CF8  EC57  F0C2         	call	_strncmp	;wreg free
 15250  012CFC  5001               	movf	btemp^0,w,c
 15251  012CFE  1002               	iorwf	(btemp+1)^0,w,c
 15252  012D00  A4D8               	btfss	status,2,c
 15253  012D02  D096               	goto	l13400
 15254                           
 15255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 15256                           ;stkvar	_fmt @ sp[(-32)+-4]
 15257  012D04  0EDC               	movlw	-36
 15258  012D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 15259  012D0C  0EDD               	movlw	-35
 15260  012D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15261  012D14  006F FF78  F00B    	movff	postinc2,btemp+10
 15262  012D1A  006F FF74  F00C    	movff	postdec2,btemp+11
 15263  012D20  0E01               	movlw	1
 15264  012D22  260B               	addwf	(btemp+10)^0,f,c
 15265  012D24  0E00               	movlw	0
 15266  012D26  220C               	addwfc	(btemp+11)^0,f,c
 15267  012D28  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15268  012D2E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15269  012D34                     	if	0	;tblptru may be non-zero
 15270  012D34                     	endif
 15271  012D34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15272  012D34  0E00               	movlw	low (__mediumconst shr (0+16))
 15273  012D36  6EF8               	movwf	tblptru,c
 15274  012D38                     	endif
 15275                           
 15276                           ;stkvar	_c @ sp[(-32)+31]
 15277  012D38  0008               	tblrd		*
 15278  012D3A  0EFF               	movlw	-1
 15279  012D3C  006F FFD7 FFE3     	movff	tablat,plusw1
 15280  012D42  0EBF               	movlw	191
 15281  012D44  6E0B               	movwf	(btemp+10)^0,c
 15282  012D46  0EFF               	movlw	255
 15283  012D48  6E0C               	movwf	(btemp+11)^0,c
 15284                           
 15285                           ;stkvar	_fmt @ sp[(-32)+-4]
 15286  012D4A  0EDC               	movlw	-36
 15287  012D4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15288  012D52  0EDD               	movlw	-35
 15289  012D54  006F FF8F FFDA     	movff	plusw1,fsr2h
 15290  012D5A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15291  012D60  006F FF77 FFF7     	movff	postdec2,tblptrh
 15292  012D66                     	if	0	;tblptru may be non-zero
 15293  012D66                     	endif
 15294  012D66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15295  012D66  0E00               	movlw	low (__mediumconst shr (0+16))
 15296  012D68  6EF8               	movwf	tblptru,c
 15297  012D6A                     	endif
 15298  012D6A  0008               	tblrd		*
 15299  012D6C  50F5               	movf	tablat,w,c
 15300  012D6E  6E09               	movwf	(btemp+8)^0,c
 15301  012D70  6A0A               	clrf	(btemp+9)^0,c
 15302  012D72  500B               	movf	(btemp+10)^0,w,c
 15303  012D74  2609               	addwf	(btemp+8)^0,f,c
 15304  012D76  500C               	movf	(btemp+11)^0,w,c
 15305  012D78  220A               	addwfc	(btemp+9)^0,f,c
 15306  012D7A  500A               	movf	(btemp+9)^0,w,c
 15307  012D7C  E106               	bnz	u12790
 15308  012D7E  0E1A               	movlw	26
 15309  012D80  5C09               	subwf	(btemp+8)^0,w,c
 15310  012D82  B0D8               	btfsc	status,0,c
 15311  012D84  D002               	goto	u12790
 15312  012D86  0E01               	movlw	1
 15313  012D88  D001               	goto	u12800
 15314  012D8A                     u12790:
 15315  012D8A  0E00               	movlw	0
 15316  012D8C                     u12800:
 15317  012D8C  6E0B               	movwf	(btemp+10)^0,c
 15318  012D8E  6A0C               	clrf	(btemp+11)^0,c
 15319                           
 15320                           ;stkvar	_vfpfcnvrt$6049 @ sp[(-32)+2]
 15321  012D90  0EE2               	movlw	-30
 15322  012D92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15323  012D98  0EE3               	movlw	-29
 15324  012D9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15325                           
 15326                           ;stkvar	_vfpfcnvrt$6049 @ sp[(-32)+2]
 15327  012DA0  0EE2               	movlw	-30
 15328  012DA2  006F FF8C  F001    	movff	plusw1,btemp
 15329  012DA8  0EE3               	movlw	-29
 15330  012DAA  50E3               	movf	plusw1,w,c
 15331  012DAC  1001               	iorwf	btemp^0,w,c
 15332                           
 15333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 15334                           ;stkvar	_ap @ sp[(-32)+-6]
 15335                           
 15336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 15337                           
 15338                           ;stkvar	_f @ sp[(-32)+22]
 15339                           
 15340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 15341                           ;stkvar	_ap @ sp[(-32)+-6]
 15342  012DAE  0EDA               	movlw	-38
 15343  012DB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15344  012DB6  0EDB               	movlw	-37
 15345  012DB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15346  012DBE  0E04               	movlw	4
 15347  012DC0  5EDE               	subwf	postinc2,f,c
 15348  012DC2  0E00               	movlw	0
 15349  012DC4  5ADD               	subwfb	postdec2,f,c
 15350  012DC6  006F FF78  F00B    	movff	postinc2,btemp+10
 15351  012DCC  006F FF74  F00C    	movff	postdec2,btemp+11
 15352  012DD2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15353  012DD8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15354  012DDE  006F FF78  F009    	movff	postinc2,btemp+8
 15355  012DE4  006F FF78  F00A    	movff	postinc2,btemp+9
 15356  012DEA  006F FF78  F00B    	movff	postinc2,btemp+10
 15357  012DF0  006F FF78  F00C    	movff	postinc2,btemp+11
 15358                           
 15359                           ;stkvar	_f @ sp[(-32)+22]
 15360  012DF6  0EF6               	movlw	-10
 15361  012DF8  0060  F027  FFE3   	movff	btemp+8,plusw1
 15362  012DFE  0EF7               	movlw	-9
 15363  012E00  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15364  012E06  0EF8               	movlw	-8
 15365  012E08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15366  012E0E  0EF9               	movlw	-7
 15367  012E10  0060  F033  FFE3   	movff	btemp+11,plusw1
 15368                           
 15369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 15370                           ;stkvar	_fmt @ sp[(-32)+-4]
 15371  012E16  0EDC               	movlw	-36
 15372  012E18  006F FF8F FFD9     	movff	plusw1,fsr2l
 15373  012E1E  0EDD               	movlw	-35
 15374  012E20  006F FF8F FFDA     	movff	plusw1,fsr2h
 15375  012E26  0E02               	movlw	2
 15376  012E28  26DE               	addwf	postinc2,f,c
 15377  012E2A  0E00               	movlw	0
 15378  012E2C  22DD               	addwfc	postdec2,f,c
 15379  012E2E  D736               	goto	l13376
 15380  012E30                     l13400:
 15381                           
 15382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 15383                           ;stkvar	_fmt @ sp[(-32)+-4]
 15384  012E30  0EDC               	movlw	-36
 15385  012E32  006F FF8F FFD9     	movff	plusw1,fsr2l
 15386  012E38  0EDD               	movlw	-35
 15387  012E3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15388  012E40  006F FF7B FFF6     	movff	postinc2,tblptrl
 15389  012E46  006F FF77 FFF7     	movff	postdec2,tblptrh
 15390  012E4C                     	if	0	;tblptru may be non-zero
 15391  012E4C                     	endif
 15392  012E4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15393  012E4C  0E00               	movlw	low (__mediumconst shr (0+16))
 15394  012E4E  6EF8               	movwf	tblptru,c
 15395  012E50                     	endif
 15396  012E50  0008               	tblrd		*
 15397  012E52  50F5               	movf	tablat,w,c
 15398  012E54  0A73               	xorlw	115
 15399  012E56  A4D8               	btfss	status,2,c
 15400  012E58  D042               	goto	l13410
 15401                           
 15402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 15403                           ;stkvar	_fmt @ sp[(-32)+-4]
 15404  012E5A  0EDC               	movlw	-36
 15405  012E5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15406  012E62  0EDD               	movlw	-35
 15407  012E64  006F FF8F FFDA     	movff	plusw1,fsr2h
 15408  012E6A  2ADE               	incf	postinc2,f,c
 15409  012E6C  0E00               	movlw	0
 15410  012E6E  22DD               	addwfc	postdec2,f,c
 15411                           
 15412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 15413                           ;stkvar	_ap @ sp[(-32)+-6]
 15414  012E70  0EDA               	movlw	-38
 15415  012E72  006F FF8F FFD9     	movff	plusw1,fsr2l
 15416  012E78  0EDB               	movlw	-37
 15417  012E7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15418  012E80  0E02               	movlw	2
 15419  012E82  5EDE               	subwf	postinc2,f,c
 15420  012E84  0E00               	movlw	0
 15421  012E86  5ADD               	subwfb	postdec2,f,c
 15422  012E88  006F FF78  F00B    	movff	postinc2,btemp+10
 15423  012E8E  006F FF74  F00C    	movff	postdec2,btemp+11
 15424  012E94  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15425  012E9A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15426  012EA0  006F FF78  F00B    	movff	postinc2,btemp+10
 15427  012EA6  006F FF74  F00C    	movff	postdec2,btemp+11
 15428                           
 15429                           ;stkvar	_cp @ sp[(-32)+29]
 15430  012EAC  0EFE               	movlw	-2
 15431  012EAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15432  012EB4  0EFD               	movlw	-3
 15433  012EB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15434                           
 15435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 15436                           ;stkvar	_cp @ sp[(-32)+29]
 15437  012EBC  0EFD               	movlw	-3
 15438  012EBE  006F FF8F FFE6     	movff	plusw1,postinc1
 15439  012EC4  006F FF8F FFE6     	movff	plusw1,postinc1
 15440                           
 15441                           ;stkvar	_fp @ sp[(-34)+-2]
 15442  012ECA  0EDC               	movlw	-36
 15443  012ECC  006F FF8F FFE6     	movff	plusw1,postinc1
 15444  012ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 15445  012ED8  EC3B  F0BC         	call	_stoa	;wreg free
 15446  012EDC  D2AF               	goto	l2514
 15447  012EDE                     l13410:
 15448                           
 15449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 15450                           ;stkvar	_fmt @ sp[(-32)+-4]
 15451  012EDE  0EDC               	movlw	-36
 15452  012EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15453  012EE6  0EDD               	movlw	-35
 15454  012EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15455  012EEE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15456  012EF4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15457  012EFA                     	if	0	;tblptru may be non-zero
 15458  012EFA                     	endif
 15459  012EFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15460  012EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 15461  012EFC  6EF8               	movwf	tblptru,c
 15462  012EFE                     	endif
 15463  012EFE  0008               	tblrd		*
 15464  012F00  50F5               	movf	tablat,w,c
 15465  012F02  0A75               	xorlw	117
 15466  012F04  A4D8               	btfss	status,2,c
 15467  012F06  D07C               	goto	l13420
 15468                           
 15469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 15470                           ;stkvar	_fmt @ sp[(-32)+-4]
 15471  012F08  0EDC               	movlw	-36
 15472  012F0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15473  012F10  0EDD               	movlw	-35
 15474  012F12  006F FF8F FFDA     	movff	plusw1,fsr2h
 15475  012F18  2ADE               	incf	postinc2,f,c
 15476  012F1A  0E00               	movlw	0
 15477  012F1C  22DD               	addwfc	postdec2,f,c
 15478                           
 15479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 15480                           ;stkvar	_ap @ sp[(-32)+-6]
 15481  012F1E  0EDA               	movlw	-38
 15482  012F20  006F FF8F FFD9     	movff	plusw1,fsr2l
 15483  012F26  0EDB               	movlw	-37
 15484  012F28  006F FF8F FFDA     	movff	plusw1,fsr2h
 15485  012F2E  0E02               	movlw	2
 15486  012F30  5EDE               	subwf	postinc2,f,c
 15487  012F32  0E00               	movlw	0
 15488  012F34  5ADD               	subwfb	postdec2,f,c
 15489  012F36  006F FF78  F00B    	movff	postinc2,btemp+10
 15490  012F3C  006F FF74  F00C    	movff	postdec2,btemp+11
 15491  012F42  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15492  012F48  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15493  012F4E  006F FF78  F00B    	movff	postinc2,btemp+10
 15494  012F54  006F FF74  F00C    	movff	postdec2,btemp+11
 15495  012F5A  500B               	movf	(btemp+10)^0,w,c
 15496  012F5C  6E11               	movwf	(btemp+16)^0,c
 15497  012F5E  500C               	movf	(btemp+11)^0,w,c
 15498  012F60  6E12               	movwf	(btemp+17)^0,c
 15499  012F62  6A13               	clrf	(btemp+18)^0,c
 15500  012F64  6A14               	clrf	(btemp+19)^0,c
 15501  012F66  6A15               	clrf	(btemp+20)^0,c
 15502  012F68  6A16               	clrf	(btemp+21)^0,c
 15503  012F6A  6A17               	clrf	(btemp+22)^0,c
 15504  012F6C  6A18               	clrf	(btemp+23)^0,c
 15505                           
 15506                           ;stkvar	_llu @ sp[(-32)+6]
 15507  012F6E  0EE6               	movlw	-26
 15508  012F70  0060  F047  FFE3   	movff	btemp+16,plusw1
 15509  012F76  0EE7               	movlw	-25
 15510  012F78  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15511  012F7E  0EE8               	movlw	-24
 15512  012F80  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15513  012F86  0EE9               	movlw	-23
 15514  012F88  0060  F053  FFE3   	movff	btemp+19,plusw1
 15515  012F8E  0EEA               	movlw	-22
 15516  012F90  0060  F057  FFE3   	movff	btemp+20,plusw1
 15517  012F96  0EEB               	movlw	-21
 15518  012F98  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15519  012F9E  0EEC               	movlw	-20
 15520  012FA0  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15521  012FA6  0EED               	movlw	-19
 15522  012FA8  0060  F063  FFE3   	movff	btemp+23,plusw1
 15523                           
 15524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 15525                           ;stkvar	_llu @ sp[(-32)+6]
 15526  012FAE  50E1               	movf	fsr1l,w,c
 15527  012FB0  0FE6               	addlw	-26
 15528  012FB2  6ED9               	movwf	fsr2l,c
 15529  012FB4  50E2               	movf	fsr1h,w,c
 15530  012FB6  6EDA               	movwf	fsr2h,c
 15531  012FB8  0EFF               	movlw	255
 15532  012FBA  22DA               	addwfc	fsr2h,f,c
 15533  012FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 15534  012FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 15535  012FC8  006F FF7B FFE6     	movff	postinc2,postinc1
 15536  012FCE  006F FF7B FFE6     	movff	postinc2,postinc1
 15537  012FD4  006F FF7B FFE6     	movff	postinc2,postinc1
 15538  012FDA  006F FF7B FFE6     	movff	postinc2,postinc1
 15539  012FE0  006F FF7B FFE6     	movff	postinc2,postinc1
 15540  012FE6  006F FF7B FFE6     	movff	postinc2,postinc1
 15541                           
 15542                           ;stkvar	_fp @ sp[(-40)+-2]
 15543  012FEC  0ED6               	movlw	-42
 15544  012FEE  006F FF8F FFE6     	movff	plusw1,postinc1
 15545  012FF4  006F FF8F FFE6     	movff	plusw1,postinc1
 15546  012FFA  EC23  F0B6         	call	_utoa	;wreg free
 15547  012FFE  D21E               	goto	l2514
 15548  013000                     l13420:
 15549                           
 15550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 15551  013000  0E02               	movlw	2
 15552  013002  6EE6               	movwf	postinc1,c
 15553  013004  0E00               	movlw	0
 15554  013006  6EE6               	movwf	postinc1,c
 15555  013008  0EF2               	movlw	low STR_103
 15556  01300A  6EE6               	movwf	postinc1,c
 15557  01300C  0EFF               	movlw	high STR_103
 15558  01300E  6EE6               	movwf	postinc1,c
 15559                           
 15560                           ;stkvar	_fmt @ sp[(-36)+-4]
 15561  013010  0ED8               	movlw	-40
 15562  013012  006F FF8F FFD9     	movff	plusw1,fsr2l
 15563  013018  0ED9               	movlw	-39
 15564  01301A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15565  013020  006F FF78  F00B    	movff	postinc2,btemp+10
 15566  013026  006F FF74  F00C    	movff	postdec2,btemp+11
 15567  01302C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15568  013032  0060  F033  FFE6   	movff	btemp+11,postinc1
 15569  013038  EC57  F0C2         	call	_strncmp	;wreg free
 15570  01303C  5001               	movf	btemp^0,w,c
 15571  01303E  1002               	iorwf	(btemp+1)^0,w,c
 15572  013040  A4D8               	btfss	status,2,c
 15573  013042  D039               	goto	l13430
 15574                           
 15575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 15576                           ;stkvar	_fmt @ sp[(-32)+-4]
 15577  013044  0EDC               	movlw	-36
 15578  013046  006F FF8F FFD9     	movff	plusw1,fsr2l
 15579  01304C  0EDD               	movlw	-35
 15580  01304E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15581  013054  0E02               	movlw	2
 15582  013056  26DE               	addwf	postinc2,f,c
 15583  013058  0E00               	movlw	0
 15584  01305A  22DD               	addwfc	postdec2,f,c
 15585                           
 15586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 15587                           ;stkvar	_ap @ sp[(-32)+-6]
 15588  01305C  0EDA               	movlw	-38
 15589  01305E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15590  013064  0EDB               	movlw	-37
 15591  013066  006F FF8F FFDA     	movff	plusw1,fsr2h
 15592  01306C  0E04               	movlw	4
 15593  01306E  5EDE               	subwf	postinc2,f,c
 15594  013070  0E00               	movlw	0
 15595  013072  5ADD               	subwfb	postdec2,f,c
 15596  013074  006F FF78  F00B    	movff	postinc2,btemp+10
 15597  01307A  006F FF74  F00C    	movff	postdec2,btemp+11
 15598  013080  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15599  013086  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15600  01308C  006F FF78  F009    	movff	postinc2,btemp+8
 15601  013092  006F FF78  F00A    	movff	postinc2,btemp+9
 15602  013098  006F FF78  F00B    	movff	postinc2,btemp+10
 15603  01309E  006F FF78  F00C    	movff	postinc2,btemp+11
 15604  0130A4  5009               	movf	(btemp+8)^0,w,c
 15605  0130A6  6E11               	movwf	(btemp+16)^0,c
 15606  0130A8  500A               	movf	(btemp+9)^0,w,c
 15607  0130AA  6E12               	movwf	(btemp+17)^0,c
 15608  0130AC  500B               	movf	(btemp+10)^0,w,c
 15609  0130AE  6E13               	movwf	(btemp+18)^0,c
 15610  0130B0  500C               	movf	(btemp+11)^0,w,c
 15611  0130B2  6E14               	movwf	(btemp+19)^0,c
 15612  0130B4  D758               	goto	L14
 15613  0130B6                     l13430:
 15614                           
 15615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 15616                           ;stkvar	_fmt @ sp[(-32)+-4]
 15617  0130B6  0EDC               	movlw	-36
 15618  0130B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15619  0130BE  0EDD               	movlw	-35
 15620  0130C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15621  0130C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 15622  0130CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 15623  0130D2                     	if	0	;tblptru may be non-zero
 15624  0130D2                     	endif
 15625  0130D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15626  0130D2  0E00               	movlw	low (__mediumconst shr (0+16))
 15627  0130D4  6EF8               	movwf	tblptru,c
 15628  0130D6                     	endif
 15629  0130D6  0008               	tblrd		*
 15630  0130D8  50F5               	movf	tablat,w,c
 15631  0130DA  0A78               	xorlw	120
 15632  0130DC  B4D8               	btfsc	status,2,c
 15633  0130DE  D015               	goto	u12860
 15634                           
 15635                           ;stkvar	_fmt @ sp[(-32)+-4]
 15636  0130E0  0EDC               	movlw	-36
 15637  0130E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 15638  0130E8  0EDD               	movlw	-35
 15639  0130EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 15640  0130F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 15641  0130F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 15642  0130FC                     	if	0	;tblptru may be non-zero
 15643  0130FC                     	endif
 15644  0130FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15645  0130FC  0E00               	movlw	low (__mediumconst shr (0+16))
 15646  0130FE  6EF8               	movwf	tblptru,c
 15647  013100                     	endif
 15648  013100  0008               	tblrd		*
 15649  013102  50F5               	movf	tablat,w,c
 15650  013104  0A58               	xorlw	88
 15651  013106  A4D8               	btfss	status,2,c
 15652  013108  D094               	goto	l13444
 15653  01310A                     u12860:
 15654                           
 15655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 15656                           ;stkvar	_fmt @ sp[(-32)+-4]
 15657  01310A  0EDC               	movlw	-36
 15658  01310C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15659  013112  0EDD               	movlw	-35
 15660  013114  006F FF8F FFDA     	movff	plusw1,fsr2h
 15661  01311A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15662  013120  006F FF77 FFF7     	movff	postdec2,tblptrh
 15663  013126                     	if	0	;tblptru may be non-zero
 15664  013126                     	endif
 15665  013126                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15666  013126  0E00               	movlw	low (__mediumconst shr (0+16))
 15667  013128  6EF8               	movwf	tblptru,c
 15668  01312A                     	endif
 15669                           
 15670                           ;stkvar	_c @ sp[(-32)+31]
 15671  01312A  0008               	tblrd		*
 15672  01312C  0EFF               	movlw	-1
 15673  01312E  006F FFD7 FFE3     	movff	tablat,plusw1
 15674                           
 15675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 15676                           ;stkvar	_fmt @ sp[(-32)+-4]
 15677  013134  0EDC               	movlw	-36
 15678  013136  006F FF8F FFD9     	movff	plusw1,fsr2l
 15679  01313C  0EDD               	movlw	-35
 15680  01313E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15681  013144  2ADE               	incf	postinc2,f,c
 15682  013146  0E00               	movlw	0
 15683  013148  22DD               	addwfc	postdec2,f,c
 15684                           
 15685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 15686                           ;stkvar	_ap @ sp[(-32)+-6]
 15687  01314A  0EDA               	movlw	-38
 15688  01314C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15689  013152  0EDB               	movlw	-37
 15690  013154  006F FF8F FFDA     	movff	plusw1,fsr2h
 15691  01315A  0E02               	movlw	2
 15692  01315C  5EDE               	subwf	postinc2,f,c
 15693  01315E  0E00               	movlw	0
 15694  013160  5ADD               	subwfb	postdec2,f,c
 15695  013162  006F FF78  F00B    	movff	postinc2,btemp+10
 15696  013168  006F FF74  F00C    	movff	postdec2,btemp+11
 15697  01316E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15698  013174  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15699  01317A  006F FF78  F00B    	movff	postinc2,btemp+10
 15700  013180  006F FF74  F00C    	movff	postdec2,btemp+11
 15701  013186  500B               	movf	(btemp+10)^0,w,c
 15702  013188  6E11               	movwf	(btemp+16)^0,c
 15703  01318A  500C               	movf	(btemp+11)^0,w,c
 15704  01318C  6E12               	movwf	(btemp+17)^0,c
 15705  01318E  6A13               	clrf	(btemp+18)^0,c
 15706  013190  6A14               	clrf	(btemp+19)^0,c
 15707  013192  6A15               	clrf	(btemp+20)^0,c
 15708  013194  6A16               	clrf	(btemp+21)^0,c
 15709  013196  6A17               	clrf	(btemp+22)^0,c
 15710  013198  6A18               	clrf	(btemp+23)^0,c
 15711                           
 15712                           ;stkvar	_llu @ sp[(-32)+6]
 15713  01319A  0EE6               	movlw	-26
 15714  01319C  0060  F047  FFE3   	movff	btemp+16,plusw1
 15715  0131A2  0EE7               	movlw	-25
 15716  0131A4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15717  0131AA  0EE8               	movlw	-24
 15718  0131AC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15719  0131B2  0EE9               	movlw	-23
 15720  0131B4  0060  F053  FFE3   	movff	btemp+19,plusw1
 15721  0131BA  0EEA               	movlw	-22
 15722  0131BC  0060  F057  FFE3   	movff	btemp+20,plusw1
 15723  0131C2  0EEB               	movlw	-21
 15724  0131C4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15725  0131CA  0EEC               	movlw	-20
 15726  0131CC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15727  0131D2  0EED               	movlw	-19
 15728  0131D4  0060  F063  FFE3   	movff	btemp+23,plusw1
 15729                           
 15730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 15731                           ;stkvar	_c @ sp[(-32)+31]
 15732  0131DA  0EFF               	movlw	-1
 15733  0131DC  50E3               	movf	plusw1,w,c
 15734  0131DE  6EE6               	movwf	postinc1,c
 15735                           
 15736                           ;stkvar	_llu @ sp[(-33)+6]
 15737  0131E0  50E1               	movf	fsr1l,w,c
 15738  0131E2  0FE5               	addlw	-27
 15739  0131E4  6ED9               	movwf	fsr2l,c
 15740  0131E6  50E2               	movf	fsr1h,w,c
 15741  0131E8  6EDA               	movwf	fsr2h,c
 15742  0131EA  0EFF               	movlw	255
 15743  0131EC  22DA               	addwfc	fsr2h,f,c
 15744  0131EE  006F FF7B FFE6     	movff	postinc2,postinc1
 15745  0131F4  006F FF7B FFE6     	movff	postinc2,postinc1
 15746  0131FA  006F FF7B FFE6     	movff	postinc2,postinc1
 15747  013200  006F FF7B FFE6     	movff	postinc2,postinc1
 15748  013206  006F FF7B FFE6     	movff	postinc2,postinc1
 15749  01320C  006F FF7B FFE6     	movff	postinc2,postinc1
 15750  013212  006F FF7B FFE6     	movff	postinc2,postinc1
 15751  013218  006F FF7B FFE6     	movff	postinc2,postinc1
 15752                           
 15753                           ;stkvar	_fp @ sp[(-41)+-2]
 15754  01321E  0ED5               	movlw	-43
 15755  013220  006F FF8F FFE6     	movff	plusw1,postinc1
 15756  013226  006F FF8F FFE6     	movff	plusw1,postinc1
 15757  01322C  ECCE  F0B0         	call	_xtoa	;wreg free
 15758  013230  D105               	goto	l2514
 15759  013232                     l13444:
 15760                           
 15761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 15762  013232  0E02               	movlw	2
 15763  013234  6EE6               	movwf	postinc1,c
 15764  013236  0E00               	movlw	0
 15765  013238  6EE6               	movwf	postinc1,c
 15766  01323A  0EF5               	movlw	low STR_108
 15767  01323C  6EE6               	movwf	postinc1,c
 15768  01323E  0EFF               	movlw	high STR_108
 15769  013240  6EE6               	movwf	postinc1,c
 15770                           
 15771                           ;stkvar	_fmt @ sp[(-36)+-4]
 15772  013242  0ED8               	movlw	-40
 15773  013244  006F FF8F FFD9     	movff	plusw1,fsr2l
 15774  01324A  0ED9               	movlw	-39
 15775  01324C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15776  013252  006F FF78  F00B    	movff	postinc2,btemp+10
 15777  013258  006F FF74  F00C    	movff	postdec2,btemp+11
 15778  01325E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15779  013264  0060  F033  FFE6   	movff	btemp+11,postinc1
 15780  01326A  EC57  F0C2         	call	_strncmp	;wreg free
 15781  01326E  5001               	movf	btemp^0,w,c
 15782  013270  1002               	iorwf	(btemp+1)^0,w,c
 15783  013272  B4D8               	btfsc	status,2,c
 15784  013274  D022               	goto	u12880
 15785  013276  0E02               	movlw	2
 15786  013278  6EE6               	movwf	postinc1,c
 15787  01327A  0E00               	movlw	0
 15788  01327C  6EE6               	movwf	postinc1,c
 15789  01327E  0EE6               	movlw	low STR_112
 15790  013280  6EE6               	movwf	postinc1,c
 15791  013282  0EFF               	movlw	high STR_112
 15792  013284  6EE6               	movwf	postinc1,c
 15793                           
 15794                           ;stkvar	_fmt @ sp[(-36)+-4]
 15795  013286  0ED8               	movlw	-40
 15796  013288  006F FF8F FFD9     	movff	plusw1,fsr2l
 15797  01328E  0ED9               	movlw	-39
 15798  013290  006F FF8F FFDA     	movff	plusw1,fsr2h
 15799  013296  006F FF78  F00B    	movff	postinc2,btemp+10
 15800  01329C  006F FF74  F00C    	movff	postdec2,btemp+11
 15801  0132A2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15802  0132A8  0060  F033  FFE6   	movff	btemp+11,postinc1
 15803  0132AE  EC57  F0C2         	call	_strncmp	;wreg free
 15804  0132B2  5001               	movf	btemp^0,w,c
 15805  0132B4  1002               	iorwf	(btemp+1)^0,w,c
 15806  0132B6  A4D8               	btfss	status,2,c
 15807  0132B8  D058               	goto	l13458
 15808  0132BA                     u12880:
 15809                           
 15810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 15811                           ;stkvar	_fmt @ sp[(-32)+-4]
 15812  0132BA  0EDC               	movlw	-36
 15813  0132BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15814  0132C2  0EDD               	movlw	-35
 15815  0132C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15816  0132CA  006F FF78  F00B    	movff	postinc2,btemp+10
 15817  0132D0  006F FF74  F00C    	movff	postdec2,btemp+11
 15818  0132D6  0E01               	movlw	1
 15819  0132D8  260B               	addwf	(btemp+10)^0,f,c
 15820  0132DA  0E00               	movlw	0
 15821  0132DC  220C               	addwfc	(btemp+11)^0,f,c
 15822  0132DE  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15823  0132E4  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15824  0132EA                     	if	0	;tblptru may be non-zero
 15825  0132EA                     	endif
 15826  0132EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15827  0132EA  0E00               	movlw	low (__mediumconst shr (0+16))
 15828  0132EC  6EF8               	movwf	tblptru,c
 15829  0132EE                     	endif
 15830                           
 15831                           ;stkvar	_c @ sp[(-32)+31]
 15832  0132EE  0008               	tblrd		*
 15833  0132F0  0EFF               	movlw	-1
 15834  0132F2  006F FFD7 FFE3     	movff	tablat,plusw1
 15835                           
 15836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 15837                           ;stkvar	_fmt @ sp[(-32)+-4]
 15838  0132F8  0EDC               	movlw	-36
 15839  0132FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15840  013300  0EDD               	movlw	-35
 15841  013302  006F FF8F FFDA     	movff	plusw1,fsr2h
 15842  013308  0E02               	movlw	2
 15843  01330A  26DE               	addwf	postinc2,f,c
 15844  01330C  0E00               	movlw	0
 15845  01330E  22DD               	addwfc	postdec2,f,c
 15846                           
 15847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 15848                           ;stkvar	_ap @ sp[(-32)+-6]
 15849  013310  0EDA               	movlw	-38
 15850  013312  006F FF8F FFD9     	movff	plusw1,fsr2l
 15851  013318  0EDB               	movlw	-37
 15852  01331A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15853  013320  0E04               	movlw	4
 15854  013322  5EDE               	subwf	postinc2,f,c
 15855  013324  0E00               	movlw	0
 15856  013326  5ADD               	subwfb	postdec2,f,c
 15857  013328  006F FF78  F00B    	movff	postinc2,btemp+10
 15858  01332E  006F FF74  F00C    	movff	postdec2,btemp+11
 15859  013334  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15860  01333A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15861  013340  006F FF78  F009    	movff	postinc2,btemp+8
 15862  013346  006F FF78  F00A    	movff	postinc2,btemp+9
 15863  01334C  006F FF78  F00B    	movff	postinc2,btemp+10
 15864  013352  006F FF78  F00C    	movff	postinc2,btemp+11
 15865  013358  5009               	movf	(btemp+8)^0,w,c
 15866  01335A  6E11               	movwf	(btemp+16)^0,c
 15867  01335C  500A               	movf	(btemp+9)^0,w,c
 15868  01335E  6E12               	movwf	(btemp+17)^0,c
 15869  013360  500B               	movf	(btemp+10)^0,w,c
 15870  013362  6E13               	movwf	(btemp+18)^0,c
 15871  013364  500C               	movf	(btemp+11)^0,w,c
 15872  013366  6E14               	movwf	(btemp+19)^0,c
 15873  013368  D714               	goto	L15
 15874  01336A                     l13458:
 15875                           
 15876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 15877                           ;stkvar	_fmt @ sp[(-32)+-4]
 15878  01336A  0EDC               	movlw	-36
 15879  01336C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15880  013372  0EDD               	movlw	-35
 15881  013374  006F FF8F FFDA     	movff	plusw1,fsr2h
 15882  01337A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15883  013380  006F FF77 FFF7     	movff	postdec2,tblptrh
 15884  013386                     	if	0	;tblptru may be non-zero
 15885  013386                     	endif
 15886  013386                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15887  013386  0E00               	movlw	low (__mediumconst shr (0+16))
 15888  013388  6EF8               	movwf	tblptru,c
 15889  01338A                     	endif
 15890  01338A  0008               	tblrd		*
 15891  01338C  50F5               	movf	tablat,w,c
 15892  01338E  0A25               	xorlw	37
 15893  013390  A4D8               	btfss	status,2,c
 15894  013392  D01A               	goto	l13468
 15895                           
 15896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 15897                           ;stkvar	_fmt @ sp[(-32)+-4]
 15898  013394  0EDC               	movlw	-36
 15899  013396  006F FF8F FFD9     	movff	plusw1,fsr2l
 15900  01339C  0EDD               	movlw	-35
 15901  01339E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15902  0133A4  2ADE               	incf	postinc2,f,c
 15903  0133A6  0E00               	movlw	0
 15904  0133A8  22DD               	addwfc	postdec2,f,c
 15905                           
 15906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 15907                           ;stkvar	_fp @ sp[(-32)+-2]
 15908  0133AA  0EDE               	movlw	-34
 15909  0133AC  006F FF8F FFE6     	movff	plusw1,postinc1
 15910  0133B2  006F FF8F FFE6     	movff	plusw1,postinc1
 15911  0133B8  0E25               	movlw	37
 15912  0133BA  6EE6               	movwf	postinc1,c
 15913  0133BC  0E00               	movlw	0
 15914  0133BE  6EE6               	movwf	postinc1,c
 15915  0133C0  ECB2  F0CF         	call	_fputc	;wreg free
 15916  0133C4                     l13464:
 15917                           
 15918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 15919  0133C4  0E01               	movlw	1
 15920  0133C6  D00C               	goto	L16
 15921  0133C8                     l13468:
 15922                           
 15923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 15924                           ;stkvar	_fmt @ sp[(-32)+-4]
 15925  0133C8  0EDC               	movlw	-36
 15926  0133CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15927  0133D0  0EDD               	movlw	-35
 15928  0133D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15929  0133D8  2ADE               	incf	postinc2,f,c
 15930  0133DA  0E00               	movlw	0
 15931  0133DC  22DD               	addwfc	postdec2,f,c
 15932                           
 15933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 15934  0133DE  0E00               	movlw	0
 15935  0133E0                     L16:
 15936  0133E0  6E01               	movwf	btemp^0,c
 15937  0133E2  0E00               	movlw	0
 15938  0133E4  6E02               	movwf	(btemp+1)^0,c
 15939  0133E6  D02A               	goto	l2514
 15940  0133E8                     l13474:
 15941                           
 15942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 15943                           ;stkvar	_fp @ sp[(-32)+-2]
 15944  0133E8  0EDE               	movlw	-34
 15945  0133EA  006F FF8F FFE6     	movff	plusw1,postinc1
 15946  0133F0  006F FF8F FFE6     	movff	plusw1,postinc1
 15947                           
 15948                           ;stkvar	_fmt @ sp[(-34)+-4]
 15949  0133F6  0EDA               	movlw	-38
 15950  0133F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15951  0133FE  0EDB               	movlw	-37
 15952  013400  006F FF8F FFDA     	movff	plusw1,fsr2h
 15953  013406  006F FF7B FFF6     	movff	postinc2,tblptrl
 15954  01340C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15955  013412                     	if	0	;tblptru may be non-zero
 15956  013412                     	endif
 15957  013412                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15958  013412  0E00               	movlw	low (__mediumconst shr (0+16))
 15959  013414  6EF8               	movwf	tblptru,c
 15960  013416                     	endif
 15961  013416  0008               	tblrd		*
 15962  013418  50F5               	movf	tablat,w,c
 15963  01341A  6EE6               	movwf	postinc1,c
 15964  01341C  0E00               	movlw	0
 15965  01341E  6EE6               	movwf	postinc1,c
 15966  013420  ECB2  F0CF         	call	_fputc	;wreg free
 15967                           
 15968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 15969                           ;stkvar	_fmt @ sp[(-32)+-4]
 15970  013424  0EDC               	movlw	-36
 15971  013426  006F FF8F FFD9     	movff	plusw1,fsr2l
 15972  01342C  0EDD               	movlw	-35
 15973  01342E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15974  013434  2ADE               	incf	postinc2,f,c
 15975  013436  0E00               	movlw	0
 15976  013438  22DD               	addwfc	postdec2,f,c
 15977  01343A  D7C4               	goto	l13464
 15978  01343C                     l2514:
 15979                           
 15980                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 15981  01343C  0EDA               	movlw	218
 15982  01343E  26E1               	addwf	fsr1l,f,c
 15983  013440  0EFF               	movlw	255
 15984  013442  22E2               	addwfc	fsr1h,f,c
 15985  013444  0012               	return		;funcret
 15986  013446                     __end_of_vfpfcnvrt:
 15987                           	opt callstack 0
 15988                           
 15989 ;; *************** function _xtoa *****************
 15990 ;; Defined at:
 15991 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15992 ;; Parameters:    Size  Location     Type
 15993 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15994 ;;		 -> f(6), NULL(0), 
 15995 ;;  d               8  [STACK] unsigned long long 
 15996 ;;  x               1  [STACK] unsigned char 
 15997 ;; Auto vars:     Size  Location     Type
 15998 ;;  n               8  [STACK] unsigned long long 
 15999 ;;  c               2  [STACK] int 
 16000 ;;  i               2  [STACK] int 
 16001 ;;  w               2  [STACK] int 
 16002 ;;  p               2  [STACK] int 
 16003 ;; Return value:  Size  Location     Type
 16004 ;;                  2  [STACK] int 
 16005 ;; Registers used:
 16006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16007 ;; Tracked objects:
 16008 ;;		On entry : 0/0
 16009 ;;		On exit  : 0/0
 16010 ;;		Unchanged: 0/0
 16011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16016 ;;Total ram usage:        0 bytes
 16017 ;; Hardware stack levels used:    1
 16018 ;; Hardware stack levels required when called:   20
 16019 ;; This function calls:
 16020 ;;		_isalpha
 16021 ;;		_isupper
 16022 ;;		_pad
 16023 ;;		_toupper
 16024 ;; This function is called by:
 16025 ;;		_vfpfcnvrt
 16026 ;; This function uses a reentrant model
 16027 ;;
 16028                           
 16029                           	psect	text61
 16030  01619C                     __ptext61:
 16031                           	opt callstack 0
 16032  01619C                     _xtoa:
 16033                           	opt callstack 0
 16034                           
 16035                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16036  01619C  0E14               	movlw	20
 16037  01619E  26E1               	addwf	fsr1l,f,c
 16038  0161A0  0E00               	movlw	0
 16039  0161A2  22E2               	addwfc	fsr1h,f,c
 16040                           
 16041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 16042                           
 16043                           ;incstack = 0
 16044 ;; hardware stack exceeded
 16045  0161A4  AE3D               	btfss	(_prec+1)^0,7,c
 16046                           
 16047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 16048  0161A6  923E               	bcf	_flags^0,1,c
 16049                           
 16050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 16051  0161A8  BE3D               	btfsc	(_prec+1)^0,7,c
 16052  0161AA  D005               	goto	u12420
 16053  0161AC  503D               	movf	(_prec+1)^0,w,c
 16054  0161AE  E110               	bnz	l13194
 16055  0161B0  043C               	decf	_prec^0,w,c
 16056  0161B2  B0D8               	btfsc	status,0,c
 16057  0161B4  D00D               	goto	l13194
 16058  0161B6                     u12420:
 16059  0161B6  0E01               	movlw	1
 16060  0161B8  6E0B               	movwf	(btemp+10)^0,c
 16061  0161BA  0E00               	movlw	0
 16062  0161BC  6E0C               	movwf	(btemp+11)^0,c
 16063                           
 16064                           ;stkvar	_p @ sp[(-20)+18]
 16065  0161BE  0EFE               	movlw	-2
 16066  0161C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16067  0161C6  0EFF               	movlw	-1
 16068  0161C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16069  0161CE  D008               	goto	l2464
 16070  0161D0                     l13194:
 16071                           
 16072                           ;stkvar	_p @ sp[(-20)+18]
 16073  0161D0  0EFE               	movlw	-2
 16074  0161D2  0060  F0F3  FFE3   	movff	_prec,plusw1
 16075  0161D8  0EFF               	movlw	-1
 16076  0161DA  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16077  0161E0                     l2464:
 16078                           
 16079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 16080                           ;stkvar	_w @ sp[(-20)+16]
 16081  0161E0  0EFC               	movlw	-4
 16082  0161E2  0060  F0EB  FFE3   	movff	_width,plusw1
 16083  0161E8  0EFD               	movlw	-3
 16084  0161EA  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16085                           
 16086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 16087  0161F0  A83E               	btfss	_flags^0,4,c
 16088  0161F2  D00B               	goto	l13200
 16089                           
 16090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 16091                           ;stkvar	_w @ sp[(-20)+16]
 16092  0161F4  50E1               	movf	fsr1l,w,c
 16093  0161F6  0FFC               	addlw	-4
 16094  0161F8  6ED9               	movwf	fsr2l,c
 16095  0161FA  50E2               	movf	fsr1h,w,c
 16096  0161FC  6EDA               	movwf	fsr2h,c
 16097  0161FE  0EFF               	movlw	255
 16098  016200  22DA               	addwfc	fsr2h,f,c
 16099  016202  0EFE               	movlw	254
 16100  016204  26DE               	addwf	postinc2,f,c
 16101  016206  0EFF               	movlw	255
 16102  016208  22DD               	addwfc	postdec2,f,c
 16103  01620A                     l13200:
 16104                           
 16105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 16106                           ;stkvar	_d @ sp[(-20)+-10]
 16107  01620A  0EE2               	movlw	226
 16108  01620C  24E1               	addwf	fsr1l,w,c
 16109  01620E  6ED9               	movwf	fsr2l,c
 16110  016210  0EFF               	movlw	255
 16111  016212  20E2               	addwfc	fsr1h,w,c
 16112  016214  6EDA               	movwf	fsr2h,c
 16113                           
 16114                           ;stkvar	_n @ sp[(-20)+4]
 16115  016216  0E08               	movlw	8
 16116  016218  6E01               	movwf	btemp^0,c
 16117  01621A  0EF0               	movlw	-16
 16118  01621C                     us1244999:
 16119  01621C  006F FF7B FFE3     	movff	postinc2,plusw1
 16120  016222  28E8               	incf	wreg,w,c
 16121  016224  2E01               	decfsz	btemp^0,f,c
 16122  016226  D7FA               	bra	us1244999
 16123                           
 16124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 16125  016228  0E4F               	movlw	79
 16126  01622A  6E0B               	movwf	(btemp+10)^0,c
 16127  01622C  0E00               	movlw	0
 16128  01622E  6E0C               	movwf	(btemp+11)^0,c
 16129                           
 16130                           ;stkvar	_i @ sp[(-20)+14]
 16131  016230  0EFA               	movlw	-6
 16132  016232  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16133  016238  0EFB               	movlw	-5
 16134  01623A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16135                           
 16136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 16137  016240  0102               	movlb	2	; () banked
 16138  016242  6BE6               	clrf	(_dbuf+79)& (0+255),b
 16139                           
 16140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16141  016244  D0EE               	goto	l13238
 16142  016246                     l13206:
 16143                           
 16144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 16145                           ;stkvar	_i @ sp[(-20)+14]
 16146  016246  50E1               	movf	fsr1l,w,c
 16147  016248  0FFA               	addlw	-6
 16148  01624A  6ED9               	movwf	fsr2l,c
 16149  01624C  50E2               	movf	fsr1h,w,c
 16150  01624E  6EDA               	movwf	fsr2h,c
 16151  016250  0EFF               	movlw	255
 16152  016252  22DA               	addwfc	fsr2h,f,c
 16153  016254  06DE               	decf	postinc2,f,c
 16154  016256  0E00               	movlw	0
 16155  016258  5ADD               	subwfb	postdec2,f,c
 16156                           
 16157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 16158                           ;stkvar	_n @ sp[(-20)+4]
 16159  01625A  0EF0               	movlw	-16
 16160  01625C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16161  016262  0EF1               	movlw	-15
 16162  016264  006F FF8C  F00C    	movff	plusw1,btemp+11
 16163  01626A  0E0F               	movlw	15
 16164  01626C  160B               	andwf	(btemp+10)^0,f,c
 16165  01626E  0E00               	movlw	0
 16166  016270  160C               	andwf	(btemp+11)^0,f,c
 16167                           
 16168                           ;stkvar	_c @ sp[(-20)+12]
 16169  016272  0EF8               	movlw	-8
 16170  016274  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16171  01627A  0EF9               	movlw	-7
 16172  01627C  0060  F033  FFE3   	movff	btemp+11,plusw1
 16173                           
 16174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 16175                           ;stkvar	_c @ sp[(-20)+12]
 16176  016282  0EF9               	movlw	-7
 16177  016284  BEE3               	btfsc	plusw1,7,c
 16178  016286  D00F               	goto	l13214
 16179  016288  0EF9               	movlw	-7
 16180  01628A  50E3               	movf	plusw1,w,c
 16181  01628C  E108               	bnz	u12450
 16182  01628E  0EF8               	movlw	-8
 16183  016290  006F FF8C  F001    	movff	plusw1,btemp
 16184  016296  0E0A               	movlw	10
 16185  016298  5E01               	subwf	btemp^0,f,c
 16186  01629A  A0D8               	btfss	status,0,c
 16187  01629C  D004               	goto	l13214
 16188  01629E                     u12450:
 16189                           
 16190                           ;stkvar	_c @ sp[(-20)+12]
 16191  01629E  0EF8               	movlw	-8
 16192  0162A0  50E3               	movf	plusw1,w,c
 16193  0162A2  0F57               	addlw	87
 16194  0162A4  D003               	goto	L17
 16195  0162A6                     l13214:
 16196                           
 16197                           ;stkvar	_c @ sp[(-20)+12]
 16198  0162A6  0EF8               	movlw	-8
 16199  0162A8  50E3               	movf	plusw1,w,c
 16200  0162AA  0F30               	addlw	48
 16201  0162AC                     L17:
 16202  0162AC  6E0B               	movwf	(btemp+10)^0,c
 16203  0162AE  0EF9               	movlw	-7
 16204  0162B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16205  0162B6  0E00               	movlw	0
 16206  0162B8  220C               	addwfc	(btemp+11)^0,f,c
 16207                           
 16208                           ;stkvar	_c @ sp[(-20)+12]
 16209  0162BA  0EF8               	movlw	-8
 16210  0162BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16211  0162C2  0EF9               	movlw	-7
 16212  0162C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16213  0162CA  0EBF               	movlw	191
 16214  0162CC  6E0B               	movwf	(btemp+10)^0,c
 16215  0162CE  0EFF               	movlw	255
 16216  0162D0  6E0C               	movwf	(btemp+11)^0,c
 16217                           
 16218                           ;stkvar	_x @ sp[(-20)+-11]
 16219  0162D2  0EE1               	movlw	-31
 16220  0162D4  50E3               	movf	plusw1,w,c
 16221  0162D6  6E09               	movwf	(btemp+8)^0,c
 16222  0162D8  6A0A               	clrf	(btemp+9)^0,c
 16223  0162DA  500B               	movf	(btemp+10)^0,w,c
 16224  0162DC  2609               	addwf	(btemp+8)^0,f,c
 16225  0162DE  500C               	movf	(btemp+11)^0,w,c
 16226  0162E0  220A               	addwfc	(btemp+9)^0,f,c
 16227  0162E2  500A               	movf	(btemp+9)^0,w,c
 16228  0162E4  E106               	bnz	u12460
 16229  0162E6  0E1A               	movlw	26
 16230  0162E8  5C09               	subwf	(btemp+8)^0,w,c
 16231  0162EA  B0D8               	btfsc	status,0,c
 16232  0162EC  D002               	goto	u12460
 16233  0162EE  0E01               	movlw	1
 16234  0162F0  D001               	goto	u12470
 16235  0162F2                     u12460:
 16236  0162F2  0E00               	movlw	0
 16237  0162F4                     u12470:
 16238  0162F4  6E0B               	movwf	(btemp+10)^0,c
 16239  0162F6  6A0C               	clrf	(btemp+11)^0,c
 16240                           
 16241                           ;stkvar	_xtoa$6022 @ sp[(-20)+2]
 16242  0162F8  0EEE               	movlw	-18
 16243  0162FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16244  016300  0EEF               	movlw	-17
 16245  016302  0060  F033  FFE3   	movff	btemp+11,plusw1
 16246                           
 16247                           ;stkvar	_xtoa$6022 @ sp[(-20)+2]
 16248  016308  0EEE               	movlw	-18
 16249  01630A  006F FF8C  F001    	movff	plusw1,btemp
 16250  016310  0EEF               	movlw	-17
 16251  016312  50E3               	movf	plusw1,w,c
 16252  016314  1001               	iorwf	btemp^0,w,c
 16253  016316  B4D8               	btfsc	status,2,c
 16254  016318  D041               	goto	l13230
 16255  01631A  0E9F               	movlw	159
 16256  01631C  6E0B               	movwf	(btemp+10)^0,c
 16257  01631E  0EFF               	movlw	255
 16258  016320  6E0C               	movwf	(btemp+11)^0,c
 16259                           
 16260                           ;stkvar	_c @ sp[(-20)+12]
 16261  016322  0EF8               	movlw	-8
 16262  016324  006F FF8C  F009    	movff	plusw1,btemp+8
 16263  01632A  0EF9               	movlw	-7
 16264  01632C  006F FF8C  F00A    	movff	plusw1,btemp+9
 16265  016332  0E20               	movlw	32
 16266  016334  1209               	iorwf	(btemp+8)^0,f,c
 16267  016336  0E00               	movlw	0
 16268  016338  120A               	iorwf	(btemp+9)^0,f,c
 16269  01633A  500B               	movf	(btemp+10)^0,w,c
 16270  01633C  2609               	addwf	(btemp+8)^0,f,c
 16271  01633E  500C               	movf	(btemp+11)^0,w,c
 16272  016340  220A               	addwfc	(btemp+9)^0,f,c
 16273  016342  500A               	movf	(btemp+9)^0,w,c
 16274  016344  E106               	bnz	u12490
 16275  016346  0E1A               	movlw	26
 16276  016348  5C09               	subwf	(btemp+8)^0,w,c
 16277  01634A  B0D8               	btfsc	status,0,c
 16278  01634C  D002               	goto	u12490
 16279  01634E  0E01               	movlw	1
 16280  016350  D001               	goto	u12500
 16281  016352                     u12490:
 16282  016352  0E00               	movlw	0
 16283  016354                     u12500:
 16284  016354  6E0B               	movwf	(btemp+10)^0,c
 16285  016356  6A0C               	clrf	(btemp+11)^0,c
 16286                           
 16287                           ;stkvar	_xtoa$6023 @ sp[(-20)+0]
 16288  016358  0EEC               	movlw	-20
 16289  01635A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16290  016360  0EED               	movlw	-19
 16291  016362  0060  F033  FFE3   	movff	btemp+11,plusw1
 16292                           
 16293                           ;stkvar	_xtoa$6023 @ sp[(-20)+0]
 16294  016368  0EEC               	movlw	-20
 16295  01636A  006F FF8C  F001    	movff	plusw1,btemp
 16296  016370  0EED               	movlw	-19
 16297  016372  50E3               	movf	plusw1,w,c
 16298  016374  1001               	iorwf	btemp^0,w,c
 16299  016376  B4D8               	btfsc	status,2,c
 16300  016378  D011               	goto	l13230
 16301                           
 16302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 16303                           ;stkvar	_c @ sp[(-20)+12]
 16304  01637A  0EF8               	movlw	-8
 16305  01637C  006F FF8F FFE6     	movff	plusw1,postinc1
 16306  016382  006F FF8F FFE6     	movff	plusw1,postinc1
 16307  016388  EC69  F0DB         	call	_toupper	;wreg free
 16308                           
 16309                           ;stkvar	_c @ sp[(-20)+12]
 16310  01638C  0EF8               	movlw	-8
 16311  01638E  0060  F007  FFE3   	movff	btemp,plusw1
 16312  016394  0EF9               	movlw	-7
 16313  016396  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16314  01639C                     l13230:
 16315                           
 16316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 16317                           ;stkvar	_c @ sp[(-20)+12]
 16318                           ;stkvar	_i @ sp[(-20)+14]
 16319  01639C  0EFA               	movlw	-6
 16320  01639E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16321  0163A4  0EFB               	movlw	-5
 16322  0163A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 16323  0163AC  0E97               	movlw	low _dbuf
 16324  0163AE  240B               	addwf	(btemp+10)^0,w,c
 16325  0163B0  6ED9               	movwf	fsr2l,c
 16326  0163B2  0E02               	movlw	high _dbuf
 16327  0163B4  200C               	addwfc	(btemp+11)^0,w,c
 16328  0163B6  6EDA               	movwf	fsr2h,c
 16329  0163B8  0EF8               	movlw	-8
 16330  0163BA  006F FF8F FFDF     	movff	plusw1,indf2
 16331                           
 16332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 16333                           ;stkvar	_p @ sp[(-20)+18]
 16334  0163C0  50E1               	movf	fsr1l,w,c
 16335  0163C2  0FFE               	addlw	-2
 16336  0163C4  6ED9               	movwf	fsr2l,c
 16337  0163C6  50E2               	movf	fsr1h,w,c
 16338  0163C8  6EDA               	movwf	fsr2h,c
 16339  0163CA  0EFF               	movlw	255
 16340  0163CC  22DA               	addwfc	fsr2h,f,c
 16341  0163CE  06DE               	decf	postinc2,f,c
 16342  0163D0  0E00               	movlw	0
 16343  0163D2  5ADD               	subwfb	postdec2,f,c
 16344                           
 16345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 16346                           ;stkvar	_w @ sp[(-20)+16]
 16347  0163D4  50E1               	movf	fsr1l,w,c
 16348  0163D6  0FFC               	addlw	-4
 16349  0163D8  6ED9               	movwf	fsr2l,c
 16350  0163DA  50E2               	movf	fsr1h,w,c
 16351  0163DC  6EDA               	movwf	fsr2h,c
 16352  0163DE  0EFF               	movlw	255
 16353  0163E0  22DA               	addwfc	fsr2h,f,c
 16354  0163E2  06DE               	decf	postinc2,f,c
 16355  0163E4  0E00               	movlw	0
 16356  0163E6  5ADD               	subwfb	postdec2,f,c
 16357                           
 16358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 16359  0163E8  0E04               	movlw	4
 16360  0163EA  6E0C               	movwf	(btemp+11)^0,c
 16361                           
 16362                           ;stkvar	_n @ sp[(-20)+4]
 16363  0163EC  50E1               	movf	fsr1l,w,c
 16364  0163EE  0FF0               	addlw	-16
 16365  0163F0  6ED9               	movwf	fsr2l,c
 16366  0163F2  50E2               	movf	fsr1h,w,c
 16367  0163F4  6EDA               	movwf	fsr2h,c
 16368  0163F6  0EFF               	movlw	255
 16369  0163F8  22DA               	addwfc	fsr2h,f,c
 16370  0163FA  280C               	incf	(btemp+11)^0,w,c
 16371  0163FC  52DE               	movf	postinc2,f,c
 16372  0163FE  D00F               	goto	u12520
 16373  016400                     u12525:
 16374  016400  52DE               	movf	postinc2,f,c
 16375  016402  52DE               	movf	postinc2,f,c
 16376  016404  52DE               	movf	postinc2,f,c
 16377  016406  52DE               	movf	postinc2,f,c
 16378  016408  52DE               	movf	postinc2,f,c
 16379  01640A  52DE               	movf	postinc2,f,c
 16380  01640C  90D8               	bcf	status,0,c
 16381  01640E  32DD               	rrcf	postdec2,f,c
 16382  016410  32DD               	rrcf	postdec2,f,c
 16383  016412  32DD               	rrcf	postdec2,f,c
 16384  016414  32DD               	rrcf	postdec2,f,c
 16385  016416  32DD               	rrcf	postdec2,f,c
 16386  016418  32DD               	rrcf	postdec2,f,c
 16387  01641A  32DD               	rrcf	postdec2,f,c
 16388  01641C  32DE               	rrcf	postinc2,f,c
 16389  01641E                     u12520:
 16390  01641E  2EE8               	decfsz	wreg,f,c
 16391  016420  D7EF               	goto	u12525
 16392  016422                     l13238:
 16393                           
 16394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16395                           ;stkvar	_i @ sp[(-20)+14]
 16396  016422  0EFB               	movlw	-5
 16397  016424  BEE3               	btfsc	plusw1,7,c
 16398  016426  D03A               	goto	u12570
 16399  016428  0EFB               	movlw	-5
 16400  01642A  50E3               	movf	plusw1,w,c
 16401  01642C  E108               	bnz	u12530
 16402  01642E  0EFA               	movlw	-6
 16403  016430  006F FF8C  F001    	movff	plusw1,btemp
 16404  016436  0E02               	movlw	2
 16405  016438  5E01               	subwf	btemp^0,f,c
 16406  01643A  A0D8               	btfss	status,0,c
 16407  01643C  D02F               	goto	u12570
 16408  01643E                     u12530:
 16409                           
 16410                           ;stkvar	_n @ sp[(-20)+4]
 16411  01643E  0EF0               	movlw	-16
 16412  016440  50E3               	movf	plusw1,w,c
 16413  016442  E115               	bnz	u12541
 16414  016444  0EF1               	movlw	-15
 16415  016446  50E3               	movf	plusw1,w,c
 16416  016448  E112               	bnz	u12541
 16417  01644A  0EF2               	movlw	-14
 16418  01644C  50E3               	movf	plusw1,w,c
 16419  01644E  E10F               	bnz	u12541
 16420  016450  0EF3               	movlw	-13
 16421  016452  50E3               	movf	plusw1,w,c
 16422  016454  E10C               	bnz	u12541
 16423  016456  0EF4               	movlw	-12
 16424  016458  50E3               	movf	plusw1,w,c
 16425  01645A  E109               	bnz	u12541
 16426  01645C  0EF5               	movlw	-11
 16427  01645E  50E3               	movf	plusw1,w,c
 16428  016460  E106               	bnz	u12541
 16429  016462  0EF6               	movlw	-10
 16430  016464  50E3               	movf	plusw1,w,c
 16431  016466  E103               	bnz	u12541
 16432  016468  0EF7               	movlw	-9
 16433  01646A  50E3               	movf	plusw1,w,c
 16434  01646C  A4D8               	btfss	status,2,c
 16435  01646E                     u12541:
 16436  01646E  D6EB               	goto	l13206
 16437                           
 16438                           ;stkvar	_p @ sp[(-20)+18]
 16439  016470  0EFF               	movlw	-1
 16440  016472  BEE3               	btfsc	plusw1,7,c
 16441  016474  D007               	goto	u12550
 16442  016476  0EFF               	movlw	-1
 16443  016478  50E3               	movf	plusw1,w,c
 16444  01647A  E103               	bnz	u12551
 16445  01647C  0EFE               	movlw	-2
 16446  01647E  04E3               	decf	plusw1,w,c
 16447  016480  B0D8               	btfsc	status,0,c
 16448  016482                     u12551:
 16449  016482  D6E1               	goto	l13206
 16450  016484                     u12550:
 16451                           
 16452                           ;stkvar	_w @ sp[(-20)+16]
 16453  016484  0EFD               	movlw	-3
 16454  016486  BEE3               	btfsc	plusw1,7,c
 16455  016488  D009               	goto	u12570
 16456  01648A  0EFD               	movlw	-3
 16457  01648C  50E3               	movf	plusw1,w,c
 16458  01648E  E104               	bnz	u12560
 16459  016490  0EFC               	movlw	-4
 16460  016492  04E3               	decf	plusw1,w,c
 16461  016494  A0D8               	btfss	status,0,c
 16462  016496  D002               	goto	u12570
 16463  016498                     u12560:
 16464  016498  B23E               	btfsc	_flags^0,1,c
 16465  01649A  D6D5               	goto	l13206
 16466  01649C                     u12570:
 16467                           
 16468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 16469  01649C  A83E               	btfss	_flags^0,4,c
 16470  01649E  D036               	goto	l13254
 16471                           
 16472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 16473                           ;stkvar	_i @ sp[(-20)+14]
 16474  0164A0  50E1               	movf	fsr1l,w,c
 16475  0164A2  0FFA               	addlw	-6
 16476  0164A4  6ED9               	movwf	fsr2l,c
 16477  0164A6  50E2               	movf	fsr1h,w,c
 16478  0164A8  6EDA               	movwf	fsr2h,c
 16479  0164AA  0EFF               	movlw	255
 16480  0164AC  22DA               	addwfc	fsr2h,f,c
 16481  0164AE  06DE               	decf	postinc2,f,c
 16482  0164B0  0E00               	movlw	0
 16483  0164B2  5ADD               	subwfb	postdec2,f,c
 16484                           
 16485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 16486                           ;stkvar	_x @ sp[(-20)+-11]
 16487                           ;stkvar	_i @ sp[(-20)+14]
 16488  0164B4  0EFA               	movlw	-6
 16489  0164B6  006F FF8C  F00B    	movff	plusw1,btemp+10
 16490  0164BC  0EFB               	movlw	-5
 16491  0164BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 16492  0164C4  0E97               	movlw	low _dbuf
 16493  0164C6  240B               	addwf	(btemp+10)^0,w,c
 16494  0164C8  6ED9               	movwf	fsr2l,c
 16495  0164CA  0E02               	movlw	high _dbuf
 16496  0164CC  200C               	addwfc	(btemp+11)^0,w,c
 16497  0164CE  6EDA               	movwf	fsr2h,c
 16498  0164D0  0EE1               	movlw	-31
 16499  0164D2  006F FF8F FFDF     	movff	plusw1,indf2
 16500                           
 16501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 16502                           ;stkvar	_i @ sp[(-20)+14]
 16503  0164D8  50E1               	movf	fsr1l,w,c
 16504  0164DA  0FFA               	addlw	-6
 16505  0164DC  6ED9               	movwf	fsr2l,c
 16506  0164DE  50E2               	movf	fsr1h,w,c
 16507  0164E0  6EDA               	movwf	fsr2h,c
 16508  0164E2  0EFF               	movlw	255
 16509  0164E4  22DA               	addwfc	fsr2h,f,c
 16510  0164E6  06DE               	decf	postinc2,f,c
 16511  0164E8  0E00               	movlw	0
 16512  0164EA  5ADD               	subwfb	postdec2,f,c
 16513                           
 16514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 16515                           ;stkvar	_i @ sp[(-20)+14]
 16516  0164EC  0EFA               	movlw	-6
 16517  0164EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 16518  0164F4  0EFB               	movlw	-5
 16519  0164F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 16520  0164FC  0E97               	movlw	low _dbuf
 16521  0164FE  240B               	addwf	(btemp+10)^0,w,c
 16522  016500  6ED9               	movwf	fsr2l,c
 16523  016502  0E02               	movlw	high _dbuf
 16524  016504  200C               	addwfc	(btemp+11)^0,w,c
 16525  016506  6EDA               	movwf	fsr2h,c
 16526  016508  0E30               	movlw	48
 16527  01650A  6EDF               	movwf	indf2,c
 16528  01650C                     l13254:
 16529                           
 16530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 16531                           ;stkvar	_w @ sp[(-20)+16]
 16532  01650C  0EFC               	movlw	-4
 16533  01650E  006F FF8F FFE6     	movff	plusw1,postinc1
 16534  016514  006F FF8F FFE6     	movff	plusw1,postinc1
 16535                           
 16536                           ;stkvar	_i @ sp[(-22)+14]
 16537  01651A  0E97               	movlw	low _dbuf
 16538  01651C  6E0B               	movwf	(btemp+10)^0,c
 16539  01651E  0E02               	movlw	high _dbuf
 16540  016520  6E0C               	movwf	(btemp+11)^0,c
 16541  016522  0EF8               	movlw	-8
 16542  016524  50E3               	movf	plusw1,w,c
 16543  016526  260B               	addwf	(btemp+10)^0,f,c
 16544  016528  0EF9               	movlw	-7
 16545  01652A  50E3               	movf	plusw1,w,c
 16546  01652C  220C               	addwfc	(btemp+11)^0,f,c
 16547  01652E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16548  016534  0060  F033  FFE6   	movff	btemp+11,postinc1
 16549                           
 16550                           ;stkvar	_fp @ sp[(-24)+-2]
 16551  01653A  0EE6               	movlw	-26
 16552  01653C  006F FF8F FFE6     	movff	plusw1,postinc1
 16553  016542  006F FF8F FFE6     	movff	plusw1,postinc1
 16554  016548  EC5C  F0D1         	call	_pad	;wreg free
 16555                           
 16556                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 16557  01654C  0EE1               	movlw	225
 16558  01654E  26E1               	addwf	fsr1l,f,c
 16559  016550  0EFF               	movlw	255
 16560  016552  22E2               	addwfc	fsr1h,f,c
 16561  016554  0012               	return		;funcret
 16562  016556                     __end_of_xtoa:
 16563                           	opt callstack 0
 16564                           
 16565 ;; *************** function _toupper *****************
 16566 ;; Defined at:
 16567 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 16568 ;; Parameters:    Size  Location     Type
 16569 ;;  c               2  [STACK] int 
 16570 ;; Auto vars:     Size  Location     Type
 16571 ;;		None
 16572 ;; Return value:  Size  Location     Type
 16573 ;;                  2  [STACK] int 
 16574 ;; Registers used:
 16575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 16576 ;; Tracked objects:
 16577 ;;		On entry : 0/2
 16578 ;;		On exit  : 0/0
 16579 ;;		Unchanged: 0/0
 16580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16585 ;;Total ram usage:        0 bytes
 16586 ;; Hardware stack levels used:    1
 16587 ;; Hardware stack levels required when called:   16
 16588 ;; This function calls:
 16589 ;;		_islower
 16590 ;; This function is called by:
 16591 ;;		_xtoa
 16592 ;; This function uses a reentrant model
 16593 ;;
 16594                           
 16595                           	psect	text62
 16596  01B6D2                     __ptext62:
 16597                           	opt callstack 0
 16598  01B6D2                     _toupper:
 16599                           	opt callstack 0
 16600                           
 16601                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16602  01B6D2  52E6               	movf	postinc1,f,c
 16603  01B6D4  52E6               	movf	postinc1,f,c
 16604                           
 16605                           ;stkvar	_c @ sp[(-2)+-2]
 16606                           
 16607                           ;incstack = 0
 16608 ;; hardware stack exceeded
 16609  01B6D6  0EFC               	movlw	-4
 16610  01B6D8  50E3               	movf	plusw1,w,c
 16611  01B6DA  0F9F               	addlw	159
 16612  01B6DC  6E0B               	movwf	(btemp+10)^0,c
 16613  01B6DE  0EFD               	movlw	-3
 16614  01B6E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16615  01B6E6  0EFF               	movlw	255
 16616  01B6E8  220C               	addwfc	(btemp+11)^0,f,c
 16617  01B6EA  500C               	movf	(btemp+11)^0,w,c
 16618  01B6EC  E106               	bnz	u6560
 16619  01B6EE  0E1A               	movlw	26
 16620  01B6F0  5C0B               	subwf	(btemp+10)^0,w,c
 16621  01B6F2  B0D8               	btfsc	status,0,c
 16622  01B6F4  D002               	goto	u6560
 16623  01B6F6  0E01               	movlw	1
 16624  01B6F8  D001               	goto	u6570
 16625  01B6FA                     u6560:
 16626  01B6FA  0E00               	movlw	0
 16627  01B6FC                     u6570:
 16628  01B6FC  6E0B               	movwf	(btemp+10)^0,c
 16629  01B6FE  6A0C               	clrf	(btemp+11)^0,c
 16630                           
 16631                           ;stkvar	_toupper$6829 @ sp[(-2)+0]
 16632  01B700  0EFE               	movlw	-2
 16633  01B702  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16634  01B708  0EFF               	movlw	-1
 16635  01B70A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16636                           
 16637                           ;stkvar	_toupper$6829 @ sp[(-2)+0]
 16638  01B710  0EFE               	movlw	-2
 16639  01B712  006F FF8C  F001    	movff	plusw1,btemp
 16640  01B718  0EFF               	movlw	-1
 16641  01B71A  50E3               	movf	plusw1,w,c
 16642  01B71C  1001               	iorwf	btemp^0,w,c
 16643  01B71E  B4D8               	btfsc	status,2,c
 16644  01B720  D00D               	goto	l8576
 16645                           
 16646                           ;stkvar	_c @ sp[(-2)+-2]
 16647  01B722  0EFC               	movlw	-4
 16648  01B724  006F FF8C  F001    	movff	plusw1,btemp
 16649  01B72A  0EFD               	movlw	-3
 16650  01B72C  006F FF8C  F002    	movff	plusw1,btemp+1
 16651  01B732  0E5F               	movlw	95
 16652  01B734  1601               	andwf	btemp^0,f,c
 16653  01B736  0E00               	movlw	0
 16654  01B738  1602               	andwf	(btemp+1)^0,f,c
 16655  01B73A  D008               	goto	l3631
 16656  01B73C                     l8576:
 16657                           
 16658                           ;stkvar	_c @ sp[(-2)+-2]
 16659  01B73C  0EFC               	movlw	-4
 16660  01B73E  006F FF8C  F001    	movff	plusw1,btemp
 16661  01B744  0EFD               	movlw	-3
 16662  01B746  006F FF8C  F002    	movff	plusw1,btemp+1
 16663  01B74C                     l3631:
 16664                           
 16665                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16666  01B74C  52E5               	movf	postdec1,f,c
 16667  01B74E  52E5               	movf	postdec1,f,c
 16668  01B750  52E5               	movf	postdec1,f,c
 16669  01B752  52E5               	movf	postdec1,f,c
 16670  01B754  0012               	return		;funcret
 16671  01B756                     __end_of_toupper:
 16672                           	opt callstack 0
 16673                           
 16674 ;; *************** function _islower *****************
 16675 ;; Defined at:
 16676 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 16677 ;; Parameters:    Size  Location     Type
 16678 ;;  c               2  [STACK] int 
 16679 ;; Auto vars:     Size  Location     Type
 16680 ;;		None
 16681 ;; Return value:  Size  Location     Type
 16682 ;;                  2  [STACK] int 
 16683 ;; Registers used:
 16684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 16685 ;; Tracked objects:
 16686 ;;		On entry : 0/0
 16687 ;;		On exit  : 0/0
 16688 ;;		Unchanged: 0/0
 16689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16694 ;;Total ram usage:        0 bytes
 16695 ;; Hardware stack levels used:    1
 16696 ;; Hardware stack levels required when called:   15
 16697 ;; This function calls:
 16698 ;;		Nothing
 16699 ;; This function is called by:
 16700 ;;		_toupper
 16701 ;; This function uses a reentrant model
 16702 ;;
 16703                           
 16704                           	psect	text63
 16705  01C6C6                     __ptext63:
 16706                           	opt callstack 0
 16707  01C6C6                     _islower:
 16708                           	opt callstack 0
 16709                           
 16710                           ;stkvar	_c @ sp[(0)+-2]
 16711                           
 16712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16713                           ;incstack = 0
 16714 ;; hardware stack exceeded
 16715  01C6C6  0EFE               	movlw	-2
 16716  01C6C8  50E3               	movf	plusw1,w,c
 16717  01C6CA  0F9F               	addlw	159
 16718  01C6CC  6E0B               	movwf	(btemp+10)^0,c
 16719  01C6CE  0EFF               	movlw	-1
 16720  01C6D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16721  01C6D6  0EFF               	movlw	255
 16722  01C6D8  220C               	addwfc	(btemp+11)^0,f,c
 16723  01C6DA  500C               	movf	(btemp+11)^0,w,c
 16724  01C6DC  E106               	bnz	u6200
 16725  01C6DE  0E1A               	movlw	26
 16726  01C6E0  5C0B               	subwf	(btemp+10)^0,w,c
 16727  01C6E2  B0D8               	btfsc	status,0,c
 16728  01C6E4  D002               	goto	u6200
 16729  01C6E6  0E01               	movlw	1
 16730  01C6E8  D001               	goto	u6210
 16731  01C6EA                     u6200:
 16732  01C6EA  0E00               	movlw	0
 16733  01C6EC                     u6210:
 16734  01C6EC  6E01               	movwf	btemp^0,c
 16735  01C6EE  6A02               	clrf	(btemp+1)^0,c
 16736                           
 16737                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16738  01C6F0  52E5               	movf	postdec1,f,c
 16739  01C6F2  52E5               	movf	postdec1,f,c
 16740  01C6F4  0012               	return		;funcret
 16741  01C6F6                     __end_of_islower:
 16742                           	opt callstack 0
 16743                           
 16744 ;; *************** function _isalpha *****************
 16745 ;; Defined at:
 16746 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 16747 ;; Parameters:    Size  Location     Type
 16748 ;;  c               2  [STACK] int 
 16749 ;; Auto vars:     Size  Location     Type
 16750 ;;		None
 16751 ;; Return value:  Size  Location     Type
 16752 ;;                  2  [STACK] int 
 16753 ;; Registers used:
 16754 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 16755 ;; Tracked objects:
 16756 ;;		On entry : 0/0
 16757 ;;		On exit  : 0/0
 16758 ;;		Unchanged: 0/0
 16759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16764 ;;Total ram usage:        0 bytes
 16765 ;; Hardware stack levels used:    1
 16766 ;; Hardware stack levels required when called:   15
 16767 ;; This function calls:
 16768 ;;		Nothing
 16769 ;; This function is called by:
 16770 ;;		_xtoa
 16771 ;; This function uses a reentrant model
 16772 ;;
 16773                           
 16774                           	psect	text64
 16775  01C276                     __ptext64:
 16776                           	opt callstack 0
 16777  01C276                     _isalpha:
 16778                           	opt callstack 0
 16779                           
 16780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16781                           ;incstack = 0
 16782 ;; hardware stack exceeded
 16783  01C276  0E9F               	movlw	159
 16784  01C278  6E0B               	movwf	(btemp+10)^0,c
 16785  01C27A  0EFF               	movlw	255
 16786  01C27C  6E0C               	movwf	(btemp+11)^0,c
 16787                           
 16788                           ;stkvar	_c @ sp[(0)+-2]
 16789  01C27E  0EFE               	movlw	-2
 16790  01C280  006F FF8C  F009    	movff	plusw1,btemp+8
 16791  01C286  0EFF               	movlw	-1
 16792  01C288  006F FF8C  F00A    	movff	plusw1,btemp+9
 16793  01C28E  0E20               	movlw	32
 16794  01C290  1209               	iorwf	(btemp+8)^0,f,c
 16795  01C292  0E00               	movlw	0
 16796  01C294  120A               	iorwf	(btemp+9)^0,f,c
 16797  01C296  500B               	movf	(btemp+10)^0,w,c
 16798  01C298  2609               	addwf	(btemp+8)^0,f,c
 16799  01C29A  500C               	movf	(btemp+11)^0,w,c
 16800  01C29C  220A               	addwfc	(btemp+9)^0,f,c
 16801  01C29E  500A               	movf	(btemp+9)^0,w,c
 16802  01C2A0  E106               	bnz	u6540
 16803  01C2A2  0E1A               	movlw	26
 16804  01C2A4  5C09               	subwf	(btemp+8)^0,w,c
 16805  01C2A6  B0D8               	btfsc	status,0,c
 16806  01C2A8  D002               	goto	u6540
 16807  01C2AA  0E01               	movlw	1
 16808  01C2AC  D001               	goto	u6550
 16809  01C2AE                     u6540:
 16810  01C2AE  0E00               	movlw	0
 16811  01C2B0                     u6550:
 16812  01C2B0  6E01               	movwf	btemp^0,c
 16813  01C2B2  6A02               	clrf	(btemp+1)^0,c
 16814                           
 16815                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16816  01C2B4  52E5               	movf	postdec1,f,c
 16817  01C2B6  52E5               	movf	postdec1,f,c
 16818  01C2B8  0012               	return		;funcret
 16819  01C2BA                     __end_of_isalpha:
 16820                           	opt callstack 0
 16821                           
 16822 ;; *************** function _utoa *****************
 16823 ;; Defined at:
 16824 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16825 ;; Parameters:    Size  Location     Type
 16826 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16827 ;;		 -> f(6), NULL(0), 
 16828 ;;  d               8  [STACK] unsigned long long 
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;  n               8  [STACK] unsigned long long 
 16831 ;;  i               2  [STACK] int 
 16832 ;;  w               2  [STACK] int 
 16833 ;;  p               2  [STACK] int 
 16834 ;; Return value:  Size  Location     Type
 16835 ;;                  2  [STACK] int 
 16836 ;; Registers used:
 16837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16838 ;; Tracked objects:
 16839 ;;		On entry : 0/0
 16840 ;;		On exit  : 0/0
 16841 ;;		Unchanged: 0/0
 16842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16847 ;;Total ram usage:        0 bytes
 16848 ;; Hardware stack levels used:    1
 16849 ;; Hardware stack levels required when called:   20
 16850 ;; This function calls:
 16851 ;;		___lodiv
 16852 ;;		___lomod
 16853 ;;		_pad
 16854 ;; This function is called by:
 16855 ;;		_vfpfcnvrt
 16856 ;; This function uses a reentrant model
 16857 ;;
 16858                           
 16859                           	psect	text65
 16860  016C46                     __ptext65:
 16861                           	opt callstack 0
 16862  016C46                     _utoa:
 16863                           	opt callstack 0
 16864                           
 16865                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16866  016C46  0E0E               	movlw	14
 16867  016C48  26E1               	addwf	fsr1l,f,c
 16868  016C4A  0E00               	movlw	0
 16869  016C4C  22E2               	addwfc	fsr1h,f,c
 16870                           
 16871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 16872                           
 16873                           ;incstack = 0
 16874 ;; hardware stack exceeded
 16875  016C4E  AE3D               	btfss	(_prec+1)^0,7,c
 16876                           
 16877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 16878  016C50  923E               	bcf	_flags^0,1,c
 16879                           
 16880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 16881  016C52  BE3D               	btfsc	(_prec+1)^0,7,c
 16882  016C54  D005               	goto	u12340
 16883  016C56  503D               	movf	(_prec+1)^0,w,c
 16884  016C58  E110               	bnz	l13154
 16885  016C5A  043C               	decf	_prec^0,w,c
 16886  016C5C  B0D8               	btfsc	status,0,c
 16887  016C5E  D00D               	goto	l13154
 16888  016C60                     u12340:
 16889  016C60  0E01               	movlw	1
 16890  016C62  6E0B               	movwf	(btemp+10)^0,c
 16891  016C64  0E00               	movlw	0
 16892  016C66  6E0C               	movwf	(btemp+11)^0,c
 16893                           
 16894                           ;stkvar	_p @ sp[(-14)+12]
 16895  016C68  0EFE               	movlw	-2
 16896  016C6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16897  016C70  0EFF               	movlw	-1
 16898  016C72  0060  F033  FFE3   	movff	btemp+11,plusw1
 16899  016C78  D008               	goto	l2449
 16900  016C7A                     l13154:
 16901                           
 16902                           ;stkvar	_p @ sp[(-14)+12]
 16903  016C7A  0EFE               	movlw	-2
 16904  016C7C  0060  F0F3  FFE3   	movff	_prec,plusw1
 16905  016C82  0EFF               	movlw	-1
 16906  016C84  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16907  016C8A                     l2449:
 16908                           
 16909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 16910                           ;stkvar	_w @ sp[(-14)+10]
 16911  016C8A  0EFC               	movlw	-4
 16912  016C8C  0060  F0EB  FFE3   	movff	_width,plusw1
 16913  016C92  0EFD               	movlw	-3
 16914  016C94  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16915                           
 16916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 16917                           ;stkvar	_d @ sp[(-14)+-10]
 16918  016C9A  0EE8               	movlw	232
 16919  016C9C  24E1               	addwf	fsr1l,w,c
 16920  016C9E  6ED9               	movwf	fsr2l,c
 16921  016CA0  0EFF               	movlw	255
 16922  016CA2  20E2               	addwfc	fsr1h,w,c
 16923  016CA4  6EDA               	movwf	fsr2h,c
 16924                           
 16925                           ;stkvar	_n @ sp[(-14)+0]
 16926  016CA6  0E08               	movlw	8
 16927  016CA8  6E01               	movwf	btemp^0,c
 16928  016CAA  0EF2               	movlw	-14
 16929  016CAC                     us1235999:
 16930  016CAC  006F FF7B FFE3     	movff	postinc2,plusw1
 16931  016CB2  28E8               	incf	wreg,w,c
 16932  016CB4  2E01               	decfsz	btemp^0,f,c
 16933  016CB6  D7FA               	bra	us1235999
 16934                           
 16935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 16936  016CB8  0E4F               	movlw	79
 16937  016CBA  6E0B               	movwf	(btemp+10)^0,c
 16938  016CBC  0E00               	movlw	0
 16939  016CBE  6E0C               	movwf	(btemp+11)^0,c
 16940                           
 16941                           ;stkvar	_i @ sp[(-14)+8]
 16942  016CC0  0EFA               	movlw	-6
 16943  016CC2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16944  016CC8  0EFB               	movlw	-5
 16945  016CCA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16946                           
 16947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 16948  016CD0  0102               	movlb	2	; () banked
 16949  016CD2  6BE6               	clrf	(_dbuf+79)& (0+255),b
 16950                           
 16951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 16952  016CD4  D0FB               	goto	l13172
 16953  016CD6                     l13162:
 16954                           
 16955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 16956                           ;stkvar	_i @ sp[(-14)+8]
 16957  016CD6  50E1               	movf	fsr1l,w,c
 16958  016CD8  0FFA               	addlw	-6
 16959  016CDA  6ED9               	movwf	fsr2l,c
 16960  016CDC  50E2               	movf	fsr1h,w,c
 16961  016CDE  6EDA               	movwf	fsr2h,c
 16962  016CE0  0EFF               	movlw	255
 16963  016CE2  22DA               	addwfc	fsr2h,f,c
 16964  016CE4  06DE               	decf	postinc2,f,c
 16965  016CE6  0E00               	movlw	0
 16966  016CE8  5ADD               	subwfb	postdec2,f,c
 16967                           
 16968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 16969  016CEA  0E0A               	movlw	10
 16970  016CEC  6EE6               	movwf	postinc1,c
 16971  016CEE  0E00               	movlw	0
 16972  016CF0  6EE6               	movwf	postinc1,c
 16973  016CF2  0E00               	movlw	0
 16974  016CF4  6EE6               	movwf	postinc1,c
 16975  016CF6  0E00               	movlw	0
 16976  016CF8  6EE6               	movwf	postinc1,c
 16977  016CFA  0E00               	movlw	0
 16978  016CFC  6EE6               	movwf	postinc1,c
 16979  016CFE  0E00               	movlw	0
 16980  016D00  6EE6               	movwf	postinc1,c
 16981  016D02  0E00               	movlw	0
 16982  016D04  6EE6               	movwf	postinc1,c
 16983  016D06  0E00               	movlw	0
 16984  016D08  6EE6               	movwf	postinc1,c
 16985                           
 16986                           ;stkvar	_n @ sp[(-22)+0]
 16987  016D0A  50E1               	movf	fsr1l,w,c
 16988  016D0C  0FEA               	addlw	-22
 16989  016D0E  6ED9               	movwf	fsr2l,c
 16990  016D10  50E2               	movf	fsr1h,w,c
 16991  016D12  6EDA               	movwf	fsr2h,c
 16992  016D14  0EFF               	movlw	255
 16993  016D16  22DA               	addwfc	fsr2h,f,c
 16994  016D18  006F FF7B FFE6     	movff	postinc2,postinc1
 16995  016D1E  006F FF7B FFE6     	movff	postinc2,postinc1
 16996  016D24  006F FF7B FFE6     	movff	postinc2,postinc1
 16997  016D2A  006F FF7B FFE6     	movff	postinc2,postinc1
 16998  016D30  006F FF7B FFE6     	movff	postinc2,postinc1
 16999  016D36  006F FF7B FFE6     	movff	postinc2,postinc1
 17000  016D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 17001  016D42  006F FF7B FFE6     	movff	postinc2,postinc1
 17002  016D48  ECDF  F0CD         	call	___lomod	;wreg free
 17003  016D4C  52E5               	movf	postdec1,f,c
 17004  016D4E  006F FF9C  F018    	movff	indf1,btemp+23
 17005  016D54  52E5               	movf	postdec1,f,c
 17006  016D56  006F FF9C  F017    	movff	indf1,btemp+22
 17007  016D5C  52E5               	movf	postdec1,f,c
 17008  016D5E  006F FF9C  F016    	movff	indf1,btemp+21
 17009  016D64  52E5               	movf	postdec1,f,c
 17010  016D66  006F FF9C  F015    	movff	indf1,btemp+20
 17011  016D6C  52E5               	movf	postdec1,f,c
 17012  016D6E  006F FF9C  F014    	movff	indf1,btemp+19
 17013  016D74  52E5               	movf	postdec1,f,c
 17014  016D76  006F FF9C  F013    	movff	indf1,btemp+18
 17015  016D7C  52E5               	movf	postdec1,f,c
 17016  016D7E  006F FF9C  F012    	movff	indf1,btemp+17
 17017  016D84  52E5               	movf	postdec1,f,c
 17018  016D86  006F FF9C  F011    	movff	indf1,btemp+16
 17019  016D8C  0EF8               	movlw	248
 17020  016D8E  26E1               	addwf	fsr1l,f,c
 17021  016D90  0EFF               	movlw	255
 17022  016D92  22E2               	addwfc	fsr1h,f,c
 17023  016D94  0E30               	movlw	48
 17024  016D96  2611               	addwf	(btemp+16)^0,f,c
 17025                           
 17026                           ;stkvar	_i @ sp[(-14)+8]
 17027  016D98  0EFA               	movlw	-6
 17028  016D9A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17029  016DA0  0EFB               	movlw	-5
 17030  016DA2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17031  016DA8  0E97               	movlw	low _dbuf
 17032  016DAA  240B               	addwf	(btemp+10)^0,w,c
 17033  016DAC  6ED9               	movwf	fsr2l,c
 17034  016DAE  0E02               	movlw	high _dbuf
 17035  016DB0  200C               	addwfc	(btemp+11)^0,w,c
 17036  016DB2  6EDA               	movwf	fsr2h,c
 17037  016DB4  0060  F047  FFDF   	movff	btemp+16,indf2
 17038                           
 17039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 17040                           ;stkvar	_p @ sp[(-14)+12]
 17041  016DBA  50E1               	movf	fsr1l,w,c
 17042  016DBC  0FFE               	addlw	-2
 17043  016DBE  6ED9               	movwf	fsr2l,c
 17044  016DC0  50E2               	movf	fsr1h,w,c
 17045  016DC2  6EDA               	movwf	fsr2h,c
 17046  016DC4  0EFF               	movlw	255
 17047  016DC6  22DA               	addwfc	fsr2h,f,c
 17048  016DC8  06DE               	decf	postinc2,f,c
 17049  016DCA  0E00               	movlw	0
 17050  016DCC  5ADD               	subwfb	postdec2,f,c
 17051                           
 17052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 17053                           ;stkvar	_w @ sp[(-14)+10]
 17054  016DCE  50E1               	movf	fsr1l,w,c
 17055  016DD0  0FFC               	addlw	-4
 17056  016DD2  6ED9               	movwf	fsr2l,c
 17057  016DD4  50E2               	movf	fsr1h,w,c
 17058  016DD6  6EDA               	movwf	fsr2h,c
 17059  016DD8  0EFF               	movlw	255
 17060  016DDA  22DA               	addwfc	fsr2h,f,c
 17061  016DDC  06DE               	decf	postinc2,f,c
 17062  016DDE  0E00               	movlw	0
 17063  016DE0  5ADD               	subwfb	postdec2,f,c
 17064                           
 17065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 17066  016DE2  0E0A               	movlw	10
 17067  016DE4  6EE6               	movwf	postinc1,c
 17068  016DE6  0E00               	movlw	0
 17069  016DE8  6EE6               	movwf	postinc1,c
 17070  016DEA  0E00               	movlw	0
 17071  016DEC  6EE6               	movwf	postinc1,c
 17072  016DEE  0E00               	movlw	0
 17073  016DF0  6EE6               	movwf	postinc1,c
 17074  016DF2  0E00               	movlw	0
 17075  016DF4  6EE6               	movwf	postinc1,c
 17076  016DF6  0E00               	movlw	0
 17077  016DF8  6EE6               	movwf	postinc1,c
 17078  016DFA  0E00               	movlw	0
 17079  016DFC  6EE6               	movwf	postinc1,c
 17080  016DFE  0E00               	movlw	0
 17081  016E00  6EE6               	movwf	postinc1,c
 17082                           
 17083                           ;stkvar	_n @ sp[(-22)+0]
 17084  016E02  50E1               	movf	fsr1l,w,c
 17085  016E04  0FEA               	addlw	-22
 17086  016E06  6ED9               	movwf	fsr2l,c
 17087  016E08  50E2               	movf	fsr1h,w,c
 17088  016E0A  6EDA               	movwf	fsr2h,c
 17089  016E0C  0EFF               	movlw	255
 17090  016E0E  22DA               	addwfc	fsr2h,f,c
 17091  016E10  006F FF7B FFE6     	movff	postinc2,postinc1
 17092  016E16  006F FF7B FFE6     	movff	postinc2,postinc1
 17093  016E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 17094  016E22  006F FF7B FFE6     	movff	postinc2,postinc1
 17095  016E28  006F FF7B FFE6     	movff	postinc2,postinc1
 17096  016E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 17097  016E34  006F FF7B FFE6     	movff	postinc2,postinc1
 17098  016E3A  006F FF7B FFE6     	movff	postinc2,postinc1
 17099  016E40  ECBC  F0C9         	call	___lodiv	;wreg free
 17100  016E44  52E5               	movf	postdec1,f,c
 17101  016E46  006F FF9C  F018    	movff	indf1,btemp+23
 17102  016E4C  52E5               	movf	postdec1,f,c
 17103  016E4E  006F FF9C  F017    	movff	indf1,btemp+22
 17104  016E54  52E5               	movf	postdec1,f,c
 17105  016E56  006F FF9C  F016    	movff	indf1,btemp+21
 17106  016E5C  52E5               	movf	postdec1,f,c
 17107  016E5E  006F FF9C  F015    	movff	indf1,btemp+20
 17108  016E64  52E5               	movf	postdec1,f,c
 17109  016E66  006F FF9C  F014    	movff	indf1,btemp+19
 17110  016E6C  52E5               	movf	postdec1,f,c
 17111  016E6E  006F FF9C  F013    	movff	indf1,btemp+18
 17112  016E74  52E5               	movf	postdec1,f,c
 17113  016E76  006F FF9C  F012    	movff	indf1,btemp+17
 17114  016E7C  52E5               	movf	postdec1,f,c
 17115  016E7E  006F FF9C  F011    	movff	indf1,btemp+16
 17116  016E84  0EF8               	movlw	248
 17117  016E86  26E1               	addwf	fsr1l,f,c
 17118  016E88  0EFF               	movlw	255
 17119  016E8A  22E2               	addwfc	fsr1h,f,c
 17120                           
 17121                           ;stkvar	_n @ sp[(-14)+0]
 17122  016E8C  0EF2               	movlw	-14
 17123  016E8E  0060  F047  FFE3   	movff	btemp+16,plusw1
 17124  016E94  0EF3               	movlw	-13
 17125  016E96  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17126  016E9C  0EF4               	movlw	-12
 17127  016E9E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17128  016EA4  0EF5               	movlw	-11
 17129  016EA6  0060  F053  FFE3   	movff	btemp+19,plusw1
 17130  016EAC  0EF6               	movlw	-10
 17131  016EAE  0060  F057  FFE3   	movff	btemp+20,plusw1
 17132  016EB4  0EF7               	movlw	-9
 17133  016EB6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17134  016EBC  0EF8               	movlw	-8
 17135  016EBE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17136  016EC4  0EF9               	movlw	-7
 17137  016EC6  0060  F063  FFE3   	movff	btemp+23,plusw1
 17138  016ECC                     l13172:
 17139                           
 17140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 17141                           ;stkvar	_i @ sp[(-14)+8]
 17142  016ECC  0EFA               	movlw	-6
 17143  016ECE  006F FF8C  F001    	movff	plusw1,btemp
 17144  016ED4  0EFB               	movlw	-5
 17145  016ED6  50E3               	movf	plusw1,w,c
 17146  016ED8  1001               	iorwf	btemp^0,w,c
 17147  016EDA  B4D8               	btfsc	status,2,c
 17148  016EDC  D02F               	goto	u12400
 17149                           
 17150                           ;stkvar	_n @ sp[(-14)+0]
 17151  016EDE  0EF2               	movlw	-14
 17152  016EE0  50E3               	movf	plusw1,w,c
 17153  016EE2  E115               	bnz	u12371
 17154  016EE4  0EF3               	movlw	-13
 17155  016EE6  50E3               	movf	plusw1,w,c
 17156  016EE8  E112               	bnz	u12371
 17157  016EEA  0EF4               	movlw	-12
 17158  016EEC  50E3               	movf	plusw1,w,c
 17159  016EEE  E10F               	bnz	u12371
 17160  016EF0  0EF5               	movlw	-11
 17161  016EF2  50E3               	movf	plusw1,w,c
 17162  016EF4  E10C               	bnz	u12371
 17163  016EF6  0EF6               	movlw	-10
 17164  016EF8  50E3               	movf	plusw1,w,c
 17165  016EFA  E109               	bnz	u12371
 17166  016EFC  0EF7               	movlw	-9
 17167  016EFE  50E3               	movf	plusw1,w,c
 17168  016F00  E106               	bnz	u12371
 17169  016F02  0EF8               	movlw	-8
 17170  016F04  50E3               	movf	plusw1,w,c
 17171  016F06  E103               	bnz	u12371
 17172  016F08  0EF9               	movlw	-7
 17173  016F0A  50E3               	movf	plusw1,w,c
 17174  016F0C  A4D8               	btfss	status,2,c
 17175  016F0E                     u12371:
 17176  016F0E  D6E3               	goto	l13162
 17177                           
 17178                           ;stkvar	_p @ sp[(-14)+12]
 17179  016F10  0EFF               	movlw	-1
 17180  016F12  BEE3               	btfsc	plusw1,7,c
 17181  016F14  D007               	goto	u12380
 17182  016F16  0EFF               	movlw	-1
 17183  016F18  50E3               	movf	plusw1,w,c
 17184  016F1A  E103               	bnz	u12381
 17185  016F1C  0EFE               	movlw	-2
 17186  016F1E  04E3               	decf	plusw1,w,c
 17187  016F20  B0D8               	btfsc	status,0,c
 17188  016F22                     u12381:
 17189  016F22  D6D9               	goto	l13162
 17190  016F24                     u12380:
 17191                           
 17192                           ;stkvar	_w @ sp[(-14)+10]
 17193  016F24  0EFD               	movlw	-3
 17194  016F26  BEE3               	btfsc	plusw1,7,c
 17195  016F28  D009               	goto	u12400
 17196  016F2A  0EFD               	movlw	-3
 17197  016F2C  50E3               	movf	plusw1,w,c
 17198  016F2E  E104               	bnz	u12390
 17199  016F30  0EFC               	movlw	-4
 17200  016F32  04E3               	decf	plusw1,w,c
 17201  016F34  A0D8               	btfss	status,0,c
 17202  016F36  D002               	goto	u12400
 17203  016F38                     u12390:
 17204  016F38  B23E               	btfsc	_flags^0,1,c
 17205  016F3A  D6CD               	goto	l13162
 17206  016F3C                     u12400:
 17207                           
 17208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 17209                           ;stkvar	_w @ sp[(-14)+10]
 17210  016F3C  0EFC               	movlw	-4
 17211  016F3E  006F FF8F FFE6     	movff	plusw1,postinc1
 17212  016F44  006F FF8F FFE6     	movff	plusw1,postinc1
 17213                           
 17214                           ;stkvar	_i @ sp[(-16)+8]
 17215  016F4A  0E97               	movlw	low _dbuf
 17216  016F4C  6E0B               	movwf	(btemp+10)^0,c
 17217  016F4E  0E02               	movlw	high _dbuf
 17218  016F50  6E0C               	movwf	(btemp+11)^0,c
 17219  016F52  0EF8               	movlw	-8
 17220  016F54  50E3               	movf	plusw1,w,c
 17221  016F56  260B               	addwf	(btemp+10)^0,f,c
 17222  016F58  0EF9               	movlw	-7
 17223  016F5A  50E3               	movf	plusw1,w,c
 17224  016F5C  220C               	addwfc	(btemp+11)^0,f,c
 17225  016F5E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17226  016F64  0060  F033  FFE6   	movff	btemp+11,postinc1
 17227                           
 17228                           ;stkvar	_fp @ sp[(-18)+-2]
 17229  016F6A  0EEC               	movlw	-20
 17230  016F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 17231  016F72  006F FF8F FFE6     	movff	plusw1,postinc1
 17232  016F78  EC5C  F0D1         	call	_pad	;wreg free
 17233                           
 17234                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17235  016F7C  0EE8               	movlw	232
 17236  016F7E  26E1               	addwf	fsr1l,f,c
 17237  016F80  0EFF               	movlw	255
 17238  016F82  22E2               	addwfc	fsr1h,f,c
 17239  016F84  0012               	return		;funcret
 17240  016F86                     __end_of_utoa:
 17241                           	opt callstack 0
 17242                           
 17243 ;; *************** function ___lomod *****************
 17244 ;; Defined at:
 17245 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 17246 ;; Parameters:    Size  Location     Type
 17247 ;;  dividend        8  [STACK] unsigned long long 
 17248 ;;  divisor         8  [STACK] unsigned long long 
 17249 ;; Auto vars:     Size  Location     Type
 17250 ;;  counter         1  [STACK] unsigned char 
 17251 ;; Return value:  Size  Location     Type
 17252 ;;                  8  [STACK] unsigned long long 
 17253 ;; Registers used:
 17254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17255 ;; Tracked objects:
 17256 ;;		On entry : 0/2
 17257 ;;		On exit  : 0/0
 17258 ;;		Unchanged: 0/0
 17259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17264 ;;Total ram usage:        0 bytes
 17265 ;; Hardware stack levels used:    1
 17266 ;; Hardware stack levels required when called:   15
 17267 ;; This function calls:
 17268 ;;		Nothing
 17269 ;; This function is called by:
 17270 ;;		_utoa
 17271 ;; This function uses a reentrant model
 17272 ;;
 17273                           
 17274                           	psect	text66
 17275  019BBE                     __ptext66:
 17276                           	opt callstack 0
 17277  019BBE                     ___lomod:
 17278                           	opt callstack 0
 17279                           
 17280                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17281  019BBE  52E6               	movf	postinc1,f,c
 17282                           
 17283                           ;stkvar	_divisor @ sp[(-1)+-16]
 17284                           
 17285                           ;incstack = 0
 17286 ;; hardware stack exceeded
 17287  019BC0  0EEF               	movlw	-17
 17288  019BC2  50E3               	movf	plusw1,w,c
 17289  019BC4  E116               	bnz	u7690
 17290  019BC6  0EF0               	movlw	-16
 17291  019BC8  50E3               	movf	plusw1,w,c
 17292  019BCA  E113               	bnz	u7690
 17293  019BCC  0EF1               	movlw	-15
 17294  019BCE  50E3               	movf	plusw1,w,c
 17295  019BD0  E110               	bnz	u7690
 17296  019BD2  0EF2               	movlw	-14
 17297  019BD4  50E3               	movf	plusw1,w,c
 17298  019BD6  E10D               	bnz	u7690
 17299  019BD8  0EF3               	movlw	-13
 17300  019BDA  50E3               	movf	plusw1,w,c
 17301  019BDC  E10A               	bnz	u7690
 17302  019BDE  0EF4               	movlw	-12
 17303  019BE0  50E3               	movf	plusw1,w,c
 17304  019BE2  E107               	bnz	u7690
 17305  019BE4  0EF5               	movlw	-11
 17306  019BE6  50E3               	movf	plusw1,w,c
 17307  019BE8  E104               	bnz	u7690
 17308  019BEA  0EF6               	movlw	-10
 17309  019BEC  50E3               	movf	plusw1,w,c
 17310  019BEE  B4D8               	btfsc	status,2,c
 17311  019BF0  D075               	goto	u7720
 17312  019BF2                     u7690:
 17313                           
 17314                           ;stkvar	_counter @ sp[(-1)+0]
 17315  019BF2  0EFF               	movlw	-1
 17316  019BF4  6AE3               	clrf	plusw1,c
 17317  019BF6  D012               	goto	L18
 17318  019BF8                     l9186:
 17319                           
 17320                           ;stkvar	_divisor @ sp[(-1)+-16]
 17321  019BF8  90D8               	bcf	status,0,c
 17322  019BFA  0EEF               	movlw	-17
 17323  019BFC  36E3               	rlcf	plusw1,f,c
 17324  019BFE  0EF0               	movlw	-16
 17325  019C00  36E3               	rlcf	plusw1,f,c
 17326  019C02  0EF1               	movlw	-15
 17327  019C04  36E3               	rlcf	plusw1,f,c
 17328  019C06  0EF2               	movlw	-14
 17329  019C08  36E3               	rlcf	plusw1,f,c
 17330  019C0A  0EF3               	movlw	-13
 17331  019C0C  36E3               	rlcf	plusw1,f,c
 17332  019C0E  0EF4               	movlw	-12
 17333  019C10  36E3               	rlcf	plusw1,f,c
 17334  019C12  0EF5               	movlw	-11
 17335  019C14  36E3               	rlcf	plusw1,f,c
 17336  019C16  0EF6               	movlw	-10
 17337  019C18  36E3               	rlcf	plusw1,f,c
 17338                           
 17339                           ;stkvar	_counter @ sp[(-1)+0]
 17340  019C1A  0EFF               	movlw	-1
 17341  019C1C                     L18:
 17342  019C1C  2AE3               	incf	plusw1,f,c
 17343                           
 17344                           ;stkvar	_divisor @ sp[(-1)+-16]
 17345  019C1E  0EF6               	movlw	-10
 17346  019C20  AEE3               	btfss	plusw1,7,c
 17347  019C22  D7EA               	goto	l9186
 17348  019C24                     u7700:
 17349                           
 17350                           ;stkvar	_divisor @ sp[(-1)+-16]
 17351                           ;stkvar	_dividend @ sp[(-1)+-8]
 17352  019C24  50E1               	movf	fsr1l,w,c
 17353  019C26  0FF7               	addlw	-9
 17354  019C28  6ED9               	movwf	fsr2l,c
 17355  019C2A  50E2               	movf	fsr1h,w,c
 17356  019C2C  6EDA               	movwf	fsr2h,c
 17357  019C2E  0EFF               	movlw	255
 17358  019C30  22DA               	addwfc	fsr2h,f,c
 17359  019C32  0EEF               	movlw	-17
 17360  019C34  50E3               	movf	plusw1,w,c
 17361  019C36  5CDE               	subwf	postinc2,w,c
 17362  019C38  0EF0               	movlw	-16
 17363  019C3A  50E3               	movf	plusw1,w,c
 17364  019C3C  58DE               	subwfb	postinc2,w,c
 17365  019C3E  0EF1               	movlw	-15
 17366  019C40  50E3               	movf	plusw1,w,c
 17367  019C42  58DE               	subwfb	postinc2,w,c
 17368  019C44  0EF2               	movlw	-14
 17369  019C46  50E3               	movf	plusw1,w,c
 17370  019C48  58DE               	subwfb	postinc2,w,c
 17371  019C4A  0EF3               	movlw	-13
 17372  019C4C  50E3               	movf	plusw1,w,c
 17373  019C4E  58DE               	subwfb	postinc2,w,c
 17374  019C50  0EF4               	movlw	-12
 17375  019C52  50E3               	movf	plusw1,w,c
 17376  019C54  58DE               	subwfb	postinc2,w,c
 17377  019C56  0EF5               	movlw	-11
 17378  019C58  50E3               	movf	plusw1,w,c
 17379  019C5A  58DE               	subwfb	postinc2,w,c
 17380  019C5C  0EF6               	movlw	-10
 17381  019C5E  50E3               	movf	plusw1,w,c
 17382  019C60  58DE               	subwfb	postinc2,w,c
 17383  019C62  A0D8               	btfss	status,0,c
 17384  019C64  D01F               	goto	l9194
 17385                           
 17386                           ;stkvar	_divisor @ sp[(-1)+-16]
 17387                           ;stkvar	_dividend @ sp[(-1)+-8]
 17388  019C66  50E1               	movf	fsr1l,w,c
 17389  019C68  0FF7               	addlw	-9
 17390  019C6A  6ED9               	movwf	fsr2l,c
 17391  019C6C  50E2               	movf	fsr1h,w,c
 17392  019C6E  6EDA               	movwf	fsr2h,c
 17393  019C70  0EFF               	movlw	255
 17394  019C72  22DA               	addwfc	fsr2h,f,c
 17395  019C74  0EEF               	movlw	-17
 17396  019C76  50E3               	movf	plusw1,w,c
 17397  019C78  5EDE               	subwf	postinc2,f,c
 17398  019C7A  0EF0               	movlw	-16
 17399  019C7C  50E3               	movf	plusw1,w,c
 17400  019C7E  5ADE               	subwfb	postinc2,f,c
 17401  019C80  0EF1               	movlw	-15
 17402  019C82  50E3               	movf	plusw1,w,c
 17403  019C84  5ADE               	subwfb	postinc2,f,c
 17404  019C86  0EF2               	movlw	-14
 17405  019C88  50E3               	movf	plusw1,w,c
 17406  019C8A  5ADE               	subwfb	postinc2,f,c
 17407  019C8C  0EF3               	movlw	-13
 17408  019C8E  50E3               	movf	plusw1,w,c
 17409  019C90  5ADE               	subwfb	postinc2,f,c
 17410  019C92  0EF4               	movlw	-12
 17411  019C94  50E3               	movf	plusw1,w,c
 17412  019C96  5ADE               	subwfb	postinc2,f,c
 17413  019C98  0EF5               	movlw	-11
 17414  019C9A  50E3               	movf	plusw1,w,c
 17415  019C9C  5ADE               	subwfb	postinc2,f,c
 17416  019C9E  0EF6               	movlw	-10
 17417  019CA0  50E3               	movf	plusw1,w,c
 17418  019CA2  5ADE               	subwfb	postinc2,f,c
 17419  019CA4                     l9194:
 17420                           
 17421                           ;stkvar	_divisor @ sp[(-1)+-16]
 17422  019CA4  90D8               	bcf	status,0,c
 17423  019CA6  0EF6               	movlw	-10
 17424  019CA8  32E3               	rrcf	plusw1,f,c
 17425  019CAA  0EF5               	movlw	-11
 17426  019CAC  32E3               	rrcf	plusw1,f,c
 17427  019CAE  0EF4               	movlw	-12
 17428  019CB0  32E3               	rrcf	plusw1,f,c
 17429  019CB2  0EF3               	movlw	-13
 17430  019CB4  32E3               	rrcf	plusw1,f,c
 17431  019CB6  0EF2               	movlw	-14
 17432  019CB8  32E3               	rrcf	plusw1,f,c
 17433  019CBA  0EF1               	movlw	-15
 17434  019CBC  32E3               	rrcf	plusw1,f,c
 17435  019CBE  0EF0               	movlw	-16
 17436  019CC0  32E3               	rrcf	plusw1,f,c
 17437  019CC2  0EEF               	movlw	-17
 17438  019CC4  32E3               	rrcf	plusw1,f,c
 17439                           
 17440                           ;stkvar	_counter @ sp[(-1)+0]
 17441  019CC6  0EFF               	movlw	-1
 17442  019CC8  50E3               	movf	plusw1,w,c
 17443  019CCA  6E01               	movwf	btemp^0,c
 17444  019CCC  0E01               	movlw	1
 17445  019CCE  5E01               	subwf	btemp^0,f,c
 17446  019CD0  0EFF               	movlw	-1
 17447  019CD2  0060  F007  FFE3   	movff	btemp,plusw1
 17448  019CD8  A4D8               	btfss	status,2,c
 17449  019CDA  D7A4               	goto	u7700
 17450  019CDC                     u7720:
 17451                           
 17452                           ;stkvar	_dividend @ sp[(-1)+-8]
 17453  019CDC  0EF7               	movlw	247
 17454  019CDE  24E1               	addwf	fsr1l,w,c
 17455  019CE0  6ED9               	movwf	fsr2l,c
 17456  019CE2  0EFF               	movlw	255
 17457  019CE4  20E2               	addwfc	fsr1h,w,c
 17458  019CE6  6EDA               	movwf	fsr2h,c
 17459                           
 17460                           ;stkvar	?___lomod @ sp[(-1)+-8]
 17461  019CE8  0E08               	movlw	8
 17462  019CEA  6E01               	movwf	btemp^0,c
 17463  019CEC  0EF7               	movlw	-9
 17464  019CEE                     us773999:
 17465  019CEE  006F FF7B FFE3     	movff	postinc2,plusw1
 17466  019CF4  28E8               	incf	wreg,w,c
 17467  019CF6  2E01               	decfsz	btemp^0,f,c
 17468  019CF8  D7FA               	bra	us773999
 17469                           
 17470                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17471  019CFA  52E5               	movf	postdec1,f,c
 17472  019CFC  0012               	return		;funcret
 17473  019CFE                     __end_of___lomod:
 17474                           	opt callstack 0
 17475                           
 17476 ;; *************** function ___lodiv *****************
 17477 ;; Defined at:
 17478 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 17479 ;; Parameters:    Size  Location     Type
 17480 ;;  dividend        8  [STACK] unsigned long long 
 17481 ;;  divisor         8  [STACK] unsigned long long 
 17482 ;; Auto vars:     Size  Location     Type
 17483 ;;  quotient        8  [STACK] unsigned long long 
 17484 ;;  counter         1  [STACK] unsigned char 
 17485 ;; Return value:  Size  Location     Type
 17486 ;;                  8  [STACK] unsigned long long 
 17487 ;; Registers used:
 17488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17489 ;; Tracked objects:
 17490 ;;		On entry : 0/2
 17491 ;;		On exit  : 0/0
 17492 ;;		Unchanged: 0/0
 17493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17498 ;;Total ram usage:        0 bytes
 17499 ;; Hardware stack levels used:    1
 17500 ;; Hardware stack levels required when called:   15
 17501 ;; This function calls:
 17502 ;;		Nothing
 17503 ;; This function is called by:
 17504 ;;		_utoa
 17505 ;; This function uses a reentrant model
 17506 ;;
 17507                           
 17508                           	psect	text67
 17509  019378                     __ptext67:
 17510                           	opt callstack 0
 17511  019378                     ___lodiv:
 17512                           	opt callstack 0
 17513                           
 17514                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17515  019378  0E09               	movlw	9
 17516  01937A  26E1               	addwf	fsr1l,f,c
 17517  01937C  0E00               	movlw	0
 17518  01937E  22E2               	addwfc	fsr1h,f,c
 17519                           
 17520                           ;stkvar	_quotient @ sp[(-9)+0]
 17521                           
 17522                           ;incstack = 0
 17523 ;; hardware stack exceeded
 17524  019380  0E07               	movlw	7
 17525  019382  6E01               	movwf	btemp^0,c
 17526  019384  0EF7               	movlw	-9
 17527  019386                     u7631:
 17528  019386  6AE3               	clrf	plusw1,c
 17529  019388  2AE8               	incf	wreg,f,c
 17530  01938A  0601               	decf	btemp^0,f,c
 17531  01938C  E2FC               	bc	u7631
 17532                           
 17533                           ;stkvar	_divisor @ sp[(-9)+-16]
 17534  01938E  0EE7               	movlw	-25
 17535  019390  50E3               	movf	plusw1,w,c
 17536  019392  E116               	bnz	u7640
 17537  019394  0EE8               	movlw	-24
 17538  019396  50E3               	movf	plusw1,w,c
 17539  019398  E113               	bnz	u7640
 17540  01939A  0EE9               	movlw	-23
 17541  01939C  50E3               	movf	plusw1,w,c
 17542  01939E  E110               	bnz	u7640
 17543  0193A0  0EEA               	movlw	-22
 17544  0193A2  50E3               	movf	plusw1,w,c
 17545  0193A4  E10D               	bnz	u7640
 17546  0193A6  0EEB               	movlw	-21
 17547  0193A8  50E3               	movf	plusw1,w,c
 17548  0193AA  E10A               	bnz	u7640
 17549  0193AC  0EEC               	movlw	-20
 17550  0193AE  50E3               	movf	plusw1,w,c
 17551  0193B0  E107               	bnz	u7640
 17552  0193B2  0EED               	movlw	-19
 17553  0193B4  50E3               	movf	plusw1,w,c
 17554  0193B6  E104               	bnz	u7640
 17555  0193B8  0EEE               	movlw	-18
 17556  0193BA  50E3               	movf	plusw1,w,c
 17557  0193BC  B4D8               	btfsc	status,2,c
 17558  0193BE  D088               	goto	u7670
 17559  0193C0                     u7640:
 17560                           
 17561                           ;stkvar	_counter @ sp[(-9)+8]
 17562  0193C0  0EFF               	movlw	-1
 17563  0193C2  6AE3               	clrf	plusw1,c
 17564  0193C4  D012               	goto	L19
 17565  0193C6                     l9162:
 17566                           
 17567                           ;stkvar	_divisor @ sp[(-9)+-16]
 17568  0193C6  90D8               	bcf	status,0,c
 17569  0193C8  0EE7               	movlw	-25
 17570  0193CA  36E3               	rlcf	plusw1,f,c
 17571  0193CC  0EE8               	movlw	-24
 17572  0193CE  36E3               	rlcf	plusw1,f,c
 17573  0193D0  0EE9               	movlw	-23
 17574  0193D2  36E3               	rlcf	plusw1,f,c
 17575  0193D4  0EEA               	movlw	-22
 17576  0193D6  36E3               	rlcf	plusw1,f,c
 17577  0193D8  0EEB               	movlw	-21
 17578  0193DA  36E3               	rlcf	plusw1,f,c
 17579  0193DC  0EEC               	movlw	-20
 17580  0193DE  36E3               	rlcf	plusw1,f,c
 17581  0193E0  0EED               	movlw	-19
 17582  0193E2  36E3               	rlcf	plusw1,f,c
 17583  0193E4  0EEE               	movlw	-18
 17584  0193E6  36E3               	rlcf	plusw1,f,c
 17585                           
 17586                           ;stkvar	_counter @ sp[(-9)+8]
 17587  0193E8  0EFF               	movlw	-1
 17588  0193EA                     L19:
 17589  0193EA  2AE3               	incf	plusw1,f,c
 17590                           
 17591                           ;stkvar	_divisor @ sp[(-9)+-16]
 17592  0193EC  0EEE               	movlw	-18
 17593  0193EE  AEE3               	btfss	plusw1,7,c
 17594  0193F0  D7EA               	goto	l9162
 17595  0193F2                     u7650:
 17596                           
 17597                           ;stkvar	_quotient @ sp[(-9)+0]
 17598  0193F2  90D8               	bcf	status,0,c
 17599  0193F4  0EF7               	movlw	-9
 17600  0193F6  36E3               	rlcf	plusw1,f,c
 17601  0193F8  0EF8               	movlw	-8
 17602  0193FA  36E3               	rlcf	plusw1,f,c
 17603  0193FC  0EF9               	movlw	-7
 17604  0193FE  36E3               	rlcf	plusw1,f,c
 17605  019400  0EFA               	movlw	-6
 17606  019402  36E3               	rlcf	plusw1,f,c
 17607  019404  0EFB               	movlw	-5
 17608  019406  36E3               	rlcf	plusw1,f,c
 17609  019408  0EFC               	movlw	-4
 17610  01940A  36E3               	rlcf	plusw1,f,c
 17611  01940C  0EFD               	movlw	-3
 17612  01940E  36E3               	rlcf	plusw1,f,c
 17613  019410  0EFE               	movlw	-2
 17614  019412  36E3               	rlcf	plusw1,f,c
 17615                           
 17616                           ;stkvar	_divisor @ sp[(-9)+-16]
 17617                           ;stkvar	_dividend @ sp[(-9)+-8]
 17618  019414  50E1               	movf	fsr1l,w,c
 17619  019416  0FEF               	addlw	-17
 17620  019418  6ED9               	movwf	fsr2l,c
 17621  01941A  50E2               	movf	fsr1h,w,c
 17622  01941C  6EDA               	movwf	fsr2h,c
 17623  01941E  0EFF               	movlw	255
 17624  019420  22DA               	addwfc	fsr2h,f,c
 17625  019422  0EE7               	movlw	-25
 17626  019424  50E3               	movf	plusw1,w,c
 17627  019426  5CDE               	subwf	postinc2,w,c
 17628  019428  0EE8               	movlw	-24
 17629  01942A  50E3               	movf	plusw1,w,c
 17630  01942C  58DE               	subwfb	postinc2,w,c
 17631  01942E  0EE9               	movlw	-23
 17632  019430  50E3               	movf	plusw1,w,c
 17633  019432  58DE               	subwfb	postinc2,w,c
 17634  019434  0EEA               	movlw	-22
 17635  019436  50E3               	movf	plusw1,w,c
 17636  019438  58DE               	subwfb	postinc2,w,c
 17637  01943A  0EEB               	movlw	-21
 17638  01943C  50E3               	movf	plusw1,w,c
 17639  01943E  58DE               	subwfb	postinc2,w,c
 17640  019440  0EEC               	movlw	-20
 17641  019442  50E3               	movf	plusw1,w,c
 17642  019444  58DE               	subwfb	postinc2,w,c
 17643  019446  0EED               	movlw	-19
 17644  019448  50E3               	movf	plusw1,w,c
 17645  01944A  58DE               	subwfb	postinc2,w,c
 17646  01944C  0EEE               	movlw	-18
 17647  01944E  50E3               	movf	plusw1,w,c
 17648  019450  58DE               	subwfb	postinc2,w,c
 17649  019452  A0D8               	btfss	status,0,c
 17650  019454  D021               	goto	l9174
 17651                           
 17652                           ;stkvar	_divisor @ sp[(-9)+-16]
 17653                           ;stkvar	_dividend @ sp[(-9)+-8]
 17654  019456  50E1               	movf	fsr1l,w,c
 17655  019458  0FEF               	addlw	-17
 17656  01945A  6ED9               	movwf	fsr2l,c
 17657  01945C  50E2               	movf	fsr1h,w,c
 17658  01945E  6EDA               	movwf	fsr2h,c
 17659  019460  0EFF               	movlw	255
 17660  019462  22DA               	addwfc	fsr2h,f,c
 17661  019464  0EE7               	movlw	-25
 17662  019466  50E3               	movf	plusw1,w,c
 17663  019468  5EDE               	subwf	postinc2,f,c
 17664  01946A  0EE8               	movlw	-24
 17665  01946C  50E3               	movf	plusw1,w,c
 17666  01946E  5ADE               	subwfb	postinc2,f,c
 17667  019470  0EE9               	movlw	-23
 17668  019472  50E3               	movf	plusw1,w,c
 17669  019474  5ADE               	subwfb	postinc2,f,c
 17670  019476  0EEA               	movlw	-22
 17671  019478  50E3               	movf	plusw1,w,c
 17672  01947A  5ADE               	subwfb	postinc2,f,c
 17673  01947C  0EEB               	movlw	-21
 17674  01947E  50E3               	movf	plusw1,w,c
 17675  019480  5ADE               	subwfb	postinc2,f,c
 17676  019482  0EEC               	movlw	-20
 17677  019484  50E3               	movf	plusw1,w,c
 17678  019486  5ADE               	subwfb	postinc2,f,c
 17679  019488  0EED               	movlw	-19
 17680  01948A  50E3               	movf	plusw1,w,c
 17681  01948C  5ADE               	subwfb	postinc2,f,c
 17682  01948E  0EEE               	movlw	-18
 17683  019490  50E3               	movf	plusw1,w,c
 17684  019492  5ADE               	subwfb	postinc2,f,c
 17685                           
 17686                           ;stkvar	_quotient @ sp[(-9)+0]
 17687  019494  0EF7               	movlw	-9
 17688  019496  80E3               	bsf	plusw1,0,c
 17689  019498                     l9174:
 17690                           
 17691                           ;stkvar	_divisor @ sp[(-9)+-16]
 17692  019498  90D8               	bcf	status,0,c
 17693  01949A  0EEE               	movlw	-18
 17694  01949C  32E3               	rrcf	plusw1,f,c
 17695  01949E  0EED               	movlw	-19
 17696  0194A0  32E3               	rrcf	plusw1,f,c
 17697  0194A2  0EEC               	movlw	-20
 17698  0194A4  32E3               	rrcf	plusw1,f,c
 17699  0194A6  0EEB               	movlw	-21
 17700  0194A8  32E3               	rrcf	plusw1,f,c
 17701  0194AA  0EEA               	movlw	-22
 17702  0194AC  32E3               	rrcf	plusw1,f,c
 17703  0194AE  0EE9               	movlw	-23
 17704  0194B0  32E3               	rrcf	plusw1,f,c
 17705  0194B2  0EE8               	movlw	-24
 17706  0194B4  32E3               	rrcf	plusw1,f,c
 17707  0194B6  0EE7               	movlw	-25
 17708  0194B8  32E3               	rrcf	plusw1,f,c
 17709                           
 17710                           ;stkvar	_counter @ sp[(-9)+8]
 17711  0194BA  0EFF               	movlw	-1
 17712  0194BC  50E3               	movf	plusw1,w,c
 17713  0194BE  6E01               	movwf	btemp^0,c
 17714  0194C0  0E01               	movlw	1
 17715  0194C2  5E01               	subwf	btemp^0,f,c
 17716  0194C4  0EFF               	movlw	-1
 17717  0194C6  0060  F007  FFE3   	movff	btemp,plusw1
 17718  0194CC  A4D8               	btfss	status,2,c
 17719  0194CE  D791               	goto	u7650
 17720  0194D0                     u7670:
 17721                           
 17722                           ;stkvar	_quotient @ sp[(-9)+0]
 17723  0194D0  0EF7               	movlw	247
 17724  0194D2  24E1               	addwf	fsr1l,w,c
 17725  0194D4  6ED9               	movwf	fsr2l,c
 17726  0194D6  0EFF               	movlw	255
 17727  0194D8  20E2               	addwfc	fsr1h,w,c
 17728  0194DA  6EDA               	movwf	fsr2h,c
 17729                           
 17730                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 17731  0194DC  0E08               	movlw	8
 17732  0194DE  6E01               	movwf	btemp^0,c
 17733  0194E0  0EEF               	movlw	-17
 17734  0194E2                     us768999:
 17735  0194E2  006F FF7B FFE3     	movff	postinc2,plusw1
 17736  0194E8  28E8               	incf	wreg,w,c
 17737  0194EA  2E01               	decfsz	btemp^0,f,c
 17738  0194EC  D7FA               	bra	us768999
 17739                           
 17740                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17741  0194EE  0EF7               	movlw	247
 17742  0194F0  26E1               	addwf	fsr1l,f,c
 17743  0194F2  0EFF               	movlw	255
 17744  0194F4  22E2               	addwfc	fsr1h,f,c
 17745  0194F6  0012               	return		;funcret
 17746  0194F8                     __end_of___lodiv:
 17747                           	opt callstack 0
 17748                           
 17749 ;; *************** function _strncmp *****************
 17750 ;; Defined at:
 17751 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 17752 ;; Parameters:    Size  Location     Type
 17753 ;;  _l              2  [STACK] PTR const unsigned char 
 17754 ;;		 -> ct(3), STR_80(127), STR_78(3), STR_77(3), 
 17755 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 17756 ;;		 -> STR_72(19), STR_71(19), STR_70(24), STR_69(15), 
 17757 ;;		 -> STR_68(15), STR_67(15), STR_66(10), STR_65(10), 
 17758 ;;		 -> STR_64(19), STR_63(19), STR_60(3), STR_59(3), 
 17759 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 17760 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 17761 ;;		 -> STR_50(21), STR_49(20), STR_48(20), STR_47(21), 
 17762 ;;		 -> STR_46(21), STR_45(21), STR_44(22), STR_43(22), 
 17763 ;;		 -> STR_42(22), STR_41(23), STR_40(23), STR_39(23), 
 17764 ;;		 -> STR_38(29), STR_37(23), STR_36(23), STR_35(22), 
 17765 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 17766 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 17767 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(17), 
 17768 ;;		 -> STR_22(16), STR_21(16), STR_20(26), STR_19(26), 
 17769 ;;		 -> STR_18(22), STR_17(21), STR_16(21), STR_15(21), 
 17770 ;;		 -> STR_14(21), STR_13(22), STR_12(22), STR_11(26), 
 17771 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 17772 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 17773 ;;		 -> STR_1(21), 
 17774 ;;  _r              2  [STACK] PTR const unsigned char 
 17775 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_100(3), 
 17776 ;;		 -> STR_95(3), STR_91(3), 
 17777 ;;  n               2  [STACK] unsigned int 
 17778 ;; Auto vars:     Size  Location     Type
 17779 ;;  r               2  [STACK] PTR const unsigned char 
 17780 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_100(3), 
 17781 ;;		 -> STR_95(3), STR_91(3), 
 17782 ;;  l               2  [STACK] PTR const unsigned char 
 17783 ;;		 -> ct(3), STR_80(127), STR_78(3), STR_77(3), 
 17784 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 17785 ;;		 -> STR_72(19), STR_71(19), STR_70(24), STR_69(15), 
 17786 ;;		 -> STR_68(15), STR_67(15), STR_66(10), STR_65(10), 
 17787 ;;		 -> STR_64(19), STR_63(19), STR_60(3), STR_59(3), 
 17788 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 17789 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 17790 ;;		 -> STR_50(21), STR_49(20), STR_48(20), STR_47(21), 
 17791 ;;		 -> STR_46(21), STR_45(21), STR_44(22), STR_43(22), 
 17792 ;;		 -> STR_42(22), STR_41(23), STR_40(23), STR_39(23), 
 17793 ;;		 -> STR_38(29), STR_37(23), STR_36(23), STR_35(22), 
 17794 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 17795 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 17796 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(17), 
 17797 ;;		 -> STR_22(16), STR_21(16), STR_20(26), STR_19(26), 
 17798 ;;		 -> STR_18(22), STR_17(21), STR_16(21), STR_15(21), 
 17799 ;;		 -> STR_14(21), STR_13(22), STR_12(22), STR_11(26), 
 17800 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 17801 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 17802 ;;		 -> STR_1(21), 
 17803 ;; Return value:  Size  Location     Type
 17804 ;;                  2  [STACK] int 
 17805 ;; Registers used:
 17806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 17807 ;; Tracked objects:
 17808 ;;		On entry : 0/0
 17809 ;;		On exit  : 0/0
 17810 ;;		Unchanged: 0/0
 17811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17816 ;;Total ram usage:        0 bytes
 17817 ;; Hardware stack levels used:    1
 17818 ;; Hardware stack levels required when called:   15
 17819 ;; This function calls:
 17820 ;;		Nothing
 17821 ;; This function is called by:
 17822 ;;		_vfpfcnvrt
 17823 ;; This function uses a reentrant model
 17824 ;;
 17825                           
 17826                           	psect	text68
 17827  0184AE                     __ptext68:
 17828                           	opt callstack 0
 17829  0184AE                     _strncmp:
 17830                           	opt callstack 0
 17831                           
 17832                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17833  0184AE  52E6               	movf	postinc1,f,c
 17834  0184B0  52E6               	movf	postinc1,f,c
 17835  0184B2  52E6               	movf	postinc1,f,c
 17836  0184B4  52E6               	movf	postinc1,f,c
 17837                           
 17838                           ;stkvar	__l @ sp[(-4)+-2]
 17839                           
 17840                           ;incstack = 0
 17841 ;; hardware stack exceeded
 17842  0184B6  0EFA               	movlw	-6
 17843  0184B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 17844  0184BE  0EFB               	movlw	-5
 17845  0184C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17846                           
 17847                           ;stkvar	_l @ sp[(-4)+2]
 17848  0184C6  0EFF               	movlw	-1
 17849  0184C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17850  0184CE  0EFE               	movlw	-2
 17851  0184D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17852                           
 17853                           ;stkvar	__r @ sp[(-4)+-4]
 17854  0184D6  0EF8               	movlw	-8
 17855  0184D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 17856  0184DE  0EF9               	movlw	-7
 17857  0184E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17858                           
 17859                           ;stkvar	_r @ sp[(-4)+0]
 17860  0184E6  0EFD               	movlw	-3
 17861  0184E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17862  0184EE  0EFC               	movlw	-4
 17863  0184F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17864                           
 17865                           ;stkvar	_n @ sp[(-4)+-6]
 17866  0184F6  0EF6               	movlw	-10
 17867  0184F8  006F FF8C  F001    	movff	plusw1,btemp
 17868  0184FE  0E01               	movlw	1
 17869  018500  5E01               	subwf	btemp^0,f,c
 17870  018502  0EF6               	movlw	-10
 17871  018504  0060  F007  FFE3   	movff	btemp,plusw1
 17872  01850A  0EF7               	movlw	-9
 17873  01850C  006F FF8C  F001    	movff	plusw1,btemp
 17874  018512  0E00               	movlw	0
 17875  018514  5A01               	subwfb	btemp^0,f,c
 17876  018516  0EF7               	movlw	-9
 17877  018518  0060  F007  FFE3   	movff	btemp,plusw1
 17878  01851E  0EF6               	movlw	-10
 17879  018520  28E3               	incf	plusw1,w,c
 17880  018522  E13F               	bnz	l9844
 17881  018524  0EF7               	movlw	-9
 17882  018526  28E3               	incf	plusw1,w,c
 17883  018528  A4D8               	btfss	status,2,c
 17884  01852A  D03B               	goto	l9844
 17885  01852C  0E00               	movlw	0
 17886  01852E  6E01               	movwf	btemp^0,c
 17887  018530  0E00               	movlw	0
 17888  018532  6E02               	movwf	(btemp+1)^0,c
 17889  018534  D0C7               	goto	l3603
 17890  018536                     l9842:
 17891                           
 17892                           ;stkvar	_l @ sp[(-4)+2]
 17893  018536  0EFE               	movlw	-2
 17894  018538  50E3               	movf	plusw1,w,c
 17895  01853A  0F01               	addlw	1
 17896  01853C  6E01               	movwf	btemp^0,c
 17897  01853E  0EFE               	movlw	-2
 17898  018540  0060  F007  FFE3   	movff	btemp,plusw1
 17899  018546  6A01               	clrf	btemp^0,c
 17900  018548  0EFF               	movlw	-1
 17901  01854A  50E3               	movf	plusw1,w,c
 17902  01854C  2001               	addwfc	btemp^0,w,c
 17903  01854E  6E01               	movwf	btemp^0,c
 17904  018550  0EFF               	movlw	-1
 17905  018552  0060  F007  FFE3   	movff	btemp,plusw1
 17906                           
 17907                           ;stkvar	_r @ sp[(-4)+0]
 17908  018558  0EFC               	movlw	-4
 17909  01855A  50E3               	movf	plusw1,w,c
 17910  01855C  0F01               	addlw	1
 17911  01855E  6E01               	movwf	btemp^0,c
 17912  018560  0EFC               	movlw	-4
 17913  018562  0060  F007  FFE3   	movff	btemp,plusw1
 17914  018568  6A01               	clrf	btemp^0,c
 17915  01856A  0EFD               	movlw	-3
 17916  01856C  50E3               	movf	plusw1,w,c
 17917  01856E  2001               	addwfc	btemp^0,w,c
 17918  018570  6E01               	movwf	btemp^0,c
 17919  018572  0EFD               	movlw	-3
 17920  018574  0060  F007  FFE3   	movff	btemp,plusw1
 17921                           
 17922                           ;stkvar	_n @ sp[(-4)+-6]
 17923  01857A  0EF6               	movlw	-10
 17924  01857C  006F FF8C  F001    	movff	plusw1,btemp
 17925  018582  0E01               	movlw	1
 17926  018584  5E01               	subwf	btemp^0,f,c
 17927  018586  0EF6               	movlw	-10
 17928  018588  0060  F007  FFE3   	movff	btemp,plusw1
 17929  01858E  0EF7               	movlw	-9
 17930  018590  006F FF8C  F001    	movff	plusw1,btemp
 17931  018596  0E00               	movlw	0
 17932  018598  5A01               	subwfb	btemp^0,f,c
 17933  01859A  0EF7               	movlw	-9
 17934  01859C  0060  F007  FFE3   	movff	btemp,plusw1
 17935  0185A2                     l9844:
 17936                           
 17937                           ;stkvar	_l @ sp[(-4)+2]
 17938  0185A2  0EFE               	movlw	-2
 17939  0185A4  006F FF8F FFF6     	movff	plusw1,tblptrl
 17940  0185AA  0EFF               	movlw	-1
 17941  0185AC  006F FF8F FFF7     	movff	plusw1,tblptrh
 17942  0185B2  0E00               	movlw	low (__mediumconst shr (0+16))
 17943  0185B4  6EF8               	movwf	tblptru,c
 17944  0185B6  0E1F               	movlw	(high __ramtop+-1)
 17945  0185B8  64F7               	cpfsgt	tblptrh,c
 17946  0185BA  D003               	bra	u8927
 17947  0185BC  0008               	tblrd		*
 17948  0185BE  50F5               	movf	tablat,w,c
 17949  0185C0  D007               	bra	u8920
 17950  0185C2                     u8927:
 17951  0185C2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17952  0185C8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17953  0185CE  50EF               	movf	indf0,w,c
 17954  0185D0                     u8920:
 17955  0185D0  0900               	iorlw	0
 17956  0185D2  B4D8               	btfsc	status,2,c
 17957  0185D4  D04A               	goto	u8960
 17958                           
 17959                           ;stkvar	_r @ sp[(-4)+0]
 17960  0185D6  50E1               	movf	fsr1l,w,c
 17961  0185D8  0FFC               	addlw	-4
 17962  0185DA  6ED9               	movwf	fsr2l,c
 17963  0185DC  50E2               	movf	fsr1h,w,c
 17964  0185DE  6EDA               	movwf	fsr2h,c
 17965  0185E0  0EFF               	movlw	255
 17966  0185E2  22DA               	addwfc	fsr2h,f,c
 17967  0185E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 17968  0185EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 17969  0185F0                     	if	0	;tblptru may be non-zero
 17970  0185F0                     	endif
 17971  0185F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17972  0185F0  0E00               	movlw	low (__mediumconst shr (0+16))
 17973  0185F2  6EF8               	movwf	tblptru,c
 17974  0185F4                     	endif
 17975  0185F4  0008               	tblrd		*
 17976  0185F6  50F5               	movf	tablat,w,c
 17977  0185F8  0900               	iorlw	0
 17978  0185FA  B4D8               	btfsc	status,2,c
 17979  0185FC  D036               	goto	u8960
 17980                           
 17981                           ;stkvar	_n @ sp[(-4)+-6]
 17982  0185FE  0EF6               	movlw	-10
 17983  018600  006F FF8C  F001    	movff	plusw1,btemp
 17984  018606  0EF7               	movlw	-9
 17985  018608  50E3               	movf	plusw1,w,c
 17986  01860A  1001               	iorwf	btemp^0,w,c
 17987  01860C  B4D8               	btfsc	status,2,c
 17988  01860E  D02D               	goto	u8960
 17989                           
 17990                           ;stkvar	_r @ sp[(-4)+0]
 17991  018610  50E1               	movf	fsr1l,w,c
 17992  018612  0FFC               	addlw	-4
 17993  018614  6ED9               	movwf	fsr2l,c
 17994  018616  50E2               	movf	fsr1h,w,c
 17995  018618  6EDA               	movwf	fsr2h,c
 17996  01861A  0EFF               	movlw	255
 17997  01861C  22DA               	addwfc	fsr2h,f,c
 17998  01861E  006F FF7B FFF6     	movff	postinc2,tblptrl
 17999  018624  006F FF77 FFF7     	movff	postdec2,tblptrh
 18000  01862A                     	if	0	;tblptru may be non-zero
 18001  01862A                     	endif
 18002  01862A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18003  01862A  0E00               	movlw	low (__mediumconst shr (0+16))
 18004  01862C  6EF8               	movwf	tblptru,c
 18005  01862E                     	endif
 18006  01862E  0008               	tblrd		*
 18007  018630  006F FFD4  F00C    	movff	tablat,btemp+11
 18008                           
 18009                           ;stkvar	_l @ sp[(-4)+2]
 18010  018636  0EFE               	movlw	-2
 18011  018638  006F FF8F FFF6     	movff	plusw1,tblptrl
 18012  01863E  0EFF               	movlw	-1
 18013  018640  006F FF8F FFF7     	movff	plusw1,tblptrh
 18014  018646  0E00               	movlw	low (__mediumconst shr (0+16))
 18015  018648  6EF8               	movwf	tblptru,c
 18016  01864A  0E1F               	movlw	(high __ramtop+-1)
 18017  01864C  64F7               	cpfsgt	tblptrh,c
 18018  01864E  D003               	bra	u8967
 18019  018650  0008               	tblrd		*
 18020  018652  50F5               	movf	tablat,w,c
 18021  018654  D007               	bra	u8965
 18022  018656                     u8967:
 18023  018656  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18024  01865C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18025  018662  50EF               	movf	indf0,w,c
 18026  018664                     u8965:
 18027  018664  180C               	xorwf	(btemp+11)^0,w,c
 18028  018666  B4D8               	btfsc	status,2,c
 18029  018668  D766               	goto	l9842
 18030  01866A                     u8960:
 18031                           
 18032                           ;stkvar	_l @ sp[(-4)+2]
 18033  01866A  0EFE               	movlw	-2
 18034  01866C  006F FF8F FFF6     	movff	plusw1,tblptrl
 18035  018672  0EFF               	movlw	-1
 18036  018674  006F FF8F FFF7     	movff	plusw1,tblptrh
 18037  01867A  0E00               	movlw	low (__mediumconst shr (0+16))
 18038  01867C  6EF8               	movwf	tblptru,c
 18039  01867E  0E1F               	movlw	(high __ramtop+-1)
 18040  018680  64F7               	cpfsgt	tblptrh,c
 18041  018682  D003               	bra	u8977
 18042  018684  0008               	tblrd		*
 18043  018686  50F5               	movf	tablat,w,c
 18044  018688  D007               	bra	u8970
 18045  01868A                     u8977:
 18046  01868A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18047  018690  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18048  018696  50EF               	movf	indf0,w,c
 18049  018698                     u8970:
 18050  018698  6E01               	movwf	btemp^0,c
 18051  01869A  6A02               	clrf	(btemp+1)^0,c
 18052                           
 18053                           ;stkvar	_r @ sp[(-4)+0]
 18054  01869C  50E1               	movf	fsr1l,w,c
 18055  01869E  0FFC               	addlw	-4
 18056  0186A0  6ED9               	movwf	fsr2l,c
 18057  0186A2  50E2               	movf	fsr1h,w,c
 18058  0186A4  6EDA               	movwf	fsr2h,c
 18059  0186A6  0EFF               	movlw	255
 18060  0186A8  22DA               	addwfc	fsr2h,f,c
 18061  0186AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 18062  0186B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 18063  0186B6                     	if	0	;tblptru may be non-zero
 18064  0186B6                     	endif
 18065  0186B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18066  0186B6  0E00               	movlw	low (__mediumconst shr (0+16))
 18067  0186B8  6EF8               	movwf	tblptru,c
 18068  0186BA                     	endif
 18069  0186BA  0008               	tblrd		*
 18070  0186BC  50F5               	movf	tablat,w,c
 18071  0186BE  5E01               	subwf	btemp^0,f,c
 18072  0186C0  0E00               	movlw	0
 18073  0186C2  5A02               	subwfb	(btemp+1)^0,f,c
 18074  0186C4                     l3603:
 18075                           
 18076                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 18077  0186C4  0EF6               	movlw	246
 18078  0186C6  26E1               	addwf	fsr1l,f,c
 18079  0186C8  0EFF               	movlw	255
 18080  0186CA  22E2               	addwfc	fsr1h,f,c
 18081  0186CC  0012               	return		;funcret
 18082  0186CE                     __end_of_strncmp:
 18083                           	opt callstack 0
 18084                           
 18085 ;; *************** function _stoa *****************
 18086 ;; Defined at:
 18087 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18088 ;; Parameters:    Size  Location     Type
 18089 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18090 ;;		 -> f(6), NULL(0), 
 18091 ;;  s               2  [STACK] PTR unsigned char 
 18092 ;;		 -> ?_printf(2), ?_sprintf(2), STR_62(9), STR_61(12), 
 18093 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 18094 ;;		 -> V(192), 
 18095 ;; Auto vars:     Size  Location     Type
 18096 ;;  nuls            7  [STACK] unsigned char [7]
 18097 ;;  l               2  [STACK] int 
 18098 ;;  p               2  [STACK] int 
 18099 ;;  cp              2  [STACK] PTR unsigned char 
 18100 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_62(9), 
 18101 ;;		 -> STR_61(12), D.lcd(480), D(482), T(144), 
 18102 ;;		 -> STR_3(5), V(192), 
 18103 ;;  w               2  [STACK] int 
 18104 ;;  i               2  [STACK] int 
 18105 ;; Return value:  Size  Location     Type
 18106 ;;                  2  [STACK] int 
 18107 ;; Registers used:
 18108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18109 ;; Tracked objects:
 18110 ;;		On entry : 0/0
 18111 ;;		On exit  : 0/0
 18112 ;;		Unchanged: 0/0
 18113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18118 ;;Total ram usage:        0 bytes
 18119 ;; Hardware stack levels used:    1
 18120 ;; Hardware stack levels required when called:   18
 18121 ;; This function calls:
 18122 ;;		_fputc
 18123 ;;		_strlen
 18124 ;; This function is called by:
 18125 ;;		_vfpfcnvrt
 18126 ;; This function uses a reentrant model
 18127 ;;
 18128                           
 18129                           	psect	text69
 18130  017876                     __ptext69:
 18131                           	opt callstack 0
 18132  017876                     _stoa:
 18133                           	opt callstack 0
 18134                           
 18135                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18136  017876  0E11               	movlw	17
 18137  017878  26E1               	addwf	fsr1l,f,c
 18138  01787A  0E00               	movlw	0
 18139  01787C  22E2               	addwfc	fsr1h,f,c
 18140                           
 18141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 18142                           
 18143                           ;incstack = 0
 18144 ;; hardware stack exceeded
 18145  01787E  EE20  F100         	lfsr	2,stoa@F1166
 18146                           
 18147                           ;stkvar	_nuls @ sp[(-17)+0]
 18148  017882  0E07               	movlw	7
 18149  017884  6E01               	movwf	btemp^0,c
 18150  017886  0EEF               	movlw	-17
 18151  017888                     us1223999:
 18152  017888  006F FF7B FFE3     	movff	postinc2,plusw1
 18153  01788E  28E8               	incf	wreg,w,c
 18154  017890  2E01               	decfsz	btemp^0,f,c
 18155  017892  D7FA               	bra	us1223999
 18156                           
 18157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 18158                           ;stkvar	_s @ sp[(-17)+-4]
 18159  017894  0EEB               	movlw	-21
 18160  017896  006F FF8C  F00B    	movff	plusw1,btemp+10
 18161  01789C  0EEC               	movlw	-20
 18162  01789E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18163                           
 18164                           ;stkvar	_cp @ sp[(-17)+11]
 18165  0178A4  0EFB               	movlw	-5
 18166  0178A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18167  0178AC  0EFA               	movlw	-6
 18168  0178AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18169                           
 18170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 18171                           ;stkvar	_cp @ sp[(-17)+11]
 18172  0178B4  0EFA               	movlw	-6
 18173  0178B6  006F FF8C  F001    	movff	plusw1,btemp
 18174  0178BC  0EFB               	movlw	-5
 18175  0178BE  50E3               	movf	plusw1,w,c
 18176  0178C0  1001               	iorwf	btemp^0,w,c
 18177  0178C2  A4D8               	btfss	status,2,c
 18178  0178C4  D00E               	goto	l13102
 18179                           
 18180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 18181                           ;stkvar	_nuls @ sp[(-17)+0]
 18182  0178C6  0EEF               	movlw	239
 18183  0178C8  24E1               	addwf	fsr1l,w,c
 18184  0178CA  6E0B               	movwf	(btemp+10)^0,c
 18185  0178CC  0EFF               	movlw	255
 18186  0178CE  20E2               	addwfc	fsr1h,w,c
 18187  0178D0  6E0C               	movwf	(btemp+11)^0,c
 18188                           
 18189                           ;stkvar	_cp @ sp[(-17)+11]
 18190  0178D2  0EFB               	movlw	-5
 18191  0178D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18192  0178DA  0EFA               	movlw	-6
 18193  0178DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18194  0178E2                     l13102:
 18195                           
 18196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 18197                           ;stkvar	_cp @ sp[(-17)+11]
 18198  0178E2  0EFA               	movlw	-6
 18199  0178E4  006F FF8F FFE6     	movff	plusw1,postinc1
 18200  0178EA  006F FF8F FFE6     	movff	plusw1,postinc1
 18201  0178F0  ECF6  F0D9         	call	_strlen	;wreg free
 18202                           
 18203                           ;stkvar	_l @ sp[(-17)+7]
 18204  0178F4  0EF6               	movlw	-10
 18205  0178F6  0060  F007  FFE3   	movff	btemp,plusw1
 18206  0178FC  0EF7               	movlw	-9
 18207  0178FE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18208                           
 18209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 18210                           ;stkvar	_p @ sp[(-17)+9]
 18211  017904  0EF8               	movlw	-8
 18212  017906  0060  F0F3  FFE3   	movff	_prec,plusw1
 18213  01790C  0EF9               	movlw	-7
 18214  01790E  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18215                           
 18216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 18217                           ;stkvar	_p @ sp[(-17)+9]
 18218  017914  0EF9               	movlw	-7
 18219  017916  BEE3               	btfsc	plusw1,7,c
 18220  017918  D023               	goto	l2428
 18221                           
 18222                           ;stkvar	_l @ sp[(-17)+7]
 18223                           ;stkvar	_p @ sp[(-17)+9]
 18224  01791A  50E1               	movf	fsr1l,w,c
 18225  01791C  0FF8               	addlw	-8
 18226  01791E  6ED9               	movwf	fsr2l,c
 18227  017920  50E2               	movf	fsr1h,w,c
 18228  017922  6EDA               	movwf	fsr2h,c
 18229  017924  0EFF               	movlw	255
 18230  017926  22DA               	addwfc	fsr2h,f,c
 18231  017928  0EF6               	movlw	-10
 18232  01792A  50E3               	movf	plusw1,w,c
 18233  01792C  5CDE               	subwf	postinc2,w,c
 18234  01792E  50DE               	movf	postinc2,w,c
 18235  017930  0A80               	xorlw	128
 18236  017932  6E01               	movwf	btemp^0,c
 18237  017934  0EF7               	movlw	-9
 18238  017936  50E3               	movf	plusw1,w,c
 18239  017938  0A80               	xorlw	128
 18240  01793A  5801               	subwfb	btemp^0,w,c
 18241  01793C  B0D8               	btfsc	status,0,c
 18242  01793E  D010               	goto	l2428
 18243                           
 18244                           ;stkvar	_p @ sp[(-17)+9]
 18245                           ;stkvar	_l @ sp[(-17)+7]
 18246  017940  0EF8               	movlw	-8
 18247  017942  006F FF8C  F001    	movff	plusw1,btemp
 18248  017948  0EF6               	movlw	-10
 18249  01794A  0060  F007  FFE3   	movff	btemp,plusw1
 18250  017950  0EF9               	movlw	-7
 18251  017952  006F FF8C  F001    	movff	plusw1,btemp
 18252  017958  0EF7               	movlw	-9
 18253  01795A  0060  F007  FFE3   	movff	btemp,plusw1
 18254  017960                     l2428:
 18255                           
 18256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 18257                           ;stkvar	_l @ sp[(-17)+7]
 18258                           ;stkvar	_p @ sp[(-17)+9]
 18259  017960  0EF6               	movlw	-10
 18260  017962  006F FF8C  F001    	movff	plusw1,btemp
 18261  017968  0EF8               	movlw	-8
 18262  01796A  0060  F007  FFE3   	movff	btemp,plusw1
 18263  017970  0EF7               	movlw	-9
 18264  017972  006F FF8C  F001    	movff	plusw1,btemp
 18265  017978  0EF9               	movlw	-7
 18266  01797A  0060  F007  FFE3   	movff	btemp,plusw1
 18267                           
 18268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 18269                           ;stkvar	_w @ sp[(-17)+13]
 18270  017980  0EFC               	movlw	-4
 18271  017982  0060  F0EB  FFE3   	movff	_width,plusw1
 18272  017988  0EFD               	movlw	-3
 18273  01798A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 18274                           
 18275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 18276  017990  A03E               	btfss	_flags^0,0,c
 18277  017992  D01F               	goto	l13122
 18278  017994  D031               	goto	u12280
 18279  017996                     l13118:
 18280                           
 18281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 18282                           ;stkvar	_fp @ sp[(-17)+-2]
 18283  017996  0EED               	movlw	-19
 18284  017998  006F FF8F FFE6     	movff	plusw1,postinc1
 18285  01799E  006F FF8F FFE6     	movff	plusw1,postinc1
 18286  0179A4  0E20               	movlw	32
 18287  0179A6  6EE6               	movwf	postinc1,c
 18288  0179A8  0E00               	movlw	0
 18289  0179AA  6EE6               	movwf	postinc1,c
 18290  0179AC  ECB2  F0CF         	call	_fputc	;wreg free
 18291                           
 18292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 18293                           ;stkvar	_l @ sp[(-17)+7]
 18294  0179B0  0EF6               	movlw	-10
 18295  0179B2  50E3               	movf	plusw1,w,c
 18296  0179B4  0F01               	addlw	1
 18297  0179B6  6E01               	movwf	btemp^0,c
 18298  0179B8  0EF6               	movlw	-10
 18299  0179BA  0060  F007  FFE3   	movff	btemp,plusw1
 18300  0179C0  6A01               	clrf	btemp^0,c
 18301  0179C2  0EF7               	movlw	-9
 18302  0179C4  50E3               	movf	plusw1,w,c
 18303  0179C6  2001               	addwfc	btemp^0,w,c
 18304  0179C8  6E01               	movwf	btemp^0,c
 18305  0179CA  0EF7               	movlw	-9
 18306  0179CC  0060  F007  FFE3   	movff	btemp,plusw1
 18307  0179D2                     l13122:
 18308                           
 18309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 18310                           ;stkvar	_w @ sp[(-17)+13]
 18311                           ;stkvar	_l @ sp[(-17)+7]
 18312  0179D2  50E1               	movf	fsr1l,w,c
 18313  0179D4  0FF6               	addlw	-10
 18314  0179D6  6ED9               	movwf	fsr2l,c
 18315  0179D8  50E2               	movf	fsr1h,w,c
 18316  0179DA  6EDA               	movwf	fsr2h,c
 18317  0179DC  0EFF               	movlw	255
 18318  0179DE  22DA               	addwfc	fsr2h,f,c
 18319  0179E0  0EFC               	movlw	-4
 18320  0179E2  50E3               	movf	plusw1,w,c
 18321  0179E4  5CDE               	subwf	postinc2,w,c
 18322  0179E6  50DE               	movf	postinc2,w,c
 18323  0179E8  0A80               	xorlw	128
 18324  0179EA  6E01               	movwf	btemp^0,c
 18325  0179EC  0EFD               	movlw	-3
 18326  0179EE  50E3               	movf	plusw1,w,c
 18327  0179F0  0A80               	xorlw	128
 18328  0179F2  5801               	subwfb	btemp^0,w,c
 18329  0179F4  A0D8               	btfss	status,0,c
 18330  0179F6  D7CF               	goto	l13118
 18331  0179F8                     u12280:
 18332                           
 18333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 18334                           ;stkvar	_i @ sp[(-17)+15]
 18335  0179F8  0EFE               	movlw	-2
 18336  0179FA  6AE3               	clrf	plusw1,c
 18337  0179FC  0EFF               	movlw	-1
 18338  0179FE  6AE3               	clrf	plusw1,c
 18339                           
 18340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 18341  017A00  D045               	goto	l13132
 18342  017A02                     l13126:
 18343                           
 18344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 18345                           ;stkvar	_fp @ sp[(-17)+-2]
 18346  017A02  0EED               	movlw	-19
 18347  017A04  006F FF8F FFE6     	movff	plusw1,postinc1
 18348  017A0A  006F FF8F FFE6     	movff	plusw1,postinc1
 18349                           
 18350                           ;stkvar	_cp @ sp[(-19)+11]
 18351  017A10  0EF8               	movlw	-8
 18352  017A12  006F FF8F FFF6     	movff	plusw1,tblptrl
 18353  017A18  0EF9               	movlw	-7
 18354  017A1A  006F FF8F FFF7     	movff	plusw1,tblptrh
 18355  017A20  0E00               	movlw	low (__mediumconst shr (0+16))
 18356  017A22  6EF8               	movwf	tblptru,c
 18357  017A24  0E1F               	movlw	(high __ramtop+-1)
 18358  017A26  64F7               	cpfsgt	tblptrh,c
 18359  017A28  D003               	bra	u12297
 18360  017A2A  0008               	tblrd		*
 18361  017A2C  50F5               	movf	tablat,w,c
 18362  017A2E  D007               	bra	u12290
 18363  017A30                     u12297:
 18364  017A30  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18365  017A36  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18366  017A3C  50EF               	movf	indf0,w,c
 18367  017A3E                     u12290:
 18368  017A3E  6EE6               	movwf	postinc1,c
 18369  017A40  0E00               	movlw	0
 18370  017A42  6EE6               	movwf	postinc1,c
 18371  017A44  ECB2  F0CF         	call	_fputc	;wreg free
 18372                           
 18373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 18374                           ;stkvar	_cp @ sp[(-17)+11]
 18375  017A48  0EFA               	movlw	-6
 18376  017A4A  50E3               	movf	plusw1,w,c
 18377  017A4C  0F01               	addlw	1
 18378  017A4E  6E01               	movwf	btemp^0,c
 18379  017A50  0EFA               	movlw	-6
 18380  017A52  0060  F007  FFE3   	movff	btemp,plusw1
 18381  017A58  6A01               	clrf	btemp^0,c
 18382  017A5A  0EFB               	movlw	-5
 18383  017A5C  50E3               	movf	plusw1,w,c
 18384  017A5E  2001               	addwfc	btemp^0,w,c
 18385  017A60  6E01               	movwf	btemp^0,c
 18386  017A62  0EFB               	movlw	-5
 18387  017A64  0060  F007  FFE3   	movff	btemp,plusw1
 18388                           
 18389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 18390                           ;stkvar	_i @ sp[(-17)+15]
 18391  017A6A  0EFE               	movlw	-2
 18392  017A6C  50E3               	movf	plusw1,w,c
 18393  017A6E  0F01               	addlw	1
 18394  017A70  6E01               	movwf	btemp^0,c
 18395  017A72  0EFE               	movlw	-2
 18396  017A74  0060  F007  FFE3   	movff	btemp,plusw1
 18397  017A7A  6A01               	clrf	btemp^0,c
 18398  017A7C  0EFF               	movlw	-1
 18399  017A7E  50E3               	movf	plusw1,w,c
 18400  017A80  2001               	addwfc	btemp^0,w,c
 18401  017A82  6E01               	movwf	btemp^0,c
 18402  017A84  0EFF               	movlw	-1
 18403  017A86  0060  F007  FFE3   	movff	btemp,plusw1
 18404  017A8C                     l13132:
 18405                           
 18406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 18407                           ;stkvar	_p @ sp[(-17)+9]
 18408                           ;stkvar	_i @ sp[(-17)+15]
 18409  017A8C  50E1               	movf	fsr1l,w,c
 18410  017A8E  0FFE               	addlw	-2
 18411  017A90  6ED9               	movwf	fsr2l,c
 18412  017A92  50E2               	movf	fsr1h,w,c
 18413  017A94  6EDA               	movwf	fsr2h,c
 18414  017A96  0EFF               	movlw	255
 18415  017A98  22DA               	addwfc	fsr2h,f,c
 18416  017A9A  0EF8               	movlw	-8
 18417  017A9C  50E3               	movf	plusw1,w,c
 18418  017A9E  5CDE               	subwf	postinc2,w,c
 18419  017AA0  50DE               	movf	postinc2,w,c
 18420  017AA2  0A80               	xorlw	128
 18421  017AA4  6E01               	movwf	btemp^0,c
 18422  017AA6  0EF9               	movlw	-7
 18423  017AA8  50E3               	movf	plusw1,w,c
 18424  017AAA  0A80               	xorlw	128
 18425  017AAC  5801               	subwfb	btemp^0,w,c
 18426  017AAE  A0D8               	btfss	status,0,c
 18427  017AB0  D7A8               	goto	l13126
 18428                           
 18429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 18430  017AB2  B03E               	btfsc	_flags^0,0,c
 18431  017AB4  D01F               	goto	l13140
 18432  017AB6  D031               	goto	u12320
 18433  017AB8                     l13136:
 18434                           
 18435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 18436                           ;stkvar	_fp @ sp[(-17)+-2]
 18437  017AB8  0EED               	movlw	-19
 18438  017ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 18439  017AC0  006F FF8F FFE6     	movff	plusw1,postinc1
 18440  017AC6  0E20               	movlw	32
 18441  017AC8  6EE6               	movwf	postinc1,c
 18442  017ACA  0E00               	movlw	0
 18443  017ACC  6EE6               	movwf	postinc1,c
 18444  017ACE  ECB2  F0CF         	call	_fputc	;wreg free
 18445                           
 18446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 18447                           ;stkvar	_l @ sp[(-17)+7]
 18448  017AD2  0EF6               	movlw	-10
 18449  017AD4  50E3               	movf	plusw1,w,c
 18450  017AD6  0F01               	addlw	1
 18451  017AD8  6E01               	movwf	btemp^0,c
 18452  017ADA  0EF6               	movlw	-10
 18453  017ADC  0060  F007  FFE3   	movff	btemp,plusw1
 18454  017AE2  6A01               	clrf	btemp^0,c
 18455  017AE4  0EF7               	movlw	-9
 18456  017AE6  50E3               	movf	plusw1,w,c
 18457  017AE8  2001               	addwfc	btemp^0,w,c
 18458  017AEA  6E01               	movwf	btemp^0,c
 18459  017AEC  0EF7               	movlw	-9
 18460  017AEE  0060  F007  FFE3   	movff	btemp,plusw1
 18461  017AF4                     l13140:
 18462                           
 18463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 18464                           ;stkvar	_w @ sp[(-17)+13]
 18465                           ;stkvar	_l @ sp[(-17)+7]
 18466  017AF4  50E1               	movf	fsr1l,w,c
 18467  017AF6  0FF6               	addlw	-10
 18468  017AF8  6ED9               	movwf	fsr2l,c
 18469  017AFA  50E2               	movf	fsr1h,w,c
 18470  017AFC  6EDA               	movwf	fsr2h,c
 18471  017AFE  0EFF               	movlw	255
 18472  017B00  22DA               	addwfc	fsr2h,f,c
 18473  017B02  0EFC               	movlw	-4
 18474  017B04  50E3               	movf	plusw1,w,c
 18475  017B06  5CDE               	subwf	postinc2,w,c
 18476  017B08  50DE               	movf	postinc2,w,c
 18477  017B0A  0A80               	xorlw	128
 18478  017B0C  6E01               	movwf	btemp^0,c
 18479  017B0E  0EFD               	movlw	-3
 18480  017B10  50E3               	movf	plusw1,w,c
 18481  017B12  0A80               	xorlw	128
 18482  017B14  5801               	subwfb	btemp^0,w,c
 18483  017B16  A0D8               	btfss	status,0,c
 18484  017B18  D7CF               	goto	l13136
 18485  017B1A                     u12320:
 18486                           
 18487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 18488                           ;stkvar	_l @ sp[(-17)+7]
 18489  017B1A  0EF6               	movlw	-10
 18490  017B1C  006F FF8C  F001    	movff	plusw1,btemp
 18491  017B22  0EF7               	movlw	-9
 18492  017B24  006F FF8C  F002    	movff	plusw1,btemp+1
 18493                           
 18494                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18495  017B2A  0EEB               	movlw	235
 18496  017B2C  26E1               	addwf	fsr1l,f,c
 18497  017B2E  0EFF               	movlw	255
 18498  017B30  22E2               	addwfc	fsr1h,f,c
 18499  017B32  0012               	return		;funcret
 18500  017B34                     __end_of_stoa:
 18501                           	opt callstack 0
 18502                           
 18503 ;; *************** function _efgtoa *****************
 18504 ;; Defined at:
 18505 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18506 ;; Parameters:    Size  Location     Type
 18507 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18508 ;;		 -> f(6), NULL(0), 
 18509 ;;  f               4  [STACK] PTR struct _IO_FILE
 18510 ;;  c               1  [STACK] unsigned char 
 18511 ;; Auto vars:     Size  Location     Type
 18512 ;;  u               4  [STACK] unsigned char 
 18513 ;;  g               4  [STACK] unsigned char 
 18514 ;;  l               4  [STACK] unsigned char 
 18515 ;;  h               4  [STACK] unsigned char 
 18516 ;;  ou              4  [STACK] unsigned char 
 18517 ;;  n               2  [STACK] int 
 18518 ;;  e               2  [STACK] int 
 18519 ;;  i               2  [STACK] int 
 18520 ;;  w               2  [STACK] int 
 18521 ;;  p               2  [STACK] int 
 18522 ;;  sign            2  [STACK] int 
 18523 ;;  d               2  [STACK] int 
 18524 ;;  ne              2  [STACK] int 
 18525 ;;  m               2  [STACK] int 
 18526 ;;  pp              2  [STACK] int 
 18527 ;;  t               2  [STACK] int 
 18528 ;;  mode            1  [STACK] unsigned char 
 18529 ;;  nmode           1  [STACK] unsigned char 
 18530 ;; Return value:  Size  Location     Type
 18531 ;;                  2  [STACK] int 
 18532 ;; Registers used:
 18533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 18534 ;; Tracked objects:
 18535 ;;		On entry : 0/0
 18536 ;;		On exit  : 0/0
 18537 ;;		Unchanged: 0/0
 18538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18543 ;;Total ram usage:        0 bytes
 18544 ;; Hardware stack levels used:    1
 18545 ;; Hardware stack levels required when called:   20
 18546 ;; This function calls:
 18547 ;;		___awdiv
 18548 ;;		___awmod
 18549 ;;		___fladd
 18550 ;;		___fldiv
 18551 ;;		___fleq
 18552 ;;		___flge
 18553 ;;		___flmul
 18554 ;;		___flneg
 18555 ;;		___flsub
 18556 ;;		___fltol
 18557 ;;		___fpclassifyf
 18558 ;;		_floorf
 18559 ;;		_isupper
 18560 ;;		_pad
 18561 ;;		_strcpy
 18562 ;;		_tolower
 18563 ;; This function is called by:
 18564 ;;		_vfpfcnvrt
 18565 ;; This function uses a reentrant model
 18566 ;;
 18567                           
 18568                           	psect	text70
 18569  011256                     __ptext70:
 18570                           	opt callstack 0
 18571  011256                     _efgtoa:
 18572                           	opt callstack 0
 18573                           
 18574                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18575  011256  0E38               	movlw	56
 18576  011258  26E1               	addwf	fsr1l,f,c
 18577  01125A  0E00               	movlw	0
 18578  01125C  22E2               	addwfc	fsr1h,f,c
 18579                           
 18580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 18581                           ;stkvar	_sign @ sp[(-56)+42]
 18582                           
 18583                           ;incstack = 0
 18584 ;; hardware stack exceeded
 18585  01125E  0EF2               	movlw	-14
 18586  011260  6AE3               	clrf	plusw1,c
 18587  011262  0EF3               	movlw	-13
 18588  011264  6AE3               	clrf	plusw1,c
 18589                           
 18590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 18591                           ;stkvar	_f @ sp[(-56)+-6]
 18592  011266  0EC2               	movlw	-62
 18593  011268  006F FF8C  F009    	movff	plusw1,btemp+8
 18594  01126E  0EC3               	movlw	-61
 18595  011270  006F FF8C  F00A    	movff	plusw1,btemp+9
 18596  011276  0EC4               	movlw	-60
 18597  011278  006F FF8C  F00B    	movff	plusw1,btemp+10
 18598  01127E  0EC5               	movlw	-59
 18599  011280  006F FF8C  F00C    	movff	plusw1,btemp+11
 18600                           
 18601                           ;stkvar	_g @ sp[(-56)+16]
 18602  011286  0ED8               	movlw	-40
 18603  011288  0060  F027  FFE3   	movff	btemp+8,plusw1
 18604  01128E  0ED9               	movlw	-39
 18605  011290  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18606  011296  0EDA               	movlw	-38
 18607  011298  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18608  01129E  0EDB               	movlw	-37
 18609  0112A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18610                           
 18611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 18612                           ;stkvar	_g @ sp[(-56)+16]
 18613  0112A6  0EDB               	movlw	-37
 18614  0112A8  AEE3               	btfss	plusw1,7,c
 18615  0112AA  D02B               	goto	l12800
 18616                           
 18617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 18618  0112AC  0E01               	movlw	1
 18619  0112AE  6E0B               	movwf	(btemp+10)^0,c
 18620  0112B0  0E00               	movlw	0
 18621  0112B2  6E0C               	movwf	(btemp+11)^0,c
 18622                           
 18623                           ;stkvar	_sign @ sp[(-56)+42]
 18624  0112B4  0EF2               	movlw	-14
 18625  0112B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18626  0112BC  0EF3               	movlw	-13
 18627  0112BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18628                           
 18629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 18630                           ;stkvar	_g @ sp[(-56)+16]
 18631  0112C4  0ED8               	movlw	-40
 18632  0112C6  006F FF8F FFE6     	movff	plusw1,postinc1
 18633  0112CC  006F FF8F FFE6     	movff	plusw1,postinc1
 18634  0112D2  006F FF8F FFE6     	movff	plusw1,postinc1
 18635  0112D8  006F FF8F FFE6     	movff	plusw1,postinc1
 18636  0112DE  EC65  F0E0         	call	___flneg	;wreg free
 18637                           
 18638                           ;stkvar	_g @ sp[(-56)+16]
 18639  0112E2  0ED8               	movlw	-40
 18640  0112E4  0060  F007  FFE3   	movff	btemp,plusw1
 18641  0112EA  0ED9               	movlw	-39
 18642  0112EC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18643  0112F2  0EDA               	movlw	-38
 18644  0112F4  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18645  0112FA  0EDB               	movlw	-37
 18646  0112FC  0060  F013  FFE3   	movff	btemp+3,plusw1
 18647  011302                     l12800:
 18648                           
 18649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 18650                           ;stkvar	_n @ sp[(-56)+32]
 18651  011302  0EE8               	movlw	-24
 18652  011304  6AE3               	clrf	plusw1,c
 18653  011306  0EE9               	movlw	-23
 18654  011308  6AE3               	clrf	plusw1,c
 18655                           
 18656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 18657                           ;stkvar	_w @ sp[(-56)+38]
 18658  01130A  0EEE               	movlw	-18
 18659  01130C  0060  F0EB  FFE3   	movff	_width,plusw1
 18660  011312  0EEF               	movlw	-17
 18661  011314  0060  F0EF  FFE3   	movff	_width+1,plusw1
 18662                           
 18663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 18664                           ;stkvar	_sign @ sp[(-56)+42]
 18665  01131A  0EF2               	movlw	-14
 18666  01131C  006F FF8C  F001    	movff	plusw1,btemp
 18667  011322  0EF3               	movlw	-13
 18668  011324  50E3               	movf	plusw1,w,c
 18669  011326  1001               	iorwf	btemp^0,w,c
 18670  011328  A4D8               	btfss	status,2,c
 18671  01132A  D002               	goto	u11730
 18672  01132C  A43E               	btfss	_flags^0,2,c
 18673  01132E  D036               	goto	l12820
 18674  011330                     u11730:
 18675                           
 18676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 18677                           ;stkvar	_sign @ sp[(-56)+42]
 18678  011330  0EF2               	movlw	-14
 18679  011332  006F FF8C  F001    	movff	plusw1,btemp
 18680  011338  0EF3               	movlw	-13
 18681  01133A  50E3               	movf	plusw1,w,c
 18682  01133C  1001               	iorwf	btemp^0,w,c
 18683  01133E  A4D8               	btfss	status,2,c
 18684  011340  D002               	goto	l12812
 18685  011342  0E2B               	movlw	43
 18686  011344  D001               	goto	L20
 18687  011346                     l12812:
 18688  011346  0E2D               	movlw	45
 18689  011348                     L20:
 18690  011348  6E0B               	movwf	(btemp+10)^0,c
 18691  01134A  0E00               	movlw	0
 18692  01134C  6E0C               	movwf	(btemp+11)^0,c
 18693                           
 18694                           ;stkvar	_efgtoa$5984 @ sp[(-56)+10]
 18695  01134E  0ED2               	movlw	-46
 18696  011350  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18697  011356  0ED3               	movlw	-45
 18698  011358  0060  F033  FFE3   	movff	btemp+11,plusw1
 18699                           
 18700                           ;stkvar	_efgtoa$5984 @ sp[(-56)+10]
 18701  01135E  0ED2               	movlw	-46
 18702  011360  006F FF8C  F297    	movff	plusw1,_dbuf
 18703                           
 18704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 18705                           ;stkvar	_n @ sp[(-56)+32]
 18706  011366  0EE8               	movlw	-24
 18707  011368  50E3               	movf	plusw1,w,c
 18708  01136A  0F01               	addlw	1
 18709  01136C  6E01               	movwf	btemp^0,c
 18710  01136E  0EE8               	movlw	-24
 18711  011370  0060  F007  FFE3   	movff	btemp,plusw1
 18712  011376  6A01               	clrf	btemp^0,c
 18713  011378  0EE9               	movlw	-23
 18714  01137A  50E3               	movf	plusw1,w,c
 18715  01137C  2001               	addwfc	btemp^0,w,c
 18716  01137E  6E01               	movwf	btemp^0,c
 18717  011380  0EE9               	movlw	-23
 18718  011382  0060  F007  FFE3   	movff	btemp,plusw1
 18719                           
 18720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 18721                           ;stkvar	_w @ sp[(-56)+38]
 18722  011388  50E1               	movf	fsr1l,w,c
 18723  01138A  0FEE               	addlw	-18
 18724  01138C  6ED9               	movwf	fsr2l,c
 18725  01138E  50E2               	movf	fsr1h,w,c
 18726  011390  6EDA               	movwf	fsr2h,c
 18727  011392  0EFF               	movlw	255
 18728  011394  22DA               	addwfc	fsr2h,f,c
 18729  011396  06DE               	decf	postinc2,f,c
 18730  011398  0E00               	movlw	0
 18731  01139A  5ADD               	subwfb	postdec2,f,c
 18732  01139C                     l12820:
 18733                           
 18734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 18735                           ;stkvar	_g @ sp[(-56)+16]
 18736  01139C  0ED8               	movlw	-40
 18737  01139E  006F FF8F FFE6     	movff	plusw1,postinc1
 18738  0113A4  006F FF8F FFE6     	movff	plusw1,postinc1
 18739  0113AA  006F FF8F FFE6     	movff	plusw1,postinc1
 18740  0113B0  006F FF8F FFE6     	movff	plusw1,postinc1
 18741  0113B6  EC2E  F0C8         	call	___fpclassifyf	;wreg free
 18742  0113BA  0401               	decf	btemp^0,w,c
 18743  0113BC  1002               	iorwf	(btemp+1)^0,w,c
 18744  0113BE  A4D8               	btfss	status,2,c
 18745  0113C0  D076               	goto	l12838
 18746  0113C2  0EBF               	movlw	191
 18747  0113C4  6E0B               	movwf	(btemp+10)^0,c
 18748  0113C6  0EFF               	movlw	255
 18749  0113C8  6E0C               	movwf	(btemp+11)^0,c
 18750                           
 18751                           ;stkvar	_c @ sp[(-56)+-7]
 18752  0113CA  0EC1               	movlw	-63
 18753  0113CC  50E3               	movf	plusw1,w,c
 18754  0113CE  6E09               	movwf	(btemp+8)^0,c
 18755  0113D0  6A0A               	clrf	(btemp+9)^0,c
 18756  0113D2  500B               	movf	(btemp+10)^0,w,c
 18757  0113D4  2609               	addwf	(btemp+8)^0,f,c
 18758  0113D6  500C               	movf	(btemp+11)^0,w,c
 18759  0113D8  220A               	addwfc	(btemp+9)^0,f,c
 18760  0113DA  500A               	movf	(btemp+9)^0,w,c
 18761  0113DC  E106               	bnz	u11760
 18762  0113DE  0E1A               	movlw	26
 18763  0113E0  5C09               	subwf	(btemp+8)^0,w,c
 18764  0113E2  B0D8               	btfsc	status,0,c
 18765  0113E4  D002               	goto	u11760
 18766  0113E6  0E01               	movlw	1
 18767  0113E8  D001               	goto	u11770
 18768  0113EA                     u11760:
 18769  0113EA  0E00               	movlw	0
 18770  0113EC                     u11770:
 18771  0113EC  6E0B               	movwf	(btemp+10)^0,c
 18772  0113EE  6A0C               	clrf	(btemp+11)^0,c
 18773                           
 18774                           ;stkvar	_efgtoa$5985 @ sp[(-56)+8]
 18775  0113F0  0ED0               	movlw	-48
 18776  0113F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18777  0113F8  0ED1               	movlw	-47
 18778  0113FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18779                           
 18780                           ;stkvar	_efgtoa$5985 @ sp[(-56)+8]
 18781  011400  0ED0               	movlw	-48
 18782  011402  006F FF8C  F001    	movff	plusw1,btemp
 18783  011408  0ED1               	movlw	-47
 18784  01140A  50E3               	movf	plusw1,w,c
 18785  01140C  1001               	iorwf	btemp^0,w,c
 18786  01140E  B4D8               	btfsc	status,2,c
 18787  011410  D017               	goto	l12830
 18788                           
 18789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 18790  011412  0ED6               	movlw	low STR_81
 18791  011414  6EE6               	movwf	postinc1,c
 18792  011416  0EFF               	movlw	high STR_81
 18793  011418  6EE6               	movwf	postinc1,c
 18794                           
 18795                           ;stkvar	_n @ sp[(-58)+32]
 18796  01141A  0E97               	movlw	low _dbuf
 18797  01141C  6E0B               	movwf	(btemp+10)^0,c
 18798  01141E  0E02               	movlw	high _dbuf
 18799  011420  6E0C               	movwf	(btemp+11)^0,c
 18800  011422  0EE6               	movlw	-26
 18801  011424  50E3               	movf	plusw1,w,c
 18802  011426  260B               	addwf	(btemp+10)^0,f,c
 18803  011428  0EE7               	movlw	-25
 18804  01142A  50E3               	movf	plusw1,w,c
 18805  01142C  220C               	addwfc	(btemp+11)^0,f,c
 18806  01142E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18807  011434  0060  F033  FFE6   	movff	btemp+11,postinc1
 18808  01143A  EC43  F0D5         	call	_strcpy	;wreg free
 18809                           
 18810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 18811  01143E  D016               	goto	l12832
 18812  011440                     l12830:
 18813                           
 18814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 18815  011440  0EDE               	movlw	low STR_82
 18816  011442  6EE6               	movwf	postinc1,c
 18817  011444  0EFF               	movlw	high STR_82
 18818  011446  6EE6               	movwf	postinc1,c
 18819                           
 18820                           ;stkvar	_n @ sp[(-58)+32]
 18821  011448  0E97               	movlw	low _dbuf
 18822  01144A  6E0B               	movwf	(btemp+10)^0,c
 18823  01144C  0E02               	movlw	high _dbuf
 18824  01144E  6E0C               	movwf	(btemp+11)^0,c
 18825  011450  0EE6               	movlw	-26
 18826  011452  50E3               	movf	plusw1,w,c
 18827  011454  260B               	addwf	(btemp+10)^0,f,c
 18828  011456  0EE7               	movlw	-25
 18829  011458  50E3               	movf	plusw1,w,c
 18830  01145A  220C               	addwfc	(btemp+11)^0,f,c
 18831  01145C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18832  011462  0060  F033  FFE6   	movff	btemp+11,postinc1
 18833  011468  EC43  F0D5         	call	_strcpy	;wreg free
 18834  01146C                     l12832:
 18835                           
 18836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 18837                           ;stkvar	_w @ sp[(-56)+38]
 18838  01146C  50E1               	movf	fsr1l,w,c
 18839  01146E  0FEE               	addlw	-18
 18840  011470  6ED9               	movwf	fsr2l,c
 18841  011472  50E2               	movf	fsr1h,w,c
 18842  011474  6EDA               	movwf	fsr2h,c
 18843  011476  0EFF               	movlw	255
 18844  011478  22DA               	addwfc	fsr2h,f,c
 18845  01147A  0EFD               	movlw	253
 18846  01147C  26DE               	addwf	postinc2,f,c
 18847  01147E  0EFF               	movlw	255
 18848  011480  22DD               	addwfc	postdec2,f,c
 18849  011482                     l12834:
 18850                           
 18851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 18852                           ;stkvar	_w @ sp[(-56)+38]
 18853  011482  0EEE               	movlw	-18
 18854  011484  006F FF8F FFE6     	movff	plusw1,postinc1
 18855  01148A  006F FF8F FFE6     	movff	plusw1,postinc1
 18856  011490  0E97               	movlw	low _dbuf
 18857  011492  6EE6               	movwf	postinc1,c
 18858  011494  0E02               	movlw	high _dbuf
 18859  011496  6EE6               	movwf	postinc1,c
 18860                           
 18861                           ;stkvar	_fp @ sp[(-60)+-2]
 18862  011498  0EC2               	movlw	-62
 18863  01149A  006F FF8F FFE6     	movff	plusw1,postinc1
 18864  0114A0  006F FF8F FFE6     	movff	plusw1,postinc1
 18865  0114A6  EC5C  F0D1         	call	_pad	;wreg free
 18866  0114AA  EF48  F092         	goto	l2346
 18867  0114AE                     l12838:
 18868                           
 18869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 18870                           ;stkvar	_g @ sp[(-56)+16]
 18871  0114AE  0ED8               	movlw	-40
 18872  0114B0  006F FF8F FFE6     	movff	plusw1,postinc1
 18873  0114B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18874  0114BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18875  0114C2  006F FF8F FFE6     	movff	plusw1,postinc1
 18876  0114C8  EC2E  F0C8         	call	___fpclassifyf	;wreg free
 18877  0114CC  5001               	movf	btemp^0,w,c
 18878  0114CE  1002               	iorwf	(btemp+1)^0,w,c
 18879  0114D0  A4D8               	btfss	status,2,c
 18880  0114D2  D056               	goto	l12856
 18881  0114D4  0EBF               	movlw	191
 18882  0114D6  6E0B               	movwf	(btemp+10)^0,c
 18883  0114D8  0EFF               	movlw	255
 18884  0114DA  6E0C               	movwf	(btemp+11)^0,c
 18885                           
 18886                           ;stkvar	_c @ sp[(-56)+-7]
 18887  0114DC  0EC1               	movlw	-63
 18888  0114DE  50E3               	movf	plusw1,w,c
 18889  0114E0  6E09               	movwf	(btemp+8)^0,c
 18890  0114E2  6A0A               	clrf	(btemp+9)^0,c
 18891  0114E4  500B               	movf	(btemp+10)^0,w,c
 18892  0114E6  2609               	addwf	(btemp+8)^0,f,c
 18893  0114E8  500C               	movf	(btemp+11)^0,w,c
 18894  0114EA  220A               	addwfc	(btemp+9)^0,f,c
 18895  0114EC  500A               	movf	(btemp+9)^0,w,c
 18896  0114EE  E106               	bnz	u11800
 18897  0114F0  0E1A               	movlw	26
 18898  0114F2  5C09               	subwf	(btemp+8)^0,w,c
 18899  0114F4  B0D8               	btfsc	status,0,c
 18900  0114F6  D002               	goto	u11800
 18901  0114F8  0E01               	movlw	1
 18902  0114FA  D001               	goto	u11810
 18903  0114FC                     u11800:
 18904  0114FC  0E00               	movlw	0
 18905  0114FE                     u11810:
 18906  0114FE  6E0B               	movwf	(btemp+10)^0,c
 18907  011500  6A0C               	clrf	(btemp+11)^0,c
 18908                           
 18909                           ;stkvar	_efgtoa$5989 @ sp[(-56)+6]
 18910  011502  0ECE               	movlw	-50
 18911  011504  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18912  01150A  0ECF               	movlw	-49
 18913  01150C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18914                           
 18915                           ;stkvar	_efgtoa$5989 @ sp[(-56)+6]
 18916  011512  0ECE               	movlw	-50
 18917  011514  006F FF8C  F001    	movff	plusw1,btemp
 18918  01151A  0ECF               	movlw	-49
 18919  01151C  50E3               	movf	plusw1,w,c
 18920  01151E  1001               	iorwf	btemp^0,w,c
 18921  011520  B4D8               	btfsc	status,2,c
 18922  011522  D017               	goto	l12848
 18923                           
 18924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 18925  011524  0EDA               	movlw	low STR_85
 18926  011526  6EE6               	movwf	postinc1,c
 18927  011528  0EFF               	movlw	high STR_85
 18928  01152A  6EE6               	movwf	postinc1,c
 18929                           
 18930                           ;stkvar	_n @ sp[(-58)+32]
 18931  01152C  0E97               	movlw	low _dbuf
 18932  01152E  6E0B               	movwf	(btemp+10)^0,c
 18933  011530  0E02               	movlw	high _dbuf
 18934  011532  6E0C               	movwf	(btemp+11)^0,c
 18935  011534  0EE6               	movlw	-26
 18936  011536  50E3               	movf	plusw1,w,c
 18937  011538  260B               	addwf	(btemp+10)^0,f,c
 18938  01153A  0EE7               	movlw	-25
 18939  01153C  50E3               	movf	plusw1,w,c
 18940  01153E  220C               	addwfc	(btemp+11)^0,f,c
 18941  011540  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18942  011546  0060  F033  FFE6   	movff	btemp+11,postinc1
 18943  01154C  EC43  F0D5         	call	_strcpy	;wreg free
 18944                           
 18945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 18946  011550  D78D               	goto	l12832
 18947  011552                     l12848:
 18948                           
 18949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 18950  011552  0EE2               	movlw	low STR_86
 18951  011554  6EE6               	movwf	postinc1,c
 18952  011556  0EFF               	movlw	high STR_86
 18953  011558  6EE6               	movwf	postinc1,c
 18954                           
 18955                           ;stkvar	_n @ sp[(-58)+32]
 18956  01155A  0E97               	movlw	low _dbuf
 18957  01155C  6E0B               	movwf	(btemp+10)^0,c
 18958  01155E  0E02               	movlw	high _dbuf
 18959  011560  6E0C               	movwf	(btemp+11)^0,c
 18960  011562  0EE6               	movlw	-26
 18961  011564  50E3               	movf	plusw1,w,c
 18962  011566  260B               	addwf	(btemp+10)^0,f,c
 18963  011568  0EE7               	movlw	-25
 18964  01156A  50E3               	movf	plusw1,w,c
 18965  01156C  220C               	addwfc	(btemp+11)^0,f,c
 18966  01156E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18967  011574  0060  F033  FFE6   	movff	btemp+11,postinc1
 18968  01157A  EC43  F0D5         	call	_strcpy	;wreg free
 18969  01157E  D776               	goto	l12832
 18970  011580                     l12856:
 18971                           
 18972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 18973  011580  0E00               	movlw	0
 18974  011582  6E09               	movwf	(btemp+8)^0,c
 18975  011584  0E00               	movlw	0
 18976  011586  6E0A               	movwf	(btemp+9)^0,c
 18977  011588  0E80               	movlw	128
 18978  01158A  6E0B               	movwf	(btemp+10)^0,c
 18979  01158C  0E3F               	movlw	63
 18980  01158E  6E0C               	movwf	(btemp+11)^0,c
 18981                           
 18982                           ;stkvar	_u @ sp[(-56)+12]
 18983  011590  0ED4               	movlw	-44
 18984  011592  0060  F027  FFE3   	movff	btemp+8,plusw1
 18985  011598  0ED5               	movlw	-43
 18986  01159A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18987  0115A0  0ED6               	movlw	-42
 18988  0115A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18989  0115A8  0ED7               	movlw	-41
 18990  0115AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18991                           
 18992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 18993                           ;stkvar	_e @ sp[(-56)+34]
 18994  0115B0  0EEA               	movlw	-22
 18995  0115B2  6AE3               	clrf	plusw1,c
 18996  0115B4  0EEB               	movlw	-21
 18997  0115B6  6AE3               	clrf	plusw1,c
 18998                           
 18999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 19000  0115B8  0E00               	movlw	0
 19001  0115BA  6EE6               	movwf	postinc1,c
 19002  0115BC  0E00               	movlw	0
 19003  0115BE  6EE6               	movwf	postinc1,c
 19004  0115C0  0E00               	movlw	0
 19005  0115C2  6EE6               	movwf	postinc1,c
 19006  0115C4  0E00               	movlw	0
 19007  0115C6  6EE6               	movwf	postinc1,c
 19008                           
 19009                           ;stkvar	_g @ sp[(-60)+16]
 19010  0115C8  0ED4               	movlw	-44
 19011  0115CA  006F FF8F FFE6     	movff	plusw1,postinc1
 19012  0115D0  006F FF8F FFE6     	movff	plusw1,postinc1
 19013  0115D6  006F FF8F FFE6     	movff	plusw1,postinc1
 19014  0115DC  006F FF8F FFE6     	movff	plusw1,postinc1
 19015  0115E2  EC78  F0D6         	call	___fleq	;wreg free
 19016  0115E6  A001               	btfss	btemp& (0+255),0,c
 19017  0115E8  D039               	goto	l12868
 19018  0115EA  D0BC               	goto	u11850
 19019  0115EC                     l12864:
 19020                           
 19021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 19022  0115EC  0E00               	movlw	0
 19023  0115EE  6EE6               	movwf	postinc1,c
 19024  0115F0  0E00               	movlw	0
 19025  0115F2  6EE6               	movwf	postinc1,c
 19026  0115F4  0E20               	movlw	32
 19027  0115F6  6EE6               	movwf	postinc1,c
 19028  0115F8  0E41               	movlw	65
 19029  0115FA  6EE6               	movwf	postinc1,c
 19030                           
 19031                           ;stkvar	_u @ sp[(-60)+12]
 19032  0115FC  0ED0               	movlw	-48
 19033  0115FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19034  011604  006F FF8F FFE6     	movff	plusw1,postinc1
 19035  01160A  006F FF8F FFE6     	movff	plusw1,postinc1
 19036  011610  006F FF8F FFE6     	movff	plusw1,postinc1
 19037  011616  EC5A  F09F         	call	___flmul	;wreg free
 19038                           
 19039                           ;stkvar	_u @ sp[(-56)+12]
 19040  01161A  0ED4               	movlw	-44
 19041  01161C  0060  F007  FFE3   	movff	btemp,plusw1
 19042  011622  0ED5               	movlw	-43
 19043  011624  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19044  01162A  0ED6               	movlw	-42
 19045  01162C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19046  011632  0ED7               	movlw	-41
 19047  011634  0060  F013  FFE3   	movff	btemp+3,plusw1
 19048                           
 19049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 19050                           ;stkvar	_e @ sp[(-56)+34]
 19051  01163A  0EEA               	movlw	-22
 19052  01163C  50E3               	movf	plusw1,w,c
 19053  01163E  0F01               	addlw	1
 19054  011640  6E01               	movwf	btemp^0,c
 19055  011642  0EEA               	movlw	-22
 19056  011644  0060  F007  FFE3   	movff	btemp,plusw1
 19057  01164A  6A01               	clrf	btemp^0,c
 19058  01164C  0EEB               	movlw	-21
 19059  01164E  50E3               	movf	plusw1,w,c
 19060  011650  2001               	addwfc	btemp^0,w,c
 19061  011652  6E01               	movwf	btemp^0,c
 19062  011654  0EEB               	movlw	-21
 19063  011656  0060  F007  FFE3   	movff	btemp,plusw1
 19064  01165C                     l12868:
 19065                           
 19066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 19067  01165C  0E00               	movlw	0
 19068  01165E  6EE6               	movwf	postinc1,c
 19069  011660  0E00               	movlw	0
 19070  011662  6EE6               	movwf	postinc1,c
 19071  011664  0E20               	movlw	32
 19072  011666  6EE6               	movwf	postinc1,c
 19073  011668  0E41               	movlw	65
 19074  01166A  6EE6               	movwf	postinc1,c
 19075                           
 19076                           ;stkvar	_u @ sp[(-60)+12]
 19077  01166C  0ED0               	movlw	-48
 19078  01166E  006F FF8F FFE6     	movff	plusw1,postinc1
 19079  011674  006F FF8F FFE6     	movff	plusw1,postinc1
 19080  01167A  006F FF8F FFE6     	movff	plusw1,postinc1
 19081  011680  006F FF8F FFE6     	movff	plusw1,postinc1
 19082  011686  EC5A  F09F         	call	___flmul	;wreg free
 19083  01168A  0060  F007  FFE6   	movff	btemp,postinc1
 19084  011690  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19085  011696  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19086  01169C  0060  F013  FFE6   	movff	btemp+3,postinc1
 19087                           
 19088                           ;stkvar	_g @ sp[(-60)+16]
 19089  0116A2  0ED4               	movlw	-44
 19090  0116A4  006F FF8F FFE6     	movff	plusw1,postinc1
 19091  0116AA  006F FF8F FFE6     	movff	plusw1,postinc1
 19092  0116B0  006F FF8F FFE6     	movff	plusw1,postinc1
 19093  0116B6  006F FF8F FFE6     	movff	plusw1,postinc1
 19094  0116BC  EC35  F0CB         	call	___flge	;wreg free
 19095  0116C0  A001               	btfss	btemp& (0+255),0,c
 19096  0116C2  D032               	goto	l12874
 19097  0116C4  D793               	goto	l12864
 19098  0116C6                     l12870:
 19099                           
 19100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 19101  0116C6  0E00               	movlw	0
 19102  0116C8  6EE6               	movwf	postinc1,c
 19103  0116CA  0E00               	movlw	0
 19104  0116CC  6EE6               	movwf	postinc1,c
 19105  0116CE  0E20               	movlw	32
 19106  0116D0  6EE6               	movwf	postinc1,c
 19107  0116D2  0E41               	movlw	65
 19108  0116D4  6EE6               	movwf	postinc1,c
 19109                           
 19110                           ;stkvar	_u @ sp[(-60)+12]
 19111  0116D6  0ED0               	movlw	-48
 19112  0116D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19113  0116DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19114  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
 19115  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
 19116  0116F0  EC4D  F0A7         	call	___fldiv	;wreg free
 19117                           
 19118                           ;stkvar	_u @ sp[(-56)+12]
 19119  0116F4  0ED4               	movlw	-44
 19120  0116F6  0060  F007  FFE3   	movff	btemp,plusw1
 19121  0116FC  0ED5               	movlw	-43
 19122  0116FE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19123  011704  0ED6               	movlw	-42
 19124  011706  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19125  01170C  0ED7               	movlw	-41
 19126  01170E  0060  F013  FFE3   	movff	btemp+3,plusw1
 19127                           
 19128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 19129                           ;stkvar	_e @ sp[(-56)+34]
 19130  011714  50E1               	movf	fsr1l,w,c
 19131  011716  0FEA               	addlw	-22
 19132  011718  6ED9               	movwf	fsr2l,c
 19133  01171A  50E2               	movf	fsr1h,w,c
 19134  01171C  6EDA               	movwf	fsr2h,c
 19135  01171E  0EFF               	movlw	255
 19136  011720  22DA               	addwfc	fsr2h,f,c
 19137  011722  06DE               	decf	postinc2,f,c
 19138  011724  0E00               	movlw	0
 19139  011726  5ADD               	subwfb	postdec2,f,c
 19140  011728                     l12874:
 19141                           
 19142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 19143                           ;stkvar	_u @ sp[(-56)+12]
 19144  011728  0ED4               	movlw	-44
 19145  01172A  006F FF8F FFE6     	movff	plusw1,postinc1
 19146  011730  006F FF8F FFE6     	movff	plusw1,postinc1
 19147  011736  006F FF8F FFE6     	movff	plusw1,postinc1
 19148  01173C  006F FF8F FFE6     	movff	plusw1,postinc1
 19149                           
 19150                           ;stkvar	_g @ sp[(-60)+16]
 19151  011742  0ED4               	movlw	-44
 19152  011744  006F FF8F FFE6     	movff	plusw1,postinc1
 19153  01174A  006F FF8F FFE6     	movff	plusw1,postinc1
 19154  011750  006F FF8F FFE6     	movff	plusw1,postinc1
 19155  011756  006F FF8F FFE6     	movff	plusw1,postinc1
 19156  01175C  EC35  F0CB         	call	___flge	;wreg free
 19157  011760  A001               	btfss	btemp& (0+255),0,c
 19158  011762  D7B1               	goto	l12870
 19159  011764                     u11850:
 19160                           
 19161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 19162                           ;stkvar	_c @ sp[(-56)+-7]
 19163  011764  0EC1               	movlw	-63
 19164  011766  50E3               	movf	plusw1,w,c
 19165  011768  6EE6               	movwf	postinc1,c
 19166  01176A  0E00               	movlw	0
 19167  01176C  6EE6               	movwf	postinc1,c
 19168  01176E  ECAB  F0DB         	call	_tolower	;wreg free
 19169                           
 19170                           ;stkvar	_mode @ sp[(-56)+54]
 19171  011772  0EFE               	movlw	-2
 19172  011774  0060  F007  FFE3   	movff	btemp,plusw1
 19173                           
 19174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 19175                           ;stkvar	_mode @ sp[(-56)+54]
 19176                           ;stkvar	_nmode @ sp[(-56)+55]
 19177  01177A  0EFE               	movlw	-2
 19178  01177C  006F FF8C  F001    	movff	plusw1,btemp
 19179  011782  0EFF               	movlw	-1
 19180  011784  0060  F007  FFE3   	movff	btemp,plusw1
 19181                           
 19182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 19183                           ;stkvar	_mode @ sp[(-56)+54]
 19184  01178A  0EFE               	movlw	-2
 19185  01178C  006F FF8C  F001    	movff	plusw1,btemp
 19186  011792  0E67               	movlw	103
 19187  011794  1801               	xorwf	btemp^0,w,c
 19188  011796  A4D8               	btfss	status,2,c
 19189  011798  D025               	goto	l12892
 19190                           
 19191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 19192  01179A  503C               	movf	_prec^0,w,c
 19193  01179C  103D               	iorwf	(_prec+1)^0,w,c
 19194  01179E  A4D8               	btfss	status,2,c
 19195  0117A0  D004               	goto	l12886
 19196                           
 19197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 19198  0117A2  0E00               	movlw	0
 19199  0117A4  6E3D               	movwf	(_prec+1)^0,c
 19200  0117A6  0E01               	movlw	1
 19201  0117A8  6E3C               	movwf	_prec^0,c
 19202  0117AA                     l12886:
 19203                           
 19204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 19205  0117AA  BE3D               	btfsc	(_prec+1)^0,7,c
 19206  0117AC  D005               	goto	u11880
 19207  0117AE  503D               	movf	(_prec+1)^0,w,c
 19208  0117B0  E110               	bnz	l12890
 19209  0117B2  043C               	decf	_prec^0,w,c
 19210  0117B4  B0D8               	btfsc	status,0,c
 19211  0117B6  D00D               	goto	l12890
 19212  0117B8                     u11880:
 19213  0117B8  0E06               	movlw	6
 19214  0117BA  6E0B               	movwf	(btemp+10)^0,c
 19215  0117BC  0E00               	movlw	0
 19216  0117BE  6E0C               	movwf	(btemp+11)^0,c
 19217                           
 19218                           ;stkvar	_p @ sp[(-56)+40]
 19219  0117C0  0EF0               	movlw	-16
 19220  0117C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19221  0117C8  0EF1               	movlw	-15
 19222  0117CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 19223  0117D0  D00C               	goto	l12898
 19224  0117D2                     l12890:
 19225                           
 19226                           ;stkvar	_p @ sp[(-56)+40]
 19227  0117D2  0EF0               	movlw	-16
 19228  0117D4  0060  F0F3  FFE3   	movff	_prec,plusw1
 19229  0117DA  0EF1               	movlw	-15
 19230  0117DC  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19231  0117E2  D003               	goto	l12898
 19232  0117E4                     l12892:
 19233                           
 19234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 19235  0117E4  AE3D               	btfss	(_prec+1)^0,7,c
 19236  0117E6  D7F5               	goto	l12890
 19237  0117E8  D7E7               	goto	u11880
 19238  0117EA                     l12898:
 19239                           
 19240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 19241                           ;stkvar	_mode @ sp[(-56)+54]
 19242  0117EA  0EFE               	movlw	-2
 19243  0117EC  006F FF8C  F001    	movff	plusw1,btemp
 19244  0117F2  0E67               	movlw	103
 19245  0117F4  1801               	xorwf	btemp^0,w,c
 19246  0117F6  A4D8               	btfss	status,2,c
 19247  0117F8  D02F               	goto	l12908
 19248                           
 19249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 19250                           ;stkvar	_e @ sp[(-56)+34]
 19251  0117FA  0EEB               	movlw	-21
 19252  0117FC  AEE3               	btfss	plusw1,7,c
 19253  0117FE  D00E               	goto	u11910
 19254  011800  0EEA               	movlw	-22
 19255  011802  006F FF8C  F001    	movff	plusw1,btemp
 19256  011808  0EFC               	movlw	252
 19257  01180A  5E01               	subwf	btemp^0,f,c
 19258  01180C  0EEB               	movlw	-21
 19259  01180E  006F FF8C  F001    	movff	plusw1,btemp
 19260  011814  0EFF               	movlw	255
 19261  011816  5A01               	subwfb	btemp^0,f,c
 19262  011818  A0D8               	btfss	status,0,c
 19263  01181A  D018               	goto	l12906
 19264  01181C                     u11910:
 19265                           
 19266                           ;stkvar	_e @ sp[(-56)+34]
 19267                           ;stkvar	_p @ sp[(-56)+40]
 19268  01181C  0EF0               	movlw	-16
 19269  01181E  50E3               	movf	plusw1,w,c
 19270  011820  0FFF               	addlw	255
 19271  011822  6E0B               	movwf	(btemp+10)^0,c
 19272  011824  0EF1               	movlw	-15
 19273  011826  006F FF8C  F00C    	movff	plusw1,btemp+11
 19274  01182C  0EFF               	movlw	255
 19275  01182E  220C               	addwfc	(btemp+11)^0,f,c
 19276  011830  0EEA               	movlw	-22
 19277  011832  50E3               	movf	plusw1,w,c
 19278  011834  5C0B               	subwf	(btemp+10)^0,w,c
 19279  011836  500C               	movf	(btemp+11)^0,w,c
 19280  011838  0A80               	xorlw	128
 19281  01183A  6E01               	movwf	btemp^0,c
 19282  01183C  0EEB               	movlw	-21
 19283  01183E  50E3               	movf	plusw1,w,c
 19284  011840  0A80               	xorlw	128
 19285  011842  5801               	subwfb	btemp^0,w,c
 19286  011844  A0D8               	btfss	status,0,c
 19287  011846  D002               	goto	l12906
 19288                           
 19289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 19290  011848  0E66               	movlw	102
 19291  01184A  D001               	goto	L21
 19292  01184C                     l12906:
 19293                           
 19294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 19295  01184C  0E65               	movlw	101
 19296  01184E                     L21:
 19297  01184E  6E0C               	movwf	(btemp+11)^0,c
 19298                           
 19299                           ;stkvar	_nmode @ sp[(-56)+55]
 19300  011850  0EFF               	movlw	-1
 19301  011852  0060  F033  FFE3   	movff	btemp+11,plusw1
 19302  011858                     l12908:
 19303                           
 19304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 19305                           ;stkvar	_p @ sp[(-56)+40]
 19306                           ;stkvar	_m @ sp[(-56)+48]
 19307  011858  0EF0               	movlw	-16
 19308  01185A  006F FF8C  F001    	movff	plusw1,btemp
 19309  011860  0EF8               	movlw	-8
 19310  011862  0060  F007  FFE3   	movff	btemp,plusw1
 19311  011868  0EF1               	movlw	-15
 19312  01186A  006F FF8C  F001    	movff	plusw1,btemp
 19313  011870  0EF9               	movlw	-7
 19314  011872  0060  F007  FFE3   	movff	btemp,plusw1
 19315                           
 19316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 19317                           ;stkvar	_mode @ sp[(-56)+54]
 19318  011878  0EFE               	movlw	-2
 19319  01187A  006F FF8C  F001    	movff	plusw1,btemp
 19320  011880  0E67               	movlw	103
 19321  011882  1801               	xorwf	btemp^0,w,c
 19322  011884  A4D8               	btfss	status,2,c
 19323  011886  D00B               	goto	u11950
 19324                           
 19325                           ;stkvar	_nmode @ sp[(-56)+55]
 19326  011888  0EFF               	movlw	-1
 19327  01188A  006F FF8C  F001    	movff	plusw1,btemp
 19328  011890  0E66               	movlw	102
 19329  011892  1801               	xorwf	btemp^0,w,c
 19330  011894  A4D8               	btfss	status,2,c
 19331  011896  D014               	goto	l2375
 19332                           
 19333                           ;stkvar	_e @ sp[(-56)+34]
 19334  011898  0EEB               	movlw	-21
 19335  01189A  AEE3               	btfss	plusw1,7,c
 19336  01189C  D011               	goto	l2375
 19337  01189E                     u11950:
 19338                           
 19339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 19340                           ;stkvar	_m @ sp[(-56)+48]
 19341  01189E  0EF8               	movlw	-8
 19342  0118A0  50E3               	movf	plusw1,w,c
 19343  0118A2  0F01               	addlw	1
 19344  0118A4  6E01               	movwf	btemp^0,c
 19345  0118A6  0EF8               	movlw	-8
 19346  0118A8  0060  F007  FFE3   	movff	btemp,plusw1
 19347  0118AE  6A01               	clrf	btemp^0,c
 19348  0118B0  0EF9               	movlw	-7
 19349  0118B2  50E3               	movf	plusw1,w,c
 19350  0118B4  2001               	addwfc	btemp^0,w,c
 19351  0118B6  6E01               	movwf	btemp^0,c
 19352  0118B8  0EF9               	movlw	-7
 19353  0118BA  0060  F007  FFE3   	movff	btemp,plusw1
 19354  0118C0                     l2375:
 19355                           
 19356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 19357                           ;stkvar	_nmode @ sp[(-56)+55]
 19358  0118C0  0EFF               	movlw	-1
 19359  0118C2  006F FF8C  F001    	movff	plusw1,btemp
 19360  0118C8  0E66               	movlw	102
 19361  0118CA  1801               	xorwf	btemp^0,w,c
 19362  0118CC  A4D8               	btfss	status,2,c
 19363  0118CE  D03B               	goto	l12928
 19364                           
 19365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 19366                           ;stkvar	_e @ sp[(-56)+34]
 19367  0118D0  0EEB               	movlw	-21
 19368  0118D2  AEE3               	btfss	plusw1,7,c
 19369  0118D4  D01C               	goto	l12924
 19370                           
 19371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 19372  0118D6  0E00               	movlw	0
 19373  0118D8  6E09               	movwf	(btemp+8)^0,c
 19374  0118DA  0E00               	movlw	0
 19375  0118DC  6E0A               	movwf	(btemp+9)^0,c
 19376  0118DE  0E80               	movlw	128
 19377  0118E0  6E0B               	movwf	(btemp+10)^0,c
 19378  0118E2  0E3F               	movlw	63
 19379  0118E4  6E0C               	movwf	(btemp+11)^0,c
 19380                           
 19381                           ;stkvar	_u @ sp[(-56)+12]
 19382  0118E6  0ED4               	movlw	-44
 19383  0118E8  0060  F027  FFE3   	movff	btemp+8,plusw1
 19384  0118EE  0ED5               	movlw	-43
 19385  0118F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19386  0118F6  0ED6               	movlw	-42
 19387  0118F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19388  0118FE  0ED7               	movlw	-41
 19389  011900  0060  F033  FFE3   	movff	btemp+11,plusw1
 19390                           
 19391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 19392                           ;stkvar	_e @ sp[(-56)+34]
 19393  011906  0EEA               	movlw	-22
 19394  011908  6AE3               	clrf	plusw1,c
 19395  01190A  0EEB               	movlw	-21
 19396  01190C  6AE3               	clrf	plusw1,c
 19397  01190E                     l12924:
 19398                           
 19399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 19400                           ;stkvar	_mode @ sp[(-56)+54]
 19401  01190E  0EFE               	movlw	-2
 19402  011910  006F FF8C  F001    	movff	plusw1,btemp
 19403  011916  0E67               	movlw	103
 19404  011918  1801               	xorwf	btemp^0,w,c
 19405  01191A  B4D8               	btfsc	status,2,c
 19406  01191C  D014               	goto	l12928
 19407                           
 19408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 19409                           ;stkvar	_e @ sp[(-56)+34]
 19410                           ;stkvar	_m @ sp[(-56)+48]
 19411  01191E  0EF8               	movlw	-8
 19412  011920  50E3               	movf	plusw1,w,c
 19413  011922  6E01               	movwf	btemp^0,c
 19414  011924  0EEA               	movlw	-22
 19415  011926  50E3               	movf	plusw1,w,c
 19416  011928  2601               	addwf	btemp^0,f,c
 19417  01192A  0EF8               	movlw	-8
 19418  01192C  0060  F007  FFE3   	movff	btemp,plusw1
 19419  011932  0EF9               	movlw	-7
 19420  011934  50E3               	movf	plusw1,w,c
 19421  011936  6E01               	movwf	btemp^0,c
 19422  011938  0EEB               	movlw	-21
 19423  01193A  50E3               	movf	plusw1,w,c
 19424  01193C  2201               	addwfc	btemp^0,f,c
 19425  01193E  0EF9               	movlw	-7
 19426  011940  0060  F007  FFE3   	movff	btemp,plusw1
 19427  011946                     l12928:
 19428                           
 19429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 19430                           ;stkvar	_i @ sp[(-56)+36]
 19431  011946  0EEC               	movlw	-20
 19432  011948  6AE3               	clrf	plusw1,c
 19433  01194A  0EED               	movlw	-19
 19434  01194C  6AE3               	clrf	plusw1,c
 19435                           
 19436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 19437                           ;stkvar	_g @ sp[(-56)+16]
 19438  01194E  0ED8               	movlw	-40
 19439  011950  006F FF8C  F009    	movff	plusw1,btemp+8
 19440  011956  0ED9               	movlw	-39
 19441  011958  006F FF8C  F00A    	movff	plusw1,btemp+9
 19442  01195E  0EDA               	movlw	-38
 19443  011960  006F FF8C  F00B    	movff	plusw1,btemp+10
 19444  011966  0EDB               	movlw	-37
 19445  011968  006F FF8C  F00C    	movff	plusw1,btemp+11
 19446                           
 19447                           ;stkvar	_h @ sp[(-56)+24]
 19448  01196E  0EE0               	movlw	-32
 19449  011970  0060  F027  FFE3   	movff	btemp+8,plusw1
 19450  011976  0EE1               	movlw	-31
 19451  011978  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19452  01197E  0EE2               	movlw	-30
 19453  011980  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19454  011986  0EE3               	movlw	-29
 19455  011988  0060  F033  FFE3   	movff	btemp+11,plusw1
 19456                           
 19457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 19458                           ;stkvar	_u @ sp[(-56)+12]
 19459  01198E  0ED4               	movlw	-44
 19460  011990  006F FF8C  F009    	movff	plusw1,btemp+8
 19461  011996  0ED5               	movlw	-43
 19462  011998  006F FF8C  F00A    	movff	plusw1,btemp+9
 19463  01199E  0ED6               	movlw	-42
 19464  0119A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19465  0119A6  0ED7               	movlw	-41
 19466  0119A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19467                           
 19468                           ;stkvar	_ou @ sp[(-56)+28]
 19469  0119AE  0EE4               	movlw	-28
 19470  0119B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 19471  0119B6  0EE5               	movlw	-27
 19472  0119B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19473  0119BE  0EE6               	movlw	-26
 19474  0119C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19475  0119C6  0EE7               	movlw	-25
 19476  0119C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19477                           
 19478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 19479  0119CE  D0D6               	goto	l12944
 19480  0119D0                     l12934:
 19481                           
 19482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 19483                           ;stkvar	_u @ sp[(-56)+12]
 19484  0119D0  0ED4               	movlw	-44
 19485  0119D2  006F FF8F FFE6     	movff	plusw1,postinc1
 19486  0119D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19487  0119DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19488  0119E4  006F FF8F FFE6     	movff	plusw1,postinc1
 19489                           
 19490                           ;stkvar	_h @ sp[(-60)+24]
 19491  0119EA  0EDC               	movlw	-36
 19492  0119EC  006F FF8F FFE6     	movff	plusw1,postinc1
 19493  0119F2  006F FF8F FFE6     	movff	plusw1,postinc1
 19494  0119F8  006F FF8F FFE6     	movff	plusw1,postinc1
 19495  0119FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19496  011A04  EC4D  F0A7         	call	___fldiv	;wreg free
 19497  011A08  0060  F007  FFE6   	movff	btemp,postinc1
 19498  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19499  011A14  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19500  011A1A  0060  F013  FFE6   	movff	btemp+3,postinc1
 19501  011A20  EC6D  F0B4         	call	_floorf	;wreg free
 19502                           
 19503                           ;stkvar	_l @ sp[(-56)+20]
 19504  011A24  0EDC               	movlw	-36
 19505  011A26  0060  F007  FFE3   	movff	btemp,plusw1
 19506  011A2C  0EDD               	movlw	-35
 19507  011A2E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19508  011A34  0EDE               	movlw	-34
 19509  011A36  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19510  011A3C  0EDF               	movlw	-33
 19511  011A3E  0060  F013  FFE3   	movff	btemp+3,plusw1
 19512                           
 19513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 19514                           ;stkvar	_l @ sp[(-56)+20]
 19515  011A44  0EDC               	movlw	-36
 19516  011A46  006F FF8F FFE6     	movff	plusw1,postinc1
 19517  011A4C  006F FF8F FFE6     	movff	plusw1,postinc1
 19518  011A52  006F FF8F FFE6     	movff	plusw1,postinc1
 19519  011A58  006F FF8F FFE6     	movff	plusw1,postinc1
 19520  011A5E  EC7C  F0CA         	call	___fltol	;wreg free
 19521  011A62  0060  F004  F00B   	movff	btemp,btemp+10
 19522  011A68  0060  F008  F00C   	movff	btemp+1,btemp+11
 19523                           
 19524                           ;stkvar	_d @ sp[(-56)+44]
 19525  011A6E  0EF4               	movlw	-12
 19526  011A70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19527  011A76  0EF5               	movlw	-11
 19528  011A78  0060  F033  FFE3   	movff	btemp+11,plusw1
 19529                           
 19530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 19531                           ;stkvar	_u @ sp[(-56)+12]
 19532  011A7E  0ED4               	movlw	-44
 19533  011A80  006F FF8F FFE6     	movff	plusw1,postinc1
 19534  011A86  006F FF8F FFE6     	movff	plusw1,postinc1
 19535  011A8C  006F FF8F FFE6     	movff	plusw1,postinc1
 19536  011A92  006F FF8F FFE6     	movff	plusw1,postinc1
 19537                           
 19538                           ;stkvar	_l @ sp[(-60)+20]
 19539  011A98  0ED8               	movlw	-40
 19540  011A9A  006F FF8F FFE6     	movff	plusw1,postinc1
 19541  011AA0  006F FF8F FFE6     	movff	plusw1,postinc1
 19542  011AA6  006F FF8F FFE6     	movff	plusw1,postinc1
 19543  011AAC  006F FF8F FFE6     	movff	plusw1,postinc1
 19544  011AB2  EC5A  F09F         	call	___flmul	;wreg free
 19545  011AB6  0060  F007  FFE6   	movff	btemp,postinc1
 19546  011ABC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19547  011AC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19548  011AC8  0060  F013  FFE6   	movff	btemp+3,postinc1
 19549                           
 19550                           ;stkvar	_h @ sp[(-60)+24]
 19551  011ACE  0EDC               	movlw	-36
 19552  011AD0  006F FF8F FFE6     	movff	plusw1,postinc1
 19553  011AD6  006F FF8F FFE6     	movff	plusw1,postinc1
 19554  011ADC  006F FF8F FFE6     	movff	plusw1,postinc1
 19555  011AE2  006F FF8F FFE6     	movff	plusw1,postinc1
 19556  011AE8  EC18  F0E1         	call	___flsub	;wreg free
 19557                           
 19558                           ;stkvar	_h @ sp[(-56)+24]
 19559  011AEC  0EE0               	movlw	-32
 19560  011AEE  0060  F007  FFE3   	movff	btemp,plusw1
 19561  011AF4  0EE1               	movlw	-31
 19562  011AF6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19563  011AFC  0EE2               	movlw	-30
 19564  011AFE  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19565  011B04  0EE3               	movlw	-29
 19566  011B06  0060  F013  FFE3   	movff	btemp+3,plusw1
 19567                           
 19568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 19569  011B0C  0E00               	movlw	0
 19570  011B0E  6EE6               	movwf	postinc1,c
 19571  011B10  0E00               	movlw	0
 19572  011B12  6EE6               	movwf	postinc1,c
 19573  011B14  0E20               	movlw	32
 19574  011B16  6EE6               	movwf	postinc1,c
 19575  011B18  0E41               	movlw	65
 19576  011B1A  6EE6               	movwf	postinc1,c
 19577                           
 19578                           ;stkvar	_u @ sp[(-60)+12]
 19579  011B1C  0ED0               	movlw	-48
 19580  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 19581  011B24  006F FF8F FFE6     	movff	plusw1,postinc1
 19582  011B2A  006F FF8F FFE6     	movff	plusw1,postinc1
 19583  011B30  006F FF8F FFE6     	movff	plusw1,postinc1
 19584  011B36  EC4D  F0A7         	call	___fldiv	;wreg free
 19585                           
 19586                           ;stkvar	_u @ sp[(-56)+12]
 19587  011B3A  0ED4               	movlw	-44
 19588  011B3C  0060  F007  FFE3   	movff	btemp,plusw1
 19589  011B42  0ED5               	movlw	-43
 19590  011B44  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19591  011B4A  0ED6               	movlw	-42
 19592  011B4C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19593  011B52  0ED7               	movlw	-41
 19594  011B54  0060  F013  FFE3   	movff	btemp+3,plusw1
 19595                           
 19596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 19597                           ;stkvar	_i @ sp[(-56)+36]
 19598  011B5A  0EEC               	movlw	-20
 19599  011B5C  50E3               	movf	plusw1,w,c
 19600  011B5E  0F01               	addlw	1
 19601  011B60  6E01               	movwf	btemp^0,c
 19602  011B62  0EEC               	movlw	-20
 19603  011B64  0060  F007  FFE3   	movff	btemp,plusw1
 19604  011B6A  6A01               	clrf	btemp^0,c
 19605  011B6C  0EED               	movlw	-19
 19606  011B6E  50E3               	movf	plusw1,w,c
 19607  011B70  2001               	addwfc	btemp^0,w,c
 19608  011B72  6E01               	movwf	btemp^0,c
 19609  011B74  0EED               	movlw	-19
 19610  011B76  0060  F007  FFE3   	movff	btemp,plusw1
 19611  011B7C                     l12944:
 19612                           
 19613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 19614                           ;stkvar	_m @ sp[(-56)+48]
 19615                           ;stkvar	_i @ sp[(-56)+36]
 19616  011B7C  50E1               	movf	fsr1l,w,c
 19617  011B7E  0FEC               	addlw	-20
 19618  011B80  6ED9               	movwf	fsr2l,c
 19619  011B82  50E2               	movf	fsr1h,w,c
 19620  011B84  6EDA               	movwf	fsr2h,c
 19621  011B86  0EFF               	movlw	255
 19622  011B88  22DA               	addwfc	fsr2h,f,c
 19623  011B8A  0EF8               	movlw	-8
 19624  011B8C  50E3               	movf	plusw1,w,c
 19625  011B8E  5CDE               	subwf	postinc2,w,c
 19626  011B90  50DE               	movf	postinc2,w,c
 19627  011B92  0A80               	xorlw	128
 19628  011B94  6E01               	movwf	btemp^0,c
 19629  011B96  0EF9               	movlw	-7
 19630  011B98  50E3               	movf	plusw1,w,c
 19631  011B9A  0A80               	xorlw	128
 19632  011B9C  5801               	subwfb	btemp^0,w,c
 19633  011B9E  A0D8               	btfss	status,0,c
 19634  011BA0  D717               	goto	l12934
 19635                           
 19636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 19637  011BA2  0E00               	movlw	0
 19638  011BA4  6EE6               	movwf	postinc1,c
 19639  011BA6  0E00               	movlw	0
 19640  011BA8  6EE6               	movwf	postinc1,c
 19641  011BAA  0EA0               	movlw	160
 19642  011BAC  6EE6               	movwf	postinc1,c
 19643  011BAE  0E40               	movlw	64
 19644  011BB0  6EE6               	movwf	postinc1,c
 19645                           
 19646                           ;stkvar	_u @ sp[(-60)+12]
 19647  011BB2  0ED0               	movlw	-48
 19648  011BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 19649  011BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 19650  011BC0  006F FF8F FFE6     	movff	plusw1,postinc1
 19651  011BC6  006F FF8F FFE6     	movff	plusw1,postinc1
 19652  011BCC  EC5A  F09F         	call	___flmul	;wreg free
 19653                           
 19654                           ;stkvar	_l @ sp[(-56)+20]
 19655  011BD0  0EDC               	movlw	-36
 19656  011BD2  0060  F007  FFE3   	movff	btemp,plusw1
 19657  011BD8  0EDD               	movlw	-35
 19658  011BDA  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19659  011BE0  0EDE               	movlw	-34
 19660  011BE2  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19661  011BE8  0EDF               	movlw	-33
 19662  011BEA  0060  F013  FFE3   	movff	btemp+3,plusw1
 19663                           
 19664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 19665                           ;stkvar	_l @ sp[(-56)+20]
 19666  011BF0  0EDC               	movlw	-36
 19667  011BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 19668  011BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 19669  011BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 19670  011C04  006F FF8F FFE6     	movff	plusw1,postinc1
 19671                           
 19672                           ;stkvar	_h @ sp[(-60)+24]
 19673  011C0A  0EDC               	movlw	-36
 19674  011C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 19675  011C12  006F FF8F FFE6     	movff	plusw1,postinc1
 19676  011C18  006F FF8F FFE6     	movff	plusw1,postinc1
 19677  011C1E  006F FF8F FFE6     	movff	plusw1,postinc1
 19678  011C24  EC35  F0CB         	call	___flge	;wreg free
 19679  011C28  A001               	btfss	btemp& (0+255),0,c
 19680  011C2A  D021               	goto	u12020
 19681                           
 19682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 19683                           ;stkvar	_l @ sp[(-56)+20]
 19684                           
 19685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 19686                           
 19687                           ;stkvar	_l @ sp[(-56)+20]
 19688                           
 19689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 19690  011C2C  0EDC               	movlw	-36
 19691  011C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 19692  011C34  006F FF8F FFE6     	movff	plusw1,postinc1
 19693  011C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 19694  011C40  006F FF8F FFE6     	movff	plusw1,postinc1
 19695                           
 19696                           ;stkvar	_h @ sp[(-60)+24]
 19697  011C46  0EDC               	movlw	-36
 19698  011C48  006F FF8F FFE6     	movff	plusw1,postinc1
 19699  011C4E  006F FF8F FFE6     	movff	plusw1,postinc1
 19700  011C54  006F FF8F FFE6     	movff	plusw1,postinc1
 19701  011C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 19702  011C60  EC78  F0D6         	call	___fleq	;wreg free
 19703  011C64  A001               	btfss	btemp& (0+255),0,c
 19704  011C66  D01B               	goto	l12958
 19705                           
 19706                           ;stkvar	_d @ sp[(-56)+44]
 19707  011C68  0EF4               	movlw	-12
 19708  011C6A  B0E3               	btfsc	plusw1,0,c
 19709  011C6C  D018               	goto	l12958
 19710  011C6E                     u12020:
 19711                           
 19712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 19713  011C6E  0E00               	movlw	0
 19714  011C70  6E09               	movwf	(btemp+8)^0,c
 19715  011C72  0E00               	movlw	0
 19716  011C74  6E0A               	movwf	(btemp+9)^0,c
 19717  011C76  0E00               	movlw	0
 19718  011C78  6E0B               	movwf	(btemp+10)^0,c
 19719  011C7A  0E00               	movlw	0
 19720  011C7C  6E0C               	movwf	(btemp+11)^0,c
 19721                           
 19722                           ;stkvar	_l @ sp[(-56)+20]
 19723  011C7E  0EDC               	movlw	-36
 19724  011C80  0060  F027  FFE3   	movff	btemp+8,plusw1
 19725  011C86  0EDD               	movlw	-35
 19726  011C88  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19727  011C8E  0EDE               	movlw	-34
 19728  011C90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19729  011C96  0EDF               	movlw	-33
 19730  011C98  0060  F033  FFE3   	movff	btemp+11,plusw1
 19731  011C9E                     l12958:
 19732                           
 19733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 19734                           ;stkvar	_l @ sp[(-56)+20]
 19735  011C9E  0EDC               	movlw	-36
 19736  011CA0  006F FF8F FFE6     	movff	plusw1,postinc1
 19737  011CA6  006F FF8F FFE6     	movff	plusw1,postinc1
 19738  011CAC  006F FF8F FFE6     	movff	plusw1,postinc1
 19739  011CB2  006F FF8F FFE6     	movff	plusw1,postinc1
 19740                           
 19741                           ;stkvar	_g @ sp[(-60)+16]
 19742  011CB8  0ED4               	movlw	-44
 19743  011CBA  006F FF8F FFE6     	movff	plusw1,postinc1
 19744  011CC0  006F FF8F FFE6     	movff	plusw1,postinc1
 19745  011CC6  006F FF8F FFE6     	movff	plusw1,postinc1
 19746  011CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 19747  011CD2  EC6F  F0A3         	call	___fladd	;wreg free
 19748                           
 19749                           ;stkvar	_h @ sp[(-56)+24]
 19750  011CD6  0EE0               	movlw	-32
 19751  011CD8  0060  F007  FFE3   	movff	btemp,plusw1
 19752  011CDE  0EE1               	movlw	-31
 19753  011CE0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19754  011CE6  0EE2               	movlw	-30
 19755  011CE8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19756  011CEE  0EE3               	movlw	-29
 19757  011CF0  0060  F013  FFE3   	movff	btemp+3,plusw1
 19758                           
 19759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 19760                           ;stkvar	_ou @ sp[(-56)+28]
 19761  011CF6  0EE4               	movlw	-28
 19762  011CF8  006F FF8C  F009    	movff	plusw1,btemp+8
 19763  011CFE  0EE5               	movlw	-27
 19764  011D00  006F FF8C  F00A    	movff	plusw1,btemp+9
 19765  011D06  0EE6               	movlw	-26
 19766  011D08  006F FF8C  F00B    	movff	plusw1,btemp+10
 19767  011D0E  0EE7               	movlw	-25
 19768  011D10  006F FF8C  F00C    	movff	plusw1,btemp+11
 19769                           
 19770                           ;stkvar	_u @ sp[(-56)+12]
 19771  011D16  0ED4               	movlw	-44
 19772  011D18  0060  F027  FFE3   	movff	btemp+8,plusw1
 19773  011D1E  0ED5               	movlw	-43
 19774  011D20  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19775  011D26  0ED6               	movlw	-42
 19776  011D28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19777  011D2E  0ED7               	movlw	-41
 19778  011D30  0060  F033  FFE3   	movff	btemp+11,plusw1
 19779                           
 19780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 19781                           ;stkvar	_nmode @ sp[(-56)+55]
 19782  011D36  0EFF               	movlw	-1
 19783  011D38  006F FF8C  F001    	movff	plusw1,btemp
 19784  011D3E  0E65               	movlw	101
 19785  011D40  1801               	xorwf	btemp^0,w,c
 19786  011D42  B4D8               	btfsc	status,2,c
 19787  011D44  D011               	goto	l12966
 19788                           
 19789                           ;stkvar	_e @ sp[(-56)+34]
 19790                           ;stkvar	_ne @ sp[(-56)+46]
 19791  011D46  0EEA               	movlw	-22
 19792  011D48  006F FF8C  F001    	movff	plusw1,btemp
 19793  011D4E  0EF6               	movlw	-10
 19794  011D50  0060  F007  FFE3   	movff	btemp,plusw1
 19795  011D56  0EEB               	movlw	-21
 19796  011D58  006F FF8C  F001    	movff	plusw1,btemp
 19797  011D5E  0EF7               	movlw	-9
 19798  011D60  0060  F007  FFE3   	movff	btemp,plusw1
 19799  011D66  D004               	goto	l2390
 19800  011D68                     l12966:
 19801                           
 19802                           ;stkvar	_ne @ sp[(-56)+46]
 19803  011D68  0EF6               	movlw	-10
 19804  011D6A  6AE3               	clrf	plusw1,c
 19805  011D6C  0EF7               	movlw	-9
 19806  011D6E  6AE3               	clrf	plusw1,c
 19807  011D70                     l2390:
 19808                           
 19809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 19810                           ;stkvar	_pp @ sp[(-56)+50]
 19811  011D70  0EFA               	movlw	-6
 19812  011D72  6AE3               	clrf	plusw1,c
 19813  011D74  0EFB               	movlw	-5
 19814  011D76  6AE3               	clrf	plusw1,c
 19815                           
 19816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 19817                           ;stkvar	_t @ sp[(-56)+52]
 19818  011D78  0EFC               	movlw	-4
 19819  011D7A  6AE3               	clrf	plusw1,c
 19820  011D7C  0EFD               	movlw	-3
 19821  011D7E  6AE3               	clrf	plusw1,c
 19822                           
 19823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 19824                           ;stkvar	_i @ sp[(-56)+36]
 19825  011D80  0EEC               	movlw	-20
 19826  011D82  6AE3               	clrf	plusw1,c
 19827  011D84  0EED               	movlw	-19
 19828  011D86  6AE3               	clrf	plusw1,c
 19829                           
 19830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 19831  011D88  D1B7               	goto	l13018
 19832  011D8A                     l12968:
 19833                           
 19834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 19835                           ;stkvar	_u @ sp[(-56)+12]
 19836  011D8A  0ED4               	movlw	-44
 19837  011D8C  006F FF8F FFE6     	movff	plusw1,postinc1
 19838  011D92  006F FF8F FFE6     	movff	plusw1,postinc1
 19839  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 19840  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 19841                           
 19842                           ;stkvar	_h @ sp[(-60)+24]
 19843  011DA4  0EDC               	movlw	-36
 19844  011DA6  006F FF8F FFE6     	movff	plusw1,postinc1
 19845  011DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 19846  011DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 19847  011DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 19848  011DBE  EC4D  F0A7         	call	___fldiv	;wreg free
 19849  011DC2  0060  F007  FFE6   	movff	btemp,postinc1
 19850  011DC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19851  011DCE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19852  011DD4  0060  F013  FFE6   	movff	btemp+3,postinc1
 19853  011DDA  EC6D  F0B4         	call	_floorf	;wreg free
 19854                           
 19855                           ;stkvar	_l @ sp[(-56)+20]
 19856  011DDE  0EDC               	movlw	-36
 19857  011DE0  0060  F007  FFE3   	movff	btemp,plusw1
 19858  011DE6  0EDD               	movlw	-35
 19859  011DE8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19860  011DEE  0EDE               	movlw	-34
 19861  011DF0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19862  011DF6  0EDF               	movlw	-33
 19863  011DF8  0060  F013  FFE3   	movff	btemp+3,plusw1
 19864                           
 19865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 19866                           ;stkvar	_l @ sp[(-56)+20]
 19867  011DFE  0EDC               	movlw	-36
 19868  011E00  006F FF8F FFE6     	movff	plusw1,postinc1
 19869  011E06  006F FF8F FFE6     	movff	plusw1,postinc1
 19870  011E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 19871  011E12  006F FF8F FFE6     	movff	plusw1,postinc1
 19872  011E18  EC7C  F0CA         	call	___fltol	;wreg free
 19873  011E1C  0060  F004  F00B   	movff	btemp,btemp+10
 19874  011E22  0060  F008  F00C   	movff	btemp+1,btemp+11
 19875                           
 19876                           ;stkvar	_d @ sp[(-56)+44]
 19877  011E28  0EF4               	movlw	-12
 19878  011E2A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19879  011E30  0EF5               	movlw	-11
 19880  011E32  0060  F033  FFE3   	movff	btemp+11,plusw1
 19881                           
 19882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 19883  011E38  B83E               	btfsc	_flags^0,4,c
 19884  011E3A  D026               	goto	l12982
 19885                           
 19886                           ;stkvar	_d @ sp[(-56)+44]
 19887  011E3C  0EF4               	movlw	-12
 19888  011E3E  006F FF8C  F001    	movff	plusw1,btemp
 19889  011E44  0EF5               	movlw	-11
 19890  011E46  50E3               	movf	plusw1,w,c
 19891  011E48  1001               	iorwf	btemp^0,w,c
 19892  011E4A  A4D8               	btfss	status,2,c
 19893  011E4C  D01D               	goto	l12982
 19894                           
 19895                           ;stkvar	_mode @ sp[(-56)+54]
 19896  011E4E  0EFE               	movlw	-2
 19897  011E50  006F FF8C  F001    	movff	plusw1,btemp
 19898  011E56  0E67               	movlw	103
 19899  011E58  1801               	xorwf	btemp^0,w,c
 19900  011E5A  A4D8               	btfss	status,2,c
 19901  011E5C  D015               	goto	l12982
 19902                           
 19903                           ;stkvar	_ne @ sp[(-56)+46]
 19904  011E5E  0EF7               	movlw	-9
 19905  011E60  AEE3               	btfss	plusw1,7,c
 19906  011E62  D012               	goto	l12982
 19907                           
 19908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 19909                           ;stkvar	_t @ sp[(-56)+52]
 19910  011E64  0EFC               	movlw	-4
 19911  011E66  50E3               	movf	plusw1,w,c
 19912  011E68  0F01               	addlw	1
 19913  011E6A  6E01               	movwf	btemp^0,c
 19914  011E6C  0EFC               	movlw	-4
 19915  011E6E  0060  F007  FFE3   	movff	btemp,plusw1
 19916  011E74  6A01               	clrf	btemp^0,c
 19917  011E76  0EFD               	movlw	-3
 19918  011E78  50E3               	movf	plusw1,w,c
 19919  011E7A  2001               	addwfc	btemp^0,w,c
 19920  011E7C  6E01               	movwf	btemp^0,c
 19921  011E7E  0EFD               	movlw	-3
 19922  011E80  0060  F007  FFE3   	movff	btemp,plusw1
 19923                           
 19924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 19925  011E86  D0AF               	goto	l13010
 19926  011E88                     l12982:
 19927                           
 19928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 19929                           ;stkvar	_pp @ sp[(-56)+50]
 19930  011E88  0EFA               	movlw	-6
 19931  011E8A  006F FF8C  F001    	movff	plusw1,btemp
 19932  011E90  0EFB               	movlw	-5
 19933  011E92  50E3               	movf	plusw1,w,c
 19934  011E94  1001               	iorwf	btemp^0,w,c
 19935  011E96  A4D8               	btfss	status,2,c
 19936  011E98  D070               	goto	l13002
 19937                           
 19938                           ;stkvar	_ne @ sp[(-56)+46]
 19939  011E9A  0EF7               	movlw	-9
 19940  011E9C  AEE3               	btfss	plusw1,7,c
 19941  011E9E  D06D               	goto	l13002
 19942                           
 19943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 19944                           ;stkvar	_n @ sp[(-56)+32]
 19945  011EA0  0EE8               	movlw	-24
 19946  011EA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19947  011EA8  0EE9               	movlw	-23
 19948  011EAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19949  011EB0  0E97               	movlw	low _dbuf
 19950  011EB2  240B               	addwf	(btemp+10)^0,w,c
 19951  011EB4  6ED9               	movwf	fsr2l,c
 19952  011EB6  0E02               	movlw	high _dbuf
 19953  011EB8  200C               	addwfc	(btemp+11)^0,w,c
 19954  011EBA  6EDA               	movwf	fsr2h,c
 19955  011EBC  0E2E               	movlw	46
 19956  011EBE  6EDF               	movwf	indf2,c
 19957                           
 19958                           ;stkvar	_n @ sp[(-56)+32]
 19959  011EC0  0EE8               	movlw	-24
 19960  011EC2  50E3               	movf	plusw1,w,c
 19961  011EC4  0F01               	addlw	1
 19962  011EC6  6E01               	movwf	btemp^0,c
 19963  011EC8  0EE8               	movlw	-24
 19964  011ECA  0060  F007  FFE3   	movff	btemp,plusw1
 19965  011ED0  6A01               	clrf	btemp^0,c
 19966  011ED2  0EE9               	movlw	-23
 19967  011ED4  50E3               	movf	plusw1,w,c
 19968  011ED6  2001               	addwfc	btemp^0,w,c
 19969  011ED8  6E01               	movwf	btemp^0,c
 19970  011EDA  0EE9               	movlw	-23
 19971  011EDC  0060  F007  FFE3   	movff	btemp,plusw1
 19972                           
 19973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 19974                           ;stkvar	_w @ sp[(-56)+38]
 19975  011EE2  50E1               	movf	fsr1l,w,c
 19976  011EE4  0FEE               	addlw	-18
 19977  011EE6  6ED9               	movwf	fsr2l,c
 19978  011EE8  50E2               	movf	fsr1h,w,c
 19979  011EEA  6EDA               	movwf	fsr2h,c
 19980  011EEC  0EFF               	movlw	255
 19981  011EEE  22DA               	addwfc	fsr2h,f,c
 19982  011EF0  06DE               	decf	postinc2,f,c
 19983  011EF2  0E00               	movlw	0
 19984  011EF4  5ADD               	subwfb	postdec2,f,c
 19985                           
 19986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 19987  011EF6  0E01               	movlw	1
 19988  011EF8  6E0B               	movwf	(btemp+10)^0,c
 19989  011EFA  0E00               	movlw	0
 19990  011EFC  6E0C               	movwf	(btemp+11)^0,c
 19991                           
 19992                           ;stkvar	_pp @ sp[(-56)+50]
 19993  011EFE  0EFA               	movlw	-6
 19994  011F00  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19995  011F06  0EFB               	movlw	-5
 19996  011F08  0060  F033  FFE3   	movff	btemp+11,plusw1
 19997  011F0E  D035               	goto	l13002
 19998  011F10                     l12994:
 19999                           
 20000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 20001                           ;stkvar	_n @ sp[(-56)+32]
 20002  011F10  0EE8               	movlw	-24
 20003  011F12  006F FF8C  F00B    	movff	plusw1,btemp+10
 20004  011F18  0EE9               	movlw	-23
 20005  011F1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20006  011F20  0E97               	movlw	low _dbuf
 20007  011F22  240B               	addwf	(btemp+10)^0,w,c
 20008  011F24  6ED9               	movwf	fsr2l,c
 20009  011F26  0E02               	movlw	high _dbuf
 20010  011F28  200C               	addwfc	(btemp+11)^0,w,c
 20011  011F2A  6EDA               	movwf	fsr2h,c
 20012  011F2C  0E30               	movlw	48
 20013  011F2E  6EDF               	movwf	indf2,c
 20014                           
 20015                           ;stkvar	_n @ sp[(-56)+32]
 20016  011F30  0EE8               	movlw	-24
 20017  011F32  50E3               	movf	plusw1,w,c
 20018  011F34  0F01               	addlw	1
 20019  011F36  6E01               	movwf	btemp^0,c
 20020  011F38  0EE8               	movlw	-24
 20021  011F3A  0060  F007  FFE3   	movff	btemp,plusw1
 20022  011F40  6A01               	clrf	btemp^0,c
 20023  011F42  0EE9               	movlw	-23
 20024  011F44  50E3               	movf	plusw1,w,c
 20025  011F46  2001               	addwfc	btemp^0,w,c
 20026  011F48  6E01               	movwf	btemp^0,c
 20027  011F4A  0EE9               	movlw	-23
 20028  011F4C  0060  F007  FFE3   	movff	btemp,plusw1
 20029                           
 20030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 20031                           ;stkvar	_w @ sp[(-56)+38]
 20032  011F52  50E1               	movf	fsr1l,w,c
 20033  011F54  0FEE               	addlw	-18
 20034  011F56  6ED9               	movwf	fsr2l,c
 20035  011F58  50E2               	movf	fsr1h,w,c
 20036  011F5A  6EDA               	movwf	fsr2h,c
 20037  011F5C  0EFF               	movlw	255
 20038  011F5E  22DA               	addwfc	fsr2h,f,c
 20039  011F60  06DE               	decf	postinc2,f,c
 20040  011F62  0E00               	movlw	0
 20041  011F64  5ADD               	subwfb	postdec2,f,c
 20042                           
 20043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 20044                           ;stkvar	_t @ sp[(-56)+52]
 20045  011F66  50E1               	movf	fsr1l,w,c
 20046  011F68  0FFC               	addlw	-4
 20047  011F6A  6ED9               	movwf	fsr2l,c
 20048  011F6C  50E2               	movf	fsr1h,w,c
 20049  011F6E  6EDA               	movwf	fsr2h,c
 20050  011F70  0EFF               	movlw	255
 20051  011F72  22DA               	addwfc	fsr2h,f,c
 20052  011F74  06DE               	decf	postinc2,f,c
 20053  011F76  0E00               	movlw	0
 20054  011F78  5ADD               	subwfb	postdec2,f,c
 20055  011F7A                     l13002:
 20056                           
 20057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 20058                           ;stkvar	_t @ sp[(-56)+52]
 20059  011F7A  0EFC               	movlw	-4
 20060  011F7C  006F FF8C  F001    	movff	plusw1,btemp
 20061  011F82  0EFD               	movlw	-3
 20062  011F84  50E3               	movf	plusw1,w,c
 20063  011F86  1001               	iorwf	btemp^0,w,c
 20064  011F88  A4D8               	btfss	status,2,c
 20065  011F8A  D7C2               	goto	l12994
 20066                           
 20067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 20068                           ;stkvar	_n @ sp[(-56)+32]
 20069  011F8C  0EE8               	movlw	-24
 20070  011F8E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20071  011F94  0EE9               	movlw	-23
 20072  011F96  006F FF8C  F00C    	movff	plusw1,btemp+11
 20073  011F9C  0E97               	movlw	low _dbuf
 20074  011F9E  240B               	addwf	(btemp+10)^0,w,c
 20075  011FA0  6ED9               	movwf	fsr2l,c
 20076  011FA2  0E02               	movlw	high _dbuf
 20077  011FA4  200C               	addwfc	(btemp+11)^0,w,c
 20078  011FA6  6EDA               	movwf	fsr2h,c
 20079                           
 20080                           ;stkvar	_d @ sp[(-56)+44]
 20081  011FA8  0EF4               	movlw	-12
 20082  011FAA  50E3               	movf	plusw1,w,c
 20083  011FAC  0F30               	addlw	48
 20084  011FAE  6EDF               	movwf	indf2,c
 20085                           
 20086                           ;stkvar	_n @ sp[(-56)+32]
 20087  011FB0  0EE8               	movlw	-24
 20088  011FB2  50E3               	movf	plusw1,w,c
 20089  011FB4  0F01               	addlw	1
 20090  011FB6  6E01               	movwf	btemp^0,c
 20091  011FB8  0EE8               	movlw	-24
 20092  011FBA  0060  F007  FFE3   	movff	btemp,plusw1
 20093  011FC0  6A01               	clrf	btemp^0,c
 20094  011FC2  0EE9               	movlw	-23
 20095  011FC4  50E3               	movf	plusw1,w,c
 20096  011FC6  2001               	addwfc	btemp^0,w,c
 20097  011FC8  6E01               	movwf	btemp^0,c
 20098  011FCA  0EE9               	movlw	-23
 20099  011FCC  0060  F007  FFE3   	movff	btemp,plusw1
 20100                           
 20101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 20102                           ;stkvar	_w @ sp[(-56)+38]
 20103  011FD2  50E1               	movf	fsr1l,w,c
 20104  011FD4  0FEE               	addlw	-18
 20105  011FD6  6ED9               	movwf	fsr2l,c
 20106  011FD8  50E2               	movf	fsr1h,w,c
 20107  011FDA  6EDA               	movwf	fsr2h,c
 20108  011FDC  0EFF               	movlw	255
 20109  011FDE  22DA               	addwfc	fsr2h,f,c
 20110  011FE0  06DE               	decf	postinc2,f,c
 20111  011FE2  0E00               	movlw	0
 20112  011FE4  5ADD               	subwfb	postdec2,f,c
 20113  011FE6                     l13010:
 20114                           
 20115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 20116                           ;stkvar	_u @ sp[(-56)+12]
 20117  011FE6  0ED4               	movlw	-44
 20118  011FE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20119  011FEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20120  011FF4  006F FF8F FFE6     	movff	plusw1,postinc1
 20121  011FFA  006F FF8F FFE6     	movff	plusw1,postinc1
 20122                           
 20123                           ;stkvar	_l @ sp[(-60)+20]
 20124  012000  0ED8               	movlw	-40
 20125  012002  006F FF8F FFE6     	movff	plusw1,postinc1
 20126  012008  006F FF8F FFE6     	movff	plusw1,postinc1
 20127  01200E  006F FF8F FFE6     	movff	plusw1,postinc1
 20128  012014  006F FF8F FFE6     	movff	plusw1,postinc1
 20129  01201A  EC5A  F09F         	call	___flmul	;wreg free
 20130  01201E  0060  F007  FFE6   	movff	btemp,postinc1
 20131  012024  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20132  01202A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20133  012030  0060  F013  FFE6   	movff	btemp+3,postinc1
 20134                           
 20135                           ;stkvar	_h @ sp[(-60)+24]
 20136  012036  0EDC               	movlw	-36
 20137  012038  006F FF8F FFE6     	movff	plusw1,postinc1
 20138  01203E  006F FF8F FFE6     	movff	plusw1,postinc1
 20139  012044  006F FF8F FFE6     	movff	plusw1,postinc1
 20140  01204A  006F FF8F FFE6     	movff	plusw1,postinc1
 20141  012050  EC18  F0E1         	call	___flsub	;wreg free
 20142                           
 20143                           ;stkvar	_h @ sp[(-56)+24]
 20144  012054  0EE0               	movlw	-32
 20145  012056  0060  F007  FFE3   	movff	btemp,plusw1
 20146  01205C  0EE1               	movlw	-31
 20147  01205E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20148  012064  0EE2               	movlw	-30
 20149  012066  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20150  01206C  0EE3               	movlw	-29
 20151  01206E  0060  F013  FFE3   	movff	btemp+3,plusw1
 20152                           
 20153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 20154  012074  0E00               	movlw	0
 20155  012076  6EE6               	movwf	postinc1,c
 20156  012078  0E00               	movlw	0
 20157  01207A  6EE6               	movwf	postinc1,c
 20158  01207C  0E20               	movlw	32
 20159  01207E  6EE6               	movwf	postinc1,c
 20160  012080  0E41               	movlw	65
 20161  012082  6EE6               	movwf	postinc1,c
 20162                           
 20163                           ;stkvar	_u @ sp[(-60)+12]
 20164  012084  0ED0               	movlw	-48
 20165  012086  006F FF8F FFE6     	movff	plusw1,postinc1
 20166  01208C  006F FF8F FFE6     	movff	plusw1,postinc1
 20167  012092  006F FF8F FFE6     	movff	plusw1,postinc1
 20168  012098  006F FF8F FFE6     	movff	plusw1,postinc1
 20169  01209E  EC4D  F0A7         	call	___fldiv	;wreg free
 20170                           
 20171                           ;stkvar	_u @ sp[(-56)+12]
 20172  0120A2  0ED4               	movlw	-44
 20173  0120A4  0060  F007  FFE3   	movff	btemp,plusw1
 20174  0120AA  0ED5               	movlw	-43
 20175  0120AC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20176  0120B2  0ED6               	movlw	-42
 20177  0120B4  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20178  0120BA  0ED7               	movlw	-41
 20179  0120BC  0060  F013  FFE3   	movff	btemp+3,plusw1
 20180                           
 20181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 20182                           ;stkvar	_ne @ sp[(-56)+46]
 20183  0120C2  50E1               	movf	fsr1l,w,c
 20184  0120C4  0FF6               	addlw	-10
 20185  0120C6  6ED9               	movwf	fsr2l,c
 20186  0120C8  50E2               	movf	fsr1h,w,c
 20187  0120CA  6EDA               	movwf	fsr2h,c
 20188  0120CC  0EFF               	movlw	255
 20189  0120CE  22DA               	addwfc	fsr2h,f,c
 20190  0120D0  06DE               	decf	postinc2,f,c
 20191  0120D2  0E00               	movlw	0
 20192  0120D4  5ADD               	subwfb	postdec2,f,c
 20193                           
 20194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 20195                           ;stkvar	_i @ sp[(-56)+36]
 20196  0120D6  0EEC               	movlw	-20
 20197  0120D8  50E3               	movf	plusw1,w,c
 20198  0120DA  0F01               	addlw	1
 20199  0120DC  6E01               	movwf	btemp^0,c
 20200  0120DE  0EEC               	movlw	-20
 20201  0120E0  0060  F007  FFE3   	movff	btemp,plusw1
 20202  0120E6  6A01               	clrf	btemp^0,c
 20203  0120E8  0EED               	movlw	-19
 20204  0120EA  50E3               	movf	plusw1,w,c
 20205  0120EC  2001               	addwfc	btemp^0,w,c
 20206  0120EE  6E01               	movwf	btemp^0,c
 20207  0120F0  0EED               	movlw	-19
 20208  0120F2  0060  F007  FFE3   	movff	btemp,plusw1
 20209  0120F8                     l13018:
 20210                           
 20211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 20212                           ;stkvar	_m @ sp[(-56)+48]
 20213                           ;stkvar	_i @ sp[(-56)+36]
 20214  0120F8  50E1               	movf	fsr1l,w,c
 20215  0120FA  0FEC               	addlw	-20
 20216  0120FC  6ED9               	movwf	fsr2l,c
 20217  0120FE  50E2               	movf	fsr1h,w,c
 20218  012100  6EDA               	movwf	fsr2h,c
 20219  012102  0EFF               	movlw	255
 20220  012104  22DA               	addwfc	fsr2h,f,c
 20221  012106  0EF8               	movlw	-8
 20222  012108  50E3               	movf	plusw1,w,c
 20223  01210A  5CDE               	subwf	postinc2,w,c
 20224  01210C  50DE               	movf	postinc2,w,c
 20225  01210E  0A80               	xorlw	128
 20226  012110  6E01               	movwf	btemp^0,c
 20227  012112  0EF9               	movlw	-7
 20228  012114  50E3               	movf	plusw1,w,c
 20229  012116  0A80               	xorlw	128
 20230  012118  5801               	subwfb	btemp^0,w,c
 20231  01211A  B0D8               	btfsc	status,0,c
 20232  01211C  D00E               	goto	u12120
 20233                           
 20234                           ;stkvar	_n @ sp[(-56)+32]
 20235  01211E  0EE9               	movlw	-23
 20236  012120  BEE3               	btfsc	plusw1,7,c
 20237  012122  D633               	goto	l12968
 20238  012124  0EE9               	movlw	-23
 20239  012126  50E3               	movf	plusw1,w,c
 20240  012128  E108               	bnz	u12120
 20241  01212A  0EE8               	movlw	-24
 20242  01212C  006F FF8C  F001    	movff	plusw1,btemp
 20243  012132  0E4B               	movlw	75
 20244  012134  5E01               	subwf	btemp^0,f,c
 20245  012136  A0D8               	btfss	status,0,c
 20246  012138  D628               	goto	l12968
 20247  01213A                     u12120:
 20248                           
 20249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 20250                           ;stkvar	_pp @ sp[(-56)+50]
 20251  01213A  0EFA               	movlw	-6
 20252  01213C  006F FF8C  F001    	movff	plusw1,btemp
 20253  012142  0EFB               	movlw	-5
 20254  012144  50E3               	movf	plusw1,w,c
 20255  012146  1001               	iorwf	btemp^0,w,c
 20256  012148  B4D8               	btfsc	status,2,c
 20257  01214A  A83E               	btfss	_flags^0,4,c
 20258  01214C  D021               	goto	l13030
 20259                           
 20260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 20261                           ;stkvar	_n @ sp[(-56)+32]
 20262  01214E  0EE8               	movlw	-24
 20263  012150  006F FF8C  F00B    	movff	plusw1,btemp+10
 20264  012156  0EE9               	movlw	-23
 20265  012158  006F FF8C  F00C    	movff	plusw1,btemp+11
 20266  01215E  0E97               	movlw	low _dbuf
 20267  012160  240B               	addwf	(btemp+10)^0,w,c
 20268  012162  6ED9               	movwf	fsr2l,c
 20269  012164  0E02               	movlw	high _dbuf
 20270  012166  200C               	addwfc	(btemp+11)^0,w,c
 20271  012168  6EDA               	movwf	fsr2h,c
 20272  01216A  0E2E               	movlw	46
 20273  01216C  6EDF               	movwf	indf2,c
 20274                           
 20275                           ;stkvar	_n @ sp[(-56)+32]
 20276  01216E  0EE8               	movlw	-24
 20277  012170  50E3               	movf	plusw1,w,c
 20278  012172  0F01               	addlw	1
 20279  012174  6E01               	movwf	btemp^0,c
 20280  012176  0EE8               	movlw	-24
 20281  012178  0060  F007  FFE3   	movff	btemp,plusw1
 20282  01217E  6A01               	clrf	btemp^0,c
 20283  012180  0EE9               	movlw	-23
 20284  012182  50E3               	movf	plusw1,w,c
 20285  012184  2001               	addwfc	btemp^0,w,c
 20286  012186  6E01               	movwf	btemp^0,c
 20287  012188  0EE9               	movlw	-23
 20288  01218A  0060  F007  FFE3   	movff	btemp,plusw1
 20289  012190                     l13030:
 20290                           
 20291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 20292                           ;stkvar	_n @ sp[(-56)+32]
 20293  012190  0EE8               	movlw	-24
 20294  012192  006F FF8C  F00B    	movff	plusw1,btemp+10
 20295  012198  0EE9               	movlw	-23
 20296  01219A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20297  0121A0  0E97               	movlw	low _dbuf
 20298  0121A2  240B               	addwf	(btemp+10)^0,w,c
 20299  0121A4  6ED9               	movwf	fsr2l,c
 20300  0121A6  0E02               	movlw	high _dbuf
 20301  0121A8  200C               	addwfc	(btemp+11)^0,w,c
 20302  0121AA  6EDA               	movwf	fsr2h,c
 20303  0121AC  0E00               	movlw	0
 20304  0121AE  6EDF               	movwf	indf2,c
 20305                           
 20306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 20307                           ;stkvar	_nmode @ sp[(-56)+55]
 20308  0121B0  0EFF               	movlw	-1
 20309  0121B2  006F FF8C  F001    	movff	plusw1,btemp
 20310  0121B8  0E65               	movlw	101
 20311  0121BA  1801               	xorwf	btemp^0,w,c
 20312  0121BC  A4D8               	btfss	status,2,c
 20313  0121BE  EF41  F08A         	goto	l12834
 20314                           
 20315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 20316  0121C2  0E4F               	movlw	79
 20317  0121C4  6E0B               	movwf	(btemp+10)^0,c
 20318  0121C6  0E00               	movlw	0
 20319  0121C8  6E0C               	movwf	(btemp+11)^0,c
 20320                           
 20321                           ;stkvar	_i @ sp[(-56)+36]
 20322  0121CA  0EEC               	movlw	-20
 20323  0121CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20324  0121D2  0EED               	movlw	-19
 20325  0121D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 20326                           
 20327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 20328                           ;stkvar	_i @ sp[(-56)+36]
 20329  0121DA  0EEC               	movlw	-20
 20330  0121DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20331  0121E2  0EED               	movlw	-19
 20332  0121E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20333  0121EA  0E97               	movlw	low _dbuf
 20334  0121EC  240B               	addwf	(btemp+10)^0,w,c
 20335  0121EE  6ED9               	movwf	fsr2l,c
 20336  0121F0  0E02               	movlw	high _dbuf
 20337  0121F2  200C               	addwfc	(btemp+11)^0,w,c
 20338  0121F4  6EDA               	movwf	fsr2h,c
 20339  0121F6  0E00               	movlw	0
 20340  0121F8  6EDF               	movwf	indf2,c
 20341                           
 20342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 20343                           ;stkvar	_sign @ sp[(-56)+42]
 20344  0121FA  0EF2               	movlw	-14
 20345  0121FC  6AE3               	clrf	plusw1,c
 20346  0121FE  0EF3               	movlw	-13
 20347  012200  6AE3               	clrf	plusw1,c
 20348                           
 20349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 20350                           ;stkvar	_e @ sp[(-56)+34]
 20351  012202  0EEB               	movlw	-21
 20352  012204  AEE3               	btfss	plusw1,7,c
 20353  012206  D012               	goto	l13044
 20354                           
 20355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 20356  012208  0E01               	movlw	1
 20357  01220A  6E0B               	movwf	(btemp+10)^0,c
 20358  01220C  0E00               	movlw	0
 20359  01220E  6E0C               	movwf	(btemp+11)^0,c
 20360                           
 20361                           ;stkvar	_sign @ sp[(-56)+42]
 20362  012210  0EF2               	movlw	-14
 20363  012212  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20364  012218  0EF3               	movlw	-13
 20365  01221A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20366                           
 20367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 20368                           ;stkvar	_e @ sp[(-56)+34]
 20369                           ;stkvar	_e @ sp[(-56)+34]
 20370  012220  0EEA               	movlw	-22
 20371  012222  6CE3               	negf	plusw1,c
 20372  012224  0EEB               	movlw	-21
 20373  012226  1EE3               	comf	plusw1,f,c
 20374  012228  B0D8               	btfsc	status,0,c
 20375  01222A  2AE3               	incf	plusw1,f,c
 20376  01222C                     l13044:
 20377                           
 20378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 20379  01222C  0E02               	movlw	2
 20380  01222E  6E0B               	movwf	(btemp+10)^0,c
 20381  012230  0E00               	movlw	0
 20382  012232  6E0C               	movwf	(btemp+11)^0,c
 20383                           
 20384                           ;stkvar	_p @ sp[(-56)+40]
 20385  012234  0EF0               	movlw	-16
 20386  012236  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20387  01223C  0EF1               	movlw	-15
 20388  01223E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20389                           
 20390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 20391  012244  D051               	goto	l13056
 20392  012246                     l13046:
 20393                           
 20394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 20395                           ;stkvar	_i @ sp[(-56)+36]
 20396  012246  50E1               	movf	fsr1l,w,c
 20397  012248  0FEC               	addlw	-20
 20398  01224A  6ED9               	movwf	fsr2l,c
 20399  01224C  50E2               	movf	fsr1h,w,c
 20400  01224E  6EDA               	movwf	fsr2h,c
 20401  012250  0EFF               	movlw	255
 20402  012252  22DA               	addwfc	fsr2h,f,c
 20403  012254  06DE               	decf	postinc2,f,c
 20404  012256  0E00               	movlw	0
 20405  012258  5ADD               	subwfb	postdec2,f,c
 20406                           
 20407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 20408                           ;stkvar	_i @ sp[(-56)+36]
 20409  01225A  0EEC               	movlw	-20
 20410  01225C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20411  012262  0EED               	movlw	-19
 20412  012264  006F FF8C  F00C    	movff	plusw1,btemp+11
 20413  01226A  0E97               	movlw	low _dbuf
 20414  01226C  240B               	addwf	(btemp+10)^0,w,c
 20415  01226E  6ED9               	movwf	fsr2l,c
 20416  012270  0E02               	movlw	high _dbuf
 20417  012272  200C               	addwfc	(btemp+11)^0,w,c
 20418  012274  6EDA               	movwf	fsr2h,c
 20419  012276  0E0A               	movlw	10
 20420  012278  6EE6               	movwf	postinc1,c
 20421  01227A  0E00               	movlw	0
 20422  01227C  6EE6               	movwf	postinc1,c
 20423                           
 20424                           ;stkvar	_e @ sp[(-58)+34]
 20425  01227E  0EE8               	movlw	-24
 20426  012280  006F FF8F FFE6     	movff	plusw1,postinc1
 20427  012286  006F FF8F FFE6     	movff	plusw1,postinc1
 20428  01228C  ECD0  F0D0         	call	___awmod	;wreg free
 20429  012290  5001               	movf	btemp^0,w,c
 20430  012292  0F30               	addlw	48
 20431  012294  6EDF               	movwf	indf2,c
 20432                           
 20433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 20434  012296  0E0A               	movlw	10
 20435  012298  6EE6               	movwf	postinc1,c
 20436  01229A  0E00               	movlw	0
 20437  01229C  6EE6               	movwf	postinc1,c
 20438                           
 20439                           ;stkvar	_e @ sp[(-58)+34]
 20440  01229E  0EE8               	movlw	-24
 20441  0122A0  006F FF8F FFE6     	movff	plusw1,postinc1
 20442  0122A6  006F FF8F FFE6     	movff	plusw1,postinc1
 20443  0122AC  EC97  F0CC         	call	___awdiv	;wreg free
 20444                           
 20445                           ;stkvar	_e @ sp[(-56)+34]
 20446  0122B0  0EEA               	movlw	-22
 20447  0122B2  0060  F007  FFE3   	movff	btemp,plusw1
 20448  0122B8  0EEB               	movlw	-21
 20449  0122BA  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20450                           
 20451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 20452                           ;stkvar	_p @ sp[(-56)+40]
 20453  0122C0  50E1               	movf	fsr1l,w,c
 20454  0122C2  0FF0               	addlw	-16
 20455  0122C4  6ED9               	movwf	fsr2l,c
 20456  0122C6  50E2               	movf	fsr1h,w,c
 20457  0122C8  6EDA               	movwf	fsr2h,c
 20458  0122CA  0EFF               	movlw	255
 20459  0122CC  22DA               	addwfc	fsr2h,f,c
 20460  0122CE  06DE               	decf	postinc2,f,c
 20461  0122D0  0E00               	movlw	0
 20462  0122D2  5ADD               	subwfb	postdec2,f,c
 20463                           
 20464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 20465                           ;stkvar	_w @ sp[(-56)+38]
 20466  0122D4  50E1               	movf	fsr1l,w,c
 20467  0122D6  0FEE               	addlw	-18
 20468  0122D8  6ED9               	movwf	fsr2l,c
 20469  0122DA  50E2               	movf	fsr1h,w,c
 20470  0122DC  6EDA               	movwf	fsr2h,c
 20471  0122DE  0EFF               	movlw	255
 20472  0122E0  22DA               	addwfc	fsr2h,f,c
 20473  0122E2  06DE               	decf	postinc2,f,c
 20474  0122E4  0E00               	movlw	0
 20475  0122E6  5ADD               	subwfb	postdec2,f,c
 20476  0122E8                     l13056:
 20477                           
 20478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 20479                           ;stkvar	_e @ sp[(-56)+34]
 20480  0122E8  0EEA               	movlw	-22
 20481  0122EA  006F FF8C  F001    	movff	plusw1,btemp
 20482  0122F0  0EEB               	movlw	-21
 20483  0122F2  50E3               	movf	plusw1,w,c
 20484  0122F4  1001               	iorwf	btemp^0,w,c
 20485  0122F6  A4D8               	btfss	status,2,c
 20486  0122F8  D7A6               	goto	l13046
 20487                           
 20488                           ;stkvar	_p @ sp[(-56)+40]
 20489  0122FA  0EF1               	movlw	-15
 20490  0122FC  BEE3               	btfsc	plusw1,7,c
 20491  0122FE  D007               	goto	u12180
 20492  012300  0EF1               	movlw	-15
 20493  012302  50E3               	movf	plusw1,w,c
 20494  012304  E1A0               	bnz	l13046
 20495  012306  0EF0               	movlw	-16
 20496  012308  04E3               	decf	plusw1,w,c
 20497  01230A  B0D8               	btfsc	status,0,c
 20498  01230C  D79C               	goto	l13046
 20499  01230E                     u12180:
 20500                           
 20501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 20502                           ;stkvar	_i @ sp[(-56)+36]
 20503  01230E  50E1               	movf	fsr1l,w,c
 20504  012310  0FEC               	addlw	-20
 20505  012312  6ED9               	movwf	fsr2l,c
 20506  012314  50E2               	movf	fsr1h,w,c
 20507  012316  6EDA               	movwf	fsr2h,c
 20508  012318  0EFF               	movlw	255
 20509  01231A  22DA               	addwfc	fsr2h,f,c
 20510  01231C  06DE               	decf	postinc2,f,c
 20511  01231E  0E00               	movlw	0
 20512  012320  5ADD               	subwfb	postdec2,f,c
 20513                           
 20514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 20515                           ;stkvar	_sign @ sp[(-56)+42]
 20516  012322  0EF2               	movlw	-14
 20517  012324  006F FF8C  F001    	movff	plusw1,btemp
 20518  01232A  0EF3               	movlw	-13
 20519  01232C  50E3               	movf	plusw1,w,c
 20520  01232E  1001               	iorwf	btemp^0,w,c
 20521  012330  A4D8               	btfss	status,2,c
 20522  012332  D002               	goto	l13066
 20523  012334  0E2B               	movlw	43
 20524  012336  D001               	goto	L22
 20525  012338                     l13066:
 20526  012338  0E2D               	movlw	45
 20527  01233A                     L22:
 20528  01233A  6E0B               	movwf	(btemp+10)^0,c
 20529  01233C  0E00               	movlw	0
 20530  01233E  6E0C               	movwf	(btemp+11)^0,c
 20531                           
 20532                           ;stkvar	_efgtoa$5993 @ sp[(-56)+4]
 20533  012340  0ECC               	movlw	-52
 20534  012342  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20535  012348  0ECD               	movlw	-51
 20536  01234A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20537                           
 20538                           ;stkvar	_efgtoa$5993 @ sp[(-56)+4]
 20539                           ;stkvar	_i @ sp[(-56)+36]
 20540  012350  0EEC               	movlw	-20
 20541  012352  006F FF8C  F00B    	movff	plusw1,btemp+10
 20542  012358  0EED               	movlw	-19
 20543  01235A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20544  012360  0E97               	movlw	low _dbuf
 20545  012362  240B               	addwf	(btemp+10)^0,w,c
 20546  012364  6ED9               	movwf	fsr2l,c
 20547  012366  0E02               	movlw	high _dbuf
 20548  012368  200C               	addwfc	(btemp+11)^0,w,c
 20549  01236A  6EDA               	movwf	fsr2h,c
 20550  01236C  0ECC               	movlw	-52
 20551  01236E  006F FF8F FFDF     	movff	plusw1,indf2
 20552                           
 20553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 20554                           ;stkvar	_w @ sp[(-56)+38]
 20555  012374  50E1               	movf	fsr1l,w,c
 20556  012376  0FEE               	addlw	-18
 20557  012378  6ED9               	movwf	fsr2l,c
 20558  01237A  50E2               	movf	fsr1h,w,c
 20559  01237C  6EDA               	movwf	fsr2h,c
 20560  01237E  0EFF               	movlw	255
 20561  012380  22DA               	addwfc	fsr2h,f,c
 20562  012382  06DE               	decf	postinc2,f,c
 20563  012384  0E00               	movlw	0
 20564  012386  5ADD               	subwfb	postdec2,f,c
 20565                           
 20566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 20567                           ;stkvar	_i @ sp[(-56)+36]
 20568  012388  50E1               	movf	fsr1l,w,c
 20569  01238A  0FEC               	addlw	-20
 20570  01238C  6ED9               	movwf	fsr2l,c
 20571  01238E  50E2               	movf	fsr1h,w,c
 20572  012390  6EDA               	movwf	fsr2h,c
 20573  012392  0EFF               	movlw	255
 20574  012394  22DA               	addwfc	fsr2h,f,c
 20575  012396  06DE               	decf	postinc2,f,c
 20576  012398  0E00               	movlw	0
 20577  01239A  5ADD               	subwfb	postdec2,f,c
 20578  01239C  0EBF               	movlw	191
 20579  01239E  6E0B               	movwf	(btemp+10)^0,c
 20580  0123A0  0EFF               	movlw	255
 20581  0123A2  6E0C               	movwf	(btemp+11)^0,c
 20582                           
 20583                           ;stkvar	_c @ sp[(-56)+-7]
 20584  0123A4  0EC1               	movlw	-63
 20585  0123A6  50E3               	movf	plusw1,w,c
 20586  0123A8  6E09               	movwf	(btemp+8)^0,c
 20587  0123AA  6A0A               	clrf	(btemp+9)^0,c
 20588  0123AC  500B               	movf	(btemp+10)^0,w,c
 20589  0123AE  2609               	addwf	(btemp+8)^0,f,c
 20590  0123B0  500C               	movf	(btemp+11)^0,w,c
 20591  0123B2  220A               	addwfc	(btemp+9)^0,f,c
 20592  0123B4  500A               	movf	(btemp+9)^0,w,c
 20593  0123B6  E106               	bnz	u12200
 20594  0123B8  0E1A               	movlw	26
 20595  0123BA  5C09               	subwf	(btemp+8)^0,w,c
 20596  0123BC  B0D8               	btfsc	status,0,c
 20597  0123BE  D002               	goto	u12200
 20598  0123C0  0E01               	movlw	1
 20599  0123C2  D001               	goto	u12210
 20600  0123C4                     u12200:
 20601  0123C4  0E00               	movlw	0
 20602  0123C6                     u12210:
 20603  0123C6  6E0B               	movwf	(btemp+10)^0,c
 20604  0123C8  6A0C               	clrf	(btemp+11)^0,c
 20605                           
 20606                           ;stkvar	_efgtoa$5995 @ sp[(-56)+0]
 20607  0123CA  0EC8               	movlw	-56
 20608  0123CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20609  0123D2  0EC9               	movlw	-55
 20610  0123D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 20611                           
 20612                           ;stkvar	_efgtoa$5995 @ sp[(-56)+0]
 20613  0123DA  0EC8               	movlw	-56
 20614  0123DC  006F FF8C  F001    	movff	plusw1,btemp
 20615  0123E2  0EC9               	movlw	-55
 20616  0123E4  50E3               	movf	plusw1,w,c
 20617  0123E6  1001               	iorwf	btemp^0,w,c
 20618  0123E8  A4D8               	btfss	status,2,c
 20619  0123EA  D002               	goto	l13082
 20620  0123EC  0E65               	movlw	101
 20621  0123EE  D001               	goto	L23
 20622  0123F0                     l13082:
 20623  0123F0  0E45               	movlw	69
 20624  0123F2                     L23:
 20625  0123F2  6E0B               	movwf	(btemp+10)^0,c
 20626  0123F4  0E00               	movlw	0
 20627  0123F6  6E0C               	movwf	(btemp+11)^0,c
 20628                           
 20629                           ;stkvar	_efgtoa$5994 @ sp[(-56)+2]
 20630  0123F8  0ECA               	movlw	-54
 20631  0123FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20632  012400  0ECB               	movlw	-53
 20633  012402  0060  F033  FFE3   	movff	btemp+11,plusw1
 20634                           
 20635                           ;stkvar	_efgtoa$5994 @ sp[(-56)+2]
 20636                           ;stkvar	_i @ sp[(-56)+36]
 20637  012408  0EEC               	movlw	-20
 20638  01240A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20639  012410  0EED               	movlw	-19
 20640  012412  006F FF8C  F00C    	movff	plusw1,btemp+11
 20641  012418  0E97               	movlw	low _dbuf
 20642  01241A  240B               	addwf	(btemp+10)^0,w,c
 20643  01241C  6ED9               	movwf	fsr2l,c
 20644  01241E  0E02               	movlw	high _dbuf
 20645  012420  200C               	addwfc	(btemp+11)^0,w,c
 20646  012422  6EDA               	movwf	fsr2h,c
 20647  012424  0ECA               	movlw	-54
 20648  012426  006F FF8F FFDF     	movff	plusw1,indf2
 20649                           
 20650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 20651                           ;stkvar	_w @ sp[(-56)+38]
 20652  01242C  50E1               	movf	fsr1l,w,c
 20653  01242E  0FEE               	addlw	-18
 20654  012430  6ED9               	movwf	fsr2l,c
 20655  012432  50E2               	movf	fsr1h,w,c
 20656  012434  6EDA               	movwf	fsr2h,c
 20657  012436  0EFF               	movlw	255
 20658  012438  22DA               	addwfc	fsr2h,f,c
 20659  01243A  06DE               	decf	postinc2,f,c
 20660  01243C  0E00               	movlw	0
 20661  01243E  5ADD               	subwfb	postdec2,f,c
 20662                           
 20663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 20664                           ;stkvar	_i @ sp[(-56)+36]
 20665  012440  0EEC               	movlw	-20
 20666  012442  006F FF8C  F00B    	movff	plusw1,btemp+10
 20667  012448  0EED               	movlw	-19
 20668  01244A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20669  012450  0E97               	movlw	low _dbuf
 20670  012452  240B               	addwf	(btemp+10)^0,w,c
 20671  012454  6E09               	movwf	(btemp+8)^0,c
 20672  012456  0E02               	movlw	high _dbuf
 20673  012458  200C               	addwfc	(btemp+11)^0,w,c
 20674  01245A  6E0A               	movwf	(btemp+9)^0,c
 20675  01245C  0060  F027  FFE6   	movff	btemp+8,postinc1
 20676  012462  0060  F02B  FFE6   	movff	btemp+9,postinc1
 20677                           
 20678                           ;stkvar	_n @ sp[(-58)+32]
 20679  012468  0E97               	movlw	low _dbuf
 20680  01246A  6E0B               	movwf	(btemp+10)^0,c
 20681  01246C  0E02               	movlw	high _dbuf
 20682  01246E  6E0C               	movwf	(btemp+11)^0,c
 20683  012470  0EE6               	movlw	-26
 20684  012472  50E3               	movf	plusw1,w,c
 20685  012474  260B               	addwf	(btemp+10)^0,f,c
 20686  012476  0EE7               	movlw	-25
 20687  012478  50E3               	movf	plusw1,w,c
 20688  01247A  220C               	addwfc	(btemp+11)^0,f,c
 20689  01247C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20690  012482  0060  F033  FFE6   	movff	btemp+11,postinc1
 20691  012488  EC43  F0D5         	call	_strcpy	;wreg free
 20692  01248C  EF41  F08A         	goto	l12834
 20693  012490                     l2346:
 20694                           
 20695                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 20696  012490  0EC1               	movlw	193
 20697  012492  26E1               	addwf	fsr1l,f,c
 20698  012494  0EFF               	movlw	255
 20699  012496  22E2               	addwfc	fsr1h,f,c
 20700  012498  0012               	return		;funcret
 20701  01249A                     __end_of_efgtoa:
 20702                           	opt callstack 0
 20703                           
 20704 ;; *************** function _tolower *****************
 20705 ;; Defined at:
 20706 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 20707 ;; Parameters:    Size  Location     Type
 20708 ;;  c               2  [STACK] int 
 20709 ;; Auto vars:     Size  Location     Type
 20710 ;;		None
 20711 ;; Return value:  Size  Location     Type
 20712 ;;                  2  [STACK] int 
 20713 ;; Registers used:
 20714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 20715 ;; Tracked objects:
 20716 ;;		On entry : 0/0
 20717 ;;		On exit  : 0/0
 20718 ;;		Unchanged: 0/0
 20719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20724 ;;Total ram usage:        0 bytes
 20725 ;; Hardware stack levels used:    1
 20726 ;; Hardware stack levels required when called:   16
 20727 ;; This function calls:
 20728 ;;		_isupper
 20729 ;; This function is called by:
 20730 ;;		_efgtoa
 20731 ;;		_vfpfcnvrt
 20732 ;; This function uses a reentrant model
 20733 ;;
 20734                           
 20735                           	psect	text71
 20736  01B756                     __ptext71:
 20737                           	opt callstack 0
 20738  01B756                     _tolower:
 20739                           	opt callstack 0
 20740                           
 20741                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20742  01B756  52E6               	movf	postinc1,f,c
 20743  01B758  52E6               	movf	postinc1,f,c
 20744                           
 20745                           ;stkvar	_c @ sp[(-2)+-2]
 20746                           
 20747                           ;incstack = 0
 20748 ;; hardware stack exceeded
 20749  01B75A  0EFC               	movlw	-4
 20750  01B75C  50E3               	movf	plusw1,w,c
 20751  01B75E  0FBF               	addlw	191
 20752  01B760  6E0B               	movwf	(btemp+10)^0,c
 20753  01B762  0EFD               	movlw	-3
 20754  01B764  006F FF8C  F00C    	movff	plusw1,btemp+11
 20755  01B76A  0EFF               	movlw	255
 20756  01B76C  220C               	addwfc	(btemp+11)^0,f,c
 20757  01B76E  500C               	movf	(btemp+11)^0,w,c
 20758  01B770  E106               	bnz	u6410
 20759  01B772  0E1A               	movlw	26
 20760  01B774  5C0B               	subwf	(btemp+10)^0,w,c
 20761  01B776  B0D8               	btfsc	status,0,c
 20762  01B778  D002               	goto	u6410
 20763  01B77A  0E01               	movlw	1
 20764  01B77C  D001               	goto	u6420
 20765  01B77E                     u6410:
 20766  01B77E  0E00               	movlw	0
 20767  01B780                     u6420:
 20768  01B780  6E0B               	movwf	(btemp+10)^0,c
 20769  01B782  6A0C               	clrf	(btemp+11)^0,c
 20770                           
 20771                           ;stkvar	_tolower$6814 @ sp[(-2)+0]
 20772  01B784  0EFE               	movlw	-2
 20773  01B786  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20774  01B78C  0EFF               	movlw	-1
 20775  01B78E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20776                           
 20777                           ;stkvar	_tolower$6814 @ sp[(-2)+0]
 20778  01B794  0EFE               	movlw	-2
 20779  01B796  006F FF8C  F001    	movff	plusw1,btemp
 20780  01B79C  0EFF               	movlw	-1
 20781  01B79E  50E3               	movf	plusw1,w,c
 20782  01B7A0  1001               	iorwf	btemp^0,w,c
 20783  01B7A2  B4D8               	btfsc	status,2,c
 20784  01B7A4  D00D               	goto	l8520
 20785                           
 20786                           ;stkvar	_c @ sp[(-2)+-2]
 20787  01B7A6  0EFC               	movlw	-4
 20788  01B7A8  006F FF8C  F001    	movff	plusw1,btemp
 20789  01B7AE  0EFD               	movlw	-3
 20790  01B7B0  006F FF8C  F002    	movff	plusw1,btemp+1
 20791  01B7B6  0E20               	movlw	32
 20792  01B7B8  1201               	iorwf	btemp^0,f,c
 20793  01B7BA  0E00               	movlw	0
 20794  01B7BC  1202               	iorwf	(btemp+1)^0,f,c
 20795  01B7BE  D008               	goto	l3618
 20796  01B7C0                     l8520:
 20797                           
 20798                           ;stkvar	_c @ sp[(-2)+-2]
 20799  01B7C0  0EFC               	movlw	-4
 20800  01B7C2  006F FF8C  F001    	movff	plusw1,btemp
 20801  01B7C8  0EFD               	movlw	-3
 20802  01B7CA  006F FF8C  F002    	movff	plusw1,btemp+1
 20803  01B7D0                     l3618:
 20804                           
 20805                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20806  01B7D0  52E5               	movf	postdec1,f,c
 20807  01B7D2  52E5               	movf	postdec1,f,c
 20808  01B7D4  52E5               	movf	postdec1,f,c
 20809  01B7D6  52E5               	movf	postdec1,f,c
 20810  01B7D8  0012               	return		;funcret
 20811  01B7DA                     __end_of_tolower:
 20812                           	opt callstack 0
 20813                           
 20814 ;; *************** function _isupper *****************
 20815 ;; Defined at:
 20816 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 20817 ;; Parameters:    Size  Location     Type
 20818 ;;  c               2  [STACK] int 
 20819 ;; Auto vars:     Size  Location     Type
 20820 ;;		None
 20821 ;; Return value:  Size  Location     Type
 20822 ;;                  2  [STACK] int 
 20823 ;; Registers used:
 20824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20825 ;; Tracked objects:
 20826 ;;		On entry : 0/0
 20827 ;;		On exit  : 0/0
 20828 ;;		Unchanged: 0/0
 20829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20834 ;;Total ram usage:        0 bytes
 20835 ;; Hardware stack levels used:    1
 20836 ;; Hardware stack levels required when called:   15
 20837 ;; This function calls:
 20838 ;;		Nothing
 20839 ;; This function is called by:
 20840 ;;		_efgtoa
 20841 ;;		_xtoa
 20842 ;;		_vfpfcnvrt
 20843 ;;		_tolower
 20844 ;; This function uses a reentrant model
 20845 ;;
 20846                           
 20847                           	psect	text72
 20848  01C6F6                     __ptext72:
 20849                           	opt callstack 0
 20850  01C6F6                     _isupper:
 20851                           	opt callstack 0
 20852                           
 20853                           ;stkvar	_c @ sp[(0)+-2]
 20854                           
 20855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20856                           ;incstack = 0
 20857 ;; hardware stack exceeded
 20858  01C6F6  0EFE               	movlw	-2
 20859  01C6F8  50E3               	movf	plusw1,w,c
 20860  01C6FA  0FBF               	addlw	191
 20861  01C6FC  6E0B               	movwf	(btemp+10)^0,c
 20862  01C6FE  0EFF               	movlw	-1
 20863  01C700  006F FF8C  F00C    	movff	plusw1,btemp+11
 20864  01C706  0EFF               	movlw	255
 20865  01C708  220C               	addwfc	(btemp+11)^0,f,c
 20866  01C70A  500C               	movf	(btemp+11)^0,w,c
 20867  01C70C  E106               	bnz	u5760
 20868  01C70E  0E1A               	movlw	26
 20869  01C710  5C0B               	subwf	(btemp+10)^0,w,c
 20870  01C712  B0D8               	btfsc	status,0,c
 20871  01C714  D002               	goto	u5760
 20872  01C716  0E01               	movlw	1
 20873  01C718  D001               	goto	u5770
 20874  01C71A                     u5760:
 20875  01C71A  0E00               	movlw	0
 20876  01C71C                     u5770:
 20877  01C71C  6E01               	movwf	btemp^0,c
 20878  01C71E  6A02               	clrf	(btemp+1)^0,c
 20879                           
 20880                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20881  01C720  52E5               	movf	postdec1,f,c
 20882  01C722  52E5               	movf	postdec1,f,c
 20883  01C724  0012               	return		;funcret
 20884  01C726                     __end_of_isupper:
 20885                           	opt callstack 0
 20886                           
 20887 ;; *************** function _strcpy *****************
 20888 ;; Defined at:
 20889 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 20890 ;; Parameters:    Size  Location     Type
 20891 ;;  dest            2  [STACK] PTR unsigned char 
 20892 ;;		 -> dbuf(80), 
 20893 ;;  src             2  [STACK] PTR const unsigned char 
 20894 ;;		 -> STR_86(4), STR_85(4), STR_82(4), STR_81(4), 
 20895 ;;		 -> dbuf(80), 
 20896 ;; Auto vars:     Size  Location     Type
 20897 ;;  d               2  [STACK] PTR unsigned char 
 20898 ;;		 -> dbuf(80), 
 20899 ;;  s               2  [STACK] PTR const unsigned char 
 20900 ;;		 -> STR_86(4), STR_85(4), STR_82(4), STR_81(4), 
 20901 ;;		 -> dbuf(80), 
 20902 ;; Return value:  Size  Location     Type
 20903 ;;                  2  [STACK] PTR unsigned char 
 20904 ;; Registers used:
 20905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 20906 ;; Tracked objects:
 20907 ;;		On entry : 0/0
 20908 ;;		On exit  : 0/0
 20909 ;;		Unchanged: 0/0
 20910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20915 ;;Total ram usage:        0 bytes
 20916 ;; Hardware stack levels used:    1
 20917 ;; Hardware stack levels required when called:   15
 20918 ;; This function calls:
 20919 ;;		Nothing
 20920 ;; This function is called by:
 20921 ;;		_efgtoa
 20922 ;; This function uses a reentrant model
 20923 ;;
 20924                           
 20925                           	psect	text73
 20926  01AA86                     __ptext73:
 20927                           	opt callstack 0
 20928  01AA86                     _strcpy:
 20929                           	opt callstack 0
 20930                           
 20931                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20932  01AA86  52E6               	movf	postinc1,f,c
 20933  01AA88  52E6               	movf	postinc1,f,c
 20934  01AA8A  52E6               	movf	postinc1,f,c
 20935  01AA8C  52E6               	movf	postinc1,f,c
 20936                           
 20937                           ;stkvar	_src @ sp[(-4)+-4]
 20938                           
 20939                           ;incstack = 0
 20940 ;; hardware stack exceeded
 20941  01AA8E  0EF8               	movlw	-8
 20942  01AA90  006F FF8C  F00B    	movff	plusw1,btemp+10
 20943  01AA96  0EF9               	movlw	-7
 20944  01AA98  006F FF8C  F00C    	movff	plusw1,btemp+11
 20945                           
 20946                           ;stkvar	_s @ sp[(-4)+2]
 20947  01AA9E  0EFF               	movlw	-1
 20948  01AAA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20949  01AAA6  0EFE               	movlw	-2
 20950  01AAA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20951                           
 20952                           ;stkvar	_dest @ sp[(-4)+-2]
 20953  01AAAE  0EFA               	movlw	-6
 20954  01AAB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 20955  01AAB6  0EFB               	movlw	-5
 20956  01AAB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 20957                           
 20958                           ;stkvar	_d @ sp[(-4)+0]
 20959  01AABE  0EFD               	movlw	-3
 20960  01AAC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20961  01AAC6  0EFC               	movlw	-4
 20962  01AAC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20963  01AACE                     l12696:
 20964                           
 20965                           ;stkvar	_s @ sp[(-4)+2]
 20966  01AACE  50E1               	movf	fsr1l,w,c
 20967  01AAD0  0FFE               	addlw	-2
 20968  01AAD2  6ED9               	movwf	fsr2l,c
 20969  01AAD4  50E2               	movf	fsr1h,w,c
 20970  01AAD6  6EDA               	movwf	fsr2h,c
 20971  01AAD8  0EFF               	movlw	255
 20972  01AADA  22DA               	addwfc	fsr2h,f,c
 20973  01AADC  006F FF7C  F00B    	movff	indf2,btemp+10
 20974  01AAE2  0E01               	movlw	1
 20975  01AAE4  26DE               	addwf	postinc2,f,c
 20976  01AAE6  006F FF7C  F00C    	movff	indf2,btemp+11
 20977  01AAEC  0E00               	movlw	0
 20978  01AAEE  22DD               	addwfc	postdec2,f,c
 20979  01AAF0  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 20980  01AAF6  0060  F033  FFF7   	movff	btemp+11,tblptrh
 20981  01AAFC  0E00               	movlw	low (__mediumconst shr (0+16))
 20982  01AAFE  6EF8               	movwf	tblptru,c
 20983                           
 20984                           ;stkvar	_d @ sp[(-4)+0]
 20985  01AB00  50E1               	movf	fsr1l,w,c
 20986  01AB02  0FFC               	addlw	-4
 20987  01AB04  6ED9               	movwf	fsr2l,c
 20988  01AB06  50E2               	movf	fsr1h,w,c
 20989  01AB08  6EDA               	movwf	fsr2h,c
 20990  01AB0A  0EFF               	movlw	255
 20991  01AB0C  22DA               	addwfc	fsr2h,f,c
 20992  01AB0E  006F FF7C  F00B    	movff	indf2,btemp+10
 20993  01AB14  0E01               	movlw	1
 20994  01AB16  26DE               	addwf	postinc2,f,c
 20995  01AB18  006F FF7C  F00C    	movff	indf2,btemp+11
 20996  01AB1E  0E00               	movlw	0
 20997  01AB20  22DD               	addwfc	postdec2,f,c
 20998  01AB22  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 20999  01AB28  0060  F033  FFDA   	movff	btemp+11,fsr2h
 21000  01AB2E  0E1F               	movlw	(high __ramtop+-1)
 21001  01AB30  64F7               	cpfsgt	tblptrh,c
 21002  01AB32  D003               	bra	u11507
 21003  01AB34  0008               	tblrd		*
 21004  01AB36  50F5               	movf	tablat,w,c
 21005  01AB38  D007               	bra	u11500
 21006  01AB3A                     u11507:
 21007  01AB3A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21008  01AB40  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21009  01AB46  50EF               	movf	indf0,w,c
 21010  01AB48                     u11500:
 21011  01AB48  6EDF               	movwf	indf2,c
 21012  01AB4A  50DF               	movf	indf2,w,c
 21013  01AB4C  A4D8               	btfss	status,2,c
 21014  01AB4E  D7BF               	goto	l12696
 21015                           
 21016                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 21017  01AB50  0EF8               	movlw	248
 21018  01AB52  26E1               	addwf	fsr1l,f,c
 21019  01AB54  0EFF               	movlw	255
 21020  01AB56  22E2               	addwfc	fsr1h,f,c
 21021  01AB58  0012               	return		;funcret
 21022  01AB5A                     __end_of_strcpy:
 21023                           	opt callstack 0
 21024                           
 21025 ;; *************** function _floorf *****************
 21026 ;; Defined at:
 21027 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 21028 ;; Parameters:    Size  Location     Type
 21029 ;;  x               4  [STACK] float 
 21030 ;; Auto vars:     Size  Location     Type
 21031 ;;  u               4  [STACK] struct .
 21032 ;;  m               4  [STACK] unsigned long 
 21033 ;;  e               2  [STACK] int 
 21034 ;; Return value:  Size  Location     Type
 21035 ;;                  4  [STACK] float 
 21036 ;; Registers used:
 21037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 21038 ;; Tracked objects:
 21039 ;;		On entry : 0/0
 21040 ;;		On exit  : 0/0
 21041 ;;		Unchanged: 0/0
 21042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21047 ;;Total ram usage:        0 bytes
 21048 ;; Hardware stack levels used:    1
 21049 ;; Hardware stack levels required when called:   15
 21050 ;; This function calls:
 21051 ;;		Nothing
 21052 ;; This function is called by:
 21053 ;;		_efgtoa
 21054 ;; This function uses a reentrant model
 21055 ;;
 21056                           
 21057                           	psect	text74
 21058  0168DA                     __ptext74:
 21059                           	opt callstack 0
 21060  0168DA                     _floorf:
 21061                           	opt callstack 0
 21062                           
 21063                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21064  0168DA  0E0A               	movlw	10
 21065  0168DC  26E1               	addwf	fsr1l,f,c
 21066  0168DE  0E00               	movlw	0
 21067  0168E0  22E2               	addwfc	fsr1h,f,c
 21068                           
 21069                           ;incstack = 0
 21070 ;; hardware stack exceeded
 21071  0168E2  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 21072  0168E8  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 21073  0168EE  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 21074  0168F4  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 21075                           
 21076                           ;stkvar	_u @ sp[(-10)+0]
 21077  0168FA  0EF6               	movlw	-10
 21078  0168FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21079  016902  0EF7               	movlw	-9
 21080  016904  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21081  01690A  0EF8               	movlw	-8
 21082  01690C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21083  016912  0EF9               	movlw	-7
 21084  016914  0060  F033  FFE3   	movff	btemp+11,plusw1
 21085                           
 21086                           ;stkvar	_x @ sp[(-10)+-4]
 21087  01691A  0EF2               	movlw	-14
 21088  01691C  006F FF8C  F009    	movff	plusw1,btemp+8
 21089  016922  0EF3               	movlw	-13
 21090  016924  006F FF8C  F00A    	movff	plusw1,btemp+9
 21091  01692A  0EF4               	movlw	-12
 21092  01692C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21093  016932  0EF5               	movlw	-11
 21094  016934  006F FF8C  F00C    	movff	plusw1,btemp+11
 21095                           
 21096                           ;stkvar	_u @ sp[(-10)+0]
 21097  01693A  0EF6               	movlw	-10
 21098  01693C  0060  F027  FFE3   	movff	btemp+8,plusw1
 21099  016942  0EF7               	movlw	-9
 21100  016944  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21101  01694A  0EF8               	movlw	-8
 21102  01694C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21103  016952  0EF9               	movlw	-7
 21104  016954  0060  F033  FFE3   	movff	btemp+11,plusw1
 21105  01695A  0E81               	movlw	129
 21106  01695C  6E0B               	movwf	(btemp+10)^0,c
 21107  01695E  0EFF               	movlw	255
 21108  016960  6E0C               	movwf	(btemp+11)^0,c
 21109                           
 21110                           ;stkvar	_u @ sp[(-10)+0]
 21111  016962  0EF6               	movlw	-10
 21112  016964  006F FF8C  F005    	movff	plusw1,btemp+4
 21113  01696A  0EF7               	movlw	-9
 21114  01696C  006F FF8C  F006    	movff	plusw1,btemp+5
 21115  016972  0EF8               	movlw	-8
 21116  016974  006F FF8C  F007    	movff	plusw1,btemp+6
 21117  01697A  0EF9               	movlw	-7
 21118  01697C  006F FF8C  F008    	movff	plusw1,btemp+7
 21119  016982  0E18               	movlw	24
 21120  016984  D005               	goto	u6440
 21121  016986                     u6445:
 21122  016986  90D8               	bcf	status,0,c
 21123  016988  3208               	rrcf	(btemp+7)^0,f,c
 21124  01698A  3207               	rrcf	(btemp+6)^0,f,c
 21125  01698C  3206               	rrcf	(btemp+5)^0,f,c
 21126  01698E  3205               	rrcf	(btemp+4)^0,f,c
 21127  016990                     u6440:
 21128  016990  2EE8               	decfsz	wreg,f,c
 21129  016992  D7F9               	goto	u6445
 21130  016994  0060  F014  F009   	movff	btemp+4,btemp+8
 21131  01699A  0060  F018  F00A   	movff	btemp+5,btemp+9
 21132  0169A0  0EFF               	movlw	255
 21133  0169A2  1609               	andwf	(btemp+8)^0,f,c
 21134  0169A4  0E00               	movlw	0
 21135  0169A6  160A               	andwf	(btemp+9)^0,f,c
 21136  0169A8  500B               	movf	(btemp+10)^0,w,c
 21137  0169AA  2609               	addwf	(btemp+8)^0,f,c
 21138  0169AC  500C               	movf	(btemp+11)^0,w,c
 21139  0169AE  220A               	addwfc	(btemp+9)^0,f,c
 21140                           
 21141                           ;stkvar	_e @ sp[(-10)+8]
 21142  0169B0  0EFE               	movlw	-2
 21143  0169B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 21144  0169B8  0EFF               	movlw	-1
 21145  0169BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21146                           
 21147                           ;stkvar	_e @ sp[(-10)+8]
 21148  0169C0  0EFF               	movlw	-1
 21149  0169C2  BEE3               	btfsc	plusw1,7,c
 21150  0169C4  D019               	goto	l8534
 21151  0169C6  0EFF               	movlw	-1
 21152  0169C8  50E3               	movf	plusw1,w,c
 21153  0169CA  E108               	bnz	u6450
 21154  0169CC  0EFE               	movlw	-2
 21155  0169CE  006F FF8C  F001    	movff	plusw1,btemp
 21156  0169D4  0E17               	movlw	23
 21157  0169D6  5E01               	subwf	btemp^0,f,c
 21158  0169D8  A0D8               	btfss	status,0,c
 21159  0169DA  D00E               	goto	l8534
 21160  0169DC                     u6450:
 21161                           
 21162                           ;stkvar	_x @ sp[(-10)+-4]
 21163  0169DC  0EF2               	movlw	-14
 21164  0169DE  006F FF8C  F001    	movff	plusw1,btemp
 21165  0169E4  0EF3               	movlw	-13
 21166  0169E6  006F FF8C  F002    	movff	plusw1,btemp+1
 21167  0169EC  0EF4               	movlw	-12
 21168  0169EE  006F FF8C  F003    	movff	plusw1,btemp+2
 21169  0169F4  0EF5               	movlw	-11
 21170  0169F6  D11F               	goto	L24
 21171  0169F8                     l8534:
 21172                           
 21173                           ;stkvar	_e @ sp[(-10)+8]
 21174  0169F8  0EFF               	movlw	-1
 21175  0169FA  BEE3               	btfsc	plusw1,7,c
 21176  0169FC  D0B4               	goto	l8550
 21177                           
 21178                           ;stkvar	_e @ sp[(-10)+8]
 21179  0169FE  0EFE               	movlw	-2
 21180  016A00  006F FF8C  F00C    	movff	plusw1,btemp+11
 21181  016A06  0EFF               	movlw	255
 21182  016A08  6E05               	movwf	(btemp+4)^0,c
 21183  016A0A  0EFF               	movlw	255
 21184  016A0C  6E06               	movwf	(btemp+5)^0,c
 21185  016A0E  0E7F               	movlw	127
 21186  016A10  6E07               	movwf	(btemp+6)^0,c
 21187  016A12  0E00               	movlw	0
 21188  016A14  6E08               	movwf	(btemp+7)^0,c
 21189  016A16                     u6475:
 21190  016A16  660C               	tstfsz	(btemp+11)^0,c
 21191  016A18  D001               	goto	u6476
 21192  016A1A  D007               	goto	u6477
 21193  016A1C                     u6476:
 21194  016A1C  3408               	rlcf	(btemp+7)^0,w,c
 21195  016A1E  3208               	rrcf	(btemp+7)^0,f,c
 21196  016A20  3207               	rrcf	(btemp+6)^0,f,c
 21197  016A22  3206               	rrcf	(btemp+5)^0,f,c
 21198  016A24  3205               	rrcf	(btemp+4)^0,f,c
 21199  016A26  2E0C               	decfsz	(btemp+11)^0,f,c
 21200  016A28  D7F6               	goto	u6475
 21201  016A2A                     u6477:
 21202                           
 21203                           ;stkvar	_m @ sp[(-10)+4]
 21204  016A2A  0EFA               	movlw	-6
 21205  016A2C  0060  F017  FFE3   	movff	btemp+4,plusw1
 21206  016A32  0EFB               	movlw	-5
 21207  016A34  0060  F01B  FFE3   	movff	btemp+5,plusw1
 21208  016A3A  0EFC               	movlw	-4
 21209  016A3C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 21210  016A42  0EFD               	movlw	-3
 21211  016A44  0060  F023  FFE3   	movff	btemp+7,plusw1
 21212                           
 21213                           ;stkvar	_m @ sp[(-10)+4]
 21214                           ;stkvar	_u @ sp[(-10)+0]
 21215  016A4A  0EF6               	movlw	-10
 21216  016A4C  006F FF8C  F009    	movff	plusw1,btemp+8
 21217  016A52  0EF7               	movlw	-9
 21218  016A54  006F FF8C  F00A    	movff	plusw1,btemp+9
 21219  016A5A  0EF8               	movlw	-8
 21220  016A5C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21221  016A62  0EF9               	movlw	-7
 21222  016A64  006F FF8C  F00C    	movff	plusw1,btemp+11
 21223  016A6A  0EFA               	movlw	-6
 21224  016A6C  50E3               	movf	plusw1,w,c
 21225  016A6E  1609               	andwf	(btemp+8)^0,f,c
 21226  016A70  0EFB               	movlw	-5
 21227  016A72  50E3               	movf	plusw1,w,c
 21228  016A74  160A               	andwf	(btemp+9)^0,f,c
 21229  016A76  0EFC               	movlw	-4
 21230  016A78  50E3               	movf	plusw1,w,c
 21231  016A7A  160B               	andwf	(btemp+10)^0,f,c
 21232  016A7C  0EFD               	movlw	-3
 21233  016A7E  50E3               	movf	plusw1,w,c
 21234  016A80  160C               	andwf	(btemp+11)^0,f,c
 21235  016A82  5009               	movf	(btemp+8)^0,w,c
 21236  016A84  100A               	iorwf	(btemp+9)^0,w,c
 21237  016A86  100B               	iorwf	(btemp+10)^0,w,c
 21238  016A88  100C               	iorwf	(btemp+11)^0,w,c
 21239  016A8A  B4D8               	btfsc	status,2,c
 21240  016A8C  D7A7               	goto	u6450
 21241                           
 21242                           ;stkvar	_u @ sp[(-10)+0]
 21243  016A8E  0EF6               	movlw	-10
 21244  016A90  006F FF8C  F009    	movff	plusw1,btemp+8
 21245  016A96  0EF7               	movlw	-9
 21246  016A98  006F FF8C  F00A    	movff	plusw1,btemp+9
 21247  016A9E  0EF8               	movlw	-8
 21248  016AA0  006F FF8C  F00B    	movff	plusw1,btemp+10
 21249  016AA6  0EF9               	movlw	-7
 21250  016AA8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21251  016AAE  0E20               	movlw	32
 21252  016AB0  D005               	goto	u6490
 21253  016AB2                     u6495:
 21254  016AB2  90D8               	bcf	status,0,c
 21255  016AB4  320C               	rrcf	(btemp+11)^0,f,c
 21256  016AB6  320B               	rrcf	(btemp+10)^0,f,c
 21257  016AB8  320A               	rrcf	(btemp+9)^0,f,c
 21258  016ABA  3209               	rrcf	(btemp+8)^0,f,c
 21259  016ABC                     u6490:
 21260  016ABC  2EE8               	decfsz	wreg,f,c
 21261  016ABE  D7F9               	goto	u6495
 21262  016AC0  5009               	movf	(btemp+8)^0,w,c
 21263  016AC2  B4D8               	btfsc	status,2,c
 21264  016AC4  D028               	goto	l8548
 21265                           
 21266                           ;stkvar	_m @ sp[(-10)+4]
 21267                           ;stkvar	_u @ sp[(-10)+0]
 21268  016AC6  0EF6               	movlw	-10
 21269  016AC8  50E3               	movf	plusw1,w,c
 21270  016ACA  6E01               	movwf	btemp^0,c
 21271  016ACC  0EFA               	movlw	-6
 21272  016ACE  50E3               	movf	plusw1,w,c
 21273  016AD0  2601               	addwf	btemp^0,f,c
 21274  016AD2  0EF6               	movlw	-10
 21275  016AD4  0060  F007  FFE3   	movff	btemp,plusw1
 21276  016ADA  0EF7               	movlw	-9
 21277  016ADC  50E3               	movf	plusw1,w,c
 21278  016ADE  6E01               	movwf	btemp^0,c
 21279  016AE0  0EFB               	movlw	-5
 21280  016AE2  50E3               	movf	plusw1,w,c
 21281  016AE4  2201               	addwfc	btemp^0,f,c
 21282  016AE6  0EF7               	movlw	-9
 21283  016AE8  0060  F007  FFE3   	movff	btemp,plusw1
 21284  016AEE  0EF8               	movlw	-8
 21285  016AF0  50E3               	movf	plusw1,w,c
 21286  016AF2  6E01               	movwf	btemp^0,c
 21287  016AF4  0EFC               	movlw	-4
 21288  016AF6  50E3               	movf	plusw1,w,c
 21289  016AF8  2201               	addwfc	btemp^0,f,c
 21290  016AFA  0EF8               	movlw	-8
 21291  016AFC  0060  F007  FFE3   	movff	btemp,plusw1
 21292  016B02  0EF9               	movlw	-7
 21293  016B04  50E3               	movf	plusw1,w,c
 21294  016B06  6E01               	movwf	btemp^0,c
 21295  016B08  0EFD               	movlw	-3
 21296  016B0A  50E3               	movf	plusw1,w,c
 21297  016B0C  2201               	addwfc	btemp^0,f,c
 21298  016B0E  0EF9               	movlw	-7
 21299  016B10  0060  F007  FFE3   	movff	btemp,plusw1
 21300  016B16                     l8548:
 21301                           
 21302                           ;stkvar	_m @ sp[(-10)+4]
 21303  016B16  0EFA               	movlw	-6
 21304  016B18  006F FF8C  F009    	movff	plusw1,btemp+8
 21305  016B1E  0EFB               	movlw	-5
 21306  016B20  006F FF8C  F00A    	movff	plusw1,btemp+9
 21307  016B26  0EFC               	movlw	-4
 21308  016B28  006F FF8C  F00B    	movff	plusw1,btemp+10
 21309  016B2E  0EFD               	movlw	-3
 21310  016B30  006F FF8C  F00C    	movff	plusw1,btemp+11
 21311  016B36  1C09               	comf	(btemp+8)^0,w,c
 21312  016B38  6E05               	movwf	(btemp+4)^0,c
 21313  016B3A  1C0A               	comf	(btemp+9)^0,w,c
 21314  016B3C  6E06               	movwf	(btemp+5)^0,c
 21315  016B3E  1C0B               	comf	(btemp+10)^0,w,c
 21316  016B40  6E07               	movwf	(btemp+6)^0,c
 21317  016B42  1C0C               	comf	(btemp+11)^0,w,c
 21318  016B44  6E08               	movwf	(btemp+7)^0,c
 21319                           
 21320                           ;stkvar	_u @ sp[(-10)+0]
 21321  016B46  50E1               	movf	fsr1l,w,c
 21322  016B48  0FF6               	addlw	-10
 21323  016B4A  6ED9               	movwf	fsr2l,c
 21324  016B4C  50E2               	movf	fsr1h,w,c
 21325  016B4E  6EDA               	movwf	fsr2h,c
 21326  016B50  0EFF               	movlw	255
 21327  016B52  22DA               	addwfc	fsr2h,f,c
 21328  016B54  5005               	movf	(btemp+4)^0,w,c
 21329  016B56  16DE               	andwf	postinc2,f,c
 21330  016B58  5006               	movf	(btemp+5)^0,w,c
 21331  016B5A  16DE               	andwf	postinc2,f,c
 21332  016B5C  5007               	movf	(btemp+6)^0,w,c
 21333  016B5E  16DE               	andwf	postinc2,f,c
 21334  016B60  5008               	movf	(btemp+7)^0,w,c
 21335  016B62  16DE               	andwf	postinc2,f,c
 21336  016B64  D05B               	goto	l8558
 21337  016B66                     l8550:
 21338                           
 21339                           ;stkvar	_u @ sp[(-10)+0]
 21340  016B66  0EF6               	movlw	-10
 21341  016B68  006F FF8C  F009    	movff	plusw1,btemp+8
 21342  016B6E  0EF7               	movlw	-9
 21343  016B70  006F FF8C  F00A    	movff	plusw1,btemp+9
 21344  016B76  0EF8               	movlw	-8
 21345  016B78  006F FF8C  F00B    	movff	plusw1,btemp+10
 21346  016B7E  0EF9               	movlw	-7
 21347  016B80  006F FF8C  F00C    	movff	plusw1,btemp+11
 21348  016B86  0E20               	movlw	32
 21349  016B88  D005               	goto	u6510
 21350  016B8A                     u6515:
 21351  016B8A  90D8               	bcf	status,0,c
 21352  016B8C  320C               	rrcf	(btemp+11)^0,f,c
 21353  016B8E  320B               	rrcf	(btemp+10)^0,f,c
 21354  016B90  320A               	rrcf	(btemp+9)^0,f,c
 21355  016B92  3209               	rrcf	(btemp+8)^0,f,c
 21356  016B94                     u6510:
 21357  016B94  2EE8               	decfsz	wreg,f,c
 21358  016B96  D7F9               	goto	u6515
 21359  016B98  6609               	tstfsz	(btemp+8)^0,c
 21360  016B9A  D009               	goto	l8554
 21361                           
 21362                           ;stkvar	_u @ sp[(-10)+0]
 21363  016B9C  0EF6               	movlw	-10
 21364  016B9E  6AE3               	clrf	plusw1,c
 21365  016BA0  0EF7               	movlw	-9
 21366  016BA2  6AE3               	clrf	plusw1,c
 21367  016BA4  0EF8               	movlw	-8
 21368  016BA6  6AE3               	clrf	plusw1,c
 21369  016BA8  0EF9               	movlw	-7
 21370  016BAA  6AE3               	clrf	plusw1,c
 21371  016BAC  D037               	goto	l8558
 21372  016BAE                     l8554:
 21373                           
 21374                           ;stkvar	_u @ sp[(-10)+0]
 21375  016BAE  0EF6               	movlw	-10
 21376  016BB0  006F FF8C  F009    	movff	plusw1,btemp+8
 21377  016BB6  0EF7               	movlw	-9
 21378  016BB8  006F FF8C  F00A    	movff	plusw1,btemp+9
 21379  016BBE  0EF8               	movlw	-8
 21380  016BC0  006F FF8C  F00B    	movff	plusw1,btemp+10
 21381  016BC6  0EF9               	movlw	-7
 21382  016BC8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21383  016BCE  90D8               	bcf	status,0,c
 21384  016BD0  3409               	rlcf	(btemp+8)^0,w,c
 21385  016BD2  6E05               	movwf	(btemp+4)^0,c
 21386  016BD4  340A               	rlcf	(btemp+9)^0,w,c
 21387  016BD6  6E06               	movwf	(btemp+5)^0,c
 21388  016BD8  340B               	rlcf	(btemp+10)^0,w,c
 21389  016BDA  6E07               	movwf	(btemp+6)^0,c
 21390  016BDC  340C               	rlcf	(btemp+11)^0,w,c
 21391  016BDE  6E08               	movwf	(btemp+7)^0,c
 21392  016BE0  5005               	movf	(btemp+4)^0,w,c
 21393  016BE2  1006               	iorwf	(btemp+5)^0,w,c
 21394  016BE4  1007               	iorwf	(btemp+6)^0,w,c
 21395  016BE6  1008               	iorwf	(btemp+7)^0,w,c
 21396  016BE8  B4D8               	btfsc	status,2,c
 21397  016BEA  D018               	goto	l8558
 21398  016BEC  0E00               	movlw	0
 21399  016BEE  6E09               	movwf	(btemp+8)^0,c
 21400  016BF0  0E00               	movlw	0
 21401  016BF2  6E0A               	movwf	(btemp+9)^0,c
 21402  016BF4  0E80               	movlw	128
 21403  016BF6  6E0B               	movwf	(btemp+10)^0,c
 21404  016BF8  0EBF               	movlw	191
 21405  016BFA  6E0C               	movwf	(btemp+11)^0,c
 21406                           
 21407                           ;stkvar	_u @ sp[(-10)+0]
 21408  016BFC  0EF6               	movlw	-10
 21409  016BFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 21410  016C04  0EF7               	movlw	-9
 21411  016C06  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21412  016C0C  0EF8               	movlw	-8
 21413  016C0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21414  016C14  0EF9               	movlw	-7
 21415  016C16  0060  F033  FFE3   	movff	btemp+11,plusw1
 21416  016C1C                     l8558:
 21417                           
 21418                           ;stkvar	_u @ sp[(-10)+0]
 21419  016C1C  0EF6               	movlw	-10
 21420  016C1E  006F FF8C  F001    	movff	plusw1,btemp
 21421  016C24  0EF7               	movlw	-9
 21422  016C26  006F FF8C  F002    	movff	plusw1,btemp+1
 21423  016C2C  0EF8               	movlw	-8
 21424  016C2E  006F FF8C  F003    	movff	plusw1,btemp+2
 21425  016C34  0EF9               	movlw	-7
 21426  016C36                     L24:
 21427  016C36  006F FF8C  F004    	movff	plusw1,btemp+3
 21428                           
 21429                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21430  016C3C  0EF2               	movlw	242
 21431  016C3E  26E1               	addwf	fsr1l,f,c
 21432  016C40  0EFF               	movlw	255
 21433  016C42  22E2               	addwfc	fsr1h,f,c
 21434  016C44  0012               	return		;funcret
 21435  016C46                     __end_of_floorf:
 21436                           	opt callstack 0
 21437                           
 21438 ;; *************** function ___fpclassifyf *****************
 21439 ;; Defined at:
 21440 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 21441 ;; Parameters:    Size  Location     Type
 21442 ;;  x               4  [STACK] float 
 21443 ;; Auto vars:     Size  Location     Type
 21444 ;;  u               4  [STACK] struct .
 21445 ;;  e               2  [STACK] int 
 21446 ;; Return value:  Size  Location     Type
 21447 ;;                  2  [STACK] int 
 21448 ;; Registers used:
 21449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 21450 ;; Tracked objects:
 21451 ;;		On entry : 0/0
 21452 ;;		On exit  : 0/0
 21453 ;;		Unchanged: 0/0
 21454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21459 ;;Total ram usage:        0 bytes
 21460 ;; Hardware stack levels used:    1
 21461 ;; Hardware stack levels required when called:   15
 21462 ;; This function calls:
 21463 ;;		Nothing
 21464 ;; This function is called by:
 21465 ;;		_efgtoa
 21466 ;; This function uses a reentrant model
 21467 ;;
 21468                           
 21469                           	psect	text75
 21470  01905C                     __ptext75:
 21471                           	opt callstack 0
 21472  01905C                     ___fpclassifyf:
 21473                           	opt callstack 0
 21474                           
 21475                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21476  01905C  0E06               	movlw	6
 21477  01905E  26E1               	addwf	fsr1l,f,c
 21478  019060  0E00               	movlw	0
 21479  019062  22E2               	addwfc	fsr1h,f,c
 21480                           
 21481                           ;incstack = 0
 21482 ;; hardware stack exceeded
 21483  019064  0060  F180  F009   	movff	___fpclassifyf@F463,btemp+8
 21484  01906A  0060  F184  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 21485  019070  0060  F188  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 21486  019076  0060  F18C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 21487                           
 21488                           ;stkvar	_u @ sp[(-6)+0]
 21489  01907C  0EFA               	movlw	-6
 21490  01907E  0060  F027  FFE3   	movff	btemp+8,plusw1
 21491  019084  0EFB               	movlw	-5
 21492  019086  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21493  01908C  0EFC               	movlw	-4
 21494  01908E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21495  019094  0EFD               	movlw	-3
 21496  019096  0060  F033  FFE3   	movff	btemp+11,plusw1
 21497                           
 21498                           ;stkvar	_x @ sp[(-6)+-4]
 21499  01909C  0EF6               	movlw	-10
 21500  01909E  006F FF8C  F009    	movff	plusw1,btemp+8
 21501  0190A4  0EF7               	movlw	-9
 21502  0190A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 21503  0190AC  0EF8               	movlw	-8
 21504  0190AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21505  0190B4  0EF9               	movlw	-7
 21506  0190B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21507                           
 21508                           ;stkvar	_u @ sp[(-6)+0]
 21509  0190BC  0EFA               	movlw	-6
 21510  0190BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 21511  0190C4  0EFB               	movlw	-5
 21512  0190C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21513  0190CC  0EFC               	movlw	-4
 21514  0190CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21515  0190D4  0EFD               	movlw	-3
 21516  0190D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 21517                           
 21518                           ;stkvar	_u @ sp[(-6)+0]
 21519  0190DC  0EFA               	movlw	-6
 21520  0190DE  006F FF8C  F009    	movff	plusw1,btemp+8
 21521  0190E4  0EFB               	movlw	-5
 21522  0190E6  006F FF8C  F00A    	movff	plusw1,btemp+9
 21523  0190EC  0EFC               	movlw	-4
 21524  0190EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21525  0190F4  0EFD               	movlw	-3
 21526  0190F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21527  0190FC  0E18               	movlw	24
 21528  0190FE  D005               	goto	u6320
 21529  019100                     u6325:
 21530  019100  90D8               	bcf	status,0,c
 21531  019102  320C               	rrcf	(btemp+11)^0,f,c
 21532  019104  320B               	rrcf	(btemp+10)^0,f,c
 21533  019106  320A               	rrcf	(btemp+9)^0,f,c
 21534  019108  3209               	rrcf	(btemp+8)^0,f,c
 21535  01910A                     u6320:
 21536  01910A  2EE8               	decfsz	wreg,f,c
 21537  01910C  D7F9               	goto	u6325
 21538  01910E  0060  F024  F007   	movff	btemp+8,btemp+6
 21539  019114  0060  F028  F008   	movff	btemp+9,btemp+7
 21540  01911A  0EFF               	movlw	255
 21541  01911C  1607               	andwf	(btemp+6)^0,f,c
 21542  01911E  0E00               	movlw	0
 21543  019120  1608               	andwf	(btemp+7)^0,f,c
 21544                           
 21545                           ;stkvar	_e @ sp[(-6)+4]
 21546  019122  0EFE               	movlw	-2
 21547  019124  0060  F01F  FFE3   	movff	btemp+6,plusw1
 21548  01912A  0EFF               	movlw	-1
 21549  01912C  0060  F023  FFE3   	movff	btemp+7,plusw1
 21550                           
 21551                           ;stkvar	_e @ sp[(-6)+4]
 21552  019132  0EFE               	movlw	-2
 21553  019134  006F FF8C  F001    	movff	plusw1,btemp
 21554  01913A  0EFF               	movlw	-1
 21555  01913C  50E3               	movf	plusw1,w,c
 21556  01913E  1001               	iorwf	btemp^0,w,c
 21557  019140  A4D8               	btfss	status,2,c
 21558  019142  D023               	goto	l8496
 21559                           
 21560                           ;stkvar	_u @ sp[(-6)+0]
 21561  019144  0EFA               	movlw	-6
 21562  019146  006F FF8C  F009    	movff	plusw1,btemp+8
 21563  01914C  0EFB               	movlw	-5
 21564  01914E  006F FF8C  F00A    	movff	plusw1,btemp+9
 21565  019154  0EFC               	movlw	-4
 21566  019156  006F FF8C  F00B    	movff	plusw1,btemp+10
 21567  01915C  0EFD               	movlw	-3
 21568  01915E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21569  019164  90D8               	bcf	status,0,c
 21570  019166  3409               	rlcf	(btemp+8)^0,w,c
 21571  019168  6E05               	movwf	(btemp+4)^0,c
 21572  01916A  340A               	rlcf	(btemp+9)^0,w,c
 21573  01916C  6E06               	movwf	(btemp+5)^0,c
 21574  01916E  340B               	rlcf	(btemp+10)^0,w,c
 21575  019170  6E07               	movwf	(btemp+6)^0,c
 21576  019172  340C               	rlcf	(btemp+11)^0,w,c
 21577  019174  6E08               	movwf	(btemp+7)^0,c
 21578  019176  5005               	movf	(btemp+4)^0,w,c
 21579  019178  1006               	iorwf	(btemp+5)^0,w,c
 21580  01917A  1007               	iorwf	(btemp+6)^0,w,c
 21581  01917C  1008               	iorwf	(btemp+7)^0,w,c
 21582  01917E  A4D8               	btfss	status,2,c
 21583  019180  D002               	goto	l8492
 21584  019182  0E02               	movlw	2
 21585  019184  D02E               	goto	L25
 21586  019186                     l8492:
 21587  019186  0E03               	movlw	3
 21588  019188  D02C               	goto	L25
 21589  01918A                     l8496:
 21590                           
 21591                           ;stkvar	_e @ sp[(-6)+4]
 21592  01918A  0EFE               	movlw	-2
 21593  01918C  28E3               	incf	plusw1,w,c
 21594  01918E  E128               	bnz	l8502
 21595  019190  0EFF               	movlw	-1
 21596  019192  50E3               	movf	plusw1,w,c
 21597  019194  A4D8               	btfss	status,2,c
 21598  019196  D024               	goto	l8502
 21599                           
 21600                           ;stkvar	_u @ sp[(-6)+0]
 21601  019198  0EFA               	movlw	-6
 21602  01919A  006F FF8C  F009    	movff	plusw1,btemp+8
 21603  0191A0  0EFB               	movlw	-5
 21604  0191A2  006F FF8C  F00A    	movff	plusw1,btemp+9
 21605  0191A8  0EFC               	movlw	-4
 21606  0191AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21607  0191B0  0EFD               	movlw	-3
 21608  0191B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21609  0191B8  0E09               	movlw	9
 21610  0191BA                     u6365:
 21611  0191BA  90D8               	bcf	status,0,c
 21612  0191BC  3609               	rlcf	(btemp+8)^0,f,c
 21613  0191BE  360A               	rlcf	(btemp+9)^0,f,c
 21614  0191C0  360B               	rlcf	(btemp+10)^0,f,c
 21615  0191C2  360C               	rlcf	(btemp+11)^0,f,c
 21616  0191C4  2EE8               	decfsz	wreg,f,c
 21617  0191C6  D7F9               	goto	u6365
 21618  0191C8  5009               	movf	(btemp+8)^0,w,c
 21619  0191CA  100A               	iorwf	(btemp+9)^0,w,c
 21620  0191CC  100B               	iorwf	(btemp+10)^0,w,c
 21621  0191CE  100C               	iorwf	(btemp+11)^0,w,c
 21622  0191D0  A4D8               	btfss	status,2,c
 21623  0191D2  D002               	goto	u6370
 21624  0191D4  0E01               	movlw	1
 21625  0191D6  D001               	goto	u6380
 21626  0191D8                     u6370:
 21627  0191D8  0E00               	movlw	0
 21628  0191DA                     u6380:
 21629  0191DA  6E01               	movwf	btemp^0,c
 21630  0191DC  6A02               	clrf	(btemp+1)^0,c
 21631  0191DE  D004               	goto	l3228
 21632  0191E0                     l8502:
 21633  0191E0  0E04               	movlw	4
 21634  0191E2                     L25:
 21635  0191E2  6E01               	movwf	btemp^0,c
 21636  0191E4  0E00               	movlw	0
 21637  0191E6  6E02               	movwf	(btemp+1)^0,c
 21638  0191E8                     l3228:
 21639                           
 21640                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 21641  0191E8  0EF6               	movlw	246
 21642  0191EA  26E1               	addwf	fsr1l,f,c
 21643  0191EC  0EFF               	movlw	255
 21644  0191EE  22E2               	addwfc	fsr1h,f,c
 21645  0191F0  0012               	return		;funcret
 21646  0191F2                     __end_of___fpclassifyf:
 21647                           	opt callstack 0
 21648                           
 21649 ;; *************** function ___fltol *****************
 21650 ;; Defined at:
 21651 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 21652 ;; Parameters:    Size  Location     Type
 21653 ;;  f1              4  [STACK] int 
 21654 ;; Auto vars:     Size  Location     Type
 21655 ;;  exp1            1  [STACK] unsigned char 
 21656 ;;  sign1           1  [STACK] unsigned char 
 21657 ;; Return value:  Size  Location     Type
 21658 ;;                  4  [STACK] long 
 21659 ;; Registers used:
 21660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 21661 ;; Tracked objects:
 21662 ;;		On entry : 0/0
 21663 ;;		On exit  : 0/0
 21664 ;;		Unchanged: 0/0
 21665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21670 ;;Total ram usage:        0 bytes
 21671 ;; Hardware stack levels used:    1
 21672 ;; Hardware stack levels required when called:   15
 21673 ;; This function calls:
 21674 ;;		Nothing
 21675 ;; This function is called by:
 21676 ;;		_main
 21677 ;;		_convert_dac_raw
 21678 ;;		_calc_bsoc
 21679 ;;		_init_bsoc
 21680 ;;		_efgtoa
 21681 ;; This function uses a reentrant model
 21682 ;;
 21683                           
 21684                           	psect	text76
 21685  0194F8                     __ptext76:
 21686                           	opt callstack 0
 21687  0194F8                     ___fltol:
 21688                           	opt callstack 0
 21689                           
 21690                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21691  0194F8  52E6               	movf	postinc1,f,c
 21692  0194FA  52E6               	movf	postinc1,f,c
 21693                           
 21694                           ;stkvar	_f1 @ sp[(-2)+-4]
 21695                           
 21696                           ;incstack = 0
 21697 ;; hardware stack exceeded
 21698  0194FC  0EFA               	movlw	-6
 21699  0194FE  006F FF8C  F009    	movff	plusw1,btemp+8
 21700  019504  0EFB               	movlw	-5
 21701  019506  006F FF8C  F00A    	movff	plusw1,btemp+9
 21702  01950C  0EFC               	movlw	-4
 21703  01950E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21704  019514  0EFD               	movlw	-3
 21705  019516  006F FF8C  F00C    	movff	plusw1,btemp+11
 21706  01951C  0E18               	movlw	24
 21707  01951E  D005               	goto	u7530
 21708  019520                     u7535:
 21709  019520  90D8               	bcf	status,0,c
 21710  019522  320C               	rrcf	(btemp+11)^0,f,c
 21711  019524  320B               	rrcf	(btemp+10)^0,f,c
 21712  019526  320A               	rrcf	(btemp+9)^0,f,c
 21713  019528  3209               	rrcf	(btemp+8)^0,f,c
 21714  01952A                     u7530:
 21715  01952A  2EE8               	decfsz	wreg,f,c
 21716  01952C  D7F9               	goto	u7535
 21717                           
 21718                           ;stkvar	_exp1 @ sp[(-2)+0]
 21719  01952E  0EFE               	movlw	-2
 21720  019530  0060  F027  FFE3   	movff	btemp+8,plusw1
 21721  019536  0EFE               	movlw	-2
 21722  019538  50E3               	movf	plusw1,w,c
 21723  01953A  A4D8               	btfss	status,2,c
 21724  01953C  D006               	goto	l9122
 21725  01953E                     u7540:
 21726  01953E  0E00               	movlw	0
 21727  019540  6E01               	movwf	btemp^0,c
 21728  019542  6A02               	clrf	(btemp+1)^0,c
 21729  019544  6A03               	clrf	(btemp+2)^0,c
 21730  019546  6A04               	clrf	(btemp+3)^0,c
 21731  019548  D08B               	goto	l2844
 21732  01954A                     l9122:
 21733                           
 21734                           ;stkvar	_f1 @ sp[(-2)+-4]
 21735  01954A  0EFA               	movlw	-6
 21736  01954C  006F FF8C  F009    	movff	plusw1,btemp+8
 21737  019552  0EFB               	movlw	-5
 21738  019554  006F FF8C  F00A    	movff	plusw1,btemp+9
 21739  01955A  0EFC               	movlw	-4
 21740  01955C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21741  019562  0EFD               	movlw	-3
 21742  019564  006F FF8C  F00C    	movff	plusw1,btemp+11
 21743  01956A  0E20               	movlw	32
 21744  01956C  D005               	goto	u7550
 21745  01956E                     u7555:
 21746  01956E  90D8               	bcf	status,0,c
 21747  019570  320C               	rrcf	(btemp+11)^0,f,c
 21748  019572  320B               	rrcf	(btemp+10)^0,f,c
 21749  019574  320A               	rrcf	(btemp+9)^0,f,c
 21750  019576  3209               	rrcf	(btemp+8)^0,f,c
 21751  019578                     u7550:
 21752  019578  2EE8               	decfsz	wreg,f,c
 21753  01957A  D7F9               	goto	u7555
 21754                           
 21755                           ;stkvar	_sign1 @ sp[(-2)+1]
 21756  01957C  0EFF               	movlw	-1
 21757  01957E  0060  F027  FFE3   	movff	btemp+8,plusw1
 21758                           
 21759                           ;stkvar	_f1 @ sp[(-2)+-4]
 21760  019584  0EFC               	movlw	-4
 21761  019586  8EE3               	bsf	plusw1,7,c
 21762                           
 21763                           ;stkvar	_f1 @ sp[(-2)+-4]
 21764  019588  50E1               	movf	fsr1l,w,c
 21765  01958A  0FFA               	addlw	-6
 21766  01958C  6ED9               	movwf	fsr2l,c
 21767  01958E  50E2               	movf	fsr1h,w,c
 21768  019590  6EDA               	movwf	fsr2h,c
 21769  019592  0EFF               	movlw	255
 21770  019594  22DA               	addwfc	fsr2h,f,c
 21771  019596  0EFF               	movlw	255
 21772  019598  16DE               	andwf	postinc2,f,c
 21773  01959A  0EFF               	movlw	255
 21774  01959C  16DE               	andwf	postinc2,f,c
 21775  01959E  0EFF               	movlw	255
 21776  0195A0  16DE               	andwf	postinc2,f,c
 21777  0195A2  0E00               	movlw	0
 21778  0195A4  16DE               	andwf	postinc2,f,c
 21779                           
 21780                           ;stkvar	_exp1 @ sp[(-2)+0]
 21781  0195A6  0EFE               	movlw	-2
 21782  0195A8  006F FF8C  F001    	movff	plusw1,btemp
 21783  0195AE  0E96               	movlw	150
 21784  0195B0  5E01               	subwf	btemp^0,f,c
 21785  0195B2  0EFE               	movlw	-2
 21786  0195B4  0060  F007  FFE3   	movff	btemp,plusw1
 21787                           
 21788                           ;stkvar	_exp1 @ sp[(-2)+0]
 21789  0195BA  0EFE               	movlw	-2
 21790  0195BC  AEE3               	btfss	plusw1,7,c
 21791  0195BE  D014               	goto	l9140
 21792                           
 21793                           ;stkvar	_exp1 @ sp[(-2)+0]
 21794  0195C0  0EFE               	movlw	-2
 21795  0195C2  50E3               	movf	plusw1,w,c
 21796  0195C4  0A80               	xorlw	128
 21797  0195C6  0F97               	addlw	151
 21798  0195C8  A0D8               	btfss	status,0,c
 21799  0195CA  D7B9               	goto	u7540
 21800  0195CC                     l9138:
 21801                           
 21802                           ;stkvar	_f1 @ sp[(-2)+-4]
 21803  0195CC  90D8               	bcf	status,0,c
 21804  0195CE  0EFD               	movlw	-3
 21805  0195D0  32E3               	rrcf	plusw1,f,c
 21806  0195D2  0EFC               	movlw	-4
 21807  0195D4  32E3               	rrcf	plusw1,f,c
 21808  0195D6  0EFB               	movlw	-5
 21809  0195D8  32E3               	rrcf	plusw1,f,c
 21810  0195DA  0EFA               	movlw	-6
 21811  0195DC  32E3               	rrcf	plusw1,f,c
 21812                           
 21813                           ;stkvar	_exp1 @ sp[(-2)+0]
 21814  0195DE  0EFE               	movlw	-2
 21815  0195E0  2AE3               	incf	plusw1,f,c
 21816  0195E2  B4D8               	btfsc	status,2,c
 21817  0195E4  D018               	goto	u7600
 21818  0195E6  D7F2               	goto	l9138
 21819  0195E8                     l9140:
 21820                           
 21821                           ;stkvar	_exp1 @ sp[(-2)+0]
 21822  0195E8  0EFE               	movlw	-2
 21823  0195EA  006F FF8C  F001    	movff	plusw1,btemp
 21824  0195F0  0E1F               	movlw	31
 21825  0195F2  6401               	cpfsgt	btemp^0,c
 21826  0195F4  D00C               	goto	l9148
 21827  0195F6  D7A3               	goto	u7540
 21828  0195F8                     l9146:
 21829                           
 21830                           ;stkvar	_f1 @ sp[(-2)+-4]
 21831  0195F8  90D8               	bcf	status,0,c
 21832  0195FA  0EFA               	movlw	-6
 21833  0195FC  36E3               	rlcf	plusw1,f,c
 21834  0195FE  0EFB               	movlw	-5
 21835  019600  36E3               	rlcf	plusw1,f,c
 21836  019602  0EFC               	movlw	-4
 21837  019604  36E3               	rlcf	plusw1,f,c
 21838  019606  0EFD               	movlw	-3
 21839  019608  36E3               	rlcf	plusw1,f,c
 21840                           
 21841                           ;stkvar	_exp1 @ sp[(-2)+0]
 21842  01960A  0EFE               	movlw	-2
 21843  01960C  06E3               	decf	plusw1,f,c
 21844  01960E                     l9148:
 21845                           
 21846                           ;stkvar	_exp1 @ sp[(-2)+0]
 21847  01960E  0EFE               	movlw	-2
 21848  019610  50E3               	movf	plusw1,w,c
 21849  019612  A4D8               	btfss	status,2,c
 21850  019614  D7F1               	goto	l9146
 21851  019616                     u7600:
 21852                           
 21853                           ;stkvar	_sign1 @ sp[(-2)+1]
 21854  019616  0EFF               	movlw	-1
 21855  019618  50E3               	movf	plusw1,w,c
 21856  01961A  B4D8               	btfsc	status,2,c
 21857  01961C  D011               	goto	u7620
 21858                           
 21859                           ;stkvar	_f1 @ sp[(-2)+-4]
 21860                           ;stkvar	_f1 @ sp[(-2)+-4]
 21861  01961E  0EFA               	movlw	-6
 21862  019620  6CE3               	negf	plusw1,c
 21863  019622  0EFB               	movlw	-5
 21864  019624  1EE3               	comf	plusw1,f,c
 21865  019626  0EFC               	movlw	-4
 21866  019628  1EE3               	comf	plusw1,f,c
 21867  01962A  0EFD               	movlw	-3
 21868  01962C  1EE3               	comf	plusw1,f,c
 21869  01962E  E308               	bnc	u7620
 21870  019630  0EFB               	movlw	-5
 21871  019632  2AE3               	incf	plusw1,f,c
 21872  019634  E305               	bnc	u7620
 21873  019636  0EFC               	movlw	-4
 21874  019638  2AE3               	incf	plusw1,f,c
 21875  01963A  E302               	bnc	u7620
 21876  01963C  0EFD               	movlw	-3
 21877  01963E  2AE3               	incf	plusw1,f,c
 21878  019640                     u7620:
 21879                           
 21880                           ;stkvar	_f1 @ sp[(-2)+-4]
 21881  019640  0EFA               	movlw	-6
 21882  019642  006F FF8C  F001    	movff	plusw1,btemp
 21883  019648  0EFB               	movlw	-5
 21884  01964A  006F FF8C  F002    	movff	plusw1,btemp+1
 21885  019650  0EFC               	movlw	-4
 21886  019652  006F FF8C  F003    	movff	plusw1,btemp+2
 21887  019658  0EFD               	movlw	-3
 21888  01965A  006F FF8C  F004    	movff	plusw1,btemp+3
 21889  019660                     l2844:
 21890                           
 21891                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21892  019660  0EFA               	movlw	250
 21893  019662  26E1               	addwf	fsr1l,f,c
 21894  019664  0EFF               	movlw	255
 21895  019666  22E2               	addwfc	fsr1h,f,c
 21896  019668  0012               	return		;funcret
 21897  01966A                     __end_of___fltol:
 21898                           	opt callstack 0
 21899                           
 21900 ;; *************** function ___flneg *****************
 21901 ;; Defined at:
 21902 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 21903 ;; Parameters:    Size  Location     Type
 21904 ;;  f1              4  [STACK] long 
 21905 ;; Auto vars:     Size  Location     Type
 21906 ;;		None
 21907 ;; Return value:  Size  Location     Type
 21908 ;;                  4  [STACK] long 
 21909 ;; Registers used:
 21910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 21911 ;; Tracked objects:
 21912 ;;		On entry : 0/0
 21913 ;;		On exit  : 0/0
 21914 ;;		Unchanged: 0/0
 21915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21920 ;;Total ram usage:        0 bytes
 21921 ;; Hardware stack levels used:    1
 21922 ;; Hardware stack levels required when called:   15
 21923 ;; This function calls:
 21924 ;;		Nothing
 21925 ;; This function is called by:
 21926 ;;		_calc_bsoc
 21927 ;;		_efgtoa
 21928 ;; This function uses a reentrant model
 21929 ;;
 21930                           
 21931                           	psect	text77
 21932  01C0CA                     __ptext77:
 21933                           	opt callstack 0
 21934  01C0CA                     ___flneg:
 21935                           	opt callstack 0
 21936                           
 21937                           ;stkvar	_f1 @ sp[(0)+-4]
 21938                           
 21939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21940                           ;incstack = 0
 21941 ;; hardware stack exceeded
 21942  01C0CA  0EFC               	movlw	-4
 21943  01C0CC  50E3               	movf	plusw1,w,c
 21944  01C0CE  E10A               	bnz	u7520
 21945  01C0D0  0EFD               	movlw	-3
 21946  01C0D2  50E3               	movf	plusw1,w,c
 21947  01C0D4  E107               	bnz	u7520
 21948  01C0D6  0EFE               	movlw	-2
 21949  01C0D8  50E3               	movf	plusw1,w,c
 21950  01C0DA  E104               	bnz	u7520
 21951  01C0DC  0EFF               	movlw	-1
 21952  01C0DE  50E3               	movf	plusw1,w,c
 21953  01C0E0  B4D8               	btfsc	status,2,c
 21954  01C0E2  D002               	goto	l9112
 21955  01C0E4                     u7520:
 21956                           
 21957                           ;stkvar	_f1 @ sp[(0)+-4]
 21958  01C0E4  0EFF               	movlw	-1
 21959  01C0E6  7EE3               	btg	plusw1,7,c
 21960  01C0E8                     l9112:
 21961                           
 21962                           ;stkvar	_f1 @ sp[(0)+-4]
 21963  01C0E8  0EFC               	movlw	-4
 21964  01C0EA  006F FF8C  F001    	movff	plusw1,btemp
 21965  01C0F0  0EFD               	movlw	-3
 21966  01C0F2  006F FF8C  F002    	movff	plusw1,btemp+1
 21967  01C0F8  0EFE               	movlw	-2
 21968  01C0FA  006F FF8C  F003    	movff	plusw1,btemp+2
 21969  01C100  0EFF               	movlw	-1
 21970  01C102  006F FF8C  F004    	movff	plusw1,btemp+3
 21971                           
 21972                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21973  01C108  52E5               	movf	postdec1,f,c
 21974  01C10A  52E5               	movf	postdec1,f,c
 21975  01C10C  52E5               	movf	postdec1,f,c
 21976  01C10E  52E5               	movf	postdec1,f,c
 21977  01C110  0012               	return		;funcret
 21978  01C112                     __end_of___flneg:
 21979                           	opt callstack 0
 21980                           
 21981 ;; *************** function ___fleq *****************
 21982 ;; Defined at:
 21983 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 21984 ;; Parameters:    Size  Location     Type
 21985 ;;  ff1             4  [STACK] long 
 21986 ;;  ff2             4  [STACK] long 
 21987 ;; Auto vars:     Size  Location     Type
 21988 ;;		None
 21989 ;; Return value:  Size  Location     Type
 21990 ;;		None               void
 21991 ;; Registers used:
 21992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21993 ;; Tracked objects:
 21994 ;;		On entry : 0/0
 21995 ;;		On exit  : 0/0
 21996 ;;		Unchanged: 0/0
 21997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22002 ;;Total ram usage:        0 bytes
 22003 ;; Hardware stack levels used:    1
 22004 ;; Hardware stack levels required when called:   15
 22005 ;; This function calls:
 22006 ;;		Nothing
 22007 ;; This function is called by:
 22008 ;;		_efgtoa
 22009 ;; This function uses a reentrant model
 22010 ;;
 22011                           
 22012                           	psect	text78
 22013  01ACF0                     __ptext78:
 22014                           	opt callstack 0
 22015  01ACF0                     ___fleq:
 22016                           	opt callstack 0
 22017                           
 22018                           ;stkvar	_ff1 @ sp[(0)+-4]
 22019                           
 22020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22021                           ;incstack = 0
 22022 ;; hardware stack exceeded
 22023  01ACF0  50E1               	movf	fsr1l,w,c
 22024  01ACF2  0FFC               	addlw	-4
 22025  01ACF4  6ED9               	movwf	fsr2l,c
 22026  01ACF6  50E2               	movf	fsr1h,w,c
 22027  01ACF8  6EDA               	movwf	fsr2h,c
 22028  01ACFA  0EFF               	movlw	255
 22029  01ACFC  22DA               	addwfc	fsr2h,f,c
 22030  01ACFE  0E00               	movlw	0
 22031  01AD00  14DE               	andwf	postinc2,w,c
 22032  01AD02  6E09               	movwf	(btemp+8)^0,c
 22033  01AD04  0E00               	movlw	0
 22034  01AD06  14DE               	andwf	postinc2,w,c
 22035  01AD08  6E0A               	movwf	(btemp+9)^0,c
 22036  01AD0A  0E80               	movlw	128
 22037  01AD0C  14DE               	andwf	postinc2,w,c
 22038  01AD0E  6E0B               	movwf	(btemp+10)^0,c
 22039  01AD10  0E7F               	movlw	127
 22040  01AD12  14DE               	andwf	postinc2,w,c
 22041  01AD14  6E0C               	movwf	(btemp+11)^0,c
 22042  01AD16  5009               	movf	(btemp+8)^0,w,c
 22043  01AD18  100A               	iorwf	(btemp+9)^0,w,c
 22044  01AD1A  100B               	iorwf	(btemp+10)^0,w,c
 22045  01AD1C  100C               	iorwf	(btemp+11)^0,w,c
 22046  01AD1E  A4D8               	btfss	status,2,c
 22047  01AD20  D008               	goto	l9070
 22048                           
 22049                           ;stkvar	_ff1 @ sp[(0)+-4]
 22050  01AD22  0EFC               	movlw	-4
 22051  01AD24  6AE3               	clrf	plusw1,c
 22052  01AD26  0EFD               	movlw	-3
 22053  01AD28  6AE3               	clrf	plusw1,c
 22054  01AD2A  0EFE               	movlw	-2
 22055  01AD2C  6AE3               	clrf	plusw1,c
 22056  01AD2E  0EFF               	movlw	-1
 22057  01AD30  6AE3               	clrf	plusw1,c
 22058  01AD32                     l9070:
 22059                           
 22060                           ;stkvar	_ff2 @ sp[(0)+-8]
 22061  01AD32  50E1               	movf	fsr1l,w,c
 22062  01AD34  0FF8               	addlw	-8
 22063  01AD36  6ED9               	movwf	fsr2l,c
 22064  01AD38  50E2               	movf	fsr1h,w,c
 22065  01AD3A  6EDA               	movwf	fsr2h,c
 22066  01AD3C  0EFF               	movlw	255
 22067  01AD3E  22DA               	addwfc	fsr2h,f,c
 22068  01AD40  0E00               	movlw	0
 22069  01AD42  14DE               	andwf	postinc2,w,c
 22070  01AD44  6E09               	movwf	(btemp+8)^0,c
 22071  01AD46  0E00               	movlw	0
 22072  01AD48  14DE               	andwf	postinc2,w,c
 22073  01AD4A  6E0A               	movwf	(btemp+9)^0,c
 22074  01AD4C  0E80               	movlw	128
 22075  01AD4E  14DE               	andwf	postinc2,w,c
 22076  01AD50  6E0B               	movwf	(btemp+10)^0,c
 22077  01AD52  0E7F               	movlw	127
 22078  01AD54  14DE               	andwf	postinc2,w,c
 22079  01AD56  6E0C               	movwf	(btemp+11)^0,c
 22080  01AD58  5009               	movf	(btemp+8)^0,w,c
 22081  01AD5A  100A               	iorwf	(btemp+9)^0,w,c
 22082  01AD5C  100B               	iorwf	(btemp+10)^0,w,c
 22083  01AD5E  100C               	iorwf	(btemp+11)^0,w,c
 22084  01AD60  A4D8               	btfss	status,2,c
 22085  01AD62  D008               	goto	l9074
 22086                           
 22087                           ;stkvar	_ff2 @ sp[(0)+-8]
 22088  01AD64  0EF8               	movlw	-8
 22089  01AD66  6AE3               	clrf	plusw1,c
 22090  01AD68  0EF9               	movlw	-7
 22091  01AD6A  6AE3               	clrf	plusw1,c
 22092  01AD6C  0EFA               	movlw	-6
 22093  01AD6E  6AE3               	clrf	plusw1,c
 22094  01AD70  0EFB               	movlw	-5
 22095  01AD72  6AE3               	clrf	plusw1,c
 22096  01AD74                     l9074:
 22097                           
 22098                           ;stkvar	_ff2 @ sp[(0)+-8]
 22099                           ;stkvar	_ff1 @ sp[(0)+-4]
 22100  01AD74  50E1               	movf	fsr1l,w,c
 22101  01AD76  0FFC               	addlw	-4
 22102  01AD78  6ED9               	movwf	fsr2l,c
 22103  01AD7A  50E2               	movf	fsr1h,w,c
 22104  01AD7C  6EDA               	movwf	fsr2h,c
 22105  01AD7E  0EFF               	movlw	255
 22106  01AD80  22DA               	addwfc	fsr2h,f,c
 22107  01AD82  0EF8               	movlw	-8
 22108  01AD84  50E3               	movf	plusw1,w,c
 22109  01AD86  18DE               	xorwf	postinc2,w,c
 22110  01AD88  E10D               	bnz	u7460
 22111  01AD8A  0EF9               	movlw	-7
 22112  01AD8C  50E3               	movf	plusw1,w,c
 22113  01AD8E  18DE               	xorwf	postinc2,w,c
 22114  01AD90  E109               	bnz	u7460
 22115  01AD92  0EFA               	movlw	-6
 22116  01AD94  50E3               	movf	plusw1,w,c
 22117  01AD96  18DE               	xorwf	postinc2,w,c
 22118  01AD98  E105               	bnz	u7460
 22119  01AD9A  0EFB               	movlw	-5
 22120  01AD9C  50E3               	movf	plusw1,w,c
 22121  01AD9E  18DE               	xorwf	postinc2,w,c
 22122  01ADA0  B4D8               	btfsc	status,2,c
 22123  01ADA2  D002               	goto	l9078
 22124  01ADA4                     u7460:
 22125  01ADA4  9001               	bcf	btemp& (0+255),0,c
 22126  01ADA6  D001               	goto	l2806
 22127  01ADA8                     l9078:
 22128  01ADA8  8001               	bsf	btemp& (0+255),0,c
 22129  01ADAA                     l2806:
 22130                           
 22131                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 22132  01ADAA  0EF8               	movlw	248
 22133  01ADAC  26E1               	addwf	fsr1l,f,c
 22134  01ADAE  0EFF               	movlw	255
 22135  01ADB0  22E2               	addwfc	fsr1h,f,c
 22136  01ADB2  0012               	return		;funcret
 22137  01ADB4                     __end_of___fleq:
 22138                           	opt callstack 0
 22139                           
 22140 ;; *************** function ___awmod *****************
 22141 ;; Defined at:
 22142 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 22143 ;; Parameters:    Size  Location     Type
 22144 ;;  dividend        2  [STACK] int 
 22145 ;;  divisor         2  [STACK] int 
 22146 ;; Auto vars:     Size  Location     Type
 22147 ;;  sign            1  [STACK] unsigned char 
 22148 ;;  counter         1  [STACK] unsigned char 
 22149 ;; Return value:  Size  Location     Type
 22150 ;;                  2  [STACK] int 
 22151 ;; Registers used:
 22152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 22153 ;; Tracked objects:
 22154 ;;		On entry : 0/0
 22155 ;;		On exit  : 0/0
 22156 ;;		Unchanged: 0/0
 22157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22162 ;;Total ram usage:        0 bytes
 22163 ;; Hardware stack levels used:    1
 22164 ;; Hardware stack levels required when called:   15
 22165 ;; This function calls:
 22166 ;;		Nothing
 22167 ;; This function is called by:
 22168 ;;		_efgtoa
 22169 ;; This function uses a reentrant model
 22170 ;;
 22171                           
 22172                           	psect	text79
 22173  01A1A0                     __ptext79:
 22174                           	opt callstack 0
 22175  01A1A0                     ___awmod:
 22176                           	opt callstack 0
 22177                           
 22178                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22179  01A1A0  52E6               	movf	postinc1,f,c
 22180  01A1A2  52E6               	movf	postinc1,f,c
 22181                           
 22182                           ;stkvar	_sign @ sp[(-2)+0]
 22183                           
 22184                           ;incstack = 0
 22185 ;; hardware stack exceeded
 22186  01A1A4  0EFE               	movlw	-2
 22187  01A1A6  6AE3               	clrf	plusw1,c
 22188                           
 22189                           ;stkvar	_dividend @ sp[(-2)+-2]
 22190  01A1A8  0EFD               	movlw	-3
 22191  01A1AA  AEE3               	btfss	plusw1,7,c
 22192  01A1AC  D009               	goto	l9036
 22193                           
 22194                           ;stkvar	_dividend @ sp[(-2)+-2]
 22195                           ;stkvar	_dividend @ sp[(-2)+-2]
 22196  01A1AE  0EFC               	movlw	-4
 22197  01A1B0  6CE3               	negf	plusw1,c
 22198  01A1B2  0EFD               	movlw	-3
 22199  01A1B4  1EE3               	comf	plusw1,f,c
 22200  01A1B6  B0D8               	btfsc	status,0,c
 22201  01A1B8  2AE3               	incf	plusw1,f,c
 22202                           
 22203                           ;stkvar	_sign @ sp[(-2)+0]
 22204  01A1BA  0EFE               	movlw	-2
 22205  01A1BC  6AE3               	clrf	plusw1,c
 22206  01A1BE  2AE3               	incf	plusw1,f,c
 22207  01A1C0                     l9036:
 22208                           
 22209                           ;stkvar	_divisor @ sp[(-2)+-4]
 22210  01A1C0  0EFB               	movlw	-5
 22211  01A1C2  AEE3               	btfss	plusw1,7,c
 22212  01A1C4  D006               	goto	l9040
 22213                           
 22214                           ;stkvar	_divisor @ sp[(-2)+-4]
 22215                           ;stkvar	_divisor @ sp[(-2)+-4]
 22216  01A1C6  0EFA               	movlw	-6
 22217  01A1C8  6CE3               	negf	plusw1,c
 22218  01A1CA  0EFB               	movlw	-5
 22219  01A1CC  1EE3               	comf	plusw1,f,c
 22220  01A1CE  B0D8               	btfsc	status,0,c
 22221  01A1D0  2AE3               	incf	plusw1,f,c
 22222  01A1D2                     l9040:
 22223                           
 22224                           ;stkvar	_divisor @ sp[(-2)+-4]
 22225  01A1D2  0EFA               	movlw	-6
 22226  01A1D4  006F FF8C  F001    	movff	plusw1,btemp
 22227  01A1DA  0EFB               	movlw	-5
 22228  01A1DC  50E3               	movf	plusw1,w,c
 22229  01A1DE  1001               	iorwf	btemp^0,w,c
 22230  01A1E0  B4D8               	btfsc	status,2,c
 22231  01A1E2  D053               	goto	u7420
 22232                           
 22233                           ;stkvar	_counter @ sp[(-2)+1]
 22234  01A1E4  0EFF               	movlw	-1
 22235  01A1E6  6AE3               	clrf	plusw1,c
 22236  01A1E8  D012               	goto	L26
 22237  01A1EA                     l9044:
 22238                           
 22239                           ;stkvar	_divisor @ sp[(-2)+-4]
 22240  01A1EA  0EFA               	movlw	-6
 22241  01A1EC  50E3               	movf	plusw1,w,c
 22242  01A1EE  90D8               	bcf	status,0,c
 22243  01A1F0  34E8               	rlcf	wreg,w,c
 22244  01A1F2  6E01               	movwf	btemp^0,c
 22245  01A1F4  0EFA               	movlw	-6
 22246  01A1F6  0060  F007  FFE3   	movff	btemp,plusw1
 22247  01A1FC  0EFB               	movlw	-5
 22248  01A1FE  50E3               	movf	plusw1,w,c
 22249  01A200  34E8               	rlcf	wreg,w,c
 22250  01A202  6E01               	movwf	btemp^0,c
 22251  01A204  0EFB               	movlw	-5
 22252  01A206  0060  F007  FFE3   	movff	btemp,plusw1
 22253                           
 22254                           ;stkvar	_counter @ sp[(-2)+1]
 22255  01A20C  0EFF               	movlw	-1
 22256  01A20E                     L26:
 22257  01A20E  2AE3               	incf	plusw1,f,c
 22258                           
 22259                           ;stkvar	_divisor @ sp[(-2)+-4]
 22260  01A210  0EFB               	movlw	-5
 22261  01A212  AEE3               	btfss	plusw1,7,c
 22262  01A214  D7EA               	goto	l9044
 22263  01A216                     u7400:
 22264                           
 22265                           ;stkvar	_divisor @ sp[(-2)+-4]
 22266  01A216  0EFA               	movlw	-6
 22267  01A218  006F FF8C  F00B    	movff	plusw1,btemp+10
 22268  01A21E  0EFB               	movlw	-5
 22269  01A220  006F FF8C  F00C    	movff	plusw1,btemp+11
 22270                           
 22271                           ;stkvar	_dividend @ sp[(-2)+-2]
 22272  01A226  0EFC               	movlw	-4
 22273  01A228  006F FF8C  F009    	movff	plusw1,btemp+8
 22274  01A22E  0EFD               	movlw	-3
 22275  01A230  006F FF8C  F00A    	movff	plusw1,btemp+9
 22276  01A236  500B               	movf	(btemp+10)^0,w,c
 22277  01A238  5C09               	subwf	(btemp+8)^0,w,c
 22278  01A23A  500C               	movf	(btemp+11)^0,w,c
 22279  01A23C  580A               	subwfb	(btemp+9)^0,w,c
 22280  01A23E  A0D8               	btfss	status,0,c
 22281  01A240  D014               	goto	l9054
 22282                           
 22283                           ;stkvar	_divisor @ sp[(-2)+-4]
 22284                           ;stkvar	_dividend @ sp[(-2)+-2]
 22285  01A242  0EFC               	movlw	-4
 22286  01A244  50E3               	movf	plusw1,w,c
 22287  01A246  6E01               	movwf	btemp^0,c
 22288  01A248  0EFA               	movlw	-6
 22289  01A24A  50E3               	movf	plusw1,w,c
 22290  01A24C  5E01               	subwf	btemp^0,f,c
 22291  01A24E  0EFC               	movlw	-4
 22292  01A250  0060  F007  FFE3   	movff	btemp,plusw1
 22293  01A256  0EFD               	movlw	-3
 22294  01A258  50E3               	movf	plusw1,w,c
 22295  01A25A  6E01               	movwf	btemp^0,c
 22296  01A25C  0EFB               	movlw	-5
 22297  01A25E  50E3               	movf	plusw1,w,c
 22298  01A260  5A01               	subwfb	btemp^0,f,c
 22299  01A262  0EFD               	movlw	-3
 22300  01A264  0060  F007  FFE3   	movff	btemp,plusw1
 22301  01A26A                     l9054:
 22302                           
 22303                           ;stkvar	_divisor @ sp[(-2)+-4]
 22304  01A26A  90D8               	bcf	status,0,c
 22305  01A26C  0EFB               	movlw	-5
 22306  01A26E  32E3               	rrcf	plusw1,f,c
 22307  01A270  0EFA               	movlw	-6
 22308  01A272  32E3               	rrcf	plusw1,f,c
 22309                           
 22310                           ;stkvar	_counter @ sp[(-2)+1]
 22311  01A274  0EFF               	movlw	-1
 22312  01A276  50E3               	movf	plusw1,w,c
 22313  01A278  6E01               	movwf	btemp^0,c
 22314  01A27A  0E01               	movlw	1
 22315  01A27C  5E01               	subwf	btemp^0,f,c
 22316  01A27E  0EFF               	movlw	-1
 22317  01A280  0060  F007  FFE3   	movff	btemp,plusw1
 22318  01A286  A4D8               	btfss	status,2,c
 22319  01A288  D7C6               	goto	u7400
 22320  01A28A                     u7420:
 22321                           
 22322                           ;stkvar	_sign @ sp[(-2)+0]
 22323  01A28A  0EFE               	movlw	-2
 22324  01A28C  50E3               	movf	plusw1,w,c
 22325  01A28E  B4D8               	btfsc	status,2,c
 22326  01A290  D006               	goto	l9062
 22327                           
 22328                           ;stkvar	_dividend @ sp[(-2)+-2]
 22329                           ;stkvar	_dividend @ sp[(-2)+-2]
 22330  01A292  0EFC               	movlw	-4
 22331  01A294  6CE3               	negf	plusw1,c
 22332  01A296  0EFD               	movlw	-3
 22333  01A298  1EE3               	comf	plusw1,f,c
 22334  01A29A  B0D8               	btfsc	status,0,c
 22335  01A29C  2AE3               	incf	plusw1,f,c
 22336  01A29E                     l9062:
 22337                           
 22338                           ;stkvar	_dividend @ sp[(-2)+-2]
 22339  01A29E  0EFC               	movlw	-4
 22340  01A2A0  006F FF8C  F001    	movff	plusw1,btemp
 22341  01A2A6  0EFD               	movlw	-3
 22342  01A2A8  006F FF8C  F002    	movff	plusw1,btemp+1
 22343                           
 22344                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22345  01A2AE  0EFA               	movlw	250
 22346  01A2B0  26E1               	addwf	fsr1l,f,c
 22347  01A2B2  0EFF               	movlw	255
 22348  01A2B4  22E2               	addwfc	fsr1h,f,c
 22349  01A2B6  0012               	return		;funcret
 22350  01A2B8                     __end_of___awmod:
 22351                           	opt callstack 0
 22352                           
 22353 ;; *************** function ___awdiv *****************
 22354 ;; Defined at:
 22355 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 22356 ;; Parameters:    Size  Location     Type
 22357 ;;  dividend        2  [STACK] int 
 22358 ;;  divisor         2  [STACK] int 
 22359 ;; Auto vars:     Size  Location     Type
 22360 ;;  quotient        2  [STACK] int 
 22361 ;;  sign            1  [STACK] unsigned char 
 22362 ;;  counter         1  [STACK] unsigned char 
 22363 ;; Return value:  Size  Location     Type
 22364 ;;                  2  [STACK] int 
 22365 ;; Registers used:
 22366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 22367 ;; Tracked objects:
 22368 ;;		On entry : 0/0
 22369 ;;		On exit  : 0/0
 22370 ;;		Unchanged: 0/0
 22371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22376 ;;Total ram usage:        0 bytes
 22377 ;; Hardware stack levels used:    1
 22378 ;; Hardware stack levels required when called:   15
 22379 ;; This function calls:
 22380 ;;		Nothing
 22381 ;; This function is called by:
 22382 ;;		_efgtoa
 22383 ;; This function uses a reentrant model
 22384 ;;
 22385                           
 22386                           	psect	text80
 22387  01992E                     __ptext80:
 22388                           	opt callstack 0
 22389  01992E                     ___awdiv:
 22390                           	opt callstack 0
 22391                           
 22392                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22393  01992E  52E6               	movf	postinc1,f,c
 22394  019930  52E6               	movf	postinc1,f,c
 22395  019932  52E6               	movf	postinc1,f,c
 22396  019934  52E6               	movf	postinc1,f,c
 22397                           
 22398                           ;stkvar	_sign @ sp[(-4)+2]
 22399                           
 22400                           ;incstack = 0
 22401 ;; hardware stack exceeded
 22402  019936  0EFE               	movlw	-2
 22403  019938  6AE3               	clrf	plusw1,c
 22404                           
 22405                           ;stkvar	_divisor @ sp[(-4)+-4]
 22406  01993A  0EF9               	movlw	-7
 22407  01993C  AEE3               	btfss	plusw1,7,c
 22408  01993E  D009               	goto	l8990
 22409                           
 22410                           ;stkvar	_divisor @ sp[(-4)+-4]
 22411                           ;stkvar	_divisor @ sp[(-4)+-4]
 22412  019940  0EF8               	movlw	-8
 22413  019942  6CE3               	negf	plusw1,c
 22414  019944  0EF9               	movlw	-7
 22415  019946  1EE3               	comf	plusw1,f,c
 22416  019948  B0D8               	btfsc	status,0,c
 22417  01994A  2AE3               	incf	plusw1,f,c
 22418                           
 22419                           ;stkvar	_sign @ sp[(-4)+2]
 22420  01994C  0EFE               	movlw	-2
 22421  01994E  6AE3               	clrf	plusw1,c
 22422  019950  2AE3               	incf	plusw1,f,c
 22423  019952                     l8990:
 22424                           
 22425                           ;stkvar	_dividend @ sp[(-4)+-2]
 22426  019952  0EFB               	movlw	-5
 22427  019954  AEE3               	btfss	plusw1,7,c
 22428  019956  D008               	goto	l8996
 22429                           
 22430                           ;stkvar	_dividend @ sp[(-4)+-2]
 22431                           ;stkvar	_dividend @ sp[(-4)+-2]
 22432  019958  0EFA               	movlw	-6
 22433  01995A  6CE3               	negf	plusw1,c
 22434  01995C  0EFB               	movlw	-5
 22435  01995E  1EE3               	comf	plusw1,f,c
 22436  019960  B0D8               	btfsc	status,0,c
 22437  019962  2AE3               	incf	plusw1,f,c
 22438                           
 22439                           ;stkvar	_sign @ sp[(-4)+2]
 22440  019964  0EFE               	movlw	-2
 22441  019966  70E3               	btg	plusw1,0,c
 22442  019968                     l8996:
 22443                           
 22444                           ;stkvar	_quotient @ sp[(-4)+0]
 22445  019968  0EFC               	movlw	-4
 22446  01996A  6AE3               	clrf	plusw1,c
 22447  01996C  0EFD               	movlw	-3
 22448  01996E  6AE3               	clrf	plusw1,c
 22449                           
 22450                           ;stkvar	_divisor @ sp[(-4)+-4]
 22451  019970  0EF8               	movlw	-8
 22452  019972  006F FF8C  F001    	movff	plusw1,btemp
 22453  019978  0EF9               	movlw	-7
 22454  01997A  50E3               	movf	plusw1,w,c
 22455  01997C  1001               	iorwf	btemp^0,w,c
 22456  01997E  B4D8               	btfsc	status,2,c
 22457  019980  D066               	goto	u7350
 22458                           
 22459                           ;stkvar	_counter @ sp[(-4)+3]
 22460  019982  0EFF               	movlw	-1
 22461  019984  6AE3               	clrf	plusw1,c
 22462  019986  D012               	goto	L27
 22463  019988                     l9002:
 22464                           
 22465                           ;stkvar	_divisor @ sp[(-4)+-4]
 22466  019988  0EF8               	movlw	-8
 22467  01998A  50E3               	movf	plusw1,w,c
 22468  01998C  90D8               	bcf	status,0,c
 22469  01998E  34E8               	rlcf	wreg,w,c
 22470  019990  6E01               	movwf	btemp^0,c
 22471  019992  0EF8               	movlw	-8
 22472  019994  0060  F007  FFE3   	movff	btemp,plusw1
 22473  01999A  0EF9               	movlw	-7
 22474  01999C  50E3               	movf	plusw1,w,c
 22475  01999E  34E8               	rlcf	wreg,w,c
 22476  0199A0  6E01               	movwf	btemp^0,c
 22477  0199A2  0EF9               	movlw	-7
 22478  0199A4  0060  F007  FFE3   	movff	btemp,plusw1
 22479                           
 22480                           ;stkvar	_counter @ sp[(-4)+3]
 22481  0199AA  0EFF               	movlw	-1
 22482  0199AC                     L27:
 22483  0199AC  2AE3               	incf	plusw1,f,c
 22484                           
 22485                           ;stkvar	_divisor @ sp[(-4)+-4]
 22486  0199AE  0EF9               	movlw	-7
 22487  0199B0  AEE3               	btfss	plusw1,7,c
 22488  0199B2  D7EA               	goto	l9002
 22489  0199B4                     u7330:
 22490                           
 22491                           ;stkvar	_quotient @ sp[(-4)+0]
 22492  0199B4  0EFC               	movlw	-4
 22493  0199B6  50E3               	movf	plusw1,w,c
 22494  0199B8  90D8               	bcf	status,0,c
 22495  0199BA  34E8               	rlcf	wreg,w,c
 22496  0199BC  6E01               	movwf	btemp^0,c
 22497  0199BE  0EFC               	movlw	-4
 22498  0199C0  0060  F007  FFE3   	movff	btemp,plusw1
 22499  0199C6  0EFD               	movlw	-3
 22500  0199C8  50E3               	movf	plusw1,w,c
 22501  0199CA  34E8               	rlcf	wreg,w,c
 22502  0199CC  6E01               	movwf	btemp^0,c
 22503  0199CE  0EFD               	movlw	-3
 22504  0199D0  0060  F007  FFE3   	movff	btemp,plusw1
 22505                           
 22506                           ;stkvar	_divisor @ sp[(-4)+-4]
 22507  0199D6  0EF8               	movlw	-8
 22508  0199D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 22509  0199DE  0EF9               	movlw	-7
 22510  0199E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22511                           
 22512                           ;stkvar	_dividend @ sp[(-4)+-2]
 22513  0199E6  0EFA               	movlw	-6
 22514  0199E8  006F FF8C  F009    	movff	plusw1,btemp+8
 22515  0199EE  0EFB               	movlw	-5
 22516  0199F0  006F FF8C  F00A    	movff	plusw1,btemp+9
 22517  0199F6  500B               	movf	(btemp+10)^0,w,c
 22518  0199F8  5C09               	subwf	(btemp+8)^0,w,c
 22519  0199FA  500C               	movf	(btemp+11)^0,w,c
 22520  0199FC  580A               	subwfb	(btemp+9)^0,w,c
 22521  0199FE  A0D8               	btfss	status,0,c
 22522  019A00  D016               	goto	l9016
 22523                           
 22524                           ;stkvar	_divisor @ sp[(-4)+-4]
 22525                           ;stkvar	_dividend @ sp[(-4)+-2]
 22526  019A02  0EFA               	movlw	-6
 22527  019A04  50E3               	movf	plusw1,w,c
 22528  019A06  6E01               	movwf	btemp^0,c
 22529  019A08  0EF8               	movlw	-8
 22530  019A0A  50E3               	movf	plusw1,w,c
 22531  019A0C  5E01               	subwf	btemp^0,f,c
 22532  019A0E  0EFA               	movlw	-6
 22533  019A10  0060  F007  FFE3   	movff	btemp,plusw1
 22534  019A16  0EFB               	movlw	-5
 22535  019A18  50E3               	movf	plusw1,w,c
 22536  019A1A  6E01               	movwf	btemp^0,c
 22537  019A1C  0EF9               	movlw	-7
 22538  019A1E  50E3               	movf	plusw1,w,c
 22539  019A20  5A01               	subwfb	btemp^0,f,c
 22540  019A22  0EFB               	movlw	-5
 22541  019A24  0060  F007  FFE3   	movff	btemp,plusw1
 22542                           
 22543                           ;stkvar	_quotient @ sp[(-4)+0]
 22544  019A2A  0EFC               	movlw	-4
 22545  019A2C  80E3               	bsf	plusw1,0,c
 22546  019A2E                     l9016:
 22547                           
 22548                           ;stkvar	_divisor @ sp[(-4)+-4]
 22549  019A2E  90D8               	bcf	status,0,c
 22550  019A30  0EF9               	movlw	-7
 22551  019A32  32E3               	rrcf	plusw1,f,c
 22552  019A34  0EF8               	movlw	-8
 22553  019A36  32E3               	rrcf	plusw1,f,c
 22554                           
 22555                           ;stkvar	_counter @ sp[(-4)+3]
 22556  019A38  0EFF               	movlw	-1
 22557  019A3A  50E3               	movf	plusw1,w,c
 22558  019A3C  6E01               	movwf	btemp^0,c
 22559  019A3E  0E01               	movlw	1
 22560  019A40  5E01               	subwf	btemp^0,f,c
 22561  019A42  0EFF               	movlw	-1
 22562  019A44  0060  F007  FFE3   	movff	btemp,plusw1
 22563  019A4A  A4D8               	btfss	status,2,c
 22564  019A4C  D7B3               	goto	u7330
 22565  019A4E                     u7350:
 22566                           
 22567                           ;stkvar	_sign @ sp[(-4)+2]
 22568  019A4E  0EFE               	movlw	-2
 22569  019A50  50E3               	movf	plusw1,w,c
 22570  019A52  B4D8               	btfsc	status,2,c
 22571  019A54  D006               	goto	l9024
 22572                           
 22573                           ;stkvar	_quotient @ sp[(-4)+0]
 22574                           ;stkvar	_quotient @ sp[(-4)+0]
 22575  019A56  0EFC               	movlw	-4
 22576  019A58  6CE3               	negf	plusw1,c
 22577  019A5A  0EFD               	movlw	-3
 22578  019A5C  1EE3               	comf	plusw1,f,c
 22579  019A5E  B0D8               	btfsc	status,0,c
 22580  019A60  2AE3               	incf	plusw1,f,c
 22581  019A62                     l9024:
 22582                           
 22583                           ;stkvar	_quotient @ sp[(-4)+0]
 22584  019A62  0EFC               	movlw	-4
 22585  019A64  006F FF8C  F001    	movff	plusw1,btemp
 22586  019A6A  0EFD               	movlw	-3
 22587  019A6C  006F FF8C  F002    	movff	plusw1,btemp+1
 22588                           
 22589                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22590  019A72  0EF8               	movlw	248
 22591  019A74  26E1               	addwf	fsr1l,f,c
 22592  019A76  0EFF               	movlw	255
 22593  019A78  22E2               	addwfc	fsr1h,f,c
 22594  019A7A  0012               	return		;funcret
 22595  019A7C                     __end_of___awdiv:
 22596                           	opt callstack 0
 22597                           
 22598 ;; *************** function _dtoa *****************
 22599 ;; Defined at:
 22600 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22601 ;; Parameters:    Size  Location     Type
 22602 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22603 ;;		 -> f(6), NULL(0), 
 22604 ;;  d               8  [STACK] long long 
 22605 ;; Auto vars:     Size  Location     Type
 22606 ;;  n               8  [STACK] long long 
 22607 ;;  i               2  [STACK] int 
 22608 ;;  s               2  [STACK] int 
 22609 ;;  w               2  [STACK] int 
 22610 ;;  p               2  [STACK] int 
 22611 ;; Return value:  Size  Location     Type
 22612 ;;                  2  [STACK] int 
 22613 ;; Registers used:
 22614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 22615 ;; Tracked objects:
 22616 ;;		On entry : 0/0
 22617 ;;		On exit  : 0/0
 22618 ;;		Unchanged: 0/0
 22619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22624 ;;Total ram usage:        0 bytes
 22625 ;; Hardware stack levels used:    1
 22626 ;; Hardware stack levels required when called:   20
 22627 ;; This function calls:
 22628 ;;		___aodiv
 22629 ;;		___aomod
 22630 ;;		_abs
 22631 ;;		_pad
 22632 ;; This function is called by:
 22633 ;;		_vfpfcnvrt
 22634 ;; This function uses a reentrant model
 22635 ;;
 22636                           
 22637                           	psect	text81
 22638  0158D0                     __ptext81:
 22639                           	opt callstack 0
 22640  0158D0                     _dtoa:
 22641                           	opt callstack 0
 22642                           
 22643                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 22644  0158D0  0E12               	movlw	18
 22645  0158D2  26E1               	addwf	fsr1l,f,c
 22646  0158D4  0E00               	movlw	0
 22647  0158D6  22E2               	addwfc	fsr1h,f,c
 22648                           
 22649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 22650                           ;stkvar	_d @ sp[(-18)+-10]
 22651                           
 22652                           ;incstack = 0
 22653 ;; hardware stack exceeded
 22654  0158D8  0EE4               	movlw	228
 22655  0158DA  24E1               	addwf	fsr1l,w,c
 22656  0158DC  6ED9               	movwf	fsr2l,c
 22657  0158DE  0EFF               	movlw	255
 22658  0158E0  20E2               	addwfc	fsr1h,w,c
 22659  0158E2  6EDA               	movwf	fsr2h,c
 22660                           
 22661                           ;stkvar	_n @ sp[(-18)+2]
 22662  0158E4  0E08               	movlw	8
 22663  0158E6  6E01               	movwf	btemp^0,c
 22664  0158E8  0EF0               	movlw	-16
 22665  0158EA                     us1154999:
 22666  0158EA  006F FF7B FFE3     	movff	postinc2,plusw1
 22667  0158F0  28E8               	incf	wreg,w,c
 22668  0158F2  2E01               	decfsz	btemp^0,f,c
 22669  0158F4  D7FA               	bra	us1154999
 22670                           
 22671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 22672                           ;stkvar	_n @ sp[(-18)+2]
 22673  0158F6  0EF7               	movlw	-9
 22674  0158F8  AEE3               	btfss	plusw1,7,c
 22675  0158FA  D002               	goto	u11550
 22676  0158FC  0E01               	movlw	1
 22677  0158FE  D001               	goto	u11560
 22678  015900                     u11550:
 22679  015900  0E00               	movlw	0
 22680  015902                     u11560:
 22681  015902  6E0B               	movwf	(btemp+10)^0,c
 22682  015904  6A0C               	clrf	(btemp+11)^0,c
 22683                           
 22684                           ;stkvar	_s @ sp[(-18)+12]
 22685  015906  0EFA               	movlw	-6
 22686  015908  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22687  01590E  0EFB               	movlw	-5
 22688  015910  0060  F033  FFE3   	movff	btemp+11,plusw1
 22689                           
 22690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 22691                           ;stkvar	_s @ sp[(-18)+12]
 22692  015916  0EFA               	movlw	-6
 22693  015918  006F FF8C  F001    	movff	plusw1,btemp
 22694  01591E  0EFB               	movlw	-5
 22695  015920  50E3               	movf	plusw1,w,c
 22696  015922  1001               	iorwf	btemp^0,w,c
 22697  015924  B4D8               	btfsc	status,2,c
 22698  015926  D025               	goto	u11580
 22699                           
 22700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 22701                           ;stkvar	_n @ sp[(-18)+2]
 22702                           ;stkvar	_n @ sp[(-18)+2]
 22703  015928  0EF0               	movlw	-16
 22704  01592A  6CE3               	negf	plusw1,c
 22705  01592C  0EF1               	movlw	-15
 22706  01592E  1EE3               	comf	plusw1,f,c
 22707  015930  0EF2               	movlw	-14
 22708  015932  1EE3               	comf	plusw1,f,c
 22709  015934  0EF3               	movlw	-13
 22710  015936  1EE3               	comf	plusw1,f,c
 22711  015938  0EF4               	movlw	-12
 22712  01593A  1EE3               	comf	plusw1,f,c
 22713  01593C  0EF5               	movlw	-11
 22714  01593E  1EE3               	comf	plusw1,f,c
 22715  015940  0EF6               	movlw	-10
 22716  015942  1EE3               	comf	plusw1,f,c
 22717  015944  0EF7               	movlw	-9
 22718  015946  1EE3               	comf	plusw1,f,c
 22719  015948  E314               	bnc	u11580
 22720  01594A  0EF1               	movlw	-15
 22721  01594C  2AE3               	incf	plusw1,f,c
 22722  01594E  E311               	bnc	u11580
 22723  015950  0EF2               	movlw	-14
 22724  015952  2AE3               	incf	plusw1,f,c
 22725  015954  E30E               	bnc	u11580
 22726  015956  0EF3               	movlw	-13
 22727  015958  2AE3               	incf	plusw1,f,c
 22728  01595A  E30B               	bnc	u11580
 22729  01595C  0EF4               	movlw	-12
 22730  01595E  2AE3               	incf	plusw1,f,c
 22731  015960  E308               	bnc	u11580
 22732  015962  0EF5               	movlw	-11
 22733  015964  2AE3               	incf	plusw1,f,c
 22734  015966  E305               	bnc	u11580
 22735  015968  0EF6               	movlw	-10
 22736  01596A  2AE3               	incf	plusw1,f,c
 22737  01596C  E302               	bnc	u11580
 22738  01596E  0EF7               	movlw	-9
 22739  015970  2AE3               	incf	plusw1,f,c
 22740  015972                     u11580:
 22741                           
 22742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 22743  015972  AE3D               	btfss	(_prec+1)^0,7,c
 22744                           
 22745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 22746  015974  923E               	bcf	_flags^0,1,c
 22747                           
 22748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 22749  015976  BE3D               	btfsc	(_prec+1)^0,7,c
 22750  015978  D005               	goto	u11600
 22751  01597A  503D               	movf	(_prec+1)^0,w,c
 22752  01597C  E110               	bnz	l12740
 22753  01597E  043C               	decf	_prec^0,w,c
 22754  015980  B0D8               	btfsc	status,0,c
 22755  015982  D00D               	goto	l12740
 22756  015984                     u11600:
 22757  015984  0E01               	movlw	1
 22758  015986  6E0B               	movwf	(btemp+10)^0,c
 22759  015988  0E00               	movlw	0
 22760  01598A  6E0C               	movwf	(btemp+11)^0,c
 22761                           
 22762                           ;stkvar	_p @ sp[(-18)+16]
 22763  01598C  0EFE               	movlw	-2
 22764  01598E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22765  015994  0EFF               	movlw	-1
 22766  015996  0060  F033  FFE3   	movff	btemp+11,plusw1
 22767  01599C  D008               	goto	l2310
 22768  01599E                     l12740:
 22769                           
 22770                           ;stkvar	_p @ sp[(-18)+16]
 22771  01599E  0EFE               	movlw	-2
 22772  0159A0  0060  F0F3  FFE3   	movff	_prec,plusw1
 22773  0159A6  0EFF               	movlw	-1
 22774  0159A8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 22775  0159AE                     l2310:
 22776                           
 22777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 22778                           ;stkvar	_w @ sp[(-18)+14]
 22779  0159AE  0EFC               	movlw	-4
 22780  0159B0  0060  F0EB  FFE3   	movff	_width,plusw1
 22781  0159B6  0EFD               	movlw	-3
 22782  0159B8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22783                           
 22784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 22785                           ;stkvar	_s @ sp[(-18)+12]
 22786  0159BE  0EFA               	movlw	-6
 22787  0159C0  006F FF8C  F001    	movff	plusw1,btemp
 22788  0159C6  0EFB               	movlw	-5
 22789  0159C8  50E3               	movf	plusw1,w,c
 22790  0159CA  1001               	iorwf	btemp^0,w,c
 22791  0159CC  A4D8               	btfss	status,2,c
 22792  0159CE  D002               	goto	u11620
 22793  0159D0  A43E               	btfss	_flags^0,2,c
 22794  0159D2  D00A               	goto	l12748
 22795  0159D4                     u11620:
 22796                           
 22797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 22798                           ;stkvar	_w @ sp[(-18)+14]
 22799  0159D4  50E1               	movf	fsr1l,w,c
 22800  0159D6  0FFC               	addlw	-4
 22801  0159D8  6ED9               	movwf	fsr2l,c
 22802  0159DA  50E2               	movf	fsr1h,w,c
 22803  0159DC  6EDA               	movwf	fsr2h,c
 22804  0159DE  0EFF               	movlw	255
 22805  0159E0  22DA               	addwfc	fsr2h,f,c
 22806  0159E2  06DE               	decf	postinc2,f,c
 22807  0159E4  0E00               	movlw	0
 22808  0159E6  5ADD               	subwfb	postdec2,f,c
 22809  0159E8                     l12748:
 22810                           
 22811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 22812  0159E8  0E4F               	movlw	79
 22813  0159EA  6E0B               	movwf	(btemp+10)^0,c
 22814  0159EC  0E00               	movlw	0
 22815  0159EE  6E0C               	movwf	(btemp+11)^0,c
 22816                           
 22817                           ;stkvar	_i @ sp[(-18)+10]
 22818  0159F0  0EF8               	movlw	-8
 22819  0159F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22820  0159F8  0EF9               	movlw	-7
 22821  0159FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 22822                           
 22823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 22824  015A00  0102               	movlb	2	; () banked
 22825  015A02  6BE6               	clrf	(_dbuf+79)& (0+255),b
 22826                           
 22827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22828  015A04  D109               	goto	l12762
 22829  015A06                     l12752:
 22830                           
 22831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 22832                           ;stkvar	_i @ sp[(-18)+10]
 22833  015A06  50E1               	movf	fsr1l,w,c
 22834  015A08  0FF8               	addlw	-8
 22835  015A0A  6ED9               	movwf	fsr2l,c
 22836  015A0C  50E2               	movf	fsr1h,w,c
 22837  015A0E  6EDA               	movwf	fsr2h,c
 22838  015A10  0EFF               	movlw	255
 22839  015A12  22DA               	addwfc	fsr2h,f,c
 22840  015A14  06DE               	decf	postinc2,f,c
 22841  015A16  0E00               	movlw	0
 22842  015A18  5ADD               	subwfb	postdec2,f,c
 22843                           
 22844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 22845  015A1A  0E0A               	movlw	10
 22846  015A1C  6EE6               	movwf	postinc1,c
 22847  015A1E  0E00               	movlw	0
 22848  015A20  6EE6               	movwf	postinc1,c
 22849  015A22  0E00               	movlw	0
 22850  015A24  6EE6               	movwf	postinc1,c
 22851  015A26  0E00               	movlw	0
 22852  015A28  6EE6               	movwf	postinc1,c
 22853  015A2A  0E00               	movlw	0
 22854  015A2C  6EE6               	movwf	postinc1,c
 22855  015A2E  0E00               	movlw	0
 22856  015A30  6EE6               	movwf	postinc1,c
 22857  015A32  0E00               	movlw	0
 22858  015A34  6EE6               	movwf	postinc1,c
 22859  015A36  0E00               	movlw	0
 22860  015A38  6EE6               	movwf	postinc1,c
 22861                           
 22862                           ;stkvar	_n @ sp[(-26)+2]
 22863  015A3A  50E1               	movf	fsr1l,w,c
 22864  015A3C  0FE8               	addlw	-24
 22865  015A3E  6ED9               	movwf	fsr2l,c
 22866  015A40  50E2               	movf	fsr1h,w,c
 22867  015A42  6EDA               	movwf	fsr2h,c
 22868  015A44  0EFF               	movlw	255
 22869  015A46  22DA               	addwfc	fsr2h,f,c
 22870  015A48  006F FF7B FFE6     	movff	postinc2,postinc1
 22871  015A4E  006F FF7B FFE6     	movff	postinc2,postinc1
 22872  015A54  006F FF7B FFE6     	movff	postinc2,postinc1
 22873  015A5A  006F FF7B FFE6     	movff	postinc2,postinc1
 22874  015A60  006F FF7B FFE6     	movff	postinc2,postinc1
 22875  015A66  006F FF7B FFE6     	movff	postinc2,postinc1
 22876  015A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 22877  015A72  006F FF7B FFE6     	movff	postinc2,postinc1
 22878  015A78  EC37  F0C1         	call	___aomod	;wreg free
 22879  015A7C  52E5               	movf	postdec1,f,c
 22880  015A7E  006F FF9C  F018    	movff	indf1,btemp+23
 22881  015A84  52E5               	movf	postdec1,f,c
 22882  015A86  006F FF9C  F017    	movff	indf1,btemp+22
 22883  015A8C  52E5               	movf	postdec1,f,c
 22884  015A8E  006F FF9C  F016    	movff	indf1,btemp+21
 22885  015A94  52E5               	movf	postdec1,f,c
 22886  015A96  006F FF9C  F015    	movff	indf1,btemp+20
 22887  015A9C  52E5               	movf	postdec1,f,c
 22888  015A9E  006F FF9C  F014    	movff	indf1,btemp+19
 22889  015AA4  52E5               	movf	postdec1,f,c
 22890  015AA6  006F FF9C  F013    	movff	indf1,btemp+18
 22891  015AAC  52E5               	movf	postdec1,f,c
 22892  015AAE  006F FF9C  F012    	movff	indf1,btemp+17
 22893  015AB4  52E5               	movf	postdec1,f,c
 22894  015AB6  006F FF9C  F011    	movff	indf1,btemp+16
 22895  015ABC  0EF8               	movlw	248
 22896  015ABE  26E1               	addwf	fsr1l,f,c
 22897  015AC0  0EFF               	movlw	255
 22898  015AC2  22E2               	addwfc	fsr1h,f,c
 22899  015AC4  0060  F044  F00B   	movff	btemp+16,btemp+10
 22900  015ACA  0060  F048  F00C   	movff	btemp+17,btemp+11
 22901  015AD0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22902  015AD6  0060  F033  FFE6   	movff	btemp+11,postinc1
 22903  015ADC  ECF5  F0E0         	call	_abs	;wreg free
 22904  015AE0  0E30               	movlw	48
 22905  015AE2  2601               	addwf	btemp^0,f,c
 22906                           
 22907                           ;stkvar	_i @ sp[(-18)+10]
 22908  015AE4  0EF8               	movlw	-8
 22909  015AE6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22910  015AEC  0EF9               	movlw	-7
 22911  015AEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22912  015AF4  0E97               	movlw	low _dbuf
 22913  015AF6  240B               	addwf	(btemp+10)^0,w,c
 22914  015AF8  6ED9               	movwf	fsr2l,c
 22915  015AFA  0E02               	movlw	high _dbuf
 22916  015AFC  200C               	addwfc	(btemp+11)^0,w,c
 22917  015AFE  6EDA               	movwf	fsr2h,c
 22918  015B00  0060  F007  FFDF   	movff	btemp,indf2
 22919                           
 22920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 22921                           ;stkvar	_p @ sp[(-18)+16]
 22922  015B06  50E1               	movf	fsr1l,w,c
 22923  015B08  0FFE               	addlw	-2
 22924  015B0A  6ED9               	movwf	fsr2l,c
 22925  015B0C  50E2               	movf	fsr1h,w,c
 22926  015B0E  6EDA               	movwf	fsr2h,c
 22927  015B10  0EFF               	movlw	255
 22928  015B12  22DA               	addwfc	fsr2h,f,c
 22929  015B14  06DE               	decf	postinc2,f,c
 22930  015B16  0E00               	movlw	0
 22931  015B18  5ADD               	subwfb	postdec2,f,c
 22932                           
 22933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 22934                           ;stkvar	_w @ sp[(-18)+14]
 22935  015B1A  50E1               	movf	fsr1l,w,c
 22936  015B1C  0FFC               	addlw	-4
 22937  015B1E  6ED9               	movwf	fsr2l,c
 22938  015B20  50E2               	movf	fsr1h,w,c
 22939  015B22  6EDA               	movwf	fsr2h,c
 22940  015B24  0EFF               	movlw	255
 22941  015B26  22DA               	addwfc	fsr2h,f,c
 22942  015B28  06DE               	decf	postinc2,f,c
 22943  015B2A  0E00               	movlw	0
 22944  015B2C  5ADD               	subwfb	postdec2,f,c
 22945                           
 22946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 22947  015B2E  0E0A               	movlw	10
 22948  015B30  6EE6               	movwf	postinc1,c
 22949  015B32  0E00               	movlw	0
 22950  015B34  6EE6               	movwf	postinc1,c
 22951  015B36  0E00               	movlw	0
 22952  015B38  6EE6               	movwf	postinc1,c
 22953  015B3A  0E00               	movlw	0
 22954  015B3C  6EE6               	movwf	postinc1,c
 22955  015B3E  0E00               	movlw	0
 22956  015B40  6EE6               	movwf	postinc1,c
 22957  015B42  0E00               	movlw	0
 22958  015B44  6EE6               	movwf	postinc1,c
 22959  015B46  0E00               	movlw	0
 22960  015B48  6EE6               	movwf	postinc1,c
 22961  015B4A  0E00               	movlw	0
 22962  015B4C  6EE6               	movwf	postinc1,c
 22963                           
 22964                           ;stkvar	_n @ sp[(-26)+2]
 22965  015B4E  50E1               	movf	fsr1l,w,c
 22966  015B50  0FE8               	addlw	-24
 22967  015B52  6ED9               	movwf	fsr2l,c
 22968  015B54  50E2               	movf	fsr1h,w,c
 22969  015B56  6EDA               	movwf	fsr2h,c
 22970  015B58  0EFF               	movlw	255
 22971  015B5A  22DA               	addwfc	fsr2h,f,c
 22972  015B5C  006F FF7B FFE6     	movff	postinc2,postinc1
 22973  015B62  006F FF7B FFE6     	movff	postinc2,postinc1
 22974  015B68  006F FF7B FFE6     	movff	postinc2,postinc1
 22975  015B6E  006F FF7B FFE6     	movff	postinc2,postinc1
 22976  015B74  006F FF7B FFE6     	movff	postinc2,postinc1
 22977  015B7A  006F FF7B FFE6     	movff	postinc2,postinc1
 22978  015B80  006F FF7B FFE6     	movff	postinc2,postinc1
 22979  015B86  006F FF7B FFE6     	movff	postinc2,postinc1
 22980  015B8C  EC9A  F0BD         	call	___aodiv	;wreg free
 22981  015B90  52E5               	movf	postdec1,f,c
 22982  015B92  006F FF9C  F018    	movff	indf1,btemp+23
 22983  015B98  52E5               	movf	postdec1,f,c
 22984  015B9A  006F FF9C  F017    	movff	indf1,btemp+22
 22985  015BA0  52E5               	movf	postdec1,f,c
 22986  015BA2  006F FF9C  F016    	movff	indf1,btemp+21
 22987  015BA8  52E5               	movf	postdec1,f,c
 22988  015BAA  006F FF9C  F015    	movff	indf1,btemp+20
 22989  015BB0  52E5               	movf	postdec1,f,c
 22990  015BB2  006F FF9C  F014    	movff	indf1,btemp+19
 22991  015BB8  52E5               	movf	postdec1,f,c
 22992  015BBA  006F FF9C  F013    	movff	indf1,btemp+18
 22993  015BC0  52E5               	movf	postdec1,f,c
 22994  015BC2  006F FF9C  F012    	movff	indf1,btemp+17
 22995  015BC8  52E5               	movf	postdec1,f,c
 22996  015BCA  006F FF9C  F011    	movff	indf1,btemp+16
 22997  015BD0  0EF8               	movlw	248
 22998  015BD2  26E1               	addwf	fsr1l,f,c
 22999  015BD4  0EFF               	movlw	255
 23000  015BD6  22E2               	addwfc	fsr1h,f,c
 23001                           
 23002                           ;stkvar	_n @ sp[(-18)+2]
 23003  015BD8  0EF0               	movlw	-16
 23004  015BDA  0060  F047  FFE3   	movff	btemp+16,plusw1
 23005  015BE0  0EF1               	movlw	-15
 23006  015BE2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 23007  015BE8  0EF2               	movlw	-14
 23008  015BEA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 23009  015BF0  0EF3               	movlw	-13
 23010  015BF2  0060  F053  FFE3   	movff	btemp+19,plusw1
 23011  015BF8  0EF4               	movlw	-12
 23012  015BFA  0060  F057  FFE3   	movff	btemp+20,plusw1
 23013  015C00  0EF5               	movlw	-11
 23014  015C02  0060  F05B  FFE3   	movff	btemp+21,plusw1
 23015  015C08  0EF6               	movlw	-10
 23016  015C0A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 23017  015C10  0EF7               	movlw	-9
 23018  015C12  0060  F063  FFE3   	movff	btemp+23,plusw1
 23019  015C18                     l12762:
 23020                           
 23021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23022                           ;stkvar	_i @ sp[(-18)+10]
 23023  015C18  0EF9               	movlw	-7
 23024  015C1A  BEE3               	btfsc	plusw1,7,c
 23025  015C1C  D036               	goto	u11670
 23026  015C1E  0EF9               	movlw	-7
 23027  015C20  50E3               	movf	plusw1,w,c
 23028  015C22  E104               	bnz	u11630
 23029  015C24  0EF8               	movlw	-8
 23030  015C26  04E3               	decf	plusw1,w,c
 23031  015C28  A0D8               	btfss	status,0,c
 23032  015C2A  D02F               	goto	u11670
 23033  015C2C                     u11630:
 23034                           
 23035                           ;stkvar	_n @ sp[(-18)+2]
 23036  015C2C  0EF0               	movlw	-16
 23037  015C2E  50E3               	movf	plusw1,w,c
 23038  015C30  E115               	bnz	u11641
 23039  015C32  0EF1               	movlw	-15
 23040  015C34  50E3               	movf	plusw1,w,c
 23041  015C36  E112               	bnz	u11641
 23042  015C38  0EF2               	movlw	-14
 23043  015C3A  50E3               	movf	plusw1,w,c
 23044  015C3C  E10F               	bnz	u11641
 23045  015C3E  0EF3               	movlw	-13
 23046  015C40  50E3               	movf	plusw1,w,c
 23047  015C42  E10C               	bnz	u11641
 23048  015C44  0EF4               	movlw	-12
 23049  015C46  50E3               	movf	plusw1,w,c
 23050  015C48  E109               	bnz	u11641
 23051  015C4A  0EF5               	movlw	-11
 23052  015C4C  50E3               	movf	plusw1,w,c
 23053  015C4E  E106               	bnz	u11641
 23054  015C50  0EF6               	movlw	-10
 23055  015C52  50E3               	movf	plusw1,w,c
 23056  015C54  E103               	bnz	u11641
 23057  015C56  0EF7               	movlw	-9
 23058  015C58  50E3               	movf	plusw1,w,c
 23059  015C5A  A4D8               	btfss	status,2,c
 23060  015C5C                     u11641:
 23061  015C5C  D6D4               	goto	l12752
 23062                           
 23063                           ;stkvar	_p @ sp[(-18)+16]
 23064  015C5E  0EFF               	movlw	-1
 23065  015C60  BEE3               	btfsc	plusw1,7,c
 23066  015C62  D007               	goto	u11650
 23067  015C64  0EFF               	movlw	-1
 23068  015C66  50E3               	movf	plusw1,w,c
 23069  015C68  E103               	bnz	u11651
 23070  015C6A  0EFE               	movlw	-2
 23071  015C6C  04E3               	decf	plusw1,w,c
 23072  015C6E  B0D8               	btfsc	status,0,c
 23073  015C70                     u11651:
 23074  015C70  D6CA               	goto	l12752
 23075  015C72                     u11650:
 23076                           
 23077                           ;stkvar	_w @ sp[(-18)+14]
 23078  015C72  0EFD               	movlw	-3
 23079  015C74  BEE3               	btfsc	plusw1,7,c
 23080  015C76  D009               	goto	u11670
 23081  015C78  0EFD               	movlw	-3
 23082  015C7A  50E3               	movf	plusw1,w,c
 23083  015C7C  E104               	bnz	u11660
 23084  015C7E  0EFC               	movlw	-4
 23085  015C80  04E3               	decf	plusw1,w,c
 23086  015C82  A0D8               	btfss	status,0,c
 23087  015C84  D002               	goto	u11670
 23088  015C86                     u11660:
 23089  015C86  B23E               	btfsc	_flags^0,1,c
 23090  015C88  D6BE               	goto	l12752
 23091  015C8A                     u11670:
 23092                           
 23093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 23094                           ;stkvar	_s @ sp[(-18)+12]
 23095  015C8A  0EFA               	movlw	-6
 23096  015C8C  006F FF8C  F001    	movff	plusw1,btemp
 23097  015C92  0EFB               	movlw	-5
 23098  015C94  50E3               	movf	plusw1,w,c
 23099  015C96  1001               	iorwf	btemp^0,w,c
 23100  015C98  A4D8               	btfss	status,2,c
 23101  015C9A  D002               	goto	u11690
 23102  015C9C  A43E               	btfss	_flags^0,2,c
 23103  015C9E  D033               	goto	l12786
 23104  015CA0                     u11690:
 23105                           
 23106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 23107                           ;stkvar	_i @ sp[(-18)+10]
 23108  015CA0  50E1               	movf	fsr1l,w,c
 23109  015CA2  0FF8               	addlw	-8
 23110  015CA4  6ED9               	movwf	fsr2l,c
 23111  015CA6  50E2               	movf	fsr1h,w,c
 23112  015CA8  6EDA               	movwf	fsr2h,c
 23113  015CAA  0EFF               	movlw	255
 23114  015CAC  22DA               	addwfc	fsr2h,f,c
 23115  015CAE  06DE               	decf	postinc2,f,c
 23116  015CB0  0E00               	movlw	0
 23117  015CB2  5ADD               	subwfb	postdec2,f,c
 23118                           
 23119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 23120                           ;stkvar	_s @ sp[(-18)+12]
 23121  015CB4  0EFA               	movlw	-6
 23122  015CB6  006F FF8C  F001    	movff	plusw1,btemp
 23123  015CBC  0EFB               	movlw	-5
 23124  015CBE  50E3               	movf	plusw1,w,c
 23125  015CC0  1001               	iorwf	btemp^0,w,c
 23126  015CC2  A4D8               	btfss	status,2,c
 23127  015CC4  D002               	goto	l12782
 23128  015CC6  0E2B               	movlw	43
 23129  015CC8  D001               	goto	L28
 23130  015CCA                     l12782:
 23131  015CCA  0E2D               	movlw	45
 23132  015CCC                     L28:
 23133  015CCC  6E0B               	movwf	(btemp+10)^0,c
 23134  015CCE  0E00               	movlw	0
 23135  015CD0  6E0C               	movwf	(btemp+11)^0,c
 23136                           
 23137                           ;stkvar	_dtoa$5961 @ sp[(-18)+0]
 23138  015CD2  0EEE               	movlw	-18
 23139  015CD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23140  015CDA  0EEF               	movlw	-17
 23141  015CDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23142                           
 23143                           ;stkvar	_dtoa$5961 @ sp[(-18)+0]
 23144                           ;stkvar	_i @ sp[(-18)+10]
 23145  015CE2  0EF8               	movlw	-8
 23146  015CE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23147  015CEA  0EF9               	movlw	-7
 23148  015CEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23149  015CF2  0E97               	movlw	low _dbuf
 23150  015CF4  240B               	addwf	(btemp+10)^0,w,c
 23151  015CF6  6ED9               	movwf	fsr2l,c
 23152  015CF8  0E02               	movlw	high _dbuf
 23153  015CFA  200C               	addwfc	(btemp+11)^0,w,c
 23154  015CFC  6EDA               	movwf	fsr2h,c
 23155  015CFE  0EEE               	movlw	-18
 23156  015D00  006F FF8F FFDF     	movff	plusw1,indf2
 23157  015D06                     l12786:
 23158                           
 23159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 23160                           ;stkvar	_w @ sp[(-18)+14]
 23161  015D06  0EFC               	movlw	-4
 23162  015D08  006F FF8F FFE6     	movff	plusw1,postinc1
 23163  015D0E  006F FF8F FFE6     	movff	plusw1,postinc1
 23164                           
 23165                           ;stkvar	_i @ sp[(-20)+10]
 23166  015D14  0E97               	movlw	low _dbuf
 23167  015D16  6E0B               	movwf	(btemp+10)^0,c
 23168  015D18  0E02               	movlw	high _dbuf
 23169  015D1A  6E0C               	movwf	(btemp+11)^0,c
 23170  015D1C  0EF6               	movlw	-10
 23171  015D1E  50E3               	movf	plusw1,w,c
 23172  015D20  260B               	addwf	(btemp+10)^0,f,c
 23173  015D22  0EF7               	movlw	-9
 23174  015D24  50E3               	movf	plusw1,w,c
 23175  015D26  220C               	addwfc	(btemp+11)^0,f,c
 23176  015D28  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23177  015D2E  0060  F033  FFE6   	movff	btemp+11,postinc1
 23178                           
 23179                           ;stkvar	_fp @ sp[(-22)+-2]
 23180  015D34  0EE8               	movlw	-24
 23181  015D36  006F FF8F FFE6     	movff	plusw1,postinc1
 23182  015D3C  006F FF8F FFE6     	movff	plusw1,postinc1
 23183  015D42  EC5C  F0D1         	call	_pad	;wreg free
 23184                           
 23185                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 23186  015D46  0EE4               	movlw	228
 23187  015D48  26E1               	addwf	fsr1l,f,c
 23188  015D4A  0EFF               	movlw	255
 23189  015D4C  22E2               	addwfc	fsr1h,f,c
 23190  015D4E  0012               	return		;funcret
 23191  015D50                     __end_of_dtoa:
 23192                           	opt callstack 0
 23193                           
 23194 ;; *************** function _abs *****************
 23195 ;; Defined at:
 23196 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 23197 ;; Parameters:    Size  Location     Type
 23198 ;;  a               2  [STACK] int 
 23199 ;; Auto vars:     Size  Location     Type
 23200 ;;		None
 23201 ;; Return value:  Size  Location     Type
 23202 ;;                  2  [STACK] int 
 23203 ;; Registers used:
 23204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 23205 ;; Tracked objects:
 23206 ;;		On entry : 0/2
 23207 ;;		On exit  : 0/0
 23208 ;;		Unchanged: 0/0
 23209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23214 ;;Total ram usage:        0 bytes
 23215 ;; Hardware stack levels used:    1
 23216 ;; Hardware stack levels required when called:   15
 23217 ;; This function calls:
 23218 ;;		Nothing
 23219 ;; This function is called by:
 23220 ;;		_dtoa
 23221 ;; This function uses a reentrant model
 23222 ;;
 23223                           
 23224                           	psect	text82
 23225  01C1EA                     __ptext82:
 23226                           	opt callstack 0
 23227  01C1EA                     _abs:
 23228                           	opt callstack 0
 23229                           
 23230                           ;stkvar	_a @ sp[(0)+-2]
 23231                           
 23232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23233                           ;incstack = 0
 23234 ;; hardware stack exceeded
 23235  01C1EA  0EFF               	movlw	-1
 23236  01C1EC  BEE3               	btfsc	plusw1,7,c
 23237  01C1EE  D007               	goto	u6310
 23238  01C1F0  0EFF               	movlw	-1
 23239  01C1F2  50E3               	movf	plusw1,w,c
 23240  01C1F4  E112               	bnz	l8478
 23241  01C1F6  0EFE               	movlw	-2
 23242  01C1F8  04E3               	decf	plusw1,w,c
 23243  01C1FA  B0D8               	btfsc	status,0,c
 23244  01C1FC  D00E               	goto	l8478
 23245  01C1FE                     u6310:
 23246                           
 23247                           ;stkvar	_a @ sp[(0)+-2]
 23248  01C1FE  0EFE               	movlw	-2
 23249  01C200  006F FF8C  F001    	movff	plusw1,btemp
 23250  01C206  1E01               	comf	btemp^0,f,c
 23251  01C208  0EFF               	movlw	-1
 23252  01C20A  006F FF8C  F002    	movff	plusw1,btemp+1
 23253  01C210  1E02               	comf	(btemp+1)^0,f,c
 23254  01C212  2A01               	incf	btemp^0,f,c
 23255  01C214  B4D8               	btfsc	status,2,c
 23256  01C216  2A02               	incf	(btemp+1)^0,f,c
 23257  01C218  D008               	goto	l3236
 23258  01C21A                     l8478:
 23259                           
 23260                           ;stkvar	_a @ sp[(0)+-2]
 23261  01C21A  0EFE               	movlw	-2
 23262  01C21C  006F FF8C  F001    	movff	plusw1,btemp
 23263  01C222  0EFF               	movlw	-1
 23264  01C224  006F FF8C  F002    	movff	plusw1,btemp+1
 23265  01C22A                     l3236:
 23266                           
 23267                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 23268  01C22A  52E5               	movf	postdec1,f,c
 23269  01C22C  52E5               	movf	postdec1,f,c
 23270  01C22E  0012               	return		;funcret
 23271  01C230                     __end_of_abs:
 23272                           	opt callstack 0
 23273                           
 23274 ;; *************** function ___aomod *****************
 23275 ;; Defined at:
 23276 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 23277 ;; Parameters:    Size  Location     Type
 23278 ;;  dividend        8  [STACK] long long 
 23279 ;;  divisor         8  [STACK] long long 
 23280 ;; Auto vars:     Size  Location     Type
 23281 ;;  sign            1  [STACK] unsigned char 
 23282 ;;  counter         1  [STACK] unsigned char 
 23283 ;; Return value:  Size  Location     Type
 23284 ;;                  8  [STACK] long long 
 23285 ;; Registers used:
 23286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23287 ;; Tracked objects:
 23288 ;;		On entry : 0/2
 23289 ;;		On exit  : 0/0
 23290 ;;		Unchanged: 0/0
 23291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23296 ;;Total ram usage:        0 bytes
 23297 ;; Hardware stack levels used:    1
 23298 ;; Hardware stack levels required when called:   15
 23299 ;; This function calls:
 23300 ;;		Nothing
 23301 ;; This function is called by:
 23302 ;;		_dtoa
 23303 ;; This function uses a reentrant model
 23304 ;;
 23305                           
 23306                           	psect	text83
 23307  01826E                     __ptext83:
 23308                           	opt callstack 0
 23309  01826E                     ___aomod:
 23310                           	opt callstack 0
 23311                           
 23312                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 23313  01826E  52E6               	movf	postinc1,f,c
 23314  018270  52E6               	movf	postinc1,f,c
 23315                           
 23316                           ;stkvar	_sign @ sp[(-2)+0]
 23317                           
 23318                           ;incstack = 0
 23319 ;; hardware stack exceeded
 23320  018272  0EFE               	movlw	-2
 23321  018274  6AE3               	clrf	plusw1,c
 23322                           
 23323                           ;stkvar	_dividend @ sp[(-2)+-8]
 23324  018276  0EFD               	movlw	-3
 23325  018278  AEE3               	btfss	plusw1,7,c
 23326  01827A  D028               	goto	l8636
 23327                           
 23328                           ;stkvar	_dividend @ sp[(-2)+-8]
 23329                           ;stkvar	_dividend @ sp[(-2)+-8]
 23330  01827C  0EF6               	movlw	-10
 23331  01827E  6CE3               	negf	plusw1,c
 23332  018280  0EF7               	movlw	-9
 23333  018282  1EE3               	comf	plusw1,f,c
 23334  018284  0EF8               	movlw	-8
 23335  018286  1EE3               	comf	plusw1,f,c
 23336  018288  0EF9               	movlw	-7
 23337  01828A  1EE3               	comf	plusw1,f,c
 23338  01828C  0EFA               	movlw	-6
 23339  01828E  1EE3               	comf	plusw1,f,c
 23340  018290  0EFB               	movlw	-5
 23341  018292  1EE3               	comf	plusw1,f,c
 23342  018294  0EFC               	movlw	-4
 23343  018296  1EE3               	comf	plusw1,f,c
 23344  018298  0EFD               	movlw	-3
 23345  01829A  1EE3               	comf	plusw1,f,c
 23346  01829C  E314               	bnc	u6740
 23347  01829E  0EF7               	movlw	-9
 23348  0182A0  2AE3               	incf	plusw1,f,c
 23349  0182A2  E311               	bnc	u6740
 23350  0182A4  0EF8               	movlw	-8
 23351  0182A6  2AE3               	incf	plusw1,f,c
 23352  0182A8  E30E               	bnc	u6740
 23353  0182AA  0EF9               	movlw	-7
 23354  0182AC  2AE3               	incf	plusw1,f,c
 23355  0182AE  E30B               	bnc	u6740
 23356  0182B0  0EFA               	movlw	-6
 23357  0182B2  2AE3               	incf	plusw1,f,c
 23358  0182B4  E308               	bnc	u6740
 23359  0182B6  0EFB               	movlw	-5
 23360  0182B8  2AE3               	incf	plusw1,f,c
 23361  0182BA  E305               	bnc	u6740
 23362  0182BC  0EFC               	movlw	-4
 23363  0182BE  2AE3               	incf	plusw1,f,c
 23364  0182C0  E302               	bnc	u6740
 23365  0182C2  0EFD               	movlw	-3
 23366  0182C4  2AE3               	incf	plusw1,f,c
 23367  0182C6                     u6740:
 23368                           
 23369                           ;stkvar	_sign @ sp[(-2)+0]
 23370  0182C6  0EFE               	movlw	-2
 23371  0182C8  6AE3               	clrf	plusw1,c
 23372  0182CA  2AE3               	incf	plusw1,f,c
 23373  0182CC                     l8636:
 23374                           
 23375                           ;stkvar	_divisor @ sp[(-2)+-16]
 23376  0182CC  0EF5               	movlw	-11
 23377  0182CE  AEE3               	btfss	plusw1,7,c
 23378  0182D0  D025               	goto	u6760
 23379                           
 23380                           ;stkvar	_divisor @ sp[(-2)+-16]
 23381                           ;stkvar	_divisor @ sp[(-2)+-16]
 23382  0182D2  0EEE               	movlw	-18
 23383  0182D4  6CE3               	negf	plusw1,c
 23384  0182D6  0EEF               	movlw	-17
 23385  0182D8  1EE3               	comf	plusw1,f,c
 23386  0182DA  0EF0               	movlw	-16
 23387  0182DC  1EE3               	comf	plusw1,f,c
 23388  0182DE  0EF1               	movlw	-15
 23389  0182E0  1EE3               	comf	plusw1,f,c
 23390  0182E2  0EF2               	movlw	-14
 23391  0182E4  1EE3               	comf	plusw1,f,c
 23392  0182E6  0EF3               	movlw	-13
 23393  0182E8  1EE3               	comf	plusw1,f,c
 23394  0182EA  0EF4               	movlw	-12
 23395  0182EC  1EE3               	comf	plusw1,f,c
 23396  0182EE  0EF5               	movlw	-11
 23397  0182F0  1EE3               	comf	plusw1,f,c
 23398  0182F2  E314               	bnc	u6760
 23399  0182F4  0EEF               	movlw	-17
 23400  0182F6  2AE3               	incf	plusw1,f,c
 23401  0182F8  E311               	bnc	u6760
 23402  0182FA  0EF0               	movlw	-16
 23403  0182FC  2AE3               	incf	plusw1,f,c
 23404  0182FE  E30E               	bnc	u6760
 23405  018300  0EF1               	movlw	-15
 23406  018302  2AE3               	incf	plusw1,f,c
 23407  018304  E30B               	bnc	u6760
 23408  018306  0EF2               	movlw	-14
 23409  018308  2AE3               	incf	plusw1,f,c
 23410  01830A  E308               	bnc	u6760
 23411  01830C  0EF3               	movlw	-13
 23412  01830E  2AE3               	incf	plusw1,f,c
 23413  018310  E305               	bnc	u6760
 23414  018312  0EF4               	movlw	-12
 23415  018314  2AE3               	incf	plusw1,f,c
 23416  018316  E302               	bnc	u6760
 23417  018318  0EF5               	movlw	-11
 23418  01831A  2AE3               	incf	plusw1,f,c
 23419  01831C                     u6760:
 23420                           
 23421                           ;stkvar	_divisor @ sp[(-2)+-16]
 23422  01831C  0EEE               	movlw	-18
 23423  01831E  50E3               	movf	plusw1,w,c
 23424  018320  E116               	bnz	u6770
 23425  018322  0EEF               	movlw	-17
 23426  018324  50E3               	movf	plusw1,w,c
 23427  018326  E113               	bnz	u6770
 23428  018328  0EF0               	movlw	-16
 23429  01832A  50E3               	movf	plusw1,w,c
 23430  01832C  E110               	bnz	u6770
 23431  01832E  0EF1               	movlw	-15
 23432  018330  50E3               	movf	plusw1,w,c
 23433  018332  E10D               	bnz	u6770
 23434  018334  0EF2               	movlw	-14
 23435  018336  50E3               	movf	plusw1,w,c
 23436  018338  E10A               	bnz	u6770
 23437  01833A  0EF3               	movlw	-13
 23438  01833C  50E3               	movf	plusw1,w,c
 23439  01833E  E107               	bnz	u6770
 23440  018340  0EF4               	movlw	-12
 23441  018342  50E3               	movf	plusw1,w,c
 23442  018344  E104               	bnz	u6770
 23443  018346  0EF5               	movlw	-11
 23444  018348  50E3               	movf	plusw1,w,c
 23445  01834A  B4D8               	btfsc	status,2,c
 23446  01834C  D075               	goto	u6800
 23447  01834E                     u6770:
 23448                           
 23449                           ;stkvar	_counter @ sp[(-2)+1]
 23450  01834E  0EFF               	movlw	-1
 23451  018350  6AE3               	clrf	plusw1,c
 23452  018352  D012               	goto	L29
 23453  018354                     l8644:
 23454                           
 23455                           ;stkvar	_divisor @ sp[(-2)+-16]
 23456  018354  90D8               	bcf	status,0,c
 23457  018356  0EEE               	movlw	-18
 23458  018358  36E3               	rlcf	plusw1,f,c
 23459  01835A  0EEF               	movlw	-17
 23460  01835C  36E3               	rlcf	plusw1,f,c
 23461  01835E  0EF0               	movlw	-16
 23462  018360  36E3               	rlcf	plusw1,f,c
 23463  018362  0EF1               	movlw	-15
 23464  018364  36E3               	rlcf	plusw1,f,c
 23465  018366  0EF2               	movlw	-14
 23466  018368  36E3               	rlcf	plusw1,f,c
 23467  01836A  0EF3               	movlw	-13
 23468  01836C  36E3               	rlcf	plusw1,f,c
 23469  01836E  0EF4               	movlw	-12
 23470  018370  36E3               	rlcf	plusw1,f,c
 23471  018372  0EF5               	movlw	-11
 23472  018374  36E3               	rlcf	plusw1,f,c
 23473                           
 23474                           ;stkvar	_counter @ sp[(-2)+1]
 23475  018376  0EFF               	movlw	-1
 23476  018378                     L29:
 23477  018378  2AE3               	incf	plusw1,f,c
 23478                           
 23479                           ;stkvar	_divisor @ sp[(-2)+-16]
 23480  01837A  0EF5               	movlw	-11
 23481  01837C  AEE3               	btfss	plusw1,7,c
 23482  01837E  D7EA               	goto	l8644
 23483  018380                     u6780:
 23484                           
 23485                           ;stkvar	_divisor @ sp[(-2)+-16]
 23486                           ;stkvar	_dividend @ sp[(-2)+-8]
 23487  018380  50E1               	movf	fsr1l,w,c
 23488  018382  0FF6               	addlw	-10
 23489  018384  6ED9               	movwf	fsr2l,c
 23490  018386  50E2               	movf	fsr1h,w,c
 23491  018388  6EDA               	movwf	fsr2h,c
 23492  01838A  0EFF               	movlw	255
 23493  01838C  22DA               	addwfc	fsr2h,f,c
 23494  01838E  0EEE               	movlw	-18
 23495  018390  50E3               	movf	plusw1,w,c
 23496  018392  5CDE               	subwf	postinc2,w,c
 23497  018394  0EEF               	movlw	-17
 23498  018396  50E3               	movf	plusw1,w,c
 23499  018398  58DE               	subwfb	postinc2,w,c
 23500  01839A  0EF0               	movlw	-16
 23501  01839C  50E3               	movf	plusw1,w,c
 23502  01839E  58DE               	subwfb	postinc2,w,c
 23503  0183A0  0EF1               	movlw	-15
 23504  0183A2  50E3               	movf	plusw1,w,c
 23505  0183A4  58DE               	subwfb	postinc2,w,c
 23506  0183A6  0EF2               	movlw	-14
 23507  0183A8  50E3               	movf	plusw1,w,c
 23508  0183AA  58DE               	subwfb	postinc2,w,c
 23509  0183AC  0EF3               	movlw	-13
 23510  0183AE  50E3               	movf	plusw1,w,c
 23511  0183B0  58DE               	subwfb	postinc2,w,c
 23512  0183B2  0EF4               	movlw	-12
 23513  0183B4  50E3               	movf	plusw1,w,c
 23514  0183B6  58DE               	subwfb	postinc2,w,c
 23515  0183B8  0EF5               	movlw	-11
 23516  0183BA  50E3               	movf	plusw1,w,c
 23517  0183BC  58DE               	subwfb	postinc2,w,c
 23518  0183BE  A0D8               	btfss	status,0,c
 23519  0183C0  D01F               	goto	l8652
 23520                           
 23521                           ;stkvar	_divisor @ sp[(-2)+-16]
 23522                           ;stkvar	_dividend @ sp[(-2)+-8]
 23523  0183C2  50E1               	movf	fsr1l,w,c
 23524  0183C4  0FF6               	addlw	-10
 23525  0183C6  6ED9               	movwf	fsr2l,c
 23526  0183C8  50E2               	movf	fsr1h,w,c
 23527  0183CA  6EDA               	movwf	fsr2h,c
 23528  0183CC  0EFF               	movlw	255
 23529  0183CE  22DA               	addwfc	fsr2h,f,c
 23530  0183D0  0EEE               	movlw	-18
 23531  0183D2  50E3               	movf	plusw1,w,c
 23532  0183D4  5EDE               	subwf	postinc2,f,c
 23533  0183D6  0EEF               	movlw	-17
 23534  0183D8  50E3               	movf	plusw1,w,c
 23535  0183DA  5ADE               	subwfb	postinc2,f,c
 23536  0183DC  0EF0               	movlw	-16
 23537  0183DE  50E3               	movf	plusw1,w,c
 23538  0183E0  5ADE               	subwfb	postinc2,f,c
 23539  0183E2  0EF1               	movlw	-15
 23540  0183E4  50E3               	movf	plusw1,w,c
 23541  0183E6  5ADE               	subwfb	postinc2,f,c
 23542  0183E8  0EF2               	movlw	-14
 23543  0183EA  50E3               	movf	plusw1,w,c
 23544  0183EC  5ADE               	subwfb	postinc2,f,c
 23545  0183EE  0EF3               	movlw	-13
 23546  0183F0  50E3               	movf	plusw1,w,c
 23547  0183F2  5ADE               	subwfb	postinc2,f,c
 23548  0183F4  0EF4               	movlw	-12
 23549  0183F6  50E3               	movf	plusw1,w,c
 23550  0183F8  5ADE               	subwfb	postinc2,f,c
 23551  0183FA  0EF5               	movlw	-11
 23552  0183FC  50E3               	movf	plusw1,w,c
 23553  0183FE  5ADE               	subwfb	postinc2,f,c
 23554  018400                     l8652:
 23555                           
 23556                           ;stkvar	_divisor @ sp[(-2)+-16]
 23557  018400  90D8               	bcf	status,0,c
 23558  018402  0EF5               	movlw	-11
 23559  018404  32E3               	rrcf	plusw1,f,c
 23560  018406  0EF4               	movlw	-12
 23561  018408  32E3               	rrcf	plusw1,f,c
 23562  01840A  0EF3               	movlw	-13
 23563  01840C  32E3               	rrcf	plusw1,f,c
 23564  01840E  0EF2               	movlw	-14
 23565  018410  32E3               	rrcf	plusw1,f,c
 23566  018412  0EF1               	movlw	-15
 23567  018414  32E3               	rrcf	plusw1,f,c
 23568  018416  0EF0               	movlw	-16
 23569  018418  32E3               	rrcf	plusw1,f,c
 23570  01841A  0EEF               	movlw	-17
 23571  01841C  32E3               	rrcf	plusw1,f,c
 23572  01841E  0EEE               	movlw	-18
 23573  018420  32E3               	rrcf	plusw1,f,c
 23574                           
 23575                           ;stkvar	_counter @ sp[(-2)+1]
 23576  018422  0EFF               	movlw	-1
 23577  018424  50E3               	movf	plusw1,w,c
 23578  018426  6E01               	movwf	btemp^0,c
 23579  018428  0E01               	movlw	1
 23580  01842A  5E01               	subwf	btemp^0,f,c
 23581  01842C  0EFF               	movlw	-1
 23582  01842E  0060  F007  FFE3   	movff	btemp,plusw1
 23583  018434  A4D8               	btfss	status,2,c
 23584  018436  D7A4               	goto	u6780
 23585  018438                     u6800:
 23586                           
 23587                           ;stkvar	_sign @ sp[(-2)+0]
 23588  018438  0EFE               	movlw	-2
 23589  01843A  50E3               	movf	plusw1,w,c
 23590  01843C  B4D8               	btfsc	status,2,c
 23591  01843E  D025               	goto	u6820
 23592                           
 23593                           ;stkvar	_dividend @ sp[(-2)+-8]
 23594                           ;stkvar	_dividend @ sp[(-2)+-8]
 23595  018440  0EF6               	movlw	-10
 23596  018442  6CE3               	negf	plusw1,c
 23597  018444  0EF7               	movlw	-9
 23598  018446  1EE3               	comf	plusw1,f,c
 23599  018448  0EF8               	movlw	-8
 23600  01844A  1EE3               	comf	plusw1,f,c
 23601  01844C  0EF9               	movlw	-7
 23602  01844E  1EE3               	comf	plusw1,f,c
 23603  018450  0EFA               	movlw	-6
 23604  018452  1EE3               	comf	plusw1,f,c
 23605  018454  0EFB               	movlw	-5
 23606  018456  1EE3               	comf	plusw1,f,c
 23607  018458  0EFC               	movlw	-4
 23608  01845A  1EE3               	comf	plusw1,f,c
 23609  01845C  0EFD               	movlw	-3
 23610  01845E  1EE3               	comf	plusw1,f,c
 23611  018460  E314               	bnc	u6820
 23612  018462  0EF7               	movlw	-9
 23613  018464  2AE3               	incf	plusw1,f,c
 23614  018466  E311               	bnc	u6820
 23615  018468  0EF8               	movlw	-8
 23616  01846A  2AE3               	incf	plusw1,f,c
 23617  01846C  E30E               	bnc	u6820
 23618  01846E  0EF9               	movlw	-7
 23619  018470  2AE3               	incf	plusw1,f,c
 23620  018472  E30B               	bnc	u6820
 23621  018474  0EFA               	movlw	-6
 23622  018476  2AE3               	incf	plusw1,f,c
 23623  018478  E308               	bnc	u6820
 23624  01847A  0EFB               	movlw	-5
 23625  01847C  2AE3               	incf	plusw1,f,c
 23626  01847E  E305               	bnc	u6820
 23627  018480  0EFC               	movlw	-4
 23628  018482  2AE3               	incf	plusw1,f,c
 23629  018484  E302               	bnc	u6820
 23630  018486  0EFD               	movlw	-3
 23631  018488  2AE3               	incf	plusw1,f,c
 23632  01848A                     u6820:
 23633                           
 23634                           ;stkvar	_dividend @ sp[(-2)+-8]
 23635  01848A  0EF6               	movlw	246
 23636  01848C  24E1               	addwf	fsr1l,w,c
 23637  01848E  6ED9               	movwf	fsr2l,c
 23638  018490  0EFF               	movlw	255
 23639  018492  20E2               	addwfc	fsr1h,w,c
 23640  018494  6EDA               	movwf	fsr2h,c
 23641                           
 23642                           ;stkvar	?___aomod @ sp[(-2)+-8]
 23643  018496  0E08               	movlw	8
 23644  018498  6E01               	movwf	btemp^0,c
 23645  01849A  0EF6               	movlw	-10
 23646  01849C                     us683999:
 23647  01849C  006F FF7B FFE3     	movff	postinc2,plusw1
 23648  0184A2  28E8               	incf	wreg,w,c
 23649  0184A4  2E01               	decfsz	btemp^0,f,c
 23650  0184A6  D7FA               	bra	us683999
 23651                           
 23652                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 23653  0184A8  52E5               	movf	postdec1,f,c
 23654  0184AA  52E5               	movf	postdec1,f,c
 23655  0184AC  0012               	return		;funcret
 23656  0184AE                     __end_of___aomod:
 23657                           	opt callstack 0
 23658                           
 23659 ;; *************** function ___aodiv *****************
 23660 ;; Defined at:
 23661 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 23662 ;; Parameters:    Size  Location     Type
 23663 ;;  dividend        8  [STACK] long long 
 23664 ;;  divisor         8  [STACK] long long 
 23665 ;; Auto vars:     Size  Location     Type
 23666 ;;  quotient        8  [STACK] long long 
 23667 ;;  sign            1  [STACK] unsigned char 
 23668 ;;  counter         1  [STACK] unsigned char 
 23669 ;; Return value:  Size  Location     Type
 23670 ;;                  8  [STACK] long long 
 23671 ;; Registers used:
 23672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23673 ;; Tracked objects:
 23674 ;;		On entry : 0/2
 23675 ;;		On exit  : 0/0
 23676 ;;		Unchanged: 0/0
 23677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23682 ;;Total ram usage:        0 bytes
 23683 ;; Hardware stack levels used:    1
 23684 ;; Hardware stack levels required when called:   15
 23685 ;; This function calls:
 23686 ;;		Nothing
 23687 ;; This function is called by:
 23688 ;;		_dtoa
 23689 ;; This function uses a reentrant model
 23690 ;;
 23691                           
 23692                           	psect	text84
 23693  017B34                     __ptext84:
 23694                           	opt callstack 0
 23695  017B34                     ___aodiv:
 23696                           	opt callstack 0
 23697                           
 23698                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 23699  017B34  0E0A               	movlw	10
 23700  017B36  26E1               	addwf	fsr1l,f,c
 23701  017B38  0E00               	movlw	0
 23702  017B3A  22E2               	addwfc	fsr1h,f,c
 23703                           
 23704                           ;stkvar	_sign @ sp[(-10)+8]
 23705                           
 23706                           ;incstack = 0
 23707 ;; hardware stack exceeded
 23708  017B3C  0EFE               	movlw	-2
 23709  017B3E  6AE3               	clrf	plusw1,c
 23710                           
 23711                           ;stkvar	_divisor @ sp[(-10)+-16]
 23712  017B40  0EED               	movlw	-19
 23713  017B42  AEE3               	btfss	plusw1,7,c
 23714  017B44  D028               	goto	l8592
 23715                           
 23716                           ;stkvar	_divisor @ sp[(-10)+-16]
 23717                           ;stkvar	_divisor @ sp[(-10)+-16]
 23718  017B46  0EE6               	movlw	-26
 23719  017B48  6CE3               	negf	plusw1,c
 23720  017B4A  0EE7               	movlw	-25
 23721  017B4C  1EE3               	comf	plusw1,f,c
 23722  017B4E  0EE8               	movlw	-24
 23723  017B50  1EE3               	comf	plusw1,f,c
 23724  017B52  0EE9               	movlw	-23
 23725  017B54  1EE3               	comf	plusw1,f,c
 23726  017B56  0EEA               	movlw	-22
 23727  017B58  1EE3               	comf	plusw1,f,c
 23728  017B5A  0EEB               	movlw	-21
 23729  017B5C  1EE3               	comf	plusw1,f,c
 23730  017B5E  0EEC               	movlw	-20
 23731  017B60  1EE3               	comf	plusw1,f,c
 23732  017B62  0EED               	movlw	-19
 23733  017B64  1EE3               	comf	plusw1,f,c
 23734  017B66  E314               	bnc	u6620
 23735  017B68  0EE7               	movlw	-25
 23736  017B6A  2AE3               	incf	plusw1,f,c
 23737  017B6C  E311               	bnc	u6620
 23738  017B6E  0EE8               	movlw	-24
 23739  017B70  2AE3               	incf	plusw1,f,c
 23740  017B72  E30E               	bnc	u6620
 23741  017B74  0EE9               	movlw	-23
 23742  017B76  2AE3               	incf	plusw1,f,c
 23743  017B78  E30B               	bnc	u6620
 23744  017B7A  0EEA               	movlw	-22
 23745  017B7C  2AE3               	incf	plusw1,f,c
 23746  017B7E  E308               	bnc	u6620
 23747  017B80  0EEB               	movlw	-21
 23748  017B82  2AE3               	incf	plusw1,f,c
 23749  017B84  E305               	bnc	u6620
 23750  017B86  0EEC               	movlw	-20
 23751  017B88  2AE3               	incf	plusw1,f,c
 23752  017B8A  E302               	bnc	u6620
 23753  017B8C  0EED               	movlw	-19
 23754  017B8E  2AE3               	incf	plusw1,f,c
 23755  017B90                     u6620:
 23756                           
 23757                           ;stkvar	_sign @ sp[(-10)+8]
 23758  017B90  0EFE               	movlw	-2
 23759  017B92  6AE3               	clrf	plusw1,c
 23760  017B94  2AE3               	incf	plusw1,f,c
 23761  017B96                     l8592:
 23762                           
 23763                           ;stkvar	_dividend @ sp[(-10)+-8]
 23764  017B96  0EF5               	movlw	-11
 23765  017B98  AEE3               	btfss	plusw1,7,c
 23766  017B9A  D027               	goto	l8598
 23767                           
 23768                           ;stkvar	_dividend @ sp[(-10)+-8]
 23769                           ;stkvar	_dividend @ sp[(-10)+-8]
 23770  017B9C  0EEE               	movlw	-18
 23771  017B9E  6CE3               	negf	plusw1,c
 23772  017BA0  0EEF               	movlw	-17
 23773  017BA2  1EE3               	comf	plusw1,f,c
 23774  017BA4  0EF0               	movlw	-16
 23775  017BA6  1EE3               	comf	plusw1,f,c
 23776  017BA8  0EF1               	movlw	-15
 23777  017BAA  1EE3               	comf	plusw1,f,c
 23778  017BAC  0EF2               	movlw	-14
 23779  017BAE  1EE3               	comf	plusw1,f,c
 23780  017BB0  0EF3               	movlw	-13
 23781  017BB2  1EE3               	comf	plusw1,f,c
 23782  017BB4  0EF4               	movlw	-12
 23783  017BB6  1EE3               	comf	plusw1,f,c
 23784  017BB8  0EF5               	movlw	-11
 23785  017BBA  1EE3               	comf	plusw1,f,c
 23786  017BBC  E314               	bnc	u6640
 23787  017BBE  0EEF               	movlw	-17
 23788  017BC0  2AE3               	incf	plusw1,f,c
 23789  017BC2  E311               	bnc	u6640
 23790  017BC4  0EF0               	movlw	-16
 23791  017BC6  2AE3               	incf	plusw1,f,c
 23792  017BC8  E30E               	bnc	u6640
 23793  017BCA  0EF1               	movlw	-15
 23794  017BCC  2AE3               	incf	plusw1,f,c
 23795  017BCE  E30B               	bnc	u6640
 23796  017BD0  0EF2               	movlw	-14
 23797  017BD2  2AE3               	incf	plusw1,f,c
 23798  017BD4  E308               	bnc	u6640
 23799  017BD6  0EF3               	movlw	-13
 23800  017BD8  2AE3               	incf	plusw1,f,c
 23801  017BDA  E305               	bnc	u6640
 23802  017BDC  0EF4               	movlw	-12
 23803  017BDE  2AE3               	incf	plusw1,f,c
 23804  017BE0  E302               	bnc	u6640
 23805  017BE2  0EF5               	movlw	-11
 23806  017BE4  2AE3               	incf	plusw1,f,c
 23807  017BE6                     u6640:
 23808                           
 23809                           ;stkvar	_sign @ sp[(-10)+8]
 23810  017BE6  0EFE               	movlw	-2
 23811  017BE8  70E3               	btg	plusw1,0,c
 23812  017BEA                     l8598:
 23813                           
 23814                           ;stkvar	_quotient @ sp[(-10)+0]
 23815  017BEA  0E07               	movlw	7
 23816  017BEC  6E01               	movwf	btemp^0,c
 23817  017BEE  0EF6               	movlw	-10
 23818  017BF0                     u6651:
 23819  017BF0  6AE3               	clrf	plusw1,c
 23820  017BF2  2AE8               	incf	wreg,f,c
 23821  017BF4  0601               	decf	btemp^0,f,c
 23822  017BF6  E2FC               	bc	u6651
 23823                           
 23824                           ;stkvar	_divisor @ sp[(-10)+-16]
 23825  017BF8  0EE6               	movlw	-26
 23826  017BFA  50E3               	movf	plusw1,w,c
 23827  017BFC  E116               	bnz	u6660
 23828  017BFE  0EE7               	movlw	-25
 23829  017C00  50E3               	movf	plusw1,w,c
 23830  017C02  E113               	bnz	u6660
 23831  017C04  0EE8               	movlw	-24
 23832  017C06  50E3               	movf	plusw1,w,c
 23833  017C08  E110               	bnz	u6660
 23834  017C0A  0EE9               	movlw	-23
 23835  017C0C  50E3               	movf	plusw1,w,c
 23836  017C0E  E10D               	bnz	u6660
 23837  017C10  0EEA               	movlw	-22
 23838  017C12  50E3               	movf	plusw1,w,c
 23839  017C14  E10A               	bnz	u6660
 23840  017C16  0EEB               	movlw	-21
 23841  017C18  50E3               	movf	plusw1,w,c
 23842  017C1A  E107               	bnz	u6660
 23843  017C1C  0EEC               	movlw	-20
 23844  017C1E  50E3               	movf	plusw1,w,c
 23845  017C20  E104               	bnz	u6660
 23846  017C22  0EED               	movlw	-19
 23847  017C24  50E3               	movf	plusw1,w,c
 23848  017C26  B4D8               	btfsc	status,2,c
 23849  017C28  D088               	goto	u6690
 23850  017C2A                     u6660:
 23851                           
 23852                           ;stkvar	_counter @ sp[(-10)+9]
 23853  017C2A  0EFF               	movlw	-1
 23854  017C2C  6AE3               	clrf	plusw1,c
 23855  017C2E  D012               	goto	L30
 23856  017C30                     l8604:
 23857                           
 23858                           ;stkvar	_divisor @ sp[(-10)+-16]
 23859  017C30  90D8               	bcf	status,0,c
 23860  017C32  0EE6               	movlw	-26
 23861  017C34  36E3               	rlcf	plusw1,f,c
 23862  017C36  0EE7               	movlw	-25
 23863  017C38  36E3               	rlcf	plusw1,f,c
 23864  017C3A  0EE8               	movlw	-24
 23865  017C3C  36E3               	rlcf	plusw1,f,c
 23866  017C3E  0EE9               	movlw	-23
 23867  017C40  36E3               	rlcf	plusw1,f,c
 23868  017C42  0EEA               	movlw	-22
 23869  017C44  36E3               	rlcf	plusw1,f,c
 23870  017C46  0EEB               	movlw	-21
 23871  017C48  36E3               	rlcf	plusw1,f,c
 23872  017C4A  0EEC               	movlw	-20
 23873  017C4C  36E3               	rlcf	plusw1,f,c
 23874  017C4E  0EED               	movlw	-19
 23875  017C50  36E3               	rlcf	plusw1,f,c
 23876                           
 23877                           ;stkvar	_counter @ sp[(-10)+9]
 23878  017C52  0EFF               	movlw	-1
 23879  017C54                     L30:
 23880  017C54  2AE3               	incf	plusw1,f,c
 23881                           
 23882                           ;stkvar	_divisor @ sp[(-10)+-16]
 23883  017C56  0EED               	movlw	-19
 23884  017C58  AEE3               	btfss	plusw1,7,c
 23885  017C5A  D7EA               	goto	l8604
 23886  017C5C                     u6670:
 23887                           
 23888                           ;stkvar	_quotient @ sp[(-10)+0]
 23889  017C5C  90D8               	bcf	status,0,c
 23890  017C5E  0EF6               	movlw	-10
 23891  017C60  36E3               	rlcf	plusw1,f,c
 23892  017C62  0EF7               	movlw	-9
 23893  017C64  36E3               	rlcf	plusw1,f,c
 23894  017C66  0EF8               	movlw	-8
 23895  017C68  36E3               	rlcf	plusw1,f,c
 23896  017C6A  0EF9               	movlw	-7
 23897  017C6C  36E3               	rlcf	plusw1,f,c
 23898  017C6E  0EFA               	movlw	-6
 23899  017C70  36E3               	rlcf	plusw1,f,c
 23900  017C72  0EFB               	movlw	-5
 23901  017C74  36E3               	rlcf	plusw1,f,c
 23902  017C76  0EFC               	movlw	-4
 23903  017C78  36E3               	rlcf	plusw1,f,c
 23904  017C7A  0EFD               	movlw	-3
 23905  017C7C  36E3               	rlcf	plusw1,f,c
 23906                           
 23907                           ;stkvar	_divisor @ sp[(-10)+-16]
 23908                           ;stkvar	_dividend @ sp[(-10)+-8]
 23909  017C7E  50E1               	movf	fsr1l,w,c
 23910  017C80  0FEE               	addlw	-18
 23911  017C82  6ED9               	movwf	fsr2l,c
 23912  017C84  50E2               	movf	fsr1h,w,c
 23913  017C86  6EDA               	movwf	fsr2h,c
 23914  017C88  0EFF               	movlw	255
 23915  017C8A  22DA               	addwfc	fsr2h,f,c
 23916  017C8C  0EE6               	movlw	-26
 23917  017C8E  50E3               	movf	plusw1,w,c
 23918  017C90  5CDE               	subwf	postinc2,w,c
 23919  017C92  0EE7               	movlw	-25
 23920  017C94  50E3               	movf	plusw1,w,c
 23921  017C96  58DE               	subwfb	postinc2,w,c
 23922  017C98  0EE8               	movlw	-24
 23923  017C9A  50E3               	movf	plusw1,w,c
 23924  017C9C  58DE               	subwfb	postinc2,w,c
 23925  017C9E  0EE9               	movlw	-23
 23926  017CA0  50E3               	movf	plusw1,w,c
 23927  017CA2  58DE               	subwfb	postinc2,w,c
 23928  017CA4  0EEA               	movlw	-22
 23929  017CA6  50E3               	movf	plusw1,w,c
 23930  017CA8  58DE               	subwfb	postinc2,w,c
 23931  017CAA  0EEB               	movlw	-21
 23932  017CAC  50E3               	movf	plusw1,w,c
 23933  017CAE  58DE               	subwfb	postinc2,w,c
 23934  017CB0  0EEC               	movlw	-20
 23935  017CB2  50E3               	movf	plusw1,w,c
 23936  017CB4  58DE               	subwfb	postinc2,w,c
 23937  017CB6  0EED               	movlw	-19
 23938  017CB8  50E3               	movf	plusw1,w,c
 23939  017CBA  58DE               	subwfb	postinc2,w,c
 23940  017CBC  A0D8               	btfss	status,0,c
 23941  017CBE  D021               	goto	l8616
 23942                           
 23943                           ;stkvar	_divisor @ sp[(-10)+-16]
 23944                           ;stkvar	_dividend @ sp[(-10)+-8]
 23945  017CC0  50E1               	movf	fsr1l,w,c
 23946  017CC2  0FEE               	addlw	-18
 23947  017CC4  6ED9               	movwf	fsr2l,c
 23948  017CC6  50E2               	movf	fsr1h,w,c
 23949  017CC8  6EDA               	movwf	fsr2h,c
 23950  017CCA  0EFF               	movlw	255
 23951  017CCC  22DA               	addwfc	fsr2h,f,c
 23952  017CCE  0EE6               	movlw	-26
 23953  017CD0  50E3               	movf	plusw1,w,c
 23954  017CD2  5EDE               	subwf	postinc2,f,c
 23955  017CD4  0EE7               	movlw	-25
 23956  017CD6  50E3               	movf	plusw1,w,c
 23957  017CD8  5ADE               	subwfb	postinc2,f,c
 23958  017CDA  0EE8               	movlw	-24
 23959  017CDC  50E3               	movf	plusw1,w,c
 23960  017CDE  5ADE               	subwfb	postinc2,f,c
 23961  017CE0  0EE9               	movlw	-23
 23962  017CE2  50E3               	movf	plusw1,w,c
 23963  017CE4  5ADE               	subwfb	postinc2,f,c
 23964  017CE6  0EEA               	movlw	-22
 23965  017CE8  50E3               	movf	plusw1,w,c
 23966  017CEA  5ADE               	subwfb	postinc2,f,c
 23967  017CEC  0EEB               	movlw	-21
 23968  017CEE  50E3               	movf	plusw1,w,c
 23969  017CF0  5ADE               	subwfb	postinc2,f,c
 23970  017CF2  0EEC               	movlw	-20
 23971  017CF4  50E3               	movf	plusw1,w,c
 23972  017CF6  5ADE               	subwfb	postinc2,f,c
 23973  017CF8  0EED               	movlw	-19
 23974  017CFA  50E3               	movf	plusw1,w,c
 23975  017CFC  5ADE               	subwfb	postinc2,f,c
 23976                           
 23977                           ;stkvar	_quotient @ sp[(-10)+0]
 23978  017CFE  0EF6               	movlw	-10
 23979  017D00  80E3               	bsf	plusw1,0,c
 23980  017D02                     l8616:
 23981                           
 23982                           ;stkvar	_divisor @ sp[(-10)+-16]
 23983  017D02  90D8               	bcf	status,0,c
 23984  017D04  0EED               	movlw	-19
 23985  017D06  32E3               	rrcf	plusw1,f,c
 23986  017D08  0EEC               	movlw	-20
 23987  017D0A  32E3               	rrcf	plusw1,f,c
 23988  017D0C  0EEB               	movlw	-21
 23989  017D0E  32E3               	rrcf	plusw1,f,c
 23990  017D10  0EEA               	movlw	-22
 23991  017D12  32E3               	rrcf	plusw1,f,c
 23992  017D14  0EE9               	movlw	-23
 23993  017D16  32E3               	rrcf	plusw1,f,c
 23994  017D18  0EE8               	movlw	-24
 23995  017D1A  32E3               	rrcf	plusw1,f,c
 23996  017D1C  0EE7               	movlw	-25
 23997  017D1E  32E3               	rrcf	plusw1,f,c
 23998  017D20  0EE6               	movlw	-26
 23999  017D22  32E3               	rrcf	plusw1,f,c
 24000                           
 24001                           ;stkvar	_counter @ sp[(-10)+9]
 24002  017D24  0EFF               	movlw	-1
 24003  017D26  50E3               	movf	plusw1,w,c
 24004  017D28  6E01               	movwf	btemp^0,c
 24005  017D2A  0E01               	movlw	1
 24006  017D2C  5E01               	subwf	btemp^0,f,c
 24007  017D2E  0EFF               	movlw	-1
 24008  017D30  0060  F007  FFE3   	movff	btemp,plusw1
 24009  017D36  A4D8               	btfss	status,2,c
 24010  017D38  D791               	goto	u6670
 24011  017D3A                     u6690:
 24012                           
 24013                           ;stkvar	_sign @ sp[(-10)+8]
 24014  017D3A  0EFE               	movlw	-2
 24015  017D3C  50E3               	movf	plusw1,w,c
 24016  017D3E  B4D8               	btfsc	status,2,c
 24017  017D40  D025               	goto	u6710
 24018                           
 24019                           ;stkvar	_quotient @ sp[(-10)+0]
 24020                           ;stkvar	_quotient @ sp[(-10)+0]
 24021  017D42  0EF6               	movlw	-10
 24022  017D44  6CE3               	negf	plusw1,c
 24023  017D46  0EF7               	movlw	-9
 24024  017D48  1EE3               	comf	plusw1,f,c
 24025  017D4A  0EF8               	movlw	-8
 24026  017D4C  1EE3               	comf	plusw1,f,c
 24027  017D4E  0EF9               	movlw	-7
 24028  017D50  1EE3               	comf	plusw1,f,c
 24029  017D52  0EFA               	movlw	-6
 24030  017D54  1EE3               	comf	plusw1,f,c
 24031  017D56  0EFB               	movlw	-5
 24032  017D58  1EE3               	comf	plusw1,f,c
 24033  017D5A  0EFC               	movlw	-4
 24034  017D5C  1EE3               	comf	plusw1,f,c
 24035  017D5E  0EFD               	movlw	-3
 24036  017D60  1EE3               	comf	plusw1,f,c
 24037  017D62  E314               	bnc	u6710
 24038  017D64  0EF7               	movlw	-9
 24039  017D66  2AE3               	incf	plusw1,f,c
 24040  017D68  E311               	bnc	u6710
 24041  017D6A  0EF8               	movlw	-8
 24042  017D6C  2AE3               	incf	plusw1,f,c
 24043  017D6E  E30E               	bnc	u6710
 24044  017D70  0EF9               	movlw	-7
 24045  017D72  2AE3               	incf	plusw1,f,c
 24046  017D74  E30B               	bnc	u6710
 24047  017D76  0EFA               	movlw	-6
 24048  017D78  2AE3               	incf	plusw1,f,c
 24049  017D7A  E308               	bnc	u6710
 24050  017D7C  0EFB               	movlw	-5
 24051  017D7E  2AE3               	incf	plusw1,f,c
 24052  017D80  E305               	bnc	u6710
 24053  017D82  0EFC               	movlw	-4
 24054  017D84  2AE3               	incf	plusw1,f,c
 24055  017D86  E302               	bnc	u6710
 24056  017D88  0EFD               	movlw	-3
 24057  017D8A  2AE3               	incf	plusw1,f,c
 24058  017D8C                     u6710:
 24059                           
 24060                           ;stkvar	_quotient @ sp[(-10)+0]
 24061  017D8C  0EF6               	movlw	246
 24062  017D8E  24E1               	addwf	fsr1l,w,c
 24063  017D90  6ED9               	movwf	fsr2l,c
 24064  017D92  0EFF               	movlw	255
 24065  017D94  20E2               	addwfc	fsr1h,w,c
 24066  017D96  6EDA               	movwf	fsr2h,c
 24067                           
 24068                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 24069  017D98  0E08               	movlw	8
 24070  017D9A  6E01               	movwf	btemp^0,c
 24071  017D9C  0EEE               	movlw	-18
 24072  017D9E                     us672999:
 24073  017D9E  006F FF7B FFE3     	movff	postinc2,plusw1
 24074  017DA4  28E8               	incf	wreg,w,c
 24075  017DA6  2E01               	decfsz	btemp^0,f,c
 24076  017DA8  D7FA               	bra	us672999
 24077                           
 24078                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 24079  017DAA  0EF6               	movlw	246
 24080  017DAC  26E1               	addwf	fsr1l,f,c
 24081  017DAE  0EFF               	movlw	255
 24082  017DB0  22E2               	addwfc	fsr1h,f,c
 24083  017DB2  0012               	return		;funcret
 24084  017DB4                     __end_of___aodiv:
 24085                           	opt callstack 0
 24086                           
 24087 ;; *************** function _ctoa *****************
 24088 ;; Defined at:
 24089 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24090 ;; Parameters:    Size  Location     Type
 24091 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24092 ;;		 -> f(6), NULL(0), 
 24093 ;;  c               1  [STACK] unsigned char 
 24094 ;; Auto vars:     Size  Location     Type
 24095 ;;  w               2  [STACK] int 
 24096 ;;  l               2    0        int 
 24097 ;; Return value:  Size  Location     Type
 24098 ;;                  2  [STACK] int 
 24099 ;; Registers used:
 24100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 24101 ;; Tracked objects:
 24102 ;;		On entry : 0/0
 24103 ;;		On exit  : 0/0
 24104 ;;		Unchanged: 0/0
 24105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24110 ;;Total ram usage:        0 bytes
 24111 ;; Hardware stack levels used:    1
 24112 ;; Hardware stack levels required when called:   20
 24113 ;; This function calls:
 24114 ;;		_pad
 24115 ;; This function is called by:
 24116 ;;		_vfpfcnvrt
 24117 ;; This function uses a reentrant model
 24118 ;;
 24119                           
 24120                           	psect	text85
 24121  01B64A                     __ptext85:
 24122                           	opt callstack 0
 24123  01B64A                     _ctoa:
 24124                           	opt callstack 0
 24125                           
 24126                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24127  01B64A  52E6               	movf	postinc1,f,c
 24128  01B64C  52E6               	movf	postinc1,f,c
 24129                           
 24130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 24131                           
 24132                           ;incstack = 0
 24133 ;; hardware stack exceeded
 24134  01B64E  503A               	movf	_width^0,w,c
 24135  01B650  103B               	iorwf	(_width+1)^0,w,c
 24136  01B652  A4D8               	btfss	status,2,c
 24137  01B654  D009               	goto	l12714
 24138                           
 24139                           ;stkvar	_w @ sp[(-2)+0]
 24140  01B656  0EFE               	movlw	-2
 24141  01B658  0060  F0EB  FFE3   	movff	_width,plusw1
 24142  01B65E  0EFF               	movlw	-1
 24143  01B660  0060  F0EF  FFE3   	movff	_width+1,plusw1
 24144  01B666  D016               	goto	l12716
 24145  01B668                     l12714:
 24146  01B668  0EFF               	movlw	255
 24147  01B66A  6E0B               	movwf	(btemp+10)^0,c
 24148  01B66C  0EFF               	movlw	255
 24149  01B66E  6E0C               	movwf	(btemp+11)^0,c
 24150  01B670  0060  F0E8  F009   	movff	_width,btemp+8
 24151  01B676  0060  F0EC  F00A   	movff	_width+1,btemp+9
 24152  01B67C  500B               	movf	(btemp+10)^0,w,c
 24153  01B67E  2609               	addwf	(btemp+8)^0,f,c
 24154  01B680  500C               	movf	(btemp+11)^0,w,c
 24155  01B682  220A               	addwfc	(btemp+9)^0,f,c
 24156                           
 24157                           ;stkvar	_w @ sp[(-2)+0]
 24158  01B684  0EFE               	movlw	-2
 24159  01B686  0060  F027  FFE3   	movff	btemp+8,plusw1
 24160  01B68C  0EFF               	movlw	-1
 24161  01B68E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24162  01B694                     l12716:
 24163                           
 24164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 24165                           ;stkvar	_c @ sp[(-2)+-3]
 24166  01B694  0EFB               	movlw	-5
 24167  01B696  006F FF8C  F297    	movff	plusw1,_dbuf
 24168                           
 24169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 24170  01B69C  0102               	movlb	2	; () banked
 24171  01B69E  6B98               	clrf	(_dbuf+1)& (0+255),b
 24172                           
 24173                           ; BSR set to: 2
 24174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 24175                           ;stkvar	_w @ sp[(-2)+0]
 24176  01B6A0  0EFE               	movlw	-2
 24177  01B6A2  006F FF8F FFE6     	movff	plusw1,postinc1
 24178  01B6A8  006F FF8F FFE6     	movff	plusw1,postinc1
 24179  01B6AE  0E97               	movlw	low _dbuf
 24180  01B6B0  6EE6               	movwf	postinc1,c
 24181  01B6B2  0E02               	movlw	high _dbuf
 24182  01B6B4  6EE6               	movwf	postinc1,c
 24183                           
 24184                           ;stkvar	_fp @ sp[(-6)+-2]
 24185  01B6B6  0EF8               	movlw	-8
 24186  01B6B8  006F FF8F FFE6     	movff	plusw1,postinc1
 24187  01B6BE  006F FF8F FFE6     	movff	plusw1,postinc1
 24188  01B6C4  EC5C  F0D1         	call	_pad	;wreg free
 24189                           
 24190                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 24191  01B6C8  0EFB               	movlw	251
 24192  01B6CA  26E1               	addwf	fsr1l,f,c
 24193  01B6CC  0EFF               	movlw	255
 24194  01B6CE  22E2               	addwfc	fsr1h,f,c
 24195  01B6D0  0012               	return		;funcret
 24196  01B6D2                     __end_of_ctoa:
 24197                           	opt callstack 0
 24198                           
 24199 ;; *************** function _pad *****************
 24200 ;; Defined at:
 24201 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24202 ;; Parameters:    Size  Location     Type
 24203 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24204 ;;		 -> f(6), NULL(0), 
 24205 ;;  buf             2  [STACK] PTR unsigned char 
 24206 ;;		 -> dbuf(80), 
 24207 ;;  p               2  [STACK] int 
 24208 ;; Auto vars:     Size  Location     Type
 24209 ;;  w               2  [STACK] int 
 24210 ;;  i               2  [STACK] int 
 24211 ;; Return value:  Size  Location     Type
 24212 ;;                  2  [STACK] int 
 24213 ;; Registers used:
 24214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 24215 ;; Tracked objects:
 24216 ;;		On entry : 0/2
 24217 ;;		On exit  : 0/0
 24218 ;;		Unchanged: 0/0
 24219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24224 ;;Total ram usage:        0 bytes
 24225 ;; Hardware stack levels used:    1
 24226 ;; Hardware stack levels required when called:   19
 24227 ;; This function calls:
 24228 ;;		_fputc
 24229 ;;		_fputs
 24230 ;;		_strlen
 24231 ;; This function is called by:
 24232 ;;		_ctoa
 24233 ;;		_dtoa
 24234 ;;		_efgtoa
 24235 ;;		_utoa
 24236 ;;		_xtoa
 24237 ;; This function uses a reentrant model
 24238 ;;
 24239                           
 24240                           	psect	text86
 24241  01A2B8                     __ptext86:
 24242                           	opt callstack 0
 24243  01A2B8                     _pad:
 24244                           	opt callstack 0
 24245                           
 24246                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24247  01A2B8  52E6               	movf	postinc1,f,c
 24248  01A2BA  52E6               	movf	postinc1,f,c
 24249  01A2BC  52E6               	movf	postinc1,f,c
 24250  01A2BE  52E6               	movf	postinc1,f,c
 24251                           
 24252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 24253                           
 24254                           ;incstack = 0
 24255 ;; hardware stack exceeded
 24256  01A2C0  A03E               	btfss	_flags^0,0,c
 24257  01A2C2  D010               	goto	l12676
 24258                           
 24259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 24260                           ;stkvar	_fp @ sp[(-4)+-2]
 24261  01A2C4  0EFA               	movlw	-6
 24262  01A2C6  006F FF8F FFE6     	movff	plusw1,postinc1
 24263  01A2CC  006F FF8F FFE6     	movff	plusw1,postinc1
 24264                           
 24265                           ;stkvar	_buf @ sp[(-6)+-4]
 24266  01A2D2  0EF6               	movlw	-10
 24267  01A2D4  006F FF8F FFE6     	movff	plusw1,postinc1
 24268  01A2DA  006F FF8F FFE6     	movff	plusw1,postinc1
 24269  01A2E0  EC47  F0DA         	call	_fputs	;wreg free
 24270  01A2E4                     l12676:
 24271                           
 24272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 24273                           ;stkvar	_p @ sp[(-4)+-6]
 24274  01A2E4  0EF7               	movlw	-9
 24275  01A2E6  BEE3               	btfsc	plusw1,7,c
 24276  01A2E8  D011               	goto	l12680
 24277                           
 24278                           ;stkvar	_p @ sp[(-4)+-6]
 24279                           ;stkvar	_w @ sp[(-4)+0]
 24280  01A2EA  0EF6               	movlw	-10
 24281  01A2EC  006F FF8C  F001    	movff	plusw1,btemp
 24282  01A2F2  0EFC               	movlw	-4
 24283  01A2F4  0060  F007  FFE3   	movff	btemp,plusw1
 24284  01A2FA  0EF7               	movlw	-9
 24285  01A2FC  006F FF8C  F001    	movff	plusw1,btemp
 24286  01A302  0EFD               	movlw	-3
 24287  01A304  0060  F007  FFE3   	movff	btemp,plusw1
 24288  01A30A  D004               	goto	l2290
 24289  01A30C                     l12680:
 24290                           
 24291                           ;stkvar	_w @ sp[(-4)+0]
 24292  01A30C  0EFC               	movlw	-4
 24293  01A30E  6AE3               	clrf	plusw1,c
 24294  01A310  0EFD               	movlw	-3
 24295  01A312  6AE3               	clrf	plusw1,c
 24296  01A314                     l2290:
 24297                           
 24298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 24299                           ;stkvar	_i @ sp[(-4)+2]
 24300  01A314  0EFE               	movlw	-2
 24301  01A316  6AE3               	clrf	plusw1,c
 24302  01A318  0EFF               	movlw	-1
 24303  01A31A  6AE3               	clrf	plusw1,c
 24304                           
 24305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 24306  01A31C  D01E               	goto	l12686
 24307  01A31E                     l12682:
 24308                           
 24309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 24310                           ;stkvar	_fp @ sp[(-4)+-2]
 24311  01A31E  0EFA               	movlw	-6
 24312  01A320  006F FF8F FFE6     	movff	plusw1,postinc1
 24313  01A326  006F FF8F FFE6     	movff	plusw1,postinc1
 24314  01A32C  0E20               	movlw	32
 24315  01A32E  6EE6               	movwf	postinc1,c
 24316  01A330  0E00               	movlw	0
 24317  01A332  6EE6               	movwf	postinc1,c
 24318  01A334  ECB2  F0CF         	call	_fputc	;wreg free
 24319                           
 24320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 24321                           ;stkvar	_i @ sp[(-4)+2]
 24322  01A338  0EFE               	movlw	-2
 24323  01A33A  50E3               	movf	plusw1,w,c
 24324  01A33C  0F01               	addlw	1
 24325  01A33E  6E01               	movwf	btemp^0,c
 24326  01A340  0EFE               	movlw	-2
 24327  01A342  0060  F007  FFE3   	movff	btemp,plusw1
 24328  01A348  6A01               	clrf	btemp^0,c
 24329  01A34A  0EFF               	movlw	-1
 24330  01A34C  50E3               	movf	plusw1,w,c
 24331  01A34E  2001               	addwfc	btemp^0,w,c
 24332  01A350  6E01               	movwf	btemp^0,c
 24333  01A352  0EFF               	movlw	-1
 24334  01A354  0060  F007  FFE3   	movff	btemp,plusw1
 24335  01A35A                     l12686:
 24336                           
 24337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 24338                           ;stkvar	_w @ sp[(-4)+0]
 24339                           ;stkvar	_i @ sp[(-4)+2]
 24340  01A35A  50E1               	movf	fsr1l,w,c
 24341  01A35C  0FFE               	addlw	-2
 24342  01A35E  6ED9               	movwf	fsr2l,c
 24343  01A360  50E2               	movf	fsr1h,w,c
 24344  01A362  6EDA               	movwf	fsr2h,c
 24345  01A364  0EFF               	movlw	255
 24346  01A366  22DA               	addwfc	fsr2h,f,c
 24347  01A368  0EFC               	movlw	-4
 24348  01A36A  50E3               	movf	plusw1,w,c
 24349  01A36C  5CDE               	subwf	postinc2,w,c
 24350  01A36E  50DE               	movf	postinc2,w,c
 24351  01A370  0A80               	xorlw	128
 24352  01A372  6E01               	movwf	btemp^0,c
 24353  01A374  0EFD               	movlw	-3
 24354  01A376  50E3               	movf	plusw1,w,c
 24355  01A378  0A80               	xorlw	128
 24356  01A37A  5801               	subwfb	btemp^0,w,c
 24357  01A37C  A0D8               	btfss	status,0,c
 24358  01A37E  D7CF               	goto	l12682
 24359                           
 24360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 24361  01A380  B03E               	btfsc	_flags^0,0,c
 24362  01A382  D010               	goto	l12690
 24363                           
 24364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 24365                           ;stkvar	_fp @ sp[(-4)+-2]
 24366  01A384  0EFA               	movlw	-6
 24367  01A386  006F FF8F FFE6     	movff	plusw1,postinc1
 24368  01A38C  006F FF8F FFE6     	movff	plusw1,postinc1
 24369                           
 24370                           ;stkvar	_buf @ sp[(-6)+-4]
 24371  01A392  0EF6               	movlw	-10
 24372  01A394  006F FF8F FFE6     	movff	plusw1,postinc1
 24373  01A39A  006F FF8F FFE6     	movff	plusw1,postinc1
 24374  01A3A0  EC47  F0DA         	call	_fputs	;wreg free
 24375  01A3A4                     l12690:
 24376                           
 24377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 24378                           ;stkvar	_w @ sp[(-4)+0]
 24379                           ;stkvar	_buf @ sp[(-4)+-4]
 24380  01A3A4  0EF8               	movlw	-8
 24381  01A3A6  006F FF8F FFE6     	movff	plusw1,postinc1
 24382  01A3AC  006F FF8F FFE6     	movff	plusw1,postinc1
 24383  01A3B2  ECF6  F0D9         	call	_strlen	;wreg free
 24384  01A3B6  0EFC               	movlw	-4
 24385  01A3B8  50E3               	movf	plusw1,w,c
 24386  01A3BA  2601               	addwf	btemp^0,f,c
 24387  01A3BC  0EFD               	movlw	-3
 24388  01A3BE  50E3               	movf	plusw1,w,c
 24389  01A3C0  2202               	addwfc	(btemp+1)^0,f,c
 24390                           
 24391                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 24392  01A3C2  0EF6               	movlw	246
 24393  01A3C4  26E1               	addwf	fsr1l,f,c
 24394  01A3C6  0EFF               	movlw	255
 24395  01A3C8  22E2               	addwfc	fsr1h,f,c
 24396  01A3CA  0012               	return		;funcret
 24397  01A3CC                     __end_of_pad:
 24398                           	opt callstack 0
 24399                           
 24400 ;; *************** function _strlen *****************
 24401 ;; Defined at:
 24402 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 24403 ;; Parameters:    Size  Location     Type
 24404 ;;  s               2  [STACK] PTR const unsigned char 
 24405 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 24406 ;;		 -> spin(120), STR_62(9), STR_61(12), D.lcd(480), 
 24407 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 24408 ;;		 -> V(192), 
 24409 ;; Auto vars:     Size  Location     Type
 24410 ;;  a               2  [STACK] PTR const unsigned char 
 24411 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 24412 ;;		 -> spin(120), STR_62(9), STR_61(12), D.lcd(480), 
 24413 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 24414 ;;		 -> V(192), 
 24415 ;; Return value:  Size  Location     Type
 24416 ;;                  2  [STACK] unsigned int 
 24417 ;; Registers used:
 24418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 24419 ;; Tracked objects:
 24420 ;;		On entry : 0/0
 24421 ;;		On exit  : 0/0
 24422 ;;		Unchanged: 0/0
 24423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24428 ;;Total ram usage:        0 bytes
 24429 ;; Hardware stack levels used:    1
 24430 ;; Hardware stack levels required when called:   15
 24431 ;; This function calls:
 24432 ;;		Nothing
 24433 ;; This function is called by:
 24434 ;;		_eaDogM_WriteString
 24435 ;;		_spinners
 24436 ;;		_calc_bsoc
 24437 ;;		_pad
 24438 ;;		_stoa
 24439 ;; This function uses a reentrant model
 24440 ;;
 24441                           
 24442                           	psect	text87
 24443  01B3EC                     __ptext87:
 24444                           	opt callstack 0
 24445  01B3EC                     _strlen:
 24446                           	opt callstack 0
 24447                           
 24448                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24449  01B3EC  52E6               	movf	postinc1,f,c
 24450  01B3EE  52E6               	movf	postinc1,f,c
 24451                           
 24452                           ;stkvar	_s @ sp[(-2)+-2]
 24453                           
 24454                           ;incstack = 0
 24455 ;; hardware stack exceeded
 24456  01B3F0  0EFC               	movlw	-4
 24457  01B3F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24458  01B3F8  0EFD               	movlw	-3
 24459  01B3FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24460                           
 24461                           ;stkvar	_a @ sp[(-2)+0]
 24462  01B400  0EFF               	movlw	-1
 24463  01B402  0060  F033  FFE3   	movff	btemp+11,plusw1
 24464  01B408  0EFE               	movlw	-2
 24465  01B40A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24466  01B410  D011               	goto	l8168
 24467  01B412                     l8166:
 24468                           
 24469                           ;stkvar	_s @ sp[(-2)+-2]
 24470  01B412  0EFC               	movlw	-4
 24471  01B414  50E3               	movf	plusw1,w,c
 24472  01B416  0F01               	addlw	1
 24473  01B418  6E01               	movwf	btemp^0,c
 24474  01B41A  0EFC               	movlw	-4
 24475  01B41C  0060  F007  FFE3   	movff	btemp,plusw1
 24476  01B422  6A01               	clrf	btemp^0,c
 24477  01B424  0EFD               	movlw	-3
 24478  01B426  50E3               	movf	plusw1,w,c
 24479  01B428  2001               	addwfc	btemp^0,w,c
 24480  01B42A  6E01               	movwf	btemp^0,c
 24481  01B42C  0EFD               	movlw	-3
 24482  01B42E  0060  F007  FFE3   	movff	btemp,plusw1
 24483  01B434                     l8168:
 24484                           
 24485                           ;stkvar	_s @ sp[(-2)+-2]
 24486  01B434  0EFC               	movlw	-4
 24487  01B436  006F FF8F FFF6     	movff	plusw1,tblptrl
 24488  01B43C  0EFD               	movlw	-3
 24489  01B43E  006F FF8F FFF7     	movff	plusw1,tblptrh
 24490  01B444  0E00               	movlw	low (__mediumconst shr (0+16))
 24491  01B446  6EF8               	movwf	tblptru,c
 24492  01B448  0E1F               	movlw	(high __ramtop+-1)
 24493  01B44A  64F7               	cpfsgt	tblptrh,c
 24494  01B44C  D003               	bra	u5737
 24495  01B44E  0008               	tblrd		*
 24496  01B450  50F5               	movf	tablat,w,c
 24497  01B452  D007               	bra	u5730
 24498  01B454                     u5737:
 24499  01B454  006F FFDB FFE9     	movff	tblptrl,fsr0l
 24500  01B45A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 24501  01B460  50EF               	movf	indf0,w,c
 24502  01B462                     u5730:
 24503  01B462  0900               	iorlw	0
 24504  01B464  A4D8               	btfss	status,2,c
 24505  01B466  D7D5               	goto	l8166
 24506                           
 24507                           ;stkvar	_a @ sp[(-2)+0]
 24508                           ;stkvar	_s @ sp[(-2)+-2]
 24509  01B468  0EFC               	movlw	-4
 24510  01B46A  006F FF8C  F001    	movff	plusw1,btemp
 24511  01B470  0EFD               	movlw	-3
 24512  01B472  006F FF8C  F002    	movff	plusw1,btemp+1
 24513  01B478  0EFE               	movlw	-2
 24514  01B47A  50E3               	movf	plusw1,w,c
 24515  01B47C  5E01               	subwf	btemp^0,f,c
 24516  01B47E  0EFF               	movlw	-1
 24517  01B480  50E3               	movf	plusw1,w,c
 24518  01B482  5A02               	subwfb	(btemp+1)^0,f,c
 24519                           
 24520                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 24521  01B484  52E5               	movf	postdec1,f,c
 24522  01B486  52E5               	movf	postdec1,f,c
 24523  01B488  52E5               	movf	postdec1,f,c
 24524  01B48A  52E5               	movf	postdec1,f,c
 24525  01B48C  0012               	return		;funcret
 24526  01B48E                     __end_of_strlen:
 24527                           	opt callstack 0
 24528                           
 24529 ;; *************** function _fputs *****************
 24530 ;; Defined at:
 24531 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 24532 ;; Parameters:    Size  Location     Type
 24533 ;;  s               2  [STACK] PTR const unsigned char 
 24534 ;;		 -> dbuf(80), 
 24535 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24536 ;;		 -> f(6), NULL(0), 
 24537 ;; Auto vars:     Size  Location     Type
 24538 ;;  i               2  [STACK] int 
 24539 ;;  c               1  [STACK] unsigned char 
 24540 ;; Return value:  Size  Location     Type
 24541 ;;                  2  [STACK] int 
 24542 ;; Registers used:
 24543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 24544 ;; Tracked objects:
 24545 ;;		On entry : 0/2
 24546 ;;		On exit  : 0/0
 24547 ;;		Unchanged: 0/0
 24548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24553 ;;Total ram usage:        0 bytes
 24554 ;; Hardware stack levels used:    1
 24555 ;; Hardware stack levels required when called:   18
 24556 ;; This function calls:
 24557 ;;		_fputc
 24558 ;; This function is called by:
 24559 ;;		_pad
 24560 ;; This function uses a reentrant model
 24561 ;;
 24562                           
 24563                           	psect	text88
 24564  01B48E                     __ptext88:
 24565                           	opt callstack 0
 24566  01B48E                     _fputs:
 24567                           	opt callstack 0
 24568                           
 24569                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24570  01B48E  52E6               	movf	postinc1,f,c
 24571  01B490  52E6               	movf	postinc1,f,c
 24572  01B492  52E6               	movf	postinc1,f,c
 24573                           
 24574                           ;stkvar	_i @ sp[(-3)+0]
 24575                           
 24576                           ;incstack = 0
 24577 ;; hardware stack exceeded
 24578  01B494  0EFD               	movlw	-3
 24579  01B496  6AE3               	clrf	plusw1,c
 24580  01B498  0EFE               	movlw	-2
 24581  01B49A  6AE3               	clrf	plusw1,c
 24582  01B49C  D01F               	goto	l12628
 24583  01B49E                     l12624:
 24584                           
 24585                           ;stkvar	_fp @ sp[(-3)+-4]
 24586  01B49E  0EF9               	movlw	-7
 24587  01B4A0  006F FF8F FFE6     	movff	plusw1,postinc1
 24588  01B4A6  006F FF8F FFE6     	movff	plusw1,postinc1
 24589                           
 24590                           ;stkvar	_c @ sp[(-5)+2]
 24591  01B4AC  0EFD               	movlw	-3
 24592  01B4AE  50E3               	movf	plusw1,w,c
 24593  01B4B0  6EE6               	movwf	postinc1,c
 24594  01B4B2  0E00               	movlw	0
 24595  01B4B4  6EE6               	movwf	postinc1,c
 24596  01B4B6  ECB2  F0CF         	call	_fputc	;wreg free
 24597                           
 24598                           ;stkvar	_i @ sp[(-3)+0]
 24599  01B4BA  0EFD               	movlw	-3
 24600  01B4BC  50E3               	movf	plusw1,w,c
 24601  01B4BE  0F01               	addlw	1
 24602  01B4C0  6E01               	movwf	btemp^0,c
 24603  01B4C2  0EFD               	movlw	-3
 24604  01B4C4  0060  F007  FFE3   	movff	btemp,plusw1
 24605  01B4CA  6A01               	clrf	btemp^0,c
 24606  01B4CC  0EFE               	movlw	-2
 24607  01B4CE  50E3               	movf	plusw1,w,c
 24608  01B4D0  2001               	addwfc	btemp^0,w,c
 24609  01B4D2  6E01               	movwf	btemp^0,c
 24610  01B4D4  0EFE               	movlw	-2
 24611  01B4D6  0060  F007  FFE3   	movff	btemp,plusw1
 24612  01B4DC                     l12628:
 24613                           
 24614                           ;stkvar	_i @ sp[(-3)+0]
 24615  01B4DC  0EFD               	movlw	-3
 24616  01B4DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24617  01B4E4  0EFE               	movlw	-2
 24618  01B4E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24619                           
 24620                           ;stkvar	_s @ sp[(-3)+-2]
 24621  01B4EC  0EFB               	movlw	-5
 24622  01B4EE  006F FF8C  F009    	movff	plusw1,btemp+8
 24623  01B4F4  0EFC               	movlw	-4
 24624  01B4F6  006F FF8C  F00A    	movff	plusw1,btemp+9
 24625  01B4FC  500B               	movf	(btemp+10)^0,w,c
 24626  01B4FE  2409               	addwf	(btemp+8)^0,w,c
 24627  01B500  6ED9               	movwf	fsr2l,c
 24628  01B502  500C               	movf	(btemp+11)^0,w,c
 24629  01B504  200A               	addwfc	(btemp+9)^0,w,c
 24630  01B506  6EDA               	movwf	fsr2h,c
 24631  01B508  50DF               	movf	indf2,w,c
 24632  01B50A  6E0C               	movwf	(btemp+11)^0,c
 24633                           
 24634                           ;stkvar	_c @ sp[(-3)+2]
 24635  01B50C  0EFF               	movlw	-1
 24636  01B50E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24637  01B514  0EFF               	movlw	-1
 24638  01B516  50E3               	movf	plusw1,w,c
 24639  01B518  A4D8               	btfss	status,2,c
 24640  01B51A  D7C1               	goto	l12624
 24641                           
 24642                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24643  01B51C  0EF9               	movlw	249
 24644  01B51E  26E1               	addwf	fsr1l,f,c
 24645  01B520  0EFF               	movlw	255
 24646  01B522  22E2               	addwfc	fsr1h,f,c
 24647  01B524  0012               	return		;funcret
 24648  01B526                     __end_of_fputs:
 24649                           	opt callstack 0
 24650                           
 24651 ;; *************** function _fputc *****************
 24652 ;; Defined at:
 24653 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 24654 ;; Parameters:    Size  Location     Type
 24655 ;;  c               2  [STACK] int 
 24656 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24657 ;;		 -> f(6), NULL(0), 
 24658 ;; Auto vars:     Size  Location     Type
 24659 ;;		None
 24660 ;; Return value:  Size  Location     Type
 24661 ;;                  2  [STACK] int 
 24662 ;; Registers used:
 24663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 24664 ;; Tracked objects:
 24665 ;;		On entry : 0/0
 24666 ;;		On exit  : 0/0
 24667 ;;		Unchanged: 0/0
 24668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24673 ;;Total ram usage:        0 bytes
 24674 ;; Hardware stack levels used:    1
 24675 ;; Hardware stack levels required when called:   17
 24676 ;; This function calls:
 24677 ;;		_putch
 24678 ;; This function is called by:
 24679 ;;		_pad
 24680 ;;		_stoa
 24681 ;;		_vfpfcnvrt
 24682 ;;		_fputs
 24683 ;; This function uses a reentrant model
 24684 ;;
 24685                           
 24686                           	psect	text89
 24687  019F64                     __ptext89:
 24688                           	opt callstack 0
 24689  019F64                     _fputc:
 24690                           	opt callstack 0
 24691                           
 24692                           ;stkvar	_fp @ sp[(0)+-4]
 24693                           
 24694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24695                           ;incstack = 0
 24696 ;; hardware stack exceeded
 24697  019F64  0EFC               	movlw	-4
 24698  019F66  006F FF8C  F001    	movff	plusw1,btemp
 24699  019F6C  0EFD               	movlw	-3
 24700  019F6E  50E3               	movf	plusw1,w,c
 24701  019F70  1001               	iorwf	btemp^0,w,c
 24702  019F72  B4D8               	btfsc	status,2,c
 24703  019F74  D009               	goto	u11370
 24704                           
 24705                           ;stkvar	_fp @ sp[(0)+-4]
 24706  019F76  0EFC               	movlw	-4
 24707  019F78  006F FF8C  F001    	movff	plusw1,btemp
 24708  019F7E  0EFD               	movlw	-3
 24709  019F80  50E3               	movf	plusw1,w,c
 24710  019F82  1001               	iorwf	btemp^0,w,c
 24711  019F84  A4D8               	btfss	status,2,c
 24712  019F86  D006               	goto	l12612
 24713  019F88                     u11370:
 24714                           
 24715                           ;stkvar	_c @ sp[(0)+-2]
 24716  019F88  0EFE               	movlw	-2
 24717  019F8A  50E3               	movf	plusw1,w,c
 24718  019F8C  6EE6               	movwf	postinc1,c
 24719  019F8E  EC50  F0E6         	call	_putch	;wreg free
 24720  019F92  D075               	goto	l3336
 24721  019F94                     l12612:
 24722                           
 24723                           ;stkvar	_fp @ sp[(0)+-4]
 24724  019F94  0EFC               	movlw	-4
 24725  019F96  006F FF8C  F00B    	movff	plusw1,btemp+10
 24726  019F9C  0EFD               	movlw	-3
 24727  019F9E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24728  019FA4  0E04               	movlw	4
 24729  019FA6  240B               	addwf	(btemp+10)^0,w,c
 24730  019FA8  6ED9               	movwf	fsr2l,c
 24731  019FAA  0E00               	movlw	0
 24732  019FAC  200C               	addwfc	(btemp+11)^0,w,c
 24733  019FAE  6EDA               	movwf	fsr2h,c
 24734  019FB0  50DE               	movf	postinc2,w,c
 24735  019FB2  10DE               	iorwf	postinc2,w,c
 24736  019FB4  B4D8               	btfsc	status,2,c
 24737  019FB6  D026               	goto	u11390
 24738                           
 24739                           ;stkvar	_fp @ sp[(0)+-4]
 24740  019FB8  0EFC               	movlw	-4
 24741  019FBA  006F FF8C  F00B    	movff	plusw1,btemp+10
 24742  019FC0  0EFD               	movlw	-3
 24743  019FC2  006F FF8C  F00C    	movff	plusw1,btemp+11
 24744  019FC8  0E04               	movlw	4
 24745  019FCA  240B               	addwf	(btemp+10)^0,w,c
 24746  019FCC  6ED9               	movwf	fsr2l,c
 24747  019FCE  0E00               	movlw	0
 24748  019FD0  200C               	addwfc	(btemp+11)^0,w,c
 24749  019FD2  6EDA               	movwf	fsr2h,c
 24750                           
 24751                           ;stkvar	_fp @ sp[(0)+-4]
 24752  019FD4  0EFC               	movlw	-4
 24753  019FD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 24754  019FDC  0EFD               	movlw	-3
 24755  019FDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24756  019FE4  0E02               	movlw	2
 24757  019FE6  240B               	addwf	(btemp+10)^0,w,c
 24758  019FE8  6EE9               	movwf	fsr0l,c
 24759  019FEA  0E00               	movlw	0
 24760  019FEC  200C               	addwfc	(btemp+11)^0,w,c
 24761  019FEE  6EEA               	movwf	fsr0h,c
 24762  019FF0  50DE               	movf	postinc2,w,c
 24763  019FF2  5CEE               	subwf	postinc0,w,c
 24764  019FF4  50EE               	movf	postinc0,w,c
 24765  019FF6  0A80               	xorlw	128
 24766  019FF8  6E01               	movwf	btemp^0,c
 24767  019FFA  50DE               	movf	postinc2,w,c
 24768  019FFC  0A80               	xorlw	128
 24769  019FFE  5801               	subwfb	btemp^0,w,c
 24770  01A000  B0D8               	btfsc	status,0,c
 24771  01A002  D03D               	goto	l3336
 24772  01A004                     u11390:
 24773                           
 24774                           ;stkvar	_c @ sp[(0)+-2]
 24775                           ;stkvar	_fp @ sp[(0)+-4]
 24776  01A004  0EFC               	movlw	-4
 24777  01A006  006F FF8C  F00B    	movff	plusw1,btemp+10
 24778  01A00C  0EFD               	movlw	-3
 24779  01A00E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24780  01A014  0E02               	movlw	2
 24781  01A016  240B               	addwf	(btemp+10)^0,w,c
 24782  01A018  6ED9               	movwf	fsr2l,c
 24783  01A01A  0E00               	movlw	0
 24784  01A01C  200C               	addwfc	(btemp+11)^0,w,c
 24785  01A01E  6EDA               	movwf	fsr2h,c
 24786  01A020  006F FF78  F00B    	movff	postinc2,btemp+10
 24787  01A026  006F FF74  F00C    	movff	postdec2,btemp+11
 24788                           
 24789                           ;stkvar	_fp @ sp[(0)+-4]
 24790  01A02C  0EFC               	movlw	-4
 24791  01A02E  006F FF8F FFD9     	movff	plusw1,fsr2l
 24792  01A034  0EFD               	movlw	-3
 24793  01A036  006F FF8F FFDA     	movff	plusw1,fsr2h
 24794  01A03C  006F FF78  F009    	movff	postinc2,btemp+8
 24795  01A042  006F FF74  F00A    	movff	postdec2,btemp+9
 24796  01A048  500B               	movf	(btemp+10)^0,w,c
 24797  01A04A  2409               	addwf	(btemp+8)^0,w,c
 24798  01A04C  6ED9               	movwf	fsr2l,c
 24799  01A04E  500C               	movf	(btemp+11)^0,w,c
 24800  01A050  200A               	addwfc	(btemp+9)^0,w,c
 24801  01A052  6EDA               	movwf	fsr2h,c
 24802  01A054  0EFE               	movlw	-2
 24803  01A056  006F FF8F FFDF     	movff	plusw1,indf2
 24804                           
 24805                           ;stkvar	_fp @ sp[(0)+-4]
 24806  01A05C  0EFC               	movlw	-4
 24807  01A05E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24808  01A064  0EFD               	movlw	-3
 24809  01A066  006F FF8C  F00C    	movff	plusw1,btemp+11
 24810  01A06C  0E02               	movlw	2
 24811  01A06E  240B               	addwf	(btemp+10)^0,w,c
 24812  01A070  6ED9               	movwf	fsr2l,c
 24813  01A072  0E00               	movlw	0
 24814  01A074  200C               	addwfc	(btemp+11)^0,w,c
 24815  01A076  6EDA               	movwf	fsr2h,c
 24816  01A078  2ADE               	incf	postinc2,f,c
 24817  01A07A  0E00               	movlw	0
 24818  01A07C  22DD               	addwfc	postdec2,f,c
 24819  01A07E                     l3336:
 24820                           
 24821                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24822  01A07E  52E5               	movf	postdec1,f,c
 24823  01A080  52E5               	movf	postdec1,f,c
 24824  01A082  52E5               	movf	postdec1,f,c
 24825  01A084  52E5               	movf	postdec1,f,c
 24826  01A086  0012               	return		;funcret
 24827  01A088                     __end_of_fputc:
 24828                           	opt callstack 0
 24829                           
 24830 ;; *************** function _putch *****************
 24831 ;; Defined at:
 24832 ;;		line 421 in file "eadog.c"
 24833 ;; Parameters:    Size  Location     Type
 24834 ;;  c               1  [STACK] unsigned char 
 24835 ;; Auto vars:     Size  Location     Type
 24836 ;;		None
 24837 ;; Return value:  Size  Location     Type
 24838 ;;                  1  [STACK] void 
 24839 ;; Registers used:
 24840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24841 ;; Tracked objects:
 24842 ;;		On entry : 0/0
 24843 ;;		On exit  : 0/0
 24844 ;;		Unchanged: 0/0
 24845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24850 ;;Total ram usage:        0 bytes
 24851 ;; Hardware stack levels used:    1
 24852 ;; Hardware stack levels required when called:   16
 24853 ;; This function calls:
 24854 ;;		_ringBufS_put_dma
 24855 ;; This function is called by:
 24856 ;;		_fputc
 24857 ;; This function uses a reentrant model
 24858 ;;
 24859                           
 24860                           	psect	text90
 24861  01CCA0                     __ptext90:
 24862                           	opt callstack 0
 24863  01CCA0                     _putch:
 24864                           	opt callstack 0
 24865                           
 24866                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 24867                           ;stkvar	_c @ sp[(0)+-1]
 24868                           
 24869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24870                           ;incstack = 0
 24871 ;; hardware stack exceeded
 24872  01CCA0  0EFF               	movlw	-1
 24873  01CCA2  50E3               	movf	plusw1,w,c
 24874  01CCA4  6EE6               	movwf	postinc1,c
 24875  01CCA6  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 24876  01CCAC  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 24877  01CCB2  ECFA  F0D8         	call	_ringBufS_put_dma	;wreg free
 24878                           
 24879                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 24880  01CCB6  52E5               	movf	postdec1,f,c
 24881  01CCB8  0012               	return		;funcret
 24882  01CCBA                     __end_of_putch:
 24883                           	opt callstack 0
 24884                           
 24885 ;; *************** function _ringBufS_put_dma *****************
 24886 ;; Defined at:
 24887 ;;		line 67 in file "ringbufs.c"
 24888 ;; Parameters:    Size  Location     Type
 24889 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24890 ;;		 -> ring_buf1(67), 
 24891 ;;  c               1  [STACK] const unsigned char 
 24892 ;; Auto vars:     Size  Location     Type
 24893 ;;		None
 24894 ;; Return value:  Size  Location     Type
 24895 ;;                  1  [STACK] void 
 24896 ;; Registers used:
 24897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24898 ;; Tracked objects:
 24899 ;;		On entry : 0/0
 24900 ;;		On exit  : 0/0
 24901 ;;		Unchanged: 0/0
 24902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24907 ;;Total ram usage:        0 bytes
 24908 ;; Hardware stack levels used:    1
 24909 ;; Hardware stack levels required when called:   15
 24910 ;; This function calls:
 24911 ;;		Nothing
 24912 ;; This function is called by:
 24913 ;;		_putch
 24914 ;; This function uses a reentrant model
 24915 ;;
 24916                           
 24917                           	psect	text91
 24918  01B1F4                     __ptext91:
 24919                           	opt callstack 0
 24920  01B1F4                     _ringBufS_put_dma:
 24921                           	opt callstack 0
 24922                           
 24923                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 24924                           ;stkvar	__this @ sp[(0)+-2]
 24925                           
 24926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24927                           ;incstack = 0
 24928 ;; hardware stack exceeded
 24929  01B1F4  0EFE               	movlw	-2
 24930  01B1F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 24931  01B1FC  0EFF               	movlw	-1
 24932  01B1FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24933  01B204  0E42               	movlw	66
 24934  01B206  240B               	addwf	(btemp+10)^0,w,c
 24935  01B208  6ED9               	movwf	fsr2l,c
 24936  01B20A  0E00               	movlw	0
 24937  01B20C  200C               	addwfc	(btemp+11)^0,w,c
 24938  01B20E  6EDA               	movwf	fsr2h,c
 24939  01B210  0E40               	movlw	64
 24940  01B212  60DF               	cpfslt	indf2,c
 24941  01B214  D040               	goto	l1620
 24942                           
 24943                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 24944                           ;stkvar	_c @ sp[(0)+-3]
 24945                           ;stkvar	__this @ sp[(0)+-2]
 24946  01B216  0EFE               	movlw	-2
 24947  01B218  006F FF8C  F00B    	movff	plusw1,btemp+10
 24948  01B21E  0EFF               	movlw	-1
 24949  01B220  006F FF8C  F00C    	movff	plusw1,btemp+11
 24950  01B226  0E40               	movlw	64
 24951  01B228  240B               	addwf	(btemp+10)^0,w,c
 24952  01B22A  6ED9               	movwf	fsr2l,c
 24953  01B22C  0E00               	movlw	0
 24954  01B22E  200C               	addwfc	(btemp+11)^0,w,c
 24955  01B230  6EDA               	movwf	fsr2h,c
 24956  01B232  50DF               	movf	indf2,w,c
 24957  01B234  6E0C               	movwf	(btemp+11)^0,c
 24958                           
 24959                           ;stkvar	__this @ sp[(0)+-2]
 24960  01B236  0EFE               	movlw	-2
 24961  01B238  006F FF8C  F009    	movff	plusw1,btemp+8
 24962  01B23E  0EFF               	movlw	-1
 24963  01B240  006F FF8C  F00A    	movff	plusw1,btemp+9
 24964  01B246  500C               	movf	(btemp+11)^0,w,c
 24965  01B248  2409               	addwf	(btemp+8)^0,w,c
 24966  01B24A  6ED9               	movwf	fsr2l,c
 24967  01B24C  0E00               	movlw	0
 24968  01B24E  200A               	addwfc	(btemp+9)^0,w,c
 24969  01B250  6EDA               	movwf	fsr2h,c
 24970  01B252  0EFD               	movlw	-3
 24971  01B254  006F FF8F FFDF     	movff	plusw1,indf2
 24972                           
 24973                           ;ringbufs.c: 71:   ++_this->head;
 24974                           ;stkvar	__this @ sp[(0)+-2]
 24975  01B25A  0EFE               	movlw	-2
 24976  01B25C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24977  01B262  0EFF               	movlw	-1
 24978  01B264  006F FF8C  F00C    	movff	plusw1,btemp+11
 24979  01B26A  0E40               	movlw	64
 24980  01B26C  240B               	addwf	(btemp+10)^0,w,c
 24981  01B26E  6ED9               	movwf	fsr2l,c
 24982  01B270  0E00               	movlw	0
 24983  01B272  200C               	addwfc	(btemp+11)^0,w,c
 24984  01B274  6EDA               	movwf	fsr2h,c
 24985  01B276  2ADF               	incf	indf2,f,c
 24986                           
 24987                           ;ringbufs.c: 72:   ++_this->count;
 24988                           ;stkvar	__this @ sp[(0)+-2]
 24989  01B278  0EFE               	movlw	-2
 24990  01B27A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24991  01B280  0EFF               	movlw	-1
 24992  01B282  006F FF8C  F00C    	movff	plusw1,btemp+11
 24993  01B288  0E42               	movlw	66
 24994  01B28A  240B               	addwf	(btemp+10)^0,w,c
 24995  01B28C  6ED9               	movwf	fsr2l,c
 24996  01B28E  0E00               	movlw	0
 24997  01B290  200C               	addwfc	(btemp+11)^0,w,c
 24998  01B292  6EDA               	movwf	fsr2h,c
 24999  01B294  2ADF               	incf	indf2,f,c
 25000  01B296                     l1620:
 25001                           
 25002                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 25003  01B296  52E5               	movf	postdec1,f,c
 25004  01B298  52E5               	movf	postdec1,f,c
 25005  01B29A  52E5               	movf	postdec1,f,c
 25006  01B29C  0012               	return		;funcret
 25007  01B29E                     __end_of_ringBufS_put_dma:
 25008                           	opt callstack 0
 25009                           
 25010 ;; *************** function _atoi *****************
 25011 ;; Defined at:
 25012 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 25013 ;; Parameters:    Size  Location     Type
 25014 ;;  s               2  [STACK] PTR const unsigned char 
 25015 ;;		 -> STR_80(127), STR_78(3), STR_77(3), STR_76(19), 
 25016 ;;		 -> STR_75(19), STR_74(19), STR_73(19), STR_72(19), 
 25017 ;;		 -> STR_71(19), STR_70(24), STR_69(15), STR_68(15), 
 25018 ;;		 -> STR_67(15), STR_66(10), STR_65(10), STR_64(19), 
 25019 ;;		 -> STR_63(19), STR_60(3), STR_59(3), STR_58(21), 
 25020 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(21), 
 25021 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 25022 ;;		 -> STR_49(20), STR_48(20), STR_47(21), STR_46(21), 
 25023 ;;		 -> STR_45(21), STR_44(22), STR_43(22), STR_42(22), 
 25024 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(29), 
 25025 ;;		 -> STR_37(23), STR_36(23), STR_35(22), STR_34(22), 
 25026 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 25027 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 25028 ;;		 -> STR_25(22), STR_24(22), STR_23(17), STR_22(16), 
 25029 ;;		 -> STR_21(16), STR_20(26), STR_19(26), STR_18(22), 
 25030 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(21), 
 25031 ;;		 -> STR_13(22), STR_12(22), STR_11(26), STR_10(21), 
 25032 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 25033 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 25034 ;; Auto vars:     Size  Location     Type
 25035 ;;  n               2  [STACK] int 
 25036 ;;  neg             2  [STACK] int 
 25037 ;; Return value:  Size  Location     Type
 25038 ;;                  2  [STACK] int 
 25039 ;; Registers used:
 25040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 25041 ;; Tracked objects:
 25042 ;;		On entry : 0/0
 25043 ;;		On exit  : 0/0
 25044 ;;		Unchanged: 0/0
 25045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25050 ;;Total ram usage:        0 bytes
 25051 ;; Hardware stack levels used:    1
 25052 ;; Hardware stack levels required when called:   16
 25053 ;; This function calls:
 25054 ;;		_isdigit
 25055 ;;		_isspace
 25056 ;; This function is called by:
 25057 ;;		_vfpfcnvrt
 25058 ;; This function uses a reentrant model
 25059 ;;
 25060                           
 25061                           	psect	text92
 25062  017DB4                     __ptext92:
 25063                           	opt callstack 0
 25064  017DB4                     _atoi:
 25065                           	opt callstack 0
 25066                           
 25067                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25068  017DB4  0E09               	movlw	9
 25069  017DB6  26E1               	addwf	fsr1l,f,c
 25070  017DB8  0E00               	movlw	0
 25071  017DBA  22E2               	addwfc	fsr1h,f,c
 25072                           
 25073                           ;stkvar	_n @ sp[(-9)+5]
 25074                           
 25075                           ;incstack = 0
 25076 ;; hardware stack exceeded
 25077  017DBC  0EFC               	movlw	-4
 25078  017DBE  6AE3               	clrf	plusw1,c
 25079  017DC0  0EFD               	movlw	-3
 25080  017DC2  6AE3               	clrf	plusw1,c
 25081                           
 25082                           ;stkvar	_neg @ sp[(-9)+7]
 25083  017DC4  0EFE               	movlw	-2
 25084  017DC6  6AE3               	clrf	plusw1,c
 25085  017DC8  0EFF               	movlw	-1
 25086  017DCA  6AE3               	clrf	plusw1,c
 25087  017DCC  D011               	goto	l9792
 25088  017DCE                     l9790:
 25089                           
 25090                           ;stkvar	_s @ sp[(-9)+-2]
 25091  017DCE  0EF5               	movlw	-11
 25092  017DD0  50E3               	movf	plusw1,w,c
 25093  017DD2  0F01               	addlw	1
 25094  017DD4  6E01               	movwf	btemp^0,c
 25095  017DD6  0EF5               	movlw	-11
 25096  017DD8  0060  F007  FFE3   	movff	btemp,plusw1
 25097  017DDE  6A01               	clrf	btemp^0,c
 25098  017DE0  0EF6               	movlw	-10
 25099  017DE2  50E3               	movf	plusw1,w,c
 25100  017DE4  2001               	addwfc	btemp^0,w,c
 25101  017DE6  6E01               	movwf	btemp^0,c
 25102  017DE8  0EF6               	movlw	-10
 25103  017DEA  0060  F007  FFE3   	movff	btemp,plusw1
 25104  017DF0                     l9792:
 25105                           
 25106                           ;stkvar	_atoi$6544 @ sp[(-9)+4]
 25107  017DF0  0EFB               	movlw	-5
 25108  017DF2  6AE3               	clrf	plusw1,c
 25109  017DF4  2AE3               	incf	plusw1,f,c
 25110                           
 25111                           ;stkvar	_s @ sp[(-9)+-2]
 25112  017DF6  50E1               	movf	fsr1l,w,c
 25113  017DF8  0FF5               	addlw	-11
 25114  017DFA  6ED9               	movwf	fsr2l,c
 25115  017DFC  50E2               	movf	fsr1h,w,c
 25116  017DFE  6EDA               	movwf	fsr2h,c
 25117  017E00  0EFF               	movlw	255
 25118  017E02  22DA               	addwfc	fsr2h,f,c
 25119  017E04  006F FF7B FFF6     	movff	postinc2,tblptrl
 25120  017E0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 25121  017E10                     	if	0	;tblptru may be non-zero
 25122  017E10                     	endif
 25123  017E10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25124  017E10  0E00               	movlw	low (__mediumconst shr (0+16))
 25125  017E12  6EF8               	movwf	tblptru,c
 25126  017E14                     	endif
 25127  017E14  0008               	tblrd		*
 25128  017E16  50F5               	movf	tablat,w,c
 25129  017E18  0A20               	xorlw	32
 25130  017E1A  B4D8               	btfsc	status,2,c
 25131  017E1C  D023               	goto	l9800
 25132  017E1E  0EF7               	movlw	247
 25133  017E20  6E0B               	movwf	(btemp+10)^0,c
 25134  017E22  0EFF               	movlw	255
 25135  017E24  6E0C               	movwf	(btemp+11)^0,c
 25136                           
 25137                           ;stkvar	_s @ sp[(-9)+-2]
 25138  017E26  50E1               	movf	fsr1l,w,c
 25139  017E28  0FF5               	addlw	-11
 25140  017E2A  6ED9               	movwf	fsr2l,c
 25141  017E2C  50E2               	movf	fsr1h,w,c
 25142  017E2E  6EDA               	movwf	fsr2h,c
 25143  017E30  0EFF               	movlw	255
 25144  017E32  22DA               	addwfc	fsr2h,f,c
 25145  017E34  006F FF7B FFF6     	movff	postinc2,tblptrl
 25146  017E3A  006F FF77 FFF7     	movff	postdec2,tblptrh
 25147  017E40                     	if	0	;tblptru may be non-zero
 25148  017E40                     	endif
 25149  017E40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25150  017E40  0E00               	movlw	low (__mediumconst shr (0+16))
 25151  017E42  6EF8               	movwf	tblptru,c
 25152  017E44                     	endif
 25153  017E44  0008               	tblrd		*
 25154  017E46  50F5               	movf	tablat,w,c
 25155  017E48  6E09               	movwf	(btemp+8)^0,c
 25156  017E4A  6A0A               	clrf	(btemp+9)^0,c
 25157  017E4C  500B               	movf	(btemp+10)^0,w,c
 25158  017E4E  2609               	addwf	(btemp+8)^0,f,c
 25159  017E50  500C               	movf	(btemp+11)^0,w,c
 25160  017E52  220A               	addwfc	(btemp+9)^0,f,c
 25161  017E54  500A               	movf	(btemp+9)^0,w,c
 25162  017E56  E104               	bnz	u8850
 25163  017E58  0E05               	movlw	5
 25164  017E5A  5C09               	subwf	(btemp+8)^0,w,c
 25165  017E5C  A0D8               	btfss	status,0,c
 25166  017E5E  D002               	goto	l9800
 25167  017E60                     u8850:
 25168                           
 25169                           ;stkvar	_atoi$6544 @ sp[(-9)+4]
 25170  017E60  0EFB               	movlw	-5
 25171  017E62  6AE3               	clrf	plusw1,c
 25172  017E64                     l9800:
 25173                           
 25174                           ;stkvar	_atoi$6544 @ sp[(-9)+4]
 25175  017E64  0EFB               	movlw	-5
 25176  017E66  50E3               	movf	plusw1,w,c
 25177  017E68  6E0B               	movwf	(btemp+10)^0,c
 25178  017E6A  6A0C               	clrf	(btemp+11)^0,c
 25179                           
 25180                           ;stkvar	_atoi$6543 @ sp[(-9)+2]
 25181  017E6C  0EF9               	movlw	-7
 25182  017E6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25183  017E74  0EFA               	movlw	-6
 25184  017E76  0060  F033  FFE3   	movff	btemp+11,plusw1
 25185                           
 25186                           ;stkvar	_atoi$6543 @ sp[(-9)+2]
 25187  017E7C  0EF9               	movlw	-7
 25188  017E7E  006F FF8C  F001    	movff	plusw1,btemp
 25189  017E84  0EFA               	movlw	-6
 25190  017E86  50E3               	movf	plusw1,w,c
 25191  017E88  1001               	iorwf	btemp^0,w,c
 25192  017E8A  B4D8               	btfsc	status,2,c
 25193  017E8C  D01F               	goto	l9810
 25194  017E8E  D79F               	goto	l9790
 25195  017E90                     l9806:
 25196  017E90  0E01               	movlw	1
 25197  017E92  6E0B               	movwf	(btemp+10)^0,c
 25198  017E94  0E00               	movlw	0
 25199  017E96  6E0C               	movwf	(btemp+11)^0,c
 25200                           
 25201                           ;stkvar	_neg @ sp[(-9)+7]
 25202  017E98  0EFE               	movlw	-2
 25203  017E9A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25204  017EA0  0EFF               	movlw	-1
 25205  017EA2  0060  F033  FFE3   	movff	btemp+11,plusw1
 25206  017EA8                     l9808:
 25207                           
 25208                           ;stkvar	_s @ sp[(-9)+-2]
 25209  017EA8  0EF5               	movlw	-11
 25210  017EAA  50E3               	movf	plusw1,w,c
 25211  017EAC  0F01               	addlw	1
 25212  017EAE  6E01               	movwf	btemp^0,c
 25213  017EB0  0EF5               	movlw	-11
 25214  017EB2  0060  F007  FFE3   	movff	btemp,plusw1
 25215  017EB8  6A01               	clrf	btemp^0,c
 25216  017EBA  0EF6               	movlw	-10
 25217  017EBC  50E3               	movf	plusw1,w,c
 25218  017EBE  2001               	addwfc	btemp^0,w,c
 25219  017EC0  6E01               	movwf	btemp^0,c
 25220  017EC2  0EF6               	movlw	-10
 25221  017EC4  0060  F007  FFE3   	movff	btemp,plusw1
 25222  017ECA  D053               	goto	l9816
 25223  017ECC                     l9810:
 25224                           
 25225                           ;stkvar	_s @ sp[(-9)+-2]
 25226  017ECC  50E1               	movf	fsr1l,w,c
 25227  017ECE  0FF5               	addlw	-11
 25228  017ED0  6ED9               	movwf	fsr2l,c
 25229  017ED2  50E2               	movf	fsr1h,w,c
 25230  017ED4  6EDA               	movwf	fsr2h,c
 25231  017ED6  0EFF               	movlw	255
 25232  017ED8  22DA               	addwfc	fsr2h,f,c
 25233  017EDA  006F FF7B FFF6     	movff	postinc2,tblptrl
 25234  017EE0  006F FF77 FFF7     	movff	postdec2,tblptrh
 25235  017EE6                     	if	0	;tblptru may be non-zero
 25236  017EE6                     	endif
 25237  017EE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25238  017EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 25239  017EE8  6EF8               	movwf	tblptru,c
 25240  017EEA                     	endif
 25241  017EEA  0008               	tblrd		*
 25242  017EEC  50F5               	movf	tablat,w,c
 25243  017EEE  6E0B               	movwf	(btemp+10)^0,c
 25244  017EF0  6A0C               	clrf	(btemp+11)^0,c
 25245                           
 25246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25247                           ; Switch size 1, requested type "simple"
 25248                           ; Number of cases is 1, Range of values is 0 to 0
 25249                           ; switch strategies available:
 25250                           ; Name         Instructions Cycles
 25251                           ; simple_byte            4     3 (average)
 25252                           ;	Chosen strategy is simple_byte
 25253  017EF2  500C               	movf	(btemp+11)^0,w,c
 25254  017EF4  0A00               	xorlw	0	; case 0
 25255  017EF6  A4D8               	btfss	status,2,c
 25256  017EF8  D03C               	goto	l9816
 25257                           
 25258                           ; Switch size 1, requested type "simple"
 25259                           ; Number of cases is 2, Range of values is 43 to 45
 25260                           ; switch strategies available:
 25261                           ; Name         Instructions Cycles
 25262                           ; simple_byte            7     4 (average)
 25263                           ;	Chosen strategy is simple_byte
 25264  017EFA  500B               	movf	(btemp+10)^0,w,c
 25265  017EFC  0A2B               	xorlw	43	; case 43
 25266  017EFE  B4D8               	btfsc	status,2,c
 25267  017F00  D7D3               	goto	l9808
 25268  017F02  0A06               	xorlw	6	; case 45
 25269  017F04  B4D8               	btfsc	status,2,c
 25270  017F06  D7C4               	goto	l9806
 25271  017F08  D034               	goto	l9816
 25272  017F0A                     l9812:
 25273                           
 25274                           ;stkvar	_n @ sp[(-9)+5]
 25275  017F0A  0EFC               	movlw	-4
 25276  017F0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 25277  017F12  0EFD               	movlw	-3
 25278  017F14  006F FF8C  F00C    	movff	plusw1,btemp+11
 25279  017F1A  0E0A               	movlw	10
 25280  017F1C  020B               	mulwf	(btemp+10)^0,c
 25281  017F1E  006F FFCC  F009    	movff	prodl,btemp+8
 25282  017F24  006F FFD0  F00A    	movff	prodh,btemp+9
 25283  017F2A  020C               	mulwf	(btemp+11)^0,c
 25284  017F2C  50F3               	movf	prodl,w,c
 25285  017F2E  260A               	addwf	(btemp+9)^0,f,c
 25286                           
 25287                           ;stkvar	_s @ sp[(-9)+-2]
 25288  017F30  50E1               	movf	fsr1l,w,c
 25289  017F32  0FF5               	addlw	-11
 25290  017F34  6ED9               	movwf	fsr2l,c
 25291  017F36  50E2               	movf	fsr1h,w,c
 25292  017F38  6EDA               	movwf	fsr2h,c
 25293  017F3A  0EFF               	movlw	255
 25294  017F3C  22DA               	addwfc	fsr2h,f,c
 25295  017F3E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25296  017F44  006F FF77 FFF7     	movff	postdec2,tblptrh
 25297  017F4A                     	if	0	;tblptru may be non-zero
 25298  017F4A                     	endif
 25299  017F4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25300  017F4A  0E00               	movlw	low (__mediumconst shr (0+16))
 25301  017F4C  6EF8               	movwf	tblptru,c
 25302  017F4E                     	endif
 25303  017F4E  0008               	tblrd		*
 25304  017F50  50F5               	movf	tablat,w,c
 25305  017F52  5E09               	subwf	(btemp+8)^0,f,c
 25306  017F54  0E00               	movlw	0
 25307  017F56  5A0A               	subwfb	(btemp+9)^0,f,c
 25308  017F58  0E30               	movlw	48
 25309  017F5A  2609               	addwf	(btemp+8)^0,f,c
 25310  017F5C  0E00               	movlw	0
 25311  017F5E  220A               	addwfc	(btemp+9)^0,f,c
 25312                           
 25313                           ;stkvar	_n @ sp[(-9)+5]
 25314  017F60  0EFC               	movlw	-4
 25315  017F62  0060  F027  FFE3   	movff	btemp+8,plusw1
 25316  017F68  0EFD               	movlw	-3
 25317  017F6A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25318  017F70  D79B               	goto	l9808
 25319  017F72                     l9816:
 25320  017F72  0ED0               	movlw	208
 25321  017F74  6E0B               	movwf	(btemp+10)^0,c
 25322  017F76  0EFF               	movlw	255
 25323  017F78  6E0C               	movwf	(btemp+11)^0,c
 25324                           
 25325                           ;stkvar	_s @ sp[(-9)+-2]
 25326  017F7A  50E1               	movf	fsr1l,w,c
 25327  017F7C  0FF5               	addlw	-11
 25328  017F7E  6ED9               	movwf	fsr2l,c
 25329  017F80  50E2               	movf	fsr1h,w,c
 25330  017F82  6EDA               	movwf	fsr2h,c
 25331  017F84  0EFF               	movlw	255
 25332  017F86  22DA               	addwfc	fsr2h,f,c
 25333  017F88  006F FF7B FFF6     	movff	postinc2,tblptrl
 25334  017F8E  006F FF77 FFF7     	movff	postdec2,tblptrh
 25335  017F94                     	if	0	;tblptru may be non-zero
 25336  017F94                     	endif
 25337  017F94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25338  017F94  0E00               	movlw	low (__mediumconst shr (0+16))
 25339  017F96  6EF8               	movwf	tblptru,c
 25340  017F98                     	endif
 25341  017F98  0008               	tblrd		*
 25342  017F9A  50F5               	movf	tablat,w,c
 25343  017F9C  6E09               	movwf	(btemp+8)^0,c
 25344  017F9E  6A0A               	clrf	(btemp+9)^0,c
 25345  017FA0  500B               	movf	(btemp+10)^0,w,c
 25346  017FA2  2609               	addwf	(btemp+8)^0,f,c
 25347  017FA4  500C               	movf	(btemp+11)^0,w,c
 25348  017FA6  220A               	addwfc	(btemp+9)^0,f,c
 25349  017FA8  500A               	movf	(btemp+9)^0,w,c
 25350  017FAA  E106               	bnz	u8870
 25351  017FAC  0E0A               	movlw	10
 25352  017FAE  5C09               	subwf	(btemp+8)^0,w,c
 25353  017FB0  B0D8               	btfsc	status,0,c
 25354  017FB2  D002               	goto	u8870
 25355  017FB4  0E01               	movlw	1
 25356  017FB6  D001               	goto	u8880
 25357  017FB8                     u8870:
 25358  017FB8  0E00               	movlw	0
 25359  017FBA                     u8880:
 25360  017FBA  6E0B               	movwf	(btemp+10)^0,c
 25361  017FBC  6A0C               	clrf	(btemp+11)^0,c
 25362                           
 25363                           ;stkvar	_atoi$6545 @ sp[(-9)+0]
 25364  017FBE  0EF7               	movlw	-9
 25365  017FC0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25366  017FC6  0EF8               	movlw	-8
 25367  017FC8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25368                           
 25369                           ;stkvar	_atoi$6545 @ sp[(-9)+0]
 25370  017FCE  0EF7               	movlw	-9
 25371  017FD0  006F FF8C  F001    	movff	plusw1,btemp
 25372  017FD6  0EF8               	movlw	-8
 25373  017FD8  50E3               	movf	plusw1,w,c
 25374  017FDA  1001               	iorwf	btemp^0,w,c
 25375  017FDC  A4D8               	btfss	status,2,c
 25376  017FDE  D795               	goto	l9812
 25377                           
 25378                           ;stkvar	_neg @ sp[(-9)+7]
 25379  017FE0  0EFE               	movlw	-2
 25380  017FE2  006F FF8C  F001    	movff	plusw1,btemp
 25381  017FE8  0EFF               	movlw	-1
 25382  017FEA  50E3               	movf	plusw1,w,c
 25383  017FEC  1001               	iorwf	btemp^0,w,c
 25384  017FEE  A4D8               	btfss	status,2,c
 25385  017FF0  D00E               	goto	l9826
 25386                           
 25387                           ;stkvar	_n @ sp[(-9)+5]
 25388  017FF2  0EFC               	movlw	-4
 25389  017FF4  006F FF8C  F001    	movff	plusw1,btemp
 25390  017FFA  1E01               	comf	btemp^0,f,c
 25391  017FFC  0EFD               	movlw	-3
 25392  017FFE  006F FF8C  F002    	movff	plusw1,btemp+1
 25393  018004  1E02               	comf	(btemp+1)^0,f,c
 25394  018006  2A01               	incf	btemp^0,f,c
 25395  018008  B4D8               	btfsc	status,2,c
 25396  01800A  2A02               	incf	(btemp+1)^0,f,c
 25397  01800C  D008               	goto	l3267
 25398  01800E                     l9826:
 25399                           
 25400                           ;stkvar	_n @ sp[(-9)+5]
 25401  01800E  0EFC               	movlw	-4
 25402  018010  006F FF8C  F001    	movff	plusw1,btemp
 25403  018016  0EFD               	movlw	-3
 25404  018018  006F FF8C  F002    	movff	plusw1,btemp+1
 25405  01801E                     l3267:
 25406                           
 25407                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25408  01801E  0EF5               	movlw	245
 25409  018020  26E1               	addwf	fsr1l,f,c
 25410  018022  0EFF               	movlw	255
 25411  018024  22E2               	addwfc	fsr1h,f,c
 25412  018026  0012               	return		;funcret
 25413  018028                     __end_of_atoi:
 25414                           	opt callstack 0
 25415                           
 25416 ;; *************** function _isspace *****************
 25417 ;; Defined at:
 25418 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 25419 ;; Parameters:    Size  Location     Type
 25420 ;;  c               2  [STACK] int 
 25421 ;; Auto vars:     Size  Location     Type
 25422 ;;		None
 25423 ;; Return value:  Size  Location     Type
 25424 ;;                  2  [STACK] int 
 25425 ;; Registers used:
 25426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 25427 ;; Tracked objects:
 25428 ;;		On entry : 0/0
 25429 ;;		On exit  : 0/0
 25430 ;;		Unchanged: 0/0
 25431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25436 ;;Total ram usage:        0 bytes
 25437 ;; Hardware stack levels used:    1
 25438 ;; Hardware stack levels required when called:   15
 25439 ;; This function calls:
 25440 ;;		Nothing
 25441 ;; This function is called by:
 25442 ;;		_atoi
 25443 ;; This function uses a reentrant model
 25444 ;;
 25445                           
 25446                           	psect	text93
 25447  01BF44                     __ptext93:
 25448                           	opt callstack 0
 25449  01BF44                     _isspace:
 25450                           	opt callstack 0
 25451                           
 25452                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25453  01BF44  52E6               	movf	postinc1,f,c
 25454                           
 25455                           ;stkvar	_isspace$6594 @ sp[(-1)+0]
 25456                           
 25457                           ;incstack = 0
 25458 ;; hardware stack exceeded
 25459  01BF46  0EFF               	movlw	-1
 25460  01BF48  6AE3               	clrf	plusw1,c
 25461  01BF4A  2AE3               	incf	plusw1,f,c
 25462                           
 25463                           ;stkvar	_c @ sp[(-1)+-2]
 25464  01BF4C  0EFD               	movlw	-3
 25465  01BF4E  006F FF8C  F001    	movff	plusw1,btemp
 25466  01BF54  0E20               	movlw	32
 25467  01BF56  1801               	xorwf	btemp^0,w,c
 25468  01BF58  E104               	bnz	u7740
 25469  01BF5A  0EFE               	movlw	-2
 25470  01BF5C  50E3               	movf	plusw1,w,c
 25471  01BF5E  B4D8               	btfsc	status,2,c
 25472  01BF60  D012               	goto	l9210
 25473  01BF62                     u7740:
 25474                           
 25475                           ;stkvar	_c @ sp[(-1)+-2]
 25476  01BF62  0EFD               	movlw	-3
 25477  01BF64  50E3               	movf	plusw1,w,c
 25478  01BF66  0FF7               	addlw	247
 25479  01BF68  6E0B               	movwf	(btemp+10)^0,c
 25480  01BF6A  0EFE               	movlw	-2
 25481  01BF6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25482  01BF72  0EFF               	movlw	255
 25483  01BF74  220C               	addwfc	(btemp+11)^0,f,c
 25484  01BF76  500C               	movf	(btemp+11)^0,w,c
 25485  01BF78  E104               	bnz	u7750
 25486  01BF7A  0E05               	movlw	5
 25487  01BF7C  5C0B               	subwf	(btemp+10)^0,w,c
 25488  01BF7E  A0D8               	btfss	status,0,c
 25489  01BF80  D002               	goto	l9210
 25490  01BF82                     u7750:
 25491                           
 25492                           ;stkvar	_isspace$6594 @ sp[(-1)+0]
 25493  01BF82  0EFF               	movlw	-1
 25494  01BF84  6AE3               	clrf	plusw1,c
 25495  01BF86                     l9210:
 25496                           
 25497                           ;stkvar	_isspace$6594 @ sp[(-1)+0]
 25498  01BF86  0EFF               	movlw	-1
 25499  01BF88  50E3               	movf	plusw1,w,c
 25500  01BF8A  6E01               	movwf	btemp^0,c
 25501  01BF8C  6A02               	clrf	(btemp+1)^0,c
 25502                           
 25503                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 25504  01BF8E  52E5               	movf	postdec1,f,c
 25505  01BF90  52E5               	movf	postdec1,f,c
 25506  01BF92  52E5               	movf	postdec1,f,c
 25507  01BF94  0012               	return		;funcret
 25508  01BF96                     __end_of_isspace:
 25509                           	opt callstack 0
 25510                           
 25511 ;; *************** function _isdigit *****************
 25512 ;; Defined at:
 25513 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 25514 ;; Parameters:    Size  Location     Type
 25515 ;;  c               2  [STACK] int 
 25516 ;; Auto vars:     Size  Location     Type
 25517 ;;		None
 25518 ;; Return value:  Size  Location     Type
 25519 ;;                  2  [STACK] int 
 25520 ;; Registers used:
 25521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 25522 ;; Tracked objects:
 25523 ;;		On entry : 0/0
 25524 ;;		On exit  : 0/0
 25525 ;;		Unchanged: 0/0
 25526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25531 ;;Total ram usage:        0 bytes
 25532 ;; Hardware stack levels used:    1
 25533 ;; Hardware stack levels required when called:   15
 25534 ;; This function calls:
 25535 ;;		Nothing
 25536 ;; This function is called by:
 25537 ;;		_vfpfcnvrt
 25538 ;;		_atoi
 25539 ;; This function uses a reentrant model
 25540 ;;
 25541                           
 25542                           	psect	text94
 25543  01C726                     __ptext94:
 25544                           	opt callstack 0
 25545  01C726                     _isdigit:
 25546                           	opt callstack 0
 25547                           
 25548                           ;stkvar	_c @ sp[(0)+-2]
 25549                           
 25550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25551                           ;incstack = 0
 25552 ;; hardware stack exceeded
 25553  01C726  0EFE               	movlw	-2
 25554  01C728  50E3               	movf	plusw1,w,c
 25555  01C72A  0FD0               	addlw	208
 25556  01C72C  6E0B               	movwf	(btemp+10)^0,c
 25557  01C72E  0EFF               	movlw	-1
 25558  01C730  006F FF8C  F00C    	movff	plusw1,btemp+11
 25559  01C736  0EFF               	movlw	255
 25560  01C738  220C               	addwfc	(btemp+11)^0,f,c
 25561  01C73A  500C               	movf	(btemp+11)^0,w,c
 25562  01C73C  E106               	bnz	u6590
 25563  01C73E  0E0A               	movlw	10
 25564  01C740  5C0B               	subwf	(btemp+10)^0,w,c
 25565  01C742  B0D8               	btfsc	status,0,c
 25566  01C744  D002               	goto	u6590
 25567  01C746  0E01               	movlw	1
 25568  01C748  D001               	goto	u6600
 25569  01C74A                     u6590:
 25570  01C74A  0E00               	movlw	0
 25571  01C74C                     u6600:
 25572  01C74C  6E01               	movwf	btemp^0,c
 25573  01C74E  6A02               	clrf	(btemp+1)^0,c
 25574                           
 25575                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 25576  01C750  52E5               	movf	postdec1,f,c
 25577  01C752  52E5               	movf	postdec1,f,c
 25578  01C754  0012               	return		;funcret
 25579  01C756                     __end_of_isdigit:
 25580                           	opt callstack 0
 25581                           
 25582 ;; *************** function _set_vterm *****************
 25583 ;; Defined at:
 25584 ;;		line 107 in file "mconfig.c"
 25585 ;; Parameters:    Size  Location     Type
 25586 ;;  vterm           1  [STACK] const unsigned char 
 25587 ;; Auto vars:     Size  Location     Type
 25588 ;;		None
 25589 ;; Return value:  Size  Location     Type
 25590 ;;                  1  [STACK] unsigned char 
 25591 ;; Registers used:
 25592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 25593 ;; Tracked objects:
 25594 ;;		On entry : 0/2
 25595 ;;		On exit  : 0/0
 25596 ;;		Unchanged: 0/0
 25597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25602 ;;Total ram usage:        0 bytes
 25603 ;; Hardware stack levels used:    1
 25604 ;; Hardware stack levels required when called:   15
 25605 ;; This function calls:
 25606 ;;		Nothing
 25607 ;; This function is called by:
 25608 ;;		_main
 25609 ;;		_check_help
 25610 ;; This function uses a reentrant model
 25611 ;;
 25612                           
 25613                           	psect	text95
 25614  01CC46                     __ptext95:
 25615                           	opt callstack 0
 25616  01CC46                     _set_vterm:
 25617                           	opt callstack 15
 25618                           
 25619                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 25620                           ;stkvar	_vterm @ sp[(0)+-1]
 25621                           
 25622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25623                           ;incstack = 0
 25624  01CC46  0EFF               	movlw	-1
 25625  01CC48  006F FF8C  F00C    	movff	plusw1,btemp+11
 25626  01CC4E  0E03               	movlw	3
 25627  01CC50  160C               	andwf	(btemp+11)^0,f,c
 25628  01CC52  EE22  F20A         	lfsr	2,_D+480
 25629  01CC56  50DF               	movf	223,w,c
 25630  01CC58  180C               	xorwf	(btemp+11)^0,w,c
 25631  01CC5A  0BFE               	andlw	-2
 25632  01CC5C  180C               	xorwf	(btemp+11)^0,w,c
 25633  01CC5E  6EDF               	movwf	223,c
 25634                           
 25635                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 25636  01CC60  52E5               	movf	postdec1,f,c
 25637  01CC62  0012               	return		;funcret
 25638  01CC64                     __end_of_set_vterm:
 25639                           	opt callstack 0
 25640                           
 25641 ;; *************** function _set_temp_display_help *****************
 25642 ;; Defined at:
 25643 ;;		line 211 in file "mconfig.c"
 25644 ;; Parameters:    Size  Location     Type
 25645 ;;  new_response    1  [STACK] const enum E16509
 25646 ;; Auto vars:     Size  Location     Type
 25647 ;;		None
 25648 ;; Return value:  Size  Location     Type
 25649 ;;                  1  [STACK] enum E16509
 25650 ;; Registers used:
 25651 ;;		wreg, fsr1l, fsr1h
 25652 ;; Tracked objects:
 25653 ;;		On entry : 0/1
 25654 ;;		On exit  : 3F/1
 25655 ;;		Unchanged: 0/0
 25656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25661 ;;Total ram usage:        0 bytes
 25662 ;; Hardware stack levels used:    1
 25663 ;; Hardware stack levels required when called:   15
 25664 ;; This function calls:
 25665 ;;		Nothing
 25666 ;; This function is called by:
 25667 ;;		_check_help
 25668 ;; This function uses a reentrant model
 25669 ;;
 25670                           
 25671                           	psect	text96
 25672  01CDA4                     __ptext96:
 25673                           	opt callstack 0
 25674  01CDA4                     _set_temp_display_help:
 25675                           	opt callstack 14
 25676                           
 25677                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 25678                           
 25679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25680                           ;incstack = 0
 25681  01CDA4  0101               	movlb	1	; () banked
 25682  01CDA6  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 25683                           
 25684                           ; BSR set to: 1
 25685                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 25686                           ;stkvar	_new_response_info @ sp[(0)+-1]
 25687  01CDA8  0EFF               	movlw	-1
 25688  01CDAA  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 25689                           
 25690                           ; BSR set to: 1
 25691                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 25692  01CDB0  52E5               	movf	postdec1,f,c
 25693  01CDB2  0012               	return		;funcret
 25694  01CDB4                     __end_of_set_temp_display_help:
 25695                           	opt callstack 0
 25696                           
 25697 ;; *************** function _set_display_info *****************
 25698 ;; Defined at:
 25699 ;;		line 200 in file "mconfig.c"
 25700 ;; Parameters:    Size  Location     Type
 25701 ;;  new_response    1  [STACK] const enum E16509
 25702 ;; Auto vars:     Size  Location     Type
 25703 ;;		None
 25704 ;; Return value:  Size  Location     Type
 25705 ;;                  1  [STACK] enum E16994
 25706 ;; Registers used:
 25707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25708 ;; Tracked objects:
 25709 ;;		On entry : 0/1
 25710 ;;		On exit  : 0/0
 25711 ;;		Unchanged: 0/0
 25712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25717 ;;Total ram usage:        0 bytes
 25718 ;; Hardware stack levels used:    1
 25719 ;; Hardware stack levels required when called:   16
 25720 ;; This function calls:
 25721 ;;		_TimerDone
 25722 ;; This function is called by:
 25723 ;;		_main
 25724 ;;		_check_help
 25725 ;; This function uses a reentrant model
 25726 ;;
 25727                           
 25728                           	psect	text97
 25729  01CC64                     __ptext97:
 25730                           	opt callstack 0
 25731  01CC64                     _set_display_info:
 25732                           	opt callstack 14
 25733                           
 25734                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 25735                           
 25736                           ; BSR set to: 1
 25737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25738                           ;incstack = 0
 25739  01CC64  0E07               	movlw	7
 25740  01CC66  6EE6               	movwf	postinc1,c
 25741  01CC68  EC2D  F0E4         	call	_TimerDone	;wreg free
 25742  01CC6C  5001               	movf	btemp^0,w,c
 25743  01CC6E  B4D8               	btfsc	status,2,c
 25744  01CC70  D006               	goto	l1755
 25745                           
 25746                           ;mconfig.c: 205:   old_info = V.response.info;
 25747  01CC72  0101               	movlb	1	; () banked
 25748  01CC74  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 25749                           
 25750                           ; BSR set to: 1
 25751                           ;mconfig.c: 206:   V.response.info = new_response_info;
 25752                           ;stkvar	_new_response_info @ sp[(0)+-1]
 25753  01CC76  0EFF               	movlw	-1
 25754  01CC78  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 25755  01CC7E                     l1755:
 25756                           
 25757                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25758  01CC7E  52E5               	movf	postdec1,f,c
 25759  01CC80  0012               	return		;funcret
 25760  01CC82                     __end_of_set_display_info:
 25761                           	opt callstack 0
 25762                           
 25763 ;; *************** function _mode_lamp_dim *****************
 25764 ;; Defined at:
 25765 ;;		line 13 in file "mconfig.c"
 25766 ;; Parameters:    Size  Location     Type
 25767 ;;  level           2  [STACK] const unsigned short 
 25768 ;; Auto vars:     Size  Location     Type
 25769 ;;		None
 25770 ;; Return value:  Size  Location     Type
 25771 ;;                  1  [STACK] void 
 25772 ;; Registers used:
 25773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25774 ;; Tracked objects:
 25775 ;;		On entry : 0/1
 25776 ;;		On exit  : 0/0
 25777 ;;		Unchanged: 0/0
 25778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25783 ;;Total ram usage:        0 bytes
 25784 ;; Hardware stack levels used:    1
 25785 ;; Hardware stack levels required when called:   16
 25786 ;; This function calls:
 25787 ;;		_PWM8_LoadDutyValue
 25788 ;; This function is called by:
 25789 ;;		_main
 25790 ;;		_check_help
 25791 ;; This function uses a reentrant model
 25792 ;;
 25793                           
 25794                           	psect	text98
 25795  01CCD6                     __ptext98:
 25796                           	opt callstack 0
 25797  01CCD6                     _mode_lamp_dim:
 25798                           	opt callstack 14
 25799                           
 25800                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 25801                           ;stkvar	_level @ sp[(0)+-2]
 25802                           
 25803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25804                           ;incstack = 0
 25805  01CCD6  0EFE               	movlw	-2
 25806  01CCD8  006F FF8F FFE6     	movff	plusw1,postinc1
 25807  01CCDE  006F FF8F FFE6     	movff	plusw1,postinc1
 25808  01CCE4  EC5D  F0E1         	call	_PWM8_LoadDutyValue	;wreg free
 25809                           
 25810                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 25811  01CCE8  52E5               	movf	postdec1,f,c
 25812  01CCEA  52E5               	movf	postdec1,f,c
 25813  01CCEC  0012               	return		;funcret
 25814  01CCEE                     __end_of_mode_lamp_dim:
 25815                           	opt callstack 0
 25816                           
 25817 ;; *************** function _mode_lamp_bright *****************
 25818 ;; Defined at:
 25819 ;;		line 18 in file "mconfig.c"
 25820 ;; Parameters:    Size  Location     Type
 25821 ;;		None
 25822 ;; Auto vars:     Size  Location     Type
 25823 ;;		None
 25824 ;; Return value:  Size  Location     Type
 25825 ;;                  1  [STACK] void 
 25826 ;; Registers used:
 25827 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25828 ;; Tracked objects:
 25829 ;;		On entry : 0/0
 25830 ;;		On exit  : 0/0
 25831 ;;		Unchanged: 0/0
 25832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25837 ;;Total ram usage:        0 bytes
 25838 ;; Hardware stack levels used:    1
 25839 ;; Hardware stack levels required when called:   16
 25840 ;; This function calls:
 25841 ;;		_PWM8_LoadDutyValue
 25842 ;; This function is called by:
 25843 ;;		_check_help
 25844 ;; This function uses a reentrant model
 25845 ;;
 25846                           
 25847                           	psect	text99
 25848  01CDD2                     __ptext99:
 25849                           	opt callstack 0
 25850  01CDD2                     _mode_lamp_bright:
 25851                           	opt callstack 13
 25852                           
 25853                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 25854                           
 25855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25856                           ;incstack = 0
 25857  01CDD2  0E2C               	movlw	44
 25858  01CDD4  6EE6               	movwf	postinc1,c
 25859  01CDD6  0E01               	movlw	1
 25860  01CDD8  6EE6               	movwf	postinc1,c
 25861  01CDDA  EC5D  F0E1         	call	_PWM8_LoadDutyValue	;wreg free
 25862                           
 25863                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 25864  01CDDE  0012               	return		;funcret
 25865  01CDE0                     __end_of_mode_lamp_bright:
 25866                           	opt callstack 0
 25867                           
 25868 ;; *************** function _PWM8_LoadDutyValue *****************
 25869 ;; Defined at:
 25870 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 25871 ;; Parameters:    Size  Location     Type
 25872 ;;  dutyValue       2  [STACK] unsigned short 
 25873 ;; Auto vars:     Size  Location     Type
 25874 ;;		None
 25875 ;; Return value:  Size  Location     Type
 25876 ;;                  1  [STACK] void 
 25877 ;; Registers used:
 25878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25879 ;; Tracked objects:
 25880 ;;		On entry : 0/1
 25881 ;;		On exit  : 0/0
 25882 ;;		Unchanged: 0/0
 25883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25888 ;;Total ram usage:        0 bytes
 25889 ;; Hardware stack levels used:    1
 25890 ;; Hardware stack levels required when called:   15
 25891 ;; This function calls:
 25892 ;;		Nothing
 25893 ;; This function is called by:
 25894 ;;		_mode_lamp_dim
 25895 ;;		_mode_lamp_bright
 25896 ;; This function uses a reentrant model
 25897 ;;
 25898                           
 25899                           	psect	text100
 25900  01C2BA                     __ptext100:
 25901                           	opt callstack 0
 25902  01C2BA                     _PWM8_LoadDutyValue:
 25903                           	opt callstack 14
 25904                           
 25905                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 25906                           ;stkvar	_dutyValue @ sp[(0)+-2]
 25907                           
 25908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25909                           ;incstack = 0
 25910  01C2BA  0EFE               	movlw	-2
 25911  01C2BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 25912  01C2C2  0EFF               	movlw	-1
 25913  01C2C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25914  01C2CA  90D8               	bcf	status,0,c
 25915  01C2CC  320C               	rrcf	(btemp+11)^0,f,c
 25916  01C2CE  320B               	rrcf	(btemp+10)^0,f,c
 25917  01C2D0  90D8               	bcf	status,0,c
 25918  01C2D2  320C               	rrcf	(btemp+11)^0,f,c
 25919  01C2D4  320B               	rrcf	(btemp+10)^0,f,c
 25920  01C2D6  500B               	movf	(btemp+10)^0,w,c
 25921  01C2D8  6E61               	movwf	97,c	;volatile
 25922                           
 25923                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 25924                           ;stkvar	_dutyValue @ sp[(0)+-2]
 25925  01C2DA  0EFE               	movlw	-2
 25926  01C2DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25927  01C2E2  0E03               	movlw	3
 25928  01C2E4  160C               	andwf	(btemp+11)^0,f,c
 25929  01C2E6  0E06               	movlw	6
 25930  01C2E8  6E01               	movwf	btemp^0,c
 25931  01C2EA                     u9725:
 25932  01C2EA  90D8               	bcf	status,0,c
 25933  01C2EC  360C               	rlcf	(btemp+11)^0,f,c
 25934  01C2EE  2E01               	decfsz	btemp^0,f,c
 25935  01C2F0  D7FC               	goto	u9725
 25936  01C2F2  500C               	movf	(btemp+11)^0,w,c
 25937  01C2F4  6E60               	movwf	96,c	;volatile
 25938                           
 25939                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25940  01C2F6  52E5               	movf	postdec1,f,c
 25941  01C2F8  52E5               	movf	postdec1,f,c
 25942  01C2FA  0012               	return		;funcret
 25943  01C2FC                     __end_of_PWM8_LoadDutyValue:
 25944                           	opt callstack 0
 25945                           
 25946 ;; *************** function _help_button *****************
 25947 ;; Defined at:
 25948 ;;		line 26 in file "mconfig.c"
 25949 ;; Parameters:    Size  Location     Type
 25950 ;;		None
 25951 ;; Auto vars:     Size  Location     Type
 25952 ;;		None
 25953 ;; Return value:  Size  Location     Type
 25954 ;;                  1  [STACK] _Bool 
 25955 ;; Registers used:
 25956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25957 ;; Tracked objects:
 25958 ;;		On entry : 0/1
 25959 ;;		On exit  : 0/0
 25960 ;;		Unchanged: 0/0
 25961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25966 ;;Total ram usage:        0 bytes
 25967 ;; Hardware stack levels used:    1
 25968 ;; Hardware stack levels required when called:   16
 25969 ;; This function calls:
 25970 ;;		_StartTimer
 25971 ;;		_TimerDone
 25972 ;; This function is called by:
 25973 ;;		_check_help
 25974 ;; This function uses a reentrant model
 25975 ;;
 25976                           
 25977                           	psect	text101
 25978  01C4EE                     __ptext101:
 25979                           	opt callstack 0
 25980  01C4EE                     _help_button:
 25981                           	opt callstack 13
 25982                           
 25983                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 25984                           
 25985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25986                           ;incstack = 0
 25987  01C4EE  B0CB               	btfsc	203,0,c	;volatile
 25988  01C4F0  D00C               	goto	l1698
 25989                           
 25990                           ;mconfig.c: 29:   V.help = 1;
 25991  01C4F2  0101               	movlb	1	; () banked
 25992  01C4F4  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 25993                           
 25994                           ; BSR set to: 1
 25995                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 25996  01C4F6  0E08               	movlw	8
 25997  01C4F8  6EE6               	movwf	postinc1,c
 25998  01C4FA  EC2D  F0E4         	call	_TimerDone	;wreg free
 25999  01C4FE  5001               	movf	btemp^0,w,c
 26000  01C500  B4D8               	btfsc	status,2,c
 26001  01C502  D003               	goto	l1698
 26002                           
 26003                           ;mconfig.c: 31:    return 1;
 26004  01C504  0E01               	movlw	1
 26005  01C506  6E01               	movwf	btemp^0,c
 26006  01C508  0012               	return	
 26007  01C50A                     l1698:
 26008                           
 26009                           ;mconfig.c: 34:  if (!V.help)
 26010  01C50A  0101               	movlb	1	; () banked
 26011  01C50C  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 26012  01C50E  D008               	goto	l11048
 26013                           
 26014                           ; BSR set to: 1
 26015                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 26016  01C510  0E2C               	movlw	44
 26017  01C512  6EE6               	movwf	postinc1,c
 26018  01C514  0E01               	movlw	1
 26019  01C516  6EE6               	movwf	postinc1,c
 26020  01C518  0E08               	movlw	8
 26021  01C51A  6EE6               	movwf	postinc1,c
 26022  01C51C  ECBE  F0E1         	call	_StartTimer	;wreg free
 26023  01C520                     l11048:
 26024                           
 26025                           ;mconfig.c: 37:  return 0;
 26026  01C520  0E00               	movlw	0
 26027  01C522  6E01               	movwf	btemp^0,c
 26028                           
 26029                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 26030  01C524  0012               	return		;funcret
 26031  01C526                     __end_of_help_button:
 26032                           	opt callstack 0
 26033                           
 26034 ;; *************** function _TimerDone *****************
 26035 ;; Defined at:
 26036 ;;		line 20 in file "timers.c"
 26037 ;; Parameters:    Size  Location     Type
 26038 ;;  timer           1  [STACK] const unsigned char 
 26039 ;; Auto vars:     Size  Location     Type
 26040 ;;		None
 26041 ;; Return value:  Size  Location     Type
 26042 ;;                  1  [STACK] _Bool 
 26043 ;; Registers used:
 26044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26045 ;; Tracked objects:
 26046 ;;		On entry : 0/1
 26047 ;;		On exit  : 0/0
 26048 ;;		Unchanged: 0/0
 26049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26054 ;;Total ram usage:        0 bytes
 26055 ;; Hardware stack levels used:    1
 26056 ;; Hardware stack levels required when called:   15
 26057 ;; This function calls:
 26058 ;;		Nothing
 26059 ;; This function is called by:
 26060 ;;		_main
 26061 ;;		_WaitMs
 26062 ;;		_help_button
 26063 ;;		_check_help
 26064 ;;		_set_display_info
 26065 ;;		_update_adc_result
 26066 ;;		_esr_check
 26067 ;; This function uses a reentrant model
 26068 ;;
 26069                           
 26070                           	psect	text102
 26071  01C85A                     __ptext102:
 26072                           	opt callstack 0
 26073  01C85A                     _TimerDone:
 26074                           	opt callstack 14
 26075                           
 26076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26077                           ;incstack = 0
 26078  01C85A  0004               	clrwdt		;# 
 26079                           
 26080                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 26081                           ;stkvar	_timer @ sp[(0)+-1]
 26082  01C85C  0EFF               	movlw	-1
 26083  01C85E  50E3               	movf	plusw1,w,c
 26084  01C860  0D02               	mullw	2
 26085  01C862  0E7D               	movlw	low _tickCount
 26086  01C864  24F3               	addwf	243,w,c
 26087  01C866  6ED9               	movwf	fsr2l,c
 26088  01C868  0E02               	movlw	high _tickCount
 26089  01C86A  20F4               	addwfc	prodh,w,c
 26090  01C86C  6EDA               	movwf	fsr2h,c
 26091  01C86E  50DE               	movf	postinc2,w,c
 26092  01C870  10DE               	iorwf	postinc2,w,c
 26093  01C872  A4D8               	btfss	status,2,c
 26094  01C874  D002               	goto	l10224
 26095                           
 26096                           ;timers.c: 24:   return 1;
 26097  01C876  0E01               	movlw	1
 26098  01C878  D001               	goto	L31
 26099  01C87A                     l10224:
 26100                           
 26101                           ;timers.c: 26:  return 0;
 26102  01C87A  0E00               	movlw	0
 26103  01C87C                     L31:
 26104  01C87C  6E01               	movwf	btemp^0,c
 26105                           
 26106                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 26107  01C87E  52E5               	movf	postdec1,f,c
 26108  01C880  0012               	return		;funcret
 26109  01C882                     __end_of_TimerDone:
 26110                           	opt callstack 0
 26111                           
 26112 ;; *************** function _StartTimer *****************
 26113 ;; Defined at:
 26114 ;;		line 12 in file "timers.c"
 26115 ;; Parameters:    Size  Location     Type
 26116 ;;  timer           1  [STACK] const unsigned char 
 26117 ;;  count           2  [STACK] const unsigned short 
 26118 ;; Auto vars:     Size  Location     Type
 26119 ;;		None
 26120 ;; Return value:  Size  Location     Type
 26121 ;;                  1  [STACK] void 
 26122 ;; Registers used:
 26123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26124 ;; Tracked objects:
 26125 ;;		On entry : 0/0
 26126 ;;		On exit  : 0/0
 26127 ;;		Unchanged: 0/0
 26128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26133 ;;Total ram usage:        0 bytes
 26134 ;; Hardware stack levels used:    1
 26135 ;; Hardware stack levels required when called:   15
 26136 ;; This function calls:
 26137 ;;		Nothing
 26138 ;; This function is called by:
 26139 ;;		_main
 26140 ;;		_WaitMs
 26141 ;;		_help_button
 26142 ;;		_check_help
 26143 ;;		_update_adc_result
 26144 ;;		_calc_bsoc
 26145 ;;		_esr_check
 26146 ;; This function uses a reentrant model
 26147 ;;
 26148                           
 26149                           	psect	text103
 26150  01C37C                     __ptext103:
 26151                           	opt callstack 0
 26152  01C37C                     _StartTimer:
 26153                           	opt callstack 0
 26154                           
 26155                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 26156                           ;stkvar	_count @ sp[(0)+-3]
 26157                           
 26158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26159                           ;incstack = 0
 26160 ;; hardware stack exceeded
 26161  01C37C  0EFD               	movlw	-3
 26162  01C37E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26163  01C384  0EFE               	movlw	-2
 26164  01C386  006F FF8C  F00C    	movff	plusw1,btemp+11
 26165  01C38C  90D8               	bcf	status,0,c
 26166  01C38E  340B               	rlcf	(btemp+10)^0,w,c
 26167  01C390  6E09               	movwf	(btemp+8)^0,c
 26168  01C392  340C               	rlcf	(btemp+11)^0,w,c
 26169  01C394  6E0A               	movwf	(btemp+9)^0,c
 26170                           
 26171                           ;stkvar	_timer @ sp[(0)+-1]
 26172  01C396  0EFF               	movlw	-1
 26173  01C398  50E3               	movf	plusw1,w,c
 26174  01C39A  0D02               	mullw	2
 26175  01C39C  0E7D               	movlw	low _tickCount
 26176  01C39E  24F3               	addwf	243,w,c
 26177  01C3A0  6ED9               	movwf	fsr2l,c
 26178  01C3A2  0E02               	movlw	high _tickCount
 26179  01C3A4  20F4               	addwfc	prodh,w,c
 26180  01C3A6  6EDA               	movwf	fsr2h,c
 26181  01C3A8  0060  F027  FFDE   	movff	btemp+8,postinc2
 26182  01C3AE  0060  F02B  FFDD   	movff	btemp+9,postdec2
 26183                           
 26184                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 26185  01C3B4  52E5               	movf	postdec1,f,c
 26186  01C3B6  52E5               	movf	postdec1,f,c
 26187  01C3B8  52E5               	movf	postdec1,f,c
 26188  01C3BA  0012               	return		;funcret
 26189  01C3BC                     __end_of_StartTimer:
 26190                           	opt callstack 0
 26191                           
 26192 ;; *************** function _display_info *****************
 26193 ;; Defined at:
 26194 ;;		line 190 in file "mconfig.c"
 26195 ;; Parameters:    Size  Location     Type
 26196 ;;		None
 26197 ;; Auto vars:     Size  Location     Type
 26198 ;;		None
 26199 ;; Return value:  Size  Location     Type
 26200 ;;                  1  [STACK] enum E16509
 26201 ;; Registers used:
 26202 ;;		btemp
 26203 ;; Tracked objects:
 26204 ;;		On entry : 0/1
 26205 ;;		On exit  : 0/0
 26206 ;;		Unchanged: 0/0
 26207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26212 ;;Total ram usage:        0 bytes
 26213 ;; Hardware stack levels used:    1
 26214 ;; Hardware stack levels required when called:   15
 26215 ;; This function calls:
 26216 ;;		Nothing
 26217 ;; This function is called by:
 26218 ;;		_check_help
 26219 ;; This function uses a reentrant model
 26220 ;;
 26221                           
 26222                           	psect	text104
 26223  01CE56                     __ptext104:
 26224                           	opt callstack 0
 26225  01CE56                     _display_info:
 26226                           	opt callstack 14
 26227                           
 26228                           ;mconfig.c: 192:  return V.response.info;
 26229                           
 26230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26231                           ;incstack = 0
 26232  01CE56  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 26233                           
 26234                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 26235  01CE5C  0012               	return		;funcret
 26236  01CE5E                     __end_of_display_info:
 26237                           	opt callstack 0
 26238                           
 26239 ;; *************** function _display_help *****************
 26240 ;; Defined at:
 26241 ;;		line 195 in file "mconfig.c"
 26242 ;; Parameters:    Size  Location     Type
 26243 ;;		None
 26244 ;; Auto vars:     Size  Location     Type
 26245 ;;		None
 26246 ;; Return value:  Size  Location     Type
 26247 ;;                  1  [STACK] enum E16509
 26248 ;; Registers used:
 26249 ;;		btemp
 26250 ;; Tracked objects:
 26251 ;;		On entry : 3F/1
 26252 ;;		On exit  : 0/0
 26253 ;;		Unchanged: 0/0
 26254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26259 ;;Total ram usage:        0 bytes
 26260 ;; Hardware stack levels used:    1
 26261 ;; Hardware stack levels required when called:   15
 26262 ;; This function calls:
 26263 ;;		Nothing
 26264 ;; This function is called by:
 26265 ;;		_check_help
 26266 ;; This function uses a reentrant model
 26267 ;;
 26268                           
 26269                           	psect	text105
 26270  01CE5E                     __ptext105:
 26271                           	opt callstack 0
 26272  01CE5E                     _display_help:
 26273                           	opt callstack 14
 26274                           
 26275                           ;mconfig.c: 197:  return V.response.help_temp;
 26276                           
 26277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26278                           ;incstack = 0
 26279  01CE5E  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 26280                           
 26281                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 26282  01CE64  0012               	return		;funcret
 26283  01CE66                     __end_of_display_help:
 26284                           	opt callstack 0
 26285                           
 26286 ;; *************** function _check_enter_button *****************
 26287 ;; Defined at:
 26288 ;;		line 49 in file "hid.c"
 26289 ;; Parameters:    Size  Location     Type
 26290 ;;  h               2  [STACK] PTR struct H_data
 26291 ;;		 -> H(9), 
 26292 ;; Auto vars:     Size  Location     Type
 26293 ;;		None
 26294 ;; Return value:  Size  Location     Type
 26295 ;;                  1  [STACK] _Bool 
 26296 ;; Registers used:
 26297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 26298 ;; Tracked objects:
 26299 ;;		On entry : 0/0
 26300 ;;		On exit  : 0/0
 26301 ;;		Unchanged: 0/0
 26302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26307 ;;Total ram usage:        0 bytes
 26308 ;; Hardware stack levels used:    1
 26309 ;; Hardware stack levels required when called:   15
 26310 ;; This function calls:
 26311 ;;		Nothing
 26312 ;; This function is called by:
 26313 ;;		_main
 26314 ;; This function uses a reentrant model
 26315 ;;
 26316                           
 26317                           	psect	text106
 26318  01B9CA                     __ptext106:
 26319                           	opt callstack 0
 26320  01B9CA                     _check_enter_button:
 26321                           	opt callstack 15
 26322                           
 26323                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 26324                           ;stkvar	_h @ sp[(0)+-2]
 26325                           
 26326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26327                           ;incstack = 0
 26328  01B9CA  0EFE               	movlw	-2
 26329  01B9CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 26330  01B9D2  0EFF               	movlw	-1
 26331  01B9D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26332  01B9DA  0E04               	movlw	4
 26333  01B9DC  240B               	addwf	(btemp+10)^0,w,c
 26334  01B9DE  6ED9               	movwf	fsr2l,c
 26335  01B9E0  0E00               	movlw	0
 26336  01B9E2  200C               	addwfc	(btemp+11)^0,w,c
 26337  01B9E4  6EDA               	movwf	fsr2h,c
 26338  01B9E6  50DF               	movf	indf2,w,c
 26339  01B9E8  A4D8               	btfss	status,2,c
 26340  01B9EA  D023               	goto	l13890
 26341                           
 26342                           ;stkvar	_h @ sp[(0)+-2]
 26343  01B9EC  0EFE               	movlw	-2
 26344  01B9EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 26345  01B9F4  0EFF               	movlw	-1
 26346  01B9F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26347  01B9FC  0E05               	movlw	5
 26348  01B9FE  240B               	addwf	(btemp+10)^0,w,c
 26349  01BA00  6ED9               	movwf	fsr2l,c
 26350  01BA02  0E00               	movlw	0
 26351  01BA04  200C               	addwfc	(btemp+11)^0,w,c
 26352  01BA06  6EDA               	movwf	fsr2h,c
 26353  01BA08  50DF               	movf	indf2,w,c
 26354  01BA0A  A4D8               	btfss	status,2,c
 26355  01BA0C  D012               	goto	l13890
 26356                           
 26357                           ;hid.c: 52:   h->wait_enter = 1;
 26358                           ;stkvar	_h @ sp[(0)+-2]
 26359  01BA0E  0EFE               	movlw	-2
 26360  01BA10  006F FF8C  F00B    	movff	plusw1,btemp+10
 26361  01BA16  0EFF               	movlw	-1
 26362  01BA18  006F FF8C  F00C    	movff	plusw1,btemp+11
 26363  01BA1E  0E04               	movlw	4
 26364  01BA20  240B               	addwf	(btemp+10)^0,w,c
 26365  01BA22  6ED9               	movwf	fsr2l,c
 26366  01BA24  0E00               	movlw	0
 26367  01BA26  200C               	addwfc	(btemp+11)^0,w,c
 26368  01BA28  6EDA               	movwf	fsr2h,c
 26369  01BA2A  0E01               	movlw	1
 26370  01BA2C  6EDF               	movwf	indf2,c
 26371                           
 26372                           ;hid.c: 53:   return 1;
 26373  01BA2E  0E01               	movlw	1
 26374  01BA30  D001               	goto	L32
 26375  01BA32                     l13890:
 26376                           
 26377                           ;hid.c: 55:  return 0;
 26378  01BA32  0E00               	movlw	0
 26379  01BA34                     L32:
 26380  01BA34  6E01               	movwf	btemp^0,c
 26381                           
 26382                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 26383  01BA36  52E5               	movf	postdec1,f,c
 26384  01BA38  52E5               	movf	postdec1,f,c
 26385  01BA3A  0012               	return		;funcret
 26386  01BA3C                     __end_of_check_enter_button:
 26387                           	opt callstack 0
 26388                           
 26389 ;; *************** function _calc_ror_data *****************
 26390 ;; Defined at:
 26391 ;;		line 102 in file "mbmc.c"
 26392 ;; Parameters:    Size  Location     Type
 26393 ;;		None
 26394 ;; Auto vars:     Size  Location     Type
 26395 ;;		None
 26396 ;; Return value:  Size  Location     Type
 26397 ;;                  1  [STACK] void 
 26398 ;; Registers used:
 26399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26400 ;; Tracked objects:
 26401 ;;		On entry : 0/0
 26402 ;;		On exit  : 0/0
 26403 ;;		Unchanged: 0/0
 26404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26409 ;;Total ram usage:        0 bytes
 26410 ;; Hardware stack levels used:    1
 26411 ;; Hardware stack levels required when called:   18
 26412 ;; This function calls:
 26413 ;;		___flge
 26414 ;;		___flsub
 26415 ;;		_conv_raw_result
 26416 ;;		_fabsf
 26417 ;; This function is called by:
 26418 ;;		_main
 26419 ;; This function uses a reentrant model
 26420 ;;
 26421                           
 26422                           	psect	text107
 26423  0191F2                     __ptext107:
 26424                           	opt callstack 0
 26425  0191F2                     _calc_ror_data:
 26426                           	opt callstack 12
 26427                           
 26428                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 26429                           
 26430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26431                           ;incstack = 0
 26432  0191F2  0060  F193  FFE6   	movff	calc_ror_data@bcror,postinc1
 26433  0191F8  0060  F197  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 26434  0191FE  0060  F19B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 26435  019204  0060  F19F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 26436  01920A  0E00               	movlw	0
 26437  01920C  6EE6               	movwf	postinc1,c
 26438  01920E  0E00               	movlw	0
 26439  019210  6EE6               	movwf	postinc1,c
 26440  019212  EC0A  F0AA         	call	_conv_raw_result	;wreg free
 26441  019216  0060  F007  FFE6   	movff	btemp,postinc1
 26442  01921C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26443  019222  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26444  019228  0060  F013  FFE6   	movff	btemp+3,postinc1
 26445  01922E  EC18  F0E1         	call	___flsub	;wreg free
 26446  019232  0060  F007  FFE6   	movff	btemp,postinc1
 26447  019238  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26448  01923E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26449  019244  0060  F013  FFE6   	movff	btemp+3,postinc1
 26450  01924A  EC4D  F0D8         	call	_fabsf	;wreg free
 26451  01924E  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26452  019254  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26453  01925A  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26454  019260  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26455                           
 26456                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 26457  019266  0E00               	movlw	0
 26458  019268  6EE6               	movwf	postinc1,c
 26459  01926A  0E00               	movlw	0
 26460  01926C  6EE6               	movwf	postinc1,c
 26461  01926E  EC0A  F0AA         	call	_conv_raw_result	;wreg free
 26462  019272  0060  F004  F064   	movff	btemp,calc_ror_data@bcror
 26463  019278  0060  F008  F065   	movff	btemp+1,calc_ror_data@bcror+1
 26464  01927E  0060  F00C  F066   	movff	btemp+2,calc_ror_data@bcror+2
 26465  019284  0060  F010  F067   	movff	btemp+3,calc_ror_data@bcror+3
 26466                           
 26467                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 26468  01928A  0060  F1A3  FFE6   	movff	calc_ror_data@bvror,postinc1
 26469  019290  0060  F1A7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 26470  019296  0060  F1AB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 26471  01929C  0060  F1AF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 26472  0192A2  0E00               	movlw	0
 26473  0192A4  6EE6               	movwf	postinc1,c
 26474  0192A6  0E04               	movlw	4
 26475  0192A8  6EE6               	movwf	postinc1,c
 26476  0192AA  EC0A  F0AA         	call	_conv_raw_result	;wreg free
 26477  0192AE  0060  F007  FFE6   	movff	btemp,postinc1
 26478  0192B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26479  0192BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26480  0192C0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26481  0192C6  EC18  F0E1         	call	___flsub	;wreg free
 26482  0192CA  0060  F007  FFE6   	movff	btemp,postinc1
 26483  0192D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26484  0192D6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26485  0192DC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26486  0192E2  EC4D  F0D8         	call	_fabsf	;wreg free
 26487  0192E6  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26488  0192EC  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26489  0192F2  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26490  0192F8  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26491                           
 26492                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 26493  0192FE  0EE7               	movlw	231
 26494  019300  6EE6               	movwf	postinc1,c
 26495  019302  0E1D               	movlw	29
 26496  019304  6EE6               	movwf	postinc1,c
 26497  019306  0EA7               	movlw	167
 26498  019308  6EE6               	movwf	postinc1,c
 26499  01930A  0E3B               	movlw	59
 26500  01930C  6EE6               	movwf	postinc1,c
 26501  01930E  EE21  F36B         	lfsr	2,_C+108	;volatile
 26502  019312  006F FF7B FFE6     	movff	postinc2,postinc1
 26503  019318  006F FF7B FFE6     	movff	postinc2,postinc1
 26504  01931E  006F FF7B FFE6     	movff	postinc2,postinc1
 26505  019324  006F FF7B FFE6     	movff	postinc2,postinc1
 26506  01932A  EC35  F0CB         	call	___flge	;wreg free
 26507  01932E  B001               	btfsc	btemp& (0+255),0,c
 26508  019330  D010               	goto	l11578
 26509                           
 26510                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 26511  019332  0EB0               	movlw	176
 26512  019334  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 26513  01933A  0E03               	movlw	3
 26514  01933C  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 26515  019342  0E67               	movlw	103
 26516  019344  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 26517  01934A  0E3C               	movlw	60
 26518  01934C  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 26519  019352                     l11578:
 26520                           
 26521                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 26522  019352  0E00               	movlw	0
 26523  019354  6EE6               	movwf	postinc1,c
 26524  019356  0E04               	movlw	4
 26525  019358  6EE6               	movwf	postinc1,c
 26526  01935A  EC0A  F0AA         	call	_conv_raw_result	;wreg free
 26527  01935E  0060  F004  F068   	movff	btemp,calc_ror_data@bvror
 26528  019364  0060  F008  F069   	movff	btemp+1,calc_ror_data@bvror+1
 26529  01936A  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bvror+2
 26530  019370  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bvror+3
 26531                           
 26532                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 26533  019376  0012               	return		;funcret
 26534  019378                     __end_of_calc_ror_data:
 26535                           	opt callstack 0
 26536                           
 26537 ;; *************** function _fabsf *****************
 26538 ;; Defined at:
 26539 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 26540 ;; Parameters:    Size  Location     Type
 26541 ;;  x               4  [STACK] float 
 26542 ;; Auto vars:     Size  Location     Type
 26543 ;;  u               4  [STACK] struct .
 26544 ;; Return value:  Size  Location     Type
 26545 ;;                  4  [STACK] float 
 26546 ;; Registers used:
 26547 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 26548 ;; Tracked objects:
 26549 ;;		On entry : 0/0
 26550 ;;		On exit  : 0/0
 26551 ;;		Unchanged: 0/0
 26552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26557 ;;Total ram usage:        0 bytes
 26558 ;; Hardware stack levels used:    1
 26559 ;; Hardware stack levels required when called:   15
 26560 ;; This function calls:
 26561 ;;		Nothing
 26562 ;; This function is called by:
 26563 ;;		_main
 26564 ;;		_calc_ror_data
 26565 ;;		_calc_bsoc
 26566 ;;		_esr_check
 26567 ;; This function uses a reentrant model
 26568 ;;
 26569                           
 26570                           	psect	text108
 26571  01B09A                     __ptext108:
 26572                           	opt callstack 0
 26573  01B09A                     _fabsf:
 26574                           	opt callstack 0
 26575                           
 26576                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26577  01B09A  52E6               	movf	postinc1,f,c
 26578  01B09C  52E6               	movf	postinc1,f,c
 26579  01B09E  52E6               	movf	postinc1,f,c
 26580  01B0A0  52E6               	movf	postinc1,f,c
 26581                           
 26582                           ;incstack = 0
 26583 ;; hardware stack exceeded
 26584  01B0A2  0060  F7B8  F009   	movff	fabsf@F463,btemp+8
 26585  01B0A8  0060  F7BC  F00A   	movff	fabsf@F463+1,btemp+9
 26586  01B0AE  0060  F7C0  F00B   	movff	fabsf@F463+2,btemp+10
 26587  01B0B4  0060  F7C4  F00C   	movff	fabsf@F463+3,btemp+11
 26588                           
 26589                           ;stkvar	_u @ sp[(-4)+0]
 26590  01B0BA  0EFC               	movlw	-4
 26591  01B0BC  0060  F027  FFE3   	movff	btemp+8,plusw1
 26592  01B0C2  0EFD               	movlw	-3
 26593  01B0C4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26594  01B0CA  0EFE               	movlw	-2
 26595  01B0CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26596  01B0D2  0EFF               	movlw	-1
 26597  01B0D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 26598                           
 26599                           ;stkvar	_x @ sp[(-4)+-4]
 26600  01B0DA  0EF8               	movlw	-8
 26601  01B0DC  006F FF8C  F009    	movff	plusw1,btemp+8
 26602  01B0E2  0EF9               	movlw	-7
 26603  01B0E4  006F FF8C  F00A    	movff	plusw1,btemp+9
 26604  01B0EA  0EFA               	movlw	-6
 26605  01B0EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 26606  01B0F2  0EFB               	movlw	-5
 26607  01B0F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26608                           
 26609                           ;stkvar	_u @ sp[(-4)+0]
 26610  01B0FA  0EFC               	movlw	-4
 26611  01B0FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 26612  01B102  0EFD               	movlw	-3
 26613  01B104  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26614  01B10A  0EFE               	movlw	-2
 26615  01B10C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26616  01B112  0EFF               	movlw	-1
 26617  01B114  0060  F033  FFE3   	movff	btemp+11,plusw1
 26618                           
 26619                           ;stkvar	_u @ sp[(-4)+0]
 26620  01B11A  0EFF               	movlw	-1
 26621  01B11C  9EE3               	bcf	plusw1,7,c
 26622                           
 26623                           ;stkvar	_u @ sp[(-4)+0]
 26624  01B11E  0EFC               	movlw	-4
 26625  01B120  006F FF8C  F001    	movff	plusw1,btemp
 26626  01B126  0EFD               	movlw	-3
 26627  01B128  006F FF8C  F002    	movff	plusw1,btemp+1
 26628  01B12E  0EFE               	movlw	-2
 26629  01B130  006F FF8C  F003    	movff	plusw1,btemp+2
 26630  01B136  0EFF               	movlw	-1
 26631  01B138  006F FF8C  F004    	movff	plusw1,btemp+3
 26632                           
 26633                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 26634  01B13E  0EF8               	movlw	248
 26635  01B140  26E1               	addwf	fsr1l,f,c
 26636  01B142  0EFF               	movlw	255
 26637  01B144  22E2               	addwfc	fsr1h,f,c
 26638  01B146  0012               	return		;funcret
 26639  01B148                     __end_of_fabsf:
 26640                           	opt callstack 0
 26641                           
 26642 ;; *************** function _conv_raw_result *****************
 26643 ;; Defined at:
 26644 ;;		line 127 in file "daq.c"
 26645 ;; Parameters:    Size  Location     Type
 26646 ;;  chan            1  [STACK] const enum E16590
 26647 ;;  to_what         1  [STACK] const enum E16671
 26648 ;; Auto vars:     Size  Location     Type
 26649 ;;		None
 26650 ;; Return value:  Size  Location     Type
 26651 ;;                  4  [STACK] float 
 26652 ;; Registers used:
 26653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26654 ;; Tracked objects:
 26655 ;;		On entry : 0/0
 26656 ;;		On exit  : 0/0
 26657 ;;		Unchanged: 0/0
 26658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26663 ;;Total ram usage:        0 bytes
 26664 ;; Hardware stack levels used:    1
 26665 ;; Hardware stack levels required when called:   17
 26666 ;; This function calls:
 26667 ;;		___fldiv
 26668 ;;		___flmul
 26669 ;;		___flsub
 26670 ;;		___xxtofl
 26671 ;;		_get_raw_result
 26672 ;;		_nanf
 26673 ;; This function is called by:
 26674 ;;		_main
 26675 ;;		_convert_adc_data
 26676 ;;		_calc_ror_data
 26677 ;;		_check_day_time
 26678 ;;		_init_bsoc
 26679 ;;		_esr_check
 26680 ;; This function uses a reentrant model
 26681 ;;
 26682                           
 26683                           	psect	text109
 26684  015414                     __ptext109:
 26685                           	opt callstack 0
 26686  015414                     _conv_raw_result:
 26687                           	opt callstack 0
 26688                           
 26689                           ;daq.c: 127: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 128: {;daq.c: 130:  switch (to_what) {
 26690                           
 26691                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26692                           ;incstack = 0
 26693 ;; hardware stack exceeded
 26694  015414  D24A               	goto	l10206
 26695  015416                     l10152:
 26696                           
 26697                           ;daq.c: 132:   if (!(0b0011110001110111 >> chan & 0x1))
 26698                           ;stkvar	_chan @ sp[(0)+-1]
 26699  015416  0EFF               	movlw	-1
 26700  015418  006F FF8C  F00C    	movff	plusw1,btemp+11
 26701  01541E  0E77               	movlw	119
 26702  015420  6E09               	movwf	(btemp+8)^0,c
 26703  015422  0E3C               	movlw	60
 26704  015424  6E0A               	movwf	(btemp+9)^0,c
 26705  015426  2A0C               	incf	(btemp+11)^0,f,c
 26706  015428  D003               	goto	u9414
 26707  01542A                     u9415:
 26708  01542A  340A               	rlcf	(btemp+9)^0,w,c
 26709  01542C  320A               	rrcf	(btemp+9)^0,f,c
 26710  01542E  3209               	rrcf	(btemp+8)^0,f,c
 26711  015430                     u9414:
 26712  015430  2E0C               	decfsz	(btemp+11)^0,f,c
 26713  015432  D7FB               	goto	u9415
 26714  015434  B009               	btfsc	(btemp+8)^0,0,c
 26715  015436  D007               	goto	l10158
 26716                           
 26717                           ;daq.c: 133:    return nanf("");
 26718  015438  0E4D               	movlw	low (STR_80+126)
 26719  01543A  6EE6               	movwf	postinc1,c
 26720  01543C  0EFB               	movlw	high (STR_80+126)
 26721  01543E  6EE6               	movwf	postinc1,c
 26722  015440  ECBA  F0DE         	call	_nanf	;wreg free
 26723  015444  D242               	goto	l1845
 26724  015446                     l10158:
 26725                           
 26726                           ;daq.c: 135:   if (0b0000000000000011 >> chan & 0x1) {
 26727                           ;stkvar	_chan @ sp[(0)+-1]
 26728  015446  0EFF               	movlw	-1
 26729  015448  006F FF8C  F00C    	movff	plusw1,btemp+11
 26730  01544E  0E03               	movlw	3
 26731  015450  6E09               	movwf	(btemp+8)^0,c
 26732  015452  0E00               	movlw	0
 26733  015454  6E0A               	movwf	(btemp+9)^0,c
 26734  015456  2A0C               	incf	(btemp+11)^0,f,c
 26735  015458  D003               	goto	u9434
 26736  01545A                     u9435:
 26737  01545A  340A               	rlcf	(btemp+9)^0,w,c
 26738  01545C  320A               	rrcf	(btemp+9)^0,f,c
 26739  01545E  3209               	rrcf	(btemp+8)^0,f,c
 26740  015460                     u9434:
 26741  015460  2E0C               	decfsz	(btemp+11)^0,f,c
 26742  015462  D7FB               	goto	u9435
 26743  015464  A009               	btfss	(btemp+8)^0,0,c
 26744  015466  D0F3               	goto	l10172
 26745                           
 26746                           ;daq.c: 136:    if (0b0000000000000001 >> chan & 0x1) {
 26747                           ;stkvar	_chan @ sp[(0)+-1]
 26748  015468  0EFF               	movlw	-1
 26749  01546A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26750  015470  0E01               	movlw	1
 26751  015472  6E09               	movwf	(btemp+8)^0,c
 26752  015474  0E00               	movlw	0
 26753  015476  6E0A               	movwf	(btemp+9)^0,c
 26754  015478  2A0C               	incf	(btemp+11)^0,f,c
 26755  01547A  D003               	goto	u9454
 26756  01547C                     u9455:
 26757  01547C  340A               	rlcf	(btemp+9)^0,w,c
 26758  01547E  320A               	rrcf	(btemp+9)^0,f,c
 26759  015480  3209               	rrcf	(btemp+8)^0,f,c
 26760  015482                     u9454:
 26761  015482  2E0C               	decfsz	(btemp+11)^0,f,c
 26762  015484  D7FB               	goto	u9455
 26763  015486  A009               	btfss	(btemp+8)^0,0,c
 26764  015488  D071               	goto	l10168
 26765                           
 26766                           ;daq.c: 137:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 26767  01548A  0060  F357  FFE6   	movff	_R+42,postinc1
 26768  015490  0060  F35B  FFE6   	movff	_R+43,postinc1
 26769  015496  0060  F35F  FFE6   	movff	_R+44,postinc1
 26770  01549C  0060  F363  FFE6   	movff	_R+45,postinc1
 26771  0154A2  0060  F344  F009   	movff	_R+38,btemp+8	;volatile
 26772  0154A8  0060  F348  F00A   	movff	_R+39,btemp+9	;volatile
 26773  0154AE  0E00               	movlw	0
 26774  0154B0  BE0A               	btfsc	(btemp+9)^0,7,c
 26775  0154B2  0EFF               	movlw	255
 26776  0154B4  6E0B               	movwf	(btemp+10)^0,c
 26777  0154B6  6E0C               	movwf	(btemp+11)^0,c
 26778  0154B8  0060  F027  FFE6   	movff	btemp+8,postinc1
 26779  0154BE  0060  F02B  FFE6   	movff	btemp+9,postinc1
 26780  0154C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26781  0154CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 26782  0154D0  0E01               	movlw	1
 26783  0154D2  6EE6               	movwf	postinc1,c
 26784  0154D4  EC7E  F0C5         	call	___xxtofl	;wreg free
 26785  0154D8  0060  F007  FFE6   	movff	btemp,postinc1
 26786  0154DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26787  0154E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26788  0154EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 26789                           
 26790                           ;stkvar	_chan @ sp[(-8)+-1]
 26791  0154F0  0EF7               	movlw	-9
 26792  0154F2  50E3               	movf	plusw1,w,c
 26793  0154F4  6EE6               	movwf	postinc1,c
 26794  0154F6  EC41  F0E6         	call	_get_raw_result	;wreg free
 26795  0154FA  0060  F004  F00B   	movff	btemp,btemp+10
 26796  015500  0060  F008  F00C   	movff	btemp+1,btemp+11
 26797  015506  500B               	movf	(btemp+10)^0,w,c
 26798  015508  6E05               	movwf	(btemp+4)^0,c
 26799  01550A  500C               	movf	(btemp+11)^0,w,c
 26800  01550C  6E06               	movwf	(btemp+5)^0,c
 26801  01550E  6A07               	clrf	(btemp+6)^0,c
 26802  015510  6A08               	clrf	(btemp+7)^0,c
 26803  015512  0060  F017  FFE6   	movff	btemp+4,postinc1
 26804  015518  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26805  01551E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26806  015524  0060  F023  FFE6   	movff	btemp+7,postinc1
 26807  01552A  0E00               	movlw	0
 26808  01552C  6EE6               	movwf	postinc1,c
 26809  01552E  EC7E  F0C5         	call	___xxtofl	;wreg free
 26810  015532  0060  F007  FFE6   	movff	btemp,postinc1
 26811  015538  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26812  01553E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26813  015544  0060  F013  FFE6   	movff	btemp+3,postinc1
 26814  01554A  EC18  F0E1         	call	___flsub	;wreg free
 26815  01554E  0060  F007  FFE6   	movff	btemp,postinc1
 26816  015554  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26817  01555A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26818  015560  0060  F013  FFE6   	movff	btemp+3,postinc1
 26819  015566  EC5A  F09F         	call	___flmul	;wreg free
 26820  01556A  D1AF               	goto	l1845
 26821  01556C                     l10168:
 26822                           
 26823                           ;daq.c: 139:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 26824  01556C  0060  F367  FFE6   	movff	_R+46,postinc1
 26825  015572  0060  F36B  FFE6   	movff	_R+47,postinc1
 26826  015578  0060  F36F  FFE6   	movff	_R+48,postinc1
 26827  01557E  0060  F373  FFE6   	movff	_R+49,postinc1
 26828  015584  0060  F34C  F009   	movff	_R+40,btemp+8	;volatile
 26829  01558A  0060  F350  F00A   	movff	_R+41,btemp+9	;volatile
 26830  015590  0E00               	movlw	0
 26831  015592  BE0A               	btfsc	(btemp+9)^0,7,c
 26832  015594  0EFF               	movlw	255
 26833  015596  6E0B               	movwf	(btemp+10)^0,c
 26834  015598  6E0C               	movwf	(btemp+11)^0,c
 26835  01559A  0060  F027  FFE6   	movff	btemp+8,postinc1
 26836  0155A0  0060  F02B  FFE6   	movff	btemp+9,postinc1
 26837  0155A6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26838  0155AC  0060  F033  FFE6   	movff	btemp+11,postinc1
 26839  0155B2  0E01               	movlw	1
 26840  0155B4  6EE6               	movwf	postinc1,c
 26841  0155B6  EC7E  F0C5         	call	___xxtofl	;wreg free
 26842  0155BA  0060  F007  FFE6   	movff	btemp,postinc1
 26843  0155C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26844  0155C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26845  0155CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26846                           
 26847                           ;stkvar	_chan @ sp[(-8)+-1]
 26848  0155D2  0EF7               	movlw	-9
 26849  0155D4  50E3               	movf	plusw1,w,c
 26850  0155D6  6EE6               	movwf	postinc1,c
 26851  0155D8  EC41  F0E6         	call	_get_raw_result	;wreg free
 26852  0155DC  0060  F004  F00B   	movff	btemp,btemp+10
 26853  0155E2  0060  F008  F00C   	movff	btemp+1,btemp+11
 26854  0155E8  500B               	movf	(btemp+10)^0,w,c
 26855  0155EA  6E05               	movwf	(btemp+4)^0,c
 26856  0155EC  500C               	movf	(btemp+11)^0,w,c
 26857  0155EE  6E06               	movwf	(btemp+5)^0,c
 26858  0155F0  6A07               	clrf	(btemp+6)^0,c
 26859  0155F2  6A08               	clrf	(btemp+7)^0,c
 26860  0155F4  0060  F017  FFE6   	movff	btemp+4,postinc1
 26861  0155FA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26862  015600  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26863  015606  0060  F023  FFE6   	movff	btemp+7,postinc1
 26864  01560C  0E00               	movlw	0
 26865  01560E  6EE6               	movwf	postinc1,c
 26866  015610  EC7E  F0C5         	call	___xxtofl	;wreg free
 26867  015614  0060  F007  FFE6   	movff	btemp,postinc1
 26868  01561A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26869  015620  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26870  015626  0060  F013  FFE6   	movff	btemp+3,postinc1
 26871  01562C  EC18  F0E1         	call	___flsub	;wreg free
 26872  015630  0060  F007  FFE6   	movff	btemp,postinc1
 26873  015636  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26874  01563C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26875  015642  0060  F013  FFE6   	movff	btemp+3,postinc1
 26876  015648  EC5A  F09F         	call	___flmul	;wreg free
 26877  01564C  D13E               	goto	l1845
 26878  01564E                     l10172:
 26879                           
 26880                           ;daq.c: 142:    if (0b0000100000000000 >> chan & 0x1) {
 26881                           ;stkvar	_chan @ sp[(0)+-1]
 26882  01564E  0EFF               	movlw	-1
 26883  015650  006F FF8C  F00C    	movff	plusw1,btemp+11
 26884  015656  0E00               	movlw	0
 26885  015658  6E09               	movwf	(btemp+8)^0,c
 26886  01565A  0E08               	movlw	8
 26887  01565C  6E0A               	movwf	(btemp+9)^0,c
 26888  01565E  2A0C               	incf	(btemp+11)^0,f,c
 26889  015660  D003               	goto	u9474
 26890  015662                     u9475:
 26891  015662  340A               	rlcf	(btemp+9)^0,w,c
 26892  015664  320A               	rrcf	(btemp+9)^0,f,c
 26893  015666  3209               	rrcf	(btemp+8)^0,f,c
 26894  015668                     u9474:
 26895  015668  2E0C               	decfsz	(btemp+11)^0,f,c
 26896  01566A  D7FB               	goto	u9475
 26897  01566C  A009               	btfss	(btemp+8)^0,0,c
 26898  01566E  D008               	goto	l10180
 26899                           
 26900                           ;daq.c: 143:     return 25.0;
 26901  015670  0E00               	movlw	0
 26902  015672  6E01               	movwf	btemp^0,c
 26903  015674  0E00               	movlw	0
 26904  015676  6E02               	movwf	(btemp+1)^0,c
 26905  015678  0EC8               	movlw	200
 26906  01567A  6E03               	movwf	(btemp+2)^0,c
 26907  01567C  0E41               	movlw	65
 26908  01567E  D113               	goto	L33
 26909  015680                     l10180:
 26910                           
 26911                           ;daq.c: 145:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 26912  015680  0E00               	movlw	0
 26913  015682  6EE6               	movwf	postinc1,c
 26914  015684  0E00               	movlw	0
 26915  015686  6EE6               	movwf	postinc1,c
 26916  015688  0E7A               	movlw	122
 26917  01568A  6EE6               	movwf	postinc1,c
 26918  01568C  0E44               	movlw	68
 26919  01568E  6EE6               	movwf	postinc1,c
 26920  015690  0E61               	movlw	97
 26921  015692  6EE6               	movwf	postinc1,c
 26922  015694  0E03               	movlw	3
 26923  015696  6EE6               	movwf	postinc1,c
 26924  015698  0E84               	movlw	132
 26925  01569A  6EE6               	movwf	postinc1,c
 26926  01569C  0E40               	movlw	64
 26927  01569E  6EE6               	movwf	postinc1,c
 26928                           
 26929                           ;stkvar	_chan @ sp[(-8)+-1]
 26930  0156A0  0EF7               	movlw	-9
 26931  0156A2  50E3               	movf	plusw1,w,c
 26932  0156A4  6EE6               	movwf	postinc1,c
 26933  0156A6  EC41  F0E6         	call	_get_raw_result	;wreg free
 26934  0156AA  0060  F004  F00B   	movff	btemp,btemp+10
 26935  0156B0  0060  F008  F00C   	movff	btemp+1,btemp+11
 26936  0156B6  500B               	movf	(btemp+10)^0,w,c
 26937  0156B8  6E05               	movwf	(btemp+4)^0,c
 26938  0156BA  500C               	movf	(btemp+11)^0,w,c
 26939  0156BC  6E06               	movwf	(btemp+5)^0,c
 26940  0156BE  6A07               	clrf	(btemp+6)^0,c
 26941  0156C0  6A08               	clrf	(btemp+7)^0,c
 26942  0156C2  0060  F017  FFE6   	movff	btemp+4,postinc1
 26943  0156C8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26944  0156CE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26945  0156D4  0060  F023  FFE6   	movff	btemp+7,postinc1
 26946  0156DA  0E00               	movlw	0
 26947  0156DC  6EE6               	movwf	postinc1,c
 26948  0156DE  EC7E  F0C5         	call	___xxtofl	;wreg free
 26949  0156E2  0060  F007  FFE6   	movff	btemp,postinc1
 26950  0156E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26951  0156EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26952  0156F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26953  0156FA  EC5A  F09F         	call	___flmul	;wreg free
 26954  0156FE  0060  F007  FFE6   	movff	btemp,postinc1
 26955  015704  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26956  01570A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26957  015710  0060  F013  FFE6   	movff	btemp+3,postinc1
 26958  015716  EC4D  F0A7         	call	___fldiv	;wreg free
 26959  01571A  D0D7               	goto	l1845
 26960  01571C                     l10184:
 26961                           
 26962                           ;daq.c: 150:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 26963                           ;stkvar	_chan @ sp[(0)+-1]
 26964  01571C  0EFF               	movlw	-1
 26965  01571E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26966  015724  0E03               	movlw	3
 26967  015726  6E09               	movwf	(btemp+8)^0,c
 26968  015728  0E00               	movlw	0
 26969  01572A  6E0A               	movwf	(btemp+9)^0,c
 26970  01572C  2A0C               	incf	(btemp+11)^0,f,c
 26971  01572E  D003               	goto	u9494
 26972  015730                     u9495:
 26973  015730  340A               	rlcf	(btemp+9)^0,w,c
 26974  015732  320A               	rrcf	(btemp+9)^0,f,c
 26975  015734  3209               	rrcf	(btemp+8)^0,f,c
 26976  015736                     u9494:
 26977  015736  2E0C               	decfsz	(btemp+11)^0,f,c
 26978  015738  D7FB               	goto	u9495
 26979  01573A  B009               	btfsc	(btemp+8)^0,0,c
 26980  01573C  D011               	goto	u9520
 26981                           
 26982                           ;stkvar	_chan @ sp[(0)+-1]
 26983  01573E  0EFF               	movlw	-1
 26984  015740  006F FF8C  F00C    	movff	plusw1,btemp+11
 26985  015746  0E00               	movlw	0
 26986  015748  6E09               	movwf	(btemp+8)^0,c
 26987  01574A  0E08               	movlw	8
 26988  01574C  6E0A               	movwf	(btemp+9)^0,c
 26989  01574E  2A0C               	incf	(btemp+11)^0,f,c
 26990  015750  D003               	goto	u9514
 26991  015752                     u9515:
 26992  015752  340A               	rlcf	(btemp+9)^0,w,c
 26993  015754  320A               	rrcf	(btemp+9)^0,f,c
 26994  015756  3209               	rrcf	(btemp+8)^0,f,c
 26995  015758                     u9514:
 26996  015758  2E0C               	decfsz	(btemp+11)^0,f,c
 26997  01575A  D7FB               	goto	u9515
 26998  01575C  A009               	btfss	(btemp+8)^0,0,c
 26999  01575E  D04E               	goto	l10192
 27000  015760                     u9520:
 27001                           
 27002                           ;daq.c: 151:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 27003  015760  0E00               	movlw	0
 27004  015762  6EE6               	movwf	postinc1,c
 27005  015764  0E00               	movlw	0
 27006  015766  6EE6               	movwf	postinc1,c
 27007  015768  0E7A               	movlw	122
 27008  01576A  6EE6               	movwf	postinc1,c
 27009  01576C  0E44               	movlw	68
 27010  01576E  6EE6               	movwf	postinc1,c
 27011  015770  0E00               	movlw	0
 27012  015772  6EE6               	movwf	postinc1,c
 27013  015774  0E00               	movlw	0
 27014  015776  6EE6               	movwf	postinc1,c
 27015  015778  0E20               	movlw	32
 27016  01577A  6EE6               	movwf	postinc1,c
 27017  01577C  0E3F               	movlw	63
 27018  01577E  6EE6               	movwf	postinc1,c
 27019                           
 27020                           ;stkvar	_chan @ sp[(-8)+-1]
 27021  015780  0EF7               	movlw	-9
 27022  015782  50E3               	movf	plusw1,w,c
 27023  015784  6EE6               	movwf	postinc1,c
 27024  015786  EC41  F0E6         	call	_get_raw_result	;wreg free
 27025  01578A  0060  F004  F00B   	movff	btemp,btemp+10
 27026  015790  0060  F008  F00C   	movff	btemp+1,btemp+11
 27027  015796  500B               	movf	(btemp+10)^0,w,c
 27028  015798  6E05               	movwf	(btemp+4)^0,c
 27029  01579A  500C               	movf	(btemp+11)^0,w,c
 27030  01579C  6E06               	movwf	(btemp+5)^0,c
 27031  01579E  6A07               	clrf	(btemp+6)^0,c
 27032  0157A0  6A08               	clrf	(btemp+7)^0,c
 27033  0157A2  0060  F017  FFE6   	movff	btemp+4,postinc1
 27034  0157A8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27035  0157AE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27036  0157B4  0060  F023  FFE6   	movff	btemp+7,postinc1
 27037  0157BA  0E00               	movlw	0
 27038  0157BC  6EE6               	movwf	postinc1,c
 27039  0157BE  EC7E  F0C5         	call	___xxtofl	;wreg free
 27040  0157C2  0060  F007  FFE6   	movff	btemp,postinc1
 27041  0157C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27042  0157CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27043  0157D4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27044  0157DA  EC5A  F09F         	call	___flmul	;wreg free
 27045  0157DE  0060  F007  FFE6   	movff	btemp,postinc1
 27046  0157E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27047  0157EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27048  0157F0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27049  0157F6  EC4D  F0A7         	call	___fldiv	;wreg free
 27050  0157FA  D067               	goto	l1845
 27051  0157FC                     l10192:
 27052                           
 27053                           ;daq.c: 153:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 27054  0157FC  0E00               	movlw	0
 27055  0157FE  6EE6               	movwf	postinc1,c
 27056  015800  0E00               	movlw	0
 27057  015802  6EE6               	movwf	postinc1,c
 27058  015804  0E7A               	movlw	122
 27059  015806  6EE6               	movwf	postinc1,c
 27060  015808  0E44               	movlw	68
 27061  01580A  6EE6               	movwf	postinc1,c
 27062  01580C  0E61               	movlw	97
 27063  01580E  6EE6               	movwf	postinc1,c
 27064  015810  0E03               	movlw	3
 27065  015812  6EE6               	movwf	postinc1,c
 27066  015814  0E84               	movlw	132
 27067  015816  6EE6               	movwf	postinc1,c
 27068  015818  0E40               	movlw	64
 27069  01581A  6EE6               	movwf	postinc1,c
 27070                           
 27071                           ;stkvar	_chan @ sp[(-8)+-1]
 27072  01581C  0EF7               	movlw	-9
 27073  01581E  50E3               	movf	plusw1,w,c
 27074  015820  6EE6               	movwf	postinc1,c
 27075  015822  EC41  F0E6         	call	_get_raw_result	;wreg free
 27076  015826  0060  F004  F00B   	movff	btemp,btemp+10
 27077  01582C  0060  F008  F00C   	movff	btemp+1,btemp+11
 27078  015832  500B               	movf	(btemp+10)^0,w,c
 27079  015834  6E05               	movwf	(btemp+4)^0,c
 27080  015836  500C               	movf	(btemp+11)^0,w,c
 27081  015838  6E06               	movwf	(btemp+5)^0,c
 27082  01583A  6A07               	clrf	(btemp+6)^0,c
 27083  01583C  6A08               	clrf	(btemp+7)^0,c
 27084  01583E  0060  F017  FFE6   	movff	btemp+4,postinc1
 27085  015844  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27086  01584A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27087  015850  0060  F023  FFE6   	movff	btemp+7,postinc1
 27088  015856  0E00               	movlw	0
 27089  015858  6EE6               	movwf	postinc1,c
 27090  01585A  EC7E  F0C5         	call	___xxtofl	;wreg free
 27091  01585E  0060  F007  FFE6   	movff	btemp,postinc1
 27092  015864  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27093  01586A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27094  015870  0060  F013  FFE6   	movff	btemp+3,postinc1
 27095  015876  EC5A  F09F         	call	___flmul	;wreg free
 27096  01587A  0060  F007  FFE6   	movff	btemp,postinc1
 27097  015880  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27098  015886  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27099  01588C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27100  015892  EC4D  F0A7         	call	___fldiv	;wreg free
 27101  015896  D019               	goto	l1845
 27102  015898                     l10198:
 27103                           
 27104                           ;daq.c: 156:   return 0.0;
 27105  015898  0E00               	movlw	0
 27106  01589A  6E01               	movwf	btemp^0,c
 27107  01589C  0E00               	movlw	0
 27108  01589E  6E02               	movwf	(btemp+1)^0,c
 27109  0158A0  0E00               	movlw	0
 27110  0158A2  6E03               	movwf	(btemp+2)^0,c
 27111  0158A4  0E00               	movlw	0
 27112  0158A6                     L33:
 27113  0158A6  6E04               	movwf	(btemp+3)^0,c
 27114  0158A8  D010               	goto	l1845
 27115  0158AA                     l10206:
 27116                           
 27117                           ;stkvar	_to_what @ sp[(0)+-2]
 27118  0158AA  0EFE               	movlw	-2
 27119  0158AC  50E3               	movf	plusw1,w,c
 27120  0158AE  6E0B               	movwf	(btemp+10)^0,c
 27121  0158B0  6A0C               	clrf	(btemp+11)^0,c
 27122                           
 27123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27124                           ; Switch size 1, requested type "simple"
 27125                           ; Number of cases is 1, Range of values is 0 to 0
 27126                           ; switch strategies available:
 27127                           ; Name         Instructions Cycles
 27128                           ; simple_byte            4     3 (average)
 27129                           ;	Chosen strategy is simple_byte
 27130  0158B2  500C               	movf	(btemp+11)^0,w,c
 27131  0158B4  0A00               	xorlw	0	; case 0
 27132  0158B6  A4D8               	btfss	status,2,c
 27133  0158B8  D7EF               	goto	l10198
 27134                           
 27135                           ; Switch size 1, requested type "simple"
 27136                           ; Number of cases is 2, Range of values is 0 to 1
 27137                           ; switch strategies available:
 27138                           ; Name         Instructions Cycles
 27139                           ; simple_byte            7     4 (average)
 27140                           ;	Chosen strategy is simple_byte
 27141  0158BA  500B               	movf	(btemp+10)^0,w,c
 27142  0158BC  0A00               	xorlw	0	; case 0
 27143  0158BE  B4D8               	btfsc	status,2,c
 27144  0158C0  D5AA               	goto	l10152
 27145  0158C2  0A01               	xorlw	1	; case 1
 27146  0158C4  B4D8               	btfsc	status,2,c
 27147  0158C6  D72A               	goto	l10184
 27148  0158C8  D7E7               	goto	l10198
 27149  0158CA                     l1845:
 27150                           
 27151                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27152  0158CA  52E5               	movf	postdec1,f,c
 27153  0158CC  52E5               	movf	postdec1,f,c
 27154  0158CE  0012               	return		;funcret
 27155  0158D0                     __end_of_conv_raw_result:
 27156                           	opt callstack 0
 27157                           
 27158 ;; *************** function _nanf *****************
 27159 ;; Defined at:
 27160 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 27161 ;; Parameters:    Size  Location     Type
 27162 ;;  s               2  [STACK] PTR const unsigned char 
 27163 ;;		 -> STR_117(1), STR_79(1), 
 27164 ;; Auto vars:     Size  Location     Type
 27165 ;;  u               4  [STACK] struct .
 27166 ;; Return value:  Size  Location     Type
 27167 ;;                  4  [STACK] float 
 27168 ;; Registers used:
 27169 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 27170 ;; Tracked objects:
 27171 ;;		On entry : 0/0
 27172 ;;		On exit  : 0/0
 27173 ;;		Unchanged: 0/0
 27174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27179 ;;Total ram usage:        0 bytes
 27180 ;; Hardware stack levels used:    1
 27181 ;; Hardware stack levels required when called:   15
 27182 ;; This function calls:
 27183 ;;		Nothing
 27184 ;; This function is called by:
 27185 ;;		_conv_raw_result
 27186 ;; This function uses a reentrant model
 27187 ;;
 27188                           
 27189                           	psect	text110
 27190  01BD74                     __ptext110:
 27191                           	opt callstack 0
 27192  01BD74                     _nanf:
 27193                           	opt callstack 0
 27194                           
 27195                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27196  01BD74  52E6               	movf	postinc1,f,c
 27197  01BD76  52E6               	movf	postinc1,f,c
 27198  01BD78  52E6               	movf	postinc1,f,c
 27199  01BD7A  52E6               	movf	postinc1,f,c
 27200                           
 27201                           ;incstack = 0
 27202 ;; hardware stack exceeded
 27203  01BD7C  0EFF               	movlw	255
 27204  01BD7E  6E09               	movwf	(btemp+8)^0,c
 27205  01BD80  0EFF               	movlw	255
 27206  01BD82  6E0A               	movwf	(btemp+9)^0,c
 27207  01BD84  0EFF               	movlw	255
 27208  01BD86  6E0B               	movwf	(btemp+10)^0,c
 27209  01BD88  0E7F               	movlw	127
 27210  01BD8A  6E0C               	movwf	(btemp+11)^0,c
 27211                           
 27212                           ;stkvar	_u @ sp[(-4)+0]
 27213  01BD8C  0EFC               	movlw	-4
 27214  01BD8E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27215  01BD94  0EFD               	movlw	-3
 27216  01BD96  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27217  01BD9C  0EFE               	movlw	-2
 27218  01BD9E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27219  01BDA4  0EFF               	movlw	-1
 27220  01BDA6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27221                           
 27222                           ;stkvar	_u @ sp[(-4)+0]
 27223  01BDAC  0EFC               	movlw	-4
 27224  01BDAE  006F FF8C  F001    	movff	plusw1,btemp
 27225  01BDB4  0EFD               	movlw	-3
 27226  01BDB6  006F FF8C  F002    	movff	plusw1,btemp+1
 27227  01BDBC  0EFE               	movlw	-2
 27228  01BDBE  006F FF8C  F003    	movff	plusw1,btemp+2
 27229  01BDC4  0EFF               	movlw	-1
 27230  01BDC6  006F FF8C  F004    	movff	plusw1,btemp+3
 27231                           
 27232                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 27233  01BDCC  0EFA               	movlw	250
 27234  01BDCE  26E1               	addwf	fsr1l,f,c
 27235  01BDD0  0EFF               	movlw	255
 27236  01BDD2  22E2               	addwfc	fsr1h,f,c
 27237  01BDD4  0012               	return		;funcret
 27238  01BDD6                     __end_of_nanf:
 27239                           	opt callstack 0
 27240                           
 27241 ;; *************** function _get_raw_result *****************
 27242 ;; Defined at:
 27243 ;;		line 119 in file "daq.c"
 27244 ;; Parameters:    Size  Location     Type
 27245 ;;  index           1  [STACK] const enum E16590
 27246 ;; Auto vars:     Size  Location     Type
 27247 ;;		None
 27248 ;; Return value:  Size  Location     Type
 27249 ;;                  2  [STACK] unsigned short 
 27250 ;; Registers used:
 27251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 27252 ;; Tracked objects:
 27253 ;;		On entry : 0/1
 27254 ;;		On exit  : 0/0
 27255 ;;		Unchanged: 0/0
 27256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27261 ;;Total ram usage:        0 bytes
 27262 ;; Hardware stack levels used:    1
 27263 ;; Hardware stack levels required when called:   15
 27264 ;; This function calls:
 27265 ;;		Nothing
 27266 ;; This function is called by:
 27267 ;;		_main
 27268 ;;		_current_sensor_cal
 27269 ;;		_conv_raw_result
 27270 ;;		_cal_current_zero
 27271 ;; This function uses a reentrant model
 27272 ;;
 27273                           
 27274                           	psect	text111
 27275  01CC82                     __ptext111:
 27276                           	opt callstack 0
 27277  01CC82                     _get_raw_result:
 27278                           	opt callstack 0
 27279                           
 27280                           ;daq.c: 119: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 120: {;daq.c
      +                          : 121:  return R.raw_adc[index];
 27281                           ;stkvar	_index @ sp[(0)+-1]
 27282                           
 27283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27284                           ;incstack = 0
 27285 ;; hardware stack exceeded
 27286  01CC82  0EFF               	movlw	-1
 27287  01CC84  50E3               	movf	plusw1,w,c
 27288  01CC86  0D02               	mullw	2
 27289  01CC88  50F3               	movf	243,w,c
 27290  01CC8A  0FAB               	addlw	low _R
 27291  01CC8C  6ED9               	movwf	fsr2l,c
 27292  01CC8E  6ADA               	clrf	fsr2h,c
 27293  01CC90  006F FF78  F001    	movff	postinc2,btemp
 27294  01CC96  006F FF74  F002    	movff	postdec2,btemp+1
 27295                           
 27296                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 27297  01CC9C  52E5               	movf	postdec1,f,c
 27298  01CC9E  0012               	return		;funcret
 27299  01CCA0                     __end_of_get_raw_result:
 27300                           	opt callstack 0
 27301                           
 27302 ;; *************** function ___xxtofl *****************
 27303 ;; Defined at:
 27304 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 27305 ;; Parameters:    Size  Location     Type
 27306 ;;  sign            1  [STACK] unsigned char 
 27307 ;;  val             4  [STACK] long 
 27308 ;; Auto vars:     Size  Location     Type
 27309 ;;  arg             4  [STACK] unsigned long 
 27310 ;;  exp             1  [STACK] unsigned char 
 27311 ;; Return value:  Size  Location     Type
 27312 ;;                  4  [STACK] unsigned char 
 27313 ;; Registers used:
 27314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27315 ;; Tracked objects:
 27316 ;;		On entry : 0/0
 27317 ;;		On exit  : 0/0
 27318 ;;		Unchanged: 0/0
 27319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27324 ;;Total ram usage:        0 bytes
 27325 ;; Hardware stack levels used:    1
 27326 ;; Hardware stack levels required when called:   15
 27327 ;; This function calls:
 27328 ;;		Nothing
 27329 ;; This function is called by:
 27330 ;;		_conv_raw_result
 27331 ;;		_init_bsoc
 27332 ;; This function uses a reentrant model
 27333 ;;
 27334                           
 27335                           	psect	text112
 27336  018AFC                     __ptext112:
 27337                           	opt callstack 0
 27338  018AFC                     ___xxtofl:
 27339                           	opt callstack 0
 27340                           
 27341                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27342  018AFC  0E05               	movlw	5
 27343  018AFE  26E1               	addwf	fsr1l,f,c
 27344  018B00  0E00               	movlw	0
 27345  018B02  22E2               	addwfc	fsr1h,f,c
 27346                           
 27347                           ;stkvar	_sign @ sp[(-5)+-1]
 27348                           
 27349                           ;incstack = 0
 27350 ;; hardware stack exceeded
 27351  018B04  0EFA               	movlw	-6
 27352  018B06  50E3               	movf	plusw1,w,c
 27353  018B08  B4D8               	btfsc	status,2,c
 27354  018B0A  D01D               	goto	l10100
 27355                           
 27356                           ;stkvar	_val @ sp[(-5)+-5]
 27357  018B0C  0EF9               	movlw	-7
 27358  018B0E  AEE3               	btfss	plusw1,7,c
 27359  018B10  D01A               	goto	l10100
 27360                           
 27361                           ;stkvar	_val @ sp[(-5)+-5]
 27362  018B12  0EF6               	movlw	-10
 27363  018B14  006F FF8C  F009    	movff	plusw1,btemp+8
 27364  018B1A  0EF7               	movlw	-9
 27365  018B1C  006F FF8C  F00A    	movff	plusw1,btemp+9
 27366  018B22  0EF8               	movlw	-8
 27367  018B24  006F FF8C  F00B    	movff	plusw1,btemp+10
 27368  018B2A  0EF9               	movlw	-7
 27369  018B2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27370  018B32  1E09               	comf	(btemp+8)^0,f,c
 27371  018B34  1E0A               	comf	(btemp+9)^0,f,c
 27372  018B36  1E0B               	comf	(btemp+10)^0,f,c
 27373  018B38  1E0C               	comf	(btemp+11)^0,f,c
 27374  018B3A  2A09               	incf	(btemp+8)^0,f,c
 27375  018B3C  0E00               	movlw	0
 27376  018B3E  220A               	addwfc	(btemp+9)^0,f,c
 27377  018B40  220B               	addwfc	(btemp+10)^0,f,c
 27378  018B42  220C               	addwfc	(btemp+11)^0,f,c
 27379  018B44  D010               	goto	L34
 27380  018B46                     l10100:
 27381                           
 27382                           ;stkvar	_val @ sp[(-5)+-5]
 27383  018B46  0EF6               	movlw	-10
 27384  018B48  006F FF8C  F009    	movff	plusw1,btemp+8
 27385  018B4E  0EF7               	movlw	-9
 27386  018B50  006F FF8C  F00A    	movff	plusw1,btemp+9
 27387  018B56  0EF8               	movlw	-8
 27388  018B58  006F FF8C  F00B    	movff	plusw1,btemp+10
 27389  018B5E  0EF9               	movlw	-7
 27390  018B60  006F FF8C  F00C    	movff	plusw1,btemp+11
 27391  018B66                     L34:
 27392                           
 27393                           ;stkvar	_arg @ sp[(-5)+0]
 27394  018B66  0EFB               	movlw	-5
 27395  018B68  0060  F027  FFE3   	movff	btemp+8,plusw1
 27396  018B6E  0EFC               	movlw	-4
 27397  018B70  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27398  018B76  0EFD               	movlw	-3
 27399  018B78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27400  018B7E  0EFE               	movlw	-2
 27401  018B80  0060  F033  FFE3   	movff	btemp+11,plusw1
 27402                           
 27403                           ;stkvar	_val @ sp[(-5)+-5]
 27404  018B86  0EF6               	movlw	-10
 27405  018B88  50E3               	movf	plusw1,w,c
 27406  018B8A  E113               	bnz	l10108
 27407  018B8C  0EF7               	movlw	-9
 27408  018B8E  50E3               	movf	plusw1,w,c
 27409  018B90  E110               	bnz	l10108
 27410  018B92  0EF8               	movlw	-8
 27411  018B94  50E3               	movf	plusw1,w,c
 27412  018B96  E10D               	bnz	l10108
 27413  018B98  0EF9               	movlw	-7
 27414  018B9A  50E3               	movf	plusw1,w,c
 27415  018B9C  A4D8               	btfss	status,2,c
 27416  018B9E  D009               	goto	l10108
 27417  018BA0  0E00               	movlw	0
 27418  018BA2  6E01               	movwf	btemp^0,c
 27419  018BA4  0E00               	movlw	0
 27420  018BA6  6E02               	movwf	(btemp+1)^0,c
 27421  018BA8  0E00               	movlw	0
 27422  018BAA  6E03               	movwf	(btemp+2)^0,c
 27423  018BAC  0E00               	movlw	0
 27424  018BAE  6E04               	movwf	(btemp+3)^0,c
 27425  018BB0  D0A2               	goto	l3205
 27426  018BB2                     l10108:
 27427  018BB2  0E96               	movlw	150
 27428  018BB4  6E0C               	movwf	(btemp+11)^0,c
 27429                           
 27430                           ;stkvar	_exp @ sp[(-5)+4]
 27431  018BB6  0EFF               	movlw	-1
 27432  018BB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 27433  018BBE  D00B               	goto	l10112
 27434  018BC0                     l10110:
 27435                           
 27436                           ;stkvar	_exp @ sp[(-5)+4]
 27437  018BC0  0EFF               	movlw	-1
 27438  018BC2  2AE3               	incf	plusw1,f,c
 27439                           
 27440                           ;stkvar	_arg @ sp[(-5)+0]
 27441  018BC4  90D8               	bcf	status,0,c
 27442  018BC6  0EFE               	movlw	-2
 27443  018BC8  32E3               	rrcf	plusw1,f,c
 27444  018BCA  0EFD               	movlw	-3
 27445  018BCC  32E3               	rrcf	plusw1,f,c
 27446  018BCE  0EFC               	movlw	-4
 27447  018BD0  32E3               	rrcf	plusw1,f,c
 27448  018BD2  0EFB               	movlw	-5
 27449  018BD4  32E3               	rrcf	plusw1,f,c
 27450  018BD6                     l10112:
 27451                           
 27452                           ;stkvar	_arg @ sp[(-5)+0]
 27453  018BD6  50E1               	movf	fsr1l,w,c
 27454  018BD8  0FFB               	addlw	-5
 27455  018BDA  6ED9               	movwf	fsr2l,c
 27456  018BDC  50E2               	movf	fsr1h,w,c
 27457  018BDE  6EDA               	movwf	fsr2h,c
 27458  018BE0  0EFF               	movlw	255
 27459  018BE2  22DA               	addwfc	fsr2h,f,c
 27460  018BE4  52DE               	movf	postinc2,f,c
 27461  018BE6  52DE               	movf	postinc2,f,c
 27462  018BE8  52DE               	movf	postinc2,f,c
 27463  018BEA  0EFE               	movlw	254
 27464  018BEC  14DD               	andwf	postdec2,w,c
 27465  018BEE  B4D8               	btfsc	status,2,c
 27466  018BF0  D018               	goto	l10120
 27467  018BF2  D7E6               	goto	l10110
 27468  018BF4                     l10114:
 27469                           
 27470                           ;stkvar	_exp @ sp[(-5)+4]
 27471  018BF4  0EFF               	movlw	-1
 27472  018BF6  2AE3               	incf	plusw1,f,c
 27473                           
 27474                           ;stkvar	_arg @ sp[(-5)+0]
 27475  018BF8  50E1               	movf	fsr1l,w,c
 27476  018BFA  0FFB               	addlw	-5
 27477  018BFC  6ED9               	movwf	fsr2l,c
 27478  018BFE  50E2               	movf	fsr1h,w,c
 27479  018C00  6EDA               	movwf	fsr2h,c
 27480  018C02  0EFF               	movlw	255
 27481  018C04  22DA               	addwfc	fsr2h,f,c
 27482  018C06  2ADE               	incf	postinc2,f,c
 27483  018C08  0E00               	movlw	0
 27484  018C0A  22DE               	addwfc	postinc2,f,c
 27485  018C0C  22DE               	addwfc	postinc2,f,c
 27486  018C0E  22DE               	addwfc	postinc2,f,c
 27487                           
 27488                           ;stkvar	_arg @ sp[(-5)+0]
 27489  018C10  90D8               	bcf	status,0,c
 27490  018C12  0EFE               	movlw	-2
 27491  018C14  32E3               	rrcf	plusw1,f,c
 27492  018C16  0EFD               	movlw	-3
 27493  018C18  32E3               	rrcf	plusw1,f,c
 27494  018C1A  0EFC               	movlw	-4
 27495  018C1C  32E3               	rrcf	plusw1,f,c
 27496  018C1E  0EFB               	movlw	-5
 27497  018C20  32E3               	rrcf	plusw1,f,c
 27498  018C22                     l10120:
 27499                           
 27500                           ;stkvar	_arg @ sp[(-5)+0]
 27501  018C22  50E1               	movf	fsr1l,w,c
 27502  018C24  0FFB               	addlw	-5
 27503  018C26  6ED9               	movwf	fsr2l,c
 27504  018C28  50E2               	movf	fsr1h,w,c
 27505  018C2A  6EDA               	movwf	fsr2h,c
 27506  018C2C  0EFF               	movlw	255
 27507  018C2E  22DA               	addwfc	fsr2h,f,c
 27508  018C30  52DE               	movf	postinc2,f,c
 27509  018C32  52DE               	movf	postinc2,f,c
 27510  018C34  52DE               	movf	postinc2,f,c
 27511  018C36  0EFF               	movlw	255
 27512  018C38  14DD               	andwf	postdec2,w,c
 27513  018C3A  B4D8               	btfsc	status,2,c
 27514  018C3C  D00C               	goto	l10124
 27515  018C3E  D7DA               	goto	l10114
 27516  018C40                     l10122:
 27517                           
 27518                           ;stkvar	_exp @ sp[(-5)+4]
 27519  018C40  0EFF               	movlw	-1
 27520  018C42  06E3               	decf	plusw1,f,c
 27521                           
 27522                           ;stkvar	_arg @ sp[(-5)+0]
 27523  018C44  90D8               	bcf	status,0,c
 27524  018C46  0EFB               	movlw	-5
 27525  018C48  36E3               	rlcf	plusw1,f,c
 27526  018C4A  0EFC               	movlw	-4
 27527  018C4C  36E3               	rlcf	plusw1,f,c
 27528  018C4E  0EFD               	movlw	-3
 27529  018C50  36E3               	rlcf	plusw1,f,c
 27530  018C52  0EFE               	movlw	-2
 27531  018C54  36E3               	rlcf	plusw1,f,c
 27532  018C56                     l10124:
 27533                           
 27534                           ;stkvar	_arg @ sp[(-5)+0]
 27535  018C56  0EFD               	movlw	-3
 27536  018C58  BEE3               	btfsc	plusw1,7,c
 27537  018C5A  D007               	goto	u9370
 27538                           
 27539                           ;stkvar	_exp @ sp[(-5)+4]
 27540  018C5C  0EFF               	movlw	-1
 27541  018C5E  006F FF8C  F001    	movff	plusw1,btemp
 27542  018C64  0E02               	movlw	2
 27543  018C66  6001               	cpfslt	btemp^0,c
 27544  018C68  D7EB               	goto	l10122
 27545  018C6A                     u9370:
 27546                           
 27547                           ;stkvar	_exp @ sp[(-5)+4]
 27548  018C6A  0EFF               	movlw	-1
 27549  018C6C  B0E3               	btfsc	plusw1,0,c
 27550  018C6E  D002               	goto	l10132
 27551                           
 27552                           ;stkvar	_arg @ sp[(-5)+0]
 27553  018C70  0EFD               	movlw	-3
 27554  018C72  9EE3               	bcf	plusw1,7,c
 27555  018C74                     l10132:
 27556                           
 27557                           ;stkvar	_exp @ sp[(-5)+4]
 27558  018C74  50E1               	movf	fsr1l,w,c
 27559  018C76  0FFF               	addlw	-1
 27560  018C78  6ED9               	movwf	fsr2l,c
 27561  018C7A  50E2               	movf	fsr1h,w,c
 27562  018C7C  6EDA               	movwf	fsr2h,c
 27563  018C7E  0EFF               	movlw	255
 27564  018C80  22DA               	addwfc	fsr2h,f,c
 27565  018C82  90D8               	bcf	status,0,c
 27566  018C84  32DF               	rrcf	indf2,f,c
 27567                           
 27568                           ;stkvar	_exp @ sp[(-5)+4]
 27569  018C86  0EFF               	movlw	-1
 27570  018C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 27571  018C8E  0060  F030  F005   	movff	btemp+11,btemp+4
 27572  018C94  6A06               	clrf	(btemp+5)^0,c
 27573  018C96  6A07               	clrf	(btemp+6)^0,c
 27574  018C98  6A08               	clrf	(btemp+7)^0,c
 27575  018C9A  0060  F014  F008   	movff	btemp+4,btemp+7
 27576  018CA0  6A07               	clrf	(btemp+6)^0,c
 27577  018CA2  6A06               	clrf	(btemp+5)^0,c
 27578  018CA4  6A05               	clrf	(btemp+4)^0,c
 27579                           
 27580                           ;stkvar	_arg @ sp[(-5)+0]
 27581  018CA6  50E1               	movf	fsr1l,w,c
 27582  018CA8  0FFB               	addlw	-5
 27583  018CAA  6ED9               	movwf	fsr2l,c
 27584  018CAC  50E2               	movf	fsr1h,w,c
 27585  018CAE  6EDA               	movwf	fsr2h,c
 27586  018CB0  0EFF               	movlw	255
 27587  018CB2  22DA               	addwfc	fsr2h,f,c
 27588  018CB4  5005               	movf	(btemp+4)^0,w,c
 27589  018CB6  12DE               	iorwf	postinc2,f,c
 27590  018CB8  5006               	movf	(btemp+5)^0,w,c
 27591  018CBA  12DE               	iorwf	postinc2,f,c
 27592  018CBC  5007               	movf	(btemp+6)^0,w,c
 27593  018CBE  12DE               	iorwf	postinc2,f,c
 27594  018CC0  5008               	movf	(btemp+7)^0,w,c
 27595  018CC2  12DE               	iorwf	postinc2,f,c
 27596                           
 27597                           ;stkvar	_sign @ sp[(-5)+-1]
 27598  018CC4  0EFA               	movlw	-6
 27599  018CC6  50E3               	movf	plusw1,w,c
 27600  018CC8  B4D8               	btfsc	status,2,c
 27601  018CCA  D005               	goto	l10142
 27602                           
 27603                           ;stkvar	_val @ sp[(-5)+-5]
 27604  018CCC  0EF9               	movlw	-7
 27605  018CCE  AEE3               	btfss	plusw1,7,c
 27606  018CD0  D002               	goto	l10142
 27607                           
 27608                           ;stkvar	_arg @ sp[(-5)+0]
 27609  018CD2  0EFE               	movlw	-2
 27610  018CD4  8EE3               	bsf	plusw1,7,c
 27611  018CD6                     l10142:
 27612                           
 27613                           ;stkvar	_arg @ sp[(-5)+0]
 27614  018CD6  0EFB               	movlw	-5
 27615  018CD8  006F FF8C  F001    	movff	plusw1,btemp
 27616  018CDE  0EFC               	movlw	-4
 27617  018CE0  006F FF8C  F002    	movff	plusw1,btemp+1
 27618  018CE6  0EFD               	movlw	-3
 27619  018CE8  006F FF8C  F003    	movff	plusw1,btemp+2
 27620  018CEE  0EFE               	movlw	-2
 27621  018CF0  006F FF8C  F004    	movff	plusw1,btemp+3
 27622  018CF6                     l3205:
 27623                           
 27624                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 27625  018CF6  0EF6               	movlw	246
 27626  018CF8  26E1               	addwf	fsr1l,f,c
 27627  018CFA  0EFF               	movlw	255
 27628  018CFC  22E2               	addwfc	fsr1h,f,c
 27629  018CFE  0012               	return		;funcret
 27630  018D00                     __end_of___xxtofl:
 27631                           	opt callstack 0
 27632                           
 27633 ;; *************** function ___fldiv *****************
 27634 ;; Defined at:
 27635 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 27636 ;; Parameters:    Size  Location     Type
 27637 ;;  b               4  [STACK] unsigned char 
 27638 ;;  a               4  [STACK] unsigned char 
 27639 ;; Auto vars:     Size  Location     Type
 27640 ;;  grs             4  [STACK] unsigned long 
 27641 ;;  rem             4  [STACK] unsigned long 
 27642 ;;  new_exp         2  [STACK] short 
 27643 ;;  aexp            1  [STACK] unsigned char 
 27644 ;;  bexp            1  [STACK] unsigned char 
 27645 ;;  sign            1  [STACK] unsigned char 
 27646 ;; Return value:  Size  Location     Type
 27647 ;;                  4  [STACK] unsigned char 
 27648 ;; Registers used:
 27649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 27650 ;; Tracked objects:
 27651 ;;		On entry : 0/0
 27652 ;;		On exit  : 0/0
 27653 ;;		Unchanged: 0/0
 27654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27659 ;;Total ram usage:        0 bytes
 27660 ;; Hardware stack levels used:    1
 27661 ;; Hardware stack levels required when called:   15
 27662 ;; This function calls:
 27663 ;;		Nothing
 27664 ;; This function is called by:
 27665 ;;		_conv_raw_result
 27666 ;;		_convert_dac_raw
 27667 ;;		_calc_bsoc
 27668 ;;		_init_bsoc
 27669 ;;		_esr_check
 27670 ;;		_efgtoa
 27671 ;; This function uses a reentrant model
 27672 ;;
 27673                           
 27674                           	psect	text113
 27675  014E9A                     __ptext113:
 27676                           	opt callstack 0
 27677  014E9A                     ___fldiv:
 27678                           	opt callstack 0
 27679                           
 27680                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27681  014E9A  0E0D               	movlw	13
 27682  014E9C  26E1               	addwf	fsr1l,f,c
 27683  014E9E  0E00               	movlw	0
 27684  014EA0  22E2               	addwfc	fsr1h,f,c
 27685                           
 27686                           ;stkvar	_b @ sp[(-13)+-4]
 27687                           
 27688                           ;incstack = 0
 27689 ;; hardware stack exceeded
 27690  014EA2  0EF2               	movlw	242
 27691  014EA4  24E1               	addwf	fsr1l,w,c
 27692  014EA6  6ED9               	movwf	fsr2l,c
 27693  014EA8  0EFF               	movlw	255
 27694  014EAA  20E2               	addwfc	fsr1h,w,c
 27695  014EAC  6EDA               	movwf	fsr2h,c
 27696  014EAE  50DF               	movf	indf2,w,c
 27697  014EB0  6E0C               	movwf	(btemp+11)^0,c
 27698  014EB2  0E80               	movlw	128
 27699  014EB4  160C               	andwf	(btemp+11)^0,f,c
 27700                           
 27701                           ;stkvar	_sign @ sp[(-13)+12]
 27702  014EB6  0EFF               	movlw	-1
 27703  014EB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 27704                           
 27705                           ;stkvar	_b @ sp[(-13)+-4]
 27706  014EBE  0EF2               	movlw	242
 27707  014EC0  24E1               	addwf	fsr1l,w,c
 27708  014EC2  6ED9               	movwf	fsr2l,c
 27709  014EC4  0EFF               	movlw	255
 27710  014EC6  20E2               	addwfc	fsr1h,w,c
 27711  014EC8  6EDA               	movwf	fsr2h,c
 27712  014ECA  50DF               	movf	indf2,w,c
 27713  014ECC  6E0C               	movwf	(btemp+11)^0,c
 27714  014ECE  90D8               	bcf	status,0,c
 27715  014ED0  340C               	rlcf	(btemp+11)^0,w,c
 27716  014ED2  6E0B               	movwf	(btemp+10)^0,c
 27717                           
 27718                           ;stkvar	_bexp @ sp[(-13)+11]
 27719  014ED4  0EFE               	movlw	-2
 27720  014ED6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27721                           
 27722                           ;stkvar	_b @ sp[(-13)+-4]
 27723  014EDC  0EF1               	movlw	241
 27724  014EDE  24E1               	addwf	fsr1l,w,c
 27725  014EE0  6ED9               	movwf	fsr2l,c
 27726  014EE2  0EFF               	movlw	255
 27727  014EE4  20E2               	addwfc	fsr1h,w,c
 27728  014EE6  6EDA               	movwf	fsr2h,c
 27729  014EE8  AEDF               	btfss	indf2,7,c
 27730  014EEA  D002               	goto	l8672
 27731                           
 27732                           ;stkvar	_bexp @ sp[(-13)+11]
 27733  014EEC  0EFE               	movlw	-2
 27734  014EEE  80E3               	bsf	plusw1,0,c
 27735  014EF0                     l8672:
 27736                           
 27737                           ;stkvar	_bexp @ sp[(-13)+11]
 27738  014EF0  0EFE               	movlw	-2
 27739  014EF2  50E3               	movf	plusw1,w,c
 27740  014EF4  B4D8               	btfsc	status,2,c
 27741  014EF6  D027               	goto	l8682
 27742                           
 27743                           ;stkvar	_bexp @ sp[(-13)+11]
 27744  014EF8  0EFE               	movlw	-2
 27745  014EFA  28E3               	incf	plusw1,w,c
 27746  014EFC  A4D8               	btfss	status,2,c
 27747  014EFE  D018               	goto	l8678
 27748  014F00  0E00               	movlw	0
 27749  014F02  6E09               	movwf	(btemp+8)^0,c
 27750  014F04  0E00               	movlw	0
 27751  014F06  6E0A               	movwf	(btemp+9)^0,c
 27752  014F08  0E00               	movlw	0
 27753  014F0A  6E0B               	movwf	(btemp+10)^0,c
 27754  014F0C  0E00               	movlw	0
 27755  014F0E  6E0C               	movwf	(btemp+11)^0,c
 27756                           
 27757                           ;stkvar	_b @ sp[(-13)+-4]
 27758  014F10  0EEF               	movlw	-17
 27759  014F12  0060  F027  FFE3   	movff	btemp+8,plusw1
 27760  014F18  0EF0               	movlw	-16
 27761  014F1A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27762  014F20  0EF1               	movlw	-15
 27763  014F22  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27764  014F28  0EF2               	movlw	-14
 27765  014F2A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27766  014F30                     l8678:
 27767                           
 27768                           ;stkvar	_b @ sp[(-13)+-4]
 27769  014F30  0EF1               	movlw	-15
 27770  014F32  8EE3               	bsf	plusw1,7,c
 27771                           
 27772                           ;stkvar	_b @ sp[(-13)+-4]
 27773  014F34  0EF2               	movlw	242
 27774  014F36  24E1               	addwf	fsr1l,w,c
 27775  014F38  6ED9               	movwf	fsr2l,c
 27776  014F3A  0EFF               	movlw	255
 27777  014F3C  20E2               	addwfc	fsr1h,w,c
 27778  014F3E  6EDA               	movwf	fsr2h,c
 27779  014F40  0E00               	movlw	0
 27780  014F42  6EDF               	movwf	indf2,c
 27781  014F44  D018               	goto	l8684
 27782  014F46                     l8682:
 27783  014F46  0E00               	movlw	0
 27784  014F48  6E09               	movwf	(btemp+8)^0,c
 27785  014F4A  0E00               	movlw	0
 27786  014F4C  6E0A               	movwf	(btemp+9)^0,c
 27787  014F4E  0E00               	movlw	0
 27788  014F50  6E0B               	movwf	(btemp+10)^0,c
 27789  014F52  0E00               	movlw	0
 27790  014F54  6E0C               	movwf	(btemp+11)^0,c
 27791                           
 27792                           ;stkvar	_b @ sp[(-13)+-4]
 27793  014F56  0EEF               	movlw	-17
 27794  014F58  0060  F027  FFE3   	movff	btemp+8,plusw1
 27795  014F5E  0EF0               	movlw	-16
 27796  014F60  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27797  014F66  0EF1               	movlw	-15
 27798  014F68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27799  014F6E  0EF2               	movlw	-14
 27800  014F70  0060  F033  FFE3   	movff	btemp+11,plusw1
 27801  014F76                     l8684:
 27802                           
 27803                           ;stkvar	_a @ sp[(-13)+-8]
 27804  014F76  0EEE               	movlw	238
 27805  014F78  24E1               	addwf	fsr1l,w,c
 27806  014F7A  6ED9               	movwf	fsr2l,c
 27807  014F7C  0EFF               	movlw	255
 27808  014F7E  20E2               	addwfc	fsr1h,w,c
 27809  014F80  6EDA               	movwf	fsr2h,c
 27810  014F82  50DF               	movf	indf2,w,c
 27811  014F84  6E0C               	movwf	(btemp+11)^0,c
 27812  014F86  0E80               	movlw	128
 27813  014F88  160C               	andwf	(btemp+11)^0,f,c
 27814                           
 27815                           ;stkvar	_sign @ sp[(-13)+12]
 27816  014F8A  50E1               	movf	fsr1l,w,c
 27817  014F8C  0FFF               	addlw	-1
 27818  014F8E  6ED9               	movwf	fsr2l,c
 27819  014F90  50E2               	movf	fsr1h,w,c
 27820  014F92  6EDA               	movwf	fsr2h,c
 27821  014F94  0EFF               	movlw	255
 27822  014F96  22DA               	addwfc	fsr2h,f,c
 27823  014F98  500C               	movf	(btemp+11)^0,w,c
 27824  014F9A  1ADF               	xorwf	indf2,f,c
 27825                           
 27826                           ;stkvar	_a @ sp[(-13)+-8]
 27827  014F9C  0EEE               	movlw	238
 27828  014F9E  24E1               	addwf	fsr1l,w,c
 27829  014FA0  6ED9               	movwf	fsr2l,c
 27830  014FA2  0EFF               	movlw	255
 27831  014FA4  20E2               	addwfc	fsr1h,w,c
 27832  014FA6  6EDA               	movwf	fsr2h,c
 27833  014FA8  50DF               	movf	indf2,w,c
 27834  014FAA  6E0C               	movwf	(btemp+11)^0,c
 27835  014FAC  90D8               	bcf	status,0,c
 27836  014FAE  340C               	rlcf	(btemp+11)^0,w,c
 27837  014FB0  6E0B               	movwf	(btemp+10)^0,c
 27838                           
 27839                           ;stkvar	_aexp @ sp[(-13)+10]
 27840  014FB2  0EFD               	movlw	-3
 27841  014FB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27842                           
 27843                           ;stkvar	_a @ sp[(-13)+-8]
 27844  014FBA  0EED               	movlw	237
 27845  014FBC  24E1               	addwf	fsr1l,w,c
 27846  014FBE  6ED9               	movwf	fsr2l,c
 27847  014FC0  0EFF               	movlw	255
 27848  014FC2  20E2               	addwfc	fsr1h,w,c
 27849  014FC4  6EDA               	movwf	fsr2h,c
 27850  014FC6  AEDF               	btfss	indf2,7,c
 27851  014FC8  D002               	goto	l8692
 27852                           
 27853                           ;stkvar	_aexp @ sp[(-13)+10]
 27854  014FCA  0EFD               	movlw	-3
 27855  014FCC  80E3               	bsf	plusw1,0,c
 27856  014FCE                     l8692:
 27857                           
 27858                           ;stkvar	_aexp @ sp[(-13)+10]
 27859  014FCE  0EFD               	movlw	-3
 27860  014FD0  50E3               	movf	plusw1,w,c
 27861  014FD2  B4D8               	btfsc	status,2,c
 27862  014FD4  D027               	goto	l8702
 27863                           
 27864                           ;stkvar	_aexp @ sp[(-13)+10]
 27865  014FD6  0EFD               	movlw	-3
 27866  014FD8  28E3               	incf	plusw1,w,c
 27867  014FDA  A4D8               	btfss	status,2,c
 27868  014FDC  D018               	goto	l8698
 27869  014FDE  0E00               	movlw	0
 27870  014FE0  6E09               	movwf	(btemp+8)^0,c
 27871  014FE2  0E00               	movlw	0
 27872  014FE4  6E0A               	movwf	(btemp+9)^0,c
 27873  014FE6  0E00               	movlw	0
 27874  014FE8  6E0B               	movwf	(btemp+10)^0,c
 27875  014FEA  0E00               	movlw	0
 27876  014FEC  6E0C               	movwf	(btemp+11)^0,c
 27877                           
 27878                           ;stkvar	_a @ sp[(-13)+-8]
 27879  014FEE  0EEB               	movlw	-21
 27880  014FF0  0060  F027  FFE3   	movff	btemp+8,plusw1
 27881  014FF6  0EEC               	movlw	-20
 27882  014FF8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27883  014FFE  0EED               	movlw	-19
 27884  015000  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27885  015006  0EEE               	movlw	-18
 27886  015008  0060  F033  FFE3   	movff	btemp+11,plusw1
 27887  01500E                     l8698:
 27888                           
 27889                           ;stkvar	_a @ sp[(-13)+-8]
 27890  01500E  0EED               	movlw	-19
 27891  015010  8EE3               	bsf	plusw1,7,c
 27892                           
 27893                           ;stkvar	_a @ sp[(-13)+-8]
 27894  015012  0EEE               	movlw	238
 27895  015014  24E1               	addwf	fsr1l,w,c
 27896  015016  6ED9               	movwf	fsr2l,c
 27897  015018  0EFF               	movlw	255
 27898  01501A  20E2               	addwfc	fsr1h,w,c
 27899  01501C  6EDA               	movwf	fsr2h,c
 27900  01501E  0E00               	movlw	0
 27901  015020  6EDF               	movwf	indf2,c
 27902  015022  D018               	goto	l8704
 27903  015024                     l8702:
 27904  015024  0E00               	movlw	0
 27905  015026  6E09               	movwf	(btemp+8)^0,c
 27906  015028  0E00               	movlw	0
 27907  01502A  6E0A               	movwf	(btemp+9)^0,c
 27908  01502C  0E00               	movlw	0
 27909  01502E  6E0B               	movwf	(btemp+10)^0,c
 27910  015030  0E00               	movlw	0
 27911  015032  6E0C               	movwf	(btemp+11)^0,c
 27912                           
 27913                           ;stkvar	_a @ sp[(-13)+-8]
 27914  015034  0EEB               	movlw	-21
 27915  015036  0060  F027  FFE3   	movff	btemp+8,plusw1
 27916  01503C  0EEC               	movlw	-20
 27917  01503E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27918  015044  0EED               	movlw	-19
 27919  015046  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27920  01504C  0EEE               	movlw	-18
 27921  01504E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27922  015054                     l8704:
 27923                           
 27924                           ;stkvar	_a @ sp[(-13)+-8]
 27925  015054  0EEB               	movlw	-21
 27926  015056  50E3               	movf	plusw1,w,c
 27927  015058  E139               	bnz	l8716
 27928  01505A  0EEC               	movlw	-20
 27929  01505C  50E3               	movf	plusw1,w,c
 27930  01505E  E136               	bnz	l8716
 27931  015060  0EED               	movlw	-19
 27932  015062  50E3               	movf	plusw1,w,c
 27933  015064  E133               	bnz	l8716
 27934  015066  0EEE               	movlw	-18
 27935  015068  50E3               	movf	plusw1,w,c
 27936  01506A  A4D8               	btfss	status,2,c
 27937  01506C  D02F               	goto	l8716
 27938                           
 27939                           ;stkvar	_b @ sp[(-13)+-4]
 27940  01506E  0EEF               	movlw	-17
 27941  015070  6AE3               	clrf	plusw1,c
 27942  015072  0EF0               	movlw	-16
 27943  015074  6AE3               	clrf	plusw1,c
 27944  015076  0EF1               	movlw	-15
 27945  015078  6AE3               	clrf	plusw1,c
 27946  01507A  0EF2               	movlw	-14
 27947  01507C  6AE3               	clrf	plusw1,c
 27948                           
 27949                           ;stkvar	_b @ sp[(-13)+-4]
 27950  01507E  0EF1               	movlw	241
 27951  015080  24E1               	addwf	fsr1l,w,c
 27952  015082  6ED9               	movwf	fsr2l,c
 27953  015084  0EFF               	movlw	255
 27954  015086  20E2               	addwfc	fsr1h,w,c
 27955  015088  6EDA               	movwf	fsr2h,c
 27956  01508A  0E80               	movlw	128
 27957  01508C  12DE               	iorwf	postinc2,f,c
 27958  01508E  0E7F               	movlw	127
 27959  015090  12DD               	iorwf	postdec2,f,c
 27960  015092                     l8710:
 27961                           
 27962                           ;stkvar	_sign @ sp[(-13)+12]
 27963  015092  0EFF               	movlw	-1
 27964  015094  006F FF8C  F00C    	movff	plusw1,btemp+11
 27965                           
 27966                           ;stkvar	_b @ sp[(-13)+-4]
 27967  01509A  0EF2               	movlw	242
 27968  01509C  24E1               	addwf	fsr1l,w,c
 27969  01509E  6ED9               	movwf	fsr2l,c
 27970  0150A0  0EFF               	movlw	255
 27971  0150A2  20E2               	addwfc	fsr1h,w,c
 27972  0150A4  6EDA               	movwf	fsr2h,c
 27973  0150A6  500C               	movf	(btemp+11)^0,w,c
 27974  0150A8  12DF               	iorwf	indf2,f,c
 27975                           
 27976                           ;stkvar	_b @ sp[(-13)+-4]
 27977  0150AA  0EEF               	movlw	-17
 27978  0150AC  006F FF8C  F001    	movff	plusw1,btemp
 27979  0150B2  0EF0               	movlw	-16
 27980  0150B4  006F FF8C  F002    	movff	plusw1,btemp+1
 27981  0150BA  0EF1               	movlw	-15
 27982  0150BC  006F FF8C  F003    	movff	plusw1,btemp+2
 27983  0150C2  0EF2               	movlw	-14
 27984  0150C4  006F FF8C  F004    	movff	plusw1,btemp+3
 27985  0150CA  D19F               	goto	l3129
 27986  0150CC                     l8716:
 27987                           
 27988                           ;stkvar	_bexp @ sp[(-13)+11]
 27989  0150CC  0EFE               	movlw	-2
 27990  0150CE  50E3               	movf	plusw1,w,c
 27991  0150D0  A4D8               	btfss	status,2,c
 27992  0150D2  D009               	goto	l8724
 27993  0150D4  0E00               	movlw	0
 27994  0150D6  6E01               	movwf	btemp^0,c
 27995  0150D8  0E00               	movlw	0
 27996  0150DA  6E02               	movwf	(btemp+1)^0,c
 27997  0150DC  0E00               	movlw	0
 27998  0150DE  6E03               	movwf	(btemp+2)^0,c
 27999  0150E0  0E00               	movlw	0
 28000  0150E2  6E04               	movwf	(btemp+3)^0,c
 28001  0150E4  D192               	goto	l3129
 28002  0150E6                     l8724:
 28003                           
 28004                           ;stkvar	_bexp @ sp[(-13)+11]
 28005  0150E6  0EFE               	movlw	-2
 28006  0150E8  50E3               	movf	plusw1,w,c
 28007  0150EA  6E0B               	movwf	(btemp+10)^0,c
 28008  0150EC  6A0C               	clrf	(btemp+11)^0,c
 28009                           
 28010                           ;stkvar	_aexp @ sp[(-13)+10]
 28011  0150EE  0EFD               	movlw	-3
 28012  0150F0  50E3               	movf	plusw1,w,c
 28013  0150F2  5E0B               	subwf	(btemp+10)^0,f,c
 28014  0150F4  0E00               	movlw	0
 28015  0150F6  5A0C               	subwfb	(btemp+11)^0,f,c
 28016  0150F8  0E7F               	movlw	127
 28017  0150FA  260B               	addwf	(btemp+10)^0,f,c
 28018  0150FC  0E00               	movlw	0
 28019  0150FE  220C               	addwfc	(btemp+11)^0,f,c
 28020                           
 28021                           ;stkvar	_new_exp @ sp[(-13)+8]
 28022  015100  0EFB               	movlw	-5
 28023  015102  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28024  015108  0EFC               	movlw	-4
 28025  01510A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28026                           
 28027                           ;stkvar	_b @ sp[(-13)+-4]
 28028  015110  0EEF               	movlw	-17
 28029  015112  006F FF8C  F009    	movff	plusw1,btemp+8
 28030  015118  0EF0               	movlw	-16
 28031  01511A  006F FF8C  F00A    	movff	plusw1,btemp+9
 28032  015120  0EF1               	movlw	-15
 28033  015122  006F FF8C  F00B    	movff	plusw1,btemp+10
 28034  015128  0EF2               	movlw	-14
 28035  01512A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28036                           
 28037                           ;stkvar	_rem @ sp[(-13)+4]
 28038  015130  0EF7               	movlw	-9
 28039  015132  0060  F027  FFE3   	movff	btemp+8,plusw1
 28040  015138  0EF8               	movlw	-8
 28041  01513A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28042  015140  0EF9               	movlw	-7
 28043  015142  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28044  015148  0EFA               	movlw	-6
 28045  01514A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28046                           
 28047                           ;stkvar	_b @ sp[(-13)+-4]
 28048  015150  0EEF               	movlw	-17
 28049  015152  6AE3               	clrf	plusw1,c
 28050  015154  0EF0               	movlw	-16
 28051  015156  6AE3               	clrf	plusw1,c
 28052  015158  0EF1               	movlw	-15
 28053  01515A  6AE3               	clrf	plusw1,c
 28054  01515C  0EF2               	movlw	-14
 28055  01515E  6AE3               	clrf	plusw1,c
 28056                           
 28057                           ;stkvar	_grs @ sp[(-13)+0]
 28058  015160  0EF3               	movlw	-13
 28059  015162  6AE3               	clrf	plusw1,c
 28060  015164  0EF4               	movlw	-12
 28061  015166  6AE3               	clrf	plusw1,c
 28062  015168  0EF5               	movlw	-11
 28063  01516A  6AE3               	clrf	plusw1,c
 28064  01516C  0EF6               	movlw	-10
 28065  01516E  6AE3               	clrf	plusw1,c
 28066                           
 28067                           ;stkvar	_aexp @ sp[(-13)+10]
 28068  015170  0EFD               	movlw	-3
 28069  015172  6AE3               	clrf	plusw1,c
 28070  015174  D050               	goto	l8752
 28071  015176                     l8734:
 28072                           
 28073                           ;stkvar	_aexp @ sp[(-13)+10]
 28074  015176  0EFD               	movlw	-3
 28075  015178  50E3               	movf	plusw1,w,c
 28076  01517A  B4D8               	btfsc	status,2,c
 28077  01517C  D020               	goto	l8744
 28078                           
 28079                           ;stkvar	_rem @ sp[(-13)+4]
 28080  01517E  90D8               	bcf	status,0,c
 28081  015180  0EF7               	movlw	-9
 28082  015182  36E3               	rlcf	plusw1,f,c
 28083  015184  0EF8               	movlw	-8
 28084  015186  36E3               	rlcf	plusw1,f,c
 28085  015188  0EF9               	movlw	-7
 28086  01518A  36E3               	rlcf	plusw1,f,c
 28087  01518C  0EFA               	movlw	-6
 28088  01518E  36E3               	rlcf	plusw1,f,c
 28089                           
 28090                           ;stkvar	_b @ sp[(-13)+-4]
 28091  015190  90D8               	bcf	status,0,c
 28092  015192  0EEF               	movlw	-17
 28093  015194  36E3               	rlcf	plusw1,f,c
 28094  015196  0EF0               	movlw	-16
 28095  015198  36E3               	rlcf	plusw1,f,c
 28096  01519A  0EF1               	movlw	-15
 28097  01519C  36E3               	rlcf	plusw1,f,c
 28098  01519E  0EF2               	movlw	-14
 28099  0151A0  36E3               	rlcf	plusw1,f,c
 28100                           
 28101                           ;stkvar	_grs @ sp[(-13)+0]
 28102  0151A2  0EF6               	movlw	-10
 28103  0151A4  AEE3               	btfss	plusw1,7,c
 28104  0151A6  D002               	goto	l8742
 28105                           
 28106                           ;stkvar	_b @ sp[(-13)+-4]
 28107  0151A8  0EEF               	movlw	-17
 28108  0151AA  80E3               	bsf	plusw1,0,c
 28109  0151AC                     l8742:
 28110                           
 28111                           ;stkvar	_grs @ sp[(-13)+0]
 28112  0151AC  90D8               	bcf	status,0,c
 28113  0151AE  0EF3               	movlw	-13
 28114  0151B0  36E3               	rlcf	plusw1,f,c
 28115  0151B2  0EF4               	movlw	-12
 28116  0151B4  36E3               	rlcf	plusw1,f,c
 28117  0151B6  0EF5               	movlw	-11
 28118  0151B8  36E3               	rlcf	plusw1,f,c
 28119  0151BA  0EF6               	movlw	-10
 28120  0151BC  36E3               	rlcf	plusw1,f,c
 28121  0151BE                     l8744:
 28122                           
 28123                           ;stkvar	_a @ sp[(-13)+-8]
 28124                           ;stkvar	_rem @ sp[(-13)+4]
 28125  0151BE  50E1               	movf	fsr1l,w,c
 28126  0151C0  0FF7               	addlw	-9
 28127  0151C2  6ED9               	movwf	fsr2l,c
 28128  0151C4  50E2               	movf	fsr1h,w,c
 28129  0151C6  6EDA               	movwf	fsr2h,c
 28130  0151C8  0EFF               	movlw	255
 28131  0151CA  22DA               	addwfc	fsr2h,f,c
 28132  0151CC  0EEB               	movlw	-21
 28133  0151CE  50E3               	movf	plusw1,w,c
 28134  0151D0  5CDE               	subwf	postinc2,w,c
 28135  0151D2  0EEC               	movlw	-20
 28136  0151D4  50E3               	movf	plusw1,w,c
 28137  0151D6  58DE               	subwfb	postinc2,w,c
 28138  0151D8  0EED               	movlw	-19
 28139  0151DA  50E3               	movf	plusw1,w,c
 28140  0151DC  58DE               	subwfb	postinc2,w,c
 28141  0151DE  0EEE               	movlw	-18
 28142  0151E0  50E3               	movf	plusw1,w,c
 28143  0151E2  58DE               	subwfb	postinc2,w,c
 28144  0151E4  A0D8               	btfss	status,0,c
 28145  0151E6  D015               	goto	l8750
 28146                           
 28147                           ;stkvar	_grs @ sp[(-13)+0]
 28148  0151E8  0EF6               	movlw	-10
 28149  0151EA  8CE3               	bsf	plusw1,6,c
 28150                           
 28151                           ;stkvar	_a @ sp[(-13)+-8]
 28152                           ;stkvar	_rem @ sp[(-13)+4]
 28153  0151EC  50E1               	movf	fsr1l,w,c
 28154  0151EE  0FF7               	addlw	-9
 28155  0151F0  6ED9               	movwf	fsr2l,c
 28156  0151F2  50E2               	movf	fsr1h,w,c
 28157  0151F4  6EDA               	movwf	fsr2h,c
 28158  0151F6  0EFF               	movlw	255
 28159  0151F8  22DA               	addwfc	fsr2h,f,c
 28160  0151FA  0EEB               	movlw	-21
 28161  0151FC  50E3               	movf	plusw1,w,c
 28162  0151FE  5EDE               	subwf	postinc2,f,c
 28163  015200  0EEC               	movlw	-20
 28164  015202  50E3               	movf	plusw1,w,c
 28165  015204  5ADE               	subwfb	postinc2,f,c
 28166  015206  0EED               	movlw	-19
 28167  015208  50E3               	movf	plusw1,w,c
 28168  01520A  5ADE               	subwfb	postinc2,f,c
 28169  01520C  0EEE               	movlw	-18
 28170  01520E  50E3               	movf	plusw1,w,c
 28171  015210  5ADE               	subwfb	postinc2,f,c
 28172  015212                     l8750:
 28173                           
 28174                           ;stkvar	_aexp @ sp[(-13)+10]
 28175  015212  0EFD               	movlw	-3
 28176  015214  2AE3               	incf	plusw1,f,c
 28177  015216                     l8752:
 28178                           
 28179                           ;stkvar	_aexp @ sp[(-13)+10]
 28180  015216  0EFD               	movlw	-3
 28181  015218  006F FF8C  F001    	movff	plusw1,btemp
 28182  01521E  0E19               	movlw	25
 28183  015220  6401               	cpfsgt	btemp^0,c
 28184  015222  D7A9               	goto	l8734
 28185                           
 28186                           ;stkvar	_rem @ sp[(-13)+4]
 28187  015224  0EF7               	movlw	-9
 28188  015226  50E3               	movf	plusw1,w,c
 28189  015228  E10A               	bnz	u6960
 28190  01522A  0EF8               	movlw	-8
 28191  01522C  50E3               	movf	plusw1,w,c
 28192  01522E  E107               	bnz	u6960
 28193  015230  0EF9               	movlw	-7
 28194  015232  50E3               	movf	plusw1,w,c
 28195  015234  E104               	bnz	u6960
 28196  015236  0EFA               	movlw	-6
 28197  015238  50E3               	movf	plusw1,w,c
 28198  01523A  B4D8               	btfsc	status,2,c
 28199  01523C  D024               	goto	l8768
 28200  01523E                     u6960:
 28201                           
 28202                           ;stkvar	_grs @ sp[(-13)+0]
 28203  01523E  0EF3               	movlw	-13
 28204  015240  80E3               	bsf	plusw1,0,c
 28205  015242  D021               	goto	l8768
 28206  015244                     l8758:
 28207                           
 28208                           ;stkvar	_b @ sp[(-13)+-4]
 28209  015244  90D8               	bcf	status,0,c
 28210  015246  0EEF               	movlw	-17
 28211  015248  36E3               	rlcf	plusw1,f,c
 28212  01524A  0EF0               	movlw	-16
 28213  01524C  36E3               	rlcf	plusw1,f,c
 28214  01524E  0EF1               	movlw	-15
 28215  015250  36E3               	rlcf	plusw1,f,c
 28216  015252  0EF2               	movlw	-14
 28217  015254  36E3               	rlcf	plusw1,f,c
 28218                           
 28219                           ;stkvar	_grs @ sp[(-13)+0]
 28220  015256  0EF6               	movlw	-10
 28221  015258  AEE3               	btfss	plusw1,7,c
 28222  01525A  D002               	goto	l8764
 28223                           
 28224                           ;stkvar	_b @ sp[(-13)+-4]
 28225  01525C  0EEF               	movlw	-17
 28226  01525E  80E3               	bsf	plusw1,0,c
 28227  015260                     l8764:
 28228                           
 28229                           ;stkvar	_grs @ sp[(-13)+0]
 28230  015260  90D8               	bcf	status,0,c
 28231  015262  0EF3               	movlw	-13
 28232  015264  36E3               	rlcf	plusw1,f,c
 28233  015266  0EF4               	movlw	-12
 28234  015268  36E3               	rlcf	plusw1,f,c
 28235  01526A  0EF5               	movlw	-11
 28236  01526C  36E3               	rlcf	plusw1,f,c
 28237  01526E  0EF6               	movlw	-10
 28238  015270  36E3               	rlcf	plusw1,f,c
 28239                           
 28240                           ;stkvar	_new_exp @ sp[(-13)+8]
 28241  015272  50E1               	movf	fsr1l,w,c
 28242  015274  0FFB               	addlw	-5
 28243  015276  6ED9               	movwf	fsr2l,c
 28244  015278  50E2               	movf	fsr1h,w,c
 28245  01527A  6EDA               	movwf	fsr2h,c
 28246  01527C  0EFF               	movlw	255
 28247  01527E  22DA               	addwfc	fsr2h,f,c
 28248  015280  06DE               	decf	postinc2,f,c
 28249  015282  0E00               	movlw	0
 28250  015284  5ADD               	subwfb	postdec2,f,c
 28251  015286                     l8768:
 28252                           
 28253                           ;stkvar	_b @ sp[(-13)+-4]
 28254  015286  0EF1               	movlw	-15
 28255  015288  AEE3               	btfss	plusw1,7,c
 28256  01528A  D7DC               	goto	l8758
 28257                           
 28258                           ;stkvar	_aexp @ sp[(-13)+10]
 28259  01528C  0EFD               	movlw	-3
 28260  01528E  6AE3               	clrf	plusw1,c
 28261                           
 28262                           ;stkvar	_grs @ sp[(-13)+0]
 28263  015290  0EF6               	movlw	-10
 28264  015292  AEE3               	btfss	plusw1,7,c
 28265  015294  D020               	goto	l8782
 28266                           
 28267                           ;stkvar	_grs @ sp[(-13)+0]
 28268  015296  50E1               	movf	fsr1l,w,c
 28269  015298  0FF3               	addlw	-13
 28270  01529A  6ED9               	movwf	fsr2l,c
 28271  01529C  50E2               	movf	fsr1h,w,c
 28272  01529E  6EDA               	movwf	fsr2h,c
 28273  0152A0  0EFF               	movlw	255
 28274  0152A2  22DA               	addwfc	fsr2h,f,c
 28275  0152A4  0EFF               	movlw	255
 28276  0152A6  14DE               	andwf	postinc2,w,c
 28277  0152A8  6E09               	movwf	(btemp+8)^0,c
 28278  0152AA  0EFF               	movlw	255
 28279  0152AC  14DE               	andwf	postinc2,w,c
 28280  0152AE  6E0A               	movwf	(btemp+9)^0,c
 28281  0152B0  0EFF               	movlw	255
 28282  0152B2  14DE               	andwf	postinc2,w,c
 28283  0152B4  6E0B               	movwf	(btemp+10)^0,c
 28284  0152B6  0E7F               	movlw	127
 28285  0152B8  14DE               	andwf	postinc2,w,c
 28286  0152BA  6E0C               	movwf	(btemp+11)^0,c
 28287  0152BC  5009               	movf	(btemp+8)^0,w,c
 28288  0152BE  100A               	iorwf	(btemp+9)^0,w,c
 28289  0152C0  100B               	iorwf	(btemp+10)^0,w,c
 28290  0152C2  100C               	iorwf	(btemp+11)^0,w,c
 28291  0152C4  B4D8               	btfsc	status,2,c
 28292  0152C6  D004               	goto	l8778
 28293  0152C8                     u7000:
 28294                           
 28295                           ;stkvar	_aexp @ sp[(-13)+10]
 28296  0152C8  0EFD               	movlw	-3
 28297  0152CA  6AE3               	clrf	plusw1,c
 28298  0152CC  2AE3               	incf	plusw1,f,c
 28299  0152CE  D003               	goto	l8782
 28300  0152D0                     l8778:
 28301                           
 28302                           ;stkvar	_b @ sp[(-13)+-4]
 28303  0152D0  0EEF               	movlw	-17
 28304  0152D2  B0E3               	btfsc	plusw1,0,c
 28305  0152D4  D7F9               	goto	u7000
 28306  0152D6                     l8782:
 28307                           
 28308                           ;stkvar	_aexp @ sp[(-13)+10]
 28309  0152D6  0EFD               	movlw	-3
 28310  0152D8  50E3               	movf	plusw1,w,c
 28311  0152DA  B4D8               	btfsc	status,2,c
 28312  0152DC  D036               	goto	l8792
 28313                           
 28314                           ;stkvar	_b @ sp[(-13)+-4]
 28315  0152DE  50E1               	movf	fsr1l,w,c
 28316  0152E0  0FEF               	addlw	-17
 28317  0152E2  6ED9               	movwf	fsr2l,c
 28318  0152E4  50E2               	movf	fsr1h,w,c
 28319  0152E6  6EDA               	movwf	fsr2h,c
 28320  0152E8  0EFF               	movlw	255
 28321  0152EA  22DA               	addwfc	fsr2h,f,c
 28322  0152EC  2ADE               	incf	postinc2,f,c
 28323  0152EE  0E00               	movlw	0
 28324  0152F0  22DE               	addwfc	postinc2,f,c
 28325  0152F2  22DE               	addwfc	postinc2,f,c
 28326  0152F4  22DE               	addwfc	postinc2,f,c
 28327                           
 28328                           ;stkvar	_b @ sp[(-13)+-4]
 28329  0152F6  0EF2               	movlw	-14
 28330  0152F8  A0E3               	btfss	plusw1,0,c
 28331  0152FA  D027               	goto	l8792
 28332  0152FC  0E01               	movlw	1
 28333  0152FE  6E0C               	movwf	(btemp+11)^0,c
 28334                           
 28335                           ;stkvar	_b @ sp[(-13)+-4]
 28336  015300  50E1               	movf	fsr1l,w,c
 28337  015302  0FEF               	addlw	-17
 28338  015304  6ED9               	movwf	fsr2l,c
 28339  015306  50E2               	movf	fsr1h,w,c
 28340  015308  6EDA               	movwf	fsr2h,c
 28341  01530A  0EFF               	movlw	255
 28342  01530C  22DA               	addwfc	fsr2h,f,c
 28343  01530E  280C               	incf	(btemp+11)^0,w,c
 28344  015310  52DE               	movf	postinc2,f,c
 28345  015312  D008               	goto	u7040
 28346  015314                     u7045:
 28347  015314  52DE               	movf	postinc2,f,c
 28348  015316  90D8               	bcf	status,0,c
 28349  015318  BEDC               	btfsc	preinc2,7,c
 28350  01531A  80D8               	bsf	status,0,c
 28351  01531C  32DD               	rrcf	postdec2,f,c
 28352  01531E  32DD               	rrcf	postdec2,f,c
 28353  015320  32DD               	rrcf	postdec2,f,c
 28354  015322  32DE               	rrcf	postinc2,f,c
 28355  015324                     u7040:
 28356  015324  2EE8               	decfsz	wreg,f,c
 28357  015326  D7F6               	goto	u7045
 28358                           
 28359                           ;stkvar	_new_exp @ sp[(-13)+8]
 28360  015328  0EFB               	movlw	-5
 28361  01532A  50E3               	movf	plusw1,w,c
 28362  01532C  0F01               	addlw	1
 28363  01532E  6E01               	movwf	btemp^0,c
 28364  015330  0EFB               	movlw	-5
 28365  015332  0060  F007  FFE3   	movff	btemp,plusw1
 28366  015338  6A01               	clrf	btemp^0,c
 28367  01533A  0EFC               	movlw	-4
 28368  01533C  50E3               	movf	plusw1,w,c
 28369  01533E  2001               	addwfc	btemp^0,w,c
 28370  015340  6E01               	movwf	btemp^0,c
 28371  015342  0EFC               	movlw	-4
 28372  015344  0060  F007  FFE3   	movff	btemp,plusw1
 28373  01534A                     l8792:
 28374                           
 28375                           ;stkvar	_new_exp @ sp[(-13)+8]
 28376  01534A  0EFC               	movlw	-4
 28377  01534C  BEE3               	btfsc	plusw1,7,c
 28378  01534E  D01B               	goto	l8798
 28379  015350  0EFC               	movlw	-4
 28380  015352  50E3               	movf	plusw1,w,c
 28381  015354  E104               	bnz	u7050
 28382  015356  0EFB               	movlw	-5
 28383  015358  28E3               	incf	plusw1,w,c
 28384  01535A  A0D8               	btfss	status,0,c
 28385  01535C  D014               	goto	l8798
 28386  01535E                     u7050:
 28387  01535E  0EFF               	movlw	255
 28388  015360  6E0B               	movwf	(btemp+10)^0,c
 28389  015362  0E00               	movlw	0
 28390  015364  6E0C               	movwf	(btemp+11)^0,c
 28391                           
 28392                           ;stkvar	_new_exp @ sp[(-13)+8]
 28393  015366  0EFB               	movlw	-5
 28394  015368  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28395  01536E  0EFC               	movlw	-4
 28396  015370  0060  F033  FFE3   	movff	btemp+11,plusw1
 28397                           
 28398                           ;stkvar	_b @ sp[(-13)+-4]
 28399  015376  0EEF               	movlw	-17
 28400  015378  6AE3               	clrf	plusw1,c
 28401  01537A  0EF0               	movlw	-16
 28402  01537C  6AE3               	clrf	plusw1,c
 28403  01537E  0EF1               	movlw	-15
 28404  015380  6AE3               	clrf	plusw1,c
 28405  015382  0EF2               	movlw	-14
 28406  015384  6AE3               	clrf	plusw1,c
 28407  015386                     l8798:
 28408                           
 28409                           ;stkvar	_new_exp @ sp[(-13)+8]
 28410  015386  0EFC               	movlw	-4
 28411  015388  BEE3               	btfsc	plusw1,7,c
 28412  01538A  D007               	goto	u7060
 28413  01538C  0EFC               	movlw	-4
 28414  01538E  50E3               	movf	plusw1,w,c
 28415  015390  E112               	bnz	l8804
 28416  015392  0EFB               	movlw	-5
 28417  015394  04E3               	decf	plusw1,w,c
 28418  015396  B0D8               	btfsc	status,0,c
 28419  015398  D00E               	goto	l8804
 28420  01539A                     u7060:
 28421                           
 28422                           ;stkvar	_new_exp @ sp[(-13)+8]
 28423  01539A  0EFB               	movlw	-5
 28424  01539C  6AE3               	clrf	plusw1,c
 28425  01539E  0EFC               	movlw	-4
 28426  0153A0  6AE3               	clrf	plusw1,c
 28427                           
 28428                           ;stkvar	_b @ sp[(-13)+-4]
 28429  0153A2  0EEF               	movlw	-17
 28430  0153A4  6AE3               	clrf	plusw1,c
 28431  0153A6  0EF0               	movlw	-16
 28432  0153A8  6AE3               	clrf	plusw1,c
 28433  0153AA  0EF1               	movlw	-15
 28434  0153AC  6AE3               	clrf	plusw1,c
 28435  0153AE  0EF2               	movlw	-14
 28436  0153B0  6AE3               	clrf	plusw1,c
 28437                           
 28438                           ;stkvar	_sign @ sp[(-13)+12]
 28439  0153B2  0EFF               	movlw	-1
 28440  0153B4  6AE3               	clrf	plusw1,c
 28441  0153B6                     l8804:
 28442                           
 28443                           ;stkvar	_new_exp @ sp[(-13)+8]
 28444                           ;stkvar	_bexp @ sp[(-13)+11]
 28445  0153B6  0EFB               	movlw	-5
 28446  0153B8  006F FF8C  F001    	movff	plusw1,btemp
 28447  0153BE  0EFE               	movlw	-2
 28448  0153C0  0060  F007  FFE3   	movff	btemp,plusw1
 28449                           
 28450                           ;stkvar	_bexp @ sp[(-13)+11]
 28451  0153C6  0EFE               	movlw	-2
 28452  0153C8  A0E3               	btfss	plusw1,0,c
 28453  0153CA  D009               	goto	l8810
 28454                           
 28455                           ;stkvar	_b @ sp[(-13)+-4]
 28456  0153CC  0EF1               	movlw	241
 28457  0153CE  24E1               	addwf	fsr1l,w,c
 28458  0153D0  6ED9               	movwf	fsr2l,c
 28459  0153D2  0EFF               	movlw	255
 28460  0153D4  20E2               	addwfc	fsr1h,w,c
 28461  0153D6  6EDA               	movwf	fsr2h,c
 28462  0153D8  0E00               	movlw	0
 28463  0153DA  8EDB               	bsf	plusw2,7,c
 28464  0153DC  D008               	goto	l8812
 28465  0153DE                     l8810:
 28466                           
 28467                           ;stkvar	_b @ sp[(-13)+-4]
 28468  0153DE  0EF1               	movlw	241
 28469  0153E0  24E1               	addwf	fsr1l,w,c
 28470  0153E2  6ED9               	movwf	fsr2l,c
 28471  0153E4  0EFF               	movlw	255
 28472  0153E6  20E2               	addwfc	fsr1h,w,c
 28473  0153E8  6EDA               	movwf	fsr2h,c
 28474  0153EA  0E7F               	movlw	127
 28475  0153EC  16DF               	andwf	indf2,f,c
 28476  0153EE                     l8812:
 28477                           
 28478                           ;stkvar	_b @ sp[(-13)+-4]
 28479  0153EE  0EF2               	movlw	242
 28480  0153F0  24E1               	addwf	fsr1l,w,c
 28481  0153F2  6ED9               	movwf	fsr2l,c
 28482  0153F4  0EFF               	movlw	255
 28483  0153F6  20E2               	addwfc	fsr1h,w,c
 28484  0153F8  6EDA               	movwf	fsr2h,c
 28485                           
 28486                           ;stkvar	_bexp @ sp[(-13)+11]
 28487  0153FA  0EFE               	movlw	-2
 28488  0153FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28489  015402  90D8               	bcf	status,0,c
 28490  015404  300C               	rrcf	(btemp+11)^0,w,c
 28491  015406  6EDF               	movwf	indf2,c
 28492  015408  D644               	goto	l8710
 28493  01540A                     l3129:
 28494                           
 28495                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28496  01540A  0EEB               	movlw	235
 28497  01540C  26E1               	addwf	fsr1l,f,c
 28498  01540E  0EFF               	movlw	255
 28499  015410  22E2               	addwfc	fsr1h,f,c
 28500  015412  0012               	return		;funcret
 28501  015414                     __end_of___fldiv:
 28502                           	opt callstack 0
 28503                           
 28504 ;; *************** function ___flge *****************
 28505 ;; Defined at:
 28506 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 28507 ;; Parameters:    Size  Location     Type
 28508 ;;  ff1             4  [STACK] unsigned char 
 28509 ;;  ff2             4  [STACK] unsigned char 
 28510 ;; Auto vars:     Size  Location     Type
 28511 ;;		None
 28512 ;; Return value:  Size  Location     Type
 28513 ;;		None               void
 28514 ;; Registers used:
 28515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 28516 ;; Tracked objects:
 28517 ;;		On entry : 0/0
 28518 ;;		On exit  : 0/0
 28519 ;;		Unchanged: 0/0
 28520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28525 ;;Total ram usage:        0 bytes
 28526 ;; Hardware stack levels used:    1
 28527 ;; Hardware stack levels required when called:   15
 28528 ;; This function calls:
 28529 ;;		Nothing
 28530 ;; This function is called by:
 28531 ;;		_main
 28532 ;;		_convert_dac_raw
 28533 ;;		_calc_ror_data
 28534 ;;		_check_day_time
 28535 ;;		_calc_bsoc
 28536 ;;		_efgtoa
 28537 ;; This function uses a reentrant model
 28538 ;;
 28539                           
 28540                           	psect	text114
 28541  01966A                     __ptext114:
 28542                           	opt callstack 0
 28543  01966A                     ___flge:
 28544                           	opt callstack 0
 28545                           
 28546                           ;stkvar	_ff1 @ sp[(0)+-4]
 28547                           
 28548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28549                           ;incstack = 0
 28550 ;; hardware stack exceeded
 28551  01966A  50E1               	movf	fsr1l,w,c
 28552  01966C  0FFC               	addlw	-4
 28553  01966E  6ED9               	movwf	fsr2l,c
 28554  019670  50E2               	movf	fsr1h,w,c
 28555  019672  6EDA               	movwf	fsr2h,c
 28556  019674  0EFF               	movlw	255
 28557  019676  22DA               	addwfc	fsr2h,f,c
 28558  019678  0E00               	movlw	0
 28559  01967A  14DE               	andwf	postinc2,w,c
 28560  01967C  6E09               	movwf	(btemp+8)^0,c
 28561  01967E  0E00               	movlw	0
 28562  019680  14DE               	andwf	postinc2,w,c
 28563  019682  6E0A               	movwf	(btemp+9)^0,c
 28564  019684  0E80               	movlw	128
 28565  019686  14DE               	andwf	postinc2,w,c
 28566  019688  6E0B               	movwf	(btemp+10)^0,c
 28567  01968A  0E7F               	movlw	127
 28568  01968C  14DE               	andwf	postinc2,w,c
 28569  01968E  6E0C               	movwf	(btemp+11)^0,c
 28570  019690  5009               	movf	(btemp+8)^0,w,c
 28571  019692  100A               	iorwf	(btemp+9)^0,w,c
 28572  019694  100B               	iorwf	(btemp+10)^0,w,c
 28573  019696  100C               	iorwf	(btemp+11)^0,w,c
 28574  019698  A4D8               	btfss	status,2,c
 28575  01969A  D008               	goto	l9086
 28576                           
 28577                           ;stkvar	_ff1 @ sp[(0)+-4]
 28578  01969C  0EFC               	movlw	-4
 28579  01969E  6AE3               	clrf	plusw1,c
 28580  0196A0  0EFD               	movlw	-3
 28581  0196A2  6AE3               	clrf	plusw1,c
 28582  0196A4  0EFE               	movlw	-2
 28583  0196A6  6AE3               	clrf	plusw1,c
 28584  0196A8  0EFF               	movlw	-1
 28585  0196AA  6AE3               	clrf	plusw1,c
 28586  0196AC                     l9086:
 28587                           
 28588                           ;stkvar	_ff2 @ sp[(0)+-8]
 28589  0196AC  50E1               	movf	fsr1l,w,c
 28590  0196AE  0FF8               	addlw	-8
 28591  0196B0  6ED9               	movwf	fsr2l,c
 28592  0196B2  50E2               	movf	fsr1h,w,c
 28593  0196B4  6EDA               	movwf	fsr2h,c
 28594  0196B6  0EFF               	movlw	255
 28595  0196B8  22DA               	addwfc	fsr2h,f,c
 28596  0196BA  0E00               	movlw	0
 28597  0196BC  14DE               	andwf	postinc2,w,c
 28598  0196BE  6E09               	movwf	(btemp+8)^0,c
 28599  0196C0  0E00               	movlw	0
 28600  0196C2  14DE               	andwf	postinc2,w,c
 28601  0196C4  6E0A               	movwf	(btemp+9)^0,c
 28602  0196C6  0E80               	movlw	128
 28603  0196C8  14DE               	andwf	postinc2,w,c
 28604  0196CA  6E0B               	movwf	(btemp+10)^0,c
 28605  0196CC  0E7F               	movlw	127
 28606  0196CE  14DE               	andwf	postinc2,w,c
 28607  0196D0  6E0C               	movwf	(btemp+11)^0,c
 28608  0196D2  5009               	movf	(btemp+8)^0,w,c
 28609  0196D4  100A               	iorwf	(btemp+9)^0,w,c
 28610  0196D6  100B               	iorwf	(btemp+10)^0,w,c
 28611  0196D8  100C               	iorwf	(btemp+11)^0,w,c
 28612  0196DA  A4D8               	btfss	status,2,c
 28613  0196DC  D008               	goto	l2810
 28614                           
 28615                           ;stkvar	_ff2 @ sp[(0)+-8]
 28616  0196DE  0EF8               	movlw	-8
 28617  0196E0  6AE3               	clrf	plusw1,c
 28618  0196E2  0EF9               	movlw	-7
 28619  0196E4  6AE3               	clrf	plusw1,c
 28620  0196E6  0EFA               	movlw	-6
 28621  0196E8  6AE3               	clrf	plusw1,c
 28622  0196EA  0EFB               	movlw	-5
 28623  0196EC  6AE3               	clrf	plusw1,c
 28624  0196EE                     l2810:
 28625                           
 28626                           ;stkvar	_ff1 @ sp[(0)+-4]
 28627  0196EE  0EFF               	movlw	-1
 28628  0196F0  AEE3               	btfss	plusw1,7,c
 28629  0196F2  D024               	goto	l9092
 28630                           
 28631                           ;stkvar	_ff1 @ sp[(0)+-4]
 28632  0196F4  0E00               	movlw	0
 28633  0196F6  6E09               	movwf	(btemp+8)^0,c
 28634  0196F8  0E00               	movlw	0
 28635  0196FA  6E0A               	movwf	(btemp+9)^0,c
 28636  0196FC  0E00               	movlw	0
 28637  0196FE  6E0B               	movwf	(btemp+10)^0,c
 28638  019700  0E80               	movlw	128
 28639  019702  6E0C               	movwf	(btemp+11)^0,c
 28640  019704  0EFC               	movlw	-4
 28641  019706  50E3               	movf	plusw1,w,c
 28642  019708  5E09               	subwf	(btemp+8)^0,f,c
 28643  01970A  0EFD               	movlw	-3
 28644  01970C  50E3               	movf	plusw1,w,c
 28645  01970E  5A0A               	subwfb	(btemp+9)^0,f,c
 28646  019710  0EFE               	movlw	-2
 28647  019712  50E3               	movf	plusw1,w,c
 28648  019714  5A0B               	subwfb	(btemp+10)^0,f,c
 28649  019716  0EFF               	movlw	-1
 28650  019718  50E3               	movf	plusw1,w,c
 28651  01971A  5A0C               	subwfb	(btemp+11)^0,f,c
 28652                           
 28653                           ;stkvar	_ff1 @ sp[(0)+-4]
 28654  01971C  0EFC               	movlw	-4
 28655  01971E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28656  019724  0EFD               	movlw	-3
 28657  019726  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28658  01972C  0EFE               	movlw	-2
 28659  01972E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28660  019734  0EFF               	movlw	-1
 28661  019736  0060  F033  FFE3   	movff	btemp+11,plusw1
 28662  01973C                     l9092:
 28663                           
 28664                           ;stkvar	_ff2 @ sp[(0)+-8]
 28665  01973C  0EFB               	movlw	-5
 28666  01973E  AEE3               	btfss	plusw1,7,c
 28667  019740  D024               	goto	l9096
 28668                           
 28669                           ;stkvar	_ff2 @ sp[(0)+-8]
 28670  019742  0E00               	movlw	0
 28671  019744  6E09               	movwf	(btemp+8)^0,c
 28672  019746  0E00               	movlw	0
 28673  019748  6E0A               	movwf	(btemp+9)^0,c
 28674  01974A  0E00               	movlw	0
 28675  01974C  6E0B               	movwf	(btemp+10)^0,c
 28676  01974E  0E80               	movlw	128
 28677  019750  6E0C               	movwf	(btemp+11)^0,c
 28678  019752  0EF8               	movlw	-8
 28679  019754  50E3               	movf	plusw1,w,c
 28680  019756  5E09               	subwf	(btemp+8)^0,f,c
 28681  019758  0EF9               	movlw	-7
 28682  01975A  50E3               	movf	plusw1,w,c
 28683  01975C  5A0A               	subwfb	(btemp+9)^0,f,c
 28684  01975E  0EFA               	movlw	-6
 28685  019760  50E3               	movf	plusw1,w,c
 28686  019762  5A0B               	subwfb	(btemp+10)^0,f,c
 28687  019764  0EFB               	movlw	-5
 28688  019766  50E3               	movf	plusw1,w,c
 28689  019768  5A0C               	subwfb	(btemp+11)^0,f,c
 28690                           
 28691                           ;stkvar	_ff2 @ sp[(0)+-8]
 28692  01976A  0EF8               	movlw	-8
 28693  01976C  0060  F027  FFE3   	movff	btemp+8,plusw1
 28694  019772  0EF9               	movlw	-7
 28695  019774  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28696  01977A  0EFA               	movlw	-6
 28697  01977C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28698  019782  0EFB               	movlw	-5
 28699  019784  0060  F033  FFE3   	movff	btemp+11,plusw1
 28700  01978A                     l9096:
 28701                           
 28702                           ;stkvar	_ff1 @ sp[(0)+-4]
 28703  01978A  0EFF               	movlw	-1
 28704  01978C  7EE3               	btg	plusw1,7,c
 28705                           
 28706                           ;stkvar	_ff2 @ sp[(0)+-8]
 28707  01978E  0EFB               	movlw	-5
 28708  019790  7EE3               	btg	plusw1,7,c
 28709                           
 28710                           ;stkvar	_ff2 @ sp[(0)+-8]
 28711                           ;stkvar	_ff1 @ sp[(0)+-4]
 28712  019792  50E1               	movf	fsr1l,w,c
 28713  019794  0FFC               	addlw	-4
 28714  019796  6ED9               	movwf	fsr2l,c
 28715  019798  50E2               	movf	fsr1h,w,c
 28716  01979A  6EDA               	movwf	fsr2h,c
 28717  01979C  0EFF               	movlw	255
 28718  01979E  22DA               	addwfc	fsr2h,f,c
 28719  0197A0  0EF8               	movlw	-8
 28720  0197A2  50E3               	movf	plusw1,w,c
 28721  0197A4  5CDE               	subwf	postinc2,w,c
 28722  0197A6  0EF9               	movlw	-7
 28723  0197A8  50E3               	movf	plusw1,w,c
 28724  0197AA  58DE               	subwfb	postinc2,w,c
 28725  0197AC  0EFA               	movlw	-6
 28726  0197AE  50E3               	movf	plusw1,w,c
 28727  0197B0  58DE               	subwfb	postinc2,w,c
 28728  0197B2  0EFB               	movlw	-5
 28729  0197B4  50E3               	movf	plusw1,w,c
 28730  0197B6  58DE               	subwfb	postinc2,w,c
 28731  0197B8  B0D8               	btfsc	status,0,c
 28732  0197BA  D002               	goto	l9104
 28733  0197BC  9001               	bcf	btemp& (0+255),0,c
 28734  0197BE  D001               	goto	l2817
 28735  0197C0                     l9104:
 28736  0197C0  8001               	bsf	btemp& (0+255),0,c
 28737  0197C2                     l2817:
 28738                           
 28739                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 28740  0197C2  0EF8               	movlw	248
 28741  0197C4  26E1               	addwf	fsr1l,f,c
 28742  0197C6  0EFF               	movlw	255
 28743  0197C8  22E2               	addwfc	fsr1h,f,c
 28744  0197CA  0012               	return		;funcret
 28745  0197CC                     __end_of___flge:
 28746                           	opt callstack 0
 28747                           
 28748 ;; *************** function _calc_model_data *****************
 28749 ;; Defined at:
 28750 ;;		line 67 in file "mbmc.c"
 28751 ;; Parameters:    Size  Location     Type
 28752 ;;		None
 28753 ;; Auto vars:     Size  Location     Type
 28754 ;;		None
 28755 ;; Return value:  Size  Location     Type
 28756 ;;                  1  [STACK] void 
 28757 ;; Registers used:
 28758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28759 ;; Tracked objects:
 28760 ;;		On entry : 0/1
 28761 ;;		On exit  : 3F/39
 28762 ;;		Unchanged: 0/0
 28763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28768 ;;Total ram usage:        0 bytes
 28769 ;; Hardware stack levels used:    1
 28770 ;; Hardware stack levels required when called:   18
 28771 ;; This function calls:
 28772 ;;		___fladd
 28773 ;;		___flmul
 28774 ;;		___flsub
 28775 ;;		_lp_filter
 28776 ;;		_start_bsoc
 28777 ;;		_stop_bsoc
 28778 ;; This function is called by:
 28779 ;;		_main
 28780 ;; This function uses a reentrant model
 28781 ;;
 28782                           
 28783                           	psect	text115
 28784  015D50                     __ptext115:
 28785                           	opt callstack 0
 28786  015D50                     _calc_model_data:
 28787                           	opt callstack 12
 28788                           
 28789                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 28790                           
 28791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28792                           ;incstack = 0
 28793  015D50  EC40  F0E7         	call	_stop_bsoc	;wreg free
 28794                           
 28795                           ; BSR set to: 57
 28796                           ;mbmc.c: 72:  if (!V.calib) {
 28797  015D54  0101               	movlb	1	; () banked
 28798  015D56  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 28799  015D58  A4D8               	btfss	status,2,c
 28800  015D5A  D219               	goto	l11794
 28801                           
 28802                           ; BSR set to: 1
 28803                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 28804  015D5C  EE21  F2FF         	lfsr	2,_C
 28805  015D60  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 28806  015D66  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 28807  015D6C  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 28808  015D72  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 28809                           
 28810                           ; BSR set to: 1
 28811                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 28812  015D78  0060  F1B3  FFE6   	movff	calc_model_data@bcror,postinc1
 28813  015D7E  0060  F1B7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 28814  015D84  0060  F1BB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 28815  015D8A  0060  F1BF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 28816  015D90  EE21  F343         	lfsr	2,_C+68	;volatile
 28817  015D94  006F FF7B FFE6     	movff	postinc2,postinc1
 28818  015D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 28819  015DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 28820  015DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 28821  015DAC  EC18  F0E1         	call	___flsub	;wreg free
 28822  015DB0  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 28823  015DB6  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 28824  015DBC  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 28825  015DC2  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 28826                           
 28827                           ;mbmc.c: 75:   bcror = C.c_bat;
 28828  015DC8  C743  F06C         	movff	_C+68,calc_model_data@bcror	;volatile
 28829  015DCC  C744  F06D         	movff	_C+69,calc_model_data@bcror+1	;volatile
 28830  015DD0  C745  F06E         	movff	_C+70,calc_model_data@bcror+2	;volatile
 28831  015DD4  C746  F06F         	movff	_C+71,calc_model_data@bcror+3	;volatile
 28832                           
 28833                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 28834  015DD8  EE21  F303         	lfsr	2,_C+4	;volatile
 28835  015DDC  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 28836  015DE2  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 28837  015DE8  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 28838  015DEE  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 28839                           
 28840                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 28841  015DF4  EE21  F30F         	lfsr	2,_C+16	;volatile
 28842  015DF8  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 28843  015DFE  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 28844  015E04  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 28845  015E0A  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 28846                           
 28847                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 28848  015E10  EE21  F333         	lfsr	2,_C+52	;volatile
 28849  015E14  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 28850  015E1A  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 28851  015E20  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 28852  015E26  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 28853                           
 28854                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 28855  015E2C  0060  F1C3  FFE6   	movff	calc_model_data@bvror,postinc1
 28856  015E32  0060  F1C7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 28857  015E38  0060  F1CB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 28858  015E3E  0060  F1CF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 28859  015E44  EE21  F353         	lfsr	2,_C+84	;volatile
 28860  015E48  006F FF7B FFE6     	movff	postinc2,postinc1
 28861  015E4E  006F FF7B FFE6     	movff	postinc2,postinc1
 28862  015E54  006F FF7B FFE6     	movff	postinc2,postinc1
 28863  015E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 28864  015E60  EC18  F0E1         	call	___flsub	;wreg free
 28865  015E64  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 28866  015E6A  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 28867  015E70  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 28868  015E76  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 28869                           
 28870                           ;mbmc.c: 80:   bvror = C.v_bat;
 28871  015E7C  C753  F070         	movff	_C+84,calc_model_data@bvror	;volatile
 28872  015E80  C754  F071         	movff	_C+85,calc_model_data@bvror+1	;volatile
 28873  015E84  C755  F072         	movff	_C+86,calc_model_data@bvror+2	;volatile
 28874  015E88  C756  F073         	movff	_C+87,calc_model_data@bvror+3	;volatile
 28875                           
 28876                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 28877  015E8C  EE21  F313         	lfsr	2,_C+20	;volatile
 28878  015E90  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 28879  015E96  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 28880  015E9C  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 28881  015EA2  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 28882                           
 28883                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 28884  015EA8  EE21  F307         	lfsr	2,_C+8	;volatile
 28885  015EAC  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 28886  015EB2  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 28887  015EB8  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 28888  015EBE  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 28889                           
 28890                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 28891  015EC4  EE21  F32F         	lfsr	2,_C+48	;volatile
 28892  015EC8  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 28893  015ECE  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 28894  015ED4  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 28895  015EDA  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 28896                           
 28897                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 28898  015EE0  0E01               	movlw	1
 28899  015EE2  6EE6               	movwf	postinc1,c
 28900  015EE4  0E10               	movlw	16
 28901  015EE6  6EE6               	movwf	postinc1,c
 28902  015EE8  EE21  F2FF         	lfsr	2,_C
 28903  015EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 28904  015EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 28905  015EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 28906  015EFE  006F FF7B FFE6     	movff	postinc2,postinc1
 28907  015F04  EE21  F303         	lfsr	2,_C+4	;volatile
 28908  015F08  006F FF7B FFE6     	movff	postinc2,postinc1
 28909  015F0E  006F FF7B FFE6     	movff	postinc2,postinc1
 28910  015F14  006F FF7B FFE6     	movff	postinc2,postinc1
 28911  015F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 28912  015F20  EC18  F0E1         	call	___flsub	;wreg free
 28913  015F24  0060  F007  FFE6   	movff	btemp,postinc1
 28914  015F2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28915  015F30  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28916  015F36  0060  F013  FFE6   	movff	btemp+3,postinc1
 28917  015F3C  EC80  F0C6         	call	_lp_filter	;wreg free
 28918  015F40  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 28919  015F46  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 28920  015F4C  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 28921  015F52  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 28922                           
 28923                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 28924  015F58  0E01               	movlw	1
 28925  015F5A  6EE6               	movwf	postinc1,c
 28926  015F5C  0E11               	movlw	17
 28927  015F5E  6EE6               	movwf	postinc1,c
 28928  015F60  EE21  F353         	lfsr	2,_C+84	;volatile
 28929  015F64  006F FF7B FFE6     	movff	postinc2,postinc1
 28930  015F6A  006F FF7B FFE6     	movff	postinc2,postinc1
 28931  015F70  006F FF7B FFE6     	movff	postinc2,postinc1
 28932  015F76  006F FF7B FFE6     	movff	postinc2,postinc1
 28933  015F7C  EE21  F33F         	lfsr	2,_C+64	;volatile
 28934  015F80  006F FF7B FFE6     	movff	postinc2,postinc1
 28935  015F86  006F FF7B FFE6     	movff	postinc2,postinc1
 28936  015F8C  006F FF7B FFE6     	movff	postinc2,postinc1
 28937  015F92  006F FF7B FFE6     	movff	postinc2,postinc1
 28938  015F98  EC5A  F09F         	call	___flmul	;wreg free
 28939  015F9C  0060  F007  FFE6   	movff	btemp,postinc1
 28940  015FA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28941  015FA8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28942  015FAE  0060  F013  FFE6   	movff	btemp+3,postinc1
 28943  015FB4  EC80  F0C6         	call	_lp_filter	;wreg free
 28944  015FB8  0060  F004  F773   	movff	btemp,_C+116	;volatile
 28945  015FBE  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 28946  015FC4  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 28947  015FCA  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 28948                           
 28949                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 28950  015FD0  0E01               	movlw	1
 28951  015FD2  6EE6               	movwf	postinc1,c
 28952  015FD4  0E12               	movlw	18
 28953  015FD6  6EE6               	movwf	postinc1,c
 28954  015FD8  EE21  F34F         	lfsr	2,_C+80	;volatile
 28955  015FDC  006F FF7B FFE6     	movff	postinc2,postinc1
 28956  015FE2  006F FF7B FFE6     	movff	postinc2,postinc1
 28957  015FE8  006F FF7B FFE6     	movff	postinc2,postinc1
 28958  015FEE  006F FF7B FFE6     	movff	postinc2,postinc1
 28959  015FF4  EE21  F347         	lfsr	2,_C+72	;volatile
 28960  015FF8  006F FF7B FFE6     	movff	postinc2,postinc1
 28961  015FFE  006F FF7B FFE6     	movff	postinc2,postinc1
 28962  016004  006F FF7B FFE6     	movff	postinc2,postinc1
 28963  01600A  006F FF7B FFE6     	movff	postinc2,postinc1
 28964  016010  EC5A  F09F         	call	___flmul	;wreg free
 28965  016014  0060  F007  FFE6   	movff	btemp,postinc1
 28966  01601A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28967  016020  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28968  016026  0060  F013  FFE6   	movff	btemp+3,postinc1
 28969  01602C  EC80  F0C6         	call	_lp_filter	;wreg free
 28970  016030  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 28971  016036  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 28972  01603C  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 28973  016042  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 28974                           
 28975                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 28976  016048  0E01               	movlw	1
 28977  01604A  6EE6               	movwf	postinc1,c
 28978  01604C  0E13               	movlw	19
 28979  01604E  6EE6               	movwf	postinc1,c
 28980  016050  0E00               	movlw	0
 28981  016052  6EE6               	movwf	postinc1,c
 28982  016054  0E00               	movlw	0
 28983  016056  6EE6               	movwf	postinc1,c
 28984  016058  0E60               	movlw	96
 28985  01605A  6EE6               	movwf	postinc1,c
 28986  01605C  0EC1               	movlw	193
 28987  01605E  6EE6               	movwf	postinc1,c
 28988  016060  EE21  F363         	lfsr	2,_C+100	;volatile
 28989  016064  006F FF7B FFE6     	movff	postinc2,postinc1
 28990  01606A  006F FF7B FFE6     	movff	postinc2,postinc1
 28991  016070  006F FF7B FFE6     	movff	postinc2,postinc1
 28992  016076  006F FF7B FFE6     	movff	postinc2,postinc1
 28993  01607C  EE21  F33F         	lfsr	2,_C+64	;volatile
 28994  016080  006F FF7B FFE6     	movff	postinc2,postinc1
 28995  016086  006F FF7B FFE6     	movff	postinc2,postinc1
 28996  01608C  006F FF7B FFE6     	movff	postinc2,postinc1
 28997  016092  006F FF7B FFE6     	movff	postinc2,postinc1
 28998  016098  EC5A  F09F         	call	___flmul	;wreg free
 28999  01609C  0060  F007  FFE6   	movff	btemp,postinc1
 29000  0160A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29001  0160A8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29002  0160AE  0060  F013  FFE6   	movff	btemp+3,postinc1
 29003  0160B4  EC6F  F0A3         	call	___fladd	;wreg free
 29004  0160B8  0060  F007  FFE6   	movff	btemp,postinc1
 29005  0160BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29006  0160C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29007  0160CA  0060  F013  FFE6   	movff	btemp+3,postinc1
 29008  0160D0  EC80  F0C6         	call	_lp_filter	;wreg free
 29009  0160D4  0060  F004  F777   	movff	btemp,_C+120	;volatile
 29010  0160DA  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 29011  0160E0  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 29012  0160E6  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 29013                           
 29014                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 29015  0160EC  0E01               	movlw	1
 29016  0160EE  6EE6               	movwf	postinc1,c
 29017  0160F0  0E14               	movlw	20
 29018  0160F2  6EE6               	movwf	postinc1,c
 29019  0160F4  EE21  F353         	lfsr	2,_C+84	;volatile
 29020  0160F8  006F FF7B FFE6     	movff	postinc2,postinc1
 29021  0160FE  006F FF7B FFE6     	movff	postinc2,postinc1
 29022  016104  006F FF7B FFE6     	movff	postinc2,postinc1
 29023  01610A  006F FF7B FFE6     	movff	postinc2,postinc1
 29024  016110  EE21  F343         	lfsr	2,_C+68	;volatile
 29025  016114  006F FF7B FFE6     	movff	postinc2,postinc1
 29026  01611A  006F FF7B FFE6     	movff	postinc2,postinc1
 29027  016120  006F FF7B FFE6     	movff	postinc2,postinc1
 29028  016126  006F FF7B FFE6     	movff	postinc2,postinc1
 29029  01612C  EC5A  F09F         	call	___flmul	;wreg free
 29030  016130  0060  F007  FFE6   	movff	btemp,postinc1
 29031  016136  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29032  01613C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29033  016142  0060  F013  FFE6   	movff	btemp+3,postinc1
 29034  016148  EC80  F0C6         	call	_lp_filter	;wreg free
 29035  01614C  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 29036  016152  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 29037  016158  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 29038  01615E  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 29039                           
 29040                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 29041  016164  EE21  F377         	lfsr	2,_C+120	;volatile
 29042  016168  0E03               	movlw	3
 29043  01616A  AEDB               	btfss	plusw2,7,c
 29044  01616C  D010               	goto	l11794
 29045                           
 29046                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 29047  01616E  0E17               	movlw	23
 29048  016170  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 29049  016176  0EB7               	movlw	183
 29050  016178  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 29051  01617E  0ED1               	movlw	209
 29052  016180  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 29053  016186  0E38               	movlw	56
 29054  016188  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 29055  01618E                     l11794:
 29056                           
 29057                           ;mbmc.c: 95:  start_bsoc();
 29058  01618E  ECC3  F0E5         	call	_start_bsoc	;wreg free
 29059                           
 29060                           ; BSR set to: 57
 29061                           ;mbmc.c: 96:  C.update = 1;
 29062  016192  0E01               	movlw	1
 29063  016194  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 29064                           
 29065                           ; BSR set to: 57
 29066                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29067  01619A  0012               	return		;funcret
 29068  01619C                     __end_of_calc_model_data:
 29069                           	opt callstack 0
 29070                           
 29071 ;; *************** function _stop_bsoc *****************
 29072 ;; Defined at:
 29073 ;;		line 130 in file "bsoc.c"
 29074 ;; Parameters:    Size  Location     Type
 29075 ;;		None
 29076 ;; Auto vars:     Size  Location     Type
 29077 ;;		None
 29078 ;; Return value:  Size  Location     Type
 29079 ;;                  1  [STACK] void 
 29080 ;; Registers used:
 29081 ;;		None
 29082 ;; Tracked objects:
 29083 ;;		On entry : 0/1
 29084 ;;		On exit  : 3F/39
 29085 ;;		Unchanged: 0/0
 29086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29091 ;;Total ram usage:        0 bytes
 29092 ;; Hardware stack levels used:    1
 29093 ;; Hardware stack levels required when called:   15
 29094 ;; This function calls:
 29095 ;;		Nothing
 29096 ;; This function is called by:
 29097 ;;		_calc_model_data
 29098 ;; This function uses a reentrant model
 29099 ;;
 29100                           
 29101                           	psect	text116
 29102  01CE80                     __ptext116:
 29103                           	opt callstack 0
 29104  01CE80                     _stop_bsoc:
 29105                           	opt callstack 14
 29106                           
 29107                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 29108                           
 29109                           ; BSR set to: 57
 29110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29111                           ;incstack = 0
 29112  01CE80  0139               	movlb	57	; () banked
 29113  01CE82  9D96               	bcf	150,6,b	;volatile
 29114                           
 29115                           ; BSR set to: 57
 29116                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 29117  01CE84  0012               	return		;funcret
 29118  01CE86                     __end_of_stop_bsoc:
 29119                           	opt callstack 0
 29120                           
 29121 ;; *************** function _start_bsoc *****************
 29122 ;; Defined at:
 29123 ;;		line 121 in file "bsoc.c"
 29124 ;; Parameters:    Size  Location     Type
 29125 ;;		None
 29126 ;; Auto vars:     Size  Location     Type
 29127 ;;		None
 29128 ;; Return value:  Size  Location     Type
 29129 ;;                  1  [STACK] void 
 29130 ;; Registers used:
 29131 ;;		wreg, status,2, status,0, btemp+11
 29132 ;; Tracked objects:
 29133 ;;		On entry : 0/1
 29134 ;;		On exit  : 3F/39
 29135 ;;		Unchanged: 0/0
 29136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29141 ;;Total ram usage:        0 bytes
 29142 ;; Hardware stack levels used:    1
 29143 ;; Hardware stack levels required when called:   15
 29144 ;; This function calls:
 29145 ;;		Nothing
 29146 ;; This function is called by:
 29147 ;;		_calc_model_data
 29148 ;; This function uses a reentrant model
 29149 ;;
 29150                           
 29151                           	psect	text117
 29152  01CB86                     __ptext117:
 29153                           	opt callstack 0
 29154  01CB86                     _start_bsoc:
 29155                           	opt callstack 14
 29156                           
 29157                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 29158                           
 29159                           ; BSR set to: 57
 29160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29161                           ;incstack = 0
 29162  01CB86  0139               	movlb	57	; () banked
 29163  01CB88  8D96               	bsf	150,6,b	;volatile
 29164                           
 29165                           ; BSR set to: 57
 29166  01CB8A  A4BE               	btfss	190,2,c	;volatile
 29167  01CB8C  D002               	goto	u10130
 29168  01CB8E  0E01               	movlw	1
 29169  01CB90  D001               	goto	u10136
 29170  01CB92                     u10130:
 29171  01CB92  0E00               	movlw	0
 29172  01CB94                     u10136:
 29173  01CB94  0AFF               	xorlw	255
 29174  01CB96  6E0C               	movwf	(btemp+11)^0,c
 29175  01CB98  460C               	rlncf	(btemp+11)^0,f,c
 29176  01CB9A  460C               	rlncf	(btemp+11)^0,f,c
 29177  01CB9C  50BE               	movf	190,w,c	;volatile
 29178  01CB9E  180C               	xorwf	(btemp+11)^0,w,c
 29179  01CBA0  0BFB               	andlw	-5
 29180  01CBA2  180C               	xorwf	(btemp+11)^0,w,c
 29181  01CBA4  6EBE               	movwf	190,c	;volatile
 29182                           
 29183                           ; BSR set to: 57
 29184                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 29185  01CBA6  0012               	return		;funcret
 29186  01CBA8                     __end_of_start_bsoc:
 29187                           	opt callstack 0
 29188                           
 29189 ;; *************** function _lp_filter *****************
 29190 ;; Defined at:
 29191 ;;		line 29 in file "mbmc.c"
 29192 ;; Parameters:    Size  Location     Type
 29193 ;;  new             4  [STACK] const float 
 29194 ;;  bn              1  [STACK] const unsigned char 
 29195 ;;  slow            1  [STACK] const char 
 29196 ;; Auto vars:     Size  Location     Type
 29197 ;;  lp_speed        4  [STACK] float 
 29198 ;; Return value:  Size  Location     Type
 29199 ;;                  4  [STACK] float 
 29200 ;; Registers used:
 29201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29202 ;; Tracked objects:
 29203 ;;		On entry : 0/1
 29204 ;;		On exit  : 0/0
 29205 ;;		Unchanged: 0/0
 29206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29211 ;;Total ram usage:        0 bytes
 29212 ;; Hardware stack levels used:    1
 29213 ;; Hardware stack levels required when called:   17
 29214 ;; This function calls:
 29215 ;;		___fladd
 29216 ;;		___flmul
 29217 ;;		___flsub
 29218 ;; This function is called by:
 29219 ;;		_main
 29220 ;;		_convert_adc_data
 29221 ;;		_calc_model_data
 29222 ;; This function uses a reentrant model
 29223 ;;
 29224                           
 29225                           	psect	text118
 29226  018D00                     __ptext118:
 29227                           	opt callstack 0
 29228  018D00                     _lp_filter:
 29229                           	opt callstack 0
 29230                           
 29231                           ; BSR set to: 57
 29232                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29233  018D00  52E6               	movf	postinc1,f,c
 29234  018D02  52E6               	movf	postinc1,f,c
 29235  018D04  52E6               	movf	postinc1,f,c
 29236  018D06  52E6               	movf	postinc1,f,c
 29237                           
 29238                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 29239                           ;stkvar	_bn @ sp[(-4)+-5]
 29240                           
 29241                           ;incstack = 0
 29242  018D08  0EF7               	movlw	-9
 29243  018D0A  006F FF8C  F001    	movff	plusw1,btemp
 29244  018D10  0E14               	movlw	20
 29245  018D12  6401               	cpfsgt	btemp^0,c
 29246  018D14  D011               	goto	l10958
 29247  018D16                     u9950:
 29248                           
 29249                           ;mbmc.c: 35:   return new;
 29250                           ;stkvar	_new @ sp[(-4)+-4]
 29251  018D16  0EF8               	movlw	-8
 29252  018D18  006F FF8C  F001    	movff	plusw1,btemp
 29253  018D1E  0EF9               	movlw	-7
 29254  018D20  006F FF8C  F002    	movff	plusw1,btemp+1
 29255  018D26  0EFA               	movlw	-6
 29256  018D28  006F FF8C  F003    	movff	plusw1,btemp+2
 29257  018D2E  0EFB               	movlw	-5
 29258  018D30  006F FF8C  F004    	movff	plusw1,btemp+3
 29259  018D36  D0BD               	goto	l1976
 29260  018D38                     l10958:
 29261                           
 29262                           ;mbmc.c: 37:  if (slow == (-1)) {
 29263                           ;stkvar	_slow @ sp[(-4)+-6]
 29264  018D38  0EF6               	movlw	-10
 29265  018D3A  28E3               	incf	plusw1,w,c
 29266  018D3C  A4D8               	btfss	status,2,c
 29267  018D3E  D012               	goto	l10966
 29268                           
 29269                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 29270                           ;stkvar	_bn @ sp[(-4)+-5]
 29271  018D40  0EF7               	movlw	-9
 29272  018D42  50E3               	movf	plusw1,w,c
 29273  018D44  0D04               	mullw	4
 29274  018D46  0E00               	movlw	low lp_filter@smooth
 29275  018D48  24F3               	addwf	243,w,c
 29276  018D4A  6ED9               	movwf	fsr2l,c
 29277  018D4C  0E02               	movlw	high lp_filter@smooth
 29278  018D4E  20F4               	addwfc	prodh,w,c
 29279  018D50  6EDA               	movwf	fsr2h,c
 29280  018D52  0E00               	movlw	0
 29281  018D54  6EDE               	movwf	postinc2,c
 29282  018D56  0E00               	movlw	0
 29283  018D58  6EDE               	movwf	postinc2,c
 29284  018D5A  0E00               	movlw	0
 29285  018D5C  6EDE               	movwf	postinc2,c
 29286  018D5E  0E00               	movlw	0
 29287  018D60  6EDD               	movwf	postdec2,c
 29288  018D62  D7D9               	goto	u9950
 29289  018D64                     l10966:
 29290                           
 29291                           ;mbmc.c: 42:  if (slow) {
 29292                           ;stkvar	_slow @ sp[(-4)+-6]
 29293  018D64  0EF6               	movlw	-10
 29294  018D66  50E3               	movf	plusw1,w,c
 29295  018D68  B4D8               	btfsc	status,2,c
 29296  018D6A  D006               	goto	l10970
 29297                           
 29298                           ;mbmc.c: 43:   lp_speed = 0.033;
 29299  018D6C  0E02               	movlw	2
 29300  018D6E  6E09               	movwf	(btemp+8)^0,c
 29301  018D70  0E2B               	movlw	43
 29302  018D72  6E0A               	movwf	(btemp+9)^0,c
 29303  018D74  0E07               	movlw	7
 29304  018D76  D005               	goto	L35
 29305  018D78                     l10970:
 29306                           
 29307                           ;mbmc.c: 45:   lp_speed = 0.066;
 29308  018D78  0E02               	movlw	2
 29309  018D7A  6E09               	movwf	(btemp+8)^0,c
 29310  018D7C  0E2B               	movlw	43
 29311  018D7E  6E0A               	movwf	(btemp+9)^0,c
 29312  018D80  0E87               	movlw	135
 29313  018D82                     L35:
 29314  018D82  6E0B               	movwf	(btemp+10)^0,c
 29315  018D84  0E3D               	movlw	61
 29316  018D86  6E0C               	movwf	(btemp+11)^0,c
 29317                           
 29318                           ;stkvar	_lp_speed @ sp[(-4)+0]
 29319  018D88  0EFC               	movlw	-4
 29320  018D8A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29321  018D90  0EFD               	movlw	-3
 29322  018D92  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29323  018D98  0EFE               	movlw	-2
 29324  018D9A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29325  018DA0  0EFF               	movlw	-1
 29326  018DA2  0060  F033  FFE3   	movff	btemp+11,plusw1
 29327                           
 29328                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 29329                           ;stkvar	_bn @ sp[(-4)+-5]
 29330  018DA8  0EF7               	movlw	-9
 29331  018DAA  50E3               	movf	plusw1,w,c
 29332  018DAC  0D04               	mullw	4
 29333  018DAE  0E00               	movlw	low lp_filter@smooth
 29334  018DB0  24F3               	addwf	243,w,c
 29335  018DB2  6ED9               	movwf	fsr2l,c
 29336  018DB4  0E02               	movlw	high lp_filter@smooth
 29337  018DB6  20F4               	addwfc	prodh,w,c
 29338  018DB8  6EDA               	movwf	fsr2h,c
 29339  018DBA  006F FF7B FFE6     	movff	postinc2,postinc1
 29340  018DC0  006F FF7B FFE6     	movff	postinc2,postinc1
 29341  018DC6  006F FF7B FFE6     	movff	postinc2,postinc1
 29342  018DCC  006F FF7B FFE6     	movff	postinc2,postinc1
 29343                           
 29344                           ;stkvar	_lp_speed @ sp[(-8)+0]
 29345  018DD2  0EF8               	movlw	-8
 29346  018DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 29347  018DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 29348  018DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 29349  018DE6  006F FF8F FFE6     	movff	plusw1,postinc1
 29350                           
 29351                           ;stkvar	_bn @ sp[(-12)+-5]
 29352  018DEC  0EEF               	movlw	-17
 29353  018DEE  50E3               	movf	plusw1,w,c
 29354  018DF0  0D04               	mullw	4
 29355  018DF2  0E00               	movlw	low lp_filter@smooth
 29356  018DF4  24F3               	addwf	243,w,c
 29357  018DF6  6ED9               	movwf	fsr2l,c
 29358  018DF8  0E02               	movlw	high lp_filter@smooth
 29359  018DFA  20F4               	addwfc	prodh,w,c
 29360  018DFC  6EDA               	movwf	fsr2h,c
 29361  018DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 29362  018E04  006F FF7B FFE6     	movff	postinc2,postinc1
 29363  018E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 29364  018E10  006F FF7B FFE6     	movff	postinc2,postinc1
 29365                           
 29366                           ;stkvar	_new @ sp[(-16)+-4]
 29367  018E16  0EEC               	movlw	-20
 29368  018E18  006F FF8F FFE6     	movff	plusw1,postinc1
 29369  018E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 29370  018E24  006F FF8F FFE6     	movff	plusw1,postinc1
 29371  018E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 29372  018E30  EC18  F0E1         	call	___flsub	;wreg free
 29373  018E34  0060  F007  FFE6   	movff	btemp,postinc1
 29374  018E3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29375  018E40  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29376  018E46  0060  F013  FFE6   	movff	btemp+3,postinc1
 29377  018E4C  EC5A  F09F         	call	___flmul	;wreg free
 29378  018E50  0060  F007  FFE6   	movff	btemp,postinc1
 29379  018E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29380  018E5C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29381  018E62  0060  F013  FFE6   	movff	btemp+3,postinc1
 29382  018E68  EC6F  F0A3         	call	___fladd	;wreg free
 29383                           
 29384                           ;stkvar	_bn @ sp[(-4)+-5]
 29385  018E6C  0EF7               	movlw	-9
 29386  018E6E  50E3               	movf	plusw1,w,c
 29387  018E70  0D04               	mullw	4
 29388  018E72  0E00               	movlw	low lp_filter@smooth
 29389  018E74  24F3               	addwf	243,w,c
 29390  018E76  6ED9               	movwf	fsr2l,c
 29391  018E78  0E02               	movlw	high lp_filter@smooth
 29392  018E7A  20F4               	addwfc	prodh,w,c
 29393  018E7C  6EDA               	movwf	fsr2h,c
 29394  018E7E  0060  F007  FFDE   	movff	btemp,postinc2
 29395  018E84  0060  F00B  FFDE   	movff	btemp+1,postinc2
 29396  018E8A  0060  F00F  FFDE   	movff	btemp+2,postinc2
 29397  018E90  0060  F013  FFDD   	movff	btemp+3,postdec2
 29398  018E96  52DD               	movf	postdec2,f,c
 29399  018E98  52DD               	movf	postdec2,f,c
 29400  018E9A  006F FF78  F001    	movff	postinc2,btemp
 29401  018EA0  006F FF78  F002    	movff	postinc2,btemp+1
 29402  018EA6  006F FF78  F003    	movff	postinc2,btemp+2
 29403  018EAC  006F FF78  F004    	movff	postinc2,btemp+3
 29404  018EB2                     l1976:
 29405                           
 29406                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 29407  018EB2  0EF6               	movlw	246
 29408  018EB4  26E1               	addwf	fsr1l,f,c
 29409  018EB6  0EFF               	movlw	255
 29410  018EB8  22E2               	addwfc	fsr1h,f,c
 29411  018EBA  0012               	return		;funcret
 29412  018EBC                     __end_of_lp_filter:
 29413                           	opt callstack 0
 29414                           
 29415 ;; *************** function ___flsub *****************
 29416 ;; Defined at:
 29417 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 29418 ;; Parameters:    Size  Location     Type
 29419 ;;  b               4  [STACK] float 
 29420 ;;  a               4  [STACK] float 
 29421 ;; Auto vars:     Size  Location     Type
 29422 ;;		None
 29423 ;; Return value:  Size  Location     Type
 29424 ;;                  4  [STACK] float 
 29425 ;; Registers used:
 29426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 29427 ;; Tracked objects:
 29428 ;;		On entry : 0/0
 29429 ;;		On exit  : 0/0
 29430 ;;		Unchanged: 0/0
 29431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29436 ;;Total ram usage:        0 bytes
 29437 ;; Hardware stack levels used:    1
 29438 ;; Hardware stack levels required when called:   16
 29439 ;; This function calls:
 29440 ;;		___fladd
 29441 ;; This function is called by:
 29442 ;;		_conv_raw_result
 29443 ;;		_lp_filter
 29444 ;;		_calc_model_data
 29445 ;;		_calc_ror_data
 29446 ;;		_esr_check
 29447 ;;		_efgtoa
 29448 ;; This function uses a reentrant model
 29449 ;;
 29450                           
 29451                           	psect	text119
 29452  01C230                     __ptext119:
 29453                           	opt callstack 0
 29454  01C230                     ___flsub:
 29455                           	opt callstack 0
 29456                           
 29457                           ;stkvar	_a @ sp[(0)+-8]
 29458                           
 29459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29460                           ;incstack = 0
 29461 ;; hardware stack exceeded
 29462  01C230  0EFB               	movlw	-5
 29463  01C232  7EE3               	btg	plusw1,7,c
 29464                           
 29465                           ;stkvar	_a @ sp[(0)+-8]
 29466  01C234  0EF8               	movlw	-8
 29467  01C236  006F FF8F FFE6     	movff	plusw1,postinc1
 29468  01C23C  006F FF8F FFE6     	movff	plusw1,postinc1
 29469  01C242  006F FF8F FFE6     	movff	plusw1,postinc1
 29470  01C248  006F FF8F FFE6     	movff	plusw1,postinc1
 29471                           
 29472                           ;stkvar	_b @ sp[(-4)+-4]
 29473  01C24E  0EF8               	movlw	-8
 29474  01C250  006F FF8F FFE6     	movff	plusw1,postinc1
 29475  01C256  006F FF8F FFE6     	movff	plusw1,postinc1
 29476  01C25C  006F FF8F FFE6     	movff	plusw1,postinc1
 29477  01C262  006F FF8F FFE6     	movff	plusw1,postinc1
 29478  01C268  EC6F  F0A3         	call	___fladd	;wreg free
 29479                           
 29480                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 29481  01C26C  0EF8               	movlw	248
 29482  01C26E  26E1               	addwf	fsr1l,f,c
 29483  01C270  0EFF               	movlw	255
 29484  01C272  22E2               	addwfc	fsr1h,f,c
 29485  01C274  0012               	return		;funcret
 29486  01C276                     __end_of___flsub:
 29487                           	opt callstack 0
 29488                           
 29489 ;; *************** function ___fladd *****************
 29490 ;; Defined at:
 29491 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 29492 ;; Parameters:    Size  Location     Type
 29493 ;;  b               4  [STACK] float 
 29494 ;;  a               4  [STACK] float 
 29495 ;; Auto vars:     Size  Location     Type
 29496 ;;  grs             1  [STACK] unsigned char 
 29497 ;;  bexp            1  [STACK] unsigned char 
 29498 ;;  aexp            1  [STACK] unsigned char 
 29499 ;;  signs           1  [STACK] unsigned char 
 29500 ;; Return value:  Size  Location     Type
 29501 ;;                  4  [STACK] unsigned char 
 29502 ;; Registers used:
 29503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 29504 ;; Tracked objects:
 29505 ;;		On entry : 0/0
 29506 ;;		On exit  : 0/0
 29507 ;;		Unchanged: 0/0
 29508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29513 ;;Total ram usage:        0 bytes
 29514 ;; Hardware stack levels used:    1
 29515 ;; Hardware stack levels required when called:   15
 29516 ;; This function calls:
 29517 ;;		Nothing
 29518 ;; This function is called by:
 29519 ;;		_main
 29520 ;;		_lp_filter
 29521 ;;		_calc_model_data
 29522 ;;		_efgtoa
 29523 ;;		___asfladd
 29524 ;;		___flsub
 29525 ;; This function uses a reentrant model
 29526 ;;
 29527                           
 29528                           	psect	text120
 29529  0146DE                     __ptext120:
 29530                           	opt callstack 0
 29531  0146DE                     ___fladd:
 29532                           	opt callstack 0
 29533                           
 29534                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29535  0146DE  52E6               	movf	postinc1,f,c
 29536  0146E0  52E6               	movf	postinc1,f,c
 29537  0146E2  52E6               	movf	postinc1,f,c
 29538  0146E4  52E6               	movf	postinc1,f,c
 29539                           
 29540                           ;stkvar	_b @ sp[(-4)+-4]
 29541                           
 29542                           ;incstack = 0
 29543 ;; hardware stack exceeded
 29544  0146E6  0EFB               	movlw	251
 29545  0146E8  24E1               	addwf	fsr1l,w,c
 29546  0146EA  6ED9               	movwf	fsr2l,c
 29547  0146EC  0EFF               	movlw	255
 29548  0146EE  20E2               	addwfc	fsr1h,w,c
 29549  0146F0  6EDA               	movwf	fsr2h,c
 29550  0146F2  50DF               	movf	indf2,w,c
 29551  0146F4  6E0C               	movwf	(btemp+11)^0,c
 29552  0146F6  0E80               	movlw	128
 29553  0146F8  160C               	andwf	(btemp+11)^0,f,c
 29554                           
 29555                           ;stkvar	_signs @ sp[(-4)+3]
 29556  0146FA  0EFF               	movlw	-1
 29557  0146FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 29558                           
 29559                           ;stkvar	_b @ sp[(-4)+-4]
 29560  014702  0EFB               	movlw	251
 29561  014704  24E1               	addwf	fsr1l,w,c
 29562  014706  6ED9               	movwf	fsr2l,c
 29563  014708  0EFF               	movlw	255
 29564  01470A  20E2               	addwfc	fsr1h,w,c
 29565  01470C  6EDA               	movwf	fsr2h,c
 29566  01470E  50DF               	movf	indf2,w,c
 29567  014710  6E0C               	movwf	(btemp+11)^0,c
 29568  014712  90D8               	bcf	status,0,c
 29569  014714  340C               	rlcf	(btemp+11)^0,w,c
 29570  014716  6E0B               	movwf	(btemp+10)^0,c
 29571                           
 29572                           ;stkvar	_bexp @ sp[(-4)+1]
 29573  014718  0EFD               	movlw	-3
 29574  01471A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29575                           
 29576                           ;stkvar	_b @ sp[(-4)+-4]
 29577  014720  0EFA               	movlw	250
 29578  014722  24E1               	addwf	fsr1l,w,c
 29579  014724  6ED9               	movwf	fsr2l,c
 29580  014726  0EFF               	movlw	255
 29581  014728  20E2               	addwfc	fsr1h,w,c
 29582  01472A  6EDA               	movwf	fsr2h,c
 29583  01472C  AEDF               	btfss	indf2,7,c
 29584  01472E  D002               	goto	l8194
 29585                           
 29586                           ;stkvar	_bexp @ sp[(-4)+1]
 29587  014730  0EFD               	movlw	-3
 29588  014732  80E3               	bsf	plusw1,0,c
 29589  014734                     l8194:
 29590                           
 29591                           ;stkvar	_bexp @ sp[(-4)+1]
 29592  014734  0EFD               	movlw	-3
 29593  014736  50E3               	movf	plusw1,w,c
 29594  014738  B4D8               	btfsc	status,2,c
 29595  01473A  D027               	goto	l8204
 29596                           
 29597                           ;stkvar	_bexp @ sp[(-4)+1]
 29598  01473C  0EFD               	movlw	-3
 29599  01473E  28E3               	incf	plusw1,w,c
 29600  014740  A4D8               	btfss	status,2,c
 29601  014742  D018               	goto	l8200
 29602  014744  0E00               	movlw	0
 29603  014746  6E09               	movwf	(btemp+8)^0,c
 29604  014748  0E00               	movlw	0
 29605  01474A  6E0A               	movwf	(btemp+9)^0,c
 29606  01474C  0E00               	movlw	0
 29607  01474E  6E0B               	movwf	(btemp+10)^0,c
 29608  014750  0E00               	movlw	0
 29609  014752  6E0C               	movwf	(btemp+11)^0,c
 29610                           
 29611                           ;stkvar	_b @ sp[(-4)+-4]
 29612  014754  0EF8               	movlw	-8
 29613  014756  0060  F027  FFE3   	movff	btemp+8,plusw1
 29614  01475C  0EF9               	movlw	-7
 29615  01475E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29616  014764  0EFA               	movlw	-6
 29617  014766  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29618  01476C  0EFB               	movlw	-5
 29619  01476E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29620  014774                     l8200:
 29621                           
 29622                           ;stkvar	_b @ sp[(-4)+-4]
 29623  014774  0EFA               	movlw	-6
 29624  014776  8EE3               	bsf	plusw1,7,c
 29625                           
 29626                           ;stkvar	_b @ sp[(-4)+-4]
 29627  014778  0EFB               	movlw	251
 29628  01477A  24E1               	addwf	fsr1l,w,c
 29629  01477C  6ED9               	movwf	fsr2l,c
 29630  01477E  0EFF               	movlw	255
 29631  014780  20E2               	addwfc	fsr1h,w,c
 29632  014782  6EDA               	movwf	fsr2h,c
 29633  014784  0E00               	movlw	0
 29634  014786  6EDF               	movwf	indf2,c
 29635  014788  D018               	goto	l8206
 29636  01478A                     l8204:
 29637  01478A  0E00               	movlw	0
 29638  01478C  6E09               	movwf	(btemp+8)^0,c
 29639  01478E  0E00               	movlw	0
 29640  014790  6E0A               	movwf	(btemp+9)^0,c
 29641  014792  0E00               	movlw	0
 29642  014794  6E0B               	movwf	(btemp+10)^0,c
 29643  014796  0E00               	movlw	0
 29644  014798  6E0C               	movwf	(btemp+11)^0,c
 29645                           
 29646                           ;stkvar	_b @ sp[(-4)+-4]
 29647  01479A  0EF8               	movlw	-8
 29648  01479C  0060  F027  FFE3   	movff	btemp+8,plusw1
 29649  0147A2  0EF9               	movlw	-7
 29650  0147A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29651  0147AA  0EFA               	movlw	-6
 29652  0147AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29653  0147B2  0EFB               	movlw	-5
 29654  0147B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 29655  0147BA                     l8206:
 29656                           
 29657                           ;stkvar	_a @ sp[(-4)+-8]
 29658  0147BA  0EF7               	movlw	247
 29659  0147BC  24E1               	addwf	fsr1l,w,c
 29660  0147BE  6ED9               	movwf	fsr2l,c
 29661  0147C0  0EFF               	movlw	255
 29662  0147C2  20E2               	addwfc	fsr1h,w,c
 29663  0147C4  6EDA               	movwf	fsr2h,c
 29664  0147C6  50DF               	movf	indf2,w,c
 29665  0147C8  6E0C               	movwf	(btemp+11)^0,c
 29666  0147CA  0E80               	movlw	128
 29667  0147CC  160C               	andwf	(btemp+11)^0,f,c
 29668                           
 29669                           ;stkvar	_aexp @ sp[(-4)+2]
 29670  0147CE  0EFE               	movlw	-2
 29671  0147D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29672                           
 29673                           ;stkvar	_signs @ sp[(-4)+3]
 29674                           ;stkvar	_aexp @ sp[(-4)+2]
 29675  0147D6  50E1               	movf	fsr1l,w,c
 29676  0147D8  0FFE               	addlw	-2
 29677  0147DA  6ED9               	movwf	fsr2l,c
 29678  0147DC  50E2               	movf	fsr1h,w,c
 29679  0147DE  6EDA               	movwf	fsr2h,c
 29680  0147E0  0EFF               	movlw	255
 29681  0147E2  22DA               	addwfc	fsr2h,f,c
 29682  0147E4  0EFF               	movlw	-1
 29683  0147E6  50E3               	movf	plusw1,w,c
 29684  0147E8  18DE               	xorwf	postinc2,w,c
 29685  0147EA  B4D8               	btfsc	status,2,c
 29686  0147EC  D002               	goto	l8212
 29687                           
 29688                           ;stkvar	_signs @ sp[(-4)+3]
 29689  0147EE  0EFF               	movlw	-1
 29690  0147F0  8CE3               	bsf	plusw1,6,c
 29691  0147F2                     l8212:
 29692                           
 29693                           ;stkvar	_a @ sp[(-4)+-8]
 29694  0147F2  0EF7               	movlw	247
 29695  0147F4  24E1               	addwf	fsr1l,w,c
 29696  0147F6  6ED9               	movwf	fsr2l,c
 29697  0147F8  0EFF               	movlw	255
 29698  0147FA  20E2               	addwfc	fsr1h,w,c
 29699  0147FC  6EDA               	movwf	fsr2h,c
 29700  0147FE  50DF               	movf	indf2,w,c
 29701  014800  6E0C               	movwf	(btemp+11)^0,c
 29702  014802  90D8               	bcf	status,0,c
 29703  014804  340C               	rlcf	(btemp+11)^0,w,c
 29704  014806  6E0B               	movwf	(btemp+10)^0,c
 29705                           
 29706                           ;stkvar	_aexp @ sp[(-4)+2]
 29707  014808  0EFE               	movlw	-2
 29708  01480A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29709                           
 29710                           ;stkvar	_a @ sp[(-4)+-8]
 29711  014810  0EF6               	movlw	246
 29712  014812  24E1               	addwf	fsr1l,w,c
 29713  014814  6ED9               	movwf	fsr2l,c
 29714  014816  0EFF               	movlw	255
 29715  014818  20E2               	addwfc	fsr1h,w,c
 29716  01481A  6EDA               	movwf	fsr2h,c
 29717  01481C  AEDF               	btfss	indf2,7,c
 29718  01481E  D002               	goto	l8218
 29719                           
 29720                           ;stkvar	_aexp @ sp[(-4)+2]
 29721  014820  0EFE               	movlw	-2
 29722  014822  80E3               	bsf	plusw1,0,c
 29723  014824                     l8218:
 29724                           
 29725                           ;stkvar	_aexp @ sp[(-4)+2]
 29726  014824  0EFE               	movlw	-2
 29727  014826  50E3               	movf	plusw1,w,c
 29728  014828  B4D8               	btfsc	status,2,c
 29729  01482A  D027               	goto	l8228
 29730                           
 29731                           ;stkvar	_aexp @ sp[(-4)+2]
 29732  01482C  0EFE               	movlw	-2
 29733  01482E  28E3               	incf	plusw1,w,c
 29734  014830  A4D8               	btfss	status,2,c
 29735  014832  D018               	goto	l8224
 29736  014834  0E00               	movlw	0
 29737  014836  6E09               	movwf	(btemp+8)^0,c
 29738  014838  0E00               	movlw	0
 29739  01483A  6E0A               	movwf	(btemp+9)^0,c
 29740  01483C  0E00               	movlw	0
 29741  01483E  6E0B               	movwf	(btemp+10)^0,c
 29742  014840  0E00               	movlw	0
 29743  014842  6E0C               	movwf	(btemp+11)^0,c
 29744                           
 29745                           ;stkvar	_a @ sp[(-4)+-8]
 29746  014844  0EF4               	movlw	-12
 29747  014846  0060  F027  FFE3   	movff	btemp+8,plusw1
 29748  01484C  0EF5               	movlw	-11
 29749  01484E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29750  014854  0EF6               	movlw	-10
 29751  014856  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29752  01485C  0EF7               	movlw	-9
 29753  01485E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29754  014864                     l8224:
 29755                           
 29756                           ;stkvar	_a @ sp[(-4)+-8]
 29757  014864  0EF6               	movlw	-10
 29758  014866  8EE3               	bsf	plusw1,7,c
 29759                           
 29760                           ;stkvar	_a @ sp[(-4)+-8]
 29761  014868  0EF7               	movlw	247
 29762  01486A  24E1               	addwf	fsr1l,w,c
 29763  01486C  6ED9               	movwf	fsr2l,c
 29764  01486E  0EFF               	movlw	255
 29765  014870  20E2               	addwfc	fsr1h,w,c
 29766  014872  6EDA               	movwf	fsr2h,c
 29767  014874  0E00               	movlw	0
 29768  014876  6EDF               	movwf	indf2,c
 29769  014878  D018               	goto	l8230
 29770  01487A                     l8228:
 29771  01487A  0E00               	movlw	0
 29772  01487C  6E09               	movwf	(btemp+8)^0,c
 29773  01487E  0E00               	movlw	0
 29774  014880  6E0A               	movwf	(btemp+9)^0,c
 29775  014882  0E00               	movlw	0
 29776  014884  6E0B               	movwf	(btemp+10)^0,c
 29777  014886  0E00               	movlw	0
 29778  014888  6E0C               	movwf	(btemp+11)^0,c
 29779                           
 29780                           ;stkvar	_a @ sp[(-4)+-8]
 29781  01488A  0EF4               	movlw	-12
 29782  01488C  0060  F027  FFE3   	movff	btemp+8,plusw1
 29783  014892  0EF5               	movlw	-11
 29784  014894  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29785  01489A  0EF6               	movlw	-10
 29786  01489C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29787  0148A2  0EF7               	movlw	-9
 29788  0148A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 29789  0148AA                     l8230:
 29790                           
 29791                           ;stkvar	_bexp @ sp[(-4)+1]
 29792                           ;stkvar	_aexp @ sp[(-4)+2]
 29793  0148AA  50E1               	movf	fsr1l,w,c
 29794  0148AC  0FFE               	addlw	-2
 29795  0148AE  6ED9               	movwf	fsr2l,c
 29796  0148B0  50E2               	movf	fsr1h,w,c
 29797  0148B2  6EDA               	movwf	fsr2h,c
 29798  0148B4  0EFF               	movlw	255
 29799  0148B6  22DA               	addwfc	fsr2h,f,c
 29800  0148B8  0EFD               	movlw	-3
 29801  0148BA  50E3               	movf	plusw1,w,c
 29802  0148BC  5CDE               	subwf	postinc2,w,c
 29803  0148BE  B0D8               	btfsc	status,0,c
 29804  0148C0  D0A4               	goto	l8266
 29805                           
 29806                           ;stkvar	_signs @ sp[(-4)+3]
 29807  0148C2  0EFF               	movlw	-1
 29808  0148C4  ACE3               	btfss	plusw1,6,c
 29809  0148C6  D002               	goto	l8236
 29810                           
 29811                           ;stkvar	_signs @ sp[(-4)+3]
 29812  0148C8  0EFF               	movlw	-1
 29813  0148CA  7EE3               	btg	plusw1,7,c
 29814  0148CC                     l8236:
 29815                           
 29816                           ;stkvar	_bexp @ sp[(-4)+1]
 29817                           ;stkvar	_grs @ sp[(-4)+0]
 29818  0148CC  0EFD               	movlw	-3
 29819  0148CE  006F FF8C  F001    	movff	plusw1,btemp
 29820  0148D4  0EFC               	movlw	-4
 29821  0148D6  0060  F007  FFE3   	movff	btemp,plusw1
 29822                           
 29823                           ;stkvar	_aexp @ sp[(-4)+2]
 29824                           ;stkvar	_bexp @ sp[(-4)+1]
 29825  0148DC  0EFE               	movlw	-2
 29826  0148DE  006F FF8C  F001    	movff	plusw1,btemp
 29827  0148E4  0EFD               	movlw	-3
 29828  0148E6  0060  F007  FFE3   	movff	btemp,plusw1
 29829                           
 29830                           ;stkvar	_grs @ sp[(-4)+0]
 29831                           ;stkvar	_aexp @ sp[(-4)+2]
 29832  0148EC  0EFC               	movlw	-4
 29833  0148EE  006F FF8C  F001    	movff	plusw1,btemp
 29834  0148F4  0EFE               	movlw	-2
 29835  0148F6  0060  F007  FFE3   	movff	btemp,plusw1
 29836                           
 29837                           ;stkvar	_b @ sp[(-4)+-4]
 29838                           ;stkvar	_grs @ sp[(-4)+0]
 29839  0148FC  0EF8               	movlw	-8
 29840  0148FE  006F FF8C  F001    	movff	plusw1,btemp
 29841  014904  0EFC               	movlw	-4
 29842  014906  0060  F007  FFE3   	movff	btemp,plusw1
 29843                           
 29844                           ;stkvar	_a @ sp[(-4)+-8]
 29845                           ;stkvar	_b @ sp[(-4)+-4]
 29846  01490C  0EF4               	movlw	-12
 29847  01490E  006F FF8C  F001    	movff	plusw1,btemp
 29848  014914  0EF8               	movlw	-8
 29849  014916  0060  F007  FFE3   	movff	btemp,plusw1
 29850                           
 29851                           ;stkvar	_grs @ sp[(-4)+0]
 29852                           ;stkvar	_a @ sp[(-4)+-8]
 29853  01491C  0EFC               	movlw	-4
 29854  01491E  006F FF8C  F001    	movff	plusw1,btemp
 29855  014924  0EF4               	movlw	-12
 29856  014926  0060  F007  FFE3   	movff	btemp,plusw1
 29857                           
 29858                           ;stkvar	_b @ sp[(-4)+-4]
 29859  01492C  0EF9               	movlw	249
 29860  01492E  24E1               	addwf	fsr1l,w,c
 29861  014930  6ED9               	movwf	fsr2l,c
 29862  014932  0EFF               	movlw	255
 29863  014934  20E2               	addwfc	fsr1h,w,c
 29864  014936  6EDA               	movwf	fsr2h,c
 29865  014938  50DF               	movf	indf2,w,c
 29866  01493A  6E0C               	movwf	(btemp+11)^0,c
 29867                           
 29868                           ;stkvar	_grs @ sp[(-4)+0]
 29869  01493C  0EFC               	movlw	-4
 29870  01493E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29871                           
 29872                           ;stkvar	_a @ sp[(-4)+-8]
 29873  014944  0EF5               	movlw	245
 29874  014946  24E1               	addwf	fsr1l,w,c
 29875  014948  6ED9               	movwf	fsr2l,c
 29876  01494A  0EFF               	movlw	255
 29877  01494C  20E2               	addwfc	fsr1h,w,c
 29878  01494E  6EDA               	movwf	fsr2h,c
 29879                           
 29880                           ;stkvar	_b @ sp[(-4)+-4]
 29881  014950  0EF9               	movlw	249
 29882  014952  24E1               	addwf	fsr1l,w,c
 29883  014954  6EE9               	movwf	fsr0l,c
 29884  014956  0EFF               	movlw	255
 29885  014958  20E2               	addwfc	fsr1h,w,c
 29886  01495A  6EEA               	movwf	fsr0h,c
 29887  01495C  006F FF7F FFEF     	movff	indf2,indf0
 29888                           
 29889                           ;stkvar	_grs @ sp[(-4)+0]
 29890                           ;stkvar	_a @ sp[(-4)+-8]
 29891  014962  0EF5               	movlw	245
 29892  014964  24E1               	addwf	fsr1l,w,c
 29893  014966  6ED9               	movwf	fsr2l,c
 29894  014968  0EFF               	movlw	255
 29895  01496A  20E2               	addwfc	fsr1h,w,c
 29896  01496C  6EDA               	movwf	fsr2h,c
 29897  01496E  0EFC               	movlw	-4
 29898  014970  006F FF8F FFDF     	movff	plusw1,indf2
 29899                           
 29900                           ;stkvar	_b @ sp[(-4)+-4]
 29901  014976  0EFA               	movlw	250
 29902  014978  24E1               	addwf	fsr1l,w,c
 29903  01497A  6ED9               	movwf	fsr2l,c
 29904  01497C  0EFF               	movlw	255
 29905  01497E  20E2               	addwfc	fsr1h,w,c
 29906  014980  6EDA               	movwf	fsr2h,c
 29907  014982  50DF               	movf	indf2,w,c
 29908  014984  6E0C               	movwf	(btemp+11)^0,c
 29909                           
 29910                           ;stkvar	_grs @ sp[(-4)+0]
 29911  014986  0EFC               	movlw	-4
 29912  014988  0060  F033  FFE3   	movff	btemp+11,plusw1
 29913                           
 29914                           ;stkvar	_a @ sp[(-4)+-8]
 29915  01498E  0EF6               	movlw	246
 29916  014990  24E1               	addwf	fsr1l,w,c
 29917  014992  6ED9               	movwf	fsr2l,c
 29918  014994  0EFF               	movlw	255
 29919  014996  20E2               	addwfc	fsr1h,w,c
 29920  014998  6EDA               	movwf	fsr2h,c
 29921                           
 29922                           ;stkvar	_b @ sp[(-4)+-4]
 29923  01499A  0EFA               	movlw	250
 29924  01499C  24E1               	addwf	fsr1l,w,c
 29925  01499E  6EE9               	movwf	fsr0l,c
 29926  0149A0  0EFF               	movlw	255
 29927  0149A2  20E2               	addwfc	fsr1h,w,c
 29928  0149A4  6EEA               	movwf	fsr0h,c
 29929  0149A6  006F FF7F FFEF     	movff	indf2,indf0
 29930                           
 29931                           ;stkvar	_grs @ sp[(-4)+0]
 29932                           ;stkvar	_a @ sp[(-4)+-8]
 29933  0149AC  0EF6               	movlw	246
 29934  0149AE  24E1               	addwf	fsr1l,w,c
 29935  0149B0  6ED9               	movwf	fsr2l,c
 29936  0149B2  0EFF               	movlw	255
 29937  0149B4  20E2               	addwfc	fsr1h,w,c
 29938  0149B6  6EDA               	movwf	fsr2h,c
 29939  0149B8  0EFC               	movlw	-4
 29940  0149BA  006F FF8F FFDF     	movff	plusw1,indf2
 29941                           
 29942                           ;stkvar	_b @ sp[(-4)+-4]
 29943  0149C0  0EFB               	movlw	251
 29944  0149C2  24E1               	addwf	fsr1l,w,c
 29945  0149C4  6ED9               	movwf	fsr2l,c
 29946  0149C6  0EFF               	movlw	255
 29947  0149C8  20E2               	addwfc	fsr1h,w,c
 29948  0149CA  6EDA               	movwf	fsr2h,c
 29949  0149CC  50DF               	movf	indf2,w,c
 29950  0149CE  6E0C               	movwf	(btemp+11)^0,c
 29951                           
 29952                           ;stkvar	_grs @ sp[(-4)+0]
 29953  0149D0  0EFC               	movlw	-4
 29954  0149D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 29955                           
 29956                           ;stkvar	_a @ sp[(-4)+-8]
 29957  0149D8  0EF7               	movlw	247
 29958  0149DA  24E1               	addwf	fsr1l,w,c
 29959  0149DC  6ED9               	movwf	fsr2l,c
 29960  0149DE  0EFF               	movlw	255
 29961  0149E0  20E2               	addwfc	fsr1h,w,c
 29962  0149E2  6EDA               	movwf	fsr2h,c
 29963                           
 29964                           ;stkvar	_b @ sp[(-4)+-4]
 29965  0149E4  0EFB               	movlw	251
 29966  0149E6  24E1               	addwf	fsr1l,w,c
 29967  0149E8  6EE9               	movwf	fsr0l,c
 29968  0149EA  0EFF               	movlw	255
 29969  0149EC  20E2               	addwfc	fsr1h,w,c
 29970  0149EE  6EEA               	movwf	fsr0h,c
 29971  0149F0  006F FF7F FFEF     	movff	indf2,indf0
 29972                           
 29973                           ;stkvar	_grs @ sp[(-4)+0]
 29974                           ;stkvar	_a @ sp[(-4)+-8]
 29975  0149F6  0EF7               	movlw	247
 29976  0149F8  24E1               	addwf	fsr1l,w,c
 29977  0149FA  6ED9               	movwf	fsr2l,c
 29978  0149FC  0EFF               	movlw	255
 29979  0149FE  20E2               	addwfc	fsr1h,w,c
 29980  014A00  6EDA               	movwf	fsr2h,c
 29981  014A02  0EFC               	movlw	-4
 29982  014A04  006F FF8F FFDF     	movff	plusw1,indf2
 29983  014A0A                     l8266:
 29984                           
 29985                           ;stkvar	_grs @ sp[(-4)+0]
 29986  014A0A  0EFC               	movlw	-4
 29987  014A0C  6AE3               	clrf	plusw1,c
 29988                           
 29989                           ;stkvar	_aexp @ sp[(-4)+2]
 29990  014A0E  0EFE               	movlw	-2
 29991  014A10  50E3               	movf	plusw1,w,c
 29992  014A12  6E0B               	movwf	(btemp+10)^0,c
 29993  014A14  6A0C               	clrf	(btemp+11)^0,c
 29994                           
 29995                           ;stkvar	_bexp @ sp[(-4)+1]
 29996  014A16  0EFD               	movlw	-3
 29997  014A18  50E3               	movf	plusw1,w,c
 29998  014A1A  5E0B               	subwf	(btemp+10)^0,f,c
 29999  014A1C  0E00               	movlw	0
 30000  014A1E  5A0C               	subwfb	(btemp+11)^0,f,c
 30001  014A20  BE0C               	btfsc	(btemp+11)^0,7,c
 30002  014A22  D062               	goto	l8290
 30003  014A24  500C               	movf	(btemp+11)^0,w,c
 30004  014A26  E104               	bnz	u5870
 30005  014A28  0E1A               	movlw	26
 30006  014A2A  5C0B               	subwf	(btemp+10)^0,w,c
 30007  014A2C  A0D8               	btfss	status,0,c
 30008  014A2E  D05C               	goto	l8290
 30009  014A30                     u5870:
 30010                           
 30011                           ;stkvar	_b @ sp[(-4)+-4]
 30012  014A30  0EF8               	movlw	-8
 30013  014A32  50E3               	movf	plusw1,w,c
 30014  014A34  E10A               	bnz	u5881
 30015  014A36  0EF9               	movlw	-7
 30016  014A38  50E3               	movf	plusw1,w,c
 30017  014A3A  E107               	bnz	u5881
 30018  014A3C  0EFA               	movlw	-6
 30019  014A3E  50E3               	movf	plusw1,w,c
 30020  014A40  E104               	bnz	u5881
 30021  014A42  0EFB               	movlw	-5
 30022  014A44  50E3               	movf	plusw1,w,c
 30023  014A46  B4D8               	btfsc	status,2,c
 30024  014A48  D003               	goto	u5880
 30025  014A4A                     u5881:
 30026  014A4A  6A0C               	clrf	(btemp+11)^0,c
 30027  014A4C  2A0C               	incf	(btemp+11)^0,f,c
 30028  014A4E  D001               	goto	u5898
 30029  014A50                     u5880:
 30030  014A50  6A0C               	clrf	(btemp+11)^0,c
 30031  014A52                     u5898:
 30032                           
 30033                           ;stkvar	_grs @ sp[(-4)+0]
 30034  014A52  0EFC               	movlw	-4
 30035  014A54  0060  F033  FFE3   	movff	btemp+11,plusw1
 30036                           
 30037                           ;stkvar	_b @ sp[(-4)+-4]
 30038  014A5A  0EF8               	movlw	-8
 30039  014A5C  6AE3               	clrf	plusw1,c
 30040  014A5E  0EF9               	movlw	-7
 30041  014A60  6AE3               	clrf	plusw1,c
 30042  014A62  0EFA               	movlw	-6
 30043  014A64  6AE3               	clrf	plusw1,c
 30044  014A66  0EFB               	movlw	-5
 30045  014A68  6AE3               	clrf	plusw1,c
 30046                           
 30047                           ;stkvar	_aexp @ sp[(-4)+2]
 30048                           ;stkvar	_bexp @ sp[(-4)+1]
 30049  014A6A  0EFE               	movlw	-2
 30050  014A6C  006F FF8C  F001    	movff	plusw1,btemp
 30051  014A72  0EFD               	movlw	-3
 30052  014A74  0060  F007  FFE3   	movff	btemp,plusw1
 30053  014A7A  D042               	goto	u5930
 30054  014A7C                     l8276:
 30055                           
 30056                           ;stkvar	_grs @ sp[(-4)+0]
 30057  014A7C  0EFC               	movlw	-4
 30058  014A7E  A0E3               	btfss	plusw1,0,c
 30059  014A80  D00D               	goto	l8280
 30060                           
 30061                           ;stkvar	_grs @ sp[(-4)+0]
 30062  014A82  0EFC               	movlw	-4
 30063  014A84  006F FF8C  F00C    	movff	plusw1,btemp+11
 30064  014A8A  90D8               	bcf	status,0,c
 30065  014A8C  320C               	rrcf	(btemp+11)^0,f,c
 30066  014A8E  0E01               	movlw	1
 30067  014A90  120C               	iorwf	(btemp+11)^0,f,c
 30068                           
 30069                           ;stkvar	_grs @ sp[(-4)+0]
 30070  014A92  0EFC               	movlw	-4
 30071  014A94  0060  F033  FFE3   	movff	btemp+11,plusw1
 30072  014A9A  D009               	goto	l8282
 30073  014A9C                     l8280:
 30074                           
 30075                           ;stkvar	_grs @ sp[(-4)+0]
 30076  014A9C  50E1               	movf	fsr1l,w,c
 30077  014A9E  0FFC               	addlw	-4
 30078  014AA0  6ED9               	movwf	fsr2l,c
 30079  014AA2  50E2               	movf	fsr1h,w,c
 30080  014AA4  6EDA               	movwf	fsr2h,c
 30081  014AA6  0EFF               	movlw	255
 30082  014AA8  22DA               	addwfc	fsr2h,f,c
 30083  014AAA  90D8               	bcf	status,0,c
 30084  014AAC  32DF               	rrcf	indf2,f,c
 30085  014AAE                     l8282:
 30086                           
 30087                           ;stkvar	_b @ sp[(-4)+-4]
 30088  014AAE  0EF8               	movlw	-8
 30089  014AB0  A0E3               	btfss	plusw1,0,c
 30090  014AB2  D002               	goto	l8286
 30091                           
 30092                           ;stkvar	_grs @ sp[(-4)+0]
 30093  014AB4  0EFC               	movlw	-4
 30094  014AB6  8EE3               	bsf	plusw1,7,c
 30095  014AB8                     l8286:
 30096  014AB8  0E01               	movlw	1
 30097  014ABA  6E0C               	movwf	(btemp+11)^0,c
 30098                           
 30099                           ;stkvar	_b @ sp[(-4)+-4]
 30100  014ABC  50E1               	movf	fsr1l,w,c
 30101  014ABE  0FF8               	addlw	-8
 30102  014AC0  6ED9               	movwf	fsr2l,c
 30103  014AC2  50E2               	movf	fsr1h,w,c
 30104  014AC4  6EDA               	movwf	fsr2h,c
 30105  014AC6  0EFF               	movlw	255
 30106  014AC8  22DA               	addwfc	fsr2h,f,c
 30107  014ACA  280C               	incf	(btemp+11)^0,w,c
 30108  014ACC  52DE               	movf	postinc2,f,c
 30109  014ACE  D008               	goto	u5920
 30110  014AD0                     u5925:
 30111  014AD0  52DE               	movf	postinc2,f,c
 30112  014AD2  90D8               	bcf	status,0,c
 30113  014AD4  BEDC               	btfsc	preinc2,7,c
 30114  014AD6  80D8               	bsf	status,0,c
 30115  014AD8  32DD               	rrcf	postdec2,f,c
 30116  014ADA  32DD               	rrcf	postdec2,f,c
 30117  014ADC  32DD               	rrcf	postdec2,f,c
 30118  014ADE  32DE               	rrcf	postinc2,f,c
 30119  014AE0                     u5920:
 30120  014AE0  2EE8               	decfsz	wreg,f,c
 30121  014AE2  D7F6               	goto	u5925
 30122                           
 30123                           ;stkvar	_bexp @ sp[(-4)+1]
 30124  014AE4  0EFD               	movlw	-3
 30125  014AE6  2AE3               	incf	plusw1,f,c
 30126  014AE8                     l8290:
 30127                           
 30128                           ;stkvar	_aexp @ sp[(-4)+2]
 30129                           ;stkvar	_bexp @ sp[(-4)+1]
 30130  014AE8  50E1               	movf	fsr1l,w,c
 30131  014AEA  0FFD               	addlw	-3
 30132  014AEC  6ED9               	movwf	fsr2l,c
 30133  014AEE  50E2               	movf	fsr1h,w,c
 30134  014AF0  6EDA               	movwf	fsr2h,c
 30135  014AF2  0EFF               	movlw	255
 30136  014AF4  22DA               	addwfc	fsr2h,f,c
 30137  014AF6  0EFE               	movlw	-2
 30138  014AF8  50E3               	movf	plusw1,w,c
 30139  014AFA  5CDE               	subwf	postinc2,w,c
 30140  014AFC  A0D8               	btfss	status,0,c
 30141  014AFE  D7BE               	goto	l8276
 30142  014B00                     u5930:
 30143                           
 30144                           ;stkvar	_signs @ sp[(-4)+3]
 30145  014B00  0EFF               	movlw	-1
 30146  014B02  BCE3               	btfsc	plusw1,6,c
 30147  014B04  D066               	goto	l8318
 30148                           
 30149                           ;stkvar	_bexp @ sp[(-4)+1]
 30150  014B06  0EFD               	movlw	-3
 30151  014B08  50E3               	movf	plusw1,w,c
 30152  014B0A  B4D8               	btfsc	status,2,c
 30153  014B0C  D0F2               	goto	u6030
 30154                           
 30155                           ;stkvar	_a @ sp[(-4)+-8]
 30156                           ;stkvar	_b @ sp[(-4)+-4]
 30157  014B0E  0EF8               	movlw	-8
 30158  014B10  50E3               	movf	plusw1,w,c
 30159  014B12  6E01               	movwf	btemp^0,c
 30160  014B14  0EF4               	movlw	-12
 30161  014B16  50E3               	movf	plusw1,w,c
 30162  014B18  2601               	addwf	btemp^0,f,c
 30163  014B1A  0EF8               	movlw	-8
 30164  014B1C  0060  F007  FFE3   	movff	btemp,plusw1
 30165  014B22  0EF9               	movlw	-7
 30166  014B24  50E3               	movf	plusw1,w,c
 30167  014B26  6E01               	movwf	btemp^0,c
 30168  014B28  0EF5               	movlw	-11
 30169  014B2A  50E3               	movf	plusw1,w,c
 30170  014B2C  2201               	addwfc	btemp^0,f,c
 30171  014B2E  0EF9               	movlw	-7
 30172  014B30  0060  F007  FFE3   	movff	btemp,plusw1
 30173  014B36  0EFA               	movlw	-6
 30174  014B38  50E3               	movf	plusw1,w,c
 30175  014B3A  6E01               	movwf	btemp^0,c
 30176  014B3C  0EF6               	movlw	-10
 30177  014B3E  50E3               	movf	plusw1,w,c
 30178  014B40  2201               	addwfc	btemp^0,f,c
 30179  014B42  0EFA               	movlw	-6
 30180  014B44  0060  F007  FFE3   	movff	btemp,plusw1
 30181  014B4A  0EFB               	movlw	-5
 30182  014B4C  50E3               	movf	plusw1,w,c
 30183  014B4E  6E01               	movwf	btemp^0,c
 30184  014B50  0EF7               	movlw	-9
 30185  014B52  50E3               	movf	plusw1,w,c
 30186  014B54  2201               	addwfc	btemp^0,f,c
 30187  014B56  0EFB               	movlw	-5
 30188  014B58  0060  F007  FFE3   	movff	btemp,plusw1
 30189                           
 30190                           ;stkvar	_b @ sp[(-4)+-4]
 30191  014B5E  0EFB               	movlw	-5
 30192  014B60  A0E3               	btfss	plusw1,0,c
 30193  014B62  D101               	goto	u6070
 30194                           
 30195                           ;stkvar	_grs @ sp[(-4)+0]
 30196  014B64  0EFC               	movlw	-4
 30197  014B66  A0E3               	btfss	plusw1,0,c
 30198  014B68  D00D               	goto	l8308
 30199                           
 30200                           ;stkvar	_grs @ sp[(-4)+0]
 30201  014B6A  0EFC               	movlw	-4
 30202  014B6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 30203  014B72  90D8               	bcf	status,0,c
 30204  014B74  320C               	rrcf	(btemp+11)^0,f,c
 30205  014B76  0E01               	movlw	1
 30206  014B78  120C               	iorwf	(btemp+11)^0,f,c
 30207                           
 30208                           ;stkvar	_grs @ sp[(-4)+0]
 30209  014B7A  0EFC               	movlw	-4
 30210  014B7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30211  014B82  D009               	goto	l8310
 30212  014B84                     l8308:
 30213                           
 30214                           ;stkvar	_grs @ sp[(-4)+0]
 30215  014B84  50E1               	movf	fsr1l,w,c
 30216  014B86  0FFC               	addlw	-4
 30217  014B88  6ED9               	movwf	fsr2l,c
 30218  014B8A  50E2               	movf	fsr1h,w,c
 30219  014B8C  6EDA               	movwf	fsr2h,c
 30220  014B8E  0EFF               	movlw	255
 30221  014B90  22DA               	addwfc	fsr2h,f,c
 30222  014B92  90D8               	bcf	status,0,c
 30223  014B94  32DF               	rrcf	indf2,f,c
 30224  014B96                     l8310:
 30225                           
 30226                           ;stkvar	_b @ sp[(-4)+-4]
 30227  014B96  0EF8               	movlw	-8
 30228  014B98  A0E3               	btfss	plusw1,0,c
 30229  014B9A  D002               	goto	l8314
 30230                           
 30231                           ;stkvar	_grs @ sp[(-4)+0]
 30232  014B9C  0EFC               	movlw	-4
 30233  014B9E  8EE3               	bsf	plusw1,7,c
 30234  014BA0                     l8314:
 30235  014BA0  0E01               	movlw	1
 30236  014BA2  6E0C               	movwf	(btemp+11)^0,c
 30237                           
 30238                           ;stkvar	_b @ sp[(-4)+-4]
 30239  014BA4  50E1               	movf	fsr1l,w,c
 30240  014BA6  0FF8               	addlw	-8
 30241  014BA8  6ED9               	movwf	fsr2l,c
 30242  014BAA  50E2               	movf	fsr1h,w,c
 30243  014BAC  6EDA               	movwf	fsr2h,c
 30244  014BAE  0EFF               	movlw	255
 30245  014BB0  22DA               	addwfc	fsr2h,f,c
 30246  014BB2  280C               	incf	(btemp+11)^0,w,c
 30247  014BB4  52DE               	movf	postinc2,f,c
 30248  014BB6  D008               	goto	u5990
 30249  014BB8                     u5995:
 30250  014BB8  52DE               	movf	postinc2,f,c
 30251  014BBA  90D8               	bcf	status,0,c
 30252  014BBC  BEDC               	btfsc	preinc2,7,c
 30253  014BBE  80D8               	bsf	status,0,c
 30254  014BC0  32DD               	rrcf	postdec2,f,c
 30255  014BC2  32DD               	rrcf	postdec2,f,c
 30256  014BC4  32DD               	rrcf	postdec2,f,c
 30257  014BC6  32DE               	rrcf	postinc2,f,c
 30258  014BC8                     u5990:
 30259  014BC8  2EE8               	decfsz	wreg,f,c
 30260  014BCA  D7F6               	goto	u5995
 30261                           
 30262                           ;stkvar	_bexp @ sp[(-4)+1]
 30263  014BCC  0EFD               	movlw	-3
 30264  014BCE  2AE3               	incf	plusw1,f,c
 30265  014BD0  D0CA               	goto	u6070
 30266  014BD2                     l8318:
 30267                           
 30268                           ;stkvar	_a @ sp[(-4)+-8]
 30269                           ;stkvar	_b @ sp[(-4)+-4]
 30270  014BD2  50E1               	movf	fsr1l,w,c
 30271  014BD4  0FF8               	addlw	-8
 30272  014BD6  6ED9               	movwf	fsr2l,c
 30273  014BD8  50E2               	movf	fsr1h,w,c
 30274  014BDA  6EDA               	movwf	fsr2h,c
 30275  014BDC  0EFF               	movlw	255
 30276  014BDE  22DA               	addwfc	fsr2h,f,c
 30277  014BE0  0EF4               	movlw	-12
 30278  014BE2  50E3               	movf	plusw1,w,c
 30279  014BE4  5CDE               	subwf	postinc2,w,c
 30280  014BE6  0EF5               	movlw	-11
 30281  014BE8  50E3               	movf	plusw1,w,c
 30282  014BEA  58DE               	subwfb	postinc2,w,c
 30283  014BEC  0EF6               	movlw	-10
 30284  014BEE  50E3               	movf	plusw1,w,c
 30285  014BF0  58DE               	subwfb	postinc2,w,c
 30286  014BF2  50DE               	movf	postinc2,w,c
 30287  014BF4  0A80               	xorlw	128
 30288  014BF6  6E01               	movwf	btemp^0,c
 30289  014BF8  0EF7               	movlw	-9
 30290  014BFA  50E3               	movf	plusw1,w,c
 30291  014BFC  0A80               	xorlw	128
 30292  014BFE  5801               	subwfb	btemp^0,w,c
 30293  014C00  B0D8               	btfsc	status,0,c
 30294  014C02  D053               	goto	l8330
 30295                           
 30296                           ;stkvar	_b @ sp[(-4)+-4]
 30297                           ;stkvar	_a @ sp[(-4)+-8]
 30298  014C04  0EF4               	movlw	-12
 30299  014C06  006F FF8C  F009    	movff	plusw1,btemp+8
 30300  014C0C  0EF5               	movlw	-11
 30301  014C0E  006F FF8C  F00A    	movff	plusw1,btemp+9
 30302  014C14  0EF6               	movlw	-10
 30303  014C16  006F FF8C  F00B    	movff	plusw1,btemp+10
 30304  014C1C  0EF7               	movlw	-9
 30305  014C1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 30306  014C24  0EF8               	movlw	-8
 30307  014C26  50E3               	movf	plusw1,w,c
 30308  014C28  5E09               	subwf	(btemp+8)^0,f,c
 30309  014C2A  0EF9               	movlw	-7
 30310  014C2C  50E3               	movf	plusw1,w,c
 30311  014C2E  5A0A               	subwfb	(btemp+9)^0,f,c
 30312  014C30  0EFA               	movlw	-6
 30313  014C32  50E3               	movf	plusw1,w,c
 30314  014C34  5A0B               	subwfb	(btemp+10)^0,f,c
 30315  014C36  0EFB               	movlw	-5
 30316  014C38  50E3               	movf	plusw1,w,c
 30317  014C3A  5A0C               	subwfb	(btemp+11)^0,f,c
 30318  014C3C  0EFF               	movlw	255
 30319  014C3E  2409               	addwf	(btemp+8)^0,w,c
 30320  014C40  6E05               	movwf	(btemp+4)^0,c
 30321  014C42  0EFF               	movlw	255
 30322  014C44  200A               	addwfc	(btemp+9)^0,w,c
 30323  014C46  6E06               	movwf	(btemp+5)^0,c
 30324  014C48  0EFF               	movlw	255
 30325  014C4A  200B               	addwfc	(btemp+10)^0,w,c
 30326  014C4C  6E07               	movwf	(btemp+6)^0,c
 30327  014C4E  0EFF               	movlw	255
 30328  014C50  200C               	addwfc	(btemp+11)^0,w,c
 30329  014C52  6E08               	movwf	(btemp+7)^0,c
 30330                           
 30331                           ;stkvar	_b @ sp[(-4)+-4]
 30332  014C54  0EF8               	movlw	-8
 30333  014C56  0060  F017  FFE3   	movff	btemp+4,plusw1
 30334  014C5C  0EF9               	movlw	-7
 30335  014C5E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 30336  014C64  0EFA               	movlw	-6
 30337  014C66  0060  F01F  FFE3   	movff	btemp+6,plusw1
 30338  014C6C  0EFB               	movlw	-5
 30339  014C6E  0060  F023  FFE3   	movff	btemp+7,plusw1
 30340                           
 30341                           ;stkvar	_signs @ sp[(-4)+3]
 30342  014C74  0EFF               	movlw	-1
 30343  014C76  7EE3               	btg	plusw1,7,c
 30344                           
 30345                           ;stkvar	_grs @ sp[(-4)+0]
 30346  014C78  0EFC               	movlw	-4
 30347  014C7A  50E3               	movf	plusw1,w,c
 30348  014C7C  0800               	sublw	0
 30349  014C7E  6E0C               	movwf	(btemp+11)^0,c
 30350                           
 30351                           ;stkvar	_grs @ sp[(-4)+0]
 30352  014C80  0EFC               	movlw	-4
 30353  014C82  0060  F033  FFE3   	movff	btemp+11,plusw1
 30354                           
 30355                           ;stkvar	_grs @ sp[(-4)+0]
 30356  014C88  0EFC               	movlw	-4
 30357  014C8A  50E3               	movf	plusw1,w,c
 30358  014C8C  A4D8               	btfss	status,2,c
 30359  014C8E  D020               	goto	l8332
 30360                           
 30361                           ;stkvar	_b @ sp[(-4)+-4]
 30362  014C90  50E1               	movf	fsr1l,w,c
 30363  014C92  0FF8               	addlw	-8
 30364  014C94  6ED9               	movwf	fsr2l,c
 30365  014C96  50E2               	movf	fsr1h,w,c
 30366  014C98  6EDA               	movwf	fsr2h,c
 30367  014C9A  0EFF               	movlw	255
 30368  014C9C  22DA               	addwfc	fsr2h,f,c
 30369  014C9E  2ADE               	incf	postinc2,f,c
 30370  014CA0  0E00               	movlw	0
 30371  014CA2  22DE               	addwfc	postinc2,f,c
 30372  014CA4  22DE               	addwfc	postinc2,f,c
 30373  014CA6  22DE               	addwfc	postinc2,f,c
 30374  014CA8  D013               	goto	l8332
 30375  014CAA                     l8330:
 30376                           
 30377                           ;stkvar	_a @ sp[(-4)+-8]
 30378                           ;stkvar	_b @ sp[(-4)+-4]
 30379  014CAA  50E1               	movf	fsr1l,w,c
 30380  014CAC  0FF8               	addlw	-8
 30381  014CAE  6ED9               	movwf	fsr2l,c
 30382  014CB0  50E2               	movf	fsr1h,w,c
 30383  014CB2  6EDA               	movwf	fsr2h,c
 30384  014CB4  0EFF               	movlw	255
 30385  014CB6  22DA               	addwfc	fsr2h,f,c
 30386  014CB8  0EF4               	movlw	-12
 30387  014CBA  50E3               	movf	plusw1,w,c
 30388  014CBC  5EDE               	subwf	postinc2,f,c
 30389  014CBE  0EF5               	movlw	-11
 30390  014CC0  50E3               	movf	plusw1,w,c
 30391  014CC2  5ADE               	subwfb	postinc2,f,c
 30392  014CC4  0EF6               	movlw	-10
 30393  014CC6  50E3               	movf	plusw1,w,c
 30394  014CC8  5ADE               	subwfb	postinc2,f,c
 30395  014CCA  0EF7               	movlw	-9
 30396  014CCC  50E3               	movf	plusw1,w,c
 30397  014CCE  5ADE               	subwfb	postinc2,f,c
 30398  014CD0                     l8332:
 30399                           
 30400                           ;stkvar	_b @ sp[(-4)+-4]
 30401  014CD0  0EF8               	movlw	-8
 30402  014CD2  50E3               	movf	plusw1,w,c
 30403  014CD4  E145               	bnz	l8354
 30404  014CD6  0EF9               	movlw	-7
 30405  014CD8  50E3               	movf	plusw1,w,c
 30406  014CDA  E142               	bnz	l8354
 30407  014CDC  0EFA               	movlw	-6
 30408  014CDE  50E3               	movf	plusw1,w,c
 30409  014CE0  E13F               	bnz	l8354
 30410  014CE2  0EFB               	movlw	-5
 30411  014CE4  50E3               	movf	plusw1,w,c
 30412  014CE6  A4D8               	btfss	status,2,c
 30413  014CE8  D03B               	goto	l8354
 30414                           
 30415                           ;stkvar	_grs @ sp[(-4)+0]
 30416  014CEA  0EFC               	movlw	-4
 30417  014CEC  50E3               	movf	plusw1,w,c
 30418  014CEE  A4D8               	btfss	status,2,c
 30419  014CF0  D037               	goto	l8354
 30420  014CF2                     u6030:
 30421  014CF2  0E00               	movlw	0
 30422  014CF4  6E01               	movwf	btemp^0,c
 30423  014CF6  0E00               	movlw	0
 30424  014CF8  6E02               	movwf	(btemp+1)^0,c
 30425  014CFA  0E00               	movlw	0
 30426  014CFC  6E03               	movwf	(btemp+2)^0,c
 30427  014CFE  0E00               	movlw	0
 30428  014D00  6E04               	movwf	(btemp+3)^0,c
 30429  014D02  D0C6               	goto	l3084
 30430  014D04                     l8340:
 30431                           
 30432                           ;stkvar	_b @ sp[(-4)+-4]
 30433  014D04  90D8               	bcf	status,0,c
 30434  014D06  0EF8               	movlw	-8
 30435  014D08  36E3               	rlcf	plusw1,f,c
 30436  014D0A  0EF9               	movlw	-7
 30437  014D0C  36E3               	rlcf	plusw1,f,c
 30438  014D0E  0EFA               	movlw	-6
 30439  014D10  36E3               	rlcf	plusw1,f,c
 30440  014D12  0EFB               	movlw	-5
 30441  014D14  36E3               	rlcf	plusw1,f,c
 30442                           
 30443                           ;stkvar	_grs @ sp[(-4)+0]
 30444  014D16  0EFC               	movlw	-4
 30445  014D18  AEE3               	btfss	plusw1,7,c
 30446  014D1A  D002               	goto	l3096
 30447                           
 30448                           ;stkvar	_b @ sp[(-4)+-4]
 30449  014D1C  0EF8               	movlw	-8
 30450  014D1E  80E3               	bsf	plusw1,0,c
 30451  014D20                     l3096:
 30452                           
 30453                           ;stkvar	_grs @ sp[(-4)+0]
 30454  014D20  0EFC               	movlw	-4
 30455  014D22  A0E3               	btfss	plusw1,0,c
 30456  014D24  D00E               	goto	l8348
 30457                           
 30458                           ;stkvar	_grs @ sp[(-4)+0]
 30459  014D26  0EFC               	movlw	-4
 30460  014D28  006F FF8C  F00C    	movff	plusw1,btemp+11
 30461  014D2E  90D8               	bcf	status,0,c
 30462  014D30  340C               	rlcf	(btemp+11)^0,w,c
 30463  014D32  6E0B               	movwf	(btemp+10)^0,c
 30464  014D34  0E01               	movlw	1
 30465  014D36  120B               	iorwf	(btemp+10)^0,f,c
 30466                           
 30467                           ;stkvar	_grs @ sp[(-4)+0]
 30468  014D38  0EFC               	movlw	-4
 30469  014D3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30470  014D40  D009               	goto	l8350
 30471  014D42                     l8348:
 30472                           
 30473                           ;stkvar	_grs @ sp[(-4)+0]
 30474  014D42  50E1               	movf	fsr1l,w,c
 30475  014D44  0FFC               	addlw	-4
 30476  014D46  6ED9               	movwf	fsr2l,c
 30477  014D48  50E2               	movf	fsr1h,w,c
 30478  014D4A  6EDA               	movwf	fsr2h,c
 30479  014D4C  0EFF               	movlw	255
 30480  014D4E  22DA               	addwfc	fsr2h,f,c
 30481  014D50  90D8               	bcf	status,0,c
 30482  014D52  36DF               	rlcf	indf2,f,c
 30483  014D54                     l8350:
 30484                           
 30485                           ;stkvar	_bexp @ sp[(-4)+1]
 30486  014D54  0EFD               	movlw	-3
 30487  014D56  50E3               	movf	plusw1,w,c
 30488  014D58  B4D8               	btfsc	status,2,c
 30489  014D5A  D002               	goto	l8354
 30490                           
 30491                           ;stkvar	_bexp @ sp[(-4)+1]
 30492  014D5C  0EFD               	movlw	-3
 30493  014D5E  06E3               	decf	plusw1,f,c
 30494  014D60                     l8354:
 30495                           
 30496                           ;stkvar	_b @ sp[(-4)+-4]
 30497  014D60  0EFA               	movlw	-6
 30498  014D62  AEE3               	btfss	plusw1,7,c
 30499  014D64  D7CF               	goto	l8340
 30500  014D66                     u6070:
 30501                           
 30502                           ;stkvar	_aexp @ sp[(-4)+2]
 30503  014D66  0EFE               	movlw	-2
 30504  014D68  6AE3               	clrf	plusw1,c
 30505                           
 30506                           ;stkvar	_grs @ sp[(-4)+0]
 30507  014D6A  0EFC               	movlw	-4
 30508  014D6C  AEE3               	btfss	plusw1,7,c
 30509  014D6E  D00F               	goto	l8368
 30510                           
 30511                           ;stkvar	_grs @ sp[(-4)+0]
 30512  014D70  0EFC               	movlw	-4
 30513  014D72  006F FF8C  F00C    	movff	plusw1,btemp+11
 30514  014D78  0E7F               	movlw	127
 30515  014D7A  160C               	andwf	(btemp+11)^0,f,c
 30516  014D7C  B4D8               	btfsc	status,2,c
 30517  014D7E  D004               	goto	l8364
 30518  014D80                     u6090:
 30519                           
 30520                           ;stkvar	_aexp @ sp[(-4)+2]
 30521  014D80  0EFE               	movlw	-2
 30522  014D82  6AE3               	clrf	plusw1,c
 30523  014D84  2AE3               	incf	plusw1,f,c
 30524  014D86  D003               	goto	l8368
 30525  014D88                     l8364:
 30526                           
 30527                           ;stkvar	_b @ sp[(-4)+-4]
 30528  014D88  0EF8               	movlw	-8
 30529  014D8A  B0E3               	btfsc	plusw1,0,c
 30530  014D8C  D7F9               	goto	u6090
 30531  014D8E                     l8368:
 30532                           
 30533                           ;stkvar	_aexp @ sp[(-4)+2]
 30534  014D8E  0EFE               	movlw	-2
 30535  014D90  50E3               	movf	plusw1,w,c
 30536  014D92  B4D8               	btfsc	status,2,c
 30537  014D94  D02B               	goto	l8380
 30538                           
 30539                           ;stkvar	_b @ sp[(-4)+-4]
 30540  014D96  50E1               	movf	fsr1l,w,c
 30541  014D98  0FF8               	addlw	-8
 30542  014D9A  6ED9               	movwf	fsr2l,c
 30543  014D9C  50E2               	movf	fsr1h,w,c
 30544  014D9E  6EDA               	movwf	fsr2h,c
 30545  014DA0  0EFF               	movlw	255
 30546  014DA2  22DA               	addwfc	fsr2h,f,c
 30547  014DA4  2ADE               	incf	postinc2,f,c
 30548  014DA6  0E00               	movlw	0
 30549  014DA8  22DE               	addwfc	postinc2,f,c
 30550  014DAA  22DE               	addwfc	postinc2,f,c
 30551  014DAC  22DE               	addwfc	postinc2,f,c
 30552                           
 30553                           ;stkvar	_b @ sp[(-4)+-4]
 30554  014DAE  0EFB               	movlw	-5
 30555  014DB0  A0E3               	btfss	plusw1,0,c
 30556  014DB2  D01C               	goto	l8380
 30557  014DB4  0E01               	movlw	1
 30558  014DB6  6E0C               	movwf	(btemp+11)^0,c
 30559                           
 30560                           ;stkvar	_b @ sp[(-4)+-4]
 30561  014DB8  50E1               	movf	fsr1l,w,c
 30562  014DBA  0FF8               	addlw	-8
 30563  014DBC  6ED9               	movwf	fsr2l,c
 30564  014DBE  50E2               	movf	fsr1h,w,c
 30565  014DC0  6EDA               	movwf	fsr2h,c
 30566  014DC2  0EFF               	movlw	255
 30567  014DC4  22DA               	addwfc	fsr2h,f,c
 30568  014DC6  280C               	incf	(btemp+11)^0,w,c
 30569  014DC8  52DE               	movf	postinc2,f,c
 30570  014DCA  D008               	goto	u6130
 30571  014DCC                     u6135:
 30572  014DCC  52DE               	movf	postinc2,f,c
 30573  014DCE  90D8               	bcf	status,0,c
 30574  014DD0  BEDC               	btfsc	preinc2,7,c
 30575  014DD2  80D8               	bsf	status,0,c
 30576  014DD4  32DD               	rrcf	postdec2,f,c
 30577  014DD6  32DD               	rrcf	postdec2,f,c
 30578  014DD8  32DD               	rrcf	postdec2,f,c
 30579  014DDA  32DE               	rrcf	postinc2,f,c
 30580  014DDC                     u6130:
 30581  014DDC  2EE8               	decfsz	wreg,f,c
 30582  014DDE  D7F6               	goto	u6135
 30583                           
 30584                           ;stkvar	_bexp @ sp[(-4)+1]
 30585  014DE0  0EFD               	movlw	-3
 30586  014DE2  28E3               	incf	plusw1,w,c
 30587  014DE4  B4D8               	btfsc	status,2,c
 30588  014DE6  D002               	goto	l8380
 30589                           
 30590                           ;stkvar	_bexp @ sp[(-4)+1]
 30591  014DE8  0EFD               	movlw	-3
 30592  014DEA  2AE3               	incf	plusw1,f,c
 30593  014DEC                     l8380:
 30594                           
 30595                           ;stkvar	_bexp @ sp[(-4)+1]
 30596  014DEC  0EFD               	movlw	-3
 30597  014DEE  28E3               	incf	plusw1,w,c
 30598  014DF0  B4D8               	btfsc	status,2,c
 30599  014DF2  D004               	goto	u6160
 30600                           
 30601                           ;stkvar	_bexp @ sp[(-4)+1]
 30602  014DF4  0EFD               	movlw	-3
 30603  014DF6  50E3               	movf	plusw1,w,c
 30604  014DF8  A4D8               	btfss	status,2,c
 30605  014DFA  D00E               	goto	l8390
 30606  014DFC                     u6160:
 30607                           
 30608                           ;stkvar	_b @ sp[(-4)+-4]
 30609  014DFC  0EF8               	movlw	-8
 30610  014DFE  6AE3               	clrf	plusw1,c
 30611  014E00  0EF9               	movlw	-7
 30612  014E02  6AE3               	clrf	plusw1,c
 30613  014E04  0EFA               	movlw	-6
 30614  014E06  6AE3               	clrf	plusw1,c
 30615  014E08  0EFB               	movlw	-5
 30616  014E0A  6AE3               	clrf	plusw1,c
 30617                           
 30618                           ;stkvar	_bexp @ sp[(-4)+1]
 30619  014E0C  0EFD               	movlw	-3
 30620  014E0E  50E3               	movf	plusw1,w,c
 30621  014E10  A4D8               	btfss	status,2,c
 30622  014E12  D002               	goto	l8390
 30623                           
 30624                           ;stkvar	_signs @ sp[(-4)+3]
 30625  014E14  0EFF               	movlw	-1
 30626  014E16  6AE3               	clrf	plusw1,c
 30627  014E18                     l8390:
 30628                           
 30629                           ;stkvar	_bexp @ sp[(-4)+1]
 30630  014E18  0EFD               	movlw	-3
 30631  014E1A  A0E3               	btfss	plusw1,0,c
 30632  014E1C  D009               	goto	l8394
 30633                           
 30634                           ;stkvar	_b @ sp[(-4)+-4]
 30635  014E1E  0EFA               	movlw	250
 30636  014E20  24E1               	addwf	fsr1l,w,c
 30637  014E22  6ED9               	movwf	fsr2l,c
 30638  014E24  0EFF               	movlw	255
 30639  014E26  20E2               	addwfc	fsr1h,w,c
 30640  014E28  6EDA               	movwf	fsr2h,c
 30641  014E2A  0E00               	movlw	0
 30642  014E2C  8EDB               	bsf	plusw2,7,c
 30643  014E2E  D008               	goto	l8396
 30644  014E30                     l8394:
 30645                           
 30646                           ;stkvar	_b @ sp[(-4)+-4]
 30647  014E30  0EFA               	movlw	250
 30648  014E32  24E1               	addwf	fsr1l,w,c
 30649  014E34  6ED9               	movwf	fsr2l,c
 30650  014E36  0EFF               	movlw	255
 30651  014E38  20E2               	addwfc	fsr1h,w,c
 30652  014E3A  6EDA               	movwf	fsr2h,c
 30653  014E3C  0E7F               	movlw	127
 30654  014E3E  16DF               	andwf	indf2,f,c
 30655  014E40                     l8396:
 30656                           
 30657                           ;stkvar	_b @ sp[(-4)+-4]
 30658  014E40  0EFB               	movlw	251
 30659  014E42  24E1               	addwf	fsr1l,w,c
 30660  014E44  6ED9               	movwf	fsr2l,c
 30661  014E46  0EFF               	movlw	255
 30662  014E48  20E2               	addwfc	fsr1h,w,c
 30663  014E4A  6EDA               	movwf	fsr2h,c
 30664                           
 30665                           ;stkvar	_bexp @ sp[(-4)+1]
 30666  014E4C  0EFD               	movlw	-3
 30667  014E4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 30668  014E54  90D8               	bcf	status,0,c
 30669  014E56  300C               	rrcf	(btemp+11)^0,w,c
 30670  014E58  6EDF               	movwf	indf2,c
 30671                           
 30672                           ;stkvar	_signs @ sp[(-4)+3]
 30673  014E5A  0EFF               	movlw	-1
 30674  014E5C  AEE3               	btfss	plusw1,7,c
 30675  014E5E  D008               	goto	l8402
 30676                           
 30677                           ;stkvar	_b @ sp[(-4)+-4]
 30678  014E60  0EFB               	movlw	251
 30679  014E62  24E1               	addwf	fsr1l,w,c
 30680  014E64  6ED9               	movwf	fsr2l,c
 30681  014E66  0EFF               	movlw	255
 30682  014E68  20E2               	addwfc	fsr1h,w,c
 30683  014E6A  6EDA               	movwf	fsr2h,c
 30684  014E6C  0E00               	movlw	0
 30685  014E6E  8EDB               	bsf	plusw2,7,c
 30686  014E70                     l8402:
 30687                           
 30688                           ;stkvar	_b @ sp[(-4)+-4]
 30689  014E70  0EF8               	movlw	-8
 30690  014E72  006F FF8C  F001    	movff	plusw1,btemp
 30691  014E78  0EF9               	movlw	-7
 30692  014E7A  006F FF8C  F002    	movff	plusw1,btemp+1
 30693  014E80  0EFA               	movlw	-6
 30694  014E82  006F FF8C  F003    	movff	plusw1,btemp+2
 30695  014E88  0EFB               	movlw	-5
 30696  014E8A  006F FF8C  F004    	movff	plusw1,btemp+3
 30697  014E90                     l3084:
 30698                           
 30699                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 30700  014E90  0EF4               	movlw	244
 30701  014E92  26E1               	addwf	fsr1l,f,c
 30702  014E94  0EFF               	movlw	255
 30703  014E96  22E2               	addwfc	fsr1h,f,c
 30704  014E98  0012               	return		;funcret
 30705  014E9A                     __end_of___fladd:
 30706                           	opt callstack 0
 30707                           
 30708 ;; *************** function ___flmul *****************
 30709 ;; Defined at:
 30710 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 30711 ;; Parameters:    Size  Location     Type
 30712 ;;  b               4  [STACK] unsigned char 
 30713 ;;  a               4  [STACK] unsigned char 
 30714 ;; Auto vars:     Size  Location     Type
 30715 ;;  prod            4  [STACK] struct .
 30716 ;;  grs             4  [STACK] unsigned long 
 30717 ;;  temp            2  [STACK] struct .
 30718 ;;  bexp            1  [STACK] unsigned char 
 30719 ;;  aexp            1  [STACK] unsigned char 
 30720 ;;  sign            1  [STACK] unsigned char 
 30721 ;; Return value:  Size  Location     Type
 30722 ;;                  4  [STACK] unsigned char 
 30723 ;; Registers used:
 30724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 30725 ;; Tracked objects:
 30726 ;;		On entry : 0/0
 30727 ;;		On exit  : 0/0
 30728 ;;		Unchanged: 0/0
 30729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30734 ;;Total ram usage:        0 bytes
 30735 ;; Hardware stack levels used:    1
 30736 ;; Hardware stack levels required when called:   15
 30737 ;; This function calls:
 30738 ;;		Nothing
 30739 ;; This function is called by:
 30740 ;;		_conv_raw_result
 30741 ;;		_lp_filter
 30742 ;;		_calc_model_data
 30743 ;;		_calc_bsoc
 30744 ;;		_init_bsoc
 30745 ;;		_efgtoa
 30746 ;; This function uses a reentrant model
 30747 ;;
 30748                           
 30749                           	psect	text121
 30750  013EB4                     __ptext121:
 30751                           	opt callstack 0
 30752  013EB4                     ___flmul:
 30753                           	opt callstack 0
 30754                           
 30755                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30756  013EB4  0E0D               	movlw	13
 30757  013EB6  26E1               	addwf	fsr1l,f,c
 30758  013EB8  0E00               	movlw	0
 30759  013EBA  22E2               	addwfc	fsr1h,f,c
 30760                           
 30761                           ;stkvar	_b @ sp[(-13)+-4]
 30762                           
 30763                           ;incstack = 0
 30764 ;; hardware stack exceeded
 30765  013EBC  0EF2               	movlw	242
 30766  013EBE  24E1               	addwf	fsr1l,w,c
 30767  013EC0  6ED9               	movwf	fsr2l,c
 30768  013EC2  0EFF               	movlw	255
 30769  013EC4  20E2               	addwfc	fsr1h,w,c
 30770  013EC6  6EDA               	movwf	fsr2h,c
 30771  013EC8  50DF               	movf	indf2,w,c
 30772  013ECA  6E0C               	movwf	(btemp+11)^0,c
 30773  013ECC  0E80               	movlw	128
 30774  013ECE  160C               	andwf	(btemp+11)^0,f,c
 30775                           
 30776                           ;stkvar	_sign @ sp[(-13)+12]
 30777  013ED0  0EFF               	movlw	-1
 30778  013ED2  0060  F033  FFE3   	movff	btemp+11,plusw1
 30779                           
 30780                           ;stkvar	_b @ sp[(-13)+-4]
 30781  013ED8  0EF2               	movlw	242
 30782  013EDA  24E1               	addwf	fsr1l,w,c
 30783  013EDC  6ED9               	movwf	fsr2l,c
 30784  013EDE  0EFF               	movlw	255
 30785  013EE0  20E2               	addwfc	fsr1h,w,c
 30786  013EE2  6EDA               	movwf	fsr2h,c
 30787  013EE4  50DF               	movf	indf2,w,c
 30788  013EE6  6E0C               	movwf	(btemp+11)^0,c
 30789  013EE8  90D8               	bcf	status,0,c
 30790  013EEA  340C               	rlcf	(btemp+11)^0,w,c
 30791  013EEC  6E0B               	movwf	(btemp+10)^0,c
 30792                           
 30793                           ;stkvar	_bexp @ sp[(-13)+10]
 30794  013EEE  0EFD               	movlw	-3
 30795  013EF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30796                           
 30797                           ;stkvar	_b @ sp[(-13)+-4]
 30798  013EF6  0EF1               	movlw	241
 30799  013EF8  24E1               	addwf	fsr1l,w,c
 30800  013EFA  6ED9               	movwf	fsr2l,c
 30801  013EFC  0EFF               	movlw	255
 30802  013EFE  20E2               	addwfc	fsr1h,w,c
 30803  013F00  6EDA               	movwf	fsr2h,c
 30804  013F02  AEDF               	btfss	indf2,7,c
 30805  013F04  D002               	goto	l8828
 30806                           
 30807                           ;stkvar	_bexp @ sp[(-13)+10]
 30808  013F06  0EFD               	movlw	-3
 30809  013F08  80E3               	bsf	plusw1,0,c
 30810  013F0A                     l8828:
 30811                           
 30812                           ;stkvar	_bexp @ sp[(-13)+10]
 30813  013F0A  0EFD               	movlw	-3
 30814  013F0C  50E3               	movf	plusw1,w,c
 30815  013F0E  B4D8               	btfsc	status,2,c
 30816  013F10  D01F               	goto	l8836
 30817                           
 30818                           ;stkvar	_bexp @ sp[(-13)+10]
 30819  013F12  0EFD               	movlw	-3
 30820  013F14  28E3               	incf	plusw1,w,c
 30821  013F16  A4D8               	btfss	status,2,c
 30822  013F18  D018               	goto	l8834
 30823  013F1A  0E00               	movlw	0
 30824  013F1C  6E09               	movwf	(btemp+8)^0,c
 30825  013F1E  0E00               	movlw	0
 30826  013F20  6E0A               	movwf	(btemp+9)^0,c
 30827  013F22  0E00               	movlw	0
 30828  013F24  6E0B               	movwf	(btemp+10)^0,c
 30829  013F26  0E00               	movlw	0
 30830  013F28  6E0C               	movwf	(btemp+11)^0,c
 30831                           
 30832                           ;stkvar	_b @ sp[(-13)+-4]
 30833  013F2A  0EEF               	movlw	-17
 30834  013F2C  0060  F027  FFE3   	movff	btemp+8,plusw1
 30835  013F32  0EF0               	movlw	-16
 30836  013F34  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30837  013F3A  0EF1               	movlw	-15
 30838  013F3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30839  013F42  0EF2               	movlw	-14
 30840  013F44  0060  F033  FFE3   	movff	btemp+11,plusw1
 30841  013F4A                     l8834:
 30842                           
 30843                           ;stkvar	_b @ sp[(-13)+-4]
 30844  013F4A  0EF1               	movlw	-15
 30845  013F4C  8EE3               	bsf	plusw1,7,c
 30846  013F4E  D018               	goto	l8838
 30847  013F50                     l8836:
 30848  013F50  0E00               	movlw	0
 30849  013F52  6E09               	movwf	(btemp+8)^0,c
 30850  013F54  0E00               	movlw	0
 30851  013F56  6E0A               	movwf	(btemp+9)^0,c
 30852  013F58  0E00               	movlw	0
 30853  013F5A  6E0B               	movwf	(btemp+10)^0,c
 30854  013F5C  0E00               	movlw	0
 30855  013F5E  6E0C               	movwf	(btemp+11)^0,c
 30856                           
 30857                           ;stkvar	_b @ sp[(-13)+-4]
 30858  013F60  0EEF               	movlw	-17
 30859  013F62  0060  F027  FFE3   	movff	btemp+8,plusw1
 30860  013F68  0EF0               	movlw	-16
 30861  013F6A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30862  013F70  0EF1               	movlw	-15
 30863  013F72  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30864  013F78  0EF2               	movlw	-14
 30865  013F7A  0060  F033  FFE3   	movff	btemp+11,plusw1
 30866  013F80                     l8838:
 30867                           
 30868                           ;stkvar	_a @ sp[(-13)+-8]
 30869  013F80  0EEE               	movlw	238
 30870  013F82  24E1               	addwf	fsr1l,w,c
 30871  013F84  6ED9               	movwf	fsr2l,c
 30872  013F86  0EFF               	movlw	255
 30873  013F88  20E2               	addwfc	fsr1h,w,c
 30874  013F8A  6EDA               	movwf	fsr2h,c
 30875  013F8C  50DF               	movf	indf2,w,c
 30876  013F8E  6E0C               	movwf	(btemp+11)^0,c
 30877  013F90  0E80               	movlw	128
 30878  013F92  160C               	andwf	(btemp+11)^0,f,c
 30879                           
 30880                           ;stkvar	_sign @ sp[(-13)+12]
 30881  013F94  50E1               	movf	fsr1l,w,c
 30882  013F96  0FFF               	addlw	-1
 30883  013F98  6ED9               	movwf	fsr2l,c
 30884  013F9A  50E2               	movf	fsr1h,w,c
 30885  013F9C  6EDA               	movwf	fsr2h,c
 30886  013F9E  0EFF               	movlw	255
 30887  013FA0  22DA               	addwfc	fsr2h,f,c
 30888  013FA2  500C               	movf	(btemp+11)^0,w,c
 30889  013FA4  1ADF               	xorwf	indf2,f,c
 30890                           
 30891                           ;stkvar	_a @ sp[(-13)+-8]
 30892  013FA6  0EEE               	movlw	238
 30893  013FA8  24E1               	addwf	fsr1l,w,c
 30894  013FAA  6ED9               	movwf	fsr2l,c
 30895  013FAC  0EFF               	movlw	255
 30896  013FAE  20E2               	addwfc	fsr1h,w,c
 30897  013FB0  6EDA               	movwf	fsr2h,c
 30898  013FB2  50DF               	movf	indf2,w,c
 30899  013FB4  6E0C               	movwf	(btemp+11)^0,c
 30900  013FB6  90D8               	bcf	status,0,c
 30901  013FB8  340C               	rlcf	(btemp+11)^0,w,c
 30902  013FBA  6E0B               	movwf	(btemp+10)^0,c
 30903                           
 30904                           ;stkvar	_aexp @ sp[(-13)+11]
 30905  013FBC  0EFE               	movlw	-2
 30906  013FBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30907                           
 30908                           ;stkvar	_a @ sp[(-13)+-8]
 30909  013FC4  0EED               	movlw	237
 30910  013FC6  24E1               	addwf	fsr1l,w,c
 30911  013FC8  6ED9               	movwf	fsr2l,c
 30912  013FCA  0EFF               	movlw	255
 30913  013FCC  20E2               	addwfc	fsr1h,w,c
 30914  013FCE  6EDA               	movwf	fsr2h,c
 30915  013FD0  AEDF               	btfss	indf2,7,c
 30916  013FD2  D002               	goto	l8846
 30917                           
 30918                           ;stkvar	_aexp @ sp[(-13)+11]
 30919  013FD4  0EFE               	movlw	-2
 30920  013FD6  80E3               	bsf	plusw1,0,c
 30921  013FD8                     l8846:
 30922                           
 30923                           ;stkvar	_aexp @ sp[(-13)+11]
 30924  013FD8  0EFE               	movlw	-2
 30925  013FDA  50E3               	movf	plusw1,w,c
 30926  013FDC  B4D8               	btfsc	status,2,c
 30927  013FDE  D01F               	goto	l8854
 30928                           
 30929                           ;stkvar	_aexp @ sp[(-13)+11]
 30930  013FE0  0EFE               	movlw	-2
 30931  013FE2  28E3               	incf	plusw1,w,c
 30932  013FE4  A4D8               	btfss	status,2,c
 30933  013FE6  D018               	goto	l8852
 30934  013FE8  0E00               	movlw	0
 30935  013FEA  6E09               	movwf	(btemp+8)^0,c
 30936  013FEC  0E00               	movlw	0
 30937  013FEE  6E0A               	movwf	(btemp+9)^0,c
 30938  013FF0  0E00               	movlw	0
 30939  013FF2  6E0B               	movwf	(btemp+10)^0,c
 30940  013FF4  0E00               	movlw	0
 30941  013FF6  6E0C               	movwf	(btemp+11)^0,c
 30942                           
 30943                           ;stkvar	_a @ sp[(-13)+-8]
 30944  013FF8  0EEB               	movlw	-21
 30945  013FFA  0060  F027  FFE3   	movff	btemp+8,plusw1
 30946  014000  0EEC               	movlw	-20
 30947  014002  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30948  014008  0EED               	movlw	-19
 30949  01400A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30950  014010  0EEE               	movlw	-18
 30951  014012  0060  F033  FFE3   	movff	btemp+11,plusw1
 30952  014018                     l8852:
 30953                           
 30954                           ;stkvar	_a @ sp[(-13)+-8]
 30955  014018  0EED               	movlw	-19
 30956  01401A  8EE3               	bsf	plusw1,7,c
 30957  01401C  D018               	goto	l8856
 30958  01401E                     l8854:
 30959  01401E  0E00               	movlw	0
 30960  014020  6E09               	movwf	(btemp+8)^0,c
 30961  014022  0E00               	movlw	0
 30962  014024  6E0A               	movwf	(btemp+9)^0,c
 30963  014026  0E00               	movlw	0
 30964  014028  6E0B               	movwf	(btemp+10)^0,c
 30965  01402A  0E00               	movlw	0
 30966  01402C  6E0C               	movwf	(btemp+11)^0,c
 30967                           
 30968                           ;stkvar	_a @ sp[(-13)+-8]
 30969  01402E  0EEB               	movlw	-21
 30970  014030  0060  F027  FFE3   	movff	btemp+8,plusw1
 30971  014036  0EEC               	movlw	-20
 30972  014038  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30973  01403E  0EED               	movlw	-19
 30974  014040  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30975  014046  0EEE               	movlw	-18
 30976  014048  0060  F033  FFE3   	movff	btemp+11,plusw1
 30977  01404E                     l8856:
 30978                           
 30979                           ;stkvar	_aexp @ sp[(-13)+11]
 30980  01404E  0EFE               	movlw	-2
 30981  014050  50E3               	movf	plusw1,w,c
 30982  014052  B4D8               	btfsc	status,2,c
 30983  014054  D004               	goto	u7150
 30984                           
 30985                           ;stkvar	_bexp @ sp[(-13)+10]
 30986  014056  0EFD               	movlw	-3
 30987  014058  50E3               	movf	plusw1,w,c
 30988  01405A  A4D8               	btfss	status,2,c
 30989  01405C  D009               	goto	l8864
 30990  01405E                     u7150:
 30991  01405E  0E00               	movlw	0
 30992  014060  6E01               	movwf	btemp^0,c
 30993  014062  0E00               	movlw	0
 30994  014064  6E02               	movwf	(btemp+1)^0,c
 30995  014066  0E00               	movlw	0
 30996  014068  6E03               	movwf	(btemp+2)^0,c
 30997  01406A  0E00               	movlw	0
 30998  01406C  6E04               	movwf	(btemp+3)^0,c
 30999  01406E  D332               	goto	l3165
 31000  014070                     l8864:
 31001                           
 31002                           ;stkvar	_b @ sp[(-13)+-4]
 31003  014070  0EEF               	movlw	-17
 31004  014072  006F FF8C  F00C    	movff	plusw1,btemp+11
 31005                           
 31006                           ;stkvar	_a @ sp[(-13)+-8]
 31007  014078  0EED               	movlw	237
 31008  01407A  24E1               	addwf	fsr1l,w,c
 31009  01407C  6ED9               	movwf	fsr2l,c
 31010  01407E  0EFF               	movlw	255
 31011  014080  20E2               	addwfc	fsr1h,w,c
 31012  014082  6EDA               	movwf	fsr2h,c
 31013  014084  50DF               	movf	indf2,w,c
 31014  014086  020C               	mulwf	(btemp+11)^0,c
 31015                           
 31016                           ;stkvar	_temp @ sp[(-13)+8]
 31017  014088  0EFB               	movlw	-5
 31018  01408A  006F FFCF FFE3     	movff	prodl,plusw1
 31019  014090  0EFC               	movlw	-4
 31020  014092  006F FFD3 FFE3     	movff	prodh,plusw1
 31021                           
 31022                           ;stkvar	_temp @ sp[(-13)+8]
 31023  014098  0EFB               	movlw	-5
 31024  01409A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31025  0140A0  0060  F030  F005   	movff	btemp+11,btemp+4
 31026  0140A6  6A06               	clrf	(btemp+5)^0,c
 31027  0140A8  6A07               	clrf	(btemp+6)^0,c
 31028  0140AA  6A08               	clrf	(btemp+7)^0,c
 31029                           
 31030                           ;stkvar	_grs @ sp[(-13)+4]
 31031  0140AC  0EF7               	movlw	-9
 31032  0140AE  0060  F017  FFE3   	movff	btemp+4,plusw1
 31033  0140B4  0EF8               	movlw	-8
 31034  0140B6  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31035  0140BC  0EF9               	movlw	-7
 31036  0140BE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31037  0140C4  0EFA               	movlw	-6
 31038  0140C6  0060  F023  FFE3   	movff	btemp+7,plusw1
 31039                           
 31040                           ;stkvar	_temp @ sp[(-13)+8]
 31041  0140CC  0EFC               	movlw	252
 31042  0140CE  24E1               	addwf	fsr1l,w,c
 31043  0140D0  6ED9               	movwf	fsr2l,c
 31044  0140D2  0EFF               	movlw	255
 31045  0140D4  20E2               	addwfc	fsr1h,w,c
 31046  0140D6  6EDA               	movwf	fsr2h,c
 31047  0140D8  50DF               	movf	indf2,w,c
 31048  0140DA  6E0C               	movwf	(btemp+11)^0,c
 31049  0140DC  0060  F030  F005   	movff	btemp+11,btemp+4
 31050  0140E2  6A06               	clrf	(btemp+5)^0,c
 31051  0140E4  6A07               	clrf	(btemp+6)^0,c
 31052  0140E6  6A08               	clrf	(btemp+7)^0,c
 31053                           
 31054                           ;stkvar	_prod @ sp[(-13)+0]
 31055  0140E8  0EF3               	movlw	-13
 31056  0140EA  0060  F017  FFE3   	movff	btemp+4,plusw1
 31057  0140F0  0EF4               	movlw	-12
 31058  0140F2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31059  0140F8  0EF5               	movlw	-11
 31060  0140FA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31061  014100  0EF6               	movlw	-10
 31062  014102  0060  F023  FFE3   	movff	btemp+7,plusw1
 31063                           
 31064                           ;stkvar	_b @ sp[(-13)+-4]
 31065  014108  0EF0               	movlw	240
 31066  01410A  24E1               	addwf	fsr1l,w,c
 31067  01410C  6ED9               	movwf	fsr2l,c
 31068  01410E  0EFF               	movlw	255
 31069  014110  20E2               	addwfc	fsr1h,w,c
 31070  014112  6EDA               	movwf	fsr2h,c
 31071  014114  50DF               	movf	indf2,w,c
 31072  014116  6E0C               	movwf	(btemp+11)^0,c
 31073                           
 31074                           ;stkvar	_a @ sp[(-13)+-8]
 31075  014118  0EEC               	movlw	236
 31076  01411A  24E1               	addwf	fsr1l,w,c
 31077  01411C  6ED9               	movwf	fsr2l,c
 31078  01411E  0EFF               	movlw	255
 31079  014120  20E2               	addwfc	fsr1h,w,c
 31080  014122  6EDA               	movwf	fsr2h,c
 31081  014124  50DF               	movf	indf2,w,c
 31082  014126  020C               	mulwf	(btemp+11)^0,c
 31083                           
 31084                           ;stkvar	_temp @ sp[(-13)+8]
 31085  014128  0EFB               	movlw	-5
 31086  01412A  006F FFCF FFE3     	movff	prodl,plusw1
 31087  014130  0EFC               	movlw	-4
 31088  014132  006F FFD3 FFE3     	movff	prodh,plusw1
 31089                           
 31090                           ;stkvar	_grs @ sp[(-13)+4]
 31091  014138  50E1               	movf	fsr1l,w,c
 31092  01413A  0FF7               	addlw	-9
 31093  01413C  6ED9               	movwf	fsr2l,c
 31094  01413E  50E2               	movf	fsr1h,w,c
 31095  014140  6EDA               	movwf	fsr2h,c
 31096  014142  0EFF               	movlw	255
 31097  014144  22DA               	addwfc	fsr2h,f,c
 31098                           
 31099                           ;stkvar	_temp @ sp[(-13)+8]
 31100  014146  0EFB               	movlw	-5
 31101  014148  50E3               	movf	plusw1,w,c
 31102  01414A  26DE               	addwf	postinc2,f,c
 31103  01414C  0E00               	movlw	0
 31104  01414E  22DE               	addwfc	postinc2,f,c
 31105  014150  22DE               	addwfc	postinc2,f,c
 31106  014152  22DE               	addwfc	postinc2,f,c
 31107                           
 31108                           ;stkvar	_prod @ sp[(-13)+0]
 31109  014154  50E1               	movf	fsr1l,w,c
 31110  014156  0FF3               	addlw	-13
 31111  014158  6ED9               	movwf	fsr2l,c
 31112  01415A  50E2               	movf	fsr1h,w,c
 31113  01415C  6EDA               	movwf	fsr2h,c
 31114  01415E  0EFF               	movlw	255
 31115  014160  22DA               	addwfc	fsr2h,f,c
 31116                           
 31117                           ;stkvar	_temp @ sp[(-13)+8]
 31118  014162  0EFC               	movlw	252
 31119  014164  24E1               	addwf	fsr1l,w,c
 31120  014166  6EE9               	movwf	fsr0l,c
 31121  014168  0EFF               	movlw	255
 31122  01416A  20E2               	addwfc	fsr1h,w,c
 31123  01416C  6EEA               	movwf	fsr0h,c
 31124  01416E  50EF               	movf	indf0,w,c
 31125  014170  26DE               	addwf	postinc2,f,c
 31126  014172  0E00               	movlw	0
 31127  014174  22DE               	addwfc	postinc2,f,c
 31128  014176  22DE               	addwfc	postinc2,f,c
 31129  014178  22DE               	addwfc	postinc2,f,c
 31130                           
 31131                           ;stkvar	_b @ sp[(-13)+-4]
 31132  01417A  0EF1               	movlw	241
 31133  01417C  24E1               	addwf	fsr1l,w,c
 31134  01417E  6ED9               	movwf	fsr2l,c
 31135  014180  0EFF               	movlw	255
 31136  014182  20E2               	addwfc	fsr1h,w,c
 31137  014184  6EDA               	movwf	fsr2h,c
 31138  014186  50DF               	movf	indf2,w,c
 31139  014188  6E0C               	movwf	(btemp+11)^0,c
 31140                           
 31141                           ;stkvar	_a @ sp[(-13)+-8]
 31142  01418A  0EEB               	movlw	-21
 31143  01418C  50E3               	movf	plusw1,w,c
 31144  01418E  020C               	mulwf	(btemp+11)^0,c
 31145                           
 31146                           ;stkvar	_temp @ sp[(-13)+8]
 31147  014190  0EFB               	movlw	-5
 31148  014192  006F FFCF FFE3     	movff	prodl,plusw1
 31149  014198  0EFC               	movlw	-4
 31150  01419A  006F FFD3 FFE3     	movff	prodh,plusw1
 31151                           
 31152                           ;stkvar	_grs @ sp[(-13)+4]
 31153  0141A0  50E1               	movf	fsr1l,w,c
 31154  0141A2  0FF7               	addlw	-9
 31155  0141A4  6ED9               	movwf	fsr2l,c
 31156  0141A6  50E2               	movf	fsr1h,w,c
 31157  0141A8  6EDA               	movwf	fsr2h,c
 31158  0141AA  0EFF               	movlw	255
 31159  0141AC  22DA               	addwfc	fsr2h,f,c
 31160                           
 31161                           ;stkvar	_temp @ sp[(-13)+8]
 31162  0141AE  0EFB               	movlw	-5
 31163  0141B0  50E3               	movf	plusw1,w,c
 31164  0141B2  26DE               	addwf	postinc2,f,c
 31165  0141B4  0E00               	movlw	0
 31166  0141B6  22DE               	addwfc	postinc2,f,c
 31167  0141B8  22DE               	addwfc	postinc2,f,c
 31168  0141BA  22DE               	addwfc	postinc2,f,c
 31169                           
 31170                           ;stkvar	_prod @ sp[(-13)+0]
 31171  0141BC  50E1               	movf	fsr1l,w,c
 31172  0141BE  0FF3               	addlw	-13
 31173  0141C0  6ED9               	movwf	fsr2l,c
 31174  0141C2  50E2               	movf	fsr1h,w,c
 31175  0141C4  6EDA               	movwf	fsr2h,c
 31176  0141C6  0EFF               	movlw	255
 31177  0141C8  22DA               	addwfc	fsr2h,f,c
 31178                           
 31179                           ;stkvar	_temp @ sp[(-13)+8]
 31180  0141CA  0EFC               	movlw	252
 31181  0141CC  24E1               	addwf	fsr1l,w,c
 31182  0141CE  6EE9               	movwf	fsr0l,c
 31183  0141D0  0EFF               	movlw	255
 31184  0141D2  20E2               	addwfc	fsr1h,w,c
 31185  0141D4  6EEA               	movwf	fsr0h,c
 31186  0141D6  50EF               	movf	indf0,w,c
 31187  0141D8  26DE               	addwf	postinc2,f,c
 31188  0141DA  0E00               	movlw	0
 31189  0141DC  22DE               	addwfc	postinc2,f,c
 31190  0141DE  22DE               	addwfc	postinc2,f,c
 31191  0141E0  22DE               	addwfc	postinc2,f,c
 31192                           
 31193                           ;stkvar	_grs @ sp[(-13)+4]
 31194  0141E2  50E1               	movf	fsr1l,w,c
 31195  0141E4  0FF7               	addlw	-9
 31196  0141E6  6ED9               	movwf	fsr2l,c
 31197  0141E8  50E2               	movf	fsr1h,w,c
 31198  0141EA  6EDA               	movwf	fsr2h,c
 31199  0141EC  0EFF               	movlw	255
 31200  0141EE  22DA               	addwfc	fsr2h,f,c
 31201  0141F0  0E08               	movlw	8
 31202  0141F2                     u7165:
 31203  0141F2  90D8               	bcf	status,0,c
 31204  0141F4  36DE               	rlcf	postinc2,f,c
 31205  0141F6  36DE               	rlcf	postinc2,f,c
 31206  0141F8  36DE               	rlcf	postinc2,f,c
 31207  0141FA  36DD               	rlcf	postdec2,f,c
 31208  0141FC  52DD               	movf	postdec2,f,c
 31209  0141FE  52DD               	movf	postdec2,f,c
 31210  014200  2EE8               	decfsz	wreg,f,c
 31211  014202  D7F7               	goto	u7165
 31212                           
 31213                           ;stkvar	_b @ sp[(-13)+-4]
 31214  014204  0EF0               	movlw	240
 31215  014206  24E1               	addwf	fsr1l,w,c
 31216  014208  6ED9               	movwf	fsr2l,c
 31217  01420A  0EFF               	movlw	255
 31218  01420C  20E2               	addwfc	fsr1h,w,c
 31219  01420E  6EDA               	movwf	fsr2h,c
 31220  014210  50DF               	movf	indf2,w,c
 31221  014212  6E0C               	movwf	(btemp+11)^0,c
 31222                           
 31223                           ;stkvar	_a @ sp[(-13)+-8]
 31224  014214  0EEB               	movlw	-21
 31225  014216  50E3               	movf	plusw1,w,c
 31226  014218  020C               	mulwf	(btemp+11)^0,c
 31227                           
 31228                           ;stkvar	_temp @ sp[(-13)+8]
 31229  01421A  0EFB               	movlw	-5
 31230  01421C  006F FFCF FFE3     	movff	prodl,plusw1
 31231  014222  0EFC               	movlw	-4
 31232  014224  006F FFD3 FFE3     	movff	prodh,plusw1
 31233                           
 31234                           ;stkvar	_temp @ sp[(-13)+8]
 31235  01422A  0EFB               	movlw	-5
 31236  01422C  006F FF8C  F00B    	movff	plusw1,btemp+10
 31237  014232  0EFC               	movlw	-4
 31238  014234  006F FF8C  F00C    	movff	plusw1,btemp+11
 31239                           
 31240                           ;stkvar	_grs @ sp[(-13)+4]
 31241  01423A  50E1               	movf	fsr1l,w,c
 31242  01423C  0FF7               	addlw	-9
 31243  01423E  6ED9               	movwf	fsr2l,c
 31244  014240  50E2               	movf	fsr1h,w,c
 31245  014242  6EDA               	movwf	fsr2h,c
 31246  014244  0EFF               	movlw	255
 31247  014246  22DA               	addwfc	fsr2h,f,c
 31248  014248  500B               	movf	(btemp+10)^0,w,c
 31249  01424A  26DE               	addwf	postinc2,f,c
 31250  01424C  500C               	movf	(btemp+11)^0,w,c
 31251  01424E  22DE               	addwfc	postinc2,f,c
 31252  014250  0E00               	movlw	0
 31253  014252  22DE               	addwfc	postinc2,f,c
 31254  014254  22DE               	addwfc	postinc2,f,c
 31255                           
 31256                           ;stkvar	_b @ sp[(-13)+-4]
 31257  014256  0EEF               	movlw	-17
 31258  014258  006F FF8C  F00C    	movff	plusw1,btemp+11
 31259                           
 31260                           ;stkvar	_a @ sp[(-13)+-8]
 31261  01425E  0EEC               	movlw	236
 31262  014260  24E1               	addwf	fsr1l,w,c
 31263  014262  6ED9               	movwf	fsr2l,c
 31264  014264  0EFF               	movlw	255
 31265  014266  20E2               	addwfc	fsr1h,w,c
 31266  014268  6EDA               	movwf	fsr2h,c
 31267  01426A  50DF               	movf	indf2,w,c
 31268  01426C  020C               	mulwf	(btemp+11)^0,c
 31269                           
 31270                           ;stkvar	_temp @ sp[(-13)+8]
 31271  01426E  0EFB               	movlw	-5
 31272  014270  006F FFCF FFE3     	movff	prodl,plusw1
 31273  014276  0EFC               	movlw	-4
 31274  014278  006F FFD3 FFE3     	movff	prodh,plusw1
 31275                           
 31276                           ;stkvar	_temp @ sp[(-13)+8]
 31277  01427E  0EFB               	movlw	-5
 31278  014280  006F FF8C  F00B    	movff	plusw1,btemp+10
 31279  014286  0EFC               	movlw	-4
 31280  014288  006F FF8C  F00C    	movff	plusw1,btemp+11
 31281                           
 31282                           ;stkvar	_grs @ sp[(-13)+4]
 31283  01428E  50E1               	movf	fsr1l,w,c
 31284  014290  0FF7               	addlw	-9
 31285  014292  6ED9               	movwf	fsr2l,c
 31286  014294  50E2               	movf	fsr1h,w,c
 31287  014296  6EDA               	movwf	fsr2h,c
 31288  014298  0EFF               	movlw	255
 31289  01429A  22DA               	addwfc	fsr2h,f,c
 31290  01429C  500B               	movf	(btemp+10)^0,w,c
 31291  01429E  26DE               	addwf	postinc2,f,c
 31292  0142A0  500C               	movf	(btemp+11)^0,w,c
 31293  0142A2  22DE               	addwfc	postinc2,f,c
 31294  0142A4  0E00               	movlw	0
 31295  0142A6  22DE               	addwfc	postinc2,f,c
 31296  0142A8  22DE               	addwfc	postinc2,f,c
 31297                           
 31298                           ;stkvar	_grs @ sp[(-13)+4]
 31299  0142AA  50E1               	movf	fsr1l,w,c
 31300  0142AC  0FF7               	addlw	-9
 31301  0142AE  6ED9               	movwf	fsr2l,c
 31302  0142B0  50E2               	movf	fsr1h,w,c
 31303  0142B2  6EDA               	movwf	fsr2h,c
 31304  0142B4  0EFF               	movlw	255
 31305  0142B6  22DA               	addwfc	fsr2h,f,c
 31306  0142B8  0E08               	movlw	8
 31307  0142BA                     u7175:
 31308  0142BA  90D8               	bcf	status,0,c
 31309  0142BC  36DE               	rlcf	postinc2,f,c
 31310  0142BE  36DE               	rlcf	postinc2,f,c
 31311  0142C0  36DE               	rlcf	postinc2,f,c
 31312  0142C2  36DD               	rlcf	postdec2,f,c
 31313  0142C4  52DD               	movf	postdec2,f,c
 31314  0142C6  52DD               	movf	postdec2,f,c
 31315  0142C8  2EE8               	decfsz	wreg,f,c
 31316  0142CA  D7F7               	goto	u7175
 31317                           
 31318                           ;stkvar	_b @ sp[(-13)+-4]
 31319  0142CC  0EEF               	movlw	-17
 31320  0142CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 31321                           
 31322                           ;stkvar	_a @ sp[(-13)+-8]
 31323  0142D4  0EEB               	movlw	-21
 31324  0142D6  50E3               	movf	plusw1,w,c
 31325  0142D8  020C               	mulwf	(btemp+11)^0,c
 31326                           
 31327                           ;stkvar	_temp @ sp[(-13)+8]
 31328  0142DA  0EFB               	movlw	-5
 31329  0142DC  006F FFCF FFE3     	movff	prodl,plusw1
 31330  0142E2  0EFC               	movlw	-4
 31331  0142E4  006F FFD3 FFE3     	movff	prodh,plusw1
 31332                           
 31333                           ;stkvar	_temp @ sp[(-13)+8]
 31334  0142EA  0EFB               	movlw	-5
 31335  0142EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 31336  0142F2  0EFC               	movlw	-4
 31337  0142F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 31338                           
 31339                           ;stkvar	_grs @ sp[(-13)+4]
 31340  0142FA  50E1               	movf	fsr1l,w,c
 31341  0142FC  0FF7               	addlw	-9
 31342  0142FE  6ED9               	movwf	fsr2l,c
 31343  014300  50E2               	movf	fsr1h,w,c
 31344  014302  6EDA               	movwf	fsr2h,c
 31345  014304  0EFF               	movlw	255
 31346  014306  22DA               	addwfc	fsr2h,f,c
 31347  014308  500B               	movf	(btemp+10)^0,w,c
 31348  01430A  26DE               	addwf	postinc2,f,c
 31349  01430C  500C               	movf	(btemp+11)^0,w,c
 31350  01430E  22DE               	addwfc	postinc2,f,c
 31351  014310  0E00               	movlw	0
 31352  014312  22DE               	addwfc	postinc2,f,c
 31353  014314  22DE               	addwfc	postinc2,f,c
 31354                           
 31355                           ;stkvar	_b @ sp[(-13)+-4]
 31356  014316  0EF0               	movlw	240
 31357  014318  24E1               	addwf	fsr1l,w,c
 31358  01431A  6ED9               	movwf	fsr2l,c
 31359  01431C  0EFF               	movlw	255
 31360  01431E  20E2               	addwfc	fsr1h,w,c
 31361  014320  6EDA               	movwf	fsr2h,c
 31362  014322  50DF               	movf	indf2,w,c
 31363  014324  6E0C               	movwf	(btemp+11)^0,c
 31364                           
 31365                           ;stkvar	_a @ sp[(-13)+-8]
 31366  014326  0EED               	movlw	237
 31367  014328  24E1               	addwf	fsr1l,w,c
 31368  01432A  6ED9               	movwf	fsr2l,c
 31369  01432C  0EFF               	movlw	255
 31370  01432E  20E2               	addwfc	fsr1h,w,c
 31371  014330  6EDA               	movwf	fsr2h,c
 31372  014332  50DF               	movf	indf2,w,c
 31373  014334  020C               	mulwf	(btemp+11)^0,c
 31374                           
 31375                           ;stkvar	_temp @ sp[(-13)+8]
 31376  014336  0EFB               	movlw	-5
 31377  014338  006F FFCF FFE3     	movff	prodl,plusw1
 31378  01433E  0EFC               	movlw	-4
 31379  014340  006F FFD3 FFE3     	movff	prodh,plusw1
 31380                           
 31381                           ;stkvar	_temp @ sp[(-13)+8]
 31382  014346  0EFB               	movlw	-5
 31383  014348  006F FF8C  F00B    	movff	plusw1,btemp+10
 31384  01434E  0EFC               	movlw	-4
 31385  014350  006F FF8C  F00C    	movff	plusw1,btemp+11
 31386                           
 31387                           ;stkvar	_prod @ sp[(-13)+0]
 31388  014356  50E1               	movf	fsr1l,w,c
 31389  014358  0FF3               	addlw	-13
 31390  01435A  6ED9               	movwf	fsr2l,c
 31391  01435C  50E2               	movf	fsr1h,w,c
 31392  01435E  6EDA               	movwf	fsr2h,c
 31393  014360  0EFF               	movlw	255
 31394  014362  22DA               	addwfc	fsr2h,f,c
 31395  014364  500B               	movf	(btemp+10)^0,w,c
 31396  014366  26DE               	addwf	postinc2,f,c
 31397  014368  500C               	movf	(btemp+11)^0,w,c
 31398  01436A  22DE               	addwfc	postinc2,f,c
 31399  01436C  0E00               	movlw	0
 31400  01436E  22DE               	addwfc	postinc2,f,c
 31401  014370  22DE               	addwfc	postinc2,f,c
 31402                           
 31403                           ;stkvar	_b @ sp[(-13)+-4]
 31404  014372  0EF1               	movlw	241
 31405  014374  24E1               	addwf	fsr1l,w,c
 31406  014376  6ED9               	movwf	fsr2l,c
 31407  014378  0EFF               	movlw	255
 31408  01437A  20E2               	addwfc	fsr1h,w,c
 31409  01437C  6EDA               	movwf	fsr2h,c
 31410  01437E  50DF               	movf	indf2,w,c
 31411  014380  6E0C               	movwf	(btemp+11)^0,c
 31412                           
 31413                           ;stkvar	_a @ sp[(-13)+-8]
 31414  014382  0EEC               	movlw	236
 31415  014384  24E1               	addwf	fsr1l,w,c
 31416  014386  6ED9               	movwf	fsr2l,c
 31417  014388  0EFF               	movlw	255
 31418  01438A  20E2               	addwfc	fsr1h,w,c
 31419  01438C  6EDA               	movwf	fsr2h,c
 31420  01438E  50DF               	movf	indf2,w,c
 31421  014390  020C               	mulwf	(btemp+11)^0,c
 31422                           
 31423                           ;stkvar	_temp @ sp[(-13)+8]
 31424  014392  0EFB               	movlw	-5
 31425  014394  006F FFCF FFE3     	movff	prodl,plusw1
 31426  01439A  0EFC               	movlw	-4
 31427  01439C  006F FFD3 FFE3     	movff	prodh,plusw1
 31428                           
 31429                           ;stkvar	_temp @ sp[(-13)+8]
 31430  0143A2  0EFB               	movlw	-5
 31431  0143A4  006F FF8C  F00B    	movff	plusw1,btemp+10
 31432  0143AA  0EFC               	movlw	-4
 31433  0143AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 31434                           
 31435                           ;stkvar	_prod @ sp[(-13)+0]
 31436  0143B2  50E1               	movf	fsr1l,w,c
 31437  0143B4  0FF3               	addlw	-13
 31438  0143B6  6ED9               	movwf	fsr2l,c
 31439  0143B8  50E2               	movf	fsr1h,w,c
 31440  0143BA  6EDA               	movwf	fsr2h,c
 31441  0143BC  0EFF               	movlw	255
 31442  0143BE  22DA               	addwfc	fsr2h,f,c
 31443  0143C0  500B               	movf	(btemp+10)^0,w,c
 31444  0143C2  26DE               	addwf	postinc2,f,c
 31445  0143C4  500C               	movf	(btemp+11)^0,w,c
 31446  0143C6  22DE               	addwfc	postinc2,f,c
 31447  0143C8  0E00               	movlw	0
 31448  0143CA  22DE               	addwfc	postinc2,f,c
 31449  0143CC  22DE               	addwfc	postinc2,f,c
 31450                           
 31451                           ;stkvar	_b @ sp[(-13)+-4]
 31452  0143CE  0EF1               	movlw	241
 31453  0143D0  24E1               	addwf	fsr1l,w,c
 31454  0143D2  6ED9               	movwf	fsr2l,c
 31455  0143D4  0EFF               	movlw	255
 31456  0143D6  20E2               	addwfc	fsr1h,w,c
 31457  0143D8  6EDA               	movwf	fsr2h,c
 31458  0143DA  50DF               	movf	indf2,w,c
 31459  0143DC  6E0C               	movwf	(btemp+11)^0,c
 31460                           
 31461                           ;stkvar	_a @ sp[(-13)+-8]
 31462  0143DE  0EED               	movlw	237
 31463  0143E0  24E1               	addwf	fsr1l,w,c
 31464  0143E2  6ED9               	movwf	fsr2l,c
 31465  0143E4  0EFF               	movlw	255
 31466  0143E6  20E2               	addwfc	fsr1h,w,c
 31467  0143E8  6EDA               	movwf	fsr2h,c
 31468  0143EA  50DF               	movf	indf2,w,c
 31469  0143EC  020C               	mulwf	(btemp+11)^0,c
 31470                           
 31471                           ;stkvar	_temp @ sp[(-13)+8]
 31472  0143EE  0EFB               	movlw	-5
 31473  0143F0  006F FFCF FFE3     	movff	prodl,plusw1
 31474  0143F6  0EFC               	movlw	-4
 31475  0143F8  006F FFD3 FFE3     	movff	prodh,plusw1
 31476                           
 31477                           ;stkvar	_temp @ sp[(-13)+8]
 31478  0143FE  0EFB               	movlw	-5
 31479  014400  006F FF8C  F00B    	movff	plusw1,btemp+10
 31480  014406  0EFC               	movlw	-4
 31481  014408  006F FF8C  F00C    	movff	plusw1,btemp+11
 31482  01440E  500B               	movf	(btemp+10)^0,w,c
 31483  014410  6E05               	movwf	(btemp+4)^0,c
 31484  014412  500C               	movf	(btemp+11)^0,w,c
 31485  014414  6E06               	movwf	(btemp+5)^0,c
 31486  014416  6A07               	clrf	(btemp+6)^0,c
 31487  014418  6A08               	clrf	(btemp+7)^0,c
 31488  01441A  0060  F01C  F008   	movff	btemp+6,btemp+7
 31489  014420  0060  F018  F007   	movff	btemp+5,btemp+6
 31490  014426  0060  F014  F006   	movff	btemp+4,btemp+5
 31491  01442C  6A05               	clrf	(btemp+4)^0,c
 31492                           
 31493                           ;stkvar	_prod @ sp[(-13)+0]
 31494  01442E  50E1               	movf	fsr1l,w,c
 31495  014430  0FF3               	addlw	-13
 31496  014432  6ED9               	movwf	fsr2l,c
 31497  014434  50E2               	movf	fsr1h,w,c
 31498  014436  6EDA               	movwf	fsr2h,c
 31499  014438  0EFF               	movlw	255
 31500  01443A  22DA               	addwfc	fsr2h,f,c
 31501  01443C  5005               	movf	(btemp+4)^0,w,c
 31502  01443E  26DE               	addwf	postinc2,f,c
 31503  014440  5006               	movf	(btemp+5)^0,w,c
 31504  014442  22DE               	addwfc	postinc2,f,c
 31505  014444  5007               	movf	(btemp+6)^0,w,c
 31506  014446  22DE               	addwfc	postinc2,f,c
 31507  014448  5008               	movf	(btemp+7)^0,w,c
 31508  01444A  22DE               	addwfc	postinc2,f,c
 31509                           
 31510                           ;stkvar	_prod @ sp[(-13)+0]
 31511  01444C  50E1               	movf	fsr1l,w,c
 31512  01444E  0FF3               	addlw	-13
 31513  014450  6ED9               	movwf	fsr2l,c
 31514  014452  50E2               	movf	fsr1h,w,c
 31515  014454  6EDA               	movwf	fsr2h,c
 31516  014456  0EFF               	movlw	255
 31517  014458  22DA               	addwfc	fsr2h,f,c
 31518                           
 31519                           ;stkvar	_grs @ sp[(-13)+4]
 31520  01445A  0EFA               	movlw	250
 31521  01445C  24E1               	addwf	fsr1l,w,c
 31522  01445E  6EE9               	movwf	fsr0l,c
 31523  014460  0EFF               	movlw	255
 31524  014462  20E2               	addwfc	fsr1h,w,c
 31525  014464  6EEA               	movwf	fsr0h,c
 31526  014466  50EF               	movf	indf0,w,c
 31527  014468  26DE               	addwf	postinc2,f,c
 31528  01446A  0E00               	movlw	0
 31529  01446C  22DE               	addwfc	postinc2,f,c
 31530  01446E  22DE               	addwfc	postinc2,f,c
 31531  014470  22DE               	addwfc	postinc2,f,c
 31532                           
 31533                           ;stkvar	_grs @ sp[(-13)+4]
 31534  014472  50E1               	movf	fsr1l,w,c
 31535  014474  0FF7               	addlw	-9
 31536  014476  6ED9               	movwf	fsr2l,c
 31537  014478  50E2               	movf	fsr1h,w,c
 31538  01447A  6EDA               	movwf	fsr2h,c
 31539  01447C  0EFF               	movlw	255
 31540  01447E  22DA               	addwfc	fsr2h,f,c
 31541  014480  0E08               	movlw	8
 31542  014482                     u7185:
 31543  014482  90D8               	bcf	status,0,c
 31544  014484  36DE               	rlcf	postinc2,f,c
 31545  014486  36DE               	rlcf	postinc2,f,c
 31546  014488  36DE               	rlcf	postinc2,f,c
 31547  01448A  36DD               	rlcf	postdec2,f,c
 31548  01448C  52DD               	movf	postdec2,f,c
 31549  01448E  52DD               	movf	postdec2,f,c
 31550  014490  2EE8               	decfsz	wreg,f,c
 31551  014492  D7F7               	goto	u7185
 31552  014494  0E82               	movlw	130
 31553  014496  6E0B               	movwf	(btemp+10)^0,c
 31554  014498  0EFF               	movlw	255
 31555  01449A  6E0C               	movwf	(btemp+11)^0,c
 31556                           
 31557                           ;stkvar	_bexp @ sp[(-13)+10]
 31558  01449C  0EFD               	movlw	-3
 31559  01449E  50E3               	movf	plusw1,w,c
 31560  0144A0  6E09               	movwf	(btemp+8)^0,c
 31561  0144A2  6A0A               	clrf	(btemp+9)^0,c
 31562                           
 31563                           ;stkvar	_aexp @ sp[(-13)+11]
 31564  0144A4  0EFE               	movlw	-2
 31565  0144A6  50E3               	movf	plusw1,w,c
 31566  0144A8  2609               	addwf	(btemp+8)^0,f,c
 31567  0144AA  0E00               	movlw	0
 31568  0144AC  220A               	addwfc	(btemp+9)^0,f,c
 31569  0144AE  500B               	movf	(btemp+10)^0,w,c
 31570  0144B0  2609               	addwf	(btemp+8)^0,f,c
 31571  0144B2  500C               	movf	(btemp+11)^0,w,c
 31572  0144B4  220A               	addwfc	(btemp+9)^0,f,c
 31573                           
 31574                           ;stkvar	_temp @ sp[(-13)+8]
 31575  0144B6  0EFB               	movlw	-5
 31576  0144B8  0060  F027  FFE3   	movff	btemp+8,plusw1
 31577  0144BE  0EFC               	movlw	-4
 31578  0144C0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31579  0144C6  D021               	goto	l8926
 31580  0144C8                     l8916:
 31581                           
 31582                           ;stkvar	_prod @ sp[(-13)+0]
 31583  0144C8  90D8               	bcf	status,0,c
 31584  0144CA  0EF3               	movlw	-13
 31585  0144CC  36E3               	rlcf	plusw1,f,c
 31586  0144CE  0EF4               	movlw	-12
 31587  0144D0  36E3               	rlcf	plusw1,f,c
 31588  0144D2  0EF5               	movlw	-11
 31589  0144D4  36E3               	rlcf	plusw1,f,c
 31590  0144D6  0EF6               	movlw	-10
 31591  0144D8  36E3               	rlcf	plusw1,f,c
 31592                           
 31593                           ;stkvar	_grs @ sp[(-13)+4]
 31594  0144DA  0EFA               	movlw	-6
 31595  0144DC  AEE3               	btfss	plusw1,7,c
 31596  0144DE  D002               	goto	l8922
 31597                           
 31598                           ;stkvar	_prod @ sp[(-13)+0]
 31599  0144E0  0EF3               	movlw	-13
 31600  0144E2  80E3               	bsf	plusw1,0,c
 31601  0144E4                     l8922:
 31602                           
 31603                           ;stkvar	_grs @ sp[(-13)+4]
 31604  0144E4  90D8               	bcf	status,0,c
 31605  0144E6  0EF7               	movlw	-9
 31606  0144E8  36E3               	rlcf	plusw1,f,c
 31607  0144EA  0EF8               	movlw	-8
 31608  0144EC  36E3               	rlcf	plusw1,f,c
 31609  0144EE  0EF9               	movlw	-7
 31610  0144F0  36E3               	rlcf	plusw1,f,c
 31611  0144F2  0EFA               	movlw	-6
 31612  0144F4  36E3               	rlcf	plusw1,f,c
 31613                           
 31614                           ;stkvar	_temp @ sp[(-13)+8]
 31615  0144F6  50E1               	movf	fsr1l,w,c
 31616  0144F8  0FFB               	addlw	-5
 31617  0144FA  6ED9               	movwf	fsr2l,c
 31618  0144FC  50E2               	movf	fsr1h,w,c
 31619  0144FE  6EDA               	movwf	fsr2h,c
 31620  014500  0EFF               	movlw	255
 31621  014502  22DA               	addwfc	fsr2h,f,c
 31622  014504  06DE               	decf	postinc2,f,c
 31623  014506  0E00               	movlw	0
 31624  014508  5ADD               	subwfb	postdec2,f,c
 31625  01450A                     l8926:
 31626                           
 31627                           ;stkvar	_prod @ sp[(-13)+0]
 31628  01450A  0EF5               	movlw	-11
 31629  01450C  AEE3               	btfss	plusw1,7,c
 31630  01450E  D7DC               	goto	l8916
 31631                           
 31632                           ;stkvar	_aexp @ sp[(-13)+11]
 31633  014510  0EFE               	movlw	-2
 31634  014512  6AE3               	clrf	plusw1,c
 31635                           
 31636                           ;stkvar	_grs @ sp[(-13)+4]
 31637  014514  0EFA               	movlw	-6
 31638  014516  AEE3               	btfss	plusw1,7,c
 31639  014518  D020               	goto	l8940
 31640                           
 31641                           ;stkvar	_grs @ sp[(-13)+4]
 31642  01451A  50E1               	movf	fsr1l,w,c
 31643  01451C  0FF7               	addlw	-9
 31644  01451E  6ED9               	movwf	fsr2l,c
 31645  014520  50E2               	movf	fsr1h,w,c
 31646  014522  6EDA               	movwf	fsr2h,c
 31647  014524  0EFF               	movlw	255
 31648  014526  22DA               	addwfc	fsr2h,f,c
 31649  014528  0EFF               	movlw	255
 31650  01452A  14DE               	andwf	postinc2,w,c
 31651  01452C  6E09               	movwf	(btemp+8)^0,c
 31652  01452E  0EFF               	movlw	255
 31653  014530  14DE               	andwf	postinc2,w,c
 31654  014532  6E0A               	movwf	(btemp+9)^0,c
 31655  014534  0EFF               	movlw	255
 31656  014536  14DE               	andwf	postinc2,w,c
 31657  014538  6E0B               	movwf	(btemp+10)^0,c
 31658  01453A  0E7F               	movlw	127
 31659  01453C  14DE               	andwf	postinc2,w,c
 31660  01453E  6E0C               	movwf	(btemp+11)^0,c
 31661  014540  5009               	movf	(btemp+8)^0,w,c
 31662  014542  100A               	iorwf	(btemp+9)^0,w,c
 31663  014544  100B               	iorwf	(btemp+10)^0,w,c
 31664  014546  100C               	iorwf	(btemp+11)^0,w,c
 31665  014548  B4D8               	btfsc	status,2,c
 31666  01454A  D004               	goto	l8936
 31667  01454C                     u7220:
 31668                           
 31669                           ;stkvar	_aexp @ sp[(-13)+11]
 31670  01454C  0EFE               	movlw	-2
 31671  01454E  6AE3               	clrf	plusw1,c
 31672  014550  2AE3               	incf	plusw1,f,c
 31673  014552  D003               	goto	l8940
 31674  014554                     l8936:
 31675                           
 31676                           ;stkvar	_prod @ sp[(-13)+0]
 31677  014554  0EF3               	movlw	-13
 31678  014556  B0E3               	btfsc	plusw1,0,c
 31679  014558  D7F9               	goto	u7220
 31680  01455A                     l8940:
 31681                           
 31682                           ;stkvar	_aexp @ sp[(-13)+11]
 31683  01455A  0EFE               	movlw	-2
 31684  01455C  50E3               	movf	plusw1,w,c
 31685  01455E  B4D8               	btfsc	status,2,c
 31686  014560  D036               	goto	l8950
 31687                           
 31688                           ;stkvar	_prod @ sp[(-13)+0]
 31689  014562  50E1               	movf	fsr1l,w,c
 31690  014564  0FF3               	addlw	-13
 31691  014566  6ED9               	movwf	fsr2l,c
 31692  014568  50E2               	movf	fsr1h,w,c
 31693  01456A  6EDA               	movwf	fsr2h,c
 31694  01456C  0EFF               	movlw	255
 31695  01456E  22DA               	addwfc	fsr2h,f,c
 31696  014570  2ADE               	incf	postinc2,f,c
 31697  014572  0E00               	movlw	0
 31698  014574  22DE               	addwfc	postinc2,f,c
 31699  014576  22DE               	addwfc	postinc2,f,c
 31700  014578  22DE               	addwfc	postinc2,f,c
 31701                           
 31702                           ;stkvar	_prod @ sp[(-13)+0]
 31703  01457A  0EF6               	movlw	-10
 31704  01457C  A0E3               	btfss	plusw1,0,c
 31705  01457E  D027               	goto	l8950
 31706  014580  0E01               	movlw	1
 31707  014582  6E0C               	movwf	(btemp+11)^0,c
 31708                           
 31709                           ;stkvar	_prod @ sp[(-13)+0]
 31710  014584  50E1               	movf	fsr1l,w,c
 31711  014586  0FF3               	addlw	-13
 31712  014588  6ED9               	movwf	fsr2l,c
 31713  01458A  50E2               	movf	fsr1h,w,c
 31714  01458C  6EDA               	movwf	fsr2h,c
 31715  01458E  0EFF               	movlw	255
 31716  014590  22DA               	addwfc	fsr2h,f,c
 31717  014592  280C               	incf	(btemp+11)^0,w,c
 31718  014594  52DE               	movf	postinc2,f,c
 31719  014596  D008               	goto	u7260
 31720  014598                     u7265:
 31721  014598  52DE               	movf	postinc2,f,c
 31722  01459A  90D8               	bcf	status,0,c
 31723  01459C  BEDC               	btfsc	preinc2,7,c
 31724  01459E  80D8               	bsf	status,0,c
 31725  0145A0  32DD               	rrcf	postdec2,f,c
 31726  0145A2  32DD               	rrcf	postdec2,f,c
 31727  0145A4  32DD               	rrcf	postdec2,f,c
 31728  0145A6  32DE               	rrcf	postinc2,f,c
 31729  0145A8                     u7260:
 31730  0145A8  2EE8               	decfsz	wreg,f,c
 31731  0145AA  D7F6               	goto	u7265
 31732                           
 31733                           ;stkvar	_temp @ sp[(-13)+8]
 31734  0145AC  0EFB               	movlw	-5
 31735  0145AE  50E3               	movf	plusw1,w,c
 31736  0145B0  0F01               	addlw	1
 31737  0145B2  6E01               	movwf	btemp^0,c
 31738  0145B4  0EFB               	movlw	-5
 31739  0145B6  0060  F007  FFE3   	movff	btemp,plusw1
 31740  0145BC  6A01               	clrf	btemp^0,c
 31741  0145BE  0EFC               	movlw	-4
 31742  0145C0  50E3               	movf	plusw1,w,c
 31743  0145C2  2001               	addwfc	btemp^0,w,c
 31744  0145C4  6E01               	movwf	btemp^0,c
 31745  0145C6  0EFC               	movlw	-4
 31746  0145C8  0060  F007  FFE3   	movff	btemp,plusw1
 31747  0145CE                     l8950:
 31748                           
 31749                           ;stkvar	_temp @ sp[(-13)+8]
 31750  0145CE  0EFC               	movlw	-4
 31751  0145D0  BEE3               	btfsc	plusw1,7,c
 31752  0145D2  D020               	goto	l8954
 31753  0145D4  0EFC               	movlw	-4
 31754  0145D6  50E3               	movf	plusw1,w,c
 31755  0145D8  E104               	bnz	u7270
 31756  0145DA  0EFB               	movlw	-5
 31757  0145DC  28E3               	incf	plusw1,w,c
 31758  0145DE  A0D8               	btfss	status,0,c
 31759  0145E0  D019               	goto	l8954
 31760  0145E2                     u7270:
 31761  0145E2  0E00               	movlw	0
 31762  0145E4  6E09               	movwf	(btemp+8)^0,c
 31763  0145E6  0E00               	movlw	0
 31764  0145E8  6E0A               	movwf	(btemp+9)^0,c
 31765  0145EA  0E80               	movlw	128
 31766  0145EC  6E0B               	movwf	(btemp+10)^0,c
 31767  0145EE  0E7F               	movlw	127
 31768  0145F0  6E0C               	movwf	(btemp+11)^0,c
 31769                           
 31770                           ;stkvar	_prod @ sp[(-13)+0]
 31771  0145F2  0EF3               	movlw	-13
 31772  0145F4  0060  F027  FFE3   	movff	btemp+8,plusw1
 31773  0145FA  0EF4               	movlw	-12
 31774  0145FC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31775  014602  0EF5               	movlw	-11
 31776  014604  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31777  01460A  0EF6               	movlw	-10
 31778  01460C  0060  F033  FFE3   	movff	btemp+11,plusw1
 31779  014612  D044               	goto	l8970
 31780  014614                     l8954:
 31781                           
 31782                           ;stkvar	_temp @ sp[(-13)+8]
 31783  014614  0EFC               	movlw	-4
 31784  014616  BEE3               	btfsc	plusw1,7,c
 31785  014618  D007               	goto	u7280
 31786  01461A  0EFC               	movlw	-4
 31787  01461C  50E3               	movf	plusw1,w,c
 31788  01461E  E10F               	bnz	l8960
 31789  014620  0EFB               	movlw	-5
 31790  014622  04E3               	decf	plusw1,w,c
 31791  014624  B0D8               	btfsc	status,0,c
 31792  014626  D00B               	goto	l8960
 31793  014628                     u7280:
 31794                           
 31795                           ;stkvar	_prod @ sp[(-13)+0]
 31796  014628  0EF3               	movlw	-13
 31797  01462A  6AE3               	clrf	plusw1,c
 31798  01462C  0EF4               	movlw	-12
 31799  01462E  6AE3               	clrf	plusw1,c
 31800  014630  0EF5               	movlw	-11
 31801  014632  6AE3               	clrf	plusw1,c
 31802  014634  0EF6               	movlw	-10
 31803  014636  6AE3               	clrf	plusw1,c
 31804                           
 31805                           ;stkvar	_sign @ sp[(-13)+12]
 31806  014638  0EFF               	movlw	-1
 31807  01463A  6AE3               	clrf	plusw1,c
 31808  01463C  D02F               	goto	l8970
 31809  01463E                     l8960:
 31810                           
 31811                           ;stkvar	_temp @ sp[(-13)+8]
 31812                           ;stkvar	_bexp @ sp[(-13)+10]
 31813  01463E  0EFB               	movlw	-5
 31814  014640  006F FF8C  F001    	movff	plusw1,btemp
 31815  014646  0EFD               	movlw	-3
 31816  014648  0060  F007  FFE3   	movff	btemp,plusw1
 31817                           
 31818                           ;stkvar	_prod @ sp[(-13)+0]
 31819  01464E  50E1               	movf	fsr1l,w,c
 31820  014650  0FF3               	addlw	-13
 31821  014652  6ED9               	movwf	fsr2l,c
 31822  014654  50E2               	movf	fsr1h,w,c
 31823  014656  6EDA               	movwf	fsr2h,c
 31824  014658  0EFF               	movlw	255
 31825  01465A  22DA               	addwfc	fsr2h,f,c
 31826  01465C  0EFF               	movlw	255
 31827  01465E  16DE               	andwf	postinc2,f,c
 31828  014660  0EFF               	movlw	255
 31829  014662  16DE               	andwf	postinc2,f,c
 31830  014664  0E7F               	movlw	127
 31831  014666  16DE               	andwf	postinc2,f,c
 31832  014668  0E00               	movlw	0
 31833  01466A  16DE               	andwf	postinc2,f,c
 31834                           
 31835                           ;stkvar	_bexp @ sp[(-13)+10]
 31836  01466C  0EFD               	movlw	-3
 31837  01466E  A0E3               	btfss	plusw1,0,c
 31838  014670  D008               	goto	l8968
 31839                           
 31840                           ;stkvar	_prod @ sp[(-13)+0]
 31841  014672  0EF5               	movlw	245
 31842  014674  24E1               	addwf	fsr1l,w,c
 31843  014676  6ED9               	movwf	fsr2l,c
 31844  014678  0EFF               	movlw	255
 31845  01467A  20E2               	addwfc	fsr1h,w,c
 31846  01467C  6EDA               	movwf	fsr2h,c
 31847  01467E  0E00               	movlw	0
 31848  014680  8EDB               	bsf	plusw2,7,c
 31849  014682                     l8968:
 31850                           
 31851                           ;stkvar	_prod @ sp[(-13)+0]
 31852  014682  0EF6               	movlw	246
 31853  014684  24E1               	addwf	fsr1l,w,c
 31854  014686  6ED9               	movwf	fsr2l,c
 31855  014688  0EFF               	movlw	255
 31856  01468A  20E2               	addwfc	fsr1h,w,c
 31857  01468C  6EDA               	movwf	fsr2h,c
 31858                           
 31859                           ;stkvar	_bexp @ sp[(-13)+10]
 31860  01468E  0EFD               	movlw	-3
 31861  014690  006F FF8C  F00C    	movff	plusw1,btemp+11
 31862  014696  90D8               	bcf	status,0,c
 31863  014698  300C               	rrcf	(btemp+11)^0,w,c
 31864  01469A  6EDF               	movwf	indf2,c
 31865  01469C                     l8970:
 31866                           
 31867                           ;stkvar	_sign @ sp[(-13)+12]
 31868  01469C  0EFF               	movlw	-1
 31869  01469E  006F FF8C  F00C    	movff	plusw1,btemp+11
 31870                           
 31871                           ;stkvar	_prod @ sp[(-13)+0]
 31872  0146A4  0EF6               	movlw	246
 31873  0146A6  24E1               	addwf	fsr1l,w,c
 31874  0146A8  6ED9               	movwf	fsr2l,c
 31875  0146AA  0EFF               	movlw	255
 31876  0146AC  20E2               	addwfc	fsr1h,w,c
 31877  0146AE  6EDA               	movwf	fsr2h,c
 31878  0146B0  500C               	movf	(btemp+11)^0,w,c
 31879  0146B2  12DF               	iorwf	indf2,f,c
 31880                           
 31881                           ;stkvar	_prod @ sp[(-13)+0]
 31882  0146B4  0EF3               	movlw	-13
 31883  0146B6  006F FF8C  F001    	movff	plusw1,btemp
 31884  0146BC  0EF4               	movlw	-12
 31885  0146BE  006F FF8C  F002    	movff	plusw1,btemp+1
 31886  0146C4  0EF5               	movlw	-11
 31887  0146C6  006F FF8C  F003    	movff	plusw1,btemp+2
 31888  0146CC  0EF6               	movlw	-10
 31889  0146CE  006F FF8C  F004    	movff	plusw1,btemp+3
 31890  0146D4                     l3165:
 31891                           
 31892                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 31893  0146D4  0EEB               	movlw	235
 31894  0146D6  26E1               	addwf	fsr1l,f,c
 31895  0146D8  0EFF               	movlw	255
 31896  0146DA  22E2               	addwfc	fsr1h,f,c
 31897  0146DC  0012               	return		;funcret
 31898  0146DE                     __end_of___flmul:
 31899                           	opt callstack 0
 31900                           
 31901 ;; *************** function _SYSTEM_Initialize *****************
 31902 ;; Defined at:
 31903 ;;		line 50 in file "mcc_generated_files/mcc.c"
 31904 ;; Parameters:    Size  Location     Type
 31905 ;;		None
 31906 ;; Auto vars:     Size  Location     Type
 31907 ;;		None
 31908 ;; Return value:  Size  Location     Type
 31909 ;;                  1  [STACK] void 
 31910 ;; Registers used:
 31911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 31912 ;; Tracked objects:
 31913 ;;		On entry : 0/0
 31914 ;;		On exit  : 3F/3C
 31915 ;;		Unchanged: 0/0
 31916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31921 ;;Total ram usage:        0 bytes
 31922 ;; Hardware stack levels used:    1
 31923 ;; Hardware stack levels required when called:   17
 31924 ;; This function calls:
 31925 ;;		_ADCC_Initialize
 31926 ;;		_CLKREF_Initialize
 31927 ;;		_DMA1_Initialize
 31928 ;;		_DMA2_Initialize
 31929 ;;		_EXT_INT_Initialize
 31930 ;;		_FVR_Initialize
 31931 ;;		_INTERRUPT_Initialize
 31932 ;;		_OSCILLATOR_Initialize
 31933 ;;		_PIN_MANAGER_Initialize
 31934 ;;		_PMD_Initialize
 31935 ;;		_PWM8_Initialize
 31936 ;;		_SPI1_Initialize
 31937 ;;		_TMR2_Initialize
 31938 ;;		_TMR3_Initialize
 31939 ;;		_TMR5_Initialize
 31940 ;;		_TMR6_Initialize
 31941 ;;		_UART1_Initialize
 31942 ;;		_UART2_Initialize
 31943 ;; This function is called by:
 31944 ;;		_main
 31945 ;; This function uses a reentrant model
 31946 ;;
 31947                           
 31948                           	psect	text122
 31949  01C080                     __ptext122:
 31950                           	opt callstack 0
 31951  01C080                     _SYSTEM_Initialize:
 31952                           	opt callstack 13
 31953                           
 31954                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 31955                           
 31956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31957                           ;incstack = 0
 31958  01C080  EC24  F0DE         	call	_INTERRUPT_Initialize	;wreg free
 31959                           
 31960                           ; BSR set to: 57
 31961                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 31962  01C084  ECAF  F0E6         	call	_PMD_Initialize	;wreg free
 31963                           
 31964                           ; BSR set to: 57
 31965                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 31966  01C088  ECDC  F0DA         	call	_PIN_MANAGER_Initialize	;wreg free
 31967                           
 31968                           ; BSR set to: 58
 31969                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 31970  01C08C  ECA4  F0E6         	call	_OSCILLATOR_Initialize	;wreg free
 31971                           
 31972                           ; BSR set to: 57
 31973                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 31974  01C090  EC33  F0E7         	call	_FVR_Initialize	;wreg free
 31975                           
 31976                           ; BSR set to: 62
 31977                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 31978  01C094  EC53  F0DD         	call	_ADCC_Initialize	;wreg free
 31979                           
 31980                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 31981  01C098  EC99  F0E6         	call	_PWM8_Initialize	;wreg free
 31982                           
 31983                           ; BSR set to: 63
 31984                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 31985  01C09C  EC77  F0E6         	call	_TMR2_Initialize	;wreg free
 31986                           
 31987                           ; BSR set to: 57
 31988                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 31989  01C0A0  EC18  F0E3         	call	_EXT_INT_Initialize	;wreg free
 31990                           
 31991                           ; BSR set to: 57
 31992                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 31993  01C0A4  EC04  F0E4         	call	_TMR6_Initialize	;wreg free
 31994                           
 31995                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 31996  01C0A8  ECD1  F0E0         	call	_TMR3_Initialize	;wreg free
 31997                           
 31998                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 31999  01C0AC  ECAD  F0E0         	call	_TMR5_Initialize	;wreg free
 32000                           
 32001                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 32002  01C0B0  EC89  F0E0         	call	_UART1_Initialize	;wreg free
 32003                           
 32004                           ; BSR set to: 57
 32005                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 32006  01C0B4  ECEB  F0DE         	call	_UART2_Initialize	;wreg free
 32007                           
 32008                           ; BSR set to: 57
 32009                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 32010  01C0B8  EC8E  F0E6         	call	_SPI1_Initialize	;wreg free
 32011                           
 32012                           ; BSR set to: 61
 32013                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 32014  01C0BC  EC75  F0DF         	call	_DMA2_Initialize	;wreg free
 32015                           
 32016                           ; BSR set to: 59
 32017                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 32018  01C0C0  EC1E  F0DD         	call	_DMA1_Initialize	;wreg free
 32019                           
 32020                           ; BSR set to: 59
 32021                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 32022  01C0C4  EC07  F0E7         	call	_CLKREF_Initialize	;wreg free
 32023                           
 32024                           ; BSR set to: 60
 32025                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32026  01C0C8  0012               	return		;funcret
 32027  01C0CA                     __end_of_SYSTEM_Initialize:
 32028                           	opt callstack 0
 32029                           
 32030 ;; *************** function _UART2_Initialize *****************
 32031 ;; Defined at:
 32032 ;;		line 78 in file "mcc_generated_files/uart2.c"
 32033 ;; Parameters:    Size  Location     Type
 32034 ;;		None
 32035 ;; Auto vars:     Size  Location     Type
 32036 ;;		None
 32037 ;; Return value:  Size  Location     Type
 32038 ;;                  1  [STACK] void 
 32039 ;; Registers used:
 32040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32041 ;; Tracked objects:
 32042 ;;		On entry : 3F/39
 32043 ;;		On exit  : 3F/39
 32044 ;;		Unchanged: 0/0
 32045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32050 ;;Total ram usage:        0 bytes
 32051 ;; Hardware stack levels used:    1
 32052 ;; Hardware stack levels required when called:   16
 32053 ;; This function calls:
 32054 ;;		_UART2_SetRxInterruptHandler
 32055 ;;		_UART2_SetTxInterruptHandler
 32056 ;; This function is called by:
 32057 ;;		_SYSTEM_Initialize
 32058 ;; This function uses a reentrant model
 32059 ;;
 32060                           
 32061                           	psect	text123
 32062  01BDD6                     __ptext123:
 32063                           	opt callstack 0
 32064  01BDD6                     _UART2_Initialize:
 32065                           	opt callstack 13
 32066                           
 32067                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 32068                           
 32069                           ; BSR set to: 60
 32070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32071                           ;incstack = 0
 32072  01BDD6  0139               	movlb	57	; () banked
 32073  01BDD8  9596               	bcf	150,2,b	;volatile
 32074                           
 32075                           ; BSR set to: 57
 32076                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 32077  01BDDA  0EEA               	movlw	low _UART2_Receive_ISR
 32078  01BDDC  6EE6               	movwf	postinc1,c
 32079  01BDDE  0ECB               	movlw	high _UART2_Receive_ISR
 32080  01BDE0  6EE6               	movwf	postinc1,c
 32081  01BDE2  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 32082  01BDE4  6EE6               	movwf	postinc1,c
 32083  01BDE6  EC55  F0E4         	call	_UART2_SetRxInterruptHandler	;wreg free
 32084                           
 32085                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 32086  01BDEA  0139               	movlb	57	; () banked
 32087  01BDEC  9796               	bcf	150,3,b	;volatile
 32088                           
 32089                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 32090  01BDEE  0EDC               	movlw	low _UART2_Transmit_ISR
 32091  01BDF0  6EE6               	movwf	postinc1,c
 32092  01BDF2  0EC7               	movlw	high _UART2_Transmit_ISR
 32093  01BDF4  6EE6               	movwf	postinc1,c
 32094  01BDF6  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 32095  01BDF8  6EE6               	movwf	postinc1,c
 32096  01BDFA  EC41  F0E4         	call	_UART2_SetTxInterruptHandler	;wreg free
 32097                           
 32098                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 32099  01BDFE  013D               	movlb	61	; () banked
 32100  01BE00  6BD4               	clrf	212,b	;volatile
 32101                           
 32102                           ; BSR set to: 61
 32103                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 32104  01BE02  6BD6               	clrf	214,b	;volatile
 32105                           
 32106                           ; BSR set to: 61
 32107                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 32108  01BE04  6BD8               	clrf	216,b	;volatile
 32109                           
 32110                           ; BSR set to: 61
 32111                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 32112  01BE06  0EB0               	movlw	176
 32113  01BE08  6FDA               	movwf	218,b	;volatile
 32114                           
 32115                           ; BSR set to: 61
 32116                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 32117  01BE0A  0E80               	movlw	128
 32118  01BE0C  6FDB               	movwf	219,b	;volatile
 32119                           
 32120                           ; BSR set to: 61
 32121                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 32122  01BE0E  6BDC               	clrf	220,b	;volatile
 32123                           
 32124                           ; BSR set to: 61
 32125                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 32126  01BE10  0E82               	movlw	130
 32127  01BE12  6FDD               	movwf	221,b	;volatile
 32128                           
 32129                           ; BSR set to: 61
 32130                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 32131  01BE14  0E06               	movlw	6
 32132  01BE16  6FDE               	movwf	222,b	;volatile
 32133                           
 32134                           ; BSR set to: 61
 32135                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 32136  01BE18  6BDF               	clrf	223,b	;volatile
 32137                           
 32138                           ; BSR set to: 61
 32139                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 32140  01BE1A  6BE0               	clrf	224,b	;volatile
 32141                           
 32142                           ; BSR set to: 61
 32143                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 32144  01BE1C  6BE1               	clrf	225,b	;volatile
 32145                           
 32146                           ; BSR set to: 61
 32147                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 32148  01BE1E  6BE2               	clrf	226,b	;volatile
 32149                           
 32150                           ; BSR set to: 61
 32151                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 32152  01BE20  0100               	movlb	0	; () banked
 32153  01BE22  6BA8               	clrf	_uart2TxHead& (0+255),b	;volatile
 32154                           
 32155                           ; BSR set to: 0
 32156                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 32157  01BE24  6A46               	clrf	_uart2TxTail^0,c	;volatile
 32158                           
 32159                           ; BSR set to: 0
 32160                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 32161  01BE26  0E40               	movlw	64
 32162  01BE28  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 32163                           
 32164                           ; BSR set to: 0
 32165                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 32166  01BE2A  6A44               	clrf	_uart2RxHead^0,c	;volatile
 32167                           
 32168                           ; BSR set to: 0
 32169                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 32170  01BE2C  6BA7               	clrf	_uart2RxTail& (0+255),b	;volatile
 32171                           
 32172                           ; BSR set to: 0
 32173                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 32174  01BE2E  6BA6               	clrf	_uart2RxCount& (0+255),b	;volatile
 32175                           
 32176                           ; BSR set to: 0
 32177                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 32178  01BE30  0139               	movlb	57	; () banked
 32179  01BE32  8596               	bsf	150,2,b	;volatile
 32180                           
 32181                           ; BSR set to: 57
 32182                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 32183  01BE34  0012               	return		;funcret
 32184  01BE36                     __end_of_UART2_Initialize:
 32185                           	opt callstack 0
 32186                           
 32187 ;; *************** function _UART2_SetTxInterruptHandler *****************
 32188 ;; Defined at:
 32189 ;;		line 252 in file "mcc_generated_files/uart2.c"
 32190 ;; Parameters:    Size  Location     Type
 32191 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32192 ;;		 -> UART2_Transmit_ISR(1), 
 32193 ;; Auto vars:     Size  Location     Type
 32194 ;;		None
 32195 ;; Return value:  Size  Location     Type
 32196 ;;                  1  [STACK] void 
 32197 ;; Registers used:
 32198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32199 ;; Tracked objects:
 32200 ;;		On entry : 3F/39
 32201 ;;		On exit  : 0/0
 32202 ;;		Unchanged: 0/0
 32203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32208 ;;Total ram usage:        0 bytes
 32209 ;; Hardware stack levels used:    1
 32210 ;; Hardware stack levels required when called:   15
 32211 ;; This function calls:
 32212 ;;		Nothing
 32213 ;; This function is called by:
 32214 ;;		_UART2_Initialize
 32215 ;; This function uses a reentrant model
 32216 ;;
 32217                           
 32218                           	psect	text124
 32219  01C882                     __ptext124:
 32220                           	opt callstack 0
 32221  01C882                     _UART2_SetTxInterruptHandler:
 32222                           	opt callstack 13
 32223                           
 32224                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 32225                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32226                           
 32227                           ; BSR set to: 57
 32228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32229                           ;incstack = 0
 32230  01C882  50E1               	movf	fsr1l,w,c
 32231  01C884  0FFD               	addlw	-3
 32232  01C886  6ED9               	movwf	fsr2l,c
 32233  01C888  50E2               	movf	fsr1h,w,c
 32234  01C88A  6EDA               	movwf	fsr2h,c
 32235  01C88C  0EFF               	movlw	255
 32236  01C88E  22DA               	addwfc	fsr2h,f,c
 32237  01C890  006F FF78  F08A    	movff	postinc2,_UART2_TxInterruptHandler
 32238  01C896  006F FF78  F08B    	movff	postinc2,_UART2_TxInterruptHandler+1
 32239  01C89C  006F FF74  F08C    	movff	postdec2,_UART2_TxInterruptHandler+2
 32240                           
 32241                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32242  01C8A2  52E5               	movf	postdec1,f,c
 32243  01C8A4  52E5               	movf	postdec1,f,c
 32244  01C8A6  52E5               	movf	postdec1,f,c
 32245  01C8A8  0012               	return		;funcret
 32246  01C8AA                     __end_of_UART2_SetTxInterruptHandler:
 32247                           	opt callstack 0
 32248                           
 32249 ;; *************** function _UART2_SetRxInterruptHandler *****************
 32250 ;; Defined at:
 32251 ;;		line 248 in file "mcc_generated_files/uart2.c"
 32252 ;; Parameters:    Size  Location     Type
 32253 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32254 ;;		 -> UART2_Receive_ISR(1), 
 32255 ;; Auto vars:     Size  Location     Type
 32256 ;;		None
 32257 ;; Return value:  Size  Location     Type
 32258 ;;                  1  [STACK] void 
 32259 ;; Registers used:
 32260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32261 ;; Tracked objects:
 32262 ;;		On entry : 3F/39
 32263 ;;		On exit  : 0/0
 32264 ;;		Unchanged: 0/0
 32265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32270 ;;Total ram usage:        0 bytes
 32271 ;; Hardware stack levels used:    1
 32272 ;; Hardware stack levels required when called:   15
 32273 ;; This function calls:
 32274 ;;		Nothing
 32275 ;; This function is called by:
 32276 ;;		_UART2_Initialize
 32277 ;; This function uses a reentrant model
 32278 ;;
 32279                           
 32280                           	psect	text125
 32281  01C8AA                     __ptext125:
 32282                           	opt callstack 0
 32283  01C8AA                     _UART2_SetRxInterruptHandler:
 32284                           	opt callstack 13
 32285                           
 32286                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 32287                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32288                           
 32289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32290                           ;incstack = 0
 32291  01C8AA  50E1               	movf	fsr1l,w,c
 32292  01C8AC  0FFD               	addlw	-3
 32293  01C8AE  6ED9               	movwf	fsr2l,c
 32294  01C8B0  50E2               	movf	fsr1h,w,c
 32295  01C8B2  6EDA               	movwf	fsr2h,c
 32296  01C8B4  0EFF               	movlw	255
 32297  01C8B6  22DA               	addwfc	fsr2h,f,c
 32298  01C8B8  006F FF78  F08D    	movff	postinc2,_UART2_RxInterruptHandler
 32299  01C8BE  006F FF78  F08E    	movff	postinc2,_UART2_RxInterruptHandler+1
 32300  01C8C4  006F FF74  F08F    	movff	postdec2,_UART2_RxInterruptHandler+2
 32301                           
 32302                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32303  01C8CA  52E5               	movf	postdec1,f,c
 32304  01C8CC  52E5               	movf	postdec1,f,c
 32305  01C8CE  52E5               	movf	postdec1,f,c
 32306  01C8D0  0012               	return		;funcret
 32307  01C8D2                     __end_of_UART2_SetRxInterruptHandler:
 32308                           	opt callstack 0
 32309                           
 32310 ;; *************** function _UART1_Initialize *****************
 32311 ;; Defined at:
 32312 ;;		line 75 in file "mcc_generated_files/uart1.c"
 32313 ;; Parameters:    Size  Location     Type
 32314 ;;		None
 32315 ;; Auto vars:     Size  Location     Type
 32316 ;;		None
 32317 ;; Return value:  Size  Location     Type
 32318 ;;                  1  [STACK] void 
 32319 ;; Registers used:
 32320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32321 ;; Tracked objects:
 32322 ;;		On entry : 0/39
 32323 ;;		On exit  : 3F/39
 32324 ;;		Unchanged: 0/0
 32325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32330 ;;Total ram usage:        0 bytes
 32331 ;; Hardware stack levels used:    1
 32332 ;; Hardware stack levels required when called:   16
 32333 ;; This function calls:
 32334 ;;		_UART1_SetRxInterruptHandler
 32335 ;; This function is called by:
 32336 ;;		_SYSTEM_Initialize
 32337 ;; This function uses a reentrant model
 32338 ;;
 32339                           
 32340                           	psect	text126
 32341  01C112                     __ptext126:
 32342                           	opt callstack 0
 32343  01C112                     _UART1_Initialize:
 32344                           	opt callstack 13
 32345                           
 32346                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 32347                           
 32348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32349                           ;incstack = 0
 32350  01C112  0139               	movlb	57	; () banked
 32351  01C114  9793               	bcf	147,3,b	;volatile
 32352                           
 32353                           ; BSR set to: 57
 32354                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 32355  01C116  0EA8               	movlw	low _UART1_Receive_ISR
 32356  01C118  6EE6               	movwf	postinc1,c
 32357  01C11A  0ECB               	movlw	high _UART1_Receive_ISR
 32358  01C11C  6EE6               	movwf	postinc1,c
 32359  01C11E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 32360  01C120  6EE6               	movwf	postinc1,c
 32361  01C122  EC69  F0E4         	call	_UART1_SetRxInterruptHandler	;wreg free
 32362                           
 32363                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 32364  01C126  013D               	movlb	61	; () banked
 32365  01C128  6BEC               	clrf	236,b	;volatile
 32366                           
 32367                           ; BSR set to: 61
 32368                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 32369  01C12A  6BED               	clrf	237,b	;volatile
 32370                           
 32371                           ; BSR set to: 61
 32372                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 32373  01C12C  6BEE               	clrf	238,b	;volatile
 32374                           
 32375                           ; BSR set to: 61
 32376                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 32377  01C12E  6BEF               	clrf	239,b	;volatile
 32378                           
 32379                           ; BSR set to: 61
 32380                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 32381  01C130  6BF0               	clrf	240,b	;volatile
 32382                           
 32383                           ; BSR set to: 61
 32384                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 32385  01C132  6BF1               	clrf	241,b	;volatile
 32386                           
 32387                           ; BSR set to: 61
 32388                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 32389  01C134  0EB0               	movlw	176
 32390  01C136  6FF2               	movwf	242,b	;volatile
 32391                           
 32392                           ; BSR set to: 61
 32393                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 32394  01C138  0E80               	movlw	128
 32395  01C13A  6FF3               	movwf	243,b	;volatile
 32396                           
 32397                           ; BSR set to: 61
 32398                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 32399  01C13C  6BF4               	clrf	244,b	;volatile
 32400                           
 32401                           ; BSR set to: 61
 32402                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 32403  01C13E  0E8A               	movlw	138
 32404  01C140  6FF5               	movwf	245,b	;volatile
 32405                           
 32406                           ; BSR set to: 61
 32407                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 32408  01C142  6BF6               	clrf	246,b	;volatile
 32409                           
 32410                           ; BSR set to: 61
 32411                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 32412  01C144  6BF7               	clrf	247,b	;volatile
 32413                           
 32414                           ; BSR set to: 61
 32415                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 32416  01C146  6BF8               	clrf	248,b	;volatile
 32417                           
 32418                           ; BSR set to: 61
 32419                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 32420  01C148  6BF9               	clrf	249,b	;volatile
 32421                           
 32422                           ; BSR set to: 61
 32423                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 32424  01C14A  6BFA               	clrf	250,b	;volatile
 32425                           
 32426                           ; BSR set to: 61
 32427                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 32428  01C14C  6A47               	clrf	_uart1RxHead^0,c	;volatile
 32429                           
 32430                           ; BSR set to: 61
 32431                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 32432  01C14E  0100               	movlb	0	; () banked
 32433  01C150  6BAA               	clrf	_uart1RxTail& (0+255),b	;volatile
 32434                           
 32435                           ; BSR set to: 0
 32436                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 32437  01C152  6BA9               	clrf	_uart1RxCount& (0+255),b	;volatile
 32438                           
 32439                           ; BSR set to: 0
 32440                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 32441  01C154  0139               	movlb	57	; () banked
 32442  01C156  8793               	bsf	147,3,b	;volatile
 32443                           
 32444                           ; BSR set to: 57
 32445                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 32446  01C158  0012               	return		;funcret
 32447  01C15A                     __end_of_UART1_Initialize:
 32448                           	opt callstack 0
 32449                           
 32450 ;; *************** function _UART1_SetRxInterruptHandler *****************
 32451 ;; Defined at:
 32452 ;;		line 207 in file "mcc_generated_files/uart1.c"
 32453 ;; Parameters:    Size  Location     Type
 32454 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32455 ;;		 -> UART1_Receive_ISR(1), 
 32456 ;; Auto vars:     Size  Location     Type
 32457 ;;		None
 32458 ;; Return value:  Size  Location     Type
 32459 ;;                  1  [STACK] void 
 32460 ;; Registers used:
 32461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32462 ;; Tracked objects:
 32463 ;;		On entry : 3F/39
 32464 ;;		On exit  : 0/0
 32465 ;;		Unchanged: 0/0
 32466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32471 ;;Total ram usage:        0 bytes
 32472 ;; Hardware stack levels used:    1
 32473 ;; Hardware stack levels required when called:   15
 32474 ;; This function calls:
 32475 ;;		Nothing
 32476 ;; This function is called by:
 32477 ;;		_UART1_Initialize
 32478 ;; This function uses a reentrant model
 32479 ;;
 32480                           
 32481                           	psect	text127
 32482  01C8D2                     __ptext127:
 32483                           	opt callstack 0
 32484  01C8D2                     _UART1_SetRxInterruptHandler:
 32485                           	opt callstack 13
 32486                           
 32487                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 32488                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32489                           
 32490                           ; BSR set to: 57
 32491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32492                           ;incstack = 0
 32493  01C8D2  50E1               	movf	fsr1l,w,c
 32494  01C8D4  0FFD               	addlw	-3
 32495  01C8D6  6ED9               	movwf	fsr2l,c
 32496  01C8D8  50E2               	movf	fsr1h,w,c
 32497  01C8DA  6EDA               	movwf	fsr2h,c
 32498  01C8DC  0EFF               	movlw	255
 32499  01C8DE  22DA               	addwfc	fsr2h,f,c
 32500  01C8E0  006F FF78  F087    	movff	postinc2,_UART1_RxInterruptHandler
 32501  01C8E6  006F FF78  F088    	movff	postinc2,_UART1_RxInterruptHandler+1
 32502  01C8EC  006F FF74  F089    	movff	postdec2,_UART1_RxInterruptHandler+2
 32503                           
 32504                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32505  01C8F2  52E5               	movf	postdec1,f,c
 32506  01C8F4  52E5               	movf	postdec1,f,c
 32507  01C8F6  52E5               	movf	postdec1,f,c
 32508  01C8F8  0012               	return		;funcret
 32509  01C8FA                     __end_of_UART1_SetRxInterruptHandler:
 32510                           	opt callstack 0
 32511                           
 32512 ;; *************** function _TMR6_Initialize *****************
 32513 ;; Defined at:
 32514 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 32515 ;; Parameters:    Size  Location     Type
 32516 ;;		None
 32517 ;; Auto vars:     Size  Location     Type
 32518 ;;		None
 32519 ;; Return value:  Size  Location     Type
 32520 ;;                  1  [STACK] void 
 32521 ;; Registers used:
 32522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32523 ;; Tracked objects:
 32524 ;;		On entry : 3F/39
 32525 ;;		On exit  : 0/0
 32526 ;;		Unchanged: 0/0
 32527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32532 ;;Total ram usage:        0 bytes
 32533 ;; Hardware stack levels used:    1
 32534 ;; Hardware stack levels required when called:   16
 32535 ;; This function calls:
 32536 ;;		_TMR6_SetInterruptHandler
 32537 ;; This function is called by:
 32538 ;;		_SYSTEM_Initialize
 32539 ;; This function uses a reentrant model
 32540 ;;
 32541                           
 32542                           	psect	text128
 32543  01C808                     __ptext128:
 32544                           	opt callstack 0
 32545  01C808                     _TMR6_Initialize:
 32546                           	opt callstack 13
 32547                           
 32548                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 32549                           
 32550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32551                           ;incstack = 0
 32552  01C808  0E01               	movlw	1
 32553  01C80A  6E96               	movwf	150,c	;volatile
 32554                           
 32555                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 32556  01C80C  6A95               	clrf	149,c	;volatile
 32557                           
 32558                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 32559  01C80E  6A97               	clrf	151,c	;volatile
 32560                           
 32561                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 32562  01C810  0E7C               	movlw	124
 32563  01C812  6E93               	movwf	147,c	;volatile
 32564                           
 32565                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 32566  01C814  6A92               	clrf	146,c	;volatile
 32567                           
 32568                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 32569  01C816  0139               	movlb	57	; () banked
 32570  01C818  91A9               	bcf	169,0,b	;volatile
 32571                           
 32572                           ; BSR set to: 57
 32573                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 32574  01C81A  8199               	bsf	153,0,b	;volatile
 32575                           
 32576                           ; BSR set to: 57
 32577                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 32578  01C81C  0EE8               	movlw	low _TMR6_DefaultInterruptHandler
 32579  01C81E  6EE6               	movwf	postinc1,c
 32580  01C820  0EBF               	movlw	high _TMR6_DefaultInterruptHandler
 32581  01C822  6EE6               	movwf	postinc1,c
 32582  01C824  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 32583  01C826  6EE6               	movwf	postinc1,c
 32584  01C828  EC7D  F0E4         	call	_TMR6_SetInterruptHandler	;wreg free
 32585                           
 32586                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 32587  01C82C  0EE0               	movlw	224
 32588  01C82E  6E94               	movwf	148,c	;volatile
 32589                           
 32590                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32591  01C830  0012               	return		;funcret
 32592  01C832                     __end_of_TMR6_Initialize:
 32593                           	opt callstack 0
 32594                           
 32595 ;; *************** function _TMR6_SetInterruptHandler *****************
 32596 ;; Defined at:
 32597 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 32598 ;; Parameters:    Size  Location     Type
 32599 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32600 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 32601 ;; Auto vars:     Size  Location     Type
 32602 ;;		None
 32603 ;; Return value:  Size  Location     Type
 32604 ;;                  1  [STACK] void 
 32605 ;; Registers used:
 32606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32607 ;; Tracked objects:
 32608 ;;		On entry : 3F/39
 32609 ;;		On exit  : 0/0
 32610 ;;		Unchanged: 0/0
 32611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32616 ;;Total ram usage:        0 bytes
 32617 ;; Hardware stack levels used:    1
 32618 ;; Hardware stack levels required when called:   15
 32619 ;; This function calls:
 32620 ;;		Nothing
 32621 ;; This function is called by:
 32622 ;;		_TMR6_Initialize
 32623 ;; This function uses a reentrant model
 32624 ;;
 32625                           
 32626                           	psect	text129
 32627  01C8FA                     __ptext129:
 32628                           	opt callstack 0
 32629  01C8FA                     _TMR6_SetInterruptHandler:
 32630                           	opt callstack 13
 32631                           
 32632                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 32633                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32634                           
 32635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32636                           ;incstack = 0
 32637  01C8FA  50E1               	movf	fsr1l,w,c
 32638  01C8FC  0FFD               	addlw	-3
 32639  01C8FE  6ED9               	movwf	fsr2l,c
 32640  01C900  50E2               	movf	fsr1h,w,c
 32641  01C902  6EDA               	movwf	fsr2h,c
 32642  01C904  0EFF               	movlw	255
 32643  01C906  22DA               	addwfc	fsr2h,f,c
 32644  01C908  006F FF78  F07E    	movff	postinc2,_TMR6_InterruptHandler
 32645  01C90E  006F FF78  F07F    	movff	postinc2,_TMR6_InterruptHandler+1
 32646  01C914  006F FF74  F080    	movff	postdec2,_TMR6_InterruptHandler+2
 32647                           
 32648                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32649  01C91A  52E5               	movf	postdec1,f,c
 32650  01C91C  52E5               	movf	postdec1,f,c
 32651  01C91E  52E5               	movf	postdec1,f,c
 32652  01C920  0012               	return		;funcret
 32653  01C922                     __end_of_TMR6_SetInterruptHandler:
 32654                           	opt callstack 0
 32655                           
 32656 ;; *************** function _TMR5_Initialize *****************
 32657 ;; Defined at:
 32658 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 32659 ;; Parameters:    Size  Location     Type
 32660 ;;		None
 32661 ;; Auto vars:     Size  Location     Type
 32662 ;;		None
 32663 ;; Return value:  Size  Location     Type
 32664 ;;                  1  [STACK] void 
 32665 ;; Registers used:
 32666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 32667 ;; Tracked objects:
 32668 ;;		On entry : 0/39
 32669 ;;		On exit  : 0/0
 32670 ;;		Unchanged: 0/0
 32671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32676 ;;Total ram usage:        0 bytes
 32677 ;; Hardware stack levels used:    1
 32678 ;; Hardware stack levels required when called:   16
 32679 ;; This function calls:
 32680 ;;		_TMR5_SetInterruptHandler
 32681 ;; This function is called by:
 32682 ;;		_SYSTEM_Initialize
 32683 ;; This function uses a reentrant model
 32684 ;;
 32685                           
 32686                           	psect	text130
 32687  01C15A                     __ptext130:
 32688                           	opt callstack 0
 32689  01C15A                     _TMR5_Initialize:
 32690                           	opt callstack 13
 32691                           
 32692                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 32693                           
 32694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32695                           ;incstack = 0
 32696  01C15A  6A9B               	clrf	155,c	;volatile
 32697                           
 32698                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 32699  01C15C  6A9C               	clrf	156,c	;volatile
 32700                           
 32701                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 32702  01C15E  0E01               	movlw	1
 32703  01C160  6E9D               	movwf	157,c	;volatile
 32704                           
 32705                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 32706  01C162  0E63               	movlw	99
 32707  01C164  6E99               	movwf	153,c	;volatile
 32708                           
 32709                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 32710  01C166  0EC0               	movlw	192
 32711  01C168  6E98               	movwf	152,c	;volatile
 32712                           
 32713                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 32714  01C16A  5098               	movf	152,w,c	;volatile
 32715  01C16C  006F FE64  F001    	movff	16281,btemp	;volatile
 32716  01C172  6A02               	clrf	(btemp+1)^0,c
 32717  01C174  0060  F004  F002   	movff	btemp,btemp+1
 32718  01C17A  6A01               	clrf	btemp^0,c
 32719  01C17C  1001               	iorwf	btemp^0,w,c
 32720  01C17E  0100               	movlb	0	; () banked
 32721  01C180  6F9E               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 32722  01C182  5002               	movf	(btemp+1)^0,w,c
 32723  01C184  6F9F               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 32724                           
 32725                           ; BSR set to: 0
 32726                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 32727  01C186  0139               	movlb	57	; () banked
 32728  01C188  9DA8               	bcf	168,6,b	;volatile
 32729                           
 32730                           ; BSR set to: 57
 32731                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 32732  01C18A  8D98               	bsf	152,6,b	;volatile
 32733                           
 32734                           ; BSR set to: 57
 32735                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 32736  01C18C  0E26               	movlw	low _TMR5_DefaultInterruptHandler
 32737  01C18E  6EE6               	movwf	postinc1,c
 32738  01C190  0EC5               	movlw	high _TMR5_DefaultInterruptHandler
 32739  01C192  6EE6               	movwf	postinc1,c
 32740  01C194  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 32741  01C196  6EE6               	movwf	postinc1,c
 32742  01C198  EC91  F0E4         	call	_TMR5_SetInterruptHandler	;wreg free
 32743                           
 32744                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 32745  01C19C  0E31               	movlw	49
 32746  01C19E  6E9A               	movwf	154,c	;volatile
 32747                           
 32748                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32749  01C1A0  0012               	return		;funcret
 32750  01C1A2                     __end_of_TMR5_Initialize:
 32751                           	opt callstack 0
 32752                           
 32753 ;; *************** function _TMR5_SetInterruptHandler *****************
 32754 ;; Defined at:
 32755 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 32756 ;; Parameters:    Size  Location     Type
 32757 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32758 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 32759 ;; Auto vars:     Size  Location     Type
 32760 ;;		None
 32761 ;; Return value:  Size  Location     Type
 32762 ;;                  1  [STACK] void 
 32763 ;; Registers used:
 32764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32765 ;; Tracked objects:
 32766 ;;		On entry : 3F/39
 32767 ;;		On exit  : 0/0
 32768 ;;		Unchanged: 0/0
 32769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32774 ;;Total ram usage:        0 bytes
 32775 ;; Hardware stack levels used:    1
 32776 ;; Hardware stack levels required when called:   15
 32777 ;; This function calls:
 32778 ;;		Nothing
 32779 ;; This function is called by:
 32780 ;;		_TMR5_Initialize
 32781 ;; This function uses a reentrant model
 32782 ;;
 32783                           
 32784                           	psect	text131
 32785  01C922                     __ptext131:
 32786                           	opt callstack 0
 32787  01C922                     _TMR5_SetInterruptHandler:
 32788                           	opt callstack 13
 32789                           
 32790                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 32791                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32792                           
 32793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32794                           ;incstack = 0
 32795  01C922  50E1               	movf	fsr1l,w,c
 32796  01C924  0FFD               	addlw	-3
 32797  01C926  6ED9               	movwf	fsr2l,c
 32798  01C928  50E2               	movf	fsr1h,w,c
 32799  01C92A  6EDA               	movwf	fsr2h,c
 32800  01C92C  0EFF               	movlw	255
 32801  01C92E  22DA               	addwfc	fsr2h,f,c
 32802  01C930  006F FF78  F07B    	movff	postinc2,_TMR5_InterruptHandler
 32803  01C936  006F FF78  F07C    	movff	postinc2,_TMR5_InterruptHandler+1
 32804  01C93C  006F FF74  F07D    	movff	postdec2,_TMR5_InterruptHandler+2
 32805                           
 32806                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32807  01C942  52E5               	movf	postdec1,f,c
 32808  01C944  52E5               	movf	postdec1,f,c
 32809  01C946  52E5               	movf	postdec1,f,c
 32810  01C948  0012               	return		;funcret
 32811  01C94A                     __end_of_TMR5_SetInterruptHandler:
 32812                           	opt callstack 0
 32813                           
 32814 ;; *************** function _TMR3_Initialize *****************
 32815 ;; Defined at:
 32816 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 32817 ;; Parameters:    Size  Location     Type
 32818 ;;		None
 32819 ;; Auto vars:     Size  Location     Type
 32820 ;;		None
 32821 ;; Return value:  Size  Location     Type
 32822 ;;                  1  [STACK] void 
 32823 ;; Registers used:
 32824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 32825 ;; Tracked objects:
 32826 ;;		On entry : 0/39
 32827 ;;		On exit  : 0/0
 32828 ;;		Unchanged: 0/0
 32829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32834 ;;Total ram usage:        0 bytes
 32835 ;; Hardware stack levels used:    1
 32836 ;; Hardware stack levels required when called:   16
 32837 ;; This function calls:
 32838 ;;		_TMR3_SetInterruptHandler
 32839 ;; This function is called by:
 32840 ;;		_SYSTEM_Initialize
 32841 ;; This function uses a reentrant model
 32842 ;;
 32843                           
 32844                           	psect	text132
 32845  01C1A2                     __ptext132:
 32846                           	opt callstack 0
 32847  01C1A2                     _TMR3_Initialize:
 32848                           	opt callstack 13
 32849                           
 32850                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 32851                           
 32852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32853                           ;incstack = 0
 32854  01C1A2  6AA7               	clrf	167,c	;volatile
 32855                           
 32856                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 32857  01C1A4  6AA8               	clrf	168,c	;volatile
 32858                           
 32859                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 32860  01C1A6  0E01               	movlw	1
 32861  01C1A8  6EA9               	movwf	169,c	;volatile
 32862                           
 32863                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 32864  01C1AA  0E3C               	movlw	60
 32865  01C1AC  6EA5               	movwf	165,c	;volatile
 32866                           
 32867                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 32868  01C1AE  0EB0               	movlw	176
 32869  01C1B0  6EA4               	movwf	164,c	;volatile
 32870                           
 32871                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 32872  01C1B2  50A4               	movf	164,w,c	;volatile
 32873  01C1B4  006F FE94  F001    	movff	16293,btemp	;volatile
 32874  01C1BA  6A02               	clrf	(btemp+1)^0,c
 32875  01C1BC  0060  F004  F002   	movff	btemp,btemp+1
 32876  01C1C2  6A01               	clrf	btemp^0,c
 32877  01C1C4  1001               	iorwf	btemp^0,w,c
 32878  01C1C6  0100               	movlb	0	; () banked
 32879  01C1C8  6F9A               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 32880  01C1CA  5002               	movf	(btemp+1)^0,w,c
 32881  01C1CC  6F9B               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 32882                           
 32883                           ; BSR set to: 0
 32884                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 32885  01C1CE  0139               	movlb	57	; () banked
 32886  01C1D0  9DA6               	bcf	166,6,b	;volatile
 32887                           
 32888                           ; BSR set to: 57
 32889                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 32890  01C1D2  8D96               	bsf	150,6,b	;volatile
 32891                           
 32892                           ; BSR set to: 57
 32893                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 32894  01C1D4  0E90               	movlw	low _TMR3_DefaultInterruptHandler
 32895  01C1D6  6EE6               	movwf	postinc1,c
 32896  01C1D8  0ECE               	movlw	high _TMR3_DefaultInterruptHandler
 32897  01C1DA  6EE6               	movwf	postinc1,c
 32898  01C1DC  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 32899  01C1DE  6EE6               	movwf	postinc1,c
 32900  01C1E0  ECA5  F0E4         	call	_TMR3_SetInterruptHandler	;wreg free
 32901                           
 32902                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 32903  01C1E4  0E31               	movlw	49
 32904  01C1E6  6EA6               	movwf	166,c	;volatile
 32905                           
 32906                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32907  01C1E8  0012               	return		;funcret
 32908  01C1EA                     __end_of_TMR3_Initialize:
 32909                           	opt callstack 0
 32910                           
 32911 ;; *************** function _TMR3_SetInterruptHandler *****************
 32912 ;; Defined at:
 32913 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 32914 ;; Parameters:    Size  Location     Type
 32915 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32916 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 32917 ;; Auto vars:     Size  Location     Type
 32918 ;;		None
 32919 ;; Return value:  Size  Location     Type
 32920 ;;                  1  [STACK] void 
 32921 ;; Registers used:
 32922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32923 ;; Tracked objects:
 32924 ;;		On entry : 0/0
 32925 ;;		On exit  : 0/0
 32926 ;;		Unchanged: 0/0
 32927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32932 ;;Total ram usage:        0 bytes
 32933 ;; Hardware stack levels used:    1
 32934 ;; Hardware stack levels required when called:   15
 32935 ;; This function calls:
 32936 ;;		Nothing
 32937 ;; This function is called by:
 32938 ;;		_TMR3_Initialize
 32939 ;;		_init_bsoc
 32940 ;; This function uses a reentrant model
 32941 ;;
 32942                           
 32943                           	psect	text133
 32944  01C94A                     __ptext133:
 32945                           	opt callstack 0
 32946  01C94A                     _TMR3_SetInterruptHandler:
 32947                           	opt callstack 14
 32948                           
 32949                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 32950                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32951                           
 32952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32953                           ;incstack = 0
 32954  01C94A  50E1               	movf	fsr1l,w,c
 32955  01C94C  0FFD               	addlw	-3
 32956  01C94E  6ED9               	movwf	fsr2l,c
 32957  01C950  50E2               	movf	fsr1h,w,c
 32958  01C952  6EDA               	movwf	fsr2h,c
 32959  01C954  0EFF               	movlw	255
 32960  01C956  22DA               	addwfc	fsr2h,f,c
 32961  01C958  006F FF78  F078    	movff	postinc2,_TMR3_InterruptHandler
 32962  01C95E  006F FF78  F079    	movff	postinc2,_TMR3_InterruptHandler+1
 32963  01C964  006F FF74  F07A    	movff	postdec2,_TMR3_InterruptHandler+2
 32964                           
 32965                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32966  01C96A  52E5               	movf	postdec1,f,c
 32967  01C96C  52E5               	movf	postdec1,f,c
 32968  01C96E  52E5               	movf	postdec1,f,c
 32969  01C970  0012               	return		;funcret
 32970  01C972                     __end_of_TMR3_SetInterruptHandler:
 32971                           	opt callstack 0
 32972                           
 32973 ;; *************** function _TMR2_Initialize *****************
 32974 ;; Defined at:
 32975 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 32976 ;; Parameters:    Size  Location     Type
 32977 ;;		None
 32978 ;; Auto vars:     Size  Location     Type
 32979 ;;		None
 32980 ;; Return value:  Size  Location     Type
 32981 ;;                  1  [STACK] void 
 32982 ;; Registers used:
 32983 ;;		wreg, status,2
 32984 ;; Tracked objects:
 32985 ;;		On entry : 3F/3F
 32986 ;;		On exit  : 3F/39
 32987 ;;		Unchanged: 0/0
 32988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32993 ;;Total ram usage:        0 bytes
 32994 ;; Hardware stack levels used:    1
 32995 ;; Hardware stack levels required when called:   15
 32996 ;; This function calls:
 32997 ;;		Nothing
 32998 ;; This function is called by:
 32999 ;;		_SYSTEM_Initialize
 33000 ;; This function uses a reentrant model
 33001 ;;
 33002                           
 33003                           	psect	text134
 33004  01CCEE                     __ptext134:
 33005                           	opt callstack 0
 33006  01CCEE                     _TMR2_Initialize:
 33007                           	opt callstack 14
 33008                           
 33009                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 33010                           
 33011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33012                           ;incstack = 0
 33013  01CCEE  0E01               	movlw	1
 33014  01CCF0  6EAE               	movwf	174,c	;volatile
 33015                           
 33016                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 33017  01CCF2  6AAD               	clrf	173,c	;volatile
 33018                           
 33019                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 33020  01CCF4  6AAF               	clrf	175,c	;volatile
 33021                           
 33022                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 33023  01CCF6  0E63               	movlw	99
 33024  01CCF8  6EAB               	movwf	171,c	;volatile
 33025                           
 33026                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 33027  01CCFA  6AAA               	clrf	170,c	;volatile
 33028                           
 33029                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 33030  01CCFC  0139               	movlb	57	; () banked
 33031  01CCFE  95A4               	bcf	164,2,b	;volatile
 33032                           
 33033                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 33034  01CD00  0EC0               	movlw	192
 33035  01CD02  6EAC               	movwf	172,c	;volatile
 33036                           
 33037                           ; BSR set to: 57
 33038                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33039  01CD04  0012               	return		;funcret
 33040  01CD06                     __end_of_TMR2_Initialize:
 33041                           	opt callstack 0
 33042                           
 33043 ;; *************** function _SPI1_Initialize *****************
 33044 ;; Defined at:
 33045 ;;		line 64 in file "mcc_generated_files/spi1.c"
 33046 ;; Parameters:    Size  Location     Type
 33047 ;;		None
 33048 ;; Auto vars:     Size  Location     Type
 33049 ;;		None
 33050 ;; Return value:  Size  Location     Type
 33051 ;;                  1  [STACK] void 
 33052 ;; Registers used:
 33053 ;;		wreg, status,2
 33054 ;; Tracked objects:
 33055 ;;		On entry : 3F/39
 33056 ;;		On exit  : 3F/3D
 33057 ;;		Unchanged: 0/0
 33058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33063 ;;Total ram usage:        0 bytes
 33064 ;; Hardware stack levels used:    1
 33065 ;; Hardware stack levels required when called:   15
 33066 ;; This function calls:
 33067 ;;		Nothing
 33068 ;; This function is called by:
 33069 ;;		_SYSTEM_Initialize
 33070 ;; This function uses a reentrant model
 33071 ;;
 33072                           
 33073                           	psect	text135
 33074  01CD1C                     __ptext135:
 33075                           	opt callstack 0
 33076  01CD1C                     _SPI1_Initialize:
 33077                           	opt callstack 14
 33078                           
 33079                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 33080                           
 33081                           ; BSR set to: 57
 33082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33083                           ;incstack = 0
 33084  01CD1C  0E40               	movlw	64
 33085  01CD1E  013D               	movlb	61	; () banked
 33086  01CD20  6F15               	movwf	21,b	;volatile
 33087                           
 33088                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 33089  01CD22  0E03               	movlw	3
 33090  01CD24  6F16               	movwf	22,b	;volatile
 33091                           
 33092                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 33093  01CD26  0E4F               	movlw	79
 33094  01CD28  6F19               	movwf	25,b	;volatile
 33095                           
 33096                           ; BSR set to: 61
 33097                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 33098  01CD2A  6B1C               	clrf	28,b	;volatile
 33099                           
 33100                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 33101  01CD2C  0E83               	movlw	131
 33102  01CD2E  6F14               	movwf	20,b	;volatile
 33103                           
 33104                           ; BSR set to: 61
 33105                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33106  01CD30  0012               	return		;funcret
 33107  01CD32                     __end_of_SPI1_Initialize:
 33108                           	opt callstack 0
 33109                           
 33110 ;; *************** function _PWM8_Initialize *****************
 33111 ;; Defined at:
 33112 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 33113 ;; Parameters:    Size  Location     Type
 33114 ;;		None
 33115 ;; Auto vars:     Size  Location     Type
 33116 ;;		None
 33117 ;; Return value:  Size  Location     Type
 33118 ;;                  1  [STACK] void 
 33119 ;; Registers used:
 33120 ;;		wreg, status,2
 33121 ;; Tracked objects:
 33122 ;;		On entry : 0/3E
 33123 ;;		On exit  : 3F/3F
 33124 ;;		Unchanged: 0/0
 33125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33130 ;;Total ram usage:        0 bytes
 33131 ;; Hardware stack levels used:    1
 33132 ;; Hardware stack levels required when called:   15
 33133 ;; This function calls:
 33134 ;;		Nothing
 33135 ;; This function is called by:
 33136 ;;		_SYSTEM_Initialize
 33137 ;; This function uses a reentrant model
 33138 ;;
 33139                           
 33140                           	psect	text136
 33141  01CD32                     __ptext136:
 33142                           	opt callstack 0
 33143  01CD32                     _PWM8_Initialize:
 33144                           	opt callstack 14
 33145                           
 33146                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 33147                           
 33148                           ; BSR set to: 61
 33149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33150                           ;incstack = 0
 33151  01CD32  0E80               	movlw	128
 33152  01CD34  6E62               	movwf	98,c	;volatile
 33153                           
 33154                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 33155  01CD36  6A61               	clrf	97,c	;volatile
 33156                           
 33157                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 33158  01CD38  0E40               	movlw	64
 33159  01CD3A  6E60               	movwf	96,c	;volatile
 33160                           
 33161                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 33162  01CD3C  013F               	movlb	63	; () banked
 33163  01CD3E  515F               	movf	95,w,b	;volatile
 33164  01CD40  0B3F               	andlw	-193
 33165  01CD42  0940               	iorlw	64
 33166  01CD44  6F5F               	movwf	95,b	;volatile
 33167                           
 33168                           ; BSR set to: 63
 33169                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33170  01CD46  0012               	return		;funcret
 33171  01CD48                     __end_of_PWM8_Initialize:
 33172                           	opt callstack 0
 33173                           
 33174 ;; *************** function _PMD_Initialize *****************
 33175 ;; Defined at:
 33176 ;;		line 90 in file "mcc_generated_files/mcc.c"
 33177 ;; Parameters:    Size  Location     Type
 33178 ;;		None
 33179 ;; Auto vars:     Size  Location     Type
 33180 ;;		None
 33181 ;; Return value:  Size  Location     Type
 33182 ;;                  1  [STACK] void 
 33183 ;; Registers used:
 33184 ;;		None
 33185 ;; Tracked objects:
 33186 ;;		On entry : 3F/39
 33187 ;;		On exit  : 3F/39
 33188 ;;		Unchanged: 0/0
 33189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33194 ;;Total ram usage:        0 bytes
 33195 ;; Hardware stack levels used:    1
 33196 ;; Hardware stack levels required when called:   15
 33197 ;; This function calls:
 33198 ;;		Nothing
 33199 ;; This function is called by:
 33200 ;;		_SYSTEM_Initialize
 33201 ;; This function uses a reentrant model
 33202 ;;
 33203                           
 33204                           	psect	text137
 33205  01CD5E                     __ptext137:
 33206                           	opt callstack 0
 33207  01CD5E                     _PMD_Initialize:
 33208                           	opt callstack 14
 33209                           
 33210                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 33211                           
 33212                           ; BSR set to: 63
 33213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33214                           ;incstack = 0
 33215  01CD5E  0139               	movlb	57	; () banked
 33216  01CD60  6BC0               	clrf	192,b	;volatile
 33217                           
 33218                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 33219  01CD62  6BC1               	clrf	193,b	;volatile
 33220                           
 33221                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 33222  01CD64  6BC2               	clrf	194,b	;volatile
 33223                           
 33224                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 33225  01CD66  6BC3               	clrf	195,b	;volatile
 33226                           
 33227                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 33228  01CD68  6BC4               	clrf	196,b	;volatile
 33229                           
 33230                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 33231  01CD6A  6BC5               	clrf	197,b	;volatile
 33232                           
 33233                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 33234  01CD6C  6BC6               	clrf	198,b	;volatile
 33235                           
 33236                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 33237  01CD6E  6BC7               	clrf	199,b	;volatile
 33238                           
 33239                           ; BSR set to: 57
 33240                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33241  01CD70  0012               	return		;funcret
 33242  01CD72                     __end_of_PMD_Initialize:
 33243                           	opt callstack 0
 33244                           
 33245 ;; *************** function _PIN_MANAGER_Initialize *****************
 33246 ;; Defined at:
 33247 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 33248 ;; Parameters:    Size  Location     Type
 33249 ;;		None
 33250 ;; Auto vars:     Size  Location     Type
 33251 ;;		None
 33252 ;; Return value:  Size  Location     Type
 33253 ;;                  1  [STACK] void 
 33254 ;; Registers used:
 33255 ;;		wreg, status,2
 33256 ;; Tracked objects:
 33257 ;;		On entry : 3F/39
 33258 ;;		On exit  : 3F/3A
 33259 ;;		Unchanged: 0/0
 33260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33265 ;;Total ram usage:        0 bytes
 33266 ;; Hardware stack levels used:    1
 33267 ;; Hardware stack levels required when called:   15
 33268 ;; This function calls:
 33269 ;;		Nothing
 33270 ;; This function is called by:
 33271 ;;		_SYSTEM_Initialize
 33272 ;; This function uses a reentrant model
 33273 ;;
 33274                           
 33275                           	psect	text138
 33276  01B5B8                     __ptext138:
 33277                           	opt callstack 0
 33278  01B5B8                     _PIN_MANAGER_Initialize:
 33279                           	opt callstack 14
 33280                           
 33281                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 33282                           
 33283                           ; BSR set to: 57
 33284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33285                           ;incstack = 0
 33286  01B5B8  0E07               	movlw	7
 33287  01B5BA  6EBE               	movwf	190,c	;volatile
 33288                           
 33289                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 33290  01B5BC  6ABD               	clrf	189,c	;volatile
 33291                           
 33292                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 33293  01B5BE  6ABA               	clrf	186,c	;volatile
 33294                           
 33295                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 33296  01B5C0  0E23               	movlw	35
 33297  01B5C2  6EBF               	movwf	191,c	;volatile
 33298                           
 33299                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 33300  01B5C4  6ABB               	clrf	187,c	;volatile
 33301                           
 33302                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 33303  01B5C6  0E07               	movlw	7
 33304  01B5C8  6EBC               	movwf	188,c	;volatile
 33305                           
 33306                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 33307  01B5CA  6AC6               	clrf	198,c	;volatile
 33308                           
 33309                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 33310  01B5CC  0E0C               	movlw	12
 33311  01B5CE  6EC7               	movwf	199,c	;volatile
 33312                           
 33313                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 33314  01B5D0  68C2               	setf	194,c	;volatile
 33315                           
 33316                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 33317  01B5D2  0EBF               	movlw	191
 33318  01B5D4  6EC3               	movwf	195,c	;volatile
 33319                           
 33320                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 33321  01B5D6  0E90               	movlw	144
 33322  01B5D8  6EC4               	movwf	196,c	;volatile
 33323                           
 33324                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 33325  01B5DA  0E0C               	movlw	12
 33326  01B5DC  6EC5               	movwf	197,c	;volatile
 33327                           
 33328                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 33329  01B5DE  013A               	movlb	58	; () banked
 33330  01B5E0  6B70               	clrf	112,b	;volatile
 33331                           
 33332                           ; BSR set to: 58
 33333                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 33334  01B5E2  6B60               	clrf	96,b	;volatile
 33335                           
 33336                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 33337  01B5E4  0E3C               	movlw	60
 33338  01B5E6  6F50               	movwf	80,b	;volatile
 33339                           
 33340                           ; BSR set to: 58
 33341                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 33342  01B5E8  6B80               	clrf	128,b	;volatile
 33343                           
 33344                           ; BSR set to: 58
 33345                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 33346  01B5EA  6B90               	clrf	144,b	;volatile
 33347                           
 33348                           ; BSR set to: 58
 33349                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 33350  01B5EC  6940               	setf	64,b	;volatile
 33351                           
 33352                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 33353  01B5EE  0E0C               	movlw	12
 33354  01B5F0  6F71               	movwf	113,b	;volatile
 33355                           
 33356                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 33357  01B5F2  0E0C               	movlw	12
 33358  01B5F4  6F91               	movwf	145,b	;volatile
 33359                           
 33360                           ; BSR set to: 58
 33361                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 33362  01B5F6  6B81               	clrf	129,b	;volatile
 33363                           
 33364                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 33365  01B5F8  0E83               	movlw	131
 33366  01B5FA  6F51               	movwf	81,b	;volatile
 33367                           
 33368                           ; BSR set to: 58
 33369                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 33370  01B5FC  6B41               	clrf	65,b	;volatile
 33371                           
 33372                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 33373  01B5FE  0E97               	movlw	151
 33374  01B600  6F61               	movwf	97,b	;volatile
 33375                           
 33376                           ; BSR set to: 58
 33377                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 33378  01B602  6B82               	clrf	130,b	;volatile
 33379                           
 33380                           ; BSR set to: 58
 33381                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 33382  01B604  6B92               	clrf	146,b	;volatile
 33383                           
 33384                           ; BSR set to: 58
 33385                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 33386  01B606  6B42               	clrf	66,b	;volatile
 33387                           
 33388                           ; BSR set to: 58
 33389                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 33390  01B608  6B52               	clrf	82,b	;volatile
 33391                           
 33392                           ; BSR set to: 58
 33393                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 33394  01B60A  6B62               	clrf	98,b	;volatile
 33395                           
 33396                           ; BSR set to: 58
 33397                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 33398  01B60C  6B72               	clrf	114,b	;volatile
 33399                           
 33400                           ; BSR set to: 58
 33401                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 33402  01B60E  6943               	setf	67,b	;volatile
 33403                           
 33404                           ; BSR set to: 58
 33405                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 33406  01B610  6953               	setf	83,b	;volatile
 33407                           
 33408                           ; BSR set to: 58
 33409                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 33410  01B612  6963               	setf	99,b	;volatile
 33411                           
 33412                           ; BSR set to: 58
 33413                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 33414  01B614  6973               	setf	115,b	;volatile
 33415                           
 33416                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 33417  01B616  0E07               	movlw	7
 33418  01B618  6F83               	movwf	131,b	;volatile
 33419                           
 33420                           ; BSR set to: 58
 33421                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 33422  01B61A  6993               	setf	147,b	;volatile
 33423                           
 33424                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 33425  01B61C  0E0F               	movlw	15
 33426  01B61E  6FE8               	movwf	232,b	;volatile
 33427                           
 33428                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 33429  01B620  0E13               	movlw	19
 33430  01B622  6FDE               	movwf	222,b	;volatile
 33431                           
 33432                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 33433  01B624  0E16               	movlw	22
 33434  01B626  6F0E               	movwf	14,b	;volatile
 33435                           
 33436                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 33437  01B628  0E1E               	movlw	30
 33438  01B62A  6F13               	movwf	19,b	;volatile
 33439                           
 33440                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 33441  01B62C  0E08               	movlw	8
 33442  01B62E  6FC0               	movwf	192,b	;volatile
 33443                           
 33444                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 33445  01B630  0E10               	movlw	16
 33446  01B632  6F19               	movwf	25,b	;volatile
 33447                           
 33448                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 33449  01B634  0E09               	movlw	9
 33450  01B636  6FC1               	movwf	193,b	;volatile
 33451                           
 33452                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 33453  01B638  0E1F               	movlw	31
 33454  01B63A  6F15               	movwf	21,b	;volatile
 33455                           
 33456                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 33457  01B63C  0E13               	movlw	19
 33458  01B63E  6F16               	movwf	22,b	;volatile
 33459                           
 33460                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 33461  01B640  0E17               	movlw	23
 33462  01B642  6FE5               	movwf	229,b	;volatile
 33463                           
 33464                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 33465  01B644  0E14               	movlw	20
 33466  01B646  6FDF               	movwf	223,b	;volatile
 33467                           
 33468                           ; BSR set to: 58
 33469                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 33470  01B648  0012               	return		;funcret
 33471  01B64A                     __end_of_PIN_MANAGER_Initialize:
 33472                           	opt callstack 0
 33473                           
 33474 ;; *************** function _OSCILLATOR_Initialize *****************
 33475 ;; Defined at:
 33476 ;;		line 72 in file "mcc_generated_files/mcc.c"
 33477 ;; Parameters:    Size  Location     Type
 33478 ;;		None
 33479 ;; Auto vars:     Size  Location     Type
 33480 ;;		None
 33481 ;; Return value:  Size  Location     Type
 33482 ;;                  1  [STACK] void 
 33483 ;; Registers used:
 33484 ;;		wreg, status,2
 33485 ;; Tracked objects:
 33486 ;;		On entry : 3F/3A
 33487 ;;		On exit  : 3F/39
 33488 ;;		Unchanged: 0/0
 33489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33494 ;;Total ram usage:        0 bytes
 33495 ;; Hardware stack levels used:    1
 33496 ;; Hardware stack levels required when called:   15
 33497 ;; This function calls:
 33498 ;;		Nothing
 33499 ;; This function is called by:
 33500 ;;		_SYSTEM_Initialize
 33501 ;; This function uses a reentrant model
 33502 ;;
 33503                           
 33504                           	psect	text139
 33505  01CD48                     __ptext139:
 33506                           	opt callstack 0
 33507  01CD48                     _OSCILLATOR_Initialize:
 33508                           	opt callstack 14
 33509                           
 33510                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 33511                           
 33512                           ; BSR set to: 58
 33513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33514                           ;incstack = 0
 33515  01CD48  0E20               	movlw	32
 33516  01CD4A  0139               	movlb	57	; () banked
 33517  01CD4C  6FD9               	movwf	217,b	;volatile
 33518                           
 33519                           ; BSR set to: 57
 33520                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 33521  01CD4E  6BDB               	clrf	219,b	;volatile
 33522                           
 33523                           ; BSR set to: 57
 33524                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 33525  01CD50  6BDD               	clrf	221,b	;volatile
 33526                           
 33527                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 33528  01CD52  0E02               	movlw	2
 33529  01CD54  6FDF               	movwf	223,b	;volatile
 33530                           
 33531                           ; BSR set to: 57
 33532                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 33533  01CD56  6BDE               	clrf	222,b	;volatile
 33534  01CD58                     l169:
 33535                           
 33536                           ; BSR set to: 57
 33537                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 33538  01CD58  B1DC               	btfsc	220,0,b	;volatile
 33539  01CD5A  0012               	return	
 33540  01CD5C  D7FD               	goto	l169
 33541  01CD5E                     __end_of_OSCILLATOR_Initialize:
 33542                           	opt callstack 0
 33543                           
 33544 ;; *************** function _INTERRUPT_Initialize *****************
 33545 ;; Defined at:
 33546 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 33547 ;; Parameters:    Size  Location     Type
 33548 ;;		None
 33549 ;; Auto vars:     Size  Location     Type
 33550 ;;  state           1  [STACK] _Bool 
 33551 ;; Return value:  Size  Location     Type
 33552 ;;                  1  [STACK] void 
 33553 ;; Registers used:
 33554 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 33555 ;; Tracked objects:
 33556 ;;		On entry : 0/0
 33557 ;;		On exit  : 3F/39
 33558 ;;		Unchanged: 0/0
 33559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33564 ;;Total ram usage:        0 bytes
 33565 ;; Hardware stack levels used:    1
 33566 ;; Hardware stack levels required when called:   15
 33567 ;; This function calls:
 33568 ;;		Nothing
 33569 ;; This function is called by:
 33570 ;;		_SYSTEM_Initialize
 33571 ;; This function uses a reentrant model
 33572 ;;
 33573                           
 33574                           	psect	text140
 33575  01BC48                     __ptext140:
 33576                           	opt callstack 0
 33577  01BC48                     _INTERRUPT_Initialize:
 33578                           	opt callstack 0
 33579                           
 33580                           ; BSR set to: 57
 33581                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33582  01BC48  52E6               	movf	postinc1,f,c
 33583                           
 33584                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 33585                           
 33586                           ;incstack = 0
 33587  01BC4A  8AD2               	bsf	210,5,c	;volatile
 33588                           
 33589                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 33590  01BC4C  AED2               	btfss	16338,7,c	;volatile
 33591  01BC4E  D003               	goto	u9800
 33592  01BC50  6A0C               	clrf	(btemp+11)^0,c
 33593  01BC52  2A0C               	incf	(btemp+11)^0,f,c
 33594  01BC54  D001               	goto	u9818
 33595  01BC56                     u9800:
 33596  01BC56  6A0C               	clrf	(btemp+11)^0,c
 33597  01BC58                     u9818:
 33598                           
 33599                           ;stkvar	_state @ sp[(-1)+0]
 33600  01BC58  0EFF               	movlw	-1
 33601  01BC5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 33602                           
 33603                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 33604  01BC60  9ED2               	bcf	16338,7,c	;volatile
 33605                           
 33606                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 33607  01BC62  0E55               	movlw	85
 33608  01BC64  6ED4               	movwf	212,c	;volatile
 33609                           
 33610                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 33611  01BC66  0EAA               	movlw	170
 33612  01BC68  6ED4               	movwf	212,c	;volatile
 33613                           
 33614                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 33615  01BC6A  90D4               	bcf	212,0,c	;volatile
 33616                           
 33617                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 33618  01BC6C  0138               	movlb	56	; () banked
 33619  01BC6E  6B9F               	clrf	159,b	;volatile
 33620                           
 33621                           ; BSR set to: 56
 33622                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 33623  01BC70  6B9E               	clrf	158,b	;volatile
 33624                           
 33625                           ; BSR set to: 56
 33626                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 33627  01BC72  0E08               	movlw	8
 33628  01BC74  6F9D               	movwf	157,b	;volatile
 33629                           
 33630                           ; BSR set to: 56
 33631                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 33632  01BC76  0E55               	movlw	85
 33633  01BC78  6ED4               	movwf	212,c	;volatile
 33634                           
 33635                           ; BSR set to: 56
 33636                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 33637  01BC7A  0EAA               	movlw	170
 33638  01BC7C  6ED4               	movwf	212,c	;volatile
 33639                           
 33640                           ; BSR set to: 56
 33641                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 33642  01BC7E  80D4               	bsf	212,0,c	;volatile
 33643                           
 33644                           ; BSR set to: 56
 33645                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 33646                           ;stkvar	_state @ sp[(-1)+0]
 33647  01BC80  0EFF               	movlw	-1
 33648  01BC82  B0E3               	btfsc	plusw1,0,c
 33649  01BC84  D002               	bra	u9825
 33650  01BC86  9ED2               	bcf	16338,7,c	;volatile
 33651  01BC88  D001               	bra	u9826
 33652  01BC8A                     u9825:
 33653  01BC8A  8ED2               	bsf	16338,7,c	;volatile
 33654  01BC8C                     u9826:
 33655                           
 33656                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 33657  01BC8C  0139               	movlb	57	; () banked
 33658  01BC8E  8782               	bsf	130,3,b	;volatile
 33659                           
 33660                           ; BSR set to: 57
 33661                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 33662  01BC90  8382               	bsf	130,1,b	;volatile
 33663                           
 33664                           ; BSR set to: 57
 33665                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 33666  01BC92  8182               	bsf	130,0,b	;volatile
 33667                           
 33668                           ; BSR set to: 57
 33669                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 33670  01BC94  8582               	bsf	130,2,b	;volatile
 33671                           
 33672                           ; BSR set to: 57
 33673                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 33674  01BC96  8786               	bsf	134,3,b	;volatile
 33675                           
 33676                           ; BSR set to: 57
 33677                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 33678  01BC98  8586               	bsf	134,2,b	;volatile
 33679                           
 33680                           ; BSR set to: 57
 33681                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 33682  01BC9A  8783               	bsf	131,3,b	;volatile
 33683                           
 33684                           ; BSR set to: 57
 33685                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 33686  01BC9C  8181               	bsf	129,0,b	;volatile
 33687                           
 33688                           ; BSR set to: 57
 33689                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 33690  01BC9E  9185               	bcf	133,0,b	;volatile
 33691                           
 33692                           ; BSR set to: 57
 33693                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 33694  01BCA0  8189               	bsf	137,0,b	;volatile
 33695                           
 33696                           ; BSR set to: 57
 33697                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 33698  01BCA2  9D88               	bcf	136,6,b	;volatile
 33699                           
 33700                           ; BSR set to: 57
 33701                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 33702  01BCA4  9D86               	bcf	134,6,b	;volatile
 33703                           
 33704                           ; BSR set to: 57
 33705                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 33706  01BCA6  8581               	bsf	129,2,b	;volatile
 33707                           
 33708                           ; BSR set to: 57
 33709                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 33710  01BCA8  8781               	bsf	129,3,b	;volatile
 33711                           
 33712                           ; BSR set to: 57
 33713                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33714  01BCAA  52E5               	movf	postdec1,f,c
 33715  01BCAC  0012               	return		;funcret
 33716  01BCAE                     __end_of_INTERRUPT_Initialize:
 33717                           	opt callstack 0
 33718                           
 33719 ;; *************** function _FVR_Initialize *****************
 33720 ;; Defined at:
 33721 ;;		line 58 in file "mcc_generated_files/fvr.c"
 33722 ;; Parameters:    Size  Location     Type
 33723 ;;		None
 33724 ;; Auto vars:     Size  Location     Type
 33725 ;;		None
 33726 ;; Return value:  Size  Location     Type
 33727 ;;                  1  [STACK] void 
 33728 ;; Registers used:
 33729 ;;		wreg, status,2
 33730 ;; Tracked objects:
 33731 ;;		On entry : 3F/39
 33732 ;;		On exit  : 3F/3E
 33733 ;;		Unchanged: 0/0
 33734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33739 ;;Total ram usage:        0 bytes
 33740 ;; Hardware stack levels used:    1
 33741 ;; Hardware stack levels required when called:   15
 33742 ;; This function calls:
 33743 ;;		Nothing
 33744 ;; This function is called by:
 33745 ;;		_SYSTEM_Initialize
 33746 ;; This function uses a reentrant model
 33747 ;;
 33748                           
 33749                           	psect	text141
 33750  01CE66                     __ptext141:
 33751                           	opt callstack 0
 33752  01CE66                     _FVR_Initialize:
 33753                           	opt callstack 14
 33754                           
 33755                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 33756                           
 33757                           ; BSR set to: 57
 33758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33759                           ;incstack = 0
 33760  01CE66  0EAF               	movlw	175
 33761  01CE68  013E               	movlb	62	; () banked
 33762  01CE6A  6FC1               	movwf	193,b	;volatile
 33763                           
 33764                           ; BSR set to: 62
 33765                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33766  01CE6C  0012               	return		;funcret
 33767  01CE6E                     __end_of_FVR_Initialize:
 33768                           	opt callstack 0
 33769                           
 33770 ;; *************** function _EXT_INT_Initialize *****************
 33771 ;; Defined at:
 33772 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 33773 ;; Parameters:    Size  Location     Type
 33774 ;;		None
 33775 ;; Auto vars:     Size  Location     Type
 33776 ;;		None
 33777 ;; Return value:  Size  Location     Type
 33778 ;;                  1  [STACK] void 
 33779 ;; Registers used:
 33780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33781 ;; Tracked objects:
 33782 ;;		On entry : 3F/39
 33783 ;;		On exit  : 3F/39
 33784 ;;		Unchanged: 0/0
 33785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33790 ;;Total ram usage:        0 bytes
 33791 ;; Hardware stack levels used:    1
 33792 ;; Hardware stack levels required when called:   16
 33793 ;; This function calls:
 33794 ;;		_INT0_SetInterruptHandler
 33795 ;;		_INT1_SetInterruptHandler
 33796 ;; This function is called by:
 33797 ;;		_SYSTEM_Initialize
 33798 ;; This function uses a reentrant model
 33799 ;;
 33800                           
 33801                           	psect	text142
 33802  01C630                     __ptext142:
 33803                           	opt callstack 0
 33804  01C630                     _EXT_INT_Initialize:
 33805                           	opt callstack 13
 33806                           
 33807                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 33808                           
 33809                           ; BSR set to: 62
 33810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33811                           ;incstack = 0
 33812  01C630  0139               	movlb	57	; () banked
 33813  01C632  91A1               	bcf	161,0,b	;volatile
 33814                           
 33815                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 33816  01C634  90D2               	bcf	210,0,c	;volatile
 33817                           
 33818                           ; BSR set to: 57
 33819                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 33820  01C636  0E92               	movlw	low _INT0_DefaultInterruptHandler
 33821  01C638  6EE6               	movwf	postinc1,c
 33822  01C63A  0ECE               	movlw	high _INT0_DefaultInterruptHandler
 33823  01C63C  6EE6               	movwf	postinc1,c
 33824  01C63E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 33825  01C640  6EE6               	movwf	postinc1,c
 33826  01C642  ECCD  F0E4         	call	_INT0_SetInterruptHandler	;wreg free
 33827                           
 33828                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 33829  01C646  0139               	movlb	57	; () banked
 33830  01C648  8191               	bsf	145,0,b	;volatile
 33831                           
 33832                           ; BSR set to: 57
 33833                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 33834  01C64A  91A5               	bcf	165,0,b	;volatile
 33835                           
 33836                           ; BSR set to: 57
 33837                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 33838  01C64C  92D2               	bcf	210,1,c	;volatile
 33839                           
 33840                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 33841  01C64E  0E8E               	movlw	low _INT1_DefaultInterruptHandler
 33842  01C650  6EE6               	movwf	postinc1,c
 33843  01C652  0ECE               	movlw	high _INT1_DefaultInterruptHandler
 33844  01C654  6EE6               	movwf	postinc1,c
 33845  01C656  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 33846  01C658  6EE6               	movwf	postinc1,c
 33847  01C65A  ECB9  F0E4         	call	_INT1_SetInterruptHandler	;wreg free
 33848                           
 33849                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 33850  01C65E  0139               	movlb	57	; () banked
 33851  01C660  8195               	bsf	149,0,b	;volatile
 33852                           
 33853                           ; BSR set to: 57
 33854                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33855  01C662  0012               	return		;funcret
 33856  01C664                     __end_of_EXT_INT_Initialize:
 33857                           	opt callstack 0
 33858                           
 33859 ;; *************** function _INT1_SetInterruptHandler *****************
 33860 ;; Defined at:
 33861 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 33862 ;; Parameters:    Size  Location     Type
 33863 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33864 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 33865 ;; Auto vars:     Size  Location     Type
 33866 ;;		None
 33867 ;; Return value:  Size  Location     Type
 33868 ;;                  1  [STACK] void 
 33869 ;; Registers used:
 33870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33871 ;; Tracked objects:
 33872 ;;		On entry : 3F/39
 33873 ;;		On exit  : 0/0
 33874 ;;		Unchanged: 0/0
 33875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33880 ;;Total ram usage:        0 bytes
 33881 ;; Hardware stack levels used:    1
 33882 ;; Hardware stack levels required when called:   15
 33883 ;; This function calls:
 33884 ;;		Nothing
 33885 ;; This function is called by:
 33886 ;;		_EXT_INT_Initialize
 33887 ;;		_start_switch_handler
 33888 ;; This function uses a reentrant model
 33889 ;;
 33890                           
 33891                           	psect	text143
 33892  01C972                     __ptext143:
 33893                           	opt callstack 0
 33894  01C972                     _INT1_SetInterruptHandler:
 33895                           	opt callstack 14
 33896                           
 33897                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 33898                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33899                           
 33900                           ; BSR set to: 57
 33901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33902                           ;incstack = 0
 33903  01C972  50E1               	movf	fsr1l,w,c
 33904  01C974  0FFD               	addlw	-3
 33905  01C976  6ED9               	movwf	fsr2l,c
 33906  01C978  50E2               	movf	fsr1h,w,c
 33907  01C97A  6EDA               	movwf	fsr2h,c
 33908  01C97C  0EFF               	movlw	255
 33909  01C97E  22DA               	addwfc	fsr2h,f,c
 33910  01C980  006F FF78  F090    	movff	postinc2,_INT1_InterruptHandler
 33911  01C986  006F FF78  F091    	movff	postinc2,_INT1_InterruptHandler+1
 33912  01C98C  006F FF74  F092    	movff	postdec2,_INT1_InterruptHandler+2
 33913                           
 33914                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33915  01C992  52E5               	movf	postdec1,f,c
 33916  01C994  52E5               	movf	postdec1,f,c
 33917  01C996  52E5               	movf	postdec1,f,c
 33918  01C998  0012               	return		;funcret
 33919  01C99A                     __end_of_INT1_SetInterruptHandler:
 33920                           	opt callstack 0
 33921                           
 33922 ;; *************** function _INT0_SetInterruptHandler *****************
 33923 ;; Defined at:
 33924 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 33925 ;; Parameters:    Size  Location     Type
 33926 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33927 ;;		 -> INT0_DefaultInterruptHandler(1), 
 33928 ;; Auto vars:     Size  Location     Type
 33929 ;;		None
 33930 ;; Return value:  Size  Location     Type
 33931 ;;                  1  [STACK] void 
 33932 ;; Registers used:
 33933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33934 ;; Tracked objects:
 33935 ;;		On entry : 3F/39
 33936 ;;		On exit  : 0/0
 33937 ;;		Unchanged: 0/0
 33938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33943 ;;Total ram usage:        0 bytes
 33944 ;; Hardware stack levels used:    1
 33945 ;; Hardware stack levels required when called:   15
 33946 ;; This function calls:
 33947 ;;		Nothing
 33948 ;; This function is called by:
 33949 ;;		_EXT_INT_Initialize
 33950 ;; This function uses a reentrant model
 33951 ;;
 33952                           
 33953                           	psect	text144
 33954  01C99A                     __ptext144:
 33955                           	opt callstack 0
 33956  01C99A                     _INT0_SetInterruptHandler:
 33957                           	opt callstack 13
 33958                           
 33959                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 33960                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33961                           
 33962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33963                           ;incstack = 0
 33964  01C99A  50E1               	movf	fsr1l,w,c
 33965  01C99C  0FFD               	addlw	-3
 33966  01C99E  6ED9               	movwf	fsr2l,c
 33967  01C9A0  50E2               	movf	fsr1h,w,c
 33968  01C9A2  6EDA               	movwf	fsr2h,c
 33969  01C9A4  0EFF               	movlw	255
 33970  01C9A6  22DA               	addwfc	fsr2h,f,c
 33971  01C9A8  006F FF78  F093    	movff	postinc2,_INT0_InterruptHandler
 33972  01C9AE  006F FF78  F094    	movff	postinc2,_INT0_InterruptHandler+1
 33973  01C9B4  006F FF74  F095    	movff	postdec2,_INT0_InterruptHandler+2
 33974                           
 33975                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33976  01C9BA  52E5               	movf	postdec1,f,c
 33977  01C9BC  52E5               	movf	postdec1,f,c
 33978  01C9BE  52E5               	movf	postdec1,f,c
 33979  01C9C0  0012               	return		;funcret
 33980  01C9C2                     __end_of_INT0_SetInterruptHandler:
 33981                           	opt callstack 0
 33982                           
 33983 ;; *************** function _DMA2_Initialize *****************
 33984 ;; Defined at:
 33985 ;;		line 61 in file "mcc_generated_files/dma2.c"
 33986 ;; Parameters:    Size  Location     Type
 33987 ;;		None
 33988 ;; Auto vars:     Size  Location     Type
 33989 ;;		None
 33990 ;; Return value:  Size  Location     Type
 33991 ;;                  1  [STACK] void 
 33992 ;; Registers used:
 33993 ;;		wreg, status,2
 33994 ;; Tracked objects:
 33995 ;;		On entry : 3F/3D
 33996 ;;		On exit  : 3F/3B
 33997 ;;		Unchanged: 0/0
 33998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34003 ;;Total ram usage:        0 bytes
 34004 ;; Hardware stack levels used:    1
 34005 ;; Hardware stack levels required when called:   15
 34006 ;; This function calls:
 34007 ;;		Nothing
 34008 ;; This function is called by:
 34009 ;;		_SYSTEM_Initialize
 34010 ;; This function uses a reentrant model
 34011 ;;
 34012                           
 34013                           	psect	text145
 34014  01BEEA                     __ptext145:
 34015                           	opt callstack 0
 34016  01BEEA                     _DMA2_Initialize:
 34017                           	opt callstack 14
 34018                           
 34019                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 34020                           
 34021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34022                           ;incstack = 0
 34023  01BEEA  0E00               	movlw	0
 34024  01BEEC  013B               	movlb	59	; () banked
 34025  01BEEE  6FD9               	movwf	217,b	;volatile
 34026  01BEF0  0E10               	movlw	16
 34027  01BEF2  6FDA               	movwf	218,b	;volatile
 34028  01BEF4  0E00               	movlw	0
 34029  01BEF6  6FDB               	movwf	219,b	;volatile
 34030                           
 34031                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 34032  01BEF8  0E3F               	movlw	63
 34033  01BEFA  6FD1               	movwf	209,b	;volatile
 34034  01BEFC  0EBB               	movlw	187
 34035  01BEFE  6FD0               	movwf	208,b	;volatile
 34036                           
 34037                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 34038  01BF00  0E03               	movlw	3
 34039  01BF02  6FDD               	movwf	221,b	;volatile
 34040                           
 34041                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 34042  01BF04  0E00               	movlw	0
 34043  01BF06  6FD8               	movwf	216,b	;volatile
 34044  01BF08  0E01               	movlw	1
 34045  01BF0A  6FD7               	movwf	215,b	;volatile
 34046                           
 34047                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 34048  01BF0C  0E00               	movlw	0
 34049  01BF0E  6FCF               	movwf	207,b	;volatile
 34050  01BF10  0E01               	movlw	1
 34051  01BF12  6FCE               	movwf	206,b	;volatile
 34052                           
 34053                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 34054  01BF14  0E1C               	movlw	28
 34055  01BF16  6FDF               	movwf	223,b	;volatile
 34056                           
 34057                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 34058  01BF18  0E3D               	movlw	61
 34059  01BF1A  6FDE               	movwf	222,b	;volatile
 34060                           
 34061                           ; BSR set to: 59
 34062                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 34063  01BF1C  0139               	movlb	57	; () banked
 34064  01BF1E  97A5               	bcf	165,3,b	;volatile
 34065                           
 34066                           ; BSR set to: 57
 34067                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 34068  01BF20  95A5               	bcf	165,2,b	;volatile
 34069                           
 34070                           ; BSR set to: 57
 34071                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 34072  01BF22  9BA5               	bcf	165,5,b	;volatile
 34073                           
 34074                           ; BSR set to: 57
 34075                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 34076  01BF24  99A5               	bcf	165,4,b	;volatile
 34077                           
 34078                           ; BSR set to: 57
 34079                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 34080  01BF26  9795               	bcf	149,3,b	;volatile
 34081                           
 34082                           ; BSR set to: 57
 34083                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 34084  01BF28  9595               	bcf	149,2,b	;volatile
 34085                           
 34086                           ; BSR set to: 57
 34087                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 34088  01BF2A  9B95               	bcf	149,5,b	;volatile
 34089                           
 34090                           ; BSR set to: 57
 34091                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 34092  01BF2C  9995               	bcf	149,4,b	;volatile
 34093  01BF2E  9ED2               	bcf	16338,7,c	;# 
 34094  01BF30  0139               	banksel	14831	;# 
 34095  01BF32  0E55               	movlw	85	;# 
 34096  01BF34  6FEF               	movwf	14831,b	;# 
 34097  01BF36  0EAA               	movlw	170	;# 
 34098  01BF38  6FEF               	movwf	14831,b	;# 
 34099  01BF3A  81EF               	bsf	14831,0,b	;# 
 34100  01BF3C  8ED2               	bsf	16338,7,c	;# 
 34101                           
 34102                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 34103  01BF3E  013B               	movlb	59	; () banked
 34104  01BF40  6BDC               	clrf	220,b	;volatile
 34105                           
 34106                           ; BSR set to: 59
 34107                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34108  01BF42  0012               	return		;funcret
 34109  01BF44                     __end_of_DMA2_Initialize:
 34110                           	opt callstack 0
 34111                           
 34112 ;; *************** function _DMA1_Initialize *****************
 34113 ;; Defined at:
 34114 ;;		line 86 in file "mcc_generated_files/dma1.c"
 34115 ;; Parameters:    Size  Location     Type
 34116 ;;		None
 34117 ;; Auto vars:     Size  Location     Type
 34118 ;;		None
 34119 ;; Return value:  Size  Location     Type
 34120 ;;                  1  [STACK] void 
 34121 ;; Registers used:
 34122 ;;		wreg, status,2
 34123 ;; Tracked objects:
 34124 ;;		On entry : 3F/3B
 34125 ;;		On exit  : 3F/3B
 34126 ;;		Unchanged: 0/0
 34127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34132 ;;Total ram usage:        0 bytes
 34133 ;; Hardware stack levels used:    1
 34134 ;; Hardware stack levels required when called:   15
 34135 ;; This function calls:
 34136 ;;		Nothing
 34137 ;; This function is called by:
 34138 ;;		_SYSTEM_Initialize
 34139 ;; This function uses a reentrant model
 34140 ;;
 34141                           
 34142                           	psect	text146
 34143  01BA3C                     __ptext146:
 34144                           	opt callstack 0
 34145  01BA3C                     _DMA1_Initialize:
 34146                           	opt callstack 14
 34147                           
 34148                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 34149                           
 34150                           ; BSR set to: 59
 34151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34152                           ;incstack = 0
 34153  01BA3C  0E00               	movlw	0
 34154  01BA3E  013B               	movlb	59	; () banked
 34155  01BA40  6FF9               	movwf	249,b	;volatile
 34156  01BA42  0E10               	movlw	16
 34157  01BA44  6FFA               	movwf	250,b	;volatile
 34158  01BA46  0E00               	movlw	0
 34159  01BA48  6FFB               	movwf	251,b	;volatile
 34160                           
 34161                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 34162  01BA4A  0E3D               	movlw	61
 34163  01BA4C  6FF1               	movwf	241,b	;volatile
 34164  01BA4E  0E11               	movlw	17
 34165  01BA50  6FF0               	movwf	240,b	;volatile
 34166                           
 34167                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 34168  01BA52  0E03               	movlw	3
 34169  01BA54  6FFD               	movwf	253,b	;volatile
 34170                           
 34171                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 34172  01BA56  0E00               	movlw	0
 34173  01BA58  6FF8               	movwf	248,b	;volatile
 34174  01BA5A  0E01               	movlw	1
 34175  01BA5C  6FF7               	movwf	247,b	;volatile
 34176                           
 34177                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 34178  01BA5E  0E00               	movlw	0
 34179  01BA60  6FEF               	movwf	239,b	;volatile
 34180  01BA62  0E01               	movlw	1
 34181  01BA64  6FEE               	movwf	238,b	;volatile
 34182                           
 34183                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 34184  01BA66  0E15               	movlw	21
 34185  01BA68  6FFF               	movwf	255,b	;volatile
 34186                           
 34187                           ; BSR set to: 59
 34188                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 34189  01BA6A  6BFE               	clrf	254,b	;volatile
 34190                           
 34191                           ; BSR set to: 59
 34192                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 34193  01BA6C  0139               	movlb	57	; () banked
 34194  01BA6E  93A2               	bcf	162,1,b	;volatile
 34195                           
 34196                           ; BSR set to: 57
 34197                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 34198  01BA70  91A2               	bcf	162,0,b	;volatile
 34199                           
 34200                           ; BSR set to: 57
 34201                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 34202  01BA72  97A2               	bcf	162,3,b	;volatile
 34203                           
 34204                           ; BSR set to: 57
 34205                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 34206  01BA74  95A2               	bcf	162,2,b	;volatile
 34207                           
 34208                           ; BSR set to: 57
 34209                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 34210  01BA76  8392               	bsf	146,1,b	;volatile
 34211                           
 34212                           ; BSR set to: 57
 34213                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 34214  01BA78  8192               	bsf	146,0,b	;volatile
 34215                           
 34216                           ; BSR set to: 57
 34217                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 34218  01BA7A  8792               	bsf	146,3,b	;volatile
 34219                           
 34220                           ; BSR set to: 57
 34221                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 34222  01BA7C  8592               	bsf	146,2,b	;volatile
 34223                           
 34224                           ; BSR set to: 57
 34225                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 34226  01BA7E  6BF1               	clrf	241,b	;volatile
 34227                           
 34228                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 34229  01BA80  0E01               	movlw	1
 34230  01BA82  6FF2               	movwf	242,b	;volatile
 34231                           
 34232                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 34233  01BA84  0E04               	movlw	4
 34234  01BA86  6FF3               	movwf	243,b	;volatile
 34235                           
 34236                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 34237  01BA88  0E02               	movlw	2
 34238  01BA8A  6FF4               	movwf	244,b	;volatile
 34239                           
 34240                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 34241  01BA8C  0E03               	movlw	3
 34242  01BA8E  6FF7               	movwf	247,b	;volatile
 34243  01BA90  9ED2               	bcf	16338,7,c	;# 
 34244  01BA92  0139               	banksel	14831	;# 
 34245  01BA94  0E55               	movlw	85	;# 
 34246  01BA96  6FEF               	movwf	14831,b	;# 
 34247  01BA98  0EAA               	movlw	170	;# 
 34248  01BA9A  6FEF               	movwf	14831,b	;# 
 34249  01BA9C  81EF               	bsf	14831,0,b	;# 
 34250  01BA9E  8ED2               	bsf	16338,7,c	;# 
 34251                           
 34252                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 34253  01BAA0  013B               	movlb	59	; () banked
 34254  01BAA2  6BFC               	clrf	252,b	;volatile
 34255                           
 34256                           ; BSR set to: 59
 34257                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34258  01BAA4  0012               	return		;funcret
 34259  01BAA6                     __end_of_DMA1_Initialize:
 34260                           	opt callstack 0
 34261                           
 34262 ;; *************** function _CLKREF_Initialize *****************
 34263 ;; Defined at:
 34264 ;;		line 58 in file "mcc_generated_files/clkref.c"
 34265 ;; Parameters:    Size  Location     Type
 34266 ;;		None
 34267 ;; Auto vars:     Size  Location     Type
 34268 ;;		None
 34269 ;; Return value:  Size  Location     Type
 34270 ;;                  1  [STACK] void 
 34271 ;; Registers used:
 34272 ;;		wreg, status,2
 34273 ;; Tracked objects:
 34274 ;;		On entry : 3F/3B
 34275 ;;		On exit  : 3F/3C
 34276 ;;		Unchanged: 0/0
 34277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34282 ;;Total ram usage:        0 bytes
 34283 ;; Hardware stack levels used:    1
 34284 ;; Hardware stack levels required when called:   15
 34285 ;; This function calls:
 34286 ;;		Nothing
 34287 ;; This function is called by:
 34288 ;;		_SYSTEM_Initialize
 34289 ;; This function uses a reentrant model
 34290 ;;
 34291                           
 34292                           	psect	text147
 34293  01CE0E                     __ptext147:
 34294                           	opt callstack 0
 34295  01CE0E                     _CLKREF_Initialize:
 34296                           	opt callstack 14
 34297                           
 34298                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 34299                           
 34300                           ; BSR set to: 59
 34301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34302                           ;incstack = 0
 34303  01CE0E  013C               	movlb	60	; () banked
 34304  01CE10  6BE6               	clrf	230,b	;volatile
 34305                           
 34306                           ; BSR set to: 60
 34307                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 34308  01CE12  0E94               	movlw	148
 34309  01CE14  6FE5               	movwf	229,b	;volatile
 34310                           
 34311                           ; BSR set to: 60
 34312                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34313  01CE16  0012               	return		;funcret
 34314  01CE18                     __end_of_CLKREF_Initialize:
 34315                           	opt callstack 0
 34316                           
 34317 ;; *************** function _ADCC_Initialize *****************
 34318 ;; Defined at:
 34319 ;;		line 65 in file "mcc_generated_files/adcc.c"
 34320 ;; Parameters:    Size  Location     Type
 34321 ;;		None
 34322 ;; Auto vars:     Size  Location     Type
 34323 ;;		None
 34324 ;; Return value:  Size  Location     Type
 34325 ;;                  1  [STACK] void 
 34326 ;; Registers used:
 34327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34328 ;; Tracked objects:
 34329 ;;		On entry : 3F/3E
 34330 ;;		On exit  : 0/0
 34331 ;;		Unchanged: 0/0
 34332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34337 ;;Total ram usage:        0 bytes
 34338 ;; Hardware stack levels used:    1
 34339 ;; Hardware stack levels required when called:   16
 34340 ;; This function calls:
 34341 ;;		_ADCC_SetADIInterruptHandler
 34342 ;;		_ADCC_SetADTIInterruptHandler
 34343 ;; This function is called by:
 34344 ;;		_SYSTEM_Initialize
 34345 ;; This function uses a reentrant model
 34346 ;;
 34347                           
 34348                           	psect	text148
 34349  01BAA6                     __ptext148:
 34350                           	opt callstack 0
 34351  01BAA6                     _ADCC_Initialize:
 34352                           	opt callstack 13
 34353                           
 34354                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 34355                           
 34356                           ; BSR set to: 60
 34357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34358                           ;incstack = 0
 34359  01BAA6  013E               	movlb	62	; () banked
 34360  01BAA8  6BDE               	clrf	222,b	;volatile
 34361                           
 34362                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 34363  01BAAA  6BDF               	clrf	223,b	;volatile
 34364                           
 34365                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 34366  01BAAC  6BE0               	clrf	224,b	;volatile
 34367                           
 34368                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 34369  01BAAE  6BE1               	clrf	225,b	;volatile
 34370                           
 34371                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 34372  01BAB0  6BE4               	clrf	228,b	;volatile
 34373                           
 34374                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 34375  01BAB2  6BE5               	clrf	229,b	;volatile
 34376                           
 34377                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 34378  01BAB4  6BEA               	clrf	234,b	;volatile
 34379                           
 34380                           ; BSR set to: 62
 34381                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 34382  01BAB6  0E40               	movlw	64
 34383  01BAB8  6FEC               	movwf	236,b	;volatile
 34384                           
 34385                           ; BSR set to: 62
 34386                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 34387  01BABA  6BF1               	clrf	241,b	;volatile
 34388                           
 34389                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 34390  01BABC  0E20               	movlw	32
 34391  01BABE  6FF3               	movwf	243,b	;volatile
 34392                           
 34393                           ; BSR set to: 62
 34394                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 34395  01BAC0  6BF4               	clrf	244,b	;volatile
 34396                           
 34397                           ; BSR set to: 62
 34398                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 34399  01BAC2  6BF5               	clrf	245,b	;volatile
 34400                           
 34401                           ; BSR set to: 62
 34402                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 34403  01BAC4  6BF6               	clrf	246,b	;volatile
 34404                           
 34405                           ; BSR set to: 62
 34406                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 34407  01BAC6  6BF7               	clrf	247,b	;volatile
 34408                           
 34409                           ; BSR set to: 62
 34410                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 34411  01BAC8  6BF9               	clrf	249,b	;volatile
 34412                           
 34413                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 34414  01BACA  0E5B               	movlw	91
 34415  01BACC  6FFA               	movwf	250,b	;volatile
 34416                           
 34417                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 34418  01BACE  0E27               	movlw	39
 34419  01BAD0  6FFB               	movwf	251,b	;volatile
 34420                           
 34421                           ; BSR set to: 62
 34422                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 34423  01BAD2  6BFC               	clrf	252,b	;volatile
 34424                           
 34425                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 34426  01BAD4  0E02               	movlw	2
 34427  01BAD6  6FFD               	movwf	253,b	;volatile
 34428                           
 34429                           ; BSR set to: 62
 34430                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 34431  01BAD8  6BFE               	clrf	254,b	;volatile
 34432                           
 34433                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 34434  01BADA  0E07               	movlw	7
 34435  01BADC  6FFF               	movwf	255,b	;volatile
 34436                           
 34437                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 34438  01BADE  0E84               	movlw	132
 34439  01BAE0  6FF8               	movwf	248,b	;volatile
 34440                           
 34441                           ; BSR set to: 62
 34442                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 34443  01BAE2  0139               	movlb	57	; () banked
 34444  01BAE4  95A1               	bcf	161,2,b	;volatile
 34445                           
 34446                           ; BSR set to: 57
 34447                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 34448  01BAE6  8591               	bsf	145,2,b	;volatile
 34449                           
 34450                           ; BSR set to: 57
 34451                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 34452  01BAE8  0E94               	movlw	low _ADCC_DefaultInterruptHandler
 34453  01BAEA  6EE6               	movwf	postinc1,c
 34454  01BAEC  0ECE               	movlw	high _ADCC_DefaultInterruptHandler
 34455  01BAEE  6EE6               	movwf	postinc1,c
 34456  01BAF0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 34457  01BAF2  6EE6               	movwf	postinc1,c
 34458  01BAF4  ECF5  F0E4         	call	_ADCC_SetADIInterruptHandler	;wreg free
 34459                           
 34460                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 34461  01BAF8  0139               	movlb	57	; () banked
 34462  01BAFA  97A1               	bcf	161,3,b	;volatile
 34463                           
 34464                           ; BSR set to: 57
 34465                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 34466  01BAFC  8791               	bsf	145,3,b	;volatile
 34467                           
 34468                           ; BSR set to: 57
 34469                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 34470  01BAFE  0E94               	movlw	low _ADCC_DefaultInterruptHandler
 34471  01BB00  6EE6               	movwf	postinc1,c
 34472  01BB02  0ECE               	movlw	high _ADCC_DefaultInterruptHandler
 34473  01BB04  6EE6               	movwf	postinc1,c
 34474  01BB06  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 34475  01BB08  6EE6               	movwf	postinc1,c
 34476  01BB0A  ECE1  F0E4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 34477                           
 34478                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34479  01BB0E  0012               	return		;funcret
 34480  01BB10                     __end_of_ADCC_Initialize:
 34481                           	opt callstack 0
 34482                           
 34483 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 34484 ;; Defined at:
 34485 ;;		line 336 in file "mcc_generated_files/adcc.c"
 34486 ;; Parameters:    Size  Location     Type
 34487 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34488 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 34489 ;; Auto vars:     Size  Location     Type
 34490 ;;		None
 34491 ;; Return value:  Size  Location     Type
 34492 ;;                  1  [STACK] void 
 34493 ;; Registers used:
 34494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34495 ;; Tracked objects:
 34496 ;;		On entry : 0/0
 34497 ;;		On exit  : 0/0
 34498 ;;		Unchanged: 0/0
 34499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34504 ;;Total ram usage:        0 bytes
 34505 ;; Hardware stack levels used:    1
 34506 ;; Hardware stack levels required when called:   15
 34507 ;; This function calls:
 34508 ;;		Nothing
 34509 ;; This function is called by:
 34510 ;;		_ADCC_Initialize
 34511 ;;		_start_adc_scan
 34512 ;; This function uses a reentrant model
 34513 ;;
 34514                           
 34515                           	psect	text149
 34516  01C9C2                     __ptext149:
 34517                           	opt callstack 0
 34518  01C9C2                     _ADCC_SetADTIInterruptHandler:
 34519                           	opt callstack 14
 34520                           
 34521                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 34522                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34523                           
 34524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34525                           ;incstack = 0
 34526  01C9C2  50E1               	movf	fsr1l,w,c
 34527  01C9C4  0FFD               	addlw	-3
 34528  01C9C6  6ED9               	movwf	fsr2l,c
 34529  01C9C8  50E2               	movf	fsr1h,w,c
 34530  01C9CA  6EDA               	movwf	fsr2h,c
 34531  01C9CC  0EFF               	movlw	255
 34532  01C9CE  22DA               	addwfc	fsr2h,f,c
 34533  01C9D0  006F FF78  F081    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 34534  01C9D6  006F FF78  F082    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 34535  01C9DC  006F FF74  F083    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 34536                           
 34537                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 34538  01C9E2  52E5               	movf	postdec1,f,c
 34539  01C9E4  52E5               	movf	postdec1,f,c
 34540  01C9E6  52E5               	movf	postdec1,f,c
 34541  01C9E8  0012               	return		;funcret
 34542  01C9EA                     __end_of_ADCC_SetADTIInterruptHandler:
 34543                           	opt callstack 0
 34544                           
 34545 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 34546 ;; Defined at:
 34547 ;;		line 323 in file "mcc_generated_files/adcc.c"
 34548 ;; Parameters:    Size  Location     Type
 34549 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34550 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 34551 ;; Auto vars:     Size  Location     Type
 34552 ;;		None
 34553 ;; Return value:  Size  Location     Type
 34554 ;;                  1  [STACK] void 
 34555 ;; Registers used:
 34556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34557 ;; Tracked objects:
 34558 ;;		On entry : 6/0
 34559 ;;		On exit  : 0/0
 34560 ;;		Unchanged: 0/0
 34561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34566 ;;Total ram usage:        0 bytes
 34567 ;; Hardware stack levels used:    1
 34568 ;; Hardware stack levels required when called:   15
 34569 ;; This function calls:
 34570 ;;		Nothing
 34571 ;; This function is called by:
 34572 ;;		_ADCC_Initialize
 34573 ;;		_start_adc_scan
 34574 ;; This function uses a reentrant model
 34575 ;;
 34576                           
 34577                           	psect	text150
 34578  01C9EA                     __ptext150:
 34579                           	opt callstack 0
 34580  01C9EA                     _ADCC_SetADIInterruptHandler:
 34581                           	opt callstack 14
 34582                           
 34583                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 34584                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34585                           
 34586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34587                           ;incstack = 0
 34588  01C9EA  50E1               	movf	fsr1l,w,c
 34589  01C9EC  0FFD               	addlw	-3
 34590  01C9EE  6ED9               	movwf	fsr2l,c
 34591  01C9F0  50E2               	movf	fsr1h,w,c
 34592  01C9F2  6EDA               	movwf	fsr2h,c
 34593  01C9F4  0EFF               	movlw	255
 34594  01C9F6  22DA               	addwfc	fsr2h,f,c
 34595  01C9F8  006F FF78  F084    	movff	postinc2,_ADCC_ADI_InterruptHandler
 34596  01C9FE  006F FF78  F085    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 34597  01CA04  006F FF74  F086    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 34598                           
 34599                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34600  01CA0A  52E5               	movf	postdec1,f,c
 34601  01CA0C  52E5               	movf	postdec1,f,c
 34602  01CA0E  52E5               	movf	postdec1,f,c
 34603  01CA10  0012               	return		;funcret
 34604  01CA12                     __end_of_ADCC_SetADIInterruptHandler:
 34605                           	opt callstack 0
 34606                           
 34607 ;; *************** function _INT1_ISR *****************
 34608 ;; Defined at:
 34609 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 34610 ;; Parameters:    Size  Location     Type
 34611 ;;		None
 34612 ;; Auto vars:     Size  Location     Type
 34613 ;;		None
 34614 ;; Return value:  Size  Location     Type
 34615 ;;                  1    wreg      void 
 34616 ;; Registers used:
 34617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 34618 ;; Tracked objects:
 34619 ;;		On entry : 0/0
 34620 ;;		On exit  : 0/0
 34621 ;;		Unchanged: 0/0
 34622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34625 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34627 ;;Total ram usage:        4 bytes
 34628 ;; Hardware stack levels used:    1
 34629 ;; Hardware stack levels required when called:    5
 34630 ;; This function calls:
 34631 ;;		_INT1_CallBack
 34632 ;; This function is called by:
 34633 ;;		Interrupt level 1
 34634 ;; This function uses a non-reentrant model
 34635 ;;
 34636                           
 34637                           	psect	text151
 34638  01C43C                     __ptext151:
 34639                           	opt callstack 0
 34640  01C43C                     _INT1_ISR:
 34641                           	opt callstack 11
 34642                           
 34643                           ;incstack = 0
 34644  01C43C  006F FF60  F027    	movff	status,??_INT1_ISR
 34645  01C442  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 34646  01C448  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 34647  01C44E  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 34648  01C454  EE16  F0AF         	lfsr	1,___intlo_sp
 34649                           
 34650                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 34651  01C458  0139               	movlb	57	; () banked
 34652  01C45A  91A5               	bcf	165,0,b	;volatile
 34653                           
 34654                           ; BSR set to: 57
 34655                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 34656  01C45C  EC58  F0E5         	call	_INT1_CallBack	;wreg free
 34657  01C460  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 34658  01C466  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 34659  01C46C  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 34660  01C472  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 34661  01C478  0011               	retfie		f
 34662  01C47A                     __end_of_INT1_ISR:
 34663                           	opt callstack 0
 34664                           
 34665 ;; *************** function _INT1_CallBack *****************
 34666 ;; Defined at:
 34667 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 34668 ;; Parameters:    Size  Location     Type
 34669 ;;		None
 34670 ;; Auto vars:     Size  Location     Type
 34671 ;;		None
 34672 ;; Return value:  Size  Location     Type
 34673 ;;                  1  [STACK] void 
 34674 ;; Registers used:
 34675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 34676 ;; Tracked objects:
 34677 ;;		On entry : 3F/39
 34678 ;;		On exit  : 0/0
 34679 ;;		Unchanged: 0/0
 34680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34685 ;;Total ram usage:        0 bytes
 34686 ;; Hardware stack levels used:    1
 34687 ;; Hardware stack levels required when called:    4
 34688 ;; This function calls:
 34689 ;;		Absolute function
 34690 ;;		_INT1_DefaultInterruptHandler
 34691 ;;		_switch_handler
 34692 ;; This function is called by:
 34693 ;;		_INT1_ISR
 34694 ;; This function uses a reentrant model
 34695 ;;
 34696                           
 34697                           	psect	text152
 34698  01CAB0                     __ptext152:
 34699                           	opt callstack 0
 34700  01CAB0                     _INT1_CallBack:
 34701                           	opt callstack 11
 34702                           
 34703                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 34704                           
 34705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34706                           ;incstack = 0
 34707  01CAB0  0100               	movlb	0	; () banked
 34708  01CAB2  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 34709  01CAB4  1191               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 34710  01CAB6  1192               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 34711  01CAB8  B4D8               	btfsc	status,2,c
 34712  01CABA  0012               	return	
 34713                           
 34714                           ; BSR set to: 0
 34715                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 34716  01CABC  D801               	call	u1050_28
 34717  01CABE  0012               	return	
 34718  01CAC0                     u1050_28:
 34719  01CAC0  0005               	push	
 34720  01CAC2  6EFA               	movwf	pclath,c
 34721  01CAC4  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 34722  01CAC6  6EFD               	movwf	tosl,c
 34723  01CAC8  5191               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 34724  01CACA  6EFE               	movwf	tosh,c
 34725  01CACC  5192               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 34726  01CACE  6EFF               	movwf	tosu,c
 34727  01CAD0  50FA               	movf	pclath,w,c
 34728  01CAD2  0012               	return		;indir
 34729  01CAD4                     __end_of_INT1_CallBack:
 34730                           	opt callstack 0
 34731                           
 34732 ;; *************** function _INT1_DefaultInterruptHandler *****************
 34733 ;; Defined at:
 34734 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 34735 ;; Parameters:    Size  Location     Type
 34736 ;;		None
 34737 ;; Auto vars:     Size  Location     Type
 34738 ;;		None
 34739 ;; Return value:  Size  Location     Type
 34740 ;;                  1  [STACK] void 
 34741 ;; Registers used:
 34742 ;;		None
 34743 ;; Tracked objects:
 34744 ;;		On entry : 3F/0
 34745 ;;		On exit  : 0/0
 34746 ;;		Unchanged: 0/0
 34747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34752 ;;Total ram usage:        0 bytes
 34753 ;; Hardware stack levels used:    1
 34754 ;; Hardware stack levels required when called:    3
 34755 ;; This function calls:
 34756 ;;		Nothing
 34757 ;; This function is called by:
 34758 ;;		_EXT_INT_Initialize
 34759 ;;		_INT1_CallBack
 34760 ;; This function uses a reentrant model
 34761 ;;
 34762                           
 34763                           	psect	text153
 34764  01CE8E                     __ptext153:
 34765                           	opt callstack 0
 34766  01CE8E                     _INT1_DefaultInterruptHandler:
 34767                           	opt callstack 11
 34768                           
 34769                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34770                           
 34771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34772                           ;incstack = 0
 34773  01CE8E  0012               	return		;funcret
 34774  01CE90                     __end_of_INT1_DefaultInterruptHandler:
 34775                           	opt callstack 0
 34776                           
 34777 ;; *************** function _switch_handler *****************
 34778 ;; Defined at:
 34779 ;;		line 58 in file "dio.c"
 34780 ;; Parameters:    Size  Location     Type
 34781 ;;		None
 34782 ;; Auto vars:     Size  Location     Type
 34783 ;;  i               1  [STACK] unsigned char 
 34784 ;;  sw_value        1  [STACK] unsigned char 
 34785 ;; Return value:  Size  Location     Type
 34786 ;;                  1  [STACK] void 
 34787 ;; Registers used:
 34788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 34789 ;; Tracked objects:
 34790 ;;		On entry : 3F/0
 34791 ;;		On exit  : 0/0
 34792 ;;		Unchanged: 0/0
 34793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34798 ;;Total ram usage:        0 bytes
 34799 ;; Hardware stack levels used:    1
 34800 ;; Hardware stack levels required when called:    3
 34801 ;; This function calls:
 34802 ;;		Nothing
 34803 ;; This function is called by:
 34804 ;;		_start_switch_handler
 34805 ;;		_INT1_CallBack
 34806 ;; This function uses a reentrant model
 34807 ;;
 34808                           
 34809                           	psect	text154
 34810  019A7C                     __ptext154:
 34811                           	opt callstack 0
 34812  019A7C                     _switch_handler:
 34813                           	opt callstack 0
 34814                           
 34815                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34816  019A7C  52E6               	movf	postinc1,f,c
 34817  019A7E  52E6               	movf	postinc1,f,c
 34818                           
 34819                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 34820                           ;stkvar	_i @ sp[(-2)+0]
 34821                           
 34822                           ;incstack = 0
 34823  019A80  0EFE               	movlw	-2
 34824  019A82  6AE3               	clrf	plusw1,c
 34825  019A84  9ABF               	bcf	191,5,c	;volatile
 34826                           
 34827                           ;dio.c: 72:  __nop();
 34828  019A86  F000               	nop	
 34829                           
 34830                           ;dio.c: 73:  __nop();
 34831  019A88  F000               	nop	
 34832                           
 34833                           ;dio.c: 74:  __nop();
 34834  019A8A  F000               	nop	
 34835                           
 34836                           ;dio.c: 75:  __nop();
 34837  019A8C  F000               	nop	
 34838                           
 34839                           ;dio.c: 76:  __nop();
 34840  019A8E  F000               	nop	
 34841                           
 34842                           ;dio.c: 77:  __nop();
 34843  019A90  F000               	nop	
 34844  019A92  D016               	goto	l11178
 34845  019A94                     l11164:
 34846                           
 34847                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 34848  019A94  A6CF               	btfss	207,3,c	;volatile
 34849  019A96  D00E               	goto	u1016_20
 34850  019A98  D00A               	goto	u1016_21
 34851  019A9A                     u1014_28:
 34852                           
 34853                           ;stkvar	_sw_value @ sp[(-2)+1]
 34854  019A9A  0EFF               	movlw	-1
 34855  019A9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 34856                           
 34857                           ;dio.c: 83:    break;
 34858  019AA2  D027               	goto	l11180
 34859  019AA4                     l11166:
 34860                           
 34861                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 34862  019AA4  A4CF               	btfss	207,2,c	;volatile
 34863  019AA6  D006               	goto	u1016_20
 34864  019AA8  D002               	goto	u1016_21
 34865  019AAA                     l11168:
 34866                           
 34867                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 34868  019AAA  A6CD               	btfss	205,3,c	;volatile
 34869  019AAC  D003               	goto	u1016_20
 34870  019AAE                     u1016_21:
 34871  019AAE  6A0C               	clrf	(btemp+11)^0,c
 34872  019AB0  2A0C               	incf	(btemp+11)^0,f,c
 34873  019AB2  D7F3               	goto	u1014_28
 34874  019AB4                     u1016_20:
 34875  019AB4  6A0C               	clrf	(btemp+11)^0,c
 34876  019AB6  D7F1               	goto	u1014_28
 34877  019AB8                     l11170:
 34878                           
 34879                           ;dio.c: 91:    sw_value = 1;
 34880                           ;stkvar	_sw_value @ sp[(-2)+1]
 34881  019AB8  0EFF               	movlw	-1
 34882  019ABA  6AE3               	clrf	plusw1,c
 34883  019ABC  2AE3               	incf	plusw1,f,c
 34884                           
 34885                           ;dio.c: 92:    break;
 34886  019ABE  D019               	goto	l11180
 34887  019AC0                     l11178:
 34888                           
 34889                           ;stkvar	_i @ sp[(-2)+0]
 34890  019AC0  0EFE               	movlw	-2
 34891  019AC2  50E3               	movf	plusw1,w,c
 34892  019AC4  6E0B               	movwf	(btemp+10)^0,c
 34893  019AC6  6A0C               	clrf	(btemp+11)^0,c
 34894                           
 34895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34896                           ; Switch size 1, requested type "simple"
 34897                           ; Number of cases is 1, Range of values is 0 to 0
 34898                           ; switch strategies available:
 34899                           ; Name         Instructions Cycles
 34900                           ; simple_byte            4     3 (average)
 34901                           ;	Chosen strategy is simple_byte
 34902  019AC8  500C               	movf	(btemp+11)^0,w,c
 34903  019ACA  0A00               	xorlw	0	; case 0
 34904  019ACC  A4D8               	btfss	status,2,c
 34905  019ACE  D7F4               	goto	l11170
 34906                           
 34907                           ; Switch size 1, requested type "simple"
 34908                           ; Number of cases is 5, Range of values is 0 to 4
 34909                           ; switch strategies available:
 34910                           ; Name         Instructions Cycles
 34911                           ; simple_byte           16     9 (average)
 34912                           ;	Chosen strategy is simple_byte
 34913  019AD0  500B               	movf	(btemp+10)^0,w,c
 34914  019AD2  0A00               	xorlw	0	; case 0
 34915  019AD4  B4D8               	btfsc	status,2,c
 34916  019AD6  D7F0               	goto	l11170
 34917  019AD8  0A01               	xorlw	1	; case 1
 34918  019ADA  B4D8               	btfsc	status,2,c
 34919  019ADC  D7ED               	goto	l11170
 34920  019ADE  0A03               	xorlw	3	; case 2
 34921  019AE0  B4D8               	btfsc	status,2,c
 34922  019AE2  D7E0               	goto	l11166
 34923  019AE4  0A01               	xorlw	1	; case 3
 34924  019AE6  B4D8               	btfsc	status,2,c
 34925  019AE8  D7D5               	goto	l11164
 34926  019AEA  0A07               	xorlw	7	; case 4
 34927  019AEC  B4D8               	btfsc	status,2,c
 34928  019AEE  D7DD               	goto	l11168
 34929  019AF0  D7E3               	goto	l11170
 34930  019AF2                     l11180:
 34931                           
 34932                           ;dio.c: 102:   if (sw_value) {
 34933                           ;stkvar	_sw_value @ sp[(-2)+1]
 34934  019AF2  0EFF               	movlw	-1
 34935  019AF4  50E3               	movf	plusw1,w,c
 34936  019AF6  B4D8               	btfsc	status,2,c
 34937  019AF8  D018               	goto	l11186
 34938                           
 34939                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 34940                           ;stkvar	_i @ sp[(-2)+0]
 34941  019AFA  0EFE               	movlw	-2
 34942  019AFC  50E3               	movf	plusw1,w,c
 34943  019AFE  0D05               	mullw	5
 34944  019B00  0E54               	movlw	low _S
 34945  019B02  24F3               	addwf	243,w,c
 34946  019B04  6ED9               	movwf	fsr2l,c
 34947  019B06  0E02               	movlw	high _S
 34948  019B08  20F4               	addwfc	prodh,w,c
 34949  019B0A  6EDA               	movwf	fsr2h,c
 34950  019B0C  04DE               	decf	postinc2,w,c
 34951  019B0E  A4D8               	btfss	status,2,c
 34952  019B10  D049               	goto	l11194
 34953                           
 34954                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 34955                           ;stkvar	_i @ sp[(-2)+0]
 34956  019B12  0EFE               	movlw	-2
 34957  019B14  50E3               	movf	plusw1,w,c
 34958  019B16  0D05               	mullw	5
 34959  019B18  0E54               	movlw	low _S
 34960  019B1A  24F3               	addwf	243,w,c
 34961  019B1C  6ED9               	movwf	fsr2l,c
 34962  019B1E  0E02               	movlw	high _S
 34963  019B20  20F4               	addwfc	prodh,w,c
 34964  019B22  6EDA               	movwf	fsr2h,c
 34965  019B24  0E00               	movlw	0
 34966  019B26  6EDF               	movwf	indf2,c
 34967  019B28  D03D               	goto	l11194
 34968  019B2A                     l11186:
 34969                           
 34970                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 34971                           ;stkvar	_i @ sp[(-2)+0]
 34972  019B2A  0EFE               	movlw	-2
 34973  019B2C  50E3               	movf	plusw1,w,c
 34974  019B2E  0D05               	mullw	5
 34975  019B30  0E54               	movlw	low _S
 34976  019B32  24F3               	addwf	243,w,c
 34977  019B34  6ED9               	movwf	fsr2l,c
 34978  019B36  0E02               	movlw	high _S
 34979  019B38  20F4               	addwfc	prodh,w,c
 34980  019B3A  6EDA               	movwf	fsr2h,c
 34981  019B3C  50DF               	movf	indf2,w,c
 34982  019B3E  A4D8               	btfss	status,2,c
 34983  019B40  D031               	goto	l11194
 34984                           
 34985                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 34986                           ;stkvar	_i @ sp[(-2)+0]
 34987  019B42  0EFE               	movlw	-2
 34988  019B44  50E3               	movf	plusw1,w,c
 34989  019B46  0D05               	mullw	5
 34990  019B48  0E54               	movlw	low _S
 34991  019B4A  24F3               	addwf	243,w,c
 34992  019B4C  6ED9               	movwf	fsr2l,c
 34993  019B4E  0E02               	movlw	high _S
 34994  019B50  20F4               	addwfc	prodh,w,c
 34995  019B52  6EDA               	movwf	fsr2h,c
 34996  019B54  0E01               	movlw	1
 34997  019B56  6EDF               	movwf	indf2,c
 34998                           
 34999                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 35000  019B58  EE20  F1C3         	lfsr	2,_V+188	;volatile
 35001                           
 35002                           ;stkvar	_i @ sp[(-2)+0]
 35003  019B5C  0EFE               	movlw	-2
 35004  019B5E  50E3               	movf	plusw1,w,c
 35005  019B60  0D05               	mullw	5
 35006  019B62  0E55               	movlw	low (_S+1)
 35007  019B64  24F3               	addwf	243,w,c
 35008  019B66  6EE9               	movwf	fsr0l,c
 35009  019B68  0E02               	movlw	high (_S+1)
 35010  019B6A  20F4               	addwfc	prodh,w,c
 35011  019B6C  6EEA               	movwf	fsr0h,c
 35012  019B6E  006F FF7B FFEE     	movff	postinc2,postinc0
 35013  019B74  006F FF7B FFEE     	movff	postinc2,postinc0
 35014  019B7A  006F FF7B FFEE     	movff	postinc2,postinc0
 35015  019B80  006F FF7B FFEE     	movff	postinc2,postinc0
 35016                           
 35017                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 35018                           ;stkvar	_i @ sp[(-2)+0]
 35019  019B86  0EFE               	movlw	-2
 35020  019B88  006F FF8C  F00C    	movff	plusw1,btemp+11
 35021  019B8E  0E01               	movlw	1
 35022  019B90  6E0B               	movwf	(btemp+10)^0,c
 35023  019B92  2A0C               	incf	(btemp+11)^0,f,c
 35024  019B94  D002               	goto	u1020_24
 35025  019B96                     u1020_25:
 35026  019B96  90D8               	bcf	status,0,c
 35027  019B98  360B               	rlcf	(btemp+10)^0,f,c
 35028  019B9A                     u1020_24:
 35029  019B9A  2E0C               	decfsz	(btemp+11)^0,f,c
 35030  019B9C  D7FC               	goto	u1020_25
 35031  019B9E  500B               	movf	(btemp+10)^0,w,c
 35032  019BA0  0102               	movlb	2	; () banked
 35033  019BA2  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 35034  019BA4                     l11194:
 35035                           
 35036                           ;dio.c: 113:  } while (++i < 6);
 35037                           ;stkvar	_i @ sp[(-2)+0]
 35038  019BA4  0EFE               	movlw	-2
 35039  019BA6  2AE3               	incf	plusw1,f,c
 35040  019BA8  0EFE               	movlw	-2
 35041  019BAA  006F FF8C  F001    	movff	plusw1,btemp
 35042  019BB0  0E05               	movlw	5
 35043  019BB2  6401               	cpfsgt	btemp^0,c
 35044  019BB4  D785               	goto	l11178
 35045                           
 35046                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 35047  019BB6  8ABF               	bsf	191,5,c	;volatile
 35048                           
 35049                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35050  019BB8  52E5               	movf	postdec1,f,c
 35051  019BBA  52E5               	movf	postdec1,f,c
 35052  019BBC  0012               	return		;funcret
 35053  019BBE                     __end_of_switch_handler:
 35054                           	opt callstack 0
 35055                           
 35056 ;; *************** function _TMR5_ISR *****************
 35057 ;; Defined at:
 35058 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 35059 ;; Parameters:    Size  Location     Type
 35060 ;;		None
 35061 ;; Auto vars:     Size  Location     Type
 35062 ;;		None
 35063 ;; Return value:  Size  Location     Type
 35064 ;;                  1    wreg      void 
 35065 ;; Registers used:
 35066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 35067 ;; Tracked objects:
 35068 ;;		On entry : 0/0
 35069 ;;		On exit  : 3F/0
 35070 ;;		Unchanged: 0/0
 35071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35074 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35075 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35076 ;;Total ram usage:       15 bytes
 35077 ;; Hardware stack levels used:    1
 35078 ;; Hardware stack levels required when called:    9
 35079 ;; This function calls:
 35080 ;;		_TMR5_CallBack
 35081 ;;		_TMR5_WriteTimer
 35082 ;; This function is called by:
 35083 ;;		Interrupt level 1
 35084 ;; This function uses a non-reentrant model
 35085 ;;
 35086                           
 35087                           	psect	text155
 35088  01A9A4                     __ptext155:
 35089                           	opt callstack 0
 35090  01A9A4                     _TMR5_ISR:
 35091                           	opt callstack 7
 35092                           
 35093                           ;incstack = 0
 35094  01A9A4  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 35095  01A9AA  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 35096  01A9B0  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 35097  01A9B6  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 35098  01A9BC  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 35099  01A9C2  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 35100  01A9C8  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 35101  01A9CE  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 35102  01A9D4  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 35103  01A9DA  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 35104  01A9E0  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 35105  01A9E6  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 35106  01A9EC  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 35107  01A9F2  EE16  F0AF         	lfsr	1,___intlo_sp
 35108                           
 35109                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 35110  01A9F6  0139               	movlb	57	; () banked
 35111  01A9F8  9DA8               	bcf	168,6,b	;volatile
 35112                           
 35113                           ; BSR set to: 57
 35114                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 35115  01A9FA  0060  F27B  FFE6   	movff	_timer5ReloadVal,postinc1
 35116  01AA00  0060  F27F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 35117  01AA06  ECDE  F0E1         	call	_TMR5_WriteTimer	;wreg free
 35118                           
 35119                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 35120  01AA0A  0101               	movlb	1	; () banked
 35121  01AA0C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 35122  01AA0E  6E2B               	movwf	??_TMR5_ISR^0,c
 35123  01AA10  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 35124  01AA12  0E05               	movlw	5
 35125  01AA14  262B               	addwf	??_TMR5_ISR^0,f,c
 35126  01AA16  0E00               	movlw	0
 35127  01AA18  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 35128  01AA1A  0100               	movlb	0	; () banked
 35129  01AA1C  4B9C               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 35130  01AA1E  2B9D               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 35131  01AA20  502B               	movf	??_TMR5_ISR^0,w,c
 35132  01AA22  5D9C               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 35133  01AA24  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 35134  01AA26  599D               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 35135  01AA28  A0D8               	btfss	status,0,c
 35136  01AA2A  D005               	goto	i1l1019
 35137                           
 35138                           ; BSR set to: 0
 35139                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 35140  01AA2C  EC6A  F0E5         	call	_TMR5_CallBack	;wreg free
 35141                           
 35142                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 35143  01AA30  0100               	movlb	0	; () banked
 35144  01AA32  6B9C               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 35145  01AA34  6B9D               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 35146  01AA36                     i1l1019:
 35147                           
 35148                           ; BSR set to: 0
 35149  01AA36  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 35150  01AA3C  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 35151  01AA42  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 35152  01AA48  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 35153  01AA4E  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 35154  01AA54  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 35155  01AA5A  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 35156  01AA60  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 35157  01AA66  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 35158  01AA6C  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 35159  01AA72  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 35160  01AA78  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 35161  01AA7E  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 35162  01AA84  0011               	retfie		f
 35163  01AA86                     __end_of_TMR5_ISR:
 35164                           	opt callstack 0
 35165                           
 35166 ;; *************** function _TMR5_WriteTimer *****************
 35167 ;; Defined at:
 35168 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 35169 ;; Parameters:    Size  Location     Type
 35170 ;;  timerVal        2  [STACK] unsigned short 
 35171 ;; Auto vars:     Size  Location     Type
 35172 ;;		None
 35173 ;; Return value:  Size  Location     Type
 35174 ;;                  1  [STACK] void 
 35175 ;; Registers used:
 35176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 35177 ;; Tracked objects:
 35178 ;;		On entry : 3F/39
 35179 ;;		On exit  : 0/0
 35180 ;;		Unchanged: 0/0
 35181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35186 ;;Total ram usage:        0 bytes
 35187 ;; Hardware stack levels used:    1
 35188 ;; Hardware stack levels required when called:    3
 35189 ;; This function calls:
 35190 ;;		Nothing
 35191 ;; This function is called by:
 35192 ;;		_TMR5_ISR
 35193 ;; This function uses a reentrant model
 35194 ;;
 35195                           
 35196                           	psect	text156
 35197  01C3BC                     __ptext156:
 35198                           	opt callstack 0
 35199  01C3BC                     _TMR5_WriteTimer:
 35200                           	opt callstack 12
 35201                           
 35202                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 35203                           
 35204                           ; BSR set to: 0
 35205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35206                           ;incstack = 0
 35207  01C3BC  A49A               	btfss	154,2,c	;volatile
 35208  01C3BE  D00F               	goto	l11404
 35209                           
 35210                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 35211  01C3C0  909A               	bcf	154,0,c	;volatile
 35212                           
 35213                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 35214                           ;stkvar	_timerVal @ sp[(0)+-2]
 35215  01C3C2  0EFF               	movlw	255
 35216  01C3C4  24E1               	addwf	fsr1l,w,c
 35217  01C3C6  6ED9               	movwf	fsr2l,c
 35218  01C3C8  0EFF               	movlw	255
 35219  01C3CA  20E2               	addwfc	fsr1h,w,c
 35220  01C3CC  6EDA               	movwf	fsr2h,c
 35221  01C3CE  50DF               	movf	indf2,w,c
 35222  01C3D0  6E99               	movwf	153,c	;volatile
 35223                           
 35224                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 35225                           ;stkvar	_timerVal @ sp[(0)+-2]
 35226  01C3D2  0EFE               	movlw	-2
 35227  01C3D4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 35228                           
 35229                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 35230  01C3DA  809A               	bsf	154,0,c	;volatile
 35231                           
 35232                           ;mcc_generated_files/tmr5.c: 144:  } else {
 35233  01C3DC  D00C               	goto	l1002
 35234  01C3DE                     l11404:
 35235                           
 35236                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 35237                           ;stkvar	_timerVal @ sp[(0)+-2]
 35238  01C3DE  0EFF               	movlw	255
 35239  01C3E0  24E1               	addwf	fsr1l,w,c
 35240  01C3E2  6ED9               	movwf	fsr2l,c
 35241  01C3E4  0EFF               	movlw	255
 35242  01C3E6  20E2               	addwfc	fsr1h,w,c
 35243  01C3E8  6EDA               	movwf	fsr2h,c
 35244  01C3EA  50DF               	movf	indf2,w,c
 35245  01C3EC  6E99               	movwf	153,c	;volatile
 35246                           
 35247                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 35248                           ;stkvar	_timerVal @ sp[(0)+-2]
 35249  01C3EE  0EFE               	movlw	-2
 35250  01C3F0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 35251  01C3F6                     l1002:
 35252                           
 35253                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 35254  01C3F6  52E5               	movf	postdec1,f,c
 35255  01C3F8  52E5               	movf	postdec1,f,c
 35256  01C3FA  0012               	return		;funcret
 35257  01C3FC                     __end_of_TMR5_WriteTimer:
 35258                           	opt callstack 0
 35259                           
 35260 ;; *************** function _TMR5_CallBack *****************
 35261 ;; Defined at:
 35262 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 35263 ;; Parameters:    Size  Location     Type
 35264 ;;		None
 35265 ;; Auto vars:     Size  Location     Type
 35266 ;;		None
 35267 ;; Return value:  Size  Location     Type
 35268 ;;                  1  [STACK] void 
 35269 ;; Registers used:
 35270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 35271 ;; Tracked objects:
 35272 ;;		On entry : 3F/0
 35273 ;;		On exit  : 0/0
 35274 ;;		Unchanged: 0/0
 35275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35280 ;;Total ram usage:        0 bytes
 35281 ;; Hardware stack levels used:    1
 35282 ;; Hardware stack levels required when called:    8
 35283 ;; This function calls:
 35284 ;;		Absolute function
 35285 ;;		_TMR5_DefaultInterruptHandler
 35286 ;; This function is called by:
 35287 ;;		_TMR5_ISR
 35288 ;; This function uses a reentrant model
 35289 ;;
 35290                           
 35291                           	psect	text157
 35292  01CAD4                     __ptext157:
 35293                           	opt callstack 0
 35294  01CAD4                     _TMR5_CallBack:
 35295                           	opt callstack 7
 35296                           
 35297                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 35298                           
 35299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35300                           ;incstack = 0
 35301  01CAD4  0100               	movlb	0	; () banked
 35302  01CAD6  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 35303  01CAD8  117C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 35304  01CADA  117D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 35305  01CADC  B4D8               	btfsc	status,2,c
 35306  01CADE  0012               	return	
 35307                           
 35308                           ; BSR set to: 0
 35309                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 35310  01CAE0  D801               	call	u1059_28
 35311  01CAE2  0012               	return	
 35312  01CAE4                     u1059_28:
 35313  01CAE4  0005               	push	
 35314  01CAE6  6EFA               	movwf	pclath,c
 35315  01CAE8  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 35316  01CAEA  6EFD               	movwf	tosl,c
 35317  01CAEC  517C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 35318  01CAEE  6EFE               	movwf	tosh,c
 35319  01CAF0  517D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 35320  01CAF2  6EFF               	movwf	tosu,c
 35321  01CAF4  50FA               	movf	pclath,w,c
 35322  01CAF6  0012               	return		;indir
 35323  01CAF8                     __end_of_TMR5_CallBack:
 35324                           	opt callstack 0
 35325                           
 35326 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 35327 ;; Defined at:
 35328 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 35329 ;; Parameters:    Size  Location     Type
 35330 ;;		None
 35331 ;; Auto vars:     Size  Location     Type
 35332 ;;		None
 35333 ;; Return value:  Size  Location     Type
 35334 ;;                  1  [STACK] void 
 35335 ;; Registers used:
 35336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 35337 ;; Tracked objects:
 35338 ;;		On entry : 3F/0
 35339 ;;		On exit  : 0/0
 35340 ;;		Unchanged: 0/0
 35341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35346 ;;Total ram usage:        0 bytes
 35347 ;; Hardware stack levels used:    1
 35348 ;; Hardware stack levels required when called:    7
 35349 ;; This function calls:
 35350 ;;		_check_day_time
 35351 ;; This function is called by:
 35352 ;;		_TMR5_Initialize
 35353 ;;		_TMR5_CallBack
 35354 ;; This function uses a reentrant model
 35355 ;;
 35356                           
 35357                           	psect	text158
 35358  01C526                     __ptext158:
 35359                           	opt callstack 0
 35360  01C526                     _TMR5_DefaultInterruptHandler:
 35361                           	opt callstack 7
 35362                           
 35363                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 35364                           
 35365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35366                           ;incstack = 0
 35367  01C526  A0BE               	btfss	190,0,c	;volatile
 35368  01C528  D002               	goto	u986_20
 35369  01C52A  0E01               	movlw	1
 35370  01C52C  D001               	goto	u986_26
 35371  01C52E                     u986_20:
 35372  01C52E  0E00               	movlw	0
 35373  01C530                     u986_26:
 35374  01C530  0AFF               	xorlw	255
 35375  01C532  6E0C               	movwf	(btemp+11)^0,c
 35376  01C534  50BE               	movf	190,w,c	;volatile
 35377  01C536  180C               	xorwf	(btemp+11)^0,w,c
 35378  01C538  0BFE               	andlw	-2
 35379  01C53A  180C               	xorwf	(btemp+11)^0,w,c
 35380  01C53C  6EBE               	movwf	190,c	;volatile
 35381                           
 35382                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 35383  01C53E  0E01               	movlw	1
 35384  01C540  0101               	movlb	1	; () banked
 35385  01C542  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 35386  01C544  0E00               	movlw	0
 35387  01C546  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 35388  01C548  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 35389  01C54A  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 35390                           
 35391                           ; BSR set to: 1
 35392                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 35393  01C54C  0E01               	movlw	1
 35394  01C54E  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 35395  01C550  0E00               	movlw	0
 35396  01C552  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 35397  01C554  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 35398  01C556  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 35399                           
 35400                           ; BSR set to: 1
 35401                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 35402  01C558  EC5E  F0C7         	call	_check_day_time	;wreg free
 35403                           
 35404                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35405  01C55C  0012               	return		;funcret
 35406  01C55E                     __end_of_TMR5_DefaultInterruptHandler:
 35407                           	opt callstack 0
 35408                           
 35409 ;; *************** function _check_day_time *****************
 35410 ;; Defined at:
 35411 ;;		line 165 in file "mbmc.c"
 35412 ;; Parameters:    Size  Location     Type
 35413 ;;		None
 35414 ;; Auto vars:     Size  Location     Type
 35415 ;;  light           4  [STACK] float 
 35416 ;; Return value:  Size  Location     Type
 35417 ;;                  1  [STACK] _Bool 
 35418 ;; Registers used:
 35419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 35420 ;; Tracked objects:
 35421 ;;		On entry : 3F/1
 35422 ;;		On exit  : 0/0
 35423 ;;		Unchanged: 0/0
 35424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35429 ;;Total ram usage:        0 bytes
 35430 ;; Hardware stack levels used:    1
 35431 ;; Hardware stack levels required when called:    6
 35432 ;; This function calls:
 35433 ;;		___flge
 35434 ;;		_conv_raw_result
 35435 ;;		_get_ac_charger_relay
 35436 ;;		_set_ac_charger_relay
 35437 ;; This function is called by:
 35438 ;;		_TMR5_DefaultInterruptHandler
 35439 ;; This function uses a reentrant model
 35440 ;;
 35441                           
 35442                           	psect	text159
 35443  018EBC                     __ptext159:
 35444                           	opt callstack 0
 35445  018EBC                     _check_day_time:
 35446                           	opt callstack 0
 35447                           
 35448                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35449  018EBC  52E6               	movf	postinc1,f,c
 35450  018EBE  52E6               	movf	postinc1,f,c
 35451  018EC0  52E6               	movf	postinc1,f,c
 35452  018EC2  52E6               	movf	postinc1,f,c
 35453                           
 35454                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 35455                           
 35456                           ;incstack = 0
 35457  018EC4  0E00               	movlw	0
 35458  018EC6  6EE6               	movwf	postinc1,c
 35459  018EC8  0E0D               	movlw	13
 35460  018ECA  6EE6               	movwf	postinc1,c
 35461  018ECC  EC0A  F0AA         	call	_conv_raw_result	;wreg free
 35462                           
 35463                           ;stkvar	_light @ sp[(-4)+0]
 35464  018ED0  0EFC               	movlw	-4
 35465  018ED2  0060  F007  FFE3   	movff	btemp,plusw1
 35466  018ED8  0EFD               	movlw	-3
 35467  018EDA  0060  F00B  FFE3   	movff	btemp+1,plusw1
 35468  018EE0  0EFE               	movlw	-2
 35469  018EE2  0060  F00F  FFE3   	movff	btemp+2,plusw1
 35470  018EE8  0EFF               	movlw	-1
 35471  018EEA  0060  F013  FFE3   	movff	btemp+3,plusw1
 35472                           
 35473                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 35474  018EF0  2A41               	incf	check_day_time@day_delay^0,f,c
 35475  018EF2  0441               	decf	check_day_time@day_delay^0,w,c
 35476  018EF4  A4D8               	btfss	status,2,c
 35477  018EF6  D0A9               	goto	l2040
 35478  018EF8  0101               	movlb	1	; () banked
 35479  018EFA  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 35480  018EFC  B4D8               	btfsc	status,2,c
 35481  018EFE  D0A5               	goto	l2040
 35482                           
 35483                           ; BSR set to: 1
 35484                           ;mbmc.c: 173:   if (C.soc > 3) {
 35485  018F00  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35486  018F04  0E01               	movlw	1
 35487  018F06  50DB               	movf	plusw2,w,c
 35488  018F08  E104               	bnz	u963_20
 35489  018F0A  0E04               	movlw	4
 35490  018F0C  5CDE               	subwf	postinc2,w,c
 35491  018F0E  A0D8               	btfss	status,0,c
 35492  018F10  D073               	goto	l10346
 35493  018F12                     u963_20:
 35494                           
 35495                           ; BSR set to: 1
 35496                           ;mbmc.c: 174:    if (!C.day) {
 35497  018F12  EE22  F021         	lfsr	2,_C+290	;volatile
 35498  018F16  50DF               	movf	indf2,w,c
 35499  018F18  A4D8               	btfss	status,2,c
 35500  018F1A  D035               	goto	l10334
 35501                           
 35502                           ; BSR set to: 1
 35503                           ;mbmc.c: 175:     if (light > 22.0) {
 35504                           ;stkvar	_light @ sp[(-4)+0]
 35505  018F1C  0EFC               	movlw	-4
 35506  018F1E  006F FF8F FFE6     	movff	plusw1,postinc1
 35507  018F24  006F FF8F FFE6     	movff	plusw1,postinc1
 35508  018F2A  006F FF8F FFE6     	movff	plusw1,postinc1
 35509  018F30  006F FF8F FFE6     	movff	plusw1,postinc1
 35510  018F36  0E00               	movlw	0
 35511  018F38  6EE6               	movwf	postinc1,c
 35512  018F3A  0E00               	movlw	0
 35513  018F3C  6EE6               	movwf	postinc1,c
 35514  018F3E  0EB0               	movlw	176
 35515  018F40  6EE6               	movwf	postinc1,c
 35516  018F42  0E41               	movlw	65
 35517  018F44  6EE6               	movwf	postinc1,c
 35518  018F46  EC35  F0CB         	call	___flge	;wreg free
 35519  018F4A  B001               	btfsc	btemp& (0+255),0,c
 35520  018F4C  D07E               	goto	l2040
 35521                           
 35522                           ;mbmc.c: 176:      C.day = 1;
 35523  018F4E  0E01               	movlw	1
 35524  018F50  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 35525                           
 35526                           ;mbmc.c: 177:      C.day_start = V.ticks;
 35527  018F56  EE20  F188         	lfsr	2,_V+129	;volatile
 35528  018F5A  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 35529  018F60  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 35530  018F66  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 35531  018F6C  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 35532                           
 35533                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 35534  018F72  ECF0  F0E6         	call	_get_ac_charger_relay	;wreg free
 35535  018F76  5001               	movf	btemp^0,w,c
 35536  018F78  B4D8               	btfsc	status,2,c
 35537  018F7A  D06B               	goto	l2036
 35538                           
 35539                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 35540  018F7C  0E00               	movlw	0
 35541  018F7E  6EE6               	movwf	postinc1,c
 35542  018F80  ECDA  F0E6         	call	_set_ac_charger_relay	;wreg free
 35543  018F84  D066               	goto	l2036
 35544  018F86                     l10334:
 35545                           
 35546                           ; BSR set to: 1
 35547                           ;mbmc.c: 184:     if (light < 12.0) {
 35548  018F86  0E00               	movlw	0
 35549  018F88  6EE6               	movwf	postinc1,c
 35550  018F8A  0E00               	movlw	0
 35551  018F8C  6EE6               	movwf	postinc1,c
 35552  018F8E  0E40               	movlw	64
 35553  018F90  6EE6               	movwf	postinc1,c
 35554  018F92  0E41               	movlw	65
 35555  018F94  6EE6               	movwf	postinc1,c
 35556                           
 35557                           ;stkvar	_light @ sp[(-8)+0]
 35558  018F96  0EF8               	movlw	-8
 35559  018F98  006F FF8F FFE6     	movff	plusw1,postinc1
 35560  018F9E  006F FF8F FFE6     	movff	plusw1,postinc1
 35561  018FA4  006F FF8F FFE6     	movff	plusw1,postinc1
 35562  018FAA  006F FF8F FFE6     	movff	plusw1,postinc1
 35563  018FB0  EC35  F0CB         	call	___flge	;wreg free
 35564  018FB4  B001               	btfsc	btemp& (0+255),0,c
 35565  018FB6  D049               	goto	l2040
 35566                           
 35567                           ;mbmc.c: 185:      C.day = 0;
 35568  018FB8  0E00               	movlw	0
 35569  018FBA  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 35570                           
 35571                           ;mbmc.c: 186:      C.day_end = V.ticks;
 35572  018FC0  EE20  F188         	lfsr	2,_V+129	;volatile
 35573  018FC4  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 35574  018FCA  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 35575  018FD0  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 35576  018FD6  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 35577                           
 35578                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 35579  018FDC  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35580  018FE0  0E01               	movlw	1
 35581  018FE2  50DB               	movf	plusw2,w,c
 35582  018FE4  E136               	bnz	l2036
 35583  018FE6  0E14               	movlw	20
 35584  018FE8  5CDE               	subwf	postinc2,w,c
 35585  018FEA  B0D8               	btfsc	status,0,c
 35586  018FEC  D032               	goto	l2036
 35587                           
 35588                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 35589  018FEE  0E01               	movlw	1
 35590  018FF0  6EE6               	movwf	postinc1,c
 35591  018FF2  ECDA  F0E6         	call	_set_ac_charger_relay	;wreg free
 35592  018FF6  D02D               	goto	l2036
 35593  018FF8                     l10346:
 35594                           
 35595                           ; BSR set to: 1
 35596                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 35597  018FF8  EE21  F377         	lfsr	2,_C+120	;volatile
 35598  018FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 35599  019002  006F FF7B FFE6     	movff	postinc2,postinc1
 35600  019008  006F FF7B FFE6     	movff	postinc2,postinc1
 35601  01900E  006F FF7B FFE6     	movff	postinc2,postinc1
 35602  019014  EE21  F37B         	lfsr	2,_C+124	;volatile
 35603  019018  006F FF7B FFE6     	movff	postinc2,postinc1
 35604  01901E  006F FF7B FFE6     	movff	postinc2,postinc1
 35605  019024  006F FF7B FFE6     	movff	postinc2,postinc1
 35606  01902A  006F FF7B FFE6     	movff	postinc2,postinc1
 35607  019030  EC35  F0CB         	call	___flge	;wreg free
 35608  019034  B001               	btfsc	btemp& (0+255),0,c
 35609  019036  D009               	goto	l2040
 35610                           
 35611                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 35612  019038  ECF0  F0E6         	call	_get_ac_charger_relay	;wreg free
 35613  01903C  5001               	movf	btemp^0,w,c
 35614  01903E  A4D8               	btfss	status,2,c
 35615  019040  D004               	goto	l2040
 35616                           
 35617                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 35618  019042  0E01               	movlw	1
 35619  019044  6EE6               	movwf	postinc1,c
 35620  019046  ECDA  F0E6         	call	_set_ac_charger_relay	;wreg free
 35621  01904A                     l2040:
 35622                           
 35623                           ;mbmc.c: 204:  if (day_delay >= 240)
 35624  01904A  0EEF               	movlw	239
 35625  01904C  6441               	cpfsgt	check_day_time@day_delay^0,c
 35626  01904E  D001               	goto	l2036
 35627                           
 35628                           ;mbmc.c: 205:   day_delay = 0;
 35629  019050  6A41               	clrf	check_day_time@day_delay^0,c
 35630  019052                     l2036:
 35631                           
 35632                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35633  019052  52E5               	movf	postdec1,f,c
 35634  019054  52E5               	movf	postdec1,f,c
 35635  019056  52E5               	movf	postdec1,f,c
 35636  019058  52E5               	movf	postdec1,f,c
 35637  01905A  0012               	return		;funcret
 35638  01905C                     __end_of_check_day_time:
 35639                           	opt callstack 0
 35640                           
 35641 ;; *************** function _set_ac_charger_relay *****************
 35642 ;; Defined at:
 35643 ;;		line 135 in file "mbmc.c"
 35644 ;; Parameters:    Size  Location     Type
 35645 ;;  mode            1  [STACK] const _Bool 
 35646 ;; Auto vars:     Size  Location     Type
 35647 ;;		None
 35648 ;; Return value:  Size  Location     Type
 35649 ;;                  1  [STACK] void 
 35650 ;; Registers used:
 35651 ;;		wreg, fsr1l, fsr1h
 35652 ;; Tracked objects:
 35653 ;;		On entry : 0/1
 35654 ;;		On exit  : 0/0
 35655 ;;		Unchanged: 0/0
 35656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35661 ;;Total ram usage:        0 bytes
 35662 ;; Hardware stack levels used:    1
 35663 ;; Hardware stack levels required when called:    3
 35664 ;; This function calls:
 35665 ;;		Nothing
 35666 ;; This function is called by:
 35667 ;;		_check_day_time
 35668 ;; This function uses a reentrant model
 35669 ;;
 35670                           
 35671                           	psect	text160
 35672  01CDB4                     __ptext160:
 35673                           	opt callstack 0
 35674  01CDB4                     _set_ac_charger_relay:
 35675                           	opt callstack 9
 35676                           
 35677                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 35678                           ;stkvar	_mode @ sp[(0)+-1]
 35679                           
 35680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35681                           ;incstack = 0
 35682  01CDB4  0EFF               	movlw	-1
 35683  01CDB6  B0E3               	btfsc	plusw1,0,c
 35684  01CDB8  D002               	bra	u955_25
 35685  01CDBA  9CBD               	bcf	189,6,c	;volatile
 35686  01CDBC  D001               	bra	u955_26
 35687  01CDBE                     u955_25:
 35688  01CDBE  8CBD               	bsf	189,6,c	;volatile
 35689  01CDC0                     u955_26:
 35690                           
 35691                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 35692  01CDC0  52E5               	movf	postdec1,f,c
 35693  01CDC2  0012               	return		;funcret
 35694  01CDC4                     __end_of_set_ac_charger_relay:
 35695                           	opt callstack 0
 35696                           
 35697 ;; *************** function _get_ac_charger_relay *****************
 35698 ;; Defined at:
 35699 ;;		line 140 in file "mbmc.c"
 35700 ;; Parameters:    Size  Location     Type
 35701 ;;		None
 35702 ;; Auto vars:     Size  Location     Type
 35703 ;;		None
 35704 ;; Return value:  Size  Location     Type
 35705 ;;                  1  [STACK] _Bool 
 35706 ;; Registers used:
 35707 ;;		btemp
 35708 ;; Tracked objects:
 35709 ;;		On entry : 0/1
 35710 ;;		On exit  : 0/0
 35711 ;;		Unchanged: 0/0
 35712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35717 ;;Total ram usage:        0 bytes
 35718 ;; Hardware stack levels used:    1
 35719 ;; Hardware stack levels required when called:    3
 35720 ;; This function calls:
 35721 ;;		Nothing
 35722 ;; This function is called by:
 35723 ;;		_check_day_time
 35724 ;;		_calc_bsoc
 35725 ;; This function uses a reentrant model
 35726 ;;
 35727                           
 35728                           	psect	text161
 35729  01CDE0                     __ptext161:
 35730                           	opt callstack 0
 35731  01CDE0                     _get_ac_charger_relay:
 35732                           	opt callstack 10
 35733                           
 35734                           ;mbmc.c: 142:  return LATDbits.LATD6;
 35735                           
 35736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35737                           ;incstack = 0
 35738  01CDE0  ACBD               	btfss	189,6,c	;volatile
 35739  01CDE2  D003               	goto	u979_20
 35740  01CDE4  6A01               	clrf	btemp^0,c
 35741  01CDE6  2A01               	incf	btemp^0,f,c
 35742  01CDE8  0012               	return	
 35743  01CDEA                     u979_20:
 35744  01CDEA  6A01               	clrf	btemp^0,c
 35745                           
 35746                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 35747  01CDEC  0012               	return		;funcret
 35748  01CDEE                     __end_of_get_ac_charger_relay:
 35749                           	opt callstack 0
 35750                           
 35751 ;; *************** function _TMR3_ISR *****************
 35752 ;; Defined at:
 35753 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 35754 ;; Parameters:    Size  Location     Type
 35755 ;;		None
 35756 ;; Auto vars:     Size  Location     Type
 35757 ;;		None
 35758 ;; Return value:  Size  Location     Type
 35759 ;;                  1    wreg      void 
 35760 ;; Registers used:
 35761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 35762 ;; Tracked objects:
 35763 ;;		On entry : 0/0
 35764 ;;		On exit  : 3F/0
 35765 ;;		Unchanged: 0/0
 35766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35769 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35770 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35771 ;;Total ram usage:       25 bytes
 35772 ;; Hardware stack levels used:    1
 35773 ;; Hardware stack levels required when called:   14
 35774 ;; This function calls:
 35775 ;;		_TMR3_CallBack
 35776 ;;		_TMR3_WriteTimer
 35777 ;; This function is called by:
 35778 ;;		Interrupt level 1
 35779 ;; This function uses a non-reentrant model
 35780 ;;
 35781                           
 35782                           	psect	text162
 35783  0197CC                     __ptext162:
 35784                           	opt callstack 0
 35785  0197CC                     _TMR3_ISR:
 35786                           	opt callstack 2
 35787                           
 35788                           ;incstack = 0
 35789  0197CC  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 35790  0197D2  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 35791  0197D8  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 35792  0197DE  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 35793  0197E4  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 35794  0197EA  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 35795  0197F0  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 35796  0197F6  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 35797  0197FC  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 35798  019802  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 35799  019808  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 35800  01980E  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 35801  019814  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 35802  01981A  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 35803  019820  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 35804  019826  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 35805  01982C  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 35806  019832  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 35807  019838  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 35808  01983E  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 35809  019844  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 35810  01984A  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 35811  019850  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 35812  019856  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 35813  01985C  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 35814  019862  EE16  F0AF         	lfsr	1,___intlo_sp
 35815                           
 35816                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 35817  019866  0139               	movlb	57	; () banked
 35818  019868  9DA6               	bcf	166,6,b	;volatile
 35819                           
 35820                           ; BSR set to: 57
 35821                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 35822  01986A  0060  F26B  FFE6   	movff	_timer3ReloadVal,postinc1
 35823  019870  0060  F26F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 35824  019876  ECFE  F0E1         	call	_TMR3_WriteTimer	;wreg free
 35825                           
 35826                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 35827  01987A  0100               	movlb	0	; () banked
 35828  01987C  4B98               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 35829  01987E  2B99               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 35830  019880  5199               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 35831  019882  E104               	bnz	i1u1335_20
 35832  019884  0E28               	movlw	40
 35833  019886  5D98               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 35834  019888  A0D8               	btfss	status,0,c
 35835  01988A  D005               	goto	i1l1207
 35836  01988C                     i1u1335_20:
 35837                           
 35838                           ; BSR set to: 0
 35839                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 35840  01988C  EC7C  F0E5         	call	_TMR3_CallBack	;wreg free
 35841                           
 35842                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 35843  019890  0100               	movlb	0	; () banked
 35844  019892  6B98               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 35845  019894  6B99               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 35846  019896                     i1l1207:
 35847                           
 35848                           ; BSR set to: 0
 35849  019896  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 35850  01989C  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 35851  0198A2  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 35852  0198A8  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 35853  0198AE  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 35854  0198B4  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 35855  0198BA  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 35856  0198C0  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 35857  0198C6  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 35858  0198CC  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 35859  0198D2  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 35860  0198D8  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 35861  0198DE  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 35862  0198E4  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 35863  0198EA  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 35864  0198F0  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 35865  0198F6  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 35866  0198FC  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 35867  019902  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 35868  019908  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 35869  01990E  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 35870  019914  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 35871  01991A  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 35872  019920  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 35873  019926  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 35874  01992C  0011               	retfie		f
 35875  01992E                     __end_of_TMR3_ISR:
 35876                           	opt callstack 0
 35877                           
 35878 ;; *************** function _TMR3_WriteTimer *****************
 35879 ;; Defined at:
 35880 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 35881 ;; Parameters:    Size  Location     Type
 35882 ;;  timerVal        2  [STACK] unsigned short 
 35883 ;; Auto vars:     Size  Location     Type
 35884 ;;		None
 35885 ;; Return value:  Size  Location     Type
 35886 ;;                  1  [STACK] void 
 35887 ;; Registers used:
 35888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 35889 ;; Tracked objects:
 35890 ;;		On entry : 3F/39
 35891 ;;		On exit  : 0/0
 35892 ;;		Unchanged: 0/0
 35893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35898 ;;Total ram usage:        0 bytes
 35899 ;; Hardware stack levels used:    1
 35900 ;; Hardware stack levels required when called:    3
 35901 ;; This function calls:
 35902 ;;		Nothing
 35903 ;; This function is called by:
 35904 ;;		_TMR3_ISR
 35905 ;; This function uses a reentrant model
 35906 ;;
 35907                           
 35908                           	psect	text163
 35909  01C3FC                     __ptext163:
 35910                           	opt callstack 0
 35911  01C3FC                     _TMR3_WriteTimer:
 35912                           	opt callstack 12
 35913                           
 35914                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 35915                           
 35916                           ; BSR set to: 0
 35917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35918                           ;incstack = 0
 35919  01C3FC  A4A6               	btfss	166,2,c	;volatile
 35920  01C3FE  D00F               	goto	l11422
 35921                           
 35922                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 35923  01C400  90A6               	bcf	166,0,c	;volatile
 35924                           
 35925                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 35926                           ;stkvar	_timerVal @ sp[(0)+-2]
 35927  01C402  0EFF               	movlw	255
 35928  01C404  24E1               	addwf	fsr1l,w,c
 35929  01C406  6ED9               	movwf	fsr2l,c
 35930  01C408  0EFF               	movlw	255
 35931  01C40A  20E2               	addwfc	fsr1h,w,c
 35932  01C40C  6EDA               	movwf	fsr2h,c
 35933  01C40E  50DF               	movf	indf2,w,c
 35934  01C410  6EA5               	movwf	165,c	;volatile
 35935                           
 35936                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 35937                           ;stkvar	_timerVal @ sp[(0)+-2]
 35938  01C412  0EFE               	movlw	-2
 35939  01C414  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 35940                           
 35941                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 35942  01C41A  80A6               	bsf	166,0,c	;volatile
 35943                           
 35944                           ;mcc_generated_files/tmr3.c: 141:     }
 35945  01C41C  D00C               	goto	l1190
 35946  01C41E                     l11422:
 35947                           
 35948                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 35949                           ;stkvar	_timerVal @ sp[(0)+-2]
 35950  01C41E  0EFF               	movlw	255
 35951  01C420  24E1               	addwf	fsr1l,w,c
 35952  01C422  6ED9               	movwf	fsr2l,c
 35953  01C424  0EFF               	movlw	255
 35954  01C426  20E2               	addwfc	fsr1h,w,c
 35955  01C428  6EDA               	movwf	fsr2h,c
 35956  01C42A  50DF               	movf	indf2,w,c
 35957  01C42C  6EA5               	movwf	165,c	;volatile
 35958                           
 35959                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 35960                           ;stkvar	_timerVal @ sp[(0)+-2]
 35961  01C42E  0EFE               	movlw	-2
 35962  01C430  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 35963  01C436                     l1190:
 35964                           
 35965                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 35966  01C436  52E5               	movf	postdec1,f,c
 35967  01C438  52E5               	movf	postdec1,f,c
 35968  01C43A  0012               	return		;funcret
 35969  01C43C                     __end_of_TMR3_WriteTimer:
 35970                           	opt callstack 0
 35971                           
 35972 ;; *************** function _TMR3_CallBack *****************
 35973 ;; Defined at:
 35974 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 35975 ;; Parameters:    Size  Location     Type
 35976 ;;		None
 35977 ;; Auto vars:     Size  Location     Type
 35978 ;;		None
 35979 ;; Return value:  Size  Location     Type
 35980 ;;                  1  [STACK] void 
 35981 ;; Registers used:
 35982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 35983 ;; Tracked objects:
 35984 ;;		On entry : 3F/0
 35985 ;;		On exit  : 0/0
 35986 ;;		Unchanged: 0/0
 35987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35992 ;;Total ram usage:        0 bytes
 35993 ;; Hardware stack levels used:    1
 35994 ;; Hardware stack levels required when called:   13
 35995 ;; This function calls:
 35996 ;;		Absolute function
 35997 ;;		_TMR3_DefaultInterruptHandler
 35998 ;;		_calc_bsoc
 35999 ;; This function is called by:
 36000 ;;		_TMR3_ISR
 36001 ;; This function uses a reentrant model
 36002 ;;
 36003                           
 36004                           	psect	text164
 36005  01CAF8                     __ptext164:
 36006                           	opt callstack 0
 36007  01CAF8                     _TMR3_CallBack:
 36008                           	opt callstack 2
 36009                           
 36010                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 36011                           
 36012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36013                           ;incstack = 0
 36014  01CAF8  0100               	movlb	0	; () banked
 36015  01CAFA  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 36016  01CAFC  1179               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 36017  01CAFE  117A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 36018  01CB00  B4D8               	btfsc	status,2,c
 36019  01CB02  0012               	return	
 36020                           
 36021                           ; BSR set to: 0
 36022                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 36023  01CB04  D801               	call	u1318_28
 36024  01CB06  0012               	return	
 36025  01CB08                     u1318_28:
 36026  01CB08  0005               	push	
 36027  01CB0A  6EFA               	movwf	pclath,c
 36028  01CB0C  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 36029  01CB0E  6EFD               	movwf	tosl,c
 36030  01CB10  5179               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 36031  01CB12  6EFE               	movwf	tosh,c
 36032  01CB14  517A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 36033  01CB16  6EFF               	movwf	tosu,c
 36034  01CB18  50FA               	movf	pclath,w,c
 36035  01CB1A  0012               	return		;indir
 36036  01CB1C                     __end_of_TMR3_CallBack:
 36037                           	opt callstack 0
 36038                           
 36039 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 36040 ;; Defined at:
 36041 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 36042 ;; Parameters:    Size  Location     Type
 36043 ;;		None
 36044 ;; Auto vars:     Size  Location     Type
 36045 ;;		None
 36046 ;; Return value:  Size  Location     Type
 36047 ;;                  1  [STACK] void 
 36048 ;; Registers used:
 36049 ;;		None
 36050 ;; Tracked objects:
 36051 ;;		On entry : 3F/0
 36052 ;;		On exit  : 0/0
 36053 ;;		Unchanged: 0/0
 36054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36059 ;;Total ram usage:        0 bytes
 36060 ;; Hardware stack levels used:    1
 36061 ;; Hardware stack levels required when called:    3
 36062 ;; This function calls:
 36063 ;;		Nothing
 36064 ;; This function is called by:
 36065 ;;		_TMR3_Initialize
 36066 ;;		_TMR3_CallBack
 36067 ;; This function uses a reentrant model
 36068 ;;
 36069                           
 36070                           	psect	text165
 36071  01CE90                     __ptext165:
 36072                           	opt callstack 0
 36073  01CE90                     _TMR3_DefaultInterruptHandler:
 36074                           	opt callstack 11
 36075                           
 36076                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36077                           
 36078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36079                           ;incstack = 0
 36080  01CE90  0012               	return		;funcret
 36081  01CE92                     __end_of_TMR3_DefaultInterruptHandler:
 36082                           	opt callstack 0
 36083                           
 36084 ;; *************** function _calc_bsoc *****************
 36085 ;; Defined at:
 36086 ;;		line 39 in file "bsoc.c"
 36087 ;; Parameters:    Size  Location     Type
 36088 ;;		None
 36089 ;; Auto vars:     Size  Location     Type
 36090 ;;  adj             4  [STACK] float 
 36091 ;;  log_ptr         2  [STACK] PTR unsigned char 
 36092 ;;		 -> port_data(512), 
 36093 ;; Return value:  Size  Location     Type
 36094 ;;                  1  [STACK] void 
 36095 ;; Registers used:
 36096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 36097 ;; Tracked objects:
 36098 ;;		On entry : 3F/0
 36099 ;;		On exit  : 5/1
 36100 ;;		Unchanged: 0/0
 36101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36106 ;;Total ram usage:        0 bytes
 36107 ;; Hardware stack levels used:    1
 36108 ;; Hardware stack levels required when called:   12
 36109 ;; This function calls:
 36110 ;;		_StartTimer
 36111 ;;		___asfladd
 36112 ;;		___fldiv
 36113 ;;		___flge
 36114 ;;		___flmul
 36115 ;;		___flneg
 36116 ;;		___fltol
 36117 ;;		_fabsf
 36118 ;;		_get_ac_charger_relay
 36119 ;;		_port_data_dma_ptr
 36120 ;;		_send_port_data_dma
 36121 ;;		_sprintf
 36122 ;;		_strlen
 36123 ;; This function is called by:
 36124 ;;		_init_bsoc
 36125 ;;		_TMR3_CallBack
 36126 ;; This function uses a reentrant model
 36127 ;;
 36128                           
 36129                           	psect	text166
 36130  013446                     __ptext166:
 36131                           	opt callstack 0
 36132  013446                     _calc_bsoc:
 36133                           	opt callstack 0
 36134                           
 36135                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36136  013446  0E06               	movlw	6
 36137  013448  26E1               	addwf	fsr1l,f,c
 36138  01344A  0E00               	movlw	0
 36139  01344C  22E2               	addwfc	fsr1h,f,c
 36140                           
 36141                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 36142                           
 36143                           ;incstack = 0
 36144  01344E  0E00               	movlw	0
 36145  013450  6E09               	movwf	(btemp+8)^0,c
 36146  013452  0E00               	movlw	0
 36147  013454  6E0A               	movwf	(btemp+9)^0,c
 36148  013456  0E80               	movlw	128
 36149  013458  6E0B               	movwf	(btemp+10)^0,c
 36150  01345A  0E3F               	movlw	63
 36151  01345C  6E0C               	movwf	(btemp+11)^0,c
 36152                           
 36153                           ;stkvar	_adj @ sp[(-6)+0]
 36154  01345E  0EFA               	movlw	-6
 36155  013460  0060  F027  FFE3   	movff	btemp+8,plusw1
 36156  013466  0EFB               	movlw	-5
 36157  013468  0060  F02B  FFE3   	movff	btemp+9,plusw1
 36158  01346E  0EFC               	movlw	-4
 36159  013470  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36160  013476  0EFD               	movlw	-3
 36161  013478  0060  F033  FFE3   	movff	btemp+11,plusw1
 36162  01347E  82BE               	bsf	190,1,c	;volatile
 36163                           
 36164                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 36165  013480  0E00               	movlw	0
 36166  013482  6EE6               	movwf	postinc1,c
 36167  013484  0E00               	movlw	0
 36168  013486  6EE6               	movwf	postinc1,c
 36169  013488  0E61               	movlw	97
 36170  01348A  6EE6               	movwf	postinc1,c
 36171  01348C  0E45               	movlw	69
 36172  01348E  6EE6               	movwf	postinc1,c
 36173  013490  EE21  F343         	lfsr	2,_C+68	;volatile
 36174  013494  006F FF7B FFE6     	movff	postinc2,postinc1
 36175  01349A  006F FF7B FFE6     	movff	postinc2,postinc1
 36176  0134A0  006F FF7B FFE6     	movff	postinc2,postinc1
 36177  0134A6  006F FF7B FFE6     	movff	postinc2,postinc1
 36178  0134AC  EC4D  F0A7         	call	___fldiv	;wreg free
 36179  0134B0  0060  F007  FFE6   	movff	btemp,postinc1
 36180  0134B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36181  0134BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36182  0134C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 36183  0134C8  0E8F               	movlw	low (_C+144)
 36184  0134CA  6EE6               	movwf	postinc1,c
 36185  0134CC  0E07               	movlw	high (_C+144)
 36186  0134CE  6EE6               	movwf	postinc1,c
 36187  0134D0  ECA9  F0DC         	call	___asfladd	;wreg free
 36188                           
 36189                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 36190  0134D4  EE21  F38F         	lfsr	2,_C+144	;volatile
 36191  0134D8  006F FF7B FFE6     	movff	postinc2,postinc1
 36192  0134DE  006F FF7B FFE6     	movff	postinc2,postinc1
 36193  0134E4  006F FF7B FFE6     	movff	postinc2,postinc1
 36194  0134EA  006F FF7B FFE6     	movff	postinc2,postinc1
 36195  0134F0  EE21  F38B         	lfsr	2,_C+140	;volatile
 36196  0134F4  006F FF7B FFE6     	movff	postinc2,postinc1
 36197  0134FA  006F FF7B FFE6     	movff	postinc2,postinc1
 36198  013500  006F FF7B FFE6     	movff	postinc2,postinc1
 36199  013506  006F FF7B FFE6     	movff	postinc2,postinc1
 36200  01350C  EC35  F0CB         	call	___flge	;wreg free
 36201  013510  B001               	btfsc	btemp& (0+255),0,c
 36202  013512  D00E               	goto	l13636
 36203                           
 36204                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 36205  013514  EE21  F38B         	lfsr	2,_C+140	;volatile
 36206  013518  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 36207  01351E  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 36208  013524  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 36209  01352A  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 36210  013530                     l13636:
 36211                           
 36212                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 36213  013530  0ECD               	movlw	205
 36214  013532  6EE6               	movwf	postinc1,c
 36215  013534  0ECC               	movlw	204
 36216  013536  6EE6               	movwf	postinc1,c
 36217  013538  0ECC               	movlw	204
 36218  01353A  6EE6               	movwf	postinc1,c
 36219  01353C  0E3D               	movlw	61
 36220  01353E  6EE6               	movwf	postinc1,c
 36221  013540  EE21  F38F         	lfsr	2,_C+144	;volatile
 36222  013544  006F FF7B FFE6     	movff	postinc2,postinc1
 36223  01354A  006F FF7B FFE6     	movff	postinc2,postinc1
 36224  013550  006F FF7B FFE6     	movff	postinc2,postinc1
 36225  013556  006F FF7B FFE6     	movff	postinc2,postinc1
 36226  01355C  EC35  F0CB         	call	___flge	;wreg free
 36227  013560  B001               	btfsc	btemp& (0+255),0,c
 36228  013562  D010               	goto	l13640
 36229                           
 36230                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 36231  013564  0ECD               	movlw	205
 36232  013566  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 36233  01356C  0ECC               	movlw	204
 36234  01356E  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 36235  013574  0ECC               	movlw	204
 36236  013576  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 36237  01357C  0E3D               	movlw	61
 36238  01357E  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 36239  013584                     l13640:
 36240                           
 36241                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 36242  013584  EE21  F343         	lfsr	2,_C+68	;volatile
 36243  013588  006F FF7B FFE6     	movff	postinc2,postinc1
 36244  01358E  006F FF7B FFE6     	movff	postinc2,postinc1
 36245  013594  006F FF7B FFE6     	movff	postinc2,postinc1
 36246  01359A  006F FF7B FFE6     	movff	postinc2,postinc1
 36247  0135A0  0E0A               	movlw	10
 36248  0135A2  6EE6               	movwf	postinc1,c
 36249  0135A4  0ED7               	movlw	215
 36250  0135A6  6EE6               	movwf	postinc1,c
 36251  0135A8  0E23               	movlw	35
 36252  0135AA  6EE6               	movwf	postinc1,c
 36253  0135AC  0E3C               	movlw	60
 36254  0135AE  6EE6               	movwf	postinc1,c
 36255  0135B0  EC35  F0CB         	call	___flge	;wreg free
 36256  0135B4  B001               	btfsc	btemp& (0+255),0,c
 36257  0135B6  D01C               	goto	l13644
 36258                           
 36259                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 36260  0135B8  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 36261  0135BE  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 36262  0135C4  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 36263  0135CA  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 36264                           
 36265                           ;stkvar	_adj @ sp[(-6)+0]
 36266  0135D0  0EFA               	movlw	-6
 36267  0135D2  0060  F027  FFE3   	movff	btemp+8,plusw1
 36268  0135D8  0EFB               	movlw	-5
 36269  0135DA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 36270  0135E0  0EFC               	movlw	-4
 36271  0135E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36272  0135E8  0EFD               	movlw	-3
 36273  0135EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 36274  0135F0                     l13644:
 36275                           
 36276                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 36277  0135F0  0E0A               	movlw	10
 36278  0135F2  6EE6               	movwf	postinc1,c
 36279  0135F4  0ED7               	movlw	215
 36280  0135F6  6EE6               	movwf	postinc1,c
 36281  0135F8  0E23               	movlw	35
 36282  0135FA  6EE6               	movwf	postinc1,c
 36283  0135FC  0E3C               	movlw	60
 36284  0135FE  6EE6               	movwf	postinc1,c
 36285  013600  EE21  F343         	lfsr	2,_C+68	;volatile
 36286  013604  006F FF7B FFE6     	movff	postinc2,postinc1
 36287  01360A  006F FF7B FFE6     	movff	postinc2,postinc1
 36288  013610  006F FF7B FFE6     	movff	postinc2,postinc1
 36289  013616  006F FF7B FFE6     	movff	postinc2,postinc1
 36290  01361C  EC35  F0CB         	call	___flge	;wreg free
 36291  013620  B001               	btfsc	btemp& (0+255),0,c
 36292  013622  D01C               	goto	l13648
 36293                           
 36294                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 36295  013624  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 36296  01362A  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 36297  013630  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 36298  013636  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 36299                           
 36300                           ;stkvar	_adj @ sp[(-6)+0]
 36301  01363C  0EFA               	movlw	-6
 36302  01363E  0060  F027  FFE3   	movff	btemp+8,plusw1
 36303  013644  0EFB               	movlw	-5
 36304  013646  0060  F02B  FFE3   	movff	btemp+9,plusw1
 36305  01364C  0EFC               	movlw	-4
 36306  01364E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36307  013654  0EFD               	movlw	-3
 36308  013656  0060  F033  FFE3   	movff	btemp+11,plusw1
 36309  01365C                     l13648:
 36310                           
 36311                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 36312  01365C  0E00               	movlw	0
 36313  01365E  6EE6               	movwf	postinc1,c
 36314  013660  0E00               	movlw	0
 36315  013662  6EE6               	movwf	postinc1,c
 36316  013664  0E61               	movlw	97
 36317  013666  6EE6               	movwf	postinc1,c
 36318  013668  0E45               	movlw	69
 36319  01366A  6EE6               	movwf	postinc1,c
 36320                           
 36321                           ;stkvar	_adj @ sp[(-10)+0]
 36322  01366C  0EF6               	movlw	-10
 36323  01366E  006F FF8F FFE6     	movff	plusw1,postinc1
 36324  013674  006F FF8F FFE6     	movff	plusw1,postinc1
 36325  01367A  006F FF8F FFE6     	movff	plusw1,postinc1
 36326  013680  006F FF8F FFE6     	movff	plusw1,postinc1
 36327  013686  EE21  F343         	lfsr	2,_C+68	;volatile
 36328  01368A  006F FF7B FFE6     	movff	postinc2,postinc1
 36329  013690  006F FF7B FFE6     	movff	postinc2,postinc1
 36330  013696  006F FF7B FFE6     	movff	postinc2,postinc1
 36331  01369C  006F FF7B FFE6     	movff	postinc2,postinc1
 36332  0136A2  EC5A  F09F         	call	___flmul	;wreg free
 36333  0136A6  0060  F007  FFE6   	movff	btemp,postinc1
 36334  0136AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36335  0136B2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36336  0136B8  0060  F013  FFE6   	movff	btemp+3,postinc1
 36337  0136BE  EC4D  F0A7         	call	___fldiv	;wreg free
 36338  0136C2  0060  F007  FFE6   	movff	btemp,postinc1
 36339  0136C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36340  0136CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36341  0136D4  0060  F013  FFE6   	movff	btemp+3,postinc1
 36342  0136DA  0E8F               	movlw	low (_C+144)
 36343  0136DC  6EE6               	movwf	postinc1,c
 36344  0136DE  0E07               	movlw	high (_C+144)
 36345  0136E0  6EE6               	movwf	postinc1,c
 36346  0136E2  ECA9  F0DC         	call	___asfladd	;wreg free
 36347                           
 36348                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 36349  0136E6  EE21  F38F         	lfsr	2,_C+144	;volatile
 36350  0136EA  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 36351  0136F0  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 36352  0136F6  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 36353  0136FC  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 36354                           
 36355                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 36356  013702  EE21  F39B         	lfsr	2,_C+156	;volatile
 36357  013706  006F FF7B FFE6     	movff	postinc2,postinc1
 36358  01370C  006F FF7B FFE6     	movff	postinc2,postinc1
 36359  013712  006F FF7B FFE6     	movff	postinc2,postinc1
 36360  013718  006F FF7B FFE6     	movff	postinc2,postinc1
 36361  01371E  EE21  F38B         	lfsr	2,_C+140	;volatile
 36362  013722  006F FF7B FFE6     	movff	postinc2,postinc1
 36363  013728  006F FF7B FFE6     	movff	postinc2,postinc1
 36364  01372E  006F FF7B FFE6     	movff	postinc2,postinc1
 36365  013734  006F FF7B FFE6     	movff	postinc2,postinc1
 36366  01373A  EC35  F0CB         	call	___flge	;wreg free
 36367  01373E  B001               	btfsc	btemp& (0+255),0,c
 36368  013740  D00E               	goto	l13656
 36369                           
 36370                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 36371  013742  EE21  F38B         	lfsr	2,_C+140	;volatile
 36372  013746  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 36373  01374C  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 36374  013752  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 36375  013758  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 36376  01375E                     l13656:
 36377                           
 36378                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 36379  01375E  0ECD               	movlw	205
 36380  013760  6EE6               	movwf	postinc1,c
 36381  013762  0ECC               	movlw	204
 36382  013764  6EE6               	movwf	postinc1,c
 36383  013766  0ECC               	movlw	204
 36384  013768  6EE6               	movwf	postinc1,c
 36385  01376A  0E3D               	movlw	61
 36386  01376C  6EE6               	movwf	postinc1,c
 36387  01376E  EE21  F39B         	lfsr	2,_C+156	;volatile
 36388  013772  006F FF7B FFE6     	movff	postinc2,postinc1
 36389  013778  006F FF7B FFE6     	movff	postinc2,postinc1
 36390  01377E  006F FF7B FFE6     	movff	postinc2,postinc1
 36391  013784  006F FF7B FFE6     	movff	postinc2,postinc1
 36392  01378A  EC35  F0CB         	call	___flge	;wreg free
 36393  01378E  B001               	btfsc	btemp& (0+255),0,c
 36394  013790  D010               	goto	l13660
 36395                           
 36396                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 36397  013792  0ECD               	movlw	205
 36398  013794  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 36399  01379A  0ECC               	movlw	204
 36400  01379C  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 36401  0137A2  0ECC               	movlw	204
 36402  0137A4  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 36403  0137AA  0E3D               	movlw	61
 36404  0137AC  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 36405  0137B2                     l13660:
 36406                           
 36407                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 36408  0137B2  0E00               	movlw	0
 36409  0137B4  6EE6               	movwf	postinc1,c
 36410  0137B6  0E00               	movlw	0
 36411  0137B8  6EE6               	movwf	postinc1,c
 36412  0137BA  0E61               	movlw	97
 36413  0137BC  6EE6               	movwf	postinc1,c
 36414  0137BE  0E45               	movlw	69
 36415  0137C0  6EE6               	movwf	postinc1,c
 36416  0137C2  EE21  F347         	lfsr	2,_C+72	;volatile
 36417  0137C6  006F FF7B FFE6     	movff	postinc2,postinc1
 36418  0137CC  006F FF7B FFE6     	movff	postinc2,postinc1
 36419  0137D2  006F FF7B FFE6     	movff	postinc2,postinc1
 36420  0137D8  006F FF7B FFE6     	movff	postinc2,postinc1
 36421  0137DE  EC4D  F0A7         	call	___fldiv	;wreg free
 36422  0137E2  0060  F007  FFE6   	movff	btemp,postinc1
 36423  0137E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36424  0137EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36425  0137F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 36426  0137FA  0E93               	movlw	low (_C+148)
 36427  0137FC  6EE6               	movwf	postinc1,c
 36428  0137FE  0E07               	movlw	high (_C+148)
 36429  013800  6EE6               	movwf	postinc1,c
 36430  013802  ECA9  F0DC         	call	___asfladd	;wreg free
 36431                           
 36432                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 36433  013806  0E00               	movlw	0
 36434  013808  6EE6               	movwf	postinc1,c
 36435  01380A  0E00               	movlw	0
 36436  01380C  6EE6               	movwf	postinc1,c
 36437  01380E  0E61               	movlw	97
 36438  013810  6EE6               	movwf	postinc1,c
 36439  013812  0E45               	movlw	69
 36440  013814  6EE6               	movwf	postinc1,c
 36441  013816  EE21  F37B         	lfsr	2,_C+124	;volatile
 36442  01381A  006F FF7B FFE6     	movff	postinc2,postinc1
 36443  013820  006F FF7B FFE6     	movff	postinc2,postinc1
 36444  013826  006F FF7B FFE6     	movff	postinc2,postinc1
 36445  01382C  006F FF7B FFE6     	movff	postinc2,postinc1
 36446  013832  EC4D  F0A7         	call	___fldiv	;wreg free
 36447  013836  0060  F007  FFE6   	movff	btemp,postinc1
 36448  01383C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36449  013842  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36450  013848  0060  F013  FFE6   	movff	btemp+3,postinc1
 36451  01384E  0EA7               	movlw	low (_C+168)
 36452  013850  6EE6               	movwf	postinc1,c
 36453  013852  0E07               	movlw	high (_C+168)
 36454  013854  6EE6               	movwf	postinc1,c
 36455  013856  ECA9  F0DC         	call	___asfladd	;wreg free
 36456                           
 36457                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 36458  01385A  0E00               	movlw	0
 36459  01385C  6EE6               	movwf	postinc1,c
 36460  01385E  0E00               	movlw	0
 36461  013860  6EE6               	movwf	postinc1,c
 36462  013862  0E61               	movlw	97
 36463  013864  6EE6               	movwf	postinc1,c
 36464  013866  0E45               	movlw	69
 36465  013868  6EE6               	movwf	postinc1,c
 36466  01386A  EE21  F377         	lfsr	2,_C+120	;volatile
 36467  01386E  006F FF7B FFE6     	movff	postinc2,postinc1
 36468  013874  006F FF7B FFE6     	movff	postinc2,postinc1
 36469  01387A  006F FF7B FFE6     	movff	postinc2,postinc1
 36470  013880  006F FF7B FFE6     	movff	postinc2,postinc1
 36471  013886  EC4D  F0A7         	call	___fldiv	;wreg free
 36472  01388A  0060  F007  FFE6   	movff	btemp,postinc1
 36473  013890  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36474  013896  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36475  01389C  0060  F013  FFE6   	movff	btemp+3,postinc1
 36476  0138A2  0EAB               	movlw	low (_C+172)
 36477  0138A4  6EE6               	movwf	postinc1,c
 36478  0138A6  0E07               	movlw	high (_C+172)
 36479  0138A8  6EE6               	movwf	postinc1,c
 36480  0138AA  ECA9  F0DC         	call	___asfladd	;wreg free
 36481                           
 36482                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 36483  0138AE  0E00               	movlw	0
 36484  0138B0  6EE6               	movwf	postinc1,c
 36485  0138B2  0E00               	movlw	0
 36486  0138B4  6EE6               	movwf	postinc1,c
 36487  0138B6  0E61               	movlw	97
 36488  0138B8  6EE6               	movwf	postinc1,c
 36489  0138BA  0E45               	movlw	69
 36490  0138BC  6EE6               	movwf	postinc1,c
 36491  0138BE  EE21  F373         	lfsr	2,_C+116	;volatile
 36492  0138C2  006F FF7B FFE6     	movff	postinc2,postinc1
 36493  0138C8  006F FF7B FFE6     	movff	postinc2,postinc1
 36494  0138CE  006F FF7B FFE6     	movff	postinc2,postinc1
 36495  0138D4  006F FF7B FFE6     	movff	postinc2,postinc1
 36496  0138DA  EC4D  F0A7         	call	___fldiv	;wreg free
 36497  0138DE  0060  F007  FFE6   	movff	btemp,postinc1
 36498  0138E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36499  0138EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36500  0138F0  0060  F013  FFE6   	movff	btemp+3,postinc1
 36501  0138F6  0EAF               	movlw	low (_C+176)
 36502  0138F8  6EE6               	movwf	postinc1,c
 36503  0138FA  0E07               	movlw	high (_C+176)
 36504  0138FC  6EE6               	movwf	postinc1,c
 36505  0138FE  ECA9  F0DC         	call	___asfladd	;wreg free
 36506                           
 36507                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 36508  013902  EE21  F37F         	lfsr	2,_C+128	;volatile
 36509  013906  006F FF7B FFE6     	movff	postinc2,postinc1
 36510  01390C  006F FF7B FFE6     	movff	postinc2,postinc1
 36511  013912  006F FF7B FFE6     	movff	postinc2,postinc1
 36512  013918  006F FF7B FFE6     	movff	postinc2,postinc1
 36513  01391E  0E00               	movlw	0
 36514  013920  6EE6               	movwf	postinc1,c
 36515  013922  0E00               	movlw	0
 36516  013924  6EE6               	movwf	postinc1,c
 36517  013926  0E00               	movlw	0
 36518  013928  6EE6               	movwf	postinc1,c
 36519  01392A  0E00               	movlw	0
 36520  01392C  6EE6               	movwf	postinc1,c
 36521  01392E  EC35  F0CB         	call	___flge	;wreg free
 36522  013932  B001               	btfsc	btemp& (0+255),0,c
 36523  013934  D02A               	goto	l13666
 36524                           
 36525                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 36526  013936  0E00               	movlw	0
 36527  013938  6EE6               	movwf	postinc1,c
 36528  01393A  0E00               	movlw	0
 36529  01393C  6EE6               	movwf	postinc1,c
 36530  01393E  0E61               	movlw	97
 36531  013940  6EE6               	movwf	postinc1,c
 36532  013942  0E45               	movlw	69
 36533  013944  6EE6               	movwf	postinc1,c
 36534  013946  EE21  F37F         	lfsr	2,_C+128	;volatile
 36535  01394A  006F FF7B FFE6     	movff	postinc2,postinc1
 36536  013950  006F FF7B FFE6     	movff	postinc2,postinc1
 36537  013956  006F FF7B FFE6     	movff	postinc2,postinc1
 36538  01395C  006F FF7B FFE6     	movff	postinc2,postinc1
 36539  013962  EC4D  F0A7         	call	___fldiv	;wreg free
 36540  013966  0060  F007  FFE6   	movff	btemp,postinc1
 36541  01396C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36542  013972  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36543  013978  0060  F013  FFE6   	movff	btemp+3,postinc1
 36544  01397E  0E9F               	movlw	low (_C+160)
 36545  013980  6EE6               	movwf	postinc1,c
 36546  013982  0E07               	movlw	high (_C+160)
 36547  013984  6EE6               	movwf	postinc1,c
 36548  013986  ECA9  F0DC         	call	___asfladd	;wreg free
 36549  01398A                     l13666:
 36550                           
 36551                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 36552  01398A  EE21  F37F         	lfsr	2,_C+128	;volatile
 36553  01398E  0E03               	movlw	3
 36554  013990  AEDB               	btfss	plusw2,7,c
 36555  013992  D038               	goto	l13670
 36556                           
 36557                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 36558  013994  0E00               	movlw	0
 36559  013996  6EE6               	movwf	postinc1,c
 36560  013998  0E00               	movlw	0
 36561  01399A  6EE6               	movwf	postinc1,c
 36562  01399C  0E61               	movlw	97
 36563  01399E  6EE6               	movwf	postinc1,c
 36564  0139A0  0E45               	movlw	69
 36565  0139A2  6EE6               	movwf	postinc1,c
 36566  0139A4  EE21  F37F         	lfsr	2,_C+128	;volatile
 36567  0139A8  006F FF7B FFE6     	movff	postinc2,postinc1
 36568  0139AE  006F FF7B FFE6     	movff	postinc2,postinc1
 36569  0139B4  006F FF7B FFE6     	movff	postinc2,postinc1
 36570  0139BA  006F FF7B FFE6     	movff	postinc2,postinc1
 36571  0139C0  EC4D  F0A7         	call	___fldiv	;wreg free
 36572  0139C4  0060  F007  FFE6   	movff	btemp,postinc1
 36573  0139CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36574  0139D0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36575  0139D6  0060  F013  FFE6   	movff	btemp+3,postinc1
 36576  0139DC  EC4D  F0D8         	call	_fabsf	;wreg free
 36577  0139E0  0060  F007  FFE6   	movff	btemp,postinc1
 36578  0139E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36579  0139EC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36580  0139F2  0060  F013  FFE6   	movff	btemp+3,postinc1
 36581  0139F8  0EA3               	movlw	low (_C+164)
 36582  0139FA  6EE6               	movwf	postinc1,c
 36583  0139FC  0E07               	movlw	high (_C+164)
 36584  0139FE  6EE6               	movwf	postinc1,c
 36585  013A00  ECA9  F0DC         	call	___asfladd	;wreg free
 36586  013A04                     l13670:
 36587                           
 36588                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 36589  013A04  0E00               	movlw	0
 36590  013A06  6EE6               	movwf	postinc1,c
 36591  013A08  0E00               	movlw	0
 36592  013A0A  6EE6               	movwf	postinc1,c
 36593  013A0C  0EC8               	movlw	200
 36594  013A0E  6EE6               	movwf	postinc1,c
 36595  013A10  0E42               	movlw	66
 36596  013A12  6EE6               	movwf	postinc1,c
 36597  013A14  EE21  F38B         	lfsr	2,_C+140	;volatile
 36598  013A18  006F FF7B FFE6     	movff	postinc2,postinc1
 36599  013A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 36600  013A24  006F FF7B FFE6     	movff	postinc2,postinc1
 36601  013A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 36602  013A30  EE21  F39B         	lfsr	2,_C+156	;volatile
 36603  013A34  006F FF7B FFE6     	movff	postinc2,postinc1
 36604  013A3A  006F FF7B FFE6     	movff	postinc2,postinc1
 36605  013A40  006F FF7B FFE6     	movff	postinc2,postinc1
 36606  013A46  006F FF7B FFE6     	movff	postinc2,postinc1
 36607  013A4C  EC4D  F0A7         	call	___fldiv	;wreg free
 36608  013A50  0060  F007  FFE6   	movff	btemp,postinc1
 36609  013A56  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36610  013A5C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36611  013A62  0060  F013  FFE6   	movff	btemp+3,postinc1
 36612  013A68  EC5A  F09F         	call	___flmul	;wreg free
 36613  013A6C  0060  F007  FFE6   	movff	btemp,postinc1
 36614  013A72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36615  013A78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36616  013A7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 36617  013A84  EC7C  F0CA         	call	___fltol	;wreg free
 36618  013A88  0060  F004  F00B   	movff	btemp,btemp+10
 36619  013A8E  0060  F008  F00C   	movff	btemp+1,btemp+11
 36620  013A94  0E01               	movlw	1
 36621  013A96  260B               	addwf	(btemp+10)^0,f,c
 36622  013A98  0E00               	movlw	0
 36623  013A9A  220C               	addwfc	(btemp+11)^0,f,c
 36624  013A9C  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 36625  013AA2  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 36626                           
 36627                           ;bsoc.c: 76:  if (C.soc > 100)
 36628  013AA8  EE21  F3B5         	lfsr	2,_C+182	;volatile
 36629  013AAC  0E01               	movlw	1
 36630  013AAE  50DB               	movf	plusw2,w,c
 36631  013AB0  E104               	bnz	u1311_20
 36632  013AB2  0E65               	movlw	101
 36633  013AB4  5CDE               	subwf	postinc2,w,c
 36634  013AB6  A0D8               	btfss	status,0,c
 36635  013AB8  D008               	goto	l13676
 36636  013ABA                     u1311_20:
 36637                           
 36638                           ;bsoc.c: 77:   C.soc = 100;
 36639  013ABA  0E64               	movlw	100
 36640  013ABC  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 36641  013AC2  0E00               	movlw	0
 36642  013AC4  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 36643  013ACA                     l13676:
 36644                           
 36645                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 36646  013ACA  EE21  F343         	lfsr	2,_C+68	;volatile
 36647  013ACE  0E03               	movlw	3
 36648  013AD0  AEDB               	btfss	plusw2,7,c
 36649  013AD2  D047               	goto	l2185
 36650                           
 36651                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 36652  013AD4  EE21  F343         	lfsr	2,_C+68	;volatile
 36653  013AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 36654  013ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 36655  013AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 36656  013AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 36657  013AF0  EE21  F39B         	lfsr	2,_C+156	;volatile
 36658  013AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 36659  013AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 36660  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 36661  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 36662  013B0C  EC4D  F0A7         	call	___fldiv	;wreg free
 36663  013B10  0060  F007  FFE6   	movff	btemp,postinc1
 36664  013B16  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36665  013B1C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36666  013B22  0060  F013  FFE6   	movff	btemp+3,postinc1
 36667  013B28  EC65  F0E0         	call	___flneg	;wreg free
 36668  013B2C  0060  F007  FFE6   	movff	btemp,postinc1
 36669  013B32  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36670  013B38  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36671  013B3E  0060  F013  FFE6   	movff	btemp+3,postinc1
 36672  013B44  EC7C  F0CA         	call	___fltol	;wreg free
 36673  013B48  0060  F004  F00B   	movff	btemp,btemp+10
 36674  013B4E  0060  F008  F00C   	movff	btemp+1,btemp+11
 36675  013B54  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 36676  013B5A  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 36677                           
 36678                           ;bsoc.c: 81:  } else {
 36679  013B60  D008               	goto	l13680
 36680  013B62                     l2185:
 36681                           
 36682                           ;bsoc.c: 82:   C.runtime = 99;
 36683  013B62  0E63               	movlw	99
 36684  013B64  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 36685  013B6A  0E00               	movlw	0
 36686  013B6C  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 36687  013B72                     l13680:
 36688                           
 36689                           ;bsoc.c: 84:  if (C.runtime > 99)
 36690  013B72  EE21  F3B3         	lfsr	2,_C+180	;volatile
 36691  013B76  0E01               	movlw	1
 36692  013B78  50DB               	movf	plusw2,w,c
 36693  013B7A  E104               	bnz	u1313_20
 36694  013B7C  0E64               	movlw	100
 36695  013B7E  5CDE               	subwf	postinc2,w,c
 36696  013B80  A0D8               	btfss	status,0,c
 36697  013B82  D008               	goto	l13684
 36698  013B84                     u1313_20:
 36699                           
 36700                           ;bsoc.c: 85:   C.runtime = 99;
 36701  013B84  0E63               	movlw	99
 36702  013B86  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 36703  013B8C  0E00               	movlw	0
 36704  013B8E  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 36705  013B94                     l13684:
 36706                           
 36707                           ;bsoc.c: 87:  V.lowint_count++;
 36708  013B94  0E01               	movlw	1
 36709  013B96  0101               	movlb	1	; () banked
 36710  013B98  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 36711  013B9A  0E00               	movlw	0
 36712  013B9C  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 36713  013B9E  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 36714  013BA0  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 36715                           
 36716                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 36717  013BA2  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 36718  013BA4  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 36719  013BA6  A4D8               	btfss	status,2,c
 36720  013BA8  D177               	goto	l13696
 36721                           
 36722                           ; BSR set to: 1
 36723  013BAA  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 36724  013BAC  B4D8               	btfsc	status,2,c
 36725  013BAE  D174               	goto	l13696
 36726                           
 36727                           ; BSR set to: 1
 36728                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 36729  013BB0  EC0C  F0E7         	call	_port_data_dma_ptr	;wreg free
 36730                           
 36731                           ;stkvar	_log_ptr @ sp[(-6)+4]
 36732  013BB4  0EFF               	movlw	-1
 36733  013BB6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 36734  013BBC  0EFE               	movlw	-2
 36735  013BBE  0060  F007  FFE3   	movff	btemp,plusw1
 36736                           
 36737                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 36738  013BC4  EE21  F3B9         	lfsr	2,_C+186	;volatile
 36739  013BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 36740  013BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 36741  013BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 36742  013BDA  006F FF7B FFE6     	movff	postinc2,postinc1
 36743  013BE0  EE21  F3BD         	lfsr	2,_C+190	;volatile
 36744  013BE4  006F FF7B FFE6     	movff	postinc2,postinc1
 36745  013BEA  006F FF7B FFE6     	movff	postinc2,postinc1
 36746  013BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 36747  013BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 36748  013BFC  EE21  F39B         	lfsr	2,_C+156	;volatile
 36749  013C00  006F FF7B FFE6     	movff	postinc2,postinc1
 36750  013C06  006F FF7B FFE6     	movff	postinc2,postinc1
 36751  013C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 36752  013C12  006F FF7B FFE6     	movff	postinc2,postinc1
 36753  013C18  EE22  F026         	lfsr	2,_C+295	;volatile
 36754  013C1C  006F FF7B FFE6     	movff	postinc2,postinc1
 36755  013C22  006F FF7B FFE6     	movff	postinc2,postinc1
 36756  013C28  006F FF7B FFE6     	movff	postinc2,postinc1
 36757  013C2E  006F FF7B FFE6     	movff	postinc2,postinc1
 36758  013C34  EE22  F022         	lfsr	2,_C+291	;volatile
 36759  013C38  006F FF7B FFE6     	movff	postinc2,postinc1
 36760  013C3E  006F FF7B FFE6     	movff	postinc2,postinc1
 36761  013C44  006F FF7B FFE6     	movff	postinc2,postinc1
 36762  013C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 36763  013C50  EE22  F021         	lfsr	2,_C+290	;volatile
 36764  013C54  50DF               	movf	indf2,w,c
 36765  013C56  6EE6               	movwf	postinc1,c
 36766  013C58  0E00               	movlw	0
 36767  013C5A  6EE6               	movwf	postinc1,c
 36768  013C5C  ECF0  F0E6         	call	_get_ac_charger_relay	;wreg free
 36769  013C60  5001               	movf	btemp^0,w,c
 36770  013C62  6EE6               	movwf	postinc1,c
 36771  013C64  0E00               	movlw	0
 36772  013C66  6EE6               	movwf	postinc1,c
 36773  013C68  EE21  F367         	lfsr	2,_C+104	;volatile
 36774  013C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 36775  013C72  006F FF7B FFE6     	movff	postinc2,postinc1
 36776  013C78  006F FF7B FFE6     	movff	postinc2,postinc1
 36777  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 36778  013C84  EE21  F387         	lfsr	2,_C+136	;volatile
 36779  013C88  006F FF7B FFE6     	movff	postinc2,postinc1
 36780  013C8E  006F FF7B FFE6     	movff	postinc2,postinc1
 36781  013C94  006F FF7B FFE6     	movff	postinc2,postinc1
 36782  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 36783  013CA0  EE21  F3B3         	lfsr	2,_C+180	;volatile
 36784  013CA4  006F FF78  F00B    	movff	postinc2,btemp+10
 36785  013CAA  006F FF74  F00C    	movff	postdec2,btemp+11
 36786  013CB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 36787  013CB6  0060  F033  FFE6   	movff	btemp+11,postinc1
 36788  013CBC  EE21  F3B5         	lfsr	2,_C+182	;volatile
 36789  013CC0  006F FF78  F00B    	movff	postinc2,btemp+10
 36790  013CC6  006F FF74  F00C    	movff	postdec2,btemp+11
 36791  013CCC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 36792  013CD2  0060  F033  FFE6   	movff	btemp+11,postinc1
 36793  013CD8  EE21  F393         	lfsr	2,_C+148	;volatile
 36794  013CDC  006F FF7B FFE6     	movff	postinc2,postinc1
 36795  013CE2  006F FF7B FFE6     	movff	postinc2,postinc1
 36796  013CE8  006F FF7B FFE6     	movff	postinc2,postinc1
 36797  013CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 36798  013CF4  EE21  F38F         	lfsr	2,_C+144	;volatile
 36799  013CF8  006F FF7B FFE6     	movff	postinc2,postinc1
 36800  013CFE  006F FF7B FFE6     	movff	postinc2,postinc1
 36801  013D04  006F FF7B FFE6     	movff	postinc2,postinc1
 36802  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 36803  013D10  EE21  F377         	lfsr	2,_C+120	;volatile
 36804  013D14  006F FF7B FFE6     	movff	postinc2,postinc1
 36805  013D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 36806  013D20  006F FF7B FFE6     	movff	postinc2,postinc1
 36807  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 36808  013D2C  EE21  F373         	lfsr	2,_C+116	;volatile
 36809  013D30  006F FF7B FFE6     	movff	postinc2,postinc1
 36810  013D36  006F FF7B FFE6     	movff	postinc2,postinc1
 36811  013D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 36812  013D42  006F FF7B FFE6     	movff	postinc2,postinc1
 36813  013D48  EE21  F37B         	lfsr	2,_C+124	;volatile
 36814  013D4C  006F FF7B FFE6     	movff	postinc2,postinc1
 36815  013D52  006F FF7B FFE6     	movff	postinc2,postinc1
 36816  013D58  006F FF7B FFE6     	movff	postinc2,postinc1
 36817  013D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 36818  013D64  EE21  F37F         	lfsr	2,_C+128	;volatile
 36819  013D68  006F FF7B FFE6     	movff	postinc2,postinc1
 36820  013D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 36821  013D74  006F FF7B FFE6     	movff	postinc2,postinc1
 36822  013D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 36823  013D80  EE21  F347         	lfsr	2,_C+72	;volatile
 36824  013D84  006F FF7B FFE6     	movff	postinc2,postinc1
 36825  013D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 36826  013D90  006F FF7B FFE6     	movff	postinc2,postinc1
 36827  013D96  006F FF7B FFE6     	movff	postinc2,postinc1
 36828  013D9C  EE21  F343         	lfsr	2,_C+68	;volatile
 36829  013DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 36830  013DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 36831  013DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 36832  013DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 36833  013DB8  EE21  F363         	lfsr	2,_C+100	;volatile
 36834  013DBC  006F FF7B FFE6     	movff	postinc2,postinc1
 36835  013DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 36836  013DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 36837  013DCE  006F FF7B FFE6     	movff	postinc2,postinc1
 36838  013DD4  EE21  F34B         	lfsr	2,_C+76	;volatile
 36839  013DD8  006F FF7B FFE6     	movff	postinc2,postinc1
 36840  013DDE  006F FF7B FFE6     	movff	postinc2,postinc1
 36841  013DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 36842  013DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 36843  013DF0  EE21  F34F         	lfsr	2,_C+80	;volatile
 36844  013DF4  006F FF7B FFE6     	movff	postinc2,postinc1
 36845  013DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 36846  013E00  006F FF7B FFE6     	movff	postinc2,postinc1
 36847  013E06  006F FF7B FFE6     	movff	postinc2,postinc1
 36848  013E0C  EE21  F353         	lfsr	2,_C+84	;volatile
 36849  013E10  006F FF7B FFE6     	movff	postinc2,postinc1
 36850  013E16  006F FF7B FFE6     	movff	postinc2,postinc1
 36851  013E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 36852  013E22  006F FF7B FFE6     	movff	postinc2,postinc1
 36853  013E28  0060  F623  FFE6   	movff	_V+129,postinc1
 36854  013E2E  0060  F627  FFE6   	movff	_V+130,postinc1
 36855  013E34  0060  F62B  FFE6   	movff	_V+131,postinc1
 36856  013E3A  0060  F62F  FFE6   	movff	_V+132,postinc1
 36857  013E40  0E32               	movlw	50
 36858  013E42  6EE6               	movwf	postinc1,c
 36859  013E44  0E00               	movlw	0
 36860  013E46  6EE6               	movwf	postinc1,c
 36861  013E48  0ECF               	movlw	low STR_80
 36862  013E4A  6EE6               	movwf	postinc1,c
 36863  013E4C  0EFA               	movlw	high STR_80
 36864  013E4E  6EE6               	movwf	postinc1,c
 36865                           
 36866                           ;stkvar	_log_ptr @ sp[(-98)+4]
 36867  013E50  0EA2               	movlw	-94
 36868  013E52  006F FF8F FFE6     	movff	plusw1,postinc1
 36869  013E58  006F FF8F FFE6     	movff	plusw1,postinc1
 36870  013E5E  0E5E               	movlw	94
 36871  013E60  6EE6               	movwf	postinc1,c
 36872  013E62  EC6E  F0D2         	call	_sprintf	;wreg free
 36873                           
 36874                           ; BSR set to: 0
 36875                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 36876  013E66  0E7D               	movlw	125
 36877  013E68  6EE6               	movwf	postinc1,c
 36878  013E6A  0E00               	movlw	0
 36879  013E6C  6EE6               	movwf	postinc1,c
 36880  013E6E  0E0A               	movlw	10
 36881  013E70  6EE6               	movwf	postinc1,c
 36882  013E72  ECBE  F0E1         	call	_StartTimer	;wreg free
 36883                           
 36884                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 36885                           ;stkvar	_log_ptr @ sp[(-6)+4]
 36886  013E76  0EFE               	movlw	-2
 36887  013E78  006F FF8F FFE6     	movff	plusw1,postinc1
 36888  013E7E  006F FF8F FFE6     	movff	plusw1,postinc1
 36889  013E84  ECF6  F0D9         	call	_strlen	;wreg free
 36890  013E88  0060  F007  FFE6   	movff	btemp,postinc1
 36891  013E8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36892  013E94  ECCB  F0DF         	call	_send_port_data_dma	;wreg free
 36893  013E98                     l13696:
 36894                           
 36895                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 36896  013E98  0E09               	movlw	9
 36897  013E9A  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 36898  013E9C  D001               	goto	l2189
 36899                           
 36900                           ;bsoc.c: 102:   log_update_wait = 0;
 36901  013E9E  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 36902  013EA0                     l2189:
 36903                           
 36904                           ;bsoc.c: 104:  C.update = 0;
 36905  013EA0  0E00               	movlw	0
 36906  013EA2  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 36907                           
 36908                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 36909  013EA8  92BE               	bcf	190,1,c	;volatile
 36910                           
 36911                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 36912  013EAA  0EFA               	movlw	250
 36913  013EAC  26E1               	addwf	fsr1l,f,c
 36914  013EAE  0EFF               	movlw	255
 36915  013EB0  22E2               	addwfc	fsr1h,f,c
 36916  013EB2  0012               	return		;funcret
 36917  013EB4                     __end_of_calc_bsoc:
 36918                           	opt callstack 0
 36919                           
 36920 ;; *************** function _send_port_data_dma *****************
 36921 ;; Defined at:
 36922 ;;		line 398 in file "eadog.c"
 36923 ;; Parameters:    Size  Location     Type
 36924 ;;  dsize           2  [STACK] unsigned short 
 36925 ;; Auto vars:     Size  Location     Type
 36926 ;;		None
 36927 ;; Return value:  Size  Location     Type
 36928 ;;                  1  [STACK] void 
 36929 ;; Registers used:
 36930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36931 ;; Tracked objects:
 36932 ;;		On entry : 0/0
 36933 ;;		On exit  : 3F/3B
 36934 ;;		Unchanged: 0/0
 36935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36940 ;;Total ram usage:        0 bytes
 36941 ;; Hardware stack levels used:    1
 36942 ;; Hardware stack levels required when called:    3
 36943 ;; This function calls:
 36944 ;;		Nothing
 36945 ;; This function is called by:
 36946 ;;		_calc_bsoc
 36947 ;; This function uses a reentrant model
 36948 ;;
 36949                           
 36950                           	psect	text167
 36951  01BF96                     __ptext167:
 36952                           	opt callstack 0
 36953  01BF96                     _send_port_data_dma:
 36954                           	opt callstack 10
 36955                           
 36956                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 36957                           ;stkvar	_dsize @ sp[(0)+-2]
 36958                           
 36959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36960                           ;incstack = 0
 36961  01BF96  0EFE               	movlw	-2
 36962  01BF98  04E3               	decf	plusw1,w,c
 36963  01BF9A  0EFF               	movlw	-1
 36964  01BF9C  006F FF8C  F001    	movff	plusw1,btemp
 36965  01BFA2  0E02               	movlw	2
 36966  01BFA4  5A01               	subwfb	btemp^0,f,c
 36967  01BFA6  A0D8               	btfss	status,0,c
 36968  01BFA8  D00C               	goto	l10456
 36969                           
 36970                           ;eadog.c: 401:   dsize = 512;
 36971  01BFAA  0E00               	movlw	0
 36972  01BFAC  6E0B               	movwf	(btemp+10)^0,c
 36973  01BFAE  0E02               	movlw	2
 36974  01BFB0  6E0C               	movwf	(btemp+11)^0,c
 36975                           
 36976                           ;stkvar	_dsize @ sp[(0)+-2]
 36977  01BFB2  0EFE               	movlw	-2
 36978  01BFB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36979  01BFBA  0EFF               	movlw	-1
 36980  01BFBC  0060  F033  FFE3   	movff	btemp+11,plusw1
 36981  01BFC2                     l10456:
 36982                           
 36983                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 36984  01BFC2  013B               	movlb	59	; () banked
 36985  01BFC4  9FDC               	bcf	220,7,b	;volatile
 36986                           
 36987                           ; BSR set to: 59
 36988                           ;eadog.c: 404:  DMA2SSZ = dsize;
 36989                           ;stkvar	_dsize @ sp[(0)+-2]
 36990  01BFC6  0EFE               	movlw	-2
 36991  01BFC8  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 36992  01BFCE  0EFF               	movlw	-1
 36993  01BFD0  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 36994                           
 36995                           ; BSR set to: 59
 36996                           ;eadog.c: 405:  DMA2DSZ = 1;
 36997  01BFD6  0E00               	movlw	0
 36998  01BFD8  6FCF               	movwf	207,b	;volatile
 36999  01BFDA  0E01               	movlw	1
 37000  01BFDC  6FCE               	movwf	206,b	;volatile
 37001                           
 37002                           ; BSR set to: 59
 37003                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 37004  01BFDE  8FDC               	bsf	220,7,b	;volatile
 37005                           
 37006                           ; BSR set to: 59
 37007                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 37008  01BFE0  8DDC               	bsf	220,6,b	;volatile
 37009                           
 37010                           ; BSR set to: 59
 37011                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37012  01BFE2  52E5               	movf	postdec1,f,c
 37013  01BFE4  52E5               	movf	postdec1,f,c
 37014  01BFE6  0012               	return		;funcret
 37015  01BFE8                     __end_of_send_port_data_dma:
 37016                           	opt callstack 0
 37017                           
 37018 ;; *************** function _port_data_dma_ptr *****************
 37019 ;; Defined at:
 37020 ;;		line 413 in file "eadog.c"
 37021 ;; Parameters:    Size  Location     Type
 37022 ;;		None
 37023 ;; Auto vars:     Size  Location     Type
 37024 ;;		None
 37025 ;; Return value:  Size  Location     Type
 37026 ;;                  2  [STACK] PTR unsigned char 
 37027 ;; Registers used:
 37028 ;;		wreg, status,2, status,0, btemp, btemp+1
 37029 ;; Tracked objects:
 37030 ;;		On entry : 3F/1
 37031 ;;		On exit  : 0/0
 37032 ;;		Unchanged: 0/0
 37033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37038 ;;Total ram usage:        0 bytes
 37039 ;; Hardware stack levels used:    1
 37040 ;; Hardware stack levels required when called:    3
 37041 ;; This function calls:
 37042 ;;		Nothing
 37043 ;; This function is called by:
 37044 ;;		_calc_bsoc
 37045 ;; This function uses a reentrant model
 37046 ;;
 37047                           
 37048                           	psect	text168
 37049  01CE18                     __ptext168:
 37050                           	opt callstack 0
 37051  01CE18                     _port_data_dma_ptr:
 37052                           	opt callstack 10
 37053                           
 37054                           ;eadog.c: 415:  return port_data;
 37055                           
 37056                           ; BSR set to: 59
 37057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37058                           ;incstack = 0
 37059  01CE18  0EFF               	movlw	low _port_data
 37060  01CE1A  6E01               	movwf	btemp^0,c
 37061  01CE1C  0E04               	movlw	high _port_data
 37062  01CE1E  6E02               	movwf	(btemp+1)^0,c
 37063                           
 37064                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37065  01CE20  0012               	return		;funcret
 37066  01CE22                     __end_of_port_data_dma_ptr:
 37067                           	opt callstack 0
 37068                           
 37069 ;; *************** function ___asfladd *****************
 37070 ;; Defined at:
 37071 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 37072 ;; Parameters:    Size  Location     Type
 37073 ;;  f1p             2  [STACK] PTR 
 37074 ;;		 -> C(299), 
 37075 ;;  f2              4  [STACK] PTR 
 37076 ;; Auto vars:     Size  Location     Type
 37077 ;;		None
 37078 ;; Return value:  Size  Location     Type
 37079 ;;                  4  [STACK] PTR 
 37080 ;; Registers used:
 37081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 37082 ;; Tracked objects:
 37083 ;;		On entry : 0/0
 37084 ;;		On exit  : 0/0
 37085 ;;		Unchanged: 0/0
 37086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37091 ;;Total ram usage:        0 bytes
 37092 ;; Hardware stack levels used:    1
 37093 ;; Hardware stack levels required when called:    4
 37094 ;; This function calls:
 37095 ;;		___fladd
 37096 ;; This function is called by:
 37097 ;;		_calc_bsoc
 37098 ;; This function uses a reentrant model
 37099 ;;
 37100                           
 37101                           	psect	text169
 37102  01B952                     __ptext169:
 37103                           	opt callstack 0
 37104  01B952                     ___asfladd:
 37105                           	opt callstack 9
 37106                           
 37107                           ;	Return value of ___asfladd is never used
 37108                           ;stkvar	_f2 @ sp[(0)+-6]
 37109                           
 37110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37111                           ;incstack = 0
 37112  01B952  0EFA               	movlw	-6
 37113  01B954  006F FF8F FFE6     	movff	plusw1,postinc1
 37114  01B95A  006F FF8F FFE6     	movff	plusw1,postinc1
 37115  01B960  006F FF8F FFE6     	movff	plusw1,postinc1
 37116  01B966  006F FF8F FFE6     	movff	plusw1,postinc1
 37117                           
 37118                           ;stkvar	_f1p @ sp[(-4)+-2]
 37119  01B96C  0EFA               	movlw	-6
 37120  01B96E  006F FF8F FFD9     	movff	plusw1,fsr2l
 37121  01B974  0EFB               	movlw	-5
 37122  01B976  006F FF8F FFDA     	movff	plusw1,fsr2h
 37123  01B97C  006F FF7B FFE6     	movff	postinc2,postinc1
 37124  01B982  006F FF7B FFE6     	movff	postinc2,postinc1
 37125  01B988  006F FF7B FFE6     	movff	postinc2,postinc1
 37126  01B98E  006F FF7B FFE6     	movff	postinc2,postinc1
 37127  01B994  EC6F  F0A3         	call	___fladd	;wreg free
 37128                           
 37129                           ;stkvar	_f1p @ sp[(0)+-2]
 37130  01B998  0EFE               	movlw	-2
 37131  01B99A  006F FF8F FFD9     	movff	plusw1,fsr2l
 37132  01B9A0  0EFF               	movlw	-1
 37133  01B9A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 37134  01B9A8  0060  F007  FFDE   	movff	btemp,postinc2
 37135  01B9AE  0060  F00B  FFDE   	movff	btemp+1,postinc2
 37136  01B9B4  0060  F00F  FFDE   	movff	btemp+2,postinc2
 37137  01B9BA  0060  F013  FFDE   	movff	btemp+3,postinc2
 37138                           
 37139                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 37140  01B9C0  0EFA               	movlw	250
 37141  01B9C2  26E1               	addwf	fsr1l,f,c
 37142  01B9C4  0EFF               	movlw	255
 37143  01B9C6  22E2               	addwfc	fsr1h,f,c
 37144  01B9C8  0012               	return		;funcret
 37145  01B9CA                     __end_of___asfladd:
 37146                           	opt callstack 0
 37147                           
 37148 ;; *************** function _INT0_ISR *****************
 37149 ;; Defined at:
 37150 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 37151 ;; Parameters:    Size  Location     Type
 37152 ;;		None
 37153 ;; Auto vars:     Size  Location     Type
 37154 ;;		None
 37155 ;; Return value:  Size  Location     Type
 37156 ;;                  1    wreg      void 
 37157 ;; Registers used:
 37158 ;;		wreg, status,2, status,0, pclath, tosl
 37159 ;; Tracked objects:
 37160 ;;		On entry : 0/0
 37161 ;;		On exit  : 0/0
 37162 ;;		Unchanged: 0/0
 37163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37168 ;;Total ram usage:        0 bytes
 37169 ;; Hardware stack levels used:    1
 37170 ;; Hardware stack levels required when called:    2
 37171 ;; This function calls:
 37172 ;;		_INT0_CallBack
 37173 ;; This function is called by:
 37174 ;;		Interrupt level 2
 37175 ;; This function uses a non-reentrant model
 37176 ;;
 37177                           
 37178                           	psect	text170
 37179  01CDF0                     __ptext170:
 37180                           	opt callstack 0
 37181  01CDF0                     _INT0_ISR:
 37182                           	opt callstack 2
 37183                           
 37184                           ;incstack = 0
 37185  01CDF0  EE14  F15E         	lfsr	1,___inthi_sp
 37186                           
 37187                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 37188  01CDF4  0139               	movlb	57	; () banked
 37189  01CDF6  91A1               	bcf	161,0,b	;volatile
 37190                           
 37191                           ; BSR set to: 57
 37192                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 37193  01CDF8  EC8E  F0E5         	call	_INT0_CallBack	;wreg free
 37194  01CDFC  0011               	retfie		f
 37195  01CDFE                     __end_of_INT0_ISR:
 37196                           	opt callstack 0
 37197                           
 37198 ;; *************** function _INT0_CallBack *****************
 37199 ;; Defined at:
 37200 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 37201 ;; Parameters:    Size  Location     Type
 37202 ;;		None
 37203 ;; Auto vars:     Size  Location     Type
 37204 ;;		None
 37205 ;; Return value:  Size  Location     Type
 37206 ;;                  1  [STACK] void 
 37207 ;; Registers used:
 37208 ;;		wreg, status,2, status,0, pclath, tosl
 37209 ;; Tracked objects:
 37210 ;;		On entry : 3F/39
 37211 ;;		On exit  : 0/0
 37212 ;;		Unchanged: 0/0
 37213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37218 ;;Total ram usage:        0 bytes
 37219 ;; Hardware stack levels used:    1
 37220 ;; Hardware stack levels required when called:    1
 37221 ;; This function calls:
 37222 ;;		Absolute function
 37223 ;;		_INT0_DefaultInterruptHandler
 37224 ;; This function is called by:
 37225 ;;		_INT0_ISR
 37226 ;; This function uses a reentrant model
 37227 ;;
 37228                           
 37229                           	psect	text171
 37230  01CB1C                     __ptext171:
 37231                           	opt callstack 0
 37232  01CB1C                     _INT0_CallBack:
 37233                           	opt callstack 2
 37234                           
 37235                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 37236                           
 37237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37238                           ;incstack = 0
 37239  01CB1C  0100               	movlb	0	; () banked
 37240  01CB1E  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 37241  01CB20  1194               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 37242  01CB22  1195               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 37243  01CB24  B4D8               	btfsc	status,2,c
 37244  01CB26  0012               	return	
 37245                           
 37246                           ; BSR set to: 0
 37247                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 37248  01CB28  D801               	call	u1048_48
 37249  01CB2A  0012               	return	
 37250  01CB2C                     u1048_48:
 37251  01CB2C  0005               	push	
 37252  01CB2E  6EFA               	movwf	pclath,c
 37253  01CB30  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 37254  01CB32  6EFD               	movwf	tosl,c
 37255  01CB34  5194               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 37256  01CB36  6EFE               	movwf	tosh,c
 37257  01CB38  5195               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 37258  01CB3A  6EFF               	movwf	tosu,c
 37259  01CB3C  50FA               	movf	pclath,w,c
 37260  01CB3E  0012               	return		;indir
 37261  01CB40                     __end_of_INT0_CallBack:
 37262                           	opt callstack 0
 37263                           
 37264 ;; *************** function _INT0_DefaultInterruptHandler *****************
 37265 ;; Defined at:
 37266 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 37267 ;; Parameters:    Size  Location     Type
 37268 ;;		None
 37269 ;; Auto vars:     Size  Location     Type
 37270 ;;		None
 37271 ;; Return value:  Size  Location     Type
 37272 ;;                  1  [STACK] void 
 37273 ;; Registers used:
 37274 ;;		None
 37275 ;; Tracked objects:
 37276 ;;		On entry : 3F/0
 37277 ;;		On exit  : 0/0
 37278 ;;		Unchanged: 0/0
 37279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37284 ;;Total ram usage:        0 bytes
 37285 ;; Hardware stack levels used:    1
 37286 ;; This function calls:
 37287 ;;		Nothing
 37288 ;; This function is called by:
 37289 ;;		_EXT_INT_Initialize
 37290 ;;		_INT0_CallBack
 37291 ;; This function uses a reentrant model
 37292 ;;
 37293                           
 37294                           	psect	text172
 37295  01CE92                     __ptext172:
 37296                           	opt callstack 0
 37297  01CE92                     _INT0_DefaultInterruptHandler:
 37298                           	opt callstack 2
 37299                           
 37300                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37301                           
 37302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37303                           ;incstack = 0
 37304  01CE92  0012               	return		;funcret
 37305  01CE94                     __end_of_INT0_DefaultInterruptHandler:
 37306                           	opt callstack 0
 37307                           
 37308 ;; *************** function _Default_ISR *****************
 37309 ;; Defined at:
 37310 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 37311 ;; Parameters:    Size  Location     Type
 37312 ;;		None
 37313 ;; Auto vars:     Size  Location     Type
 37314 ;;		None
 37315 ;; Return value:  Size  Location     Type
 37316 ;;                  1    wreg      void 
 37317 ;; Registers used:
 37318 ;;		None
 37319 ;; Tracked objects:
 37320 ;;		On entry : 0/0
 37321 ;;		On exit  : 0/0
 37322 ;;		Unchanged: 0/0
 37323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37328 ;;Total ram usage:        0 bytes
 37329 ;; Hardware stack levels used:    1
 37330 ;; This function calls:
 37331 ;;		Nothing
 37332 ;; This function is called by:
 37333 ;;		Interrupt level 2
 37334 ;; This function uses a non-reentrant model
 37335 ;;
 37336                           
 37337                           	psect	text173
 37338  01CE88                     __ptext173:
 37339                           	opt callstack 0
 37340  01CE88                     _Default_ISR:
 37341                           	opt callstack 4
 37342                           
 37343                           ;incstack = 0
 37344  01CE88  EE14  F15E         	lfsr	1,___inthi_sp
 37345  01CE8C  0011               	retfie		f
 37346  01CE8E                     __end_of_Default_ISR:
 37347                           	opt callstack 0
 37348                           
 37349 ;; *************** function _ADCC_ISR *****************
 37350 ;; Defined at:
 37351 ;;		line 314 in file "mcc_generated_files/adcc.c"
 37352 ;; Parameters:    Size  Location     Type
 37353 ;;		None
 37354 ;; Auto vars:     Size  Location     Type
 37355 ;;		None
 37356 ;; Return value:  Size  Location     Type
 37357 ;;                  1    wreg      void 
 37358 ;; Registers used:
 37359 ;;		wreg, status,2, status,0, pclath, tosl
 37360 ;; Tracked objects:
 37361 ;;		On entry : 0/0
 37362 ;;		On exit  : 0/0
 37363 ;;		Unchanged: 0/0
 37364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37369 ;;Total ram usage:        0 bytes
 37370 ;; Hardware stack levels used:    1
 37371 ;; Hardware stack levels required when called:    1
 37372 ;; This function calls:
 37373 ;;		Absolute function
 37374 ;;		_ADCC_DefaultInterruptHandler
 37375 ;;		_adc_int_handler
 37376 ;; This function is called by:
 37377 ;;		Interrupt level 2
 37378 ;; This function uses a non-reentrant model
 37379 ;;
 37380                           
 37381                           	psect	text174
 37382  01C7B0                     __ptext174:
 37383                           	opt callstack 0
 37384  01C7B0                     _ADCC_ISR:
 37385                           	opt callstack 3
 37386                           
 37387                           ;incstack = 0
 37388  01C7B0  EE14  F15E         	lfsr	1,___inthi_sp
 37389                           
 37390                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 37391  01C7B4  0139               	movlb	57	; () banked
 37392  01C7B6  95A1               	bcf	161,2,b	;volatile
 37393                           
 37394                           ; BSR set to: 57
 37395                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 37396  01C7B8  0100               	movlb	0	; () banked
 37397  01C7BA  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 37398  01C7BC  1185               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 37399  01C7BE  1186               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 37400  01C7C0  B4D8               	btfsc	status,2,c
 37401  01C7C2  0011               	retfie		f
 37402                           
 37403                           ; BSR set to: 0
 37404                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 37405  01C7C4  D801               	call	i2u1097_48
 37406  01C7C6  0011               	retfie		f
 37407  01C7C8                     i2u1097_48:
 37408  01C7C8  0005               	push	
 37409  01C7CA  6EFA               	movwf	pclath,c
 37410  01C7CC  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 37411  01C7CE  6EFD               	movwf	tosl,c
 37412  01C7D0  5185               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 37413  01C7D2  6EFE               	movwf	tosh,c
 37414  01C7D4  5186               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 37415  01C7D6  6EFF               	movwf	tosu,c
 37416  01C7D8  50FA               	movf	pclath,w,c
 37417  01C7DA  0012               	return		;indir
 37418  01C7DC                     __end_of_ADCC_ISR:
 37419                           	opt callstack 0
 37420                           
 37421 ;; *************** function _adc_int_t_handler *****************
 37422 ;; Defined at:
 37423 ;;		line 175 in file "daq.c"
 37424 ;; Parameters:    Size  Location     Type
 37425 ;;		None
 37426 ;; Auto vars:     Size  Location     Type
 37427 ;;		None
 37428 ;; Return value:  Size  Location     Type
 37429 ;;                  1  [STACK] void 
 37430 ;; Registers used:
 37431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 37432 ;; Tracked objects:
 37433 ;;		On entry : 3F/0
 37434 ;;		On exit  : 1/0
 37435 ;;		Unchanged: 0/0
 37436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37441 ;;Total ram usage:        0 bytes
 37442 ;; Hardware stack levels used:    1
 37443 ;; Hardware stack levels required when called:    1
 37444 ;; This function calls:
 37445 ;;		_ADCC_DischargeSampleCapacitor
 37446 ;;		_ADCC_StartConversion
 37447 ;; This function is called by:
 37448 ;;		_start_adc_scan
 37449 ;;		_ADCC_ThresholdISR
 37450 ;; This function uses a reentrant model
 37451 ;;
 37452                           
 37453                           	psect	text175
 37454  01B85A                     __ptext175:
 37455                           	opt callstack 0
 37456  01B85A                     _adc_int_t_handler:
 37457                           	opt callstack 2
 37458                           
 37459                           ;daq.c: 180:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 37460                           
 37461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37462                           ;incstack = 0
 37463  01B85A  013E               	movlb	62	; () banked
 37464  01B85C  51E6               	movf	230,w,b	;volatile
 37465  01B85E  006F FB9C  F001    	movff	16103,btemp	;volatile
 37466  01B864  6A02               	clrf	(btemp+1)^0,c
 37467  01B866  0060  F004  F002   	movff	btemp,btemp+1
 37468  01B86C  6A01               	clrf	btemp^0,c
 37469  01B86E  2601               	addwf	btemp^0,f,c
 37470  01B870  0E00               	movlw	0
 37471  01B872  2202               	addwfc	(btemp+1)^0,f,c
 37472  01B874  0100               	movlb	0	; () banked
 37473  01B876  51DD               	movf	(_R+50)& (0+255),w,b	;volatile
 37474  01B878  0D02               	mullw	2
 37475  01B87A  50F3               	movf	243,w,c
 37476  01B87C  0FAB               	addlw	low _R
 37477  01B87E  6ED9               	movwf	fsr2l,c
 37478  01B880  6ADA               	clrf	fsr2h,c
 37479  01B882  0060  F007  FFDE   	movff	btemp,postinc2
 37480  01B888  0060  F00B  FFDD   	movff	btemp+1,postdec2
 37481  01B88E                     l11916:
 37482                           
 37483                           ;daq.c: 182:   if (++R.scan_index > 0XD) {
 37484  01B88E  0100               	movlb	0	; () banked
 37485  01B890  2BDD               	incf	(_R+50)& (0+255),f,b	;volatile
 37486  01B892  0E0D               	movlw	13
 37487  01B894  65DD               	cpfsgt	(_R+50)& (0+255),b	;volatile
 37488  01B896  D003               	goto	l11922
 37489                           
 37490                           ; BSR set to: 0
 37491                           ;daq.c: 183:    R.done = 1;
 37492  01B898  0E01               	movlw	1
 37493  01B89A  6FE0               	movwf	(_R+53)& (0+255),b	;volatile
 37494  01B89C  0012               	return	
 37495  01B89E                     l11922:
 37496                           
 37497                           ; BSR set to: 0
 37498                           ;daq.c: 189:  } while (!((R.scan_select >> R.scan_index) &0x1));
 37499  01B89E  0060  F374  F00C   	movff	_R+50,btemp+11	;volatile
 37500  01B8A4  EE20  F0DE         	lfsr	2,_R+51	;volatile
 37501  01B8A8  006F FF78  F009    	movff	postinc2,btemp+8
 37502  01B8AE  006F FF74  F00A    	movff	postdec2,btemp+9
 37503  01B8B4  2A0C               	incf	(btemp+11)^0,f,c
 37504  01B8B6  D003               	goto	u1094_44
 37505  01B8B8                     u1094_45:
 37506  01B8B8  90D8               	bcf	status,0,c
 37507  01B8BA  320A               	rrcf	(btemp+9)^0,f,c
 37508  01B8BC  3209               	rrcf	(btemp+8)^0,f,c
 37509  01B8BE                     u1094_44:
 37510  01B8BE  2E0C               	decfsz	(btemp+11)^0,f,c
 37511  01B8C0  D7FB               	goto	u1094_45
 37512  01B8C2  A009               	btfss	(btemp+8)^0,0,c
 37513  01B8C4  D7E4               	goto	l11916
 37514                           
 37515                           ;daq.c: 190:  ADCC_DischargeSampleCapacitor();
 37516  01B8C6  EC27  F0E7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 37517                           
 37518                           ; BSR set to: 62
 37519                           ;daq.c: 191:  ADCC_StartConversion(R.scan_index & 0xf);
 37520  01B8CA  0100               	movlb	0	; () banked
 37521  01B8CC  51DD               	movf	(_R+50)& (0+255),w,b	;volatile
 37522  01B8CE  0B0F               	andlw	15
 37523  01B8D0  6EE6               	movwf	postinc1,c
 37524  01B8D2  ECB9  F0E6         	call	_ADCC_StartConversion	;wreg free
 37525                           
 37526                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37527  01B8D6  0012               	return		;funcret
 37528  01B8D8                     __end_of_adc_int_t_handler:
 37529                           	opt callstack 0
 37530                           
 37531 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 37532 ;; Defined at:
 37533 ;;		line 339 in file "mcc_generated_files/adcc.c"
 37534 ;; Parameters:    Size  Location     Type
 37535 ;;		None
 37536 ;; Auto vars:     Size  Location     Type
 37537 ;;		None
 37538 ;; Return value:  Size  Location     Type
 37539 ;;                  1  [STACK] void 
 37540 ;; Registers used:
 37541 ;;		None
 37542 ;; Tracked objects:
 37543 ;;		On entry : 3F/0
 37544 ;;		On exit  : 0/0
 37545 ;;		Unchanged: 0/0
 37546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37551 ;;Total ram usage:        0 bytes
 37552 ;; Hardware stack levels used:    1
 37553 ;; This function calls:
 37554 ;;		Nothing
 37555 ;; This function is called by:
 37556 ;;		_ADCC_Initialize
 37557 ;;		_ADCC_ISR
 37558 ;;		_ADCC_ThresholdISR
 37559 ;; This function uses a reentrant model
 37560 ;;
 37561                           
 37562                           	psect	text176
 37563  01CE94                     __ptext176:
 37564                           	opt callstack 0
 37565  01CE94                     _ADCC_DefaultInterruptHandler:
 37566                           	opt callstack 3
 37567                           
 37568                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37569                           
 37570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37571                           ;incstack = 0
 37572  01CE94  0012               	return		;funcret
 37573  01CE96                     __end_of_ADCC_DefaultInterruptHandler:
 37574                           	opt callstack 0
 37575                           
 37576 ;; *************** function _adc_int_handler *****************
 37577 ;; Defined at:
 37578 ;;		line 165 in file "daq.c"
 37579 ;; Parameters:    Size  Location     Type
 37580 ;;		None
 37581 ;; Auto vars:     Size  Location     Type
 37582 ;;		None
 37583 ;; Return value:  Size  Location     Type
 37584 ;;                  1  [STACK] void 
 37585 ;; Registers used:
 37586 ;;		None
 37587 ;; Tracked objects:
 37588 ;;		On entry : 3F/0
 37589 ;;		On exit  : 0/0
 37590 ;;		Unchanged: 0/0
 37591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37596 ;;Total ram usage:        0 bytes
 37597 ;; Hardware stack levels used:    1
 37598 ;; This function calls:
 37599 ;;		Nothing
 37600 ;; This function is called by:
 37601 ;;		_start_adc_scan
 37602 ;;		_ADCC_ISR
 37603 ;; This function uses a reentrant model
 37604 ;;
 37605                           
 37606                           	psect	text177
 37607  01CE96                     __ptext177:
 37608                           	opt callstack 0
 37609  01CE96                     _adc_int_handler:
 37610                           	opt callstack 3
 37611                           
 37612                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37613                           
 37614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37615                           ;incstack = 0
 37616  01CE96  0012               	return		;funcret
 37617  01CE98                     __end_of_adc_int_handler:
 37618                           	opt callstack 0
 37619                           
 37620 ;; *************** function _ADCC_ThresholdISR *****************
 37621 ;; Defined at:
 37622 ;;		line 327 in file "mcc_generated_files/adcc.c"
 37623 ;; Parameters:    Size  Location     Type
 37624 ;;		None
 37625 ;; Auto vars:     Size  Location     Type
 37626 ;;		None
 37627 ;; Return value:  Size  Location     Type
 37628 ;;                  1    wreg      void 
 37629 ;; Registers used:
 37630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 37631 ;; Tracked objects:
 37632 ;;		On entry : 0/0
 37633 ;;		On exit  : 0/0
 37634 ;;		Unchanged: 0/0
 37635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37638 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37639 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37640 ;;Total ram usage:        5 bytes
 37641 ;; Hardware stack levels used:    1
 37642 ;; Hardware stack levels required when called:    2
 37643 ;; This function calls:
 37644 ;;		Absolute function
 37645 ;;		_ADCC_DefaultInterruptHandler
 37646 ;;		_adc_int_t_handler
 37647 ;; This function is called by:
 37648 ;;		Interrupt level 2
 37649 ;; This function uses a non-reentrant model
 37650 ;;
 37651                           
 37652                           	psect	text178
 37653  01BB10                     __ptext178:
 37654                           	opt callstack 0
 37655  01BB10                     _ADCC_ThresholdISR:
 37656                           	opt callstack 2
 37657                           
 37658                           ;incstack = 0
 37659  01BB10  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 37660  01BB16  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 37661  01BB1C  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 37662  01BB22  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 37663  01BB28  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 37664  01BB2E  EE14  F15E         	lfsr	1,___inthi_sp
 37665                           
 37666                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 37667  01BB32  0139               	movlb	57	; () banked
 37668  01BB34  97A1               	bcf	161,3,b	;volatile
 37669                           
 37670                           ; BSR set to: 57
 37671                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 37672  01BB36  0100               	movlb	0	; () banked
 37673  01BB38  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 37674  01BB3A  1182               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 37675  01BB3C  1183               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 37676  01BB3E  B4D8               	btfsc	status,2,c
 37677  01BB40  D00C               	goto	i2u1099_49
 37678                           
 37679                           ; BSR set to: 0
 37680                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 37681  01BB42  D801               	call	i2u1099_48
 37682  01BB44  D00A               	goto	i2u1099_49
 37683  01BB46                     i2u1099_48:
 37684  01BB46  0005               	push	
 37685  01BB48  6EFA               	movwf	pclath,c
 37686  01BB4A  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 37687  01BB4C  6EFD               	movwf	tosl,c
 37688  01BB4E  5182               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 37689  01BB50  6EFE               	movwf	tosh,c
 37690  01BB52  5183               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 37691  01BB54  6EFF               	movwf	tosu,c
 37692  01BB56  50FA               	movf	pclath,w,c
 37693  01BB58  0012               	return		;indir
 37694  01BB5A                     i2u1099_49:
 37695  01BB5A  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 37696  01BB60  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 37697  01BB66  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 37698  01BB6C  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 37699  01BB72  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 37700  01BB78  0011               	retfie		f
 37701  01BB7A                     __end_of_ADCC_ThresholdISR:
 37702                           	opt callstack 0
 37703                           
 37704 ;; *************** function _UART1_rx_vect_isr *****************
 37705 ;; Defined at:
 37706 ;;		line 181 in file "mcc_generated_files/uart1.c"
 37707 ;; Parameters:    Size  Location     Type
 37708 ;;		None
 37709 ;; Auto vars:     Size  Location     Type
 37710 ;;		None
 37711 ;; Return value:  Size  Location     Type
 37712 ;;                  1    wreg      void 
 37713 ;; Registers used:
 37714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 37715 ;; Tracked objects:
 37716 ;;		On entry : 0/0
 37717 ;;		On exit  : 0/0
 37718 ;;		Unchanged: 0/0
 37719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37724 ;;Total ram usage:        0 bytes
 37725 ;; Hardware stack levels used:    1
 37726 ;; Hardware stack levels required when called:    1
 37727 ;; This function calls:
 37728 ;;		Absolute function
 37729 ;;		_UART1_Receive_ISR
 37730 ;; This function is called by:
 37731 ;;		Interrupt level 2
 37732 ;; This function uses a non-reentrant model
 37733 ;;
 37734                           
 37735                           	psect	text179
 37736  01CA14                     __ptext179:
 37737                           	opt callstack 0
 37738  01CA14                     _UART1_rx_vect_isr:
 37739                           	opt callstack 3
 37740                           
 37741                           ;incstack = 0
 37742  01CA14  EE14  F15E         	lfsr	1,___inthi_sp
 37743                           
 37744                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 37745  01CA18  0100               	movlb	0	; () banked
 37746  01CA1A  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 37747  01CA1C  1188               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 37748  01CA1E  1189               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 37749  01CA20  B4D8               	btfsc	status,2,c
 37750  01CA22  0011               	retfie		f
 37751                           
 37752                           ; BSR set to: 0
 37753                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 37754  01CA24  D801               	call	i2u1101_48
 37755  01CA26  0011               	retfie		f
 37756  01CA28                     i2u1101_48:
 37757  01CA28  0005               	push	
 37758  01CA2A  6EFA               	movwf	pclath,c
 37759  01CA2C  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 37760  01CA2E  6EFD               	movwf	tosl,c
 37761  01CA30  5188               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 37762  01CA32  6EFE               	movwf	tosh,c
 37763  01CA34  5189               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 37764  01CA36  6EFF               	movwf	tosu,c
 37765  01CA38  50FA               	movf	pclath,w,c
 37766  01CA3A  0012               	return		;indir
 37767  01CA3C                     __end_of_UART1_rx_vect_isr:
 37768                           	opt callstack 0
 37769                           
 37770 ;; *************** function _UART1_Receive_ISR *****************
 37771 ;; Defined at:
 37772 ;;		line 192 in file "mcc_generated_files/uart1.c"
 37773 ;; Parameters:    Size  Location     Type
 37774 ;;		None
 37775 ;; Auto vars:     Size  Location     Type
 37776 ;;		None
 37777 ;; Return value:  Size  Location     Type
 37778 ;;                  1  [STACK] void 
 37779 ;; Registers used:
 37780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37781 ;; Tracked objects:
 37782 ;;		On entry : 3F/0
 37783 ;;		On exit  : 3F/0
 37784 ;;		Unchanged: 0/0
 37785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37790 ;;Total ram usage:        0 bytes
 37791 ;; Hardware stack levels used:    1
 37792 ;; This function calls:
 37793 ;;		Nothing
 37794 ;; This function is called by:
 37795 ;;		_UART1_Initialize
 37796 ;;		_UART1_rx_vect_isr
 37797 ;; This function uses a reentrant model
 37798 ;;
 37799                           
 37800                           	psect	text180
 37801  01CBA8                     __ptext180:
 37802                           	opt callstack 0
 37803  01CBA8                     _UART1_Receive_ISR:
 37804                           	opt callstack 3
 37805                           
 37806                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 37807                           
 37808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37809                           ;incstack = 0
 37810  01CBA8  0EDC               	movlw	low _uart1RxBuffer
 37811  01CBAA  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 37812  01CBAC  6ED9               	movwf	fsr2l,c
 37813  01CBAE  6ADA               	clrf	fsr2h,c
 37814  01CBB0  0E01               	movlw	high _uart1RxBuffer
 37815  01CBB2  22DA               	addwfc	fsr2h,f,c
 37816  01CBB4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 37817  01CBBA  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 37818                           
 37819                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 37820  01CBBC  0E07               	movlw	7
 37821  01CBBE  6447               	cpfsgt	_uart1RxHead^0,c
 37822  01CBC0  D001               	goto	l11366
 37823                           
 37824                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 37825  01CBC2  6A47               	clrf	_uart1RxHead^0,c	;volatile
 37826  01CBC4                     l11366:
 37827                           
 37828                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 37829  01CBC4  0100               	movlb	0	; () banked
 37830  01CBC6  2BA9               	incf	_uart1RxCount& (0+255),f,b	;volatile
 37831                           
 37832                           ; BSR set to: 0
 37833                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37834  01CBC8  0012               	return		;funcret
 37835  01CBCA                     __end_of_UART1_Receive_ISR:
 37836                           	opt callstack 0
 37837                           
 37838 ;; *************** function _UART2_tx_vect_isr *****************
 37839 ;; Defined at:
 37840 ;;		line 195 in file "mcc_generated_files/uart2.c"
 37841 ;; Parameters:    Size  Location     Type
 37842 ;;		None
 37843 ;; Auto vars:     Size  Location     Type
 37844 ;;		None
 37845 ;; Return value:  Size  Location     Type
 37846 ;;                  1    wreg      void 
 37847 ;; Registers used:
 37848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 37849 ;; Tracked objects:
 37850 ;;		On entry : 0/0
 37851 ;;		On exit  : 0/0
 37852 ;;		Unchanged: 0/0
 37853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37858 ;;Total ram usage:        0 bytes
 37859 ;; Hardware stack levels used:    1
 37860 ;; Hardware stack levels required when called:    1
 37861 ;; This function calls:
 37862 ;;		Absolute function
 37863 ;;		_UART2_Transmit_ISR
 37864 ;; This function is called by:
 37865 ;;		Interrupt level 2
 37866 ;; This function uses a non-reentrant model
 37867 ;;
 37868                           
 37869                           	psect	text181
 37870  01CA3C                     __ptext181:
 37871                           	opt callstack 0
 37872  01CA3C                     _UART2_tx_vect_isr:
 37873                           	opt callstack 3
 37874                           
 37875                           ; BSR set to: 0
 37876                           ;incstack = 0
 37877  01CA3C  EE14  F15E         	lfsr	1,___inthi_sp
 37878                           
 37879                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 37880  01CA40  0100               	movlb	0	; () banked
 37881  01CA42  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 37882  01CA44  118B               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 37883  01CA46  118C               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 37884  01CA48  B4D8               	btfsc	status,2,c
 37885  01CA4A  0011               	retfie		f
 37886                           
 37887                           ; BSR set to: 0
 37888                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 37889  01CA4C  D801               	call	i2u1103_48
 37890  01CA4E  0011               	retfie		f
 37891  01CA50                     i2u1103_48:
 37892  01CA50  0005               	push	
 37893  01CA52  6EFA               	movwf	pclath,c
 37894  01CA54  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 37895  01CA56  6EFD               	movwf	tosl,c
 37896  01CA58  518B               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 37897  01CA5A  6EFE               	movwf	tosh,c
 37898  01CA5C  518C               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 37899  01CA5E  6EFF               	movwf	tosu,c
 37900  01CA60  50FA               	movf	pclath,w,c
 37901  01CA62  0012               	return		;indir
 37902  01CA64                     __end_of_UART2_tx_vect_isr:
 37903                           	opt callstack 0
 37904                           
 37905 ;; *************** function _UART2_Transmit_ISR *****************
 37906 ;; Defined at:
 37907 ;;		line 213 in file "mcc_generated_files/uart2.c"
 37908 ;; Parameters:    Size  Location     Type
 37909 ;;		None
 37910 ;; Auto vars:     Size  Location     Type
 37911 ;;		None
 37912 ;; Return value:  Size  Location     Type
 37913 ;;                  1  [STACK] void 
 37914 ;; Registers used:
 37915 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37916 ;; Tracked objects:
 37917 ;;		On entry : 3F/0
 37918 ;;		On exit  : 3B/39
 37919 ;;		Unchanged: 0/0
 37920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37925 ;;Total ram usage:        0 bytes
 37926 ;; Hardware stack levels used:    1
 37927 ;; This function calls:
 37928 ;;		Nothing
 37929 ;; This function is called by:
 37930 ;;		_UART2_Initialize
 37931 ;;		_UART2_tx_vect_isr
 37932 ;; This function uses a reentrant model
 37933 ;;
 37934                           
 37935                           	psect	text182
 37936  01C7DC                     __ptext182:
 37937                           	opt callstack 0
 37938  01C7DC                     _UART2_Transmit_ISR:
 37939                           	opt callstack 3
 37940                           
 37941                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 37942                           
 37943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37944                           ;incstack = 0
 37945  01C7DC  0E40               	movlw	64
 37946  01C7DE  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 37947  01C7E0  D010               	goto	l673
 37948                           
 37949                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 37950  01C7E2  0E00               	movlw	low _uart2TxBuffer
 37951  01C7E4  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 37952  01C7E6  6ED9               	movwf	fsr2l,c
 37953  01C7E8  6ADA               	clrf	fsr2h,c
 37954  01C7EA  0E03               	movlw	high _uart2TxBuffer
 37955  01C7EC  22DA               	addwfc	fsr2h,f,c
 37956  01C7EE  50DF               	movf	indf2,w,c
 37957  01C7F0  013D               	movlb	61	; () banked
 37958  01C7F2  6FD2               	movwf	210,b	;volatile
 37959                           
 37960                           ; BSR set to: 61
 37961  01C7F4  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 37962                           
 37963                           ; BSR set to: 61
 37964                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 37965  01C7F6  0E3F               	movlw	63
 37966  01C7F8  6446               	cpfsgt	_uart2TxTail^0,c
 37967  01C7FA  D001               	goto	l11378
 37968                           
 37969                           ; BSR set to: 61
 37970                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 37971  01C7FC  6A46               	clrf	_uart2TxTail^0,c	;volatile
 37972  01C7FE                     l11378:
 37973                           
 37974                           ; BSR set to: 61
 37975                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 37976  01C7FE  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 37977                           
 37978                           ;mcc_generated_files/uart2.c: 224:     }
 37979  01C800  0012               	return	
 37980  01C802                     l673:
 37981                           
 37982                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 37983  01C802  0139               	movlb	57	; () banked
 37984  01C804  9796               	bcf	150,3,b	;volatile
 37985                           
 37986                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 37987  01C806  0012               	return		;funcret
 37988  01C808                     __end_of_UART2_Transmit_ISR:
 37989                           	opt callstack 0
 37990                           
 37991 ;; *************** function _UART2_rx_vect_isr *****************
 37992 ;; Defined at:
 37993 ;;		line 203 in file "mcc_generated_files/uart2.c"
 37994 ;; Parameters:    Size  Location     Type
 37995 ;;		None
 37996 ;; Auto vars:     Size  Location     Type
 37997 ;;		None
 37998 ;; Return value:  Size  Location     Type
 37999 ;;                  1    wreg      void 
 38000 ;; Registers used:
 38001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 38002 ;; Tracked objects:
 38003 ;;		On entry : 0/0
 38004 ;;		On exit  : 0/0
 38005 ;;		Unchanged: 0/0
 38006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38011 ;;Total ram usage:        0 bytes
 38012 ;; Hardware stack levels used:    1
 38013 ;; Hardware stack levels required when called:    1
 38014 ;; This function calls:
 38015 ;;		Absolute function
 38016 ;;		_UART2_Receive_ISR
 38017 ;; This function is called by:
 38018 ;;		Interrupt level 2
 38019 ;; This function uses a non-reentrant model
 38020 ;;
 38021                           
 38022                           	psect	text183
 38023  01CA64                     __ptext183:
 38024                           	opt callstack 0
 38025  01CA64                     _UART2_rx_vect_isr:
 38026                           	opt callstack 3
 38027                           
 38028                           ;incstack = 0
 38029  01CA64  EE14  F15E         	lfsr	1,___inthi_sp
 38030                           
 38031                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 38032  01CA68  0100               	movlb	0	; () banked
 38033  01CA6A  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 38034  01CA6C  118E               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 38035  01CA6E  118F               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 38036  01CA70  B4D8               	btfsc	status,2,c
 38037  01CA72  0011               	retfie		f
 38038                           
 38039                           ; BSR set to: 0
 38040                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 38041  01CA74  D801               	call	i2u1105_48
 38042  01CA76  0011               	retfie		f
 38043  01CA78                     i2u1105_48:
 38044  01CA78  0005               	push	
 38045  01CA7A  6EFA               	movwf	pclath,c
 38046  01CA7C  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 38047  01CA7E  6EFD               	movwf	tosl,c
 38048  01CA80  518E               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 38049  01CA82  6EFE               	movwf	tosh,c
 38050  01CA84  518F               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 38051  01CA86  6EFF               	movwf	tosu,c
 38052  01CA88  50FA               	movf	pclath,w,c
 38053  01CA8A  0012               	return		;indir
 38054  01CA8C                     __end_of_UART2_rx_vect_isr:
 38055                           	opt callstack 0
 38056                           
 38057 ;; *************** function _UART2_Receive_ISR *****************
 38058 ;; Defined at:
 38059 ;;		line 233 in file "mcc_generated_files/uart2.c"
 38060 ;; Parameters:    Size  Location     Type
 38061 ;;		None
 38062 ;; Auto vars:     Size  Location     Type
 38063 ;;		None
 38064 ;; Return value:  Size  Location     Type
 38065 ;;                  1  [STACK] void 
 38066 ;; Registers used:
 38067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38068 ;; Tracked objects:
 38069 ;;		On entry : 3F/0
 38070 ;;		On exit  : 3F/0
 38071 ;;		Unchanged: 0/0
 38072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38077 ;;Total ram usage:        0 bytes
 38078 ;; Hardware stack levels used:    1
 38079 ;; This function calls:
 38080 ;;		Nothing
 38081 ;; This function is called by:
 38082 ;;		_UART2_Initialize
 38083 ;;		_UART2_rx_vect_isr
 38084 ;; This function uses a reentrant model
 38085 ;;
 38086                           
 38087                           	psect	text184
 38088  01CBEA                     __ptext184:
 38089                           	opt callstack 0
 38090  01CBEA                     _UART2_Receive_ISR:
 38091                           	opt callstack 3
 38092                           
 38093                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 38094                           
 38095                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38096                           ;incstack = 0
 38097  01CBEA  0E00               	movlw	low _uart2RxBuffer
 38098  01CBEC  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 38099  01CBEE  6ED9               	movwf	fsr2l,c
 38100  01CBF0  6ADA               	clrf	fsr2h,c
 38101  01CBF2  0E04               	movlw	high _uart2RxBuffer
 38102  01CBF4  22DA               	addwfc	fsr2h,f,c
 38103  01CBF6  006F F743 FFDF     	movff	15824,indf2	;volatile
 38104  01CBFC  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 38105                           
 38106                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 38107  01CBFE  2844               	incf	_uart2RxHead^0,w,c
 38108  01CC00  B4D8               	btfsc	status,2,c
 38109                           
 38110                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 38111  01CC02  6A44               	clrf	_uart2RxHead^0,c	;volatile
 38112                           
 38113                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 38114  01CC04  0100               	movlb	0	; () banked
 38115  01CC06  2BA6               	incf	_uart2RxCount& (0+255),f,b	;volatile
 38116                           
 38117                           ; BSR set to: 0
 38118                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38119  01CC08  0012               	return		;funcret
 38120  01CC0A                     __end_of_UART2_Receive_ISR:
 38121                           	opt callstack 0
 38122                           
 38123 ;; *************** function _TMR6_ISR *****************
 38124 ;; Defined at:
 38125 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 38126 ;; Parameters:    Size  Location     Type
 38127 ;;		None
 38128 ;; Auto vars:     Size  Location     Type
 38129 ;;		None
 38130 ;; Return value:  Size  Location     Type
 38131 ;;                  1    wreg      void 
 38132 ;; Registers used:
 38133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 38134 ;; Tracked objects:
 38135 ;;		On entry : 0/0
 38136 ;;		On exit  : 0/0
 38137 ;;		Unchanged: 0/0
 38138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38143 ;;Total ram usage:        1 bytes
 38144 ;; Hardware stack levels used:    1
 38145 ;; Hardware stack levels required when called:    2
 38146 ;; This function calls:
 38147 ;;		_TMR6_CallBack
 38148 ;; This function is called by:
 38149 ;;		Interrupt level 2
 38150 ;; This function uses a non-reentrant model
 38151 ;;
 38152                           
 38153                           	psect	text185
 38154  01CCBC                     __ptext185:
 38155                           	opt callstack 0
 38156  01CCBC                     _TMR6_ISR:
 38157                           	opt callstack 2
 38158                           
 38159                           ; BSR set to: 0
 38160                           ;incstack = 0
 38161  01CCBC  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 38162  01CCC2  EE14  F15E         	lfsr	1,___inthi_sp
 38163                           
 38164                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 38165  01CCC6  0139               	movlb	57	; () banked
 38166  01CCC8  91A9               	bcf	169,0,b	;volatile
 38167                           
 38168                           ; BSR set to: 57
 38169                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 38170  01CCCA  ECA0  F0E5         	call	_TMR6_CallBack	;wreg free
 38171  01CCCE  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 38172  01CCD4  0011               	retfie		f
 38173  01CCD6                     __end_of_TMR6_ISR:
 38174                           	opt callstack 0
 38175                           
 38176 ;; *************** function _TMR6_CallBack *****************
 38177 ;; Defined at:
 38178 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 38179 ;; Parameters:    Size  Location     Type
 38180 ;;		None
 38181 ;; Auto vars:     Size  Location     Type
 38182 ;;		None
 38183 ;; Return value:  Size  Location     Type
 38184 ;;                  1  [STACK] void 
 38185 ;; Registers used:
 38186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 38187 ;; Tracked objects:
 38188 ;;		On entry : 3F/39
 38189 ;;		On exit  : 0/0
 38190 ;;		Unchanged: 0/0
 38191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38196 ;;Total ram usage:        0 bytes
 38197 ;; Hardware stack levels used:    1
 38198 ;; Hardware stack levels required when called:    1
 38199 ;; This function calls:
 38200 ;;		Absolute function
 38201 ;;		_TMR6_DefaultInterruptHandler
 38202 ;; This function is called by:
 38203 ;;		_TMR6_ISR
 38204 ;; This function uses a reentrant model
 38205 ;;
 38206                           
 38207                           	psect	text186
 38208  01CB40                     __ptext186:
 38209                           	opt callstack 0
 38210  01CB40                     _TMR6_CallBack:
 38211                           	opt callstack 2
 38212                           
 38213                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 38214                           
 38215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38216                           ;incstack = 0
 38217  01CB40  0100               	movlb	0	; () banked
 38218  01CB42  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 38219  01CB44  117F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 38220  01CB46  1180               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 38221  01CB48  B4D8               	btfsc	status,2,c
 38222  01CB4A  0012               	return	
 38223                           
 38224                           ; BSR set to: 0
 38225                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 38226  01CB4C  D801               	call	u1056_48
 38227  01CB4E  0012               	return	
 38228  01CB50                     u1056_48:
 38229  01CB50  0005               	push	
 38230  01CB52  6EFA               	movwf	pclath,c
 38231  01CB54  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 38232  01CB56  6EFD               	movwf	tosl,c
 38233  01CB58  517F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 38234  01CB5A  6EFE               	movwf	tosh,c
 38235  01CB5C  5180               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 38236  01CB5E  6EFF               	movwf	tosu,c
 38237  01CB60  50FA               	movf	pclath,w,c
 38238  01CB62  0012               	return		;indir
 38239  01CB64                     __end_of_TMR6_CallBack:
 38240                           	opt callstack 0
 38241                           
 38242 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 38243 ;; Defined at:
 38244 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 38245 ;; Parameters:    Size  Location     Type
 38246 ;;		None
 38247 ;; Auto vars:     Size  Location     Type
 38248 ;;  i               1  [STACK] unsigned char 
 38249 ;; Return value:  Size  Location     Type
 38250 ;;                  1  [STACK] void 
 38251 ;; Registers used:
 38252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38253 ;; Tracked objects:
 38254 ;;		On entry : 3F/0
 38255 ;;		On exit  : 0/0
 38256 ;;		Unchanged: 0/0
 38257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38262 ;;Total ram usage:        0 bytes
 38263 ;; Hardware stack levels used:    1
 38264 ;; This function calls:
 38265 ;;		Nothing
 38266 ;; This function is called by:
 38267 ;;		_TMR6_Initialize
 38268 ;;		_TMR6_CallBack
 38269 ;; This function uses a reentrant model
 38270 ;;
 38271                           
 38272                           	psect	text187
 38273  01BFE8                     __ptext187:
 38274                           	opt callstack 0
 38275  01BFE8                     _TMR6_DefaultInterruptHandler:
 38276                           	opt callstack 0
 38277                           
 38278                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38279  01BFE8  52E6               	movf	postinc1,f,c
 38280                           
 38281                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 38282                           ;stkvar	_i @ sp[(-1)+0]
 38283                           
 38284                           ;incstack = 0
 38285  01BFEA  0EFF               	movlw	-1
 38286  01BFEC  6AE3               	clrf	plusw1,c
 38287  01BFEE                     l10862:
 38288                           
 38289                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 38290                           ;stkvar	_i @ sp[(-1)+0]
 38291  01BFEE  0EFF               	movlw	-1
 38292  01BFF0  50E3               	movf	plusw1,w,c
 38293  01BFF2  0D02               	mullw	2
 38294  01BFF4  0E7D               	movlw	low _tickCount
 38295  01BFF6  24F3               	addwf	243,w,c
 38296  01BFF8  6ED9               	movwf	fsr2l,c
 38297  01BFFA  0E02               	movlw	high _tickCount
 38298  01BFFC  20F4               	addwfc	prodh,w,c
 38299  01BFFE  6EDA               	movwf	fsr2h,c
 38300  01C000  50DE               	movf	postinc2,w,c
 38301  01C002  10DE               	iorwf	postinc2,w,c
 38302  01C004  B4D8               	btfsc	status,2,c
 38303  01C006  D00C               	goto	l10866
 38304                           
 38305                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 38306                           ;stkvar	_i @ sp[(-1)+0]
 38307  01C008  0EFF               	movlw	-1
 38308  01C00A  50E3               	movf	plusw1,w,c
 38309  01C00C  0D02               	mullw	2
 38310  01C00E  0E7D               	movlw	low _tickCount
 38311  01C010  24F3               	addwf	243,w,c
 38312  01C012  6ED9               	movwf	fsr2l,c
 38313  01C014  0E02               	movlw	high _tickCount
 38314  01C016  20F4               	addwfc	prodh,w,c
 38315  01C018  6EDA               	movwf	fsr2h,c
 38316  01C01A  06DE               	decf	postinc2,f,c
 38317  01C01C  0E00               	movlw	0
 38318  01C01E  5ADD               	subwfb	postdec2,f,c
 38319  01C020                     l10866:
 38320                           
 38321                           ;mcc_generated_files/tmr6.c: 207:  }
 38322                           ;stkvar	_i @ sp[(-1)+0]
 38323  01C020  0EFF               	movlw	-1
 38324  01C022  2AE3               	incf	plusw1,f,c
 38325                           
 38326                           ;stkvar	_i @ sp[(-1)+0]
 38327  01C024  0EFF               	movlw	-1
 38328  01C026  006F FF8C  F001    	movff	plusw1,btemp
 38329  01C02C  0E0C               	movlw	12
 38330  01C02E  6401               	cpfsgt	btemp^0,c
 38331  01C030  D7DE               	goto	l10862
 38332                           
 38333                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38334  01C032  52E5               	movf	postdec1,f,c
 38335  01C034  0012               	return		;funcret
 38336  01C036                     __end_of_TMR6_DefaultInterruptHandler:
 38337                           	opt callstack 0
 38338                           
 38339 ;; *************** function _DMA1_DMASCNT_ISR *****************
 38340 ;; Defined at:
 38341 ;;		line 126 in file "mcc_generated_files/dma1.c"
 38342 ;; Parameters:    Size  Location     Type
 38343 ;;		None
 38344 ;; Auto vars:     Size  Location     Type
 38345 ;;		None
 38346 ;; Return value:  Size  Location     Type
 38347 ;;                  1    wreg      void 
 38348 ;; Registers used:
 38349 ;;		None
 38350 ;; Tracked objects:
 38351 ;;		On entry : 0/0
 38352 ;;		On exit  : 3F/1
 38353 ;;		Unchanged: 0/0
 38354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38359 ;;Total ram usage:        0 bytes
 38360 ;; Hardware stack levels used:    1
 38361 ;; This function calls:
 38362 ;;		Nothing
 38363 ;; This function is called by:
 38364 ;;		Interrupt level 2
 38365 ;; This function uses a non-reentrant model
 38366 ;;
 38367                           
 38368                           	psect	text188
 38369  01CE00                     __ptext188:
 38370                           	opt callstack 0
 38371  01CE00                     _DMA1_DMASCNT_ISR:
 38372                           	opt callstack 4
 38373                           
 38374                           ;incstack = 0
 38375  01CE00  EE14  F15E         	lfsr	1,___inthi_sp
 38376                           
 38377                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 38378  01CE04  0139               	movlb	57	; () banked
 38379  01CE06  91A2               	bcf	162,0,b	;volatile
 38380                           
 38381                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 38382  01CE08  0101               	movlb	1	; () banked
 38383  01CE0A  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 38384                           
 38385                           ; BSR set to: 1
 38386  01CE0C  0011               	retfie		f
 38387  01CE0E                     __end_of_DMA1_DMASCNT_ISR:
 38388                           	opt callstack 0
 38389                           
 38390 ;; *************** function _DMA1_DMADCNT_ISR *****************
 38391 ;; Defined at:
 38392 ;;		line 133 in file "mcc_generated_files/dma1.c"
 38393 ;; Parameters:    Size  Location     Type
 38394 ;;		None
 38395 ;; Auto vars:     Size  Location     Type
 38396 ;;		None
 38397 ;; Return value:  Size  Location     Type
 38398 ;;                  1    wreg      void 
 38399 ;; Registers used:
 38400 ;;		None
 38401 ;; Tracked objects:
 38402 ;;		On entry : 0/0
 38403 ;;		On exit  : 3F/39
 38404 ;;		Unchanged: 0/0
 38405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38410 ;;Total ram usage:        0 bytes
 38411 ;; Hardware stack levels used:    1
 38412 ;; This function calls:
 38413 ;;		Nothing
 38414 ;; This function is called by:
 38415 ;;		Interrupt level 2
 38416 ;; This function uses a non-reentrant model
 38417 ;;
 38418                           
 38419                           	psect	text189
 38420  01CE24                     __ptext189:
 38421                           	opt callstack 0
 38422  01CE24                     _DMA1_DMADCNT_ISR:
 38423                           	opt callstack 4
 38424                           
 38425                           ; BSR set to: 1
 38426                           ;incstack = 0
 38427  01CE24  EE14  F15E         	lfsr	1,___inthi_sp
 38428                           
 38429                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 38430  01CE28  0139               	movlb	57	; () banked
 38431  01CE2A  93A2               	bcf	162,1,b	;volatile
 38432                           
 38433                           ; BSR set to: 57
 38434  01CE2C  0011               	retfie		f
 38435  01CE2E                     __end_of_DMA1_DMADCNT_ISR:
 38436                           	opt callstack 0
 38437                           
 38438 ;; *************** function _DMA1_DMAA_ISR *****************
 38439 ;; Defined at:
 38440 ;;		line 143 in file "mcc_generated_files/dma1.c"
 38441 ;; Parameters:    Size  Location     Type
 38442 ;;		None
 38443 ;; Auto vars:     Size  Location     Type
 38444 ;;		None
 38445 ;; Return value:  Size  Location     Type
 38446 ;;                  1    wreg      void 
 38447 ;; Registers used:
 38448 ;;		None
 38449 ;; Tracked objects:
 38450 ;;		On entry : 0/0
 38451 ;;		On exit  : 3F/39
 38452 ;;		Unchanged: 0/0
 38453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38458 ;;Total ram usage:        0 bytes
 38459 ;; Hardware stack levels used:    1
 38460 ;; This function calls:
 38461 ;;		Nothing
 38462 ;; This function is called by:
 38463 ;;		Interrupt level 2
 38464 ;; This function uses a non-reentrant model
 38465 ;;
 38466                           
 38467                           	psect	text190
 38468  01CE30                     __ptext190:
 38469                           	opt callstack 0
 38470  01CE30                     _DMA1_DMAA_ISR:
 38471                           	opt callstack 4
 38472                           
 38473                           ; BSR set to: 57
 38474                           ;incstack = 0
 38475  01CE30  EE14  F15E         	lfsr	1,___inthi_sp
 38476                           
 38477                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 38478  01CE34  0139               	movlb	57	; () banked
 38479  01CE36  97A2               	bcf	162,3,b	;volatile
 38480                           
 38481                           ; BSR set to: 57
 38482  01CE38  0011               	retfie		f
 38483  01CE3A                     __end_of_DMA1_DMAA_ISR:
 38484                           	opt callstack 0
 38485                           
 38486 ;; *************** function _DMA1_DMAOR_ISR *****************
 38487 ;; Defined at:
 38488 ;;		line 154 in file "mcc_generated_files/dma1.c"
 38489 ;; Parameters:    Size  Location     Type
 38490 ;;		None
 38491 ;; Auto vars:     Size  Location     Type
 38492 ;;		None
 38493 ;; Return value:  Size  Location     Type
 38494 ;;                  1    wreg      void 
 38495 ;; Registers used:
 38496 ;;		None
 38497 ;; Tracked objects:
 38498 ;;		On entry : 0/0
 38499 ;;		On exit  : 3F/39
 38500 ;;		Unchanged: 0/0
 38501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38506 ;;Total ram usage:        0 bytes
 38507 ;; Hardware stack levels used:    1
 38508 ;; This function calls:
 38509 ;;		Nothing
 38510 ;; This function is called by:
 38511 ;;		Interrupt level 2
 38512 ;; This function uses a non-reentrant model
 38513 ;;
 38514                           
 38515                           	psect	text191
 38516  01CE3C                     __ptext191:
 38517                           	opt callstack 0
 38518  01CE3C                     _DMA1_DMAOR_ISR:
 38519                           	opt callstack 4
 38520                           
 38521                           ; BSR set to: 57
 38522                           ;incstack = 0
 38523  01CE3C  EE14  F15E         	lfsr	1,___inthi_sp
 38524                           
 38525                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 38526  01CE40  0139               	movlb	57	; () banked
 38527  01CE42  95A2               	bcf	162,2,b	;volatile
 38528                           
 38529                           ; BSR set to: 57
 38530  01CE44  0011               	retfie		f
 38531  01CE46                     __end_of_DMA1_DMAOR_ISR:
 38532                           	opt callstack 0
 38533                           
 38534                           ;
 38535                           ; Interrupt Vector Table @ 0x8
 38536                           ;
 38537                           
 38538                           	psect	ivt0x8
 38539  000008                     __pivt0x8:
 38540                           	opt callstack 0
 38541  000008                     ivt0x8_base:
 38542                           	opt callstack 0
 38543                           
 38544                           ; Vector 0 : SWINT
 38545  000008  73A2               	dw	_Default_ISR shr (0+2)
 38546                           
 38547                           ; Vector 1 : HLVD
 38548  00000A  73A2               	dw	_Default_ISR shr (0+2)
 38549                           
 38550                           ; Vector 2 : OSF
 38551  00000C  73A2               	dw	_Default_ISR shr (0+2)
 38552                           
 38553                           ; Vector 3 : CSW
 38554  00000E  73A2               	dw	_Default_ISR shr (0+2)
 38555                           
 38556                           ; Vector 4 : NVM
 38557  000010  73A2               	dw	_Default_ISR shr (0+2)
 38558                           
 38559                           ; Vector 5 : SCAN
 38560  000012  73A2               	dw	_Default_ISR shr (0+2)
 38561                           
 38562                           ; Vector 6 : CRC
 38563  000014  73A2               	dw	_Default_ISR shr (0+2)
 38564                           
 38565                           ; Vector 7 : IOC
 38566  000016  73A2               	dw	_Default_ISR shr (0+2)
 38567                           
 38568                           ; Vector 8 : INT0
 38569  000018  737C               	dw	_INT0_ISR shr (0+2)
 38570                           
 38571                           ; Vector 9 : ZCD
 38572  00001A  73A2               	dw	_Default_ISR shr (0+2)
 38573                           
 38574                           ; Vector 10 : AD
 38575  00001C  71EC               	dw	_ADCC_ISR shr (0+2)
 38576                           
 38577                           ; Vector 11 : ADT
 38578  00001E  6EC4               	dw	_ADCC_ThresholdISR shr (0+2)
 38579                           
 38580                           ; Vector 12 : CMP1
 38581  000020  73A2               	dw	_Default_ISR shr (0+2)
 38582                           
 38583                           ; Vector 13 : SMT1
 38584  000022  73A2               	dw	_Default_ISR shr (0+2)
 38585                           
 38586                           ; Vector 14 : SMT1PRA
 38587  000024  73A2               	dw	_Default_ISR shr (0+2)
 38588                           
 38589                           ; Vector 15 : SMT1PRW
 38590  000026  73A2               	dw	_Default_ISR shr (0+2)
 38591                           
 38592                           ; Vector 16 : DMA1SCNT
 38593  000028  7380               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 38594                           
 38595                           ; Vector 17 : DMA1DCNT
 38596  00002A  7389               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 38597                           
 38598                           ; Vector 18 : DMA1OR
 38599  00002C  738F               	dw	_DMA1_DMAOR_ISR shr (0+2)
 38600                           
 38601                           ; Vector 19 : DMA1A
 38602  00002E  738C               	dw	_DMA1_DMAA_ISR shr (0+2)
 38603                           
 38604                           ; Vector 20 : SPI1RX
 38605  000030  73A2               	dw	_Default_ISR shr (0+2)
 38606                           
 38607                           ; Vector 21 : SPI1TX
 38608  000032  73A2               	dw	_Default_ISR shr (0+2)
 38609                           
 38610                           ; Vector 22 : SPI1
 38611  000034  73A2               	dw	_Default_ISR shr (0+2)
 38612                           
 38613                           ; Vector 23 : I2C1RX
 38614  000036  73A2               	dw	_Default_ISR shr (0+2)
 38615                           
 38616                           ; Vector 24 : I2C1TX
 38617  000038  73A2               	dw	_Default_ISR shr (0+2)
 38618                           
 38619                           ; Vector 25 : I2C1
 38620  00003A  73A2               	dw	_Default_ISR shr (0+2)
 38621                           
 38622                           ; Vector 26 : I2C1E
 38623  00003C  73A2               	dw	_Default_ISR shr (0+2)
 38624                           
 38625                           ; Vector 27 : U1RX
 38626  00003E  7285               	dw	_UART1_rx_vect_isr shr (0+2)
 38627                           
 38628                           ; Vector 28 : U1TX
 38629  000040  73A2               	dw	_Default_ISR shr (0+2)
 38630                           
 38631                           ; Vector 29 : U1E
 38632  000042  73A2               	dw	_Default_ISR shr (0+2)
 38633                           
 38634                           ; Vector 30 : U1
 38635  000044  73A2               	dw	_Default_ISR shr (0+2)
 38636                           
 38637                           ; Vector 31 : TMR0
 38638  000046  73A2               	dw	_Default_ISR shr (0+2)
 38639                           
 38640                           ; Vector 32 : TMR1
 38641  000048  73A2               	dw	_Default_ISR shr (0+2)
 38642                           
 38643                           ; Vector 33 : TMR1G
 38644  00004A  73A2               	dw	_Default_ISR shr (0+2)
 38645                           
 38646                           ; Vector 34 : TMR2
 38647  00004C  73A2               	dw	_Default_ISR shr (0+2)
 38648                           
 38649                           ; Vector 35 : CCP1
 38650  00004E  73A2               	dw	_Default_ISR shr (0+2)
 38651                           
 38652                           ; Vector 36 : Undefined
 38653  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 38654                           
 38655                           ; Vector 37 : NCO1
 38656  000052  73A2               	dw	_Default_ISR shr (0+2)
 38657                           
 38658                           ; Vector 38 : CWG1
 38659  000054  73A2               	dw	_Default_ISR shr (0+2)
 38660                           
 38661                           ; Vector 39 : CLC1
 38662  000056  73A2               	dw	_Default_ISR shr (0+2)
 38663                           
 38664                           ; Vector 40 : INT1
 38665  000058  710F               	dw	_INT1_ISR shr (0+2)
 38666                           
 38667                           ; Vector 41 : CMP2
 38668  00005A  73A2               	dw	_Default_ISR shr (0+2)
 38669                           
 38670                           ; Vector 42 : DMA2SCNT
 38671  00005C  73A2               	dw	_Default_ISR shr (0+2)
 38672                           
 38673                           ; Vector 43 : DMA2DCNT
 38674  00005E  73A2               	dw	_Default_ISR shr (0+2)
 38675                           
 38676                           ; Vector 44 : DMA2OR
 38677  000060  73A2               	dw	_Default_ISR shr (0+2)
 38678                           
 38679                           ; Vector 45 : DMA2A
 38680  000062  73A2               	dw	_Default_ISR shr (0+2)
 38681                           
 38682                           ; Vector 46 : I2C2RX
 38683  000064  73A2               	dw	_Default_ISR shr (0+2)
 38684                           
 38685                           ; Vector 47 : I2C2TX
 38686  000066  73A2               	dw	_Default_ISR shr (0+2)
 38687                           
 38688                           ; Vector 48 : I2C2
 38689  000068  73A2               	dw	_Default_ISR shr (0+2)
 38690                           
 38691                           ; Vector 49 : I2C2E
 38692  00006A  73A2               	dw	_Default_ISR shr (0+2)
 38693                           
 38694                           ; Vector 50 : U2RX
 38695  00006C  7299               	dw	_UART2_rx_vect_isr shr (0+2)
 38696                           
 38697                           ; Vector 51 : U2TX
 38698  00006E  728F               	dw	_UART2_tx_vect_isr shr (0+2)
 38699                           
 38700                           ; Vector 52 : U2E
 38701  000070  73A2               	dw	_Default_ISR shr (0+2)
 38702                           
 38703                           ; Vector 53 : U2
 38704  000072  73A2               	dw	_Default_ISR shr (0+2)
 38705                           
 38706                           ; Vector 54 : TMR3
 38707  000074  65F3               	dw	_TMR3_ISR shr (0+2)
 38708                           
 38709                           ; Vector 55 : TMR3G
 38710  000076  73A2               	dw	_Default_ISR shr (0+2)
 38711                           
 38712                           ; Vector 56 : TMR4
 38713  000078  73A2               	dw	_Default_ISR shr (0+2)
 38714                           
 38715                           ; Vector 57 : CCP2
 38716  00007A  73A2               	dw	_Default_ISR shr (0+2)
 38717                           
 38718                           ; Vector 58 : Undefined
 38719  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 38720                           
 38721                           ; Vector 59 : CWG2
 38722  00007E  73A2               	dw	_Default_ISR shr (0+2)
 38723                           
 38724                           ; Vector 60 : CLC2
 38725  000080  73A2               	dw	_Default_ISR shr (0+2)
 38726                           
 38727                           ; Vector 61 : INT2
 38728  000082  73A2               	dw	_Default_ISR shr (0+2)
 38729                           
 38730                           ; Vector 62 : Undefined
 38731  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 38732                           
 38733                           ; Vector 63 : Undefined
 38734  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 38735                           
 38736                           ; Vector 64 : Undefined
 38737  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 38738                           
 38739                           ; Vector 65 : Undefined
 38740  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 38741                           
 38742                           ; Vector 66 : Undefined
 38743  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 38744                           
 38745                           ; Vector 67 : Undefined
 38746  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 38747                           
 38748                           ; Vector 68 : Undefined
 38749  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 38750                           
 38751                           ; Vector 69 : Undefined
 38752  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 38753                           
 38754                           ; Vector 70 : TMR5
 38755  000094  6A69               	dw	_TMR5_ISR shr (0+2)
 38756                           
 38757                           ; Vector 71 : TMR5G
 38758  000096  73A2               	dw	_Default_ISR shr (0+2)
 38759                           
 38760                           ; Vector 72 : TMR6
 38761  000098  732F               	dw	_TMR6_ISR shr (0+2)
 38762                           
 38763                           ; Vector 73 : CCP3
 38764  00009A  73A2               	dw	_Default_ISR shr (0+2)
 38765                           
 38766                           ; Vector 74 : CWG3
 38767  00009C  73A2               	dw	_Default_ISR shr (0+2)
 38768                           
 38769                           ; Vector 75 : CLC3
 38770  00009E  73A2               	dw	_Default_ISR shr (0+2)
 38771                           
 38772                           ; Vector 76 : Undefined
 38773  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 38774                           
 38775                           ; Vector 77 : Undefined
 38776  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 38777                           
 38778                           ; Vector 78 : Undefined
 38779  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 38780                           
 38781                           ; Vector 79 : Undefined
 38782  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 38783                           
 38784                           ; Vector 80 : CCP4
 38785  0000A8  73A2               	dw	_Default_ISR shr (0+2)
 38786                           
 38787                           ; Vector 81 : CLC4
 38788  0000AA  73A2               	dw	_Default_ISR shr (0+2)
 38789  0000AC                     ivt0x8_undefint:
 38790                           	opt callstack 0
 38791  0000AC  00FF               	reset	
 38792                           
 38793                           	psect	text192
 38794  000000                     __ptext192:
 38795                           	opt callstack 0
 38796                           
 38797                           	psect	rparam
 38798  0000                     
 38799                           	psect	temp
 38800  000001                     btemp:
 38801                           	opt callstack 0
 38802  000001                     	ds	32
 38803  0000                     wtemp0	set	btemp
 38804  0000                     wtemp1	set	btemp+2
 38805  0000                     wtemp2	set	btemp+4
 38806  0000                     wtemp3	set	btemp+6
 38807  0000                     wtemp4	set	btemp+8
 38808  0000                     wtemp5	set	btemp+10
 38809  0000                     wtemp8	set	btemp+1
 38810  0000                     ttemp0	set	btemp
 38811  0000                     ttemp1	set	btemp+3
 38812  0000                     ttemp2	set	btemp+6
 38813  0000                     ttemp3	set	btemp+9
 38814  0000                     ttemp5	set	btemp+1
 38815  0000                     ttemp6	set	btemp+4
 38816  0000                     ttemp7	set	btemp+8
 38817  0000                     ltemp0	set	btemp
 38818  0000                     ltemp1	set	btemp+4
 38819  0000                     ltemp2	set	btemp+8
 38820  0000                     lltemp0	set	btemp
 38821  0000                     lltemp1	set	btemp+8
 38822  0000                     lltemp2	set	btemp+16
 38823  0000                     lltemp3	set	btemp+24
 38824                           tosu	equ	0x3FFF
 38825                           tosh	equ	0x3FFE
 38826                           tosl	equ	0x3FFD
 38827                           stkptr	equ	0x3FFC
 38828                           pclatu	equ	0x3FFB
 38829                           pclath	equ	0x3FFA
 38830                           pcl	equ	0x3FF9
 38831                           tblptru	equ	0x3FF8
 38832                           tblptrh	equ	0x3FF7
 38833                           tblptrl	equ	0x3FF6
 38834                           tablat	equ	0x3FF5
 38835                           prodh	equ	0x3FF4
 38836                           prodl	equ	0x3FF3
 38837                           indf0	equ	0x3FEF
 38838                           postinc0	equ	0x3FEE
 38839                           postdec0	equ	0x3FED
 38840                           preinc0	equ	0x3FEC
 38841                           plusw0	equ	0x3FEB
 38842                           fsr0h	equ	0x3FEA
 38843                           fsr0l	equ	0x3FE9
 38844                           wreg	equ	0x3FE8
 38845                           indf1	equ	0x3FE7
 38846                           postinc1	equ	0x3FE6
 38847                           postdec1	equ	0x3FE5
 38848                           preinc1	equ	0x3FE4
 38849                           plusw1	equ	0x3FE3
 38850                           fsr1h	equ	0x3FE2
 38851                           fsr1l	equ	0x3FE1
 38852                           bsr	equ	0x3FE0
 38853                           indf2	equ	0x3FDF
 38854                           postinc2	equ	0x3FDE
 38855                           postdec2	equ	0x3FDD
 38856                           preinc2	equ	0x3FDC
 38857                           plusw2	equ	0x3FDB
 38858                           fsr2h	equ	0x3FDA
 38859                           fsr2l	equ	0x3FD9
 38860                           status	equ	0x3FD8


Data Sizes:
    Strings     1327
    Constant    492
    Data        1077
    BSS         1363
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     250
    BANK2           256      0     239
    BANK3           256      0     256
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_117(CODE[1]), STR_79(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_100(CODE[3]), 
		 -> STR_95(CODE[3]), STR_91(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_100(CODE[3]), 
		 -> STR_95(CODE[3]), STR_91(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), 
		 -> STR_64(CODE[19]), STR_63(CODE[19]), STR_60(CODE[3]), STR_59(CODE[3]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[20]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[21]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[22]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), 
		 -> STR_38(CODE[29]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[26]), STR_19(CODE[26]), 
		 -> STR_18(CODE[22]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), 
		 -> STR_64(CODE[19]), STR_63(CODE[19]), STR_60(CODE[3]), STR_59(CODE[3]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[20]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[21]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[22]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), 
		 -> STR_38(CODE[29]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[26]), STR_19(CODE[26]), 
		 -> STR_18(CODE[22]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_62(CODE[9]), STR_61(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_62(CODE[9]), STR_61(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_86(CODE[4]), STR_85(CODE[4]), STR_82(CODE[4]), STR_81(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_86(CODE[4]), STR_85(CODE[4]), STR_82(CODE[4]), STR_81(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_60(CODE[3]), STR_59(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), STR_76(CODE[19]), 
		 -> STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), 
		 -> STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), STR_68(CODE[15]), 
		 -> STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), STR_64(CODE[19]), 
		 -> STR_63(CODE[19]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[20]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[21]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[22]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[29]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[26]), 
		 -> STR_19(CODE[26]), STR_18(CODE[22]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6622_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), STR_76(CODE[19]), 
		 -> STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), 
		 -> STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), STR_68(CODE[15]), 
		 -> STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), STR_64(CODE[19]), 
		 -> STR_63(CODE[19]), STR_60(CODE[3]), STR_59(CODE[3]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[20]), STR_48(CODE[20]), STR_47(CODE[21]), STR_46(CODE[21]), 
		 -> STR_45(CODE[21]), STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[22]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[29]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[17]), STR_22(CODE[16]), 
		 -> STR_21(CODE[16]), STR_20(CODE[26]), STR_19(CODE[26]), STR_18(CODE[22]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), STR_76(CODE[19]), 
		 -> STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), 
		 -> STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), STR_68(CODE[15]), 
		 -> STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), STR_64(CODE[19]), 
		 -> STR_63(CODE[19]), STR_60(CODE[3]), STR_59(CODE[3]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[20]), STR_48(CODE[20]), STR_47(CODE[21]), STR_46(CODE[21]), 
		 -> STR_45(CODE[21]), STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[22]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[29]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[17]), STR_22(CODE[16]), 
		 -> STR_21(CODE[16]), STR_20(CODE[26]), STR_19(CODE[26]), STR_18(CODE[22]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), STR_76(CODE[19]), 
		 -> STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), 
		 -> STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), STR_68(CODE[15]), 
		 -> STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), STR_64(CODE[19]), 
		 -> STR_63(CODE[19]), STR_60(CODE[3]), STR_59(CODE[3]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[20]), STR_48(CODE[20]), STR_47(CODE[21]), STR_46(CODE[21]), 
		 -> STR_45(CODE[21]), STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[22]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[29]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[17]), STR_22(CODE[16]), 
		 -> STR_21(CODE[16]), STR_20(CODE[26]), STR_19(CODE[26]), STR_18(CODE[22]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_62(CODE[9]), STR_61(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_62(CODE[9]), STR_61(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_62(CODE[9]), 
		 -> STR_61(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S5026tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    r_cal_ptr	PTR unsigned char  size(1) Largest target is 58
		 -> R(BANK0[58]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 58
		 -> r_cal(BANK3[58]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_62(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_61(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  597244
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        6     6      0     158
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   1     1      0  125353
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (2) _write_cal_data                                       5     5      0     203
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     4      1     266
                        _check_range
                     _get_raw_result
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
       _get_raw_result
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _DATAEE_WriteByte
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EF       9       93.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4AD      58        0.0%
DATA                 0      0     9BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb  7 19:38:48 2020

                     _SPI1_Exchange8bit CC0A                __end_of_set_display_info CC82  
                                     _C 06FF                                       _D 082A  
                                     _H 01C7                                       _P 01F6  
                                     _R 00AB                                       _S 0254  
                                     _T F9B3                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C94A            __end_of_start_switch_handler CBEA  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                       _update_cal_data CD06                                      _bp FABB  
                __end_of_FVR_Initialize CE6E                          _check_day_time 8EBC  
                           __CFG_LVP$ON 000000                                     l169 CD58  
                                   l807 CC18                                     l673 C802  
                                   l940 BBC6                                     _GIE 01FE97  
                                   _abs C1EA                                     _pad A2B8  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize CCEE  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack CB1C  
                     _update_adc_result C4B4                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack CAB0  
                          __CFG_ZCD$OFF 000000                                    l1002 C3F6  
                                  l2023 A5FA                                    l2040 904A  
                                  l2106 9E30                                    l2115 88E4  
                                  l2036 9052                                    l1190 C436  
                                  l2310 59AE                                    l1406 68D6  
                                  l1342 005E                                    l2231 7872  
                                  l1361 077E                                    l1371 0822  
                                  l1363 0782                         _timer3ReloadVal 009A  
                                  l1620 B296                                    l1348 0288  
                                  l3205 8CF6                                    l1381 0A26  
                                  l1382 0C4E                                    l1624 B5B0  
                                  l2185 3B62                                    l3129 540A  
                                  l2290 A314                                    l2346 2490  
                                  l2514 343C                                    l1715 A4D8  
                                  l1707 899C                                    l1387 1216  
                                  l3084 4E90                                    l3236 C22A  
                                  l3228 91E8                                    l2428 7960  
                                  l1492 BE9A                                    l1708 8AF8  
                                  l2189 3EA0                                    l3165 46D4  
                                  l1901 B088                                    l2390 1D70  
                                  l2375 18C0                                    l1639 C576  
                                  l3096 4D20                                    l3336 A07E  
                                  l2464 61E0                                    l2449 6C8A  
                                  l2810 96EE                                    l1755 CC7E  
                                  l3267 801E                                    l3603 86C4  
                                  l1845 58CA                                    l2806 ADAA  
                                  l1926 ACE6                    _ADCC_StartConversion CD72  
                                  l3631 B74C                                    l2817 97C2  
                                  l1698 C50A                                    l3618 B7D0  
                                  l2844 9660                                    l1885 B94E  
                                  l1976 8EB2                                    l8200 4774  
                                  l9002 9988                                    l8212 47F2  
                                  l8204 478A                                    l8310 4B96  
                                  l8230 48AA                                    l8206 47BA  
                                  l8224 4864                                    l9104 97C0  
                                  l9024 9A62                                    l9016 9A2E  
                                  l9040 A1D2                                    l9112 C0E8  
                                  l8402 4E70                                    l8330 4CAA  
                                  l8314 4BA0                                    l8218 4824  
                                  l9210 BF86                                    l9122 954A  
                                  l8340 4D04                                    l8332 4CD0  
                                  l8308 4B84                                    l8236 48CC  
                                  l8228 487A                                    l9044 A1EA  
                                  l9036 A1C0                                    l9140 95E8  
                                  l8350 4D54                                    l8318 4BD2  
                                  l8166 B412                                    l9062 A29E  
                                  l9054 A26A                                    l9070 AD32  
                                  l8502 91E0                                    l8280 4A9C  
                                  l8168 B434                                    l8520 B7C0  
                                  l8354 4D60                                    l8282 4AAE  
                                  l8290 4AE8                                    l8266 4A0A  
                                  l8194 4734                                    l9074 AD74  
                                  l9146 95F8                                    l9138 95CC  
                                  l9162 93C6                                    l8380 4DEC  
                                  l8364 4D88                                    l8348 4D42  
                                  l8276 4A7C                                    l9092 973C  
                                  l8604 7C30                                    l9148 960E  
                                  l8390 4E18                                    l8286 4AB8  
                                  l9086 96AC                                    l8710 5092  
                                  l8702 5024                                    l9078 ADA8  
                                  l8550 6B66                                    l8534 69F8  
                                  l9174 9498                                    l8368 4D8E  
                                  l9096 978A                                    l8704 5054  
                                  l8616 7D02                                    l8394 4E30  
                                  l8810 53DE                                    l8554 6BAE  
                                  l9194 9CA4                                    l9186 9BF8  
                                  l8396 4E40                                    l8812 53EE  
                                  l8804 53B6                                    l8724 50E6  
                                  l8716 50CC                                    l8652 8400  
                                  l8644 8354                                    l8636 82CC  
                                  l8492 9186                                    l8548 6B16  
                                  l8750 5212                                    l8742 51AC  
                                  l8734 5176                                    l8478 C21A  
                                  l8558 6C1C                                    l8744 51BE  
                                  l8752 5216                                    l8672 4EF0  
                                  l9800 7E64                                    l8592 7B96  
                                  l8496 918A                                    l8576 B73C  
                                  l8922 44E4                                    l8834 3F4A  
                                  l8682 4F46                                    l9810 7ECC  
                                  l8940 455A                                    l8916 44C8  
                                  l8852 4018                                    l8836 3F50  
                                  l8828 3F0A                                    l8764 5260  
                                  l8692 4FCE                                    l8684 4F76  
                                  l9812 7F0A                                    l8950 45CE  
                                  l8926 450A                                    l8854 401E  
                                  l8846 3FD8                                    l8838 3F80  
                                  l8782 52D6                                    l8758 5244  
                                  l8678 4F30                                    l9806 7E90  
                                  l8598 7BEA                                    l8960 463E  
                                  l8936 4554                                    l8864 4070  
                                  l8856 404E                                    l8792 534A  
                                  l8768 5286                                    l9816 7F72  
                                  l9808 7EA8                                    l8970 469C  
                                  l8954 4614                                    l8778 52D0  
                                  l8698 500E                                    l9826 800E  
                                  l9842 8536                                    l9844 85A2  
                                  l8798 5386                                    l9790 7DCE  
                                  l8990 9952                                    STR_1 FEA0  
                                  l8968 4682                                    l9792 7DF0  
                                  STR_2 FE61                                    STR_3 FFD1  
                                  STR_4 FE0D                                    STR_5 FDA4  
                                  l8996 9968                                    STR_6 FDA4  
                                  STR_7 FDA4                                    STR_8 FEF4  
                                  STR_9 FF33                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6030 4CF2                                    u7000 52C8  
                                  u6200 C6EA                                    u6130 4DDC  
                                  u6210 C6EC                                    _T6PR 003F93  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u6070 4D66                                    u6310 C1FE  
                                  _PMD2 0039C2                                    u6135 4DCC  
                                  _PMD3 0039C3                                    u6160 4DFC  
                                  u7040 5324                                    u6320 910A  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u6090 4D80                                    u7050 535E  
                                  u6410 B77E                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u7220 454C  
                                  u7060 539A                                    u6420 B780  
                                  u7045 5314                                    u6325 9100  
                                  u7150 405E                                    u6510 6B94  
                                  u6600 C74C                                    u7400 A216  
                                  u6440 6990                                    u5730 B462  
                                  u7330 99B4                                    u6370 91D8  
                                  u6450 69DC                                    u6515 6B8A  
                                  u7260 45A8                                    u6620 7B90  
                                  u7420 A28A                                    u6380 91DA  
                                  u6540 C2AE                                    u7165 41F2  
                                  u6365 91BA                                    u6445 6986  
                                  u7270 45E2                                    u6710 7D8C  
                                  u7350 9A4E                                    u6550 C2B0  
                                  u7175 42BA                                    u7280 4628  
                                  u5920 4AE0                                    u6640 7BE6  
                                  u6800 8438                                    u7520 C0E4  
                                  u7600 9616                                    u5760 C71A  
                                  u6560 B6FA                                    u7265 4598  
                                  u7185 4482                                    u5737 B454  
                                  u5930 4B00                                    u7530 952A  
                                  u6490 6ABC                                    u5770 C71C  
                                  u6570 B6FC                                    u6651 7BF0  
                                  u6475 6A16                                    u6660 7C2A  
                                  u6820 848A                                    u6740 82C6  
                                  u7460 ADA4                                    u7620 9640  
                                  u7540 953E                                    u6476 6A1C  
                                  u7700 9C24                                    u5925 4AD0  
                                  u6477 6A2A                                    u5870 4A30  
                                  u6590 C74A                                    u6670 7C5C  
                                  u7550 9578                                    u7535 9520  
                                  u6495 6AB2                                    u7631 9386  
                                  u5880 4A50                                    u6760 831C  
                                  u7640 93C0                                    u7720 9CDC  
                                  u5881 4A4A                                    u6690 7D3A  
                                  u6770 834E                                    u7650 93F2  
                                  u7555 956E                                    u7740 BF62  
                                  u6780 8380                                    u5990 4BC8  
                                  u9414 5430                                    u7750 BF82  
                                  u7670 94D0                                    u9415 542A  
                                  u6960 523E                                    u9520 5760  
                                  u5898 4A52                                    u9370 8C6A  
                                  u9514 5758                                    u9434 5460  
                                  u7690 9BF2                                    u5995 4BB8  
                                  u9515 5752                                    u9435 545A  
                                  u9605 BBD6                                    u9454 5482  
                                  u9606 BBD8                                    u9455 547C  
                                  u9800 BC56                                    u8920 85D0  
                                  u9474 5668                                    u8850 7E60  
                                  _PLLR 01CEE0                                    u9475 5662  
                                  u9580 BB86                                    u9725 C2EA  
                                  u9494 5736                                    u8870 7FB8  
                                  u9495 5730                                    u8927 85C2  
                                  u8880 7FBA                                    u8960 866A  
                                  u9825 BC8A                                    u9826 BC8C  
                                  u9818 BC58                                    u8970 8698  
                                  u9770 B80E                                    u8980 CB6A  
                                  u9588 BB88                                    u8965 8664  
                                  u9950 8D16                                    u8967 8656  
                                  u8977 868A                                    u9875 CD9E  
                                  u9980 AC72                                    u9876 CDA0  
                                  u9885 CD8E                                    u9886 CD90  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR C7DC                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0297                                    _cp_h FACB  
                                  _cp_l FAC7                                    _atoi 7DB4  
                                  _ctoa B64A                                    _main 0000  
                                  _dtoa 58D0                                    _nanf BD74  
                                  _seed 02E7                                    _prec 003C  
                                  _nout 0096                                    _spin FA43  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 7876  
                                  btemp 0001                                    _utoa 6C46  
                                  _xtoa 619C                  __end_of_check_adc_scan CE4E  
                         ___fpclassifyf 905C                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 009E               __end_of_SPI1_Exchange8bit CC28  
             __size_of_clear_hid_pflags 0066                         _TMR3_Initialize C1A2  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                          _SPI1STATUSbits 003D17  
                     _UART1_rx_vect_isr CA14                            ___param_bank 000000  
                __end_of_check_day_time 905C                      ?_UART1_rx_vect_isr 0021  
             __size_of_DATAEE_WriteByte 0068                        __end_of_INT0_ISR CDFE  
                      __end_of_INT1_ISR C47A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma B29E           __end_of_OSCILLATOR_Initialize CD5E  
                                 l10100 8B46                                   l10110 8BC0  
                                 l10120 8C22                                   l10112 8BD6  
                                 l10122 8C40                                   l10114 8BF4  
                                 l10132 8C74                                   l10124 8C56  
                                 l10108 8BB2                                   l11012 ADF2  
                                 l10142 8CD6                                   l10206 58AA  
                                 l10152 5416                                   l10224 C87A  
                                 l11114 B90C                                   l10180 5680  
                                 l10172 564E                                   l10334 8F86  
                                 l10158 5446                                   l11302 AE84  
                                 l11126 B924                                   l11134 A0EA  
                                 l10192 57FC                                   l10184 571C  
                                 l10168 556C                                   l11048 C520  
                                 l10346 8FF8                                   l11170 9AB8  
                                 l13002 1F7A                                   l13010 1FE6  
                                 l10418 C796                                   l11090 C4D4  
                                 l11306 AF00                                   l11138 A14C  
                                 l11404 C3DE                                   l11180 9AF2  
                                 l11164 9A94                                   l10364 C580  
                                 l11422 C41E                                   l11166 9AA4  
                                 l10198 5898                                   l13030 2190  
                                 l13102 78E2                                   l10456 BFC2  
                                 l11168 9AAA                                   l13200 620A  
                                 l11600 75CA                                   l11194 9BA4  
                                 l11186 9B2A                                   l11178 9AC0  
                                 l13018 20F8                                   l13122 79D2  
                                 l11602 75D0                                   l13044 222C  
                                 l13140 7AF4                                   l13132 7A8C  
                                 l10476 B812                                   l11612 760C  
                                 l11366 CBC4                                   l13046 2246  
                                 l13126 7A02                                   l13118 7996  
                                 l13230 639C                                   l13214 62A6  
                                 l13206 6246                                   l13056 22E8  
                                 l13136 7AB8                                   l13400 2E30  
                                 l11624 765E                                   l11608 7600  
                                 l14200 106C                                   l11378 C7FE  
                                 l13082 23F0                                   l13066 2338  
                                 l13162 6CD6                                   l13154 6C7A  
                                 l13410 2EDE                                   l13314 26FE  
                                 l11618 7636                                   l11554 A71C  
                                 l14202 1098                                   l14106 05E4  
                                 l14042 0260                                   l14130 0786  
                                 l12612 9F94                                   l13172 6ECC  
                                 l13420 3000                                   l13316 2738  
                                 l10940 A6CC                                   l11644 76DE  
                                 l11636 76B8                                   l11628 766A  
                                 l14132 07B4                                   l14124 0774  
                                 PRLOCK 0039EF                                   l10862 BFEE  
                                 l13254 650C                                   l13238 6422  
                                 l13430 30B6                                   l13334 28B2  
                                 l13318 274E                                   l11750 AF70  
                                 l10934 A61A                                   l11566 A7C2  
                                 l12624 B49E                                   l12800 1302  
                                 l13352 2A36                                   l13344 294A  
                                 l13512 B174                                   l14216 10EE  
                                 l14152 080E                                   l14144 07E8  
                                 l14048 02A2                                   l10866 C020  
                                 l11922 B89E                                   l10970 8D78  
                                 l11578 9352                                   l12714 B668  
                                 l13194 61D0                                   l13514 B1B6  
                                 l12650 7408                                   l11746 AF32  
                                 l11666 7838                                   l14162 0832  
                                 l11916 B88E                                   l12628 B4DC  
                                 l12716 B694                                   l12740 599E  
                                 l12812 1346                                   l12820 139C  
                                 l13444 3232                                   l13380 2CD0  
                                 l13356 2A8A                                   l13292 257C  
                                 l12644 734A                                   l13540 B2B4  
                                 l11668 7862                                   l13612 9D64  
                                 l14252 11C6                                   l14244 1190  
                                 l14228 1140                                   l10966 8D64  
                                 l10958 8D38                                   l12830 1440  
                                 l13294 25B6                                   l13542 B2C2  
                                 l13550 B2F6                                   l11598 75BA  
                                 l14246 11A8                                   l14238 117E  
                                 l14190 0EEA                                   l14174 0932  
                                 l14094 050A                                   l13640 3584  
                                 l12680 A30C                                   l12752 5A06  
                                 l12832 146C                                   l13464 33C4  
                                 l13376 2C9C                                   l13368 2BE4  
                                 l13296 25CC                                   l12664 7520  
                                 l12656 7472                                   l13536 B2A2  
                                 l10984 AC76                                   l14256 11EC  
                                 l11794 618E                                   l12690 A3A4  
                                 l12682 A31E                                   l12762 5C18  
                                 l12906 184C                                   l12834 1482  
                                 l13458 336A                                   l13474 33E8  
                                 l13538 B2AA                                   l13618 9DCA  
                                 l14266 1242                                   l14186 0E8A  
                                 l13660 37B2                                   l13644 35F0  
                                 l13636 3530                                   l12676 A2E4  
                                 l12748 59E8                                   l12924 190E  
                                 l12908 1858                                   l13468 33C8  
                                 l13492 B39E                                   l13548 B2CA  
                                 l13572 A3F0                                   l13670 3A04  
                                 l12686 A35A                                   l12782 5CCA  
                                 l12934 19D0                                   l12870 16C6  
                                 l12838 14AE                                   l10998 ACC4  
                                 l13806 66A2                                   l13680 3B72  
                                 l13656 375E                                   l13648 365C  
                                 l12696 AACE                                   l12944 1B7C  
                                 l12928 1946                                   l12864 15EC  
                                 l12848 1552                                   l12856 1580  
                                 l13666 398A                                   l12786 5D06  
                                 l12890 17D2                                   l12874 1728  
                                 l13930 8A94                                   l13684 3B94  
                                 l13676 3ACA                                   l12892 17E4  
                                 l12868 165C                                   l13916 896C  
                                 l12982 1E88                                   l12966 1D68  
                                 l12958 1C9E                                   l12886 17AA  
                                 l13838 6822                                   l13862 87D6  
                                 l13846 86E2                                   l13696 3E98  
                                 l12968 1D8A                                   l13872 88AE  
                                 l13890 BA32                                   l12994 1F10  
                                 l12898 17EA                                   l13794 662C  
                                 l13980 0048                                   l13798 6640  
                                 l13984 0066                                   l13986 0078  
                                 l13978 0040                         __end_of___aodiv 7DB4  
                          _Volts_to_SOC AE72                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4E9A  
                                 _ADCLK 003EFF                         __end_of___aomod 84AE  
                                 _ADPCH 003EF1                         __end_of___fldiv 5414  
                                 _ADREF 003EFD                         __end_of___awdiv 9A7C  
                       __end_of___flneg C112                                   STR_10 FDF8  
                                 STR_11 FB9F                                   STR_12 FC5A  
                                 STR_20 FB85                                   STR_21 FF93  
                                 STR_13 FD36                                   STR_14 FE22  
                                 STR_30 FD78                                   STR_23 FF82  
                                 STR_15 FE37                                   STR_31 FD4C  
                                 STR_16 FF09                                   STR_32 FD62  
                                 STR_24 FD20                                   STR_40 FBFF  
                                 STR_17 FECA                                   STR_25 FD0A  
                                 STR_33 FC70                                   STR_41 FC16  
                         __CFG_WDTE$OFF 000000                                   STR_50 FEDF  
                                 STR_42 FD8E                                   STR_26 FCF4  
                                 STR_34 FC86                                   STR_18 FC44  
                                 STR_43 FD8E                                   STR_51 FDB9  
                                 STR_27 FCDE                                   STR_35 FC9C  
                                 STR_19 FB6B                                   STR_44 FD8E  
                                 STR_60 FFF8                                   STR_52 FF1E  
                                 STR_28 FCC8                                   STR_36 FBE8  
                       __end_of___awmod A2B8                                   STR_53 FEB5  
                                 STR_61 FFB2                                   STR_45 FEB5  
                                 STR_29 FCB2                                   STR_37 FC2D  
                                 STR_62 FFC8                                   STR_54 FDE3  
                                 STR_46 FDCE                                   STR_70 FBB9  
                                 STR_38 FB4E                                   STR_63 FF5C  
                                 STR_55 FE8B                                   STR_47 FE4C  
                                 STR_39 FBD1                                   STR_64 FF5C  
                                 STR_56 FEB5                                   STR_72 FF6F  
                                 STR_48 FF48                                   STR_80 FACF  
                                 _ADRPT 003EEC                                   STR_57 FDB9  
                                 STR_49 FF48                                   STR_81 FFD6  
                                 STR_65 FFBE                                   STR_66 FFBE  
                                 STR_82 FFDE                                   STR_58 FE76  
                                 STR_91 FFE9                                   STR_59 FFFB  
                                 STR_67 FFA3                                   STR_68 FFA3  
                                 STR_69 FFA3                                   STR_93 FFEF  
                                 STR_85 FFDA                                   STR_86 FFE2  
                                 STR_79 FB4D                                   STR_95 FFEF  
                       __end_of___flmul 46DE                                   STR_89 FFE9  
                                 STR_98 FFEC                         __end_of___flsub C276  
                       __end_of___fltol 966A                                   u10000 ACBE  
                                 u10130 CB92                                   u10136 CB94  
                                 u12020 1C6E                                   u12200 23C4  
                                 u12120 213A                                   u12210 23C6  
                                 u13010 9E0C                         __end_of___lodiv 94F8  
                                 u11500 AB48                                   u11600 5984  
                                 u12320 7B1A                                   u12400 6F3C  
                                 u11370 9F88                                   u11450 7594  
                                 _U1P1H 003DED                                   u11507 AB3A  
                                 u11620 59D4                                   u12180 230E  
                                 u12340 6C60                                   u12500 6354  
                                 u12420 61B6                                   u13028 9E0E  
                                 _U1P2H 003DEF                                   u11390 A004  
                                 u11630 5C2C                                   u11550 5900  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u10671 CD10                                   _T3CLK 003FA9  
                                 u11560 5902                                   u11800 14FC  
                                 u12280 79F8                                   u12520 641E  
                                 u13400 03BC                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11641 5C5C  
                                 u11650 5C72                                   u11810 14FE  
                                 u11730 1330                                   u12290 7A3E  
                                 u12530 643E                                   u12450 629E  
                                 u13330 8AE4                                   _U1P3L 003DF0  
                                 u11651 5C70                                   u12371 6F0E  
                                 u11660 5C86                                   u11580 5972  
                                 u12380 6F24                                   u12460 62F2  
                                 u12620 2614                                   u13340 8AE6  
                                 u13420 0612                                   u12381 6F22  
                                 u12541 646E                                   u12525 6400  
                                 u11670 5C8A                                   u11910 181C  
                                 u12390 6F38                                   u12550 6484  
                                 u12470 62F4                                   u12630 2616  
                                 u13430 073C                                   _U2P1L 003DD4  
                                 u12551 6482                                   u11760 13EA  
                                 u12560 6498                                   u12800 2D8C  
                                 u12640 263C                                   u13440 073E  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u12297 7A30                                   u11690 5CA0  
                                 u11850 1764                                   u11770 13EC  
                                 u12570 649C                                   u12490 6352  
                                 _U2P3L 003DD8                                   u12740 299E  
                                 u12900 B37E                                   u11950 189E  
                                 u12670 2796                                   _T5CLK 003F9D  
                                 u11880 17B8                                   u12760 2B12  
                                 u12680 2798                                   u13560 10DE  
                       __end_of___lomod 9CFE                                   u12690 27BE  
                                 u13570 10F6                                   u12860 310A  
                                 u13580 1108                                   _T2HLT 003FAD  
                                 u12790 2D8A                                   u12950 9D40  
                                 u13566 10E0                                   u12880 32BA  
                                 u13576 10F8                                   _T5CON 003F9A  
                                 u13586 110A                                   u12980 9DA6  
                                 u12968 9D42                                   _T6CON 003F94  
                                 u12998 9DA8                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0081  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result C4EE                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR CE88  
               __size_of_clear_adc_scan 0006                      _current_sensor_cal 6556  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 992E  
                         __CFG_WRTC$OFF 000000                        _cal_current_zero AC2A  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR AA86  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR CCD6  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                       _DATAEE_ReadByte C664                                   _fabsf B09A  
                                 _flags 003E                    __size_of_check_range 0080  
                                 _r_cal 03C6                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay CDEE                                   _fputc 9F64  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha C2BA  
                                 _fputs B48E                         __end_of_isdigit C756  
                       __end_of_ivln2_h FAC7                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand C594                                   _width 003A  
                                 _putch CCA0            __end_of_set_ac_charger_relay CDC4  
                       __end_of_islower C6F6                         __end_of_isspace BF96  
              _INT1_SetInterruptHandler C972                         __end_of_set_dac B09A  
                       __end_of_isupper C726                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw0 003FEB  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler C8FA             _UART1_SetRxInterruptHandler C8D2  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf A5E6  
                       __end_of_tolower B7DA                         __end_of_strncmp 86CE  
                       __end_of_toupper B756               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr CA3C                __size_of_SPI1_Initialize 0016  
               __end_of_update_cal_data CD1C                         _TMR5_Initialize C15A  
                 __end_of_ringBufS_init C85A                         __initialization A8BA  
                     _UART2_rx_vect_isr CA64                            __end_of_cp_h FACF  
                          __end_of_cp_l FACB                            __end_of_atoi 8028  
                          __end_of_ctoa B6D2                            __end_of_main 1256  
                          __end_of_dtoa 5D50                            __end_of_nanf BDD6  
                          __end_of_spin FABB                            __end_of_stoa 7B34  
                          __end_of_utoa 6F86                            __end_of_xtoa 6556  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0021  
               __end_of_TMR2_Initialize CD06                   __end_of_send_lcd_data CAB0  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button BA3C  
              _TMR5_SetInterruptHandler C922                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 0078  
                     _port_data_dma_ptr CE18                      esr_check@esr_state 00A0  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize C808                         _PWM8_Initialize CD32  
                      _UART1_Initialize C112                       _UART2_tx_vect_isr CA3C  
                    _UART2_Transmit_ISR C7DC                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan BCAE                                  _ADLTHH 003EDF  
                                STR_100 FFEC                                  _ADLTHL 003EDE  
                                STR_110 FFF5                                  STR_103 FFF2  
                                STR_112 FFE6                                  STR_105 FFF2  
                                STR_114 FFE6                                  STR_108 FFF5  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue C2BA  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 AA36                                  _RB6PPS 003A0E  
                                i1l1207 9896                    _start_switch_handler CBCA  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize C1EA                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright CDD2  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                _NVMDAT 0039E3                                  u963_20 8F12  
                                u955_25 CDBE                                  u955_26 CDC0  
                  __size_of_hid_display 021C                                  u986_20 C52E  
                                u986_26 C530                                  u979_20 CDEA  
                      __end_of___xxtofl 8D00   __end_of_ADCC_DischargeSampleCapacitor CE56  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor CE4E  
              __end_of_send_lcd_cmd_dma CC46                         _TMR3_WriteTimer C3FC  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr CA8C  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize CE0E  
                      _UART2_Initialize BDD6                                  _WaitMs C55E  
                       _conv_raw_result 5414                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 966A  
                                ___fleq ACF0                       _ADCC_ThresholdISR BB10  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush B526  
                                _efgtoa 1256                                  _floorf 68DA  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00A4  
                     dac_spi_control@S2 00A3                       dac_spi_control@SB 00A1  
                     dac_spi_control@SC 00A2                      ?_ADCC_ThresholdISR 0021  
                                _memset 72B2                    __size_of_help_button 0038  
                                clear_0 A92C                                  clear_1 A940  
                                clear_2 A954                                  clear_3 A966  
                                clear_4 A972                                  clear_5 A97E  
                                clear_6 A98A               __end_of_port_data_dma_ptr CE22  
                __size_of_read_cal_data 00F4                                  _printf BD12  
                    _eaDogM_WriteString B346                 __end_of_DATAEE_ReadByte C696  
                                _strcpy AA86                               ?_ADCC_ISR 0021  
                                _strlen B3EC                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize BAA6  
                        _PMD_Initialize CD5E              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr CA64                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan BD12                            __mediumconst F8E2  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay BEEA  
                      __end_of_spinners A6DC                        __end_of_vfprintf B1F4  
                            _StartTimer C37C                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize C1A2  
                     _SYSTEM_Initialize C080                              __accesstop 0060  
               __end_of__initialization A99C                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help CE66  
                  __end_of_display_info CE5E               __end_of_CLKREF_Initialize CE18  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer C3BC                   _set_temp_display_help CDA4  
                      _clear_hid_pflags BBE2                   __end_of_TMR3_CallBack CB1C  
             __end_of_ADCC_ThresholdISR BB7A                      __size_of_calc_bsoc 0A6E  
                __end_of_ringBufS_flush B5B8                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 C47A                            __pidataBANK1 AB5A  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf B148  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                        _DATAEE_WriteByte BB7A  
                        ivt0x8_undefint 00AC                           __end_of_fputc A088  
                         __end_of_fputs B526                    _get_ac_charger_relay CDE0  
                         __end_of_srand C5C8                   __end_of_TMR5_CallBack CAF8  
                         __end_of_putch CCBA                    _set_ac_charger_relay CDB4  
               __end_of_PWM8_Initialize CD48                 __end_of_TMR6_Initialize C832  
                     _adc_int_t_handler B85A                  __end_of_PMD_Initialize CD72  
                            __end_of_bp FAC3                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack CB64             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR CE30                   TMR3_ISR@CountCallBack 0098  
                        _clear_adc_scan CE6E                      __size_of_hid_input 0138  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 008D  
             __end_of_SYSTEM_Initialize C0CA                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer C43C  
                            __pbssBANK0 0060                              __pbssBANK1 01D0  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 88EA  
                         _read_cal_data A6DC                 __end_of_conv_raw_result 58D0  
                    __size_of_esr_check 02D8                   _INT0_InterruptHandler 0093  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone C882                        _DMA1_DMADCNT_ISR CE24  
                       _convert_dac_raw A088                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma C696  
                 __end_of_wait_lcd_done CB86                __end_of_cal_current_zero ACF0  
      __end_of_TMR3_SetInterruptHandler C972                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler C922                              ??_TMR3_ISR 00E5  
               __end_of_ADCC_Initialize BB10                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler B8D8                              ??_TMR6_ISR 0026  
                     __end_of___asfladd B9CA                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9                      __size_of_set_dac_a 0034  
                    __size_of_set_dac_b 0034    __end_of_ADCC_SetADTIInterruptHandler C9EA  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler C9C2  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR CBA8  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan CE74                                 u1020_24 9B9A  
                               u1020_25 9B96                                 u1014_28 9A9A  
                               u1016_20 9AB4                                 u1016_21 9AAE  
                               u1050_28 CAC0                                 u1311_20 3ABA  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR CE00  
                               u1313_20 3B84                                 u1056_48 CB50  
                               u1048_48 CB2C                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               u1059_28 CAE4                                 _U2ERRIE 003DE2  
                               u1094_44 B8BE                                 u1318_28 CB08  
                               u1094_45 B8B8                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control B8D8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _NVMADRH 0039E1                                 _NVMADRL 0039E0  
                     __end_of_calc_bsoc 3EB4                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _NVMCON2 0039E6  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch C784  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer C3FC  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one CDA4              __end_of_set_load_relay_two CD94  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 91F2                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim CCD6                                 __Lparam 0000  
              __end_of_UART1_Initialize C15A                       __end_of_hid_input 9E36  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 7B34  
                               ___fladd 46DE                                 ___aomod 826E  
                               ___fldiv 4E9A                                 ___awdiv 992E  
                               ___flneg C0CA                                 ___awmod A1A0  
                               ___flmul 3EB4                                 ___flsub C230  
                               ___fltol 94F8                                 ___lodiv 9378  
                               ___lomod 9BBE               __end_of_UART1_Receive_ISR CBCA  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A8BA                                 __pcinit A8BA  
              __end_of_mode_lamp_bright CDE0                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand CDC4  
                               __ramtop 2000                                 __ptext0 0000  
                               __ptext1 CD06                                 __ptext2 BE36  
                               __ptext3 CBCA                                 __ptext4 C594  
                               __ptext5 C5C8                                 __ptext6 C5FC  
                               __ptext7 A088                                 __ptext8 AFE4  
                               __ptext9 B8D8                       __end_of_esr_check 7876  
                     _UART2_Receive_ISR CBEA                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize CD48  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 826E                                 _isalpha C276  
                               _isdigit C726                                 us672999 7D9E  
                               _ivln2_h FAC3                                 us683999 849C  
                               us773999 9CEE                               _T3CONbits 003FA6  
                               us768999 94E2                                 _mode_sw 00A5  
                     __end_of_lp_filter 8EBC                                 _islower C6C6  
                               _isspace BF44                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac AFE4  
              __end_of_UART2_Initialize BE36                                 _isupper C6F6  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf A4DC  
                               _tolower B756                   __size_of_display_help 0008  
                               _utctime 01F2                 __end_of_convert_dac_raw A1A0  
                 __size_of_display_info 0008                                 _strncmp 84AE  
                               _toupper B6D2                    end_of_initialization A99C  
             __size_of_convert_adc_data 00B8                      _check_enter_button B9CA  
                     __end_of_set_dac_a C630                       __end_of_set_dac_b C5FC  
                             i1u1335_20 988C     __end_of_UART2_SetRxInterruptHandler C8D2  
           _UART2_SetRxInterruptHandler C8AA                               i2u1101_48 CA28  
                             i2u1103_48 CA50                               i2u1105_48 CA78  
               check_day_time@day_delay 0041                               i2u1097_48 C7C8  
                             i2u1099_48 BB46                               i2u1099_49 BB5A  
                     __end_of_set_vterm CC64                       __end_of_vfpfcnvrt 3446  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd CE80  
             __end_of_UART2_Receive_ISR CC0A                          wdtdelay@dcount 0074  
               __end_of_dac_spi_control B952             __size_of_current_sensor_cal 0384  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0090                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc CE86                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler C94A                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler C8FA                            _display_help CE5E  
                 _TMR5_InterruptHandler 007B                            _display_info CE56  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags BC48  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler CA12  
           _ADCC_SetADIInterruptHandler C9EA                              _update_lcd A3CC  
                       _calc_model_data 5D50                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc BE36  
              __end_of_DATAEE_WriteByte BBE2                         _DMA1_Initialize BA3C  
                   __end_of_check_range B85A                              _start_bsoc CB86  
                __size_of_send_lcd_data 0024                         _SPI1_Initialize CD1C  
                 __end_of_get_vterm_ptr C784                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs C594  
          __end_of_INTERRUPT_Initialize BCAE                              _vterm_dump 9E36  
                        __end_of___flge 97CC                          __end_of___fleq ADB4  
  __end_of_INT0_DefaultInterruptHandler CE94   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler CE92              __size_of_UART1_Receive_ISR 0022  
                       _DMA2_Initialize BEEA                           __pidataBIGRAM 6F86  
                        __end_of_efgtoa 249A                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 00E2                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 6C46  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 01EA  
                        __end_of_memset 759E                          __end_of_printf BD74  
              __end_of_DMA1_DMADCNT_ISR CE2E             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack CB40                          __end_of_strcpy AB5A  
                        __end_of_strlen B48E                     start_initialization A8BA  
               __size_of_write_cal_data 00BE    __end_of_TMR5_DefaultInterruptHandler C55E  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler C526  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs C230  
                 __end_of_INT1_CallBack CAD4               __size_of_set_display_info 001E  
                           __end_of_pad A3CC                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd C37C                          _switch_handler 9A7C  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01DC                   __end_of___fpclassifyf 91F2  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR CE0E  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR CE3C  
                   __end_of_hid_display 88EA              __end_of_send_port_data_dma BFE8  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone C85A  
                         _ringBufS_init C832                             __pdataBANK0 00AB  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize C664  
              __size_of_update_cal_data 0016                 __end_of_calc_model_data 619C  
                         _send_lcd_data CA8C                     __end_of_help_button C526  
       __end_of_eaDogM_WriteStringAtPos B346                     __end_of_BVSOC_TABLE F9B3  
                             ___asfladd B952                    calc_model_data@bcror 006C  
                           __pbssBIGRAM 082A                 __end_of_DMA1_Initialize BAA6  
                  calc_model_data@bvror 0070                             __pbssCOMRAM 003A  
                           _check_range B7DA        __end_of_INT0_SetInterruptHandler C9C2  
                         __pcstackBANK0 00E5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 9BBE  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize CD32  
              _UART1_RxInterruptHandler 0087                _UART2_TxInterruptHandler 008A  
                             __end_of_T FA43                        _convert_adc_data AF2C  
                             _calc_bsoc 3446               __size_of_ringBufS_put_dma 00AA  
                          _init_display A7D0                  __end_of_DMA1_DMAOR_ISR CE46  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 007E  
                    calc_ror_data@bcror 0064                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize BF44                      calc_ror_data@bvror 0068  
                _PIN_MANAGER_Initialize B5B8                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set CE7A                           __pmediumconst F8E2  
                             __ptext100 C2BA                               __ptext101 C4EE  
                             __ptext110 BD74                               __ptext102 C85A  
                             __ptext111 CC82                               __ptext103 C37C  
                             __ptext120 46DE                               __ptext112 8AFC  
                             __ptext104 CE56                               __ptext121 3EB4  
                             __ptext113 4E9A                               __ptext105 CE5E  
                             __ptext130 C15A                               __ptext122 C080  
                             __ptext114 966A                               __ptext106 B9CA  
                             __ptext131 C922                               __ptext123 BDD6  
                             __ptext115 5D50                               __ptext107 91F2  
                             __ptext140 BC48                               __ptext132 C1A2  
                             __ptext124 C882                               __ptext116 CE80  
                             __ptext108 B09A                               __ptext141 CE66  
                             __ptext133 C94A                               __ptext125 C8AA  
                             __ptext117 CB86                               __ptext109 5414  
                             __ptext150 C9EA                               __ptext142 C630  
                             __ptext134 CCEE                               __ptext126 C112  
                             __ptext118 8D00                               __ptext151 C43C  
                             __ptext143 C972                               __ptext135 CD1C  
                             __ptext127 C8D2                               __ptext119 C230  
                             __ptext160 CDB4                               __ptext152 CAB0  
                             __ptext144 C99A                               __ptext136 CD32  
                             __ptext128 C808                               __ptext161 CDE0  
                             __ptext153 CE8E                               __ptext145 BEEA  
                             __ptext137 CD5E                               __ptext129 C8FA  
                             __ptext170 CDF0                               __ptext162 97CC  
                             __ptext154 9A7C                               __ptext146 BA3C  
                             __ptext138 B5B8                               __ptext171 CB1C  
                             __ptext163 C3FC                               __ptext155 A9A4  
                             __ptext147 CE0E                               __ptext139 CD48  
                             __ptext180 CBA8                               __ptext172 CE92  
                             __ptext164 CAF8                               __ptext156 C3BC  
                             __ptext148 BAA6                               __ptext181 CA3C  
                             __ptext173 CE88                               __ptext165 CE90  
                             __ptext157 CAD4                               __ptext149 C9C2  
                             __ptext190 CE30                               __ptext182 C7DC  
                             __ptext174 C7B0                               __ptext166 3446  
                             __ptext158 C526                               __ptext191 CE3C  
                             __ptext183 CA64                               __ptext175 B85A  
                             __ptext167 BF96                               __ptext159 8EBC  
                             __ptext192 0000                               __ptext184 CBEA  
                             __ptext176 CE94                               __ptext168 CE18  
                             __ptext185 CCBC                               __ptext177 CE96  
                             __ptext169 B952                               __ptext186 CB40  
                             __ptext178 BB10                               __ptext187 BFE8  
                             __ptext179 CA14                               __ptext188 CE00  
                             __ptext189 CE24                               _hid_input 9CFE  
                    __end_of_StartTimer C3BC                      _set_load_relay_one CD94  
                    _set_load_relay_two CD84                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR C7B0                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 01EE                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 759E  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 8028                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                __size_of_DATAEE_ReadByte 0032  
                             _lp_filter 8D00                             _hid_display 86CE  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize BC48                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR CDF0                                _INT1_ISR C43C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 027D                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                          _SPI1CON1bits 003D15                               _set_dac_a C5FC  
                             _set_dac_b C5C8                               _ring_buf1 0383  
                             _ring_buf2 0340                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack CAF8                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0048  
                             _set_vterm CC46                     __size_of_update_lcd 0110  
                           _help_button C4EE                                _TMR3_ISR 97CC  
                           _BVSOC_TABLE F8E3                                _TMR5_ISR A9A4  
                              _TMR6_ISR CCBC                               _port_data 04FF  
                   __size_of_static_soc 005A                               _vfpfcnvrt 249A  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack CAD4                              _ADCON0bits 003EF8  
                    __end_of_check_help 8AFC                               _start_lcd CE7A  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 001E  
                         _TMR6_CallBack CB40                          _write_cal_data ADB4  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc CE80                        _set_display_info CC64  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A8CE  
                             copy_data1 A8F4                               copy_data2 A916  
              _INT0_SetInterruptHandler C99A                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler C8AA             _UART2_SetTxInterruptHandler C882  
                          _uart1RxCount 00A9                            _uart2RxCount 00A6  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000              __end_of_current_sensor_cal 68DA  
              __size_of_conv_raw_result 04BC                           _wait_lcd_done CB64  
                          _send_lcd_cmd C33C                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler CE96  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch C7B0                 __size_of_check_day_time 01A0  
                __end_of_write_cal_data AE72                   __end_of_DMA1_DMAA_ISR CE3A  
                    ___fpclassifyf@F463 0060    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 8AFC  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0072  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand CDD2  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                      __size_of_set_dac 00B6                                __ptext10 A6DC  
                              __ptext11 C664                                __ptext20 AE72  
                              __ptext12 C696                                __ptext21 86CE  
                              __ptext13 A7D0                                __ptext30 ADB4  
                              __ptext22 9CFE                                __ptext14 CA8C  
                              __ptext31 BB7A                                __ptext23 759E  
                              __ptext15 C2FC                                __ptext40 AF2C  
                              __ptext32 BCAE                                __ptext24 C4B4  
                              __ptext16 C33C                                __ptext41 BBE2  
                              __ptext33 CD72                                __ptext25 CE46  
                              __ptext17 CC0A                                __ptext50 CB64  
                              __ptext42 88EA                                __ptext34 CE4E  
                              __ptext26 CD84                                __ptext18 C832  
                              __ptext51 BE90                                __ptext43 9E36  
                              __ptext35 A5E6                                __ptext27 CD94  
                              __ptext19 8028                                __ptext60 249A  
                              __ptext52 C036                                __ptext44 A4DC  
                              __ptext36 C784                                __ptext28 CDC4  
                              __ptext61 619C                                __ptext53 B346  
                              __ptext45 C756                                __ptext37 CE6E  
                              __ptext29 6556                                __ptext70 1256  
                              __ptext62 B6D2                                __ptext54 CE74  
                              __ptext46 C55E                                __ptext38 AC2A  
                              __ptext71 B756                                __ptext63 C6C6  
                              __ptext55 CE7A                                __ptext47 A3CC  
                              __ptext39 B7DA                                __ptext80 992E  
                              __ptext72 C6F6                                __ptext64 C276  
                              __ptext56 B526                                __ptext48 B29E  
                              __ptext81 58D0                                __ptext73 AA86  
                              __ptext65 6C46                                __ptext57 72B2  
                              __ptext49 CC28                                __ptext90 CCA0  
                              __ptext82 C1EA                                __ptext74 68DA  
                              __ptext66 9BBE                                __ptext58 BD12  
                              __ptext91 B1F4                                __ptext83 826E  
                              __ptext75 905C                                __ptext67 9378  
                              __ptext59 B148                                __ptext92 7DB4  
                              __ptext84 7B34                                __ptext76 94F8  
                              __ptext68 84AE                                __ptext93 BF44  
                              __ptext85 B64A                                __ptext77 C0CA  
                              __ptext69 7876                                __ptext94 C726  
                              __ptext86 A2B8                                __ptext78 ACF0  
                              __ptext95 CC46                                __ptext87 B3EC  
                              __ptext79 A1A0                                __ptext96 CDA4  
                              __ptext88 B48E                                __ptext97 CC64  
                              __ptext89 9F64                                __ptext98 CCD6  
                              __ptext99 CDD2                        __size_of_isupper 0030  
                 __end_of_read_cal_data A7D0                                us1223999 7888  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1154999 58EA                                us1235999 6CAC  
                              us1244999 621C                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma B1F4  
                  __end_of_Volts_to_SOC AF2C                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 1256  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma C6C6  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0084                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion CD84  
                              _spi_link 01D0                                _wdtdelay BE90  
            __end_of_UART2_Transmit_ISR C808                                _spinners A5E6  
                              _vfprintf B148                __end_of_convert_adc_data AFE4  
            __end_of_PWM8_LoadDutyValue C2FC    __end_of_TMR3_DefaultInterruptHandler CE92  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler CE90  
  __end_of_INT1_DefaultInterruptHandler CE90   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler CE8E                      _send_port_data_dma BF96  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AA                          _get_raw_result CC82  
                           _NVMCON1bits 0039E5                             _uart2TxHead 00A8  
                           _uart2RxTail 00A7                               spinners@s 01E4  
                           _uart2TxTail 0046               __size_of_cal_current_zero 00C6  
                          _wait_lcd_set CE74                      _EXT_INT_Initialize C630  
  __end_of_TMR6_DefaultInterruptHandler C036   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler BFE8                       _send_lcd_data_dma C036  
  __end_of_ADCC_DefaultInterruptHandler CE96   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler CE94                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long C2FC  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help CDB4  
                 __end_of_calc_ror_data 9378                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString B3EC                   __end_of_mode_lamp_dim CCEE  
               __end_of_adc_int_handler CE98                __size_of_convert_dac_raw 0118  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd A4DC                  _uart2TxBufferRemaining 0045  
                    __end_of_static_soc BE90                      __end_of_start_bsoc CBA8  
                        _FVR_Initialize CE66                  __end_of_get_raw_result CCA0  
                      _send_lcd_cmd_dma CC28                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 009C        __end_of_INT1_SetInterruptHandler C99A  
             __size_of_UART1_Initialize 0048                __size_of_dac_spi_control 007A  
             __end_of_send_lcd_data_dma C080                        ??_DMA1_DMAOR_ISR 0027  
             __end_of_send_lcd_cmd_long C33C                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR CE8E          __end_of_PIN_MANAGER_Initialize B64A  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 9F64  
               _eaDogM_WriteStringAtPos B29E                           _get_vterm_ptr C756  
                        _check_adc_scan CE46               __size_of_UART2_Initialize 0060  
